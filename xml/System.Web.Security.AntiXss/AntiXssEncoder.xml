<Type Name="AntiXssEncoder" FullName="System.Web.Security.AntiXss.AntiXssEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="073683fb9100514b419c6e511cae8570b8386d1a" />
    <Meta Name="ms.sourcegitcommit" Value="01f28caab7b3f23878dd07b402a8dd48b9478c8c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="39140783" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AntiXssEncoder : System.Web.Util.HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AntiXssEncoder extends System.Web.Util.HttpEncoder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class AntiXssEncoder&#xA;Inherits HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AntiXssEncoder : System::Web::Util::HttpEncoder" />
  <TypeSignature Language="F#" Value="type AntiXssEncoder = class&#xA;    inherit HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Util.HttpEncoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Codiert eine Zeichenfolge für die Verwendung in HTML-, XML-, CSS- und URL-Zeichenfolgen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Web.Security.AntiXss.AntiXssEncoder> Klasse überschreiben die <xref:System.Web.Util.HttpEncoder> -Klasse, die verwendet wird, wird standardmäßig zum Codieren und Decodieren von Zeichenfolgen, die Methoden der Klassen wie z. B. <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, und <xref:System.Net.HttpResponseHeader>.  
  
 In der <xref:System.Web.Security.AntiXss.AntiXssEncoder> -Klasse, werden alle Zeichen, die in der Liste nicht gefunden werden durch codiert die <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A> und <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A> Methoden.  
  
 Ersetzen der <xref:System.Web.Util.HttpEncoder> -Klasse mit der <xref:System.Web.Security.AntiXss.AntiXssEncoder> Klasse, registrieren Sie ihn der `encoderType` -Attribut des HttpRuntime-Elements in der Datei "Web.config" wie im folgenden Beispiel gezeigt:  
  
```  
<httpRuntime encoderType="System.Web.Security.AntiXss.AntiXssEncoder" />  
```  
  
 Eine Liste der sicheren Standardzeichen für verschiedene Codierungsmethoden finden Sie in den Hinweisen für die <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A>, und <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A> Methoden. Die sichere Standardliste kann geändert werden, mithilfe der <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> Methode.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AntiXssEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AntiXssEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssEncode">
      <MemberSignature Language="C#" Value="public static string CssEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CssEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CssEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CssEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member CssEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.CssEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in CSS (Cascading Stylesheets).</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind.  
  
> [!NOTE]
>  Setzen von Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie ihn ein cascading Stylesheet hinzufügen.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert\000028\000027XSS\000020Attack\000021\000027\000029\00003B`|  
|`user@contoso.com`|`user\000040contoso\00002Ecom`|  
|`Anti-Cross Site Scripting Namespace`|`Anti\00002DCross\000020Site\000020Scripting\000020Namespace`|  
  
 Die CSS-Escapesequenz besteht aus einem umgekehrten Schrägstrich (\\) gefolgt von bis zu sechs Hexadezimalziffern, die einen Zeichencode, aus dem ISO 10646-Standard darstellen. (Der standard ISO 10646 ist Unicode entspricht.) Beliebigen anderen Zeichens als eine hexadezimale Ziffer beendet die Escape-Sequenz. Wenn ein Zeichen, das die Escape-Sequenz folgt auch eine gültige Hexadezimalziffer ist, muss es sechs Ziffern in der Escapesequenz enthalten oder verwenden ein Leerzeichen, um die Escape-Sequenz zu beenden. Z. B. `\000020` kennzeichnet ein Leerzeichen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> enthält einen ungültigen Zeichen, das ein Unicode-Wert ist.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> enthielt einen hohen Ersatzzeichen-Codepunkt, der nicht von einem niedrigen Ersatzzeichen-Codepunkt gefolgt wurde.  Oder:  <paramref name="input" /> enthielt einen niedrigen Ersatzzeichen-Codepunkt, dem kein hohen Ersatzzeichen-Codepunkt voranging.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Die zu codierende Zeichenfolge.</param>
        <param name="output">Der Textwriter, der verwendet werden soll, um die Zeichenfolge auszugeben.</param>
        <summary>Codiert und gibt die angegebene Zeichenfolge für die Verwendung in einem HTML-Attribut aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `&#DECIMAL;` Notation.  
  
> [!NOTE]
>  Doppelte Anführungszeichen ("") oder einfache Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie es zu einer Seite hinzufügen.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Lateinische Großbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lateinische Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ausrufezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Nummernzeichen sein, hash|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollarzeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Prozentzeichen (%)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Sternchen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Pluszeichen (+)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Komma|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Doppelpunkt|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Durch Semikolons|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Gleichheitszeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Fragezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Kommerzielle at-Zeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Eckige Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|\|umgekehrter Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Einfügemarke|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Gravis-Akzent|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Geschweifte Klammern, geschweifte Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertikale Linie|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|von 0x00A1 - 0x00AC|Sonderzeichen zwischen von 0x00A1 (161 decimal) und 0x00AC (172 decimal).|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Sonderzeichen zwischen 0x00AE (174 decimal) und 0x00FF (255 dezimal).|  
|[Latin Extended-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0 x 0100 - 0x017F|Latin erweiterte Zeichen zwischen 0 x 0100 (256 decimal) und 0x017F (383 decimal).|  
|[Lateinisch-Extended-B](https://www.unicode.org/charts/PDF/U0180.pdf)|von 0 x 0180 - 0x024F|Latin Sonderzeichen zwischen von 0 x 0180 (384 decimal) und 0x024F (591 decimal).|  
|[IPA-Erweiterungen](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA-Erweiterung Zeichen zwischen 0x0250 (592 decimal) und 0x02AF (decimal 687).|  
|[Zusatzzeichen für Lautschrift](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Abstand Modifizierer Buchstaben zwischen 0x02B0 (688 decimal) und 0x02FF (767 decimal).|  
Kombinieren von diakritischen Zeichen])http://www.unicode.org/charts/PDF/U0300.pdf)|0 x 0300 - 0x036F|Das Kombinieren von diakritisches Zeichen zwischen 0 x 0300 (768 decimal) "und" 0x036F (879 decimal).|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Rufen Sie zum Anpassen der Liste der <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> enthält einen ungültigen Zeichen, das ein Unicode-Wert ist.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> enthielt einen hohen Ersatzzeichen-Codepunkt, der nicht von einem niedrigen Ersatzzeichen-Codepunkt gefolgt wurde.  Oder:  <paramref name="input" /> enthielt einen niedrigen Ersatzzeichen-Codepunkt, dem kein hohen Ersatzzeichen-Codepunkt voranging.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codiert die angegebene Zeichenfolge zur Verwendung als Text im HTML-Markup.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string input, bool useNamedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string input, bool useNamedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (input As String, useNamedEntities As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ input, bool useNamedEntities);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * bool -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode (input, useNamedEntities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="useNamedEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <param name="useNamedEntities">
          <see langword="true" />, um benannte HTML 4.0-Entitäten für bestimmte Zeichencodierungen zu verwenden; <see langword="false" />, um die Codierung nur mit der <c>&amp;#DECIMAL;</c>-Notation durchzuführen.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung als Text im HTML-Markup und gibt optional an, ob HTML 4.0 benannte Entitäten verwendet.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `&#DECIMAL;` Notation.  
  
> [!NOTE]
>  Doppelte Anführungszeichen ("") oder einfache Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie es zu einer Seite hinzufügen.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Lateinische Großbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lateinische Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|(Leerzeichen)|Leerzeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ausrufezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Nummernzeichen sein, hash|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollarzeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Prozentzeichen (%)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Sternchen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Pluszeichen (+)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Komma|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Doppelpunkt|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Durch Semikolons|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Gleichheitszeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Fragezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|@|At-Zeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Eckige Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|\|umgekehrter Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Einfügemarke|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Gravis-Akzent|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Geschweifte Klammern, geschweifte Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertikale Linie|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|von 0x00A1 - 0x00AC|Sonderzeichen zwischen von 0x00A1 (161 decimal) und 0x00AC (172 decimal). Zeichen in diesem Bereich werden codiert. wenn `useNamedEntities` ist `true`.|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Sonderzeichen zwischen 0x00AE (174 decimal) und 0x00FF (255 dezimal). Zeichen in diesem Bereich werden codiert. wenn `useNamedEntities` ist `true`.|  
|[Latin Extended-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0 x 0100 - 0x017F|Latin erweiterte Zeichen zwischen 0 x 0100 (256 decimal) und 0x017F (383 decimal).|  
|[Erweiterte Lateinisch-B](https://www.unicode.org/charts/PDF/U0180.pdf)|von 0 x 0180 - 0x024F|Latin Sonderzeichen zwischen von 0 x 0180 (384 decimal) und 0x024F (591 decimal).|  
|[IPA-Erweiterungen](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA-Erweiterung Zeichen zwischen 0x0250 (592 decimal) und 0x02AF (decimal 687).|  
|[Zusatzzeichen für Lautschrift](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Abstand Modifizierer Buchstaben zwischen 0x02B0 (688 decimal) und 0x02FF (767 decimal).|  
Kombinieren von diakritischen Zeichen])http://www.unicode.org/charts/PDF/U0300.pdf)|0 x 0300 - 0x036F|Das Kombinieren von diakritisches Zeichen zwischen 0 x 0300 (768 decimal) "und" 0x036F (879 decimal).|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Rufen Sie zum Anpassen der Liste der <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> enthält einen ungültigen Zeichen, das ein Unicode-Wert ist.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> enthielt einen hohen Ersatzzeichen-Codepunkt, der nicht von einem niedrigen Ersatzzeichen-Codepunkt gefolgt wurde.  Oder:  <paramref name="input" /> enthielt einen niedrigen Ersatzzeichen-Codepunkt, dem kein hohen Ersatzzeichen-Codepunkt voranging.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Die zu codierende Zeichenfolge.</param>
        <param name="output">Der Textwriter, der verwendet werden soll, um die Zeichenfolge auszugeben.</param>
        <summary>Codiert die angegebene Zeichenfolge zur Verwendung als Text im HTML-Markup und gibt die Zeichenfolge unter Verwendung des angegebenen Textwriter aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `&#DECIMAL;` Notation.  
  
> [!NOTE]
>  Doppelte Anführungszeichen ("") oder einfache Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie es zu einer Seite hinzufügen.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Lateinische Großbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lateinische Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|(Leerzeichen)|Leerzeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ausrufezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Nummernzeichen sein, hash|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollarzeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Prozentzeichen (%)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Sternchen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Pluszeichen (+)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Komma|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Doppelpunkt|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Durch Semikolons|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Gleichheitszeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Fragezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|@|At-Zeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Eckige Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|\|umgekehrter Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Einfügemarke|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Gravis-Akzent|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Geschweifte Klammern, geschweifte Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertikale Linie|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|von 0x00A1 - 0x00AC|Sonderzeichen zwischen von 0x00A1 (161 decimal) und 0x00AC (172 decimal). Zeichen in diesem Bereich werden codiert. wenn `useNamedEntities` ist `true`.|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Sonderzeichen zwischen 0x00AE (174 decimal) und 0x00FF (255 dezimal). Zeichen in diesem Bereich werden codiert. wenn `useNamedEntities` ist `true`.|  
|[Latin Extended-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0 x 0100 - 0x017F|Latin erweiterte Zeichen zwischen 0 x 0100 (256 decimal) und 0x017F (383 decimal).|  
|[Erweiterte Lateinisch-B](https://www.unicode.org/charts/PDF/U0180.pdf)|von 0 x 0180 - 0x024F|Latin Sonderzeichen zwischen von 0 x 0180 (384 decimal) und 0x024F (591 decimal).|  
|[IPA-Erweiterungen](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA-Erweiterung Zeichen zwischen 0x0250 (592 decimal) und 0x02AF (decimal 687).|  
|[Zusatzzeichen für Lautschrift](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Abstand Modifizierer Buchstaben zwischen 0x02B0 (688 decimal) und 0x02FF (767 decimal).|  
Kombinieren von diakritischen Zeichen])http://www.unicode.org/charts/PDF/U0300.pdf)|0 x 0300 - 0x036F|Das Kombinieren von diakritisches Zeichen zwischen 0 x 0300 (768 decimal) "und" 0x036F (879 decimal).|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Rufen Sie zum Anpassen der Liste der <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> enthält einen ungültigen Zeichen, das ein Unicode-Wert ist.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> enthielt einen hohen Ersatzzeichen-Codepunkt, der nicht von einem niedrigen Ersatzzeichen-Codepunkt gefolgt wurde.  Oder:  <paramref name="input" /> enthielt einen niedrigen Ersatzzeichen-Codepunkt, dem kein hohen Ersatzzeichen-Codepunkt voranging.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlFormUrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in Formularübermittlung, deren MIME-Typ "application/x-www-form-urlencoded" ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in Formularübermittlung, deren MIME-Typ "application/x-www-form-urlencoded" ist.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `%SINGLE_BYTE_HEX` Notation.  
  
> [!NOTE]
>  Doppelte Anführungszeichen ("") oder einfache Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie es zu einer Seite hinzufügen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user@contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <param name="codePage">Die Codepage, die zur Codierung der <c>input</c>-Zeichenfolge verwendet werden soll.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in Formularübermittlung, deren MIME-Typ "application/x-www-form-urlencoded" lautet, indem die angegebene Codepage verwendet wird.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `%SINGLE_BYTE_HEX` Notation.  
  
> [!NOTE]
>  Doppelte Anführungszeichen ("") oder einfache Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie es zu einer Seite hinzufügen.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <param name="inputEncoding">Der Eingabecodiertyp.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Formularübermittlung, deren MIME-Typ "application/x-www-form-urlencoded" ist, indem er den angegebenen Zeichencodierungstyp verwendet.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `%SINGLE_BYTE_HEX` Notation.  
  
> [!NOTE]
>  Doppelte Anführungszeichen ("") oder einfache Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie es zu einer Seite hinzufügen.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsSafe">
      <MemberSignature Language="C#" Value="public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkAsSafe(valuetype System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, valuetype System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, valuetype System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, valuetype System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, valuetype System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkAsSafe(System::Web::Security::AntiXss::LowerCodeCharts lowerCodeCharts, System::Web::Security::AntiXss::LowerMidCodeCharts lowerMidCodeCharts, System::Web::Security::AntiXss::MidCodeCharts midCodeCharts, System::Web::Security::AntiXss::UpperMidCodeCharts upperMidCodeCharts, System::Web::Security::AntiXss::UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="F#" Value="static member MarkAsSafe : System.Web.Security.AntiXss.LowerCodeCharts * System.Web.Security.AntiXss.LowerMidCodeCharts * System.Web.Security.AntiXss.MidCodeCharts * System.Web.Security.AntiXss.UpperMidCodeCharts * System.Web.Security.AntiXss.UpperCodeCharts -&gt; unit" Usage="System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe (lowerCodeCharts, lowerMidCodeCharts, midCodeCharts, upperMidCodeCharts, upperCodeCharts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerCodeCharts" Type="System.Web.Security.AntiXss.LowerCodeCharts" />
        <Parameter Name="lowerMidCodeCharts" Type="System.Web.Security.AntiXss.LowerMidCodeCharts" />
        <Parameter Name="midCodeCharts" Type="System.Web.Security.AntiXss.MidCodeCharts" />
        <Parameter Name="upperMidCodeCharts" Type="System.Web.Security.AntiXss.UpperMidCodeCharts" />
        <Parameter Name="upperCodeCharts" Type="System.Web.Security.AntiXss.UpperCodeCharts" />
      </Parameters>
      <Docs>
        <param name="lowerCodeCharts">Die Kombination aus unteren Zeichentabellen, die als sicher zu kennzeichnen sind.</param>
        <param name="lowerMidCodeCharts">Die Kombination aus Zeichentabellen des unteren Mittelfelds, die als sicher zu kennzeichnen sind.</param>
        <param name="midCodeCharts">Die Kombination aus mittleren Zeichentabellen, die als sicher zu kennzeichnen sind.</param>
        <param name="upperMidCodeCharts">Die Kombination aus Zeichentabellen des oberen Mittelfelds, die als sicher zu kennzeichnen sind.</param>
        <param name="upperCodeCharts">Die Kombination aus oberen Zeichentabellen, die als sicher zu kennzeichnen sind.</param>
        <summary>Markiert Zeichen angegebener Unicode-Codeübersichten als sicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Liste die sichere wirkt sich auf alle HTML-XML, CSS und URL-Codierung-Methoden.  
  
 Bis auf einige Ausnahmen Unicode-codeübersichten geschriebenen Sprachen nicht direkt entsprechen. Zum Hinzufügen der Unterstützung für eine bestimmte Sprache oder eine Reihe von Sprachen häufig erfordert mehrere codeübersichten als sicher markiert.  
  
 Verwenden Sie die folgende Syntax zum Hinzufügen der Unterstützung für die japanische Sprache trotzdem weiterhin auf Englisch zu ermöglichen:  
  
```  
  
MarkAsSafe(  
            LowerCodeCharts.Default,  
            LowerMidCodeCharts.HangulJamo,  
            MidCodeCharts.None,  
            UpperMidCodeCharts.CjkRadicalsSupplement |   
            UpperMidCodeCharts.CjkSymbolsAndPunctuation |   
            UpperMidCodeCharts.Hiragana |   
            UpperMidCodeCharts.Katakana |   
            UpperMidCodeCharts.KatakanaPhoneticExtensions |   
            UpperMidCodeCharts.LatinExtendedD |  
            UpperMidCodeCharts.CjkUnifiedIdeographs,  
            UpperCodeCharts.None);  
```  
  
> [!NOTE]
>  Die <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> -Methode muss aufgerufen werden, der `Application_Start` -Methode in der Datei "Global.asax".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />-Methode wurde außerhalb der <see langword="Application_Start" />-Methode in der Datei Global.asax aufgerufen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codiert Zeichenfolgen und Bytearrays für die Verwendung in einer URL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in einer URL.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `%SINGLE_BYTE_HEX` Notation.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <param name="codePage">Die Codepage, die zur Codierung der <c>input</c>-Zeichenfolge verwendet werden soll.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in einem URL unter Verwendung der angegebenen Codepage.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `%SINGLE_BYTE_HEX` Notation.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <param name="inputEncoding">Der Eingabecodiertyp.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in einem URL unter Verwendung des angegebenen Zeichencodierungstyps.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `%SINGLE_BYTE_HEX` Notation.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal override byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="antiXssEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">Das zu codierende Bytearray.</param>
        <param name="offset">Der Index des ersten zu codierenden Bytes.</param>
        <param name="count">Die Anzahl von zu codierenden Bytes.</param>
        <summary>Codiert das angegebene Bytearray zur Verwendung in einer URL, beginnend beim angegebenen Offset im Bytearray und codiert die angegebene Anzahl von Bytes.</summary>
        <returns>Das codierte Bytearray.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `%SINGLE_BYTE_HEX` Notation.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal override string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.UrlPathEncode : string -&gt; string" Usage="antiXssEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Die zu codierende Zeichenfolge.</param>
        <summary>Codiert Pfadzeichenfolgen für die Verwendung in einer URL.</summary>
        <returns>Die URL, die den codierten Pfad enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `%SINGLE_BYTE_HEX` Notation.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Großbuchstaben alphabetisch|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Nummernzeichen sein, hash|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Prozentzeichen (%)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|\|umgekehrter Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Geschweifte Klammern, geschweifte Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertikale Linie|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  
|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  
|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 Diese Methode wird nur den Pfad einer URL codiert. Diese Methode wird das Schema nicht codieren (z. B. `http:`, `ftp:`, oder `file:`), die Autorität (z. B. `www.northwind.com` oder `www.contoso.com:8080`), oder die Abfrage oder Fragment (z. B. `?v=s978dfs9#x=103`). Wenn kein Schema oder die Autorität in der Zeichenfolge vorhanden ist, wird angenommen, dass die Zeichenfolge ein relativer Pfad sein, und der Pfad wird codiert. In der folgenden URL, die nur die Teilzeichenfolge `/default.htm` codiert ist:  
  
 `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string XmlAttributeEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlAttributeEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlAttributeEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlAttributeEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlAttributeEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in XML-Attributen.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `&#DECIMAL;` Notation.  
  
> [!NOTE]
>  Doppelte Anführungszeichen ("") oder einfache Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie es zu einer Seite hinzufügen.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Lateinische Großbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lateinische Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ausrufezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Nummernzeichen sein, hash|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollarzeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Prozentzeichen (%)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Sternchen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Pluszeichen (+)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Komma|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Punkt, Punkt, vollständige Beendigung Beenden|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Doppelpunkt|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Durch Semikolons|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Gleichheitszeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Fragezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Kommerzielle at-Zeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Eckige Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|\|umgekehrter Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Einfügemarke|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Gravis-Akzent|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Geschweifte Klammern, geschweifte Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertikale Linie|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|von 0x00A1 - 0x00AC|Sonderzeichen zwischen von 0x00A1 (161 decimal) und 0x00AC (172 decimal).|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Sonderzeichen zwischen 0x00AE (174 decimal) und 0x00FF (255 dezimal).|  
|[Latin Extended-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0 x 0100 - 0x017F|Latin erweiterte Zeichen zwischen 0 x 0100 (256 decimal) und 0x017F (383 decimal).|  
|[Erweiterte Lateinisch-B](https://www.unicode.org/charts/PDF/U0180.pdf)|von 0 x 0180 - 0x024F|Latin Sonderzeichen zwischen von 0 x 0180 (384 decimal) und 0x024F (591 decimal).|  
|[IPA-Erweiterungen](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA-Erweiterung Zeichen zwischen 0x0250 (592 decimal) und 0x02AF (decimal 687).|  
|[Zusatzzeichen für Lautschrift](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Abstand Modifizierer Buchstaben zwischen 0x02B0 (688 decimal) und 0x02FF (767 decimal).|  
Kombinieren von diakritischen Zeichen])http://www.unicode.org/charts/PDF/U0300.pdf)|0 x 0300 - 0x036F|Das Kombinieren von diakritisches Zeichen zwischen 0 x 0300 (768 decimal) "und" 0x036F (879 decimal).|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&apos;XSS&#32;Attack!&apos;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS&#32;Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Rufen Sie zum Anpassen der Liste der <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> enthält einen ungültigen Zeichen, das ein Unicode-Wert ist.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> enthielt einen hohen Ersatzzeichen-Codepunkt, der nicht von einem niedrigen Ersatzzeichen-Codepunkt gefolgt wurde.  Oder:  <paramref name="input" /> enthielt einen niedrigen Ersatzzeichen-Codepunkt, dem kein hohen Ersatzzeichen-Codepunkt voranging.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlEncode">
      <MemberSignature Language="C#" Value="public static string XmlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Die zu codierende Zeichenfolge.</param>
        <summary>Codiert die angegebene Zeichenfolge für die Verwendung in XML-Attributen.</summary>
        <returns>Die codierte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode codiert alle Zeichen mit Ausnahme derjenigen, die in der Liste sicherer sind. Zeichen codiert werden, indem `&#DECIMAL;` Notation.  
  
> [!NOTE]
>  Doppelte Anführungszeichen ("") oder einfache Anführungszeichen ("") für die resultierende Zeichenfolge, bevor Sie es zu einer Seite hinzufügen.  
  
 Die folgende Tabelle enthält die standardmäßige sichere Zeichen.  
  
|Unicode-Codeübersicht|Zeichen|Beschreibung |  
|------------------------|--------------------|-----------------|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|A BIS Z|Lateinische Großbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lateinische Kleinbuchstaben|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Zahlen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|(Leerzeichen)|Leerzeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ausrufezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Nummernzeichen sein, hash|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollarzeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Prozentzeichen (%)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Sternchen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Pluszeichen (+)|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Komma|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Bindestrich minus|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|sein.|Zeitraum|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Doppelpunkt|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Durch Semikolons|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Gleichheitszeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Fragezeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|@|At-Zeichen|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Eckige Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|\|umgekehrter Schrägstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Einfügemarke|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Unterstrich|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Gravis-Akzent|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Geschweifte Klammern, geschweifte Klammern|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertikale Linie|  
|[C0-Steuerelemente und Lateinisch (Standard)](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|von 0x00A1 - 0x00AC|Sonderzeichen zwischen von 0x00A1 (161 decimal) und 0x00AC (172 decimal). Zeichen in diesem Bereich werden codiert. wenn `useNamedEntities` ist `true`.|  
|[C1 Steuerelemente und Lateinisch-1, Ergänzung](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Sonderzeichen zwischen 0x00AE (174 decimal) und 0x00FF (255 dezimal). Zeichen in diesem Bereich werden codiert. wenn `useNamedEntities` ist `true`.|  
|[Latin Extended-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0 x 0100 - 0x017F|Latin erweiterte Zeichen zwischen 0 x 0100 (256 decimal) und 0x017F (383 decimal).|  
|[Erweiterte Lateinisch-B](https://www.unicode.org/charts/PDF/U0180.pdf)|von 0 x 0180 - 0x024F|Latin Sonderzeichen zwischen von 0 x 0180 (384 decimal) und 0x024F (591 decimal).|  
|[IPA-Erweiterungen](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA-Erweiterung Zeichen zwischen 0x0250 (592 decimal) und 0x02AF (decimal 687).|  
|[Zusatzzeichen für Lautschrift](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Abstand Modifizierer Buchstaben zwischen 0x02B0 (688 decimal) und 0x02FF (767 decimal).|  
Kombinieren von diakritischen Zeichen])http://www.unicode.org/charts/PDF/U0300.pdf)|0 x 0300 - 0x036F|Das Kombinieren von diakritisches Zeichen zwischen 0 x 0300 (768 decimal) "und" 0x036F (879 decimal).|  
  
 Die folgende Tabelle enthält Beispiele für Eingaben und den entsprechenden codierten Ausgaben.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Rufen Sie zum Anpassen der Liste der <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> enthält einen ungültigen Zeichen, das ein Unicode-Wert ist.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> enthielt einen hohen Ersatzzeichen-Codepunkt, der nicht von einem niedrigen Ersatzzeichen-Codepunkt gefolgt wurde.  Oder:  <paramref name="input" /> enthielt einen niedrigen Ersatzzeichen-Codepunkt, dem kein hohen Ersatzzeichen-Codepunkt voranging.</exception>
      </Docs>
    </Member>
  </Members>
</Type>