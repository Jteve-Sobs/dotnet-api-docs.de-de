<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cba7b052d23ea26052d338f2170b905e32fcee38" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52918512" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type ImageAttributes = class&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enthält Informationen darüber, wie Bitmap- und Metadateifarben während des Renderns bearbeitet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet mehrere Farbanpassungsmatrizen-Einstellungen, einschließlich der Farbanpassungsmatrizen Matrizen, Anpassungsmatrix für Graustufenwerte Matrizen, Gammakorrektur Werte, Farbkarte Tabellen und Color-Schwellenwerte gelten sollen. Farben können während des Renderns, wurde korrigiert, abgedunkelt, aufgehellt und entfernt werden. Um solche Manipulationen anzuwenden, initialisieren eine <xref:System.Drawing.Imaging.ImageAttributes> Objekt, und übergeben Sie den Pfad der <xref:System.Drawing.Imaging.ImageAttributes> Objekt (zusammen mit dem Pfad des ein <xref:System.Drawing.Image>) auf die <xref:System.Drawing.Graphics.DrawImage%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Bild, das alle eine Farbe ("0.2", "0.0", "0,4", "1.0") ist und die Rotkomponente verdoppelt die Komponenten roten, grünen und blauen 0,2 hinzugefügt  
  
 Die folgende Abbildung zeigt das ursprüngliche Bild auf der linken Seite und die transformierten auf der rechten Seite an.  
  
 ![Farben](~/add/media/colortrans1.png "Farben")  
  
 Der Code im folgenden Beispiel verwendet die folgenden Schritte aus, um die über erneutes Einfärben auszuführen:  
  
1.  Initialisiert eine <xref:System.Drawing.Imaging.ColorMatrix> Objekt.  
  
2.  Erstellen einer <xref:System.Drawing.Imaging.ImageAttributes> Objekt, und übergeben die <xref:System.Drawing.Imaging.ColorMatrix> -Objekt an die <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> -Methode der der <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
3.  Übergeben der <xref:System.Drawing.Imaging.ImageAttributes> -Objekt an die <xref:System.Drawing.Graphics.DrawImage%2A> Methode eine <xref:System.Drawing.Graphics> Objekt.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/44df4556-a433-49c0-ac0f-9a12063a5860">Gewusst wie: Verwenden einer Farbmatrix zum Transformieren einer Farbe</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Neueinfärben von Bildern</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearBrushRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearBrushRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Pinsel-Farbumwandlungstabelle dieses <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einer Farbumwandlungstabelle für die Standardkategorie einer anderen Farbumwandlungstabelle für die Bitmapkategorie und immer noch eine andere Farbumwandlungstabelle für die Pinselkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Wenn Sie keine anpassungseinstellungen für die Pinselkategorie angeben, gelten die standardmäßigen Einstellungen beispielsweise für die Pinselkategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie über eine Standard-Umwandlungstabelle angeben, die Rot zu Grün konvertiert, und geben Sie den Standardwert Gamma 1.8. Wenn Sie beim Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> -Methode, die die Standardumwandlungstabelle (Rot zu Grün) und der Gamma-Standardwert (1.8) nicht auf den Pinsel angewendet. Wenn Sie später Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> -Methode, die Pinselkategorie nicht auf die Standard-Umwandlungstabelle zurückgesetzt; stattdessen müssen die Pinselkategorie keine neuzuordnung-Tabelle. Auf ähnliche Weise wird die Pinselkategorie nicht auf den Standardwert für die Gamma zurückgesetzt. Stattdessen müssen die Pinselkategorie keine Gammawert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht den Colorkey (Transparenzbereich).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : unit -&gt; unit" Usage="imageAttributes.ClearColorKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den Colorkey (Transparenzbereich) für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbschlüssel für die Standardkategorie einer anderen Farbschlüssel für die Bitmapkategorie und immer noch eine andere Farbe-Schlüssel für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorKey type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Colorkey gelöscht ist.</param>
        <summary>Löscht den Colorkey (Transparenzbereich) für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbschlüssel für die Standardkategorie einer anderen Farbschlüssel für die Bitmapkategorie und immer noch eine andere Farbe-Schlüssel für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie einen Farbe Standardschlüssel angeben, der eine beliebige Farbe mit einer roten-Komponente von 200 bis 255 transparent ist, und geben Sie den Standardwert Gamma 1.8. Setzen Sie den Farbschlüssel des der Kategorie "Stift" durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> -Methode, den Standardschlüssel von Farbe und den Standardgammawert gelten nicht für Stifte. Wenn Sie später den Farbschlüssel für den Stift durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> -Methode, der Kategorie "Stift" nicht auf den Farbschlüssel für den Standardwert zurückgesetzt; stattdessen müssen die Pen-Kategorie die Hintergrundfarbe. Auf ähnliche Weise wird der Kategorie "Stift" nicht auf den Standardwert für die Gamma zurückgesetzt. Stattdessen wird der Kategorie "Stift" keinen Gammawert aufweisen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Farbanpassungsmatrix.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : unit -&gt; unit" Usage="imageAttributes.ClearColorMatrix " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Farbanpassungsmatrix für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbanpassungsmatrix für die Standardkategorie einer anderen Farbanpassungsmatrix für die Bitmapkategorie und immer noch eine andere Farbanpassungsmatrix für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Z. B. Wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten dann die Standardeinstellungen für die Pen-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorMatrix type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbanpassungsmatrix gelöscht ist.</param>
        <summary>Löscht die Farbanpassungsmatrix für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbanpassungsmatrix für die Standardkategorie einer anderen Farbanpassungsmatrix für die Bitmapkategorie und immer noch eine andere Farbanpassungsmatrix für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Z. B. Wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten dann die Standardeinstellungen für die Pen-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Farbanpassungsmatrix und einen Gammawert für die Standardkategorie angeben. Setzen Sie ein Farbanpassungsmatrix für die Pen-Kategorie durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> -Methode, die Farbanpassungsmatrix Standard gelten nicht für Stifte. Wenn Sie später die Farbanpassungsmatrix Stift durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> -Methode, der Kategorie "Stift" nicht auf die Standardeinstellung für Graustufenwerte zurückgesetzt; stattdessen hat der Kategorie "Stift" keine Graustufenwerte. Auf ähnliche Weise wird der Kategorie "Stift" nicht auf den Standardwert für die Gamma zurückgesetzt. Stattdessen wird der Kategorie "Stift" keinen Gammawert aufweisen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deaktiviert die Gammakorrektur.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : unit -&gt; unit" Usage="imageAttributes.ClearGamma " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deaktiviert die Gammakorrektur für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Gammawert für die Standardkategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gammawert für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearGamma type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Gammakorrektur deaktiviert ist.</param>
        <summary>Deaktiviert die Gammakorrektur für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Gammawert für die Standardkategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gammawert für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Z. B. Wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten dann die Standardeinstellungen für die Pen-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie einen Gammawert und eine Farbanpassungsmatrix für die Standardkategorie angeben. Setzen Sie den Gammawert für die Pen-Kategorie durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> -Methode der Standardwert für die Gamma gelten nicht für Stifte. Wenn Sie später den Stiftgammawert durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> -Methode, der Kategorie "Stift" nicht auf den Standard-Gammawert zurückgesetzt; stattdessen wird der Kategorie "Stift" wurden keine Gamma-Werte. Auf ähnliche Weise wird der Kategorie "Stift" nicht auf die Farbanpassungsmatrix Standard zurückgesetzt. Stattdessen müssen der Kategorie "Stift" keine Farbanpassungsmatrix.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die <see langword="NoOp" />-Einstellung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : unit -&gt; unit" Usage="imageAttributes.ClearNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die <see langword="NoOp" />-Einstellung für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Gammawert für die Standardkategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gammawert für die Pen-Kategorie angeben.  
  
 Sie können die Anpassung für die Standardkategorie deaktivieren, durch den Aufruf der <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Methode. Sie können später Anpassung für die Standardkategorie reaktivieren, durch den Aufruf der <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> Methode. Klicken Sie dann die Farbkorrektur gibt zurück, vor dem Aufruf von was <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die <see langword="NoOp" />-Einstellung gelöscht ist.</param>
        <summary>Löscht die <see langword="NoOp" />-Einstellung für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Gammawert für die Standardkategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gammawert für die Pen-Kategorie angeben.  
  
 Sie können die Anpassung von für eine bestimmte Kategorie deaktivieren, durch den Aufruf der <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Methode. Sie können später Anpassung für diese Kategorie reaktivieren, durch den Aufruf der <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> Methode. Klicken Sie dann die Farbkorrektur gibt zurück, vor dem Aufruf von was <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die CMYK-Ausgabekanaleinstellung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die CMYK-Ausgabekanaleinstellung für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Ausgabekanal für die Standardkategorie und eine andere Ausgabe-Kanal für die Bitmapkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen der Bitmap-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannel type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Ausgabekanaleinstellung gelöscht ist.</param>
        <summary>Löscht die CMYK-Ausgabekanaleinstellung für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Ausgabekanal für die Standardkategorie und eine andere Ausgabe-Kanal für die Bitmapkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen der Bitmap-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie einem Ausgabekanal und eine für Graustufenwerte für die Standardkategorie angeben. Setzen Sie den Ausgabekanal für die Bitmapkategorie durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> -Methode, ist der Ausgabekanal gelten nicht für Bitmaps. Wenn Sie später die Bitmap Ausgabekanal durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> -Methode, der Kategorie "Bitmap" nicht auf den Standard-Ausgabekanal zurückgesetzt; stattdessen hat der Kategorie "Bitmap" keine Einstellung des Ausgabekanal. Auf ähnliche Weise wird die Bitmapkategorie nicht auf die Farbanpassungsmatrix Standard zurückgesetzt. Stattdessen müssen die Bitmapkategorie keine Farbanpassungsmatrix.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Einstellung des Ausgabekanal-Farbprofils.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Einstellung des Ausgabekanal-Farbprofils für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie ein Profil des Ausgabe-Kanal für die Standardkategorie und eine andere Ausgabe-Channel-Profil für die Bitmapkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen der Bitmap-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Ausgabekanal-Profileinstellung gelöscht ist.</param>
        <summary>Löscht die Einstellung des Ausgabekanal-Farbprofils für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie ein Profil des Ausgabe-Kanal für die Standardkategorie und eine andere Ausgabe-Channel-Profil für die Bitmapkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen der Bitmap-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie ein Profil der Ausgabe-Kanal und eine für Graustufenwerte für die Standardkategorie angeben. Setzen Sie das Profil des Ausgabe-Kanal für die Bitmapkategorie durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> -Methode, ist der Ausgabe Kanalprofil gelten nicht für Bitmaps. Wenn Sie später die Bitmap Ausgabe Kanalprofil durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> -Methode, der Kategorie "Bitmap" nicht auf das Standardprofil des Ausgabe-Kanal zurückgesetzt; stattdessen hat der Kategorie "Bitmap" keine Einstellung des Ausgabekanal. Auf ähnliche Weise wird die Bitmapkategorie nicht auf die Farbanpassungsmatrix Standard zurückgesetzt. Stattdessen müssen die Bitmapkategorie keine Farbanpassungsmatrix.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Farbumwandlungstabelle.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Farbumwandlungstabelle für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. eine neuzuordnung-Tabelle für die Standardkategorie, eine andere Umwandlungstabelle für die Bitmapkategorie und immer noch eine andere Umwandlungstabelle für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearRemapTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Umwandlungstabelle gelöscht ist.</param>
        <summary>Löscht die Farbumwandlungstabelle für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. eine neuzuordnung-Tabelle für die Standardkategorie, eine andere Umwandlungstabelle für die Bitmapkategorie und immer noch eine andere Umwandlungstabelle für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Z. B. Wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten dann die Standardeinstellungen für die Pen-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine neuzuordnung-Tabelle und einen Gammawert für die Standardkategorie angeben. Wenn Sie die Umwandlungstabelle für die Pen-Kategorie durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> -Methode, die Standard-Umwandlungstabelle gelten nicht für Stifte. Wenn Sie später die Stiftumwandlungstabelle durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> -Methode, der Kategorie "Stift" nicht auf die Standard-Umwandlungstabelle zurückgesetzt; stattdessen hat der Kategorie "Stift" keine neuzuordnung-Tabelle. Auf ähnliche Weise wird der Kategorie "Stift" nicht auf den Standardwert für die Gamma zurückgesetzt. Stattdessen wird der Kategorie "Stift" keinen Gammawert aufweisen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht den Schwellenwert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : unit -&gt; unit" Usage="imageAttributes.ClearThreshold " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den Schwellenwert für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schwellenwert ist ein Wert zwischen 0 und 1, der eine umstellungspunkt für jede Farbkomponente angibt. Nehmen wir beispielsweise an der Schwellenwert auf 0,7 festgelegt ist, und nehmen Sie einer Farbe, deren Rot rendern, Grün- und Blauanteil Komponenten sind 230, 50 und 220 bzw. Die Rotkomponente (230) ist größer als 0,7 x 255, damit die Rotkomponente 255 (vollständige Intensität) geändert werden. Die Grünkomponente (50) ist kleiner als 0,7 x 255, damit die Grünkomponente in 0 geändert wird. Die blaue Komponente (220) ist größer als 0,7 x 255, damit die blaue Komponente bis 255 geändert werden.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie einen Schwellenwert für die Standardkategorie unterschiedlichen Schwellenwerten für die Bitmapkategorie und weiterhin unterschiedlichen Schwellenwerten für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearThreshold type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Schwellenwert gelöscht ist.</param>
        <summary>Löscht den Schwellenwert für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schwellenwert ist ein Wert zwischen 0 und 1, der eine umstellungspunkt für jede Farbkomponente angibt. Nehmen wir beispielsweise an der Schwellenwert auf 0,7 festgelegt ist, und nehmen Sie einer Farbe, deren Rot rendern, Grün- und Blauanteil Komponenten sind 230, 50 und 220 bzw. Die Rotkomponente (230) ist größer als 0.7x55, damit die Rotkomponente 255 (vollständige Intensität) geändert werden. Die Grünkomponente (50) ist kleiner als 0,7 x 255, damit die Grünkomponente in 0 geändert wird. Die blaue Komponente (220) ist größer als 0,7 x 255, damit die blaue Komponente bis 255 geändert werden.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie einen Schwellenwert für die Standardkategorie unterschiedlichen Schwellenwerten für die Bitmapkategorie und weiterhin unterschiedlichen Schwellenwerten für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie einen Schwellenwert und einen Gammawert für die Standardkategorie angeben. Wenn Sie den Schwellenwert für die Pen-Kategorie durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> -Methode der Standardschwellenwert gelten nicht für Stifte. Wenn Sie später den Stiftschwellenwert durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> -Methode, der Kategorie "Stift" nicht auf den Standardschwellenwert zurückgesetzt; stattdessen hat der Kategorie "Stift" kann kein Schwellenwert. Auf ähnliche Weise wird der Kategorie "Stift" nicht auf den Standardwert für die Gamma zurückgesetzt. Stattdessen wird der Kategorie "Stift" keinen Gammawert aufweisen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="imageAttributes.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine genaue Kopie dieses <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekts.</summary>
        <returns>Das von dieser Klasse erstellte <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekt, umgewandelt in ein Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="imageAttributes.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von diesem <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekt verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> auf, wenn Sie <xref:System.Drawing.Imaging.ImageAttributes> nicht mehr benötigen. Die <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>-Methode bewirkt, dass <xref:System.Drawing.Imaging.ImageAttributes> nicht mehr verwendet werden kann. Nach dem Aufruf <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>, Sie müssen alle Verweise auf Freigeben der <xref:System.Drawing.Imaging.ImageAttributes> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Drawing.Imaging.ImageAttributes> belegt wurde. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Drawing.Imaging.ImageAttributes> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Drawing.Imaging.ImageAttributes>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="imageAttributes.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.GetAdjustedPalette : System.Drawing.Imaging.ColorPalette * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.GetAdjustedPalette (palette, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">Eine <see cref="T:System.Drawing.Imaging.ColorPalette" />, die bei der Eingabe die anzupassende Palette und bei der Ausgabe die angepasste Palette enthält.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, deren Anpassungseinstellungen auf die Palette angewendet werden.</param>
        <summary>Passt die Farben in einer Palette entsprechend den Anpassungseinstellungen einer angegebenen Kategorie an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einer Farbumwandlungstabelle für die Standardkategorie einer anderen Farbumwandlungstabelle für die Bitmapkategorie und immer noch eine andere Farbumwandlungstabelle für die Pen-Kategorie angeben.  
  
 Beim Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> -Methode können Sie die Anpassungskategorie, mit dem Anpassen der Palettenfarben, angeben. Angenommen, Sie übergeben <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> auf die <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> -Methode, die Anpassung, die Einstellungen von der Kategorie "Bitmap" verwendet, um die Palettenfarben anzupassen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetBrushRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetBrushRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Ein Array von <see cref="T:System.Drawing.Imaging.ColorMap" />-Objekten.</param>
        <summary>Legt die Farbumwandlungstabelle für die Pinselkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einer Farbumwandlungstabelle ist ein Array von <xref:System.Drawing.Imaging.ColorMap> Strukturen. Jede <xref:System.Drawing.Imaging.ColorMap> Struktur verfügt über zwei <xref:System.Drawing.Color> Objekte: eines, das eine alte Farbe und die entsprechende neue Farbe angeben. Beim Rendern, wird jede Farbe, die einer der alten Farben in der Umwandlungstabelle entspricht in die entsprechende neue Farbe geändert.  
  
 Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> Methode hat dieselbe Wirkung wie das übergeben <xref:System.Drawing.Imaging.ColorAdjustType.Brush> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> Methode. Die angegebene Umwandlungstabelle gilt für Elemente in Metadateien, die mit einem Pinsel gefüllt werden.  
  
 Diese Methode ist nur für Metadateien verwendet werden soll.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
1.  Erstellt ein Einzelelement- <xref:System.Drawing.Imaging.ColorMap> Array, das die alte Farbe Rot und Grün als die neue Farbe enthält.  
  
2.  Übergibt dieses Array an einer neu erstellten <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den Colorkey (Transparenzbereich) fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">Der niedrige Colorkeywert.</param>
        <param name="colorHigh">Der hohe Colorkeywert.</param>
        <summary>Legt den Colorkey für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode legt die hohen und niedrigen Colorkey-Werte, damit ein Bereich von Farben transparent ausgeführt werden kann. Jede Farbe, die jede der drei Komponenten (Rot, Grün, Blau) zwischen den entsprechenden Komponenten der Farbe von hohen und niedrigen Schlüssel erfolgt transparent.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbschlüssel für die Standardkategorie einer anderen Farbschlüssel für die Bitmapkategorie und immer noch eine andere Farbe-Schlüssel für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">Der niedrige Colorkeywert.</param>
        <param name="colorHigh">Der hohe Colorkeywert.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Colorkey festgelegt ist.</param>
        <summary>Legt den Colorkey (Transparenzbereich) für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode legt die hohen und niedrigen Colorkey-Werte, damit ein Bereich von Farben transparent ausgeführt werden kann. Jede Farbe, die jede der drei Komponenten (Rot, Grün, Blau) zwischen den entsprechenden Komponenten der Farbe von hohen und niedrigen Schlüssel erfolgt transparent.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbschlüssel für die Standardkategorie einer anderen Farbschlüssel für die Bitmapkategorie und immer noch eine andere Farbe-Schlüssel für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Auflistung von anpassungseinstellungen für die Standardkategorie angeben. Setzen Sie den Farbschlüssel für die Pen-Kategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Pen> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> -Methode, wird keines der Standardeinstellungen für die Anpassung vor anwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
1.  Öffnet eine <xref:System.Drawing.Image> , die mithilfe der Datei Circle.bmp verwendet, und klicken Sie auf dem Bildschirm gezeichnet.  
  
2.  Erstellt eine <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und legt dessen Colorkey durch Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> Methode.  
  
3.  Zeichnet das Bild mit den Farbschlüssel des auf dem Bildschirm die <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Farbanpassungsmatrix und die Anpassungsmatrix für Graustufenwerte fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="grayMatrix">Die Anpassungsmatrix für Graustufenwerte.</param>
        <summary>Legt die Farbanpassungsmatrix und die Anpassungsmatrix für Graustufenwerte für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie die Anpassungsmatrizen für die Standardkategorie, andere Anpassungsmatrizen für die Bitmapkategorie und wiederum andere Anpassungsmatrizen für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> Methode entspricht dem Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> -Methode und übergeben <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> für die `flags` Parameter. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Gibt an, dass alle Farben (einschließlich Grau) von der Farbanpassungsmatrix, nicht die Anpassungsmatrix für Graustufenwerte angepasst werden. Aus diesem Grund hat die Anpassungsmatrix für Graustufenwerte übergeben an diese Methode keine Auswirkungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="grayMatrix">Die Anpassungsmatrix für Graustufenwerte.</param>
        <param name="flags">Ein Element von <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />, das angibt, welcher Bild- und Farbtyp von den Farbanpassungsmatrizen und den Anpassungsmatrizen für Graustufenwerte betroffen ist.</param>
        <summary>Legt die Farbanpassungsmatrix und die Anpassungsmatrix für Graustufenwerte für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie die Anpassungsmatrizen für die Standardkategorie, andere Anpassungsmatrizen für die Bitmapkategorie und wiederum andere Anpassungsmatrizen für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="grayMatrix">Die Anpassungsmatrix für Graustufenwerte.</param>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />, das angibt, welcher Bild- und Farbtyp von den Farbanpassungsmatrizen und den Anpassungsmatrizen für Graustufenwerte betroffen ist.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbanpassungsmatrizen und die Anpassungsmatrizen für Graustufenwerte festgelegt werden.</param>
        <summary>Legt die Farbanpassungsmatrix und die Anpassungsmatrix für Graustufenwerte für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie die Anpassungsmatrizen für die Standardkategorie, andere Anpassungsmatrizen für die Bitmapkategorie und wiederum andere Anpassungsmatrizen für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Auflistung von anpassungseinstellungen für die Standardkategorie angeben. Setzen Sie die Matrizen Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte für die Pen-Kategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Pen> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> -Methode, wird keines der Standardeinstellungen für die Anpassung vor anwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Farbanpassungsmatrix fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrix newColorMatrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <summary>Legt die Farbanpassungsmatrix für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbanpassungsmatrix für die Standardkategorie einer anderen Farbanpassungsmatrix für die Bitmapkategorie und immer noch eine andere Farbanpassungsmatrix für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> Methode entspricht dem Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> -Methode und übergeben <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> für die `flags` Parameter. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Gibt an, dass alle Farben, die (einschließlich Grau) von der Farbanpassungsmatrix angepasst werden  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
1.  Erstellt ein Rechteck-Image, die alle die Farbe, die Werte auf 128 festgelegt, wodurch ein Rechteck, das mit einer mittleren grau Volltonfarbe gefüllt wird. Der Code zeichnet dann das Rechteck auf dem Bildschirm.  
  
2.  Erstellt eine <xref:System.Drawing.Imaging.ColorMatrix> und legt fest seine <xref:System.Drawing.Drawing2D.Matrix> Speicherort, um 1,75, unterstreicht der Rotanteil des Bilds.  
  
3.  Erstellt eine <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und ruft die <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> Methode.  
  
4.  Zeichnet das Bild (ein zweites Rechteck) auf dem Bildschirm, wobei die <xref:System.Drawing.Imaging.ColorMatrix> nur festgelegt, in der <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
 Beachten Sie, dass das zweite Rechteck die Farbe Rot hervorgehoben.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Neueinfärben von Bildern</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="flags">Ein Element von <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />, das angibt, welcher Bild- und Farbtyp von der Farbanpassungsmatrix betroffen ist.</param>
        <summary>Legt die Farbanpassungsmatrix für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbanpassungsmatrix für die Standardkategorie einer anderen Farbanpassungsmatrix für die Bitmapkategorie und immer noch eine andere Farbanpassungsmatrix für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> Methode.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f28c54fd-9c80-4f6f-b242-55f7ffcda84b">Neueinfärben von Bildern</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />, das angibt, welcher Bild- und Farbtyp von der Farbanpassungsmatrix betroffen ist.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbanpassungsmatrix festgelegt ist.</param>
        <summary>Legt die Farbanpassungsmatrix für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbanpassungsmatrix für die Standardkategorie einer anderen Farbanpassungsmatrix für die Bitmapkategorie und immer noch eine andere Farbanpassungsmatrix für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Auflistung von anpassungseinstellungen für die Standardkategorie angeben. Setzen Sie die Farbanpassungsmatrix für die Pen-Kategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Pen> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> -Methode, wird keines der Standardeinstellungen für die Anpassung vor anwenden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RotateColors` aus des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignisbehandlungsmethode, übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den Gammawert fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single -&gt; unit" Usage="imageAttributes.SetGamma gamma" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">Der Gammakorrekturwert.</param>
        <summary>Legt den Gammawert für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typische Werte für die `gamma` Parameter werden von 1.0 auf 2.2; jedoch können Werte zwischen 0.1 und 5.0 als unter bestimmten Umständen nützlich erweisen.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Gammawert für die Standardkategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gammawert für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Gammawerte außerhalb des üblichen Bereichs möglicherweise nützlich für alte CRT-Monitore oder für Monitore, die in ungewöhnlichen Lichtverhältnissen, z. B. gewerblichen Umgebungen oder Fenster angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Darüber hinaus müssen Sie die Image-Dateipfad in einen Pfad und einen Image an, die auf Ihrem System gültig zu ändern. Der Code führt die folgenden Aktionen aus:  
  
1.  Öffnet eine <xref:System.Drawing.Image> , die mithilfe der Datei Camera.jpg und zeichnet es auf dem Bildschirm mit dem Standardwert für die Gammakorrektur.  
  
2.  Erstellt eine <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und legt den Gammawert auf 2.2 fest, durch den Aufruf der <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> Methode.  
  
3.  Zeichnet das Bild (eine zweite Kamera) auf dem Bildschirm mit den Gammawert, legen Sie einfach die <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetGamma (gamma, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">Der Gammakorrekturwert.</param>
        <param name="type">Ein Element der <see cref="T:System.Drawing.Imaging.ColorAdjustType" />-Enumeration, das die Kategorie angibt, für die der Gammawert festgelegt ist.</param>
        <summary>Legt den Gammawert für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typische Werte für die `gamma` Parameter werden von 1.0 auf 2.2; jedoch können Werte zwischen 0.1 und 5.0 als unter bestimmten Umständen nützlich erweisen.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Gammawert für die Standardkategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gammawert für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Auflistung von anpassungseinstellungen für die Standardkategorie angeben. Setzen Sie den Gammawert für die Pen-Kategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Pen> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> -Methode, wird keines der Standardeinstellungen für die Anpassung vor anwenden.  
  
 Gammawerte außerhalb des üblichen Bereichs möglicherweise nützlich für alte CRT-Monitore oder für Monitore, die in ungewöhnlichen Lichtverhältnissen, z. B. gewerblichen Umgebungen oder Fenster angezeigt werden.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deaktiviert die Farbanpassung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : unit -&gt; unit" Usage="imageAttributes.SetNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deaktiviert die Farbanpassung für die Standardkategorie. Durch Aufruf der <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />-Methode können Sie die vor dem Aufruf der <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />-Methode gültigen Farbanpassungseinstellungen erneut aktivieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Gammawert für die Standardkategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gammawert für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
1.  Öffnet eine <xref:System.Drawing.Image> , das die Datei Camera.jpg verwendet.  
  
2.  Legt den Gammawert von der <xref:System.Drawing.Imaging.ImageAttributes> Objekt 0,25.  
  
3.  Zeichnet das Bild auf dem Bildschirm an.  
  
4.  Aufruf der <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>-Methode.  
  
5.  Zeichnet das Bild (eine zweite Kamera) auf dem Bildschirm an; aber da die <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Methode aufgerufen wurde, wird das Gamma auf einen Wert von 1,0 und das Bild wird gezeichnet auf dem Bildschirm mit der Gamma-Standardeinstellung.  
  
 Beachten Sie, dass das Bild auf der linken Seite sehr (Gamma 0,25) verwaschen ist und das Bild auf der rechten Seite mehr Kontrast (Gammawert 1,0).  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbkorrektur deaktiviert ist.</param>
        <summary>Deaktiviert die Farbanpassung für eine angegebene Kategorie. Durch Aufruf der <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />-Methode können Sie die vor dem Aufruf der <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />-Methode gültigen Farbanpassungseinstellungen erneut aktivieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Gammawert für die Standardkategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gammawert für die Pen-Kategorie angeben.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den CMYK-Ausgabekanal fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag -&gt; unit" Usage="imageAttributes.SetOutputChannel flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">Ein Element von <see cref="T:System.Drawing.Imaging.ColorChannelFlag" />, das den Ausgabekanal angibt.</param>
        <summary>Legt den CMYK-Ausgabekanal für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Methode zum Konvertieren eines Bilds in einen CMYK-Farbraum und die Intensitäten eines der CMYK-Farbkanäle untersuchen. Nehmen wir beispielsweise an, die Sie erstellen eine <xref:System.Drawing.Imaging.ImageAttributes> Objekt, und legen Sie auf die Bitmap-Ausgabekanal <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Wenn Sie den Pfad, der übergeben <xref:System.Drawing.Imaging.ImageAttributes> -Objekt an die <xref:System.Drawing.Graphics.DrawImage%2A> Methode, die die Cyan-Komponente der einzelnen Pixel wird berechnet, und jedes Pixel in das gerenderte Bild ist eine farbschattierung an, der die Intensität der seinen Zyan Kanal angibt. Auf ähnliche Weise können Sie Bilder rendern, die angeben, die Intensitäten Kanäle, Magenta, Gelb und Schwarz.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Ausgabekanal für die Standardkategorie und eine andere Ausgabe-Kanal für die Bitmapkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen der Bitmap-Kategorie.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie folgenden Code in eine Windows Form. Behandeln Sie das <xref:System.Windows.Forms.Control.Paint> Ereignis, und rufen `ShowOutputChannels`, und übergeben Sie `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannel (flags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">Ein Element von <see cref="T:System.Drawing.Imaging.ColorChannelFlag" />, das den Ausgabekanal angibt.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Ausgabekanal festgelegt ist.</param>
        <summary>Legt den CMYK-Ausgabekanal für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Methode zum Konvertieren eines Bilds in einen CMYK-Farbraum und die Intensitäten eines der CMYK-Farbkanäle untersuchen. Nehmen wir beispielsweise an, die Sie erstellen eine <xref:System.Drawing.Imaging.ImageAttributes> Objekt, und legen Sie auf die Bitmap-Ausgabekanal <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Wenn Sie den Pfad, der übergeben <xref:System.Drawing.Imaging.ImageAttributes> -Objekt an die <xref:System.Drawing.Graphics.DrawImage%2A> Methode, die die Cyan-Komponente der einzelnen Pixel wird berechnet, und jedes Pixel in das gerenderte Bild ist eine farbschattierung an, der die Intensität der seinen Zyan Kanal angibt. Auf ähnliche Weise können Sie Bilder rendern, die angeben, die Intensitäten Kanäle, Magenta, Gelb und Schwarz.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Sie können z. B. einem Ausgabekanal für die Standardkategorie und eine andere Ausgabe-Kanal für die Bitmapkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen der Bitmap-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Auflistung von anpassungseinstellungen für die Standardkategorie angeben. Setzen Sie den Ausgabekanal für die Bitmapkategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> -Methode, wird keines der Standardeinstellungen für die Anpassung auf Bitmaps angewendet.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie folgenden Code in eine Windows Form. Behandeln Sie das <xref:System.Windows.Forms.Control.Paint> Ereignis, und rufen `ShowOutputChannels`, und übergeben Sie `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Ausgabekanal-Farbprofildatei fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile colorProfileFilename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Der Pfadname einer Farbprofildatei. Wenn sich die Farbprofildatei im Verzeichnis %SystemRoot%\System32\Spool\Drivers\Color befindet, kann dieser Parameter der Dateiname sein. Andernfalls muss es sich bei diesem Parameter um den voll gekennzeichneten Pfadnamen handeln.</param>
        <summary>Legt die Ausgabekanal-Farbprofildatei für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> und <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Farbkanäle für Methoden zum Konvertieren eines Bilds in einen CMYK (Cyan-Magenta-Gelb-Black)-Farbraum und die Intensitäten eines der CMYK-untersuchen. Nehmen wir beispielsweise an, dass Sie Code schreiben, die die folgenden Schritte ausführt:  
  
1.  Erstellen Sie eine <xref:System.Drawing.Image>.  
  
2.  Erstellen Sie eine <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
3.  Übergeben Sie <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> -Methode der der <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
4.  Der Pfadname einer Farbprofildatei zum Übergeben der <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Methode der <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
5.  Übergeben Sie die Pfade der <xref:System.Drawing.Image> und <xref:System.Drawing.Imaging.ImageAttributes> Objekte die <xref:System.Drawing.Graphics.DrawImage%2A> Methode.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] wird die Farbprofildatei verwenden, um die Cyan-Komponente der einzelnen Pixel im Bild zu berechnen, und jedes Pixel in das gerenderte Bild werden einer Farbe an, der die Intensität der seinen Zyan Kanal angibt.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Ausgabe-Ausgabekanal-Farbprofildatei für die Standardkategorie und eine andere Ausgabe-Farbprofildatei für die Bitmapkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen der Bitmap-Kategorie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile (colorProfileFilename, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Der Pfadname einer Farbprofildatei. Wenn sich die Farbprofildatei im Verzeichnis %SystemRoot%\System32\Spool\Drivers\Color befindet, kann dieser Parameter der Dateiname sein. Andernfalls muss es sich bei diesem Parameter um den voll gekennzeichneten Pfadnamen handeln.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Ausgabekanal-Farbprofildatei festgelegt ist.</param>
        <summary>Legt die Ausgabekanal-Farbprofildatei für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> und <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Farbkanäle für Methoden zum Konvertieren eines Bilds in einen CMYK (Cyan-Magenta-Gelb-Black)-Farbraum und die Intensitäten eines der CMYK-untersuchen. Nehmen wir beispielsweise an, dass Sie Code schreiben, die die folgenden Schritte ausführt:  
  
1.  Erstellen Sie eine <xref:System.Drawing.Image>.  
  
2.  Erstellen Sie eine <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
3.  Übergeben Sie <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> -Methode der der <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
4.  Der Pfadname einer Farbprofildatei zum Übergeben der <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Methode der <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
5.  Übergeben Sie die Pfade der <xref:System.Drawing.Image> und <xref:System.Drawing.Imaging.ImageAttributes> Objekte die <xref:System.Drawing.Graphics.DrawImage%2A> Methode.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] wird die Farbprofildatei verwenden, um die Cyan-Komponente der einzelnen Pixel im Bild zu berechnen, und jedes Pixel in das gerenderte Bild werden einer Farbe an, der die Intensität der seinen Zyan Kanal angibt.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Ausgabe-Ausgabekanal-Farbprofildatei für die Standardkategorie und eine andere Ausgabe-Farbprofildatei für die Bitmapkategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen der Bitmap-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Auflistung von anpassungseinstellungen für die Standardkategorie angeben. Setzen Sie die Ausgabe-Farbprofildatei für die Bitmapkategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> -Methode, wird keines der Standardeinstellungen für die Anpassung auf Bitmaps angewendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Farbumwandlungstabelle fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Ein Array von Farbpaaren vom Typ <see cref="T:System.Drawing.Imaging.ColorMap" />. Jedes Farbpaar enthält eine vorhandene Farbe (den ersten Wert) und die Farbe, der diese zugeordnet wird (der zweite Wert).</param>
        <summary>Legt die Farbumwandlungstabelle für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einer Farbumwandlungstabelle ist ein Array von <xref:System.Drawing.Imaging.ColorMap> Strukturen. Jede <xref:System.Drawing.Imaging.ColorMap> Struktur verfügt über zwei <xref:System.Drawing.Color> Objekte: eines, das eine alte Farbe und die entsprechende neue Farbe angeben. Beim Rendern, wird jede Farbe, die einer der alten Farben in der Umwandlungstabelle entspricht in die entsprechende neue Farbe geändert.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbumwandlungstabelle für die Standardkategorie einer Farbumwandlungstabelle für die Bitmapkategorie und immer noch eine andere Farbumwandlungstabelle für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
1.  Erstellt ein Image (ein roter Kreis), speichert es als Circle2.jpg, öffnet das Bild, und auf dem Bildschirm gezeichnet.  
  
2.  Erstellt eine Zuordnung von Farbe, die die Farbe Rot die Farbe Grün zugeordnet.  
  
3.  Zeichnet das Bild, das zuvor erstellte auf dem Bildschirm wieder, aber dieses Mal die farbzuordnung.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetRemapTable (map, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">Ein Array von Farbpaaren vom Typ <see cref="T:System.Drawing.Imaging.ColorMap" />. Jedes Farbpaar enthält eine vorhandene Farbe (den ersten Wert) und die Farbe, der diese zugeordnet wird (der zweite Wert).</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbumwandlungstabelle festgelegt ist.</param>
        <summary>Legt die Farbumwandlungstabelle für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einer Farbumwandlungstabelle ist ein Array von <xref:System.Drawing.Imaging.ColorMap> Strukturen. Jede <xref:System.Drawing.Imaging.ColorMap> Struktur verfügt über zwei <xref:System.Drawing.Color> Objekte: eines, das eine alte Farbe und die entsprechende neue Farbe angeben. Beim Rendern, wird jede Farbe, die einer der alten Farben in der Umwandlungstabelle entspricht in die entsprechende neue Farbe geändert.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie eine Farbumwandlungstabelle für die Standardkategorie einer Farbumwandlungstabelle für die Bitmapkategorie und immer noch eine andere Farbumwandlungstabelle für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Auflistung von anpassungseinstellungen für die Standardkategorie angeben. Setzen Sie die Farbumwandlungstabelle für die Pen-Kategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Pen> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> -Methode, wird keines der Standardeinstellungen für die Anpassung vor anwenden.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den Schwellenwert (Transparenzbereich) fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single -&gt; unit" Usage="imageAttributes.SetThreshold threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">Eine reelle Zahl, die den Schwellenwert angibt.</param>
        <summary>Legt den Schwellenwert (Transparenzbereich) für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schwellenwert ist ein Wert zwischen 0 und 1, der eine umstellungspunkt für jede Farbkomponente angibt. Nehmen wir beispielsweise an der Schwellenwert auf 0,7 festgelegt ist, und nehmen Sie einer Farbe, deren Rot rendern, Grün- und Blauanteil Komponenten sind 230, 50 und 220 bzw. Die Rotkomponente (230) ist größer als 0,7 x 255, damit die Rotkomponente 255 (vollständige Intensität) geändert werden. Die Grünkomponente (50) ist kleiner als 0,7 x 255, damit die Grünkomponente in 0 geändert wird. Die blaue Komponente (220) ist größer als 0,7 x 255, damit die blaue Komponente bis 255 geändert werden.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie einen Schwellenwert für die Standardkategorie, einen Schwellenwert für die Bitmapkategorie und weiterhin unterschiedlichen Schwellenwerten für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
1.  Öffnet eine <xref:System.Drawing.Image> und zeichnet es auf dem Bildschirm.  
  
2.  Erstellt eine <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und legt den Schwellenwert fest, indem die <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> Methode.  
  
3.  Zeichnet das Bild auf dem Bildschirm mit den Schwellenwert für die <xref:System.Drawing.Imaging.ImageAttributes> Objekt.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetThreshold (threshold, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">Ein Schwellenwert zwischen 0,0 und 1,0, der als Schwelle zum Sortieren von Farben verwendet wird, die einem Maximal- oder Minimalwert zugeordnet werden.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Farbschwellenwert festgelegt ist.</param>
        <summary>Legt den Schwellenwert (Transparenzbereich) für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schwellenwert ist ein Wert zwischen 0 und 1, der eine umstellungspunkt für jede Farbkomponente angibt. Nehmen wir beispielsweise an der Schwellenwert auf 0,7 festgelegt ist, und nehmen Sie einer Farbe, deren Rot rendern, Grün- und Blauanteil Komponenten sind 230, 50 und 220 bzw. Die Rotkomponente (230) ist größer als 0,7 x 255, damit die Rotkomponente 255 (vollständige Intensität) geändert werden. Die Grünkomponente (50) ist kleiner als 0,7 x 255, damit die Grünkomponente in 0 geändert wird. Die blaue Komponente (220) ist größer als 0,7 x 255, damit die blaue Komponente bis 255 geändert werden.  
  
 Ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt verwaltet, Farben und Graustufen-Einstellungen für fünf Kategorien der Anpassung: Standard, Bitmap, Pinsel, Pen- und Text. Beispielsweise können Sie einen Schwellenwert für die Standardkategorie, einen Schwellenwert für die Bitmapkategorie und weiterhin unterschiedlichen Schwellenwerten für die Pen-Kategorie angeben.  
  
 Die Standardeinstellungen für Farbanpassungsmatrizen und die Anpassungsmatrix für Graustufenwerte gelten für alle Kategorien, die nicht über ihre eigenen anpassungseinstellungen verfügen. Beispielsweise, wenn Sie keine anpassungseinstellungen für die Pen-Kategorie angeben, gelten die Standardeinstellungen der Stift-Kategorie.  
  
 Sobald Sie eine Farbanpassungsmatrizen oder die Anpassungsmatrix für Graustufenwerte-Einstellung für eine bestimmte Kategorie angeben, gelten die Standardeinstellungen für die Anpassung nicht mehr auf diese Kategorie. Nehmen wir beispielsweise an, dass Sie eine Auflistung von anpassungseinstellungen für die Standardkategorie angeben. Wenn Sie den Schwellenwert für die Pen-Kategorie durch übergeben <xref:System.Drawing.Imaging.ColorAdjustType.Pen> auf die <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> -Methode, wird keines der Standardeinstellungen für die Anpassung vor anwenden.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den Umbruchmodus fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode -&gt; unit" Usage="imageAttributes.SetWrapMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Drawing2D.WrapMode" />, das angibt, wie ein Bereich mit Kopien eines Bildes gekachelt wird.</param>
        <summary>Legt den Umbruchmodus fest, mit dem bestimmt wird, wie eine Struktur in einer Form oder an den Begrenzungen der Form gekachelt werden soll. Wenn eine Struktur kleiner als eine Form ist, wird sie in der Form gekachelt, um sie auszufüllen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> Methode entspricht dem Aufruf <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> und <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> für die `color` Parameter. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Gibt die Farbe der Pixel außerhalb eines gerenderten Bilds an. Diese Farbe wird angezeigt, wenn der Mode-Parameter, um festgelegt ist <xref:System.Drawing.Drawing2D.WrapMode.Clamp> und Quellrechtecks an die <xref:System.Drawing.Graphics.DrawImage%2A> Methode ist größer als das Bild selbst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
1.  Öffnet eine <xref:System.Drawing.Image> aus der Datei Circle3.jpg Datei (einen kleineren, rot ausgefüllter Kreis) und auf dem Bildschirm gezeichnet.  
  
2.  Erstellt eine <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und legt die <xref:System.Drawing.Drawing2D.WrapMode> Enumeration <xref:System.Drawing.Drawing2D.WrapMode.Tile>.  
  
3.  Erstellt eine <xref:System.Drawing.TextureBrush> mithilfe des Images aus der Datei Circle3.jpg.  
  
4.  Zeichnet ein Rechteck auf dem Bildschirm, der mit dem kleinen, rot ausgefüllten Kreisen gefüllt wird.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Drawing2D.WrapMode" />, das angibt, wie ein Bereich mit Kopien eines Bildes gekachelt wird.</param>
        <param name="color">Ein <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekt, das die Farbe der Pixel außerhalb eines gerenderten Bilds angibt. Diese Farbe wird angezeigt, wenn der mode-Parameter auf <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> festgelegt wird und das an <see cref="Overload:System.Drawing.Graphics.DrawImage" /> übergebene Quellrechteck größer als das eigentliche Bild ist.</param>
        <summary>Legt den Umbruchmodus und die Farbe fest, mit denen festgelegt wird, wie eine Struktur in einer Form oder an den Begrenzungen der Form gekachelt werden soll. Wenn eine Struktur kleiner als eine Form ist, wird sie in der Form gekachelt, um sie auszufüllen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color * bool -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color, clamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Drawing2D.WrapMode" />, das angibt, wie ein Bereich mit Kopien eines Bildes gekachelt wird.</param>
        <param name="color">Ein Farbobjekt, das die Farbe der Pixel außerhalb eines gerenderten Bilds angibt. Diese Farbe wird angezeigt, wenn der mode-Parameter auf <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> festgelegt wird und das an <see cref="Overload:System.Drawing.Graphics.DrawImage" /> übergebene Quellrechteck größer als das eigentliche Bild ist.</param>
        <param name="clamp">Dieser Parameter hat keine Auswirkungen. Legen Sie ihn auf <see langword="false" /> fest.</param>
        <summary>Legt den Umbruchmodus und die Farbe fest, mit denen festgelegt wird, wie eine Struktur in einer Form oder an den Begrenzungen der Form gekachelt werden soll. Wenn eine Struktur kleiner als eine Form ist, wird sie in der Form gekachelt, um sie auszufüllen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>