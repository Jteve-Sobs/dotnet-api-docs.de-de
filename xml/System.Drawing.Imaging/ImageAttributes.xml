<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e9840316bac6938cea7d799428222b744dd089ac" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86856356" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type ImageAttributes = class&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enthält Informationen darüber, wie Bitmap- und Metadateifarben während des Renderns bearbeitet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet mehrere Farb Anpassungs Einstellungen, einschließlich Farb Anpassungs Matrizen, Graustufen Anpassungs Matrizen, Gammakorrektur Werte, Farb Zuordnungs Tabellen und Farb Schwellenwert Werten. Während des Renderings können Farben korrigiert, verdunstert, beleuchtet und entfernt werden. Um solche Manipulationen anzuwenden, initialisieren Sie ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt, und übergeben Sie den Pfad des <xref:System.Drawing.Imaging.ImageAttributes> Objekts (zusammen mit dem Pfad eines <xref:System.Drawing.Image> ) an die- <xref:System.Drawing.Graphics.DrawImage%2A> Methode.



## Examples
 Im folgenden Beispiel wird ein Bild, das alle eine Farbe hat (0,2, 0,0, 0,4, 1,0), verdoppelt, und die rote Komponente fügt 0,2 der roten, grünen und blauen Komponenten hinzu.

 Die folgende Abbildung zeigt das ursprüngliche Bild auf der linken Seite und das transformierte Bild auf der rechten Seite.

 ![Farben](~/add/media/colortrans1.png "Farben")

 Der Code im folgenden Beispiel verwendet die folgenden Schritte, um die Neueinfärbung durchzuführen:

1.  Initialisieren Sie ein- <xref:System.Drawing.Imaging.ColorMatrix> Objekt.

2.  Erstellen <xref:System.Drawing.Imaging.ImageAttributes> Sie ein-Objekt, und übergeben Sie das- <xref:System.Drawing.Imaging.ColorMatrix> Objekt an die- <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> Methode des- <xref:System.Drawing.Imaging.ImageAttributes> Objekts.

3.  Übergeben Sie das- <xref:System.Drawing.Imaging.ImageAttributes> Objekt an die- <xref:System.Drawing.Graphics.DrawImage%2A> Methode eines- <xref:System.Drawing.Graphics> Objekts.

 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]

 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/winforms/advanced/how-to-use-a-color-matrix-to-transform-a-single-color">Gewusst wie: Verwenden einer Farb Matrix zum Transformieren einer einzelnen Farbe</related>
    <related type="Article" href="/dotnet/framework/winforms/advanced/recoloring-images">Neueinfärben von Bildern</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearBrushRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearBrushRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Pinsel-Farbumwandlungstabelle dieses <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Umwandlungs Tabelle für die Standard Kategorie, eine andere Farb Umwandlungs Tabelle für die Bitmapkategorie und noch eine andere Farb Umwandlungs Tabelle für die Pinsel Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Pinsel Kategorie angeben, gelten die Standardeinstellungen für die Kategorie Pinsel.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Nehmen Sie beispielsweise an, Sie geben eine standardmäßige neuumwandlungs Tabelle an, die rot in grün konvertiert, und geben einen Standard-Gamma Wert von 1,8 an. Wenn Sie die <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> -Methode aufzurufen, gilt die standardmäßige neuumwandlungs Tabelle (rot bis grün) und der Standard-Gamma Wert (1,8) nicht für Pinsel. Wenn Sie später die- <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> Methode aufzurufen, wird die Pinsel Kategorie nicht auf die standardmäßige Umwandlungs-Tabelle zurückgesetzt, sondern die Kategorie Pinsel hat keine Neuzuordnung. Ebenso wird die Pinsel Kategorie nicht auf den standardmäßigen Gamma Wert zurückgesetzt. Stattdessen hat die Kategorie Pinsel keinen Gamma Wert.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht den Colorkey (Transparenzbereich).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : unit -&gt; unit" Usage="imageAttributes.ClearColorKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den Colorkey (Transparenzbereich) für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Farbschlüssel für die Standard Kategorie, einen anderen Farbschlüssel für die Bitmapkategorie und noch einen anderen Farbschlüssel für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorKey type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Colorkey gelöscht ist.</param>
        <summary>Löscht den Colorkey (Transparenzbereich) für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Farbschlüssel für die Standard Kategorie, einen anderen Farbschlüssel für die Bitmapkategorie und noch einen anderen Farbschlüssel für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Nehmen Sie beispielsweise an, Sie geben einen Standard Farbschlüssel an, der eine beliebige Farbe mit einer roten Komponente von 200 bis 255 transparent macht, und Sie geben den Standard-Gamma Wert 1,8 an. Wenn Sie den Farbschlüssel der Stift Kategorie durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> Methode festlegen, gelten die Standardfarben und der Standard-Gamma Wert nicht für Stifte. Wenn Sie den Stift Farbschlüssel später durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> Methode löschen, wird die Stift Kategorie nicht auf den Standard Farbschlüssel zurückgesetzt, und die Stift Kategorie weist keinen Farbschlüssel auf. Ebenso wird die Stift Kategorie nicht auf den standardmäßigen Gamma Wert zurückgesetzt. Stattdessen hat die Stift Kategorie keinen Gamma Wert.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Farbanpassungsmatrix.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : unit -&gt; unit" Usage="imageAttributes.ClearColorMatrix " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Farbanpassungsmatrix für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Anpassungs Matrix für die Standard Kategorie, eine andere Farb Anpassungs Matrix für die Bitmapkategorie und noch eine andere Farb Anpassungs Matrix für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, werden die Standardeinstellungen auf die Kategorie Pen angewendet.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorMatrix type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbanpassungsmatrix gelöscht ist.</param>
        <summary>Löscht die Farbanpassungsmatrix für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Anpassungs Matrix für die Standard Kategorie, eine andere Farb Anpassungs Matrix für die Bitmapkategorie und noch eine andere Farb Anpassungs Matrix für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, werden die Standardeinstellungen auf die Kategorie Pen angewendet.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Farb Anpassungs Matrix und einen Gammawert für die Standard Kategorie an. Wenn Sie eine Farb Anpassungs Matrix für die Pen-Kategorie durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> Methode festlegen, gilt die standardmäßige Farb Anpassungs Matrix nicht für Stifte. Wenn Sie die Stift Farb Anpassungs Matrix später durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> Methode löschen, wird die Stift Kategorie nicht auf die Standard Anpassungs Matrix zurückgesetzt, sondern die Stift Kategorie hat keine Anpassungs Matrix. Ebenso wird die Stift Kategorie nicht auf den standardmäßigen Gamma Wert zurückgesetzt. Stattdessen hat die Stift Kategorie keinen Gamma Wert.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deaktiviert die Gammakorrektur.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : unit -&gt; unit" Usage="imageAttributes.ClearGamma " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deaktiviert die Gammakorrektur für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Gammawert für die Standard Kategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gamma Wert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearGamma type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Gammakorrektur deaktiviert ist.</param>
        <summary>Deaktiviert die Gammakorrektur für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Gammawert für die Standard Kategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gamma Wert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, werden die Standardeinstellungen auf die Kategorie Pen angewendet.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Nehmen Sie beispielsweise an, Sie geben einen Gamma Wert und eine Farb Anpassungs Matrix für die Standard Kategorie an. Wenn Sie den Gammawert für die Stift Kategorie durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> Methode festlegen, gilt der Standard-Gamma Wert nicht für Stifte. Wenn Sie den Stift-Gamma Wert später durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> Methode löschen, wird die Stift Kategorie nicht auf den Standard-Gamma Wert zurückgesetzt, sondern hat keine Gamma Wert-Kategorie. Ebenso wird die Stift Kategorie nicht auf die standardmäßige Farb Anpassungs Matrix zurückgesetzt. Stattdessen hat die Stift Kategorie keine Farb Anpassungs Matrix.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die <see langword="NoOp" />-Einstellung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : unit -&gt; unit" Usage="imageAttributes.ClearNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die <see langword="NoOp" />-Einstellung für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Gammawert für die Standard Kategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gamma Wert für die Stift Kategorie angeben.

 Sie können die Farbanpassung für die Standard Kategorie deaktivieren, indem Sie die- <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Methode aufrufen. Später können Sie die Farbanpassung für die Standard Kategorie wiederherstellen, indem Sie die- <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> Methode aufrufen. Die Farbanpassung wird dann an die Stelle zurückgegeben, die vor dem-Befehl vorhanden war <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> .

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die <see langword="NoOp" />-Einstellung gelöscht ist.</param>
        <summary>Löscht die <see langword="NoOp" />-Einstellung für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Gammawert für die Standard Kategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gamma Wert für die Stift Kategorie angeben.

 Sie können die Farbanpassung für eine bestimmte Kategorie deaktivieren, indem Sie die- <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Methode aufrufen. Später können Sie die Farbanpassung für diese Kategorie wiederherstellen, indem Sie die- <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> Methode aufrufen. Die Farbanpassung wird dann an die Stelle zurückgegeben, die vor dem-Befehl vorhanden war <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> .

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die CMYK-Ausgabekanaleinstellung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die CMYK-Ausgabekanaleinstellung für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Ausgabekanal für die Standard Kategorie und einen anderen Ausgabekanal für die Bitmapkategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen für die Bitmapkategorie.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannel type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Ausgabekanaleinstellung gelöscht ist.</param>
        <summary>Löscht die CMYK-Ausgabekanaleinstellung für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Ausgabekanal für die Standard Kategorie und einen anderen Ausgabekanal für die Bitmapkategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen für die Bitmapkategorie.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Nehmen Sie beispielsweise an, Sie geben einen Ausgabekanal und eine Anpassungs Matrix für die Standard Kategorie an. Wenn Sie den Ausgabekanal für die Bitmapkategorie durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Methode festlegen, gilt der Standardausgabe Kanal nicht für Bitmaps. Wenn Sie den Bitmap-Ausgabekanal später durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> Methode löschen, wird die Bitmap-Kategorie nicht auf den Standardausgabe Kanal zurückgesetzt, sondern die Bitmap-Kategorie hat keine Ausgabekanal Einstellung. Ebenso wird die Bitmap-Kategorie nicht auf die standardmäßige Farb Anpassungs Matrix zurückgesetzt. Stattdessen hat die Bitmap-Kategorie keine Farb Anpassungs Matrix.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Einstellung des Ausgabekanal-Farbprofils.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Einstellung des Ausgabekanal-Farbprofils für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. ein Ausgabekanal Profil für die Standard Kategorie und ein anderes Ausgabekanal Profil für die Bitmapkategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen für die Bitmapkategorie.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Ausgabekanal-Profileinstellung gelöscht ist.</param>
        <summary>Löscht die Einstellung des Ausgabekanal-Farbprofils für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. ein Ausgabekanal Profil für die Standard Kategorie und ein anderes Ausgabekanal Profil für die Bitmapkategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen für die Bitmapkategorie.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Nehmen Sie beispielsweise an, Sie geben ein Ausgabekanal Profil und eine Anpassungs Matrix für die Standard Kategorie an. Wenn Sie das Ausgabekanal Profil für die Bitmapkategorie durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Methode festlegen, gilt das Standardausgabe Kanalprofil nicht für Bitmaps. Wenn Sie das Profil für den Bitmap-Ausgabekanal später durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> Methode löschen, wird die Bitmapkategorie nicht auf das Standardausgabe Kanalprofil zurückgesetzt, sondern die Bitmapkategorie hat keine Ausgabekanal Profil-Einstellung. Ebenso wird die Bitmap-Kategorie nicht auf die standardmäßige Farb Anpassungs Matrix zurückgesetzt. Stattdessen hat die Bitmap-Kategorie keine Farb Anpassungs Matrix.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Farbumwandlungstabelle.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Farbumwandlungstabelle für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Umwandlungs-Tabelle für die Standard Kategorie, eine andere Umwandlungs Tabelle für die Bitmapkategorie und noch eine andere Umwandlungs Tabelle für die Kategorie "Pen" angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearRemapTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Umwandlungstabelle gelöscht ist.</param>
        <summary>Löscht die Farbumwandlungstabelle für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Umwandlungs-Tabelle für die Standard Kategorie, eine andere Umwandlungs Tabelle für die Bitmapkategorie und noch eine andere Umwandlungs Tabelle für die Kategorie "Pen" angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, werden die Standardeinstellungen auf die Kategorie Pen angewendet.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Umwandlungs-Tabelle und einen Gammawert für die Standard Kategorie an. Wenn Sie die Umwandlungs Tabelle für die Pen-Kategorie durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> Methode festlegen, gilt die standardmäßige Umwandlungs-Tabelle nicht für Stifte. Wenn Sie die Tabelle "Pen Umwandlungs" zu einem späteren Zeitpunkt durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> Methode löschen, wird die Stift Kategorie nicht auf die standardmäßige neuumwandlungs Tabelle zurückgesetzt, sondern die Stift Kategorie hat keine neuumwandlungs Tabelle. Ebenso wird die Stift Kategorie nicht auf den standardmäßigen Gamma Wert zurückgesetzt. Stattdessen hat die Stift Kategorie keinen Gamma Wert.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht den Schwellenwert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : unit -&gt; unit" Usage="imageAttributes.ClearThreshold " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den Schwellenwert für die Standardkategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der Schwellenwert ist ein Wert zwischen 0 und 1, der einen Umstellungs Punkt für jede Farbkomponente angibt. Nehmen wir beispielsweise an der Schwellenwert auf 0,7 festgelegt ist, und nehmen Sie einer Farbe, deren Rot rendern, Grün- und Blauanteil Komponenten sind 230, 50 und 220 bzw. Die rote Komponente (230) ist größer als 0,7 x255, sodass die rote Komponente in 255 (volle Intensität) geändert wird. Die grüne Komponente (50) ist kleiner als 0,7 x255, sodass die grüne Komponente in 0 geändert wird. Die blaue Komponente (220) ist größer als 0,7 x255, sodass die blaue Komponente in 255 geändert wird.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Beispielsweise können Sie einen Schwellenwert für die Standard Kategorie, einen anderen Schwellenwert für die Bitmapkategorie und noch einen anderen Schwellenwert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearThreshold type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Schwellenwert gelöscht ist.</param>
        <summary>Löscht den Schwellenwert für eine angegebene Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der Schwellenwert ist ein Wert zwischen 0 und 1, der einen Umstellungs Punkt für jede Farbkomponente angibt. Nehmen wir beispielsweise an der Schwellenwert auf 0,7 festgelegt ist, und nehmen Sie einer Farbe, deren Rot rendern, Grün- und Blauanteil Komponenten sind 230, 50 und 220 bzw. Die rote Komponente (230) ist größer als 0,7 x55, sodass die rote Komponente in 255 (volle Intensität) geändert wird. Die grüne Komponente (50) ist kleiner als 0,7 x255, sodass die grüne Komponente in 0 geändert wird. Die blaue Komponente (220) ist größer als 0,7 x255, sodass die blaue Komponente in 255 geändert wird.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Beispielsweise können Sie einen Schwellenwert für die Standard Kategorie, einen anderen Schwellenwert für die Bitmapkategorie und noch einen anderen Schwellenwert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Nehmen Sie beispielsweise an, dass Sie einen Schwellenwert und einen Gammawert für die Standard Kategorie angeben. Wenn Sie den Schwellenwert für die Pen-Kategorie durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> Methode festlegen, gilt der Standard Schwellenwert nicht für Stifte. Wenn Sie den Stift Schwellenwert später durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> Methode löschen, wird die Stift Kategorie nicht auf den Standard Schwellenwert zurückgesetzt, sondern hat keinen Schwellenwert. Ebenso wird die Stift Kategorie nicht auf den standardmäßigen Gamma Wert zurückgesetzt. Stattdessen hat die Stift Kategorie keinen Gamma Wert.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="imageAttributes.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine genaue Kopie dieses <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekts.</summary>
        <returns>Das von dieser Klasse erstellte <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekt, umgewandelt in ein Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="imageAttributes.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von diesem <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekt verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Rufen Sie <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> auf, wenn Sie <xref:System.Drawing.Imaging.ImageAttributes> nicht mehr benötigen. Die <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>-Methode bewirkt, dass <xref:System.Drawing.Imaging.ImageAttributes> nicht mehr verwendet werden kann. Nach dem Aufrufen <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> von müssen Sie alle Verweise auf den freigeben, <xref:System.Drawing.Imaging.ImageAttributes> damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Drawing.Imaging.ImageAttributes> belegt hat. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged) und [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.

> [!NOTE]
>  Rufen Sie immer <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Drawing.Imaging.ImageAttributes> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Drawing.Imaging.ImageAttributes>-Methode des `Finalize`-Objekts aufruft.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="imageAttributes.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.GetAdjustedPalette : System.Drawing.Imaging.ColorPalette * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.GetAdjustedPalette (palette, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">Eine <see cref="T:System.Drawing.Imaging.ColorPalette" />, die bei der Eingabe die anzupassende Palette und bei der Ausgabe die angepasste Palette enthält.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, deren Anpassungseinstellungen auf die Palette angewendet werden.</param>
        <summary>Passt die Farben in einer Palette entsprechend den Anpassungseinstellungen einer angegebenen Kategorie an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Umwandlungs Tabelle für die Standard Kategorie, eine andere Farb Umwandlungs Tabelle für die Bitmapkategorie und noch eine andere Farb Umwandlungs Tabelle für die Stift Kategorie angeben.

 Wenn Sie die- <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> Methode aufzurufen, können Sie die Anpassungs Kategorie angeben, mit der die Palettenfarben angepasst werden. Wenn Sie z <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> . b. an die- <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> Methode übergeben, werden die Anpassungs Einstellungen der Bitmap-Kategorie zum Anpassen der Palettenfarben verwendet.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetBrushRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetBrushRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Ein Array von <see cref="T:System.Drawing.Imaging.ColorMap" />-Objekten.</param>
        <summary>Legt die Farbumwandlungstabelle für die Pinselkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine Farb Umwandlungs Tabelle ist ein Array von- <xref:System.Drawing.Imaging.ColorMap> Strukturen. Jede <xref:System.Drawing.Imaging.ColorMap> Struktur verfügt über zwei <xref:System.Drawing.Color> Objekte: eine, die eine alte Farbe angibt, und eine, die eine entsprechende neue Farbe angibt. Während des Renderings wird jede Farbe, die einer der alten Farben in der Umwandlungs-Tabelle entspricht, in die entsprechende neue Farbe geändert.

 Das Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> Methode hat denselben Effekt wie das übergeben <xref:System.Drawing.Imaging.ColorAdjustType.Brush> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> Methode. Die angegebene Umwandlungs-Tabelle gilt für Elemente in Metadateien, die mit einem Pinsel gefüllt sind.

 Diese Methode ist nur für die Verwendung mit Metadatendateien vorgesehen.



## Examples
 Das folgende Codebeispiel ist für die Verwendung mit Windows Forms konzipiert und erfordert, wobei es sich um <xref:System.Windows.Forms.PaintEventArgs> `e` einen Parameter des- <xref:System.Windows.Forms.Control.Paint> Ereignis Handlers handelt. Der Code führt die folgenden Aktionen aus:

1.  Erstellt ein Array mit einem einzelnen Element <xref:System.Drawing.Imaging.ColorMap> , das rot als alte Farbe und Grün als neue Farbe enthält.

2.  Übergibt dieses Array an ein neu erstelltes- <xref:System.Drawing.Imaging.ImageAttributes> Objekt.

 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den Colorkey (Transparenzbereich) fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">Der niedrige Colorkeywert.</param>
        <param name="colorHigh">Der hohe Colorkeywert.</param>
        <summary>Legt den Colorkey für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode legt die hohen und unteren Farbschlüssel Werte so fest, dass ein Bereich von Farben transparent gemacht werden kann. Jede Farbe, die jede der drei Komponenten (rot, grün, blau) zwischen den entsprechenden Komponenten der High-und Low-Color-Taste enthält, wird transparent gemacht.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Farbschlüssel für die Standard Kategorie, einen anderen Farbschlüssel für die Bitmapkategorie und noch einen anderen Farbschlüssel für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.



## Examples
 Ein Codebeispiel finden Sie unter der- <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> Methode.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">Der niedrige Colorkeywert.</param>
        <param name="colorHigh">Der hohe Colorkeywert.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Colorkey festgelegt ist.</param>
        <summary>Legt den Colorkey (Transparenzbereich) für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode legt die hohen und unteren Farbschlüssel Werte so fest, dass ein Bereich von Farben transparent gemacht werden kann. Jede Farbe, die jede der drei Komponenten (rot, grün, blau) zwischen den entsprechenden Komponenten der High-und Low-Color-Taste enthält, wird transparent gemacht.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Farbschlüssel für die Standard Kategorie, einen anderen Farbschlüssel für die Bitmapkategorie und noch einen anderen Farbschlüssel für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Sammlung von Anpassungs Einstellungen für die Standard Kategorie an. Wenn Sie den Farbschlüssel für die Stift Kategorie festlegen, indem Sie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> Methode übergeben, gilt keine der Standard Anpassungs Einstellungen für Stifte.



## Examples
 Das folgende Codebeispiel ist für die Verwendung mit Windows Forms konzipiert und erfordert, wobei es sich um <xref:System.Windows.Forms.PaintEventArgs> `e` einen Parameter des- <xref:System.Windows.Forms.Control.Paint> Ereignis Handlers handelt. Der Code führt die folgenden Aktionen aus:

1.  Öffnet einen <xref:System.Drawing.Image> , der die Datei Circle.bmp verwendet und auf dem Bildschirm zeichnet.

2.  Erstellt ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und legt seinen Farbschlüssel durch Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> Methode fest.

3.  Zeichnet das Bild mithilfe des Farb Schlüssels des-Objekts auf dem Bildschirm <xref:System.Drawing.Imaging.ImageAttributes> .

 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Farbanpassungsmatrix und die Anpassungsmatrix für Graustufenwerte fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix)" />
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix? grayMatrix);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="grayMatrix">Die Anpassungsmatrix für Graustufenwerte.</param>
        <summary>Legt die Farbanpassungsmatrix und die Anpassungsmatrix für Graustufenwerte für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. Anpassungs Matrizen für die Standard Kategorie, verschiedene Anpassungs Matrizen für die Bitmapkategorie und noch andere Anpassungs Matrizen für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Das Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> Methode entspricht dem Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> -Methode und <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> der Übergabe von für den- `flags` Parameter. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Gibt an, dass alle Farben (einschließlich Grays) durch die Farb Anpassungs Matrix, nicht die Anpassungs Matrix für Graustufen Werte angepasst werden. Daher hat die an diese Methode bestandene Grayscale-Anpassungs Matrix keine Auswirkung.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, flags)" />
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix? grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="grayMatrix">Die Anpassungsmatrix für Graustufenwerte.</param>
        <param name="flags">Ein Element von <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />, das angibt, welcher Bild- und Farbtyp von den Farbanpassungsmatrizen und den Anpassungsmatrizen für Graustufenwerte betroffen ist.</param>
        <summary>Legt die Farbanpassungsmatrix und die Anpassungsmatrix für Graustufenwerte für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. Anpassungs Matrizen für die Standard Kategorie, verschiedene Anpassungs Matrizen für die Bitmapkategorie und noch andere Anpassungs Matrizen für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, mode, type)" />
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix? grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="grayMatrix">Die Anpassungsmatrix für Graustufenwerte.</param>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />, das angibt, welcher Bild- und Farbtyp von den Farbanpassungsmatrizen und den Anpassungsmatrizen für Graustufenwerte betroffen ist.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbanpassungsmatrizen und die Anpassungsmatrizen für Graustufenwerte festgelegt werden.</param>
        <summary>Legt die Farbanpassungsmatrix und die Anpassungsmatrix für Graustufenwerte für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. Anpassungs Matrizen für die Standard Kategorie, verschiedene Anpassungs Matrizen für die Bitmapkategorie und noch andere Anpassungs Matrizen für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Sammlung von Anpassungs Einstellungen für die Standard Kategorie an. Wenn Sie die Farb Anpassungs Matrizen und die Anpassungs Matrizen für Graustufen Werte für die Stift Kategorie festlegen, indem Sie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> Methode übergeben, gilt keine der Standard Anpassungs Einstellungen für Stifte.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Farbanpassungsmatrix fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrix newColorMatrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <summary>Legt die Farbanpassungsmatrix für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Anpassungs Matrix für die Standard Kategorie, eine andere Farb Anpassungs Matrix für die Bitmapkategorie und noch eine andere Farb Anpassungs Matrix für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Das Aufrufen der- <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> Methode entspricht dem Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> -Methode und <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> der Übergabe von für den- `flags` Parameter. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Gibt an, dass alle Farben (einschließlich Grays) durch die Farb Anpassungs Matrix angepasst werden.



## Examples
 Das folgende Codebeispiel ist für die Verwendung mit Windows Forms konzipiert und erfordert, wobei es sich um <xref:System.Windows.Forms.PaintEventArgs> `e` einen Parameter des- <xref:System.Windows.Forms.Control.Paint> Ereignis Handlers handelt. Der Code führt die folgenden Aktionen aus:

1.  Erstellt ein Rechteck Bild, das alle Farbwerte auf 128 festgelegt ist, und erstellt ein Rechteck, das mit einer voll Tonfarbe mit mittelgrau gefüllt ist. Der Code zeichnet dieses Rechteck Bild dann auf dem Bildschirm.

2.  Erstellt ein <xref:System.Drawing.Imaging.ColorMatrix> und legt seinen <xref:System.Drawing.Drawing2D.Matrix> Speicherort auf 1,75 fest, wodurch die rote Komponente des Bilds hervorgehoben wird.

3.  Erstellt ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und ruft die- <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> Methode auf.

4.  Zeichnet das Bild (ein zweites Rechteck) mithilfe der <xref:System.Drawing.Imaging.ColorMatrix> im-Objekt festgelegten <xref:System.Drawing.Imaging.ImageAttributes> .

 Beachten Sie, dass das zweite Rechteck die Farbe rot hervorgehoben hat.

 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/advanced/recoloring-images">Neueinfärben von Bildern</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="flags">Ein Element von <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />, das angibt, welcher Bild- und Farbtyp von der Farbanpassungsmatrix betroffen ist.</param>
        <summary>Legt die Farbanpassungsmatrix für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Anpassungs Matrix für die Standard Kategorie, eine andere Farb Anpassungs Matrix für die Bitmapkategorie und noch eine andere Farb Anpassungs Matrix für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.



## Examples
 Ein Codebeispiel finden Sie unter der- <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> Methode.

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/advanced/recoloring-images">Neueinfärben von Bildern</related>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Die Farbanpassungsmatrix.</param>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" />, das angibt, welcher Bild- und Farbtyp von der Farbanpassungsmatrix betroffen ist.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbanpassungsmatrix festgelegt ist.</param>
        <summary>Legt die Farbanpassungsmatrix für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Anpassungs Matrix für die Standard Kategorie, eine andere Farb Anpassungs Matrix für die Bitmapkategorie und noch eine andere Farb Anpassungs Matrix für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Sammlung von Anpassungs Einstellungen für die Standard Kategorie an. Wenn Sie die Farb Anpassungs Matrix für die Stift Kategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Pen> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> Methode festlegen, wird keine der Standard Anpassungs Einstellungen für Stifte angewendet.



## Examples
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein `RotateColors` , und geben Sie aus der <xref:System.Windows.Forms.Control.Paint> Ereignis Behandlungsmethode des Formulars an, indem Sie `e` als übergeben <xref:System.Windows.Forms.PaintEventArgs> .

 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den Gammawert fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single -&gt; unit" Usage="imageAttributes.SetGamma gamma" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">Der Gammakorrekturwert.</param>
        <summary>Legt den Gammawert für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Typische Werte für den- `gamma` Parameter liegen zwischen 1,0 und 2,2. Werte zwischen 0,1 und 5,0 können jedoch unter bestimmten Umständen nützlich sein.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Gammawert für die Standard Kategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gamma Wert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Gamma Werte außerhalb des üblichen Bereichs können für alte CRT-Monitore oder Monitore, die sich in ungewöhnlichen Beleuchtungsbedingungen wie z. b. Industrieumgebungen oder Fenster anzeigen befinden, nützlich sein.



## Examples
 Das folgende Codebeispiel ist für die Verwendung mit Windows Forms konzipiert und erfordert, wobei es sich um <xref:System.Windows.Forms.PaintEventArgs> `e` einen Parameter des- <xref:System.Windows.Forms.Control.Paint> Ereignis Handlers handelt. Außerdem müssen Sie den Bilddatei-Pfad in einen Pfad und einen Bildnamen ändern, der auf Ihrem System gültig ist. Der Code führt die folgenden Aktionen aus:

1.  Öffnet einen <xref:System.Drawing.Image> , der die Datei Camera.jpg verwendet und mit dem Standardwert für Gamma auf den Bildschirm zeichnet.

2.  Erstellt ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und legt dessen Gamma auf 2,2 fest, indem die-Methode aufgerufen wird <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> .

3.  Zeichnet das Bild (eine zweite Kamera) mithilfe des Gamma Werts, der im-Objekt festgelegt ist, auf den Bildschirm <xref:System.Drawing.Imaging.ImageAttributes> .

 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetGamma (gamma, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">Der Gammakorrekturwert.</param>
        <param name="type">Ein Element der <see cref="T:System.Drawing.Imaging.ColorAdjustType" />-Enumeration, das die Kategorie angibt, für die der Gammawert festgelegt ist.</param>
        <summary>Legt den Gammawert für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Typische Werte für den- `gamma` Parameter liegen zwischen 1,0 und 2,2. Werte zwischen 0,1 und 5,0 können jedoch unter bestimmten Umständen nützlich sein.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Gammawert für die Standard Kategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gamma Wert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Sammlung von Anpassungs Einstellungen für die Standard Kategorie an. Wenn Sie den Gammawert für die Stift Kategorie festlegen, indem Sie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> Methode übergeben, gilt keine der Standard Anpassungs Einstellungen für Stifte.

 Gamma Werte außerhalb des üblichen Bereichs können für alte CRT-Monitore oder Monitore, die sich in ungewöhnlichen Beleuchtungsbedingungen wie z. b. Industrieumgebungen oder Fenster anzeigen befinden, nützlich sein.



## Examples
 Ein Codebeispiel finden Sie unter der- <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> Methode.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deaktiviert die Farbanpassung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : unit -&gt; unit" Usage="imageAttributes.SetNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deaktiviert die Farbanpassung für die Standardkategorie. Durch Aufruf der <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />-Methode können Sie die vor dem Aufruf der <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />-Methode gültigen Farbanpassungseinstellungen erneut aktivieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Gammawert für die Standard Kategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gamma Wert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.



## Examples
 Das folgende Codebeispiel ist für die Verwendung mit Windows Forms konzipiert und erfordert, wobei es sich um <xref:System.Windows.Forms.PaintEventArgs> `e` einen Parameter des- <xref:System.Windows.Forms.Control.Paint> Ereignis Handlers handelt. Der Code führt die folgenden Aktionen aus:

1.  Öffnet einen <xref:System.Drawing.Image> , der die Datei Camera.jpg verwendet.

2.  Legt den Gammawert des- <xref:System.Drawing.Imaging.ImageAttributes> Objekts auf 0,25 fest.

3.  Zeichnet das Bild auf dem Bildschirm.

4.  Aufruf der <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>-Methode.

5.  Zeichnet das Bild (eine zweite Kamera) auf dem Bildschirm. Da jedoch die- <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Methode aufgerufen wurde, wird für die Gamma-Einstellung standardmäßig der Wert 1,0 verwendet, und das Bild wird mit der standardmäßigen Gamma-Einstellung auf den Bildschirm gezeichnet.

 Beachten Sie, dass das Bild auf der linken Seite sehr stark ausgewaschen wird (Gamma von 0,25), und das Bild auf der rechten Seite hat einen größeren Kontrast (Gamma von 1,0).

 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbkorrektur deaktiviert ist.</param>
        <summary>Deaktiviert die Farbanpassung für eine angegebene Kategorie. Durch Aufruf der <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />-Methode können Sie die vor dem Aufruf der <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />-Methode gültigen Farbanpassungseinstellungen erneut aktivieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Gammawert für die Standard Kategorie, einen anderen Gammawert für die Bitmapkategorie und noch einen anderen Gamma Wert für die Stift Kategorie angeben.



## Examples
 Ein Codebeispiel finden Sie unter der- <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> Methode.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den CMYK-Ausgabekanal fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag -&gt; unit" Usage="imageAttributes.SetOutputChannel flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">Ein Element von <see cref="T:System.Drawing.Imaging.ColorChannelFlag" />, das den Ausgabekanal angibt.</param>
        <summary>Legt den CMYK-Ausgabekanal für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Mit der <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> -Methode können Sie ein Bild in einen CMYK-Farbraum konvertieren und die Intensitäten von einem der CMYK-Farbkanäle untersuchen. Nehmen Sie beispielsweise an, dass Sie ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt erstellen und dessen Bitmap-Ausgabekanal auf festlegen <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> . Wenn Sie den Pfad dieses <xref:System.Drawing.Imaging.ImageAttributes> Objekts an die- <xref:System.Drawing.Graphics.DrawImage%2A> Methode übergeben, wird die Zyan-Komponente der einzelnen Pixel berechnet, und jedes Pixel im gerenderten Bild ist ein Farbton grau, das die Intensität des Zyan-Kanals angibt. Auf ähnliche Weise können Sie Bilder, die die Intensität der Magenta-, gelben und schwarzen Kanäle angeben, darstellen.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Ausgabekanal für die Standard Kategorie und einen anderen Ausgabekanal für die Bitmapkategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen für die Bitmapkategorie.



## Examples
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>-Methode verwenden. Fügen Sie den folgenden Code in ein Windows Form ein, um dieses Beispiel auszuführen. Behandeln Sie das-Ereignis des Formulars, und führen Sie den-Befehl aus <xref:System.Windows.Forms.Control.Paint> `ShowOutputChannels` `e` <xref:System.Windows.Forms.PaintEventArgs> .

 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannel (flags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">Ein Element von <see cref="T:System.Drawing.Imaging.ColorChannelFlag" />, das den Ausgabekanal angibt.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Ausgabekanal festgelegt ist.</param>
        <summary>Legt den CMYK-Ausgabekanal für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Mit der <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> -Methode können Sie ein Bild in einen CMYK-Farbraum konvertieren und die Intensitäten von einem der CMYK-Farbkanäle untersuchen. Nehmen Sie beispielsweise an, dass Sie ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt erstellen und dessen Bitmap-Ausgabekanal auf festlegen <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> . Wenn Sie den Pfad dieses <xref:System.Drawing.Imaging.ImageAttributes> Objekts an die- <xref:System.Drawing.Graphics.DrawImage%2A> Methode übergeben, wird die Zyan-Komponente der einzelnen Pixel berechnet, und jedes Pixel im gerenderten Bild ist ein Farbton grau, das die Intensität des Zyan-Kanals angibt. Auf ähnliche Weise können Sie Bilder, die die Intensität der Magenta-, gelben und schwarzen Kanäle angeben, darstellen.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Ausgabekanal für die Standard Kategorie und einen anderen Ausgabekanal für die Bitmapkategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen für die Bitmapkategorie.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Sammlung von Anpassungs Einstellungen für die Standard Kategorie an. Wenn Sie den Ausgabekanal für die Bitmapkategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Methode festlegen, wird keine der Standard Anpassungs Einstellungen auf Bitmaps angewendet.



## Examples
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>-Methode verwenden. Fügen Sie den folgenden Code in ein Windows Form ein, um dieses Beispiel auszuführen. Behandeln Sie das-Ereignis des Formulars, und führen Sie den-Befehl aus <xref:System.Windows.Forms.Control.Paint> `ShowOutputChannels` `e` <xref:System.Windows.Forms.PaintEventArgs> .

 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Ausgabekanal-Farbprofildatei fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile colorProfileFilename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Der Pfadname einer Farbprofildatei. Wenn sich die Farbprofildatei im Verzeichnis %SystemRoot%\System32\Spool\Drivers\Color befindet, kann dieser Parameter der Dateiname sein. Andernfalls muss es sich bei diesem Parameter um den voll gekennzeichneten Pfadnamen handeln.</param>
        <summary>Legt die Ausgabekanal-Farbprofildatei für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Sie können die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> -Methode und die- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Methode verwenden, um ein Bild in einen CMYK-Farbraum (Cyan-Magenta-Yellow-Black) zu konvertieren und die Intensitäten von einem der CMYK-farbchannels zu untersuchen. Nehmen Sie z. b. an, Sie schreiben Code, der die folgenden Schritte ausführt:

1.  Erstellen Sie eine <xref:System.Drawing.Image> .

2.  Erstellen Sie ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt.

3.  Übergeben <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> Sie an die- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Methode des- <xref:System.Drawing.Imaging.ImageAttributes> Objekts.

4.  Übergeben Sie den Pfadnamen einer Farbprofil Datei an die- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Methode des- <xref:System.Drawing.Imaging.ImageAttributes> Objekts.

5.  Übergeben Sie die Pfade des <xref:System.Drawing.Image> -Objekts und des-Objekts <xref:System.Drawing.Imaging.ImageAttributes> an die- <xref:System.Drawing.Graphics.DrawImage%2A> Methode.

 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] verwendet die Farbprofil Datei, um die Zyan-Komponente der einzelnen Pixel im Bild zu berechnen, und jedes Pixel im gerenderten Bild ist ein grauer Farbton, der die Intensität des Zyan-Kanals angibt.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Ausgabekanal-Farbprofil Datei für die Standard Kategorie und eine andere Ausgabekanal-Farbprofil Datei für die Bitmap-Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen für die Bitmapkategorie.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile (colorProfileFilename, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Der Pfadname einer Farbprofildatei. Wenn sich die Farbprofildatei im Verzeichnis %SystemRoot%\System32\Spool\Drivers\Color befindet, kann dieser Parameter der Dateiname sein. Andernfalls muss es sich bei diesem Parameter um den voll gekennzeichneten Pfadnamen handeln.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Ausgabekanal-Farbprofildatei festgelegt ist.</param>
        <summary>Legt die Ausgabekanal-Farbprofildatei für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Sie können die <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> -Methode und die- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Methode verwenden, um ein Bild in einen CMYK-Farbraum (Cyan-Magenta-Yellow-Black) zu konvertieren und die Intensitäten von einem der CMYK-farbchannels zu untersuchen. Nehmen Sie z. b. an, Sie schreiben Code, der die folgenden Schritte ausführt:

1.  Erstellen Sie eine <xref:System.Drawing.Image> .

2.  Erstellen Sie ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt.

3.  Übergeben <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> Sie an die- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Methode des- <xref:System.Drawing.Imaging.ImageAttributes> Objekts.

4.  Übergeben Sie den Pfadnamen einer Farbprofil Datei an die- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Methode des- <xref:System.Drawing.Imaging.ImageAttributes> Objekts.

5.  Übergeben Sie die Pfade des <xref:System.Drawing.Image> -Objekts und des-Objekts <xref:System.Drawing.Imaging.ImageAttributes> an die- <xref:System.Drawing.Graphics.DrawImage%2A> Methode.

 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] verwendet die Farbprofil Datei, um die Zyan-Komponente der einzelnen Pixel im Bild zu berechnen, und jedes Pixel im gerenderten Bild ist ein grauer Farbton, der die Intensität des Zyan-Kanals angibt.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Ausgabekanal-Farbprofil Datei für die Standard Kategorie und eine andere Ausgabekanal-Farbprofil Datei für die Bitmap-Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Bitmapkategorie angeben, gelten die Standardeinstellungen für die Bitmapkategorie.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Sammlung von Anpassungs Einstellungen für die Standard Kategorie an. Wenn Sie die Ausgabekanal-Farbprofil Datei für die Bitmapkategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Methode festlegen, wird keine der Standard Anpassungs Einstellungen auf Bitmaps angewendet.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Farbumwandlungstabelle fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Ein Array von Farbpaaren vom Typ <see cref="T:System.Drawing.Imaging.ColorMap" />. Jedes Farbpaar enthält eine vorhandene Farbe (den ersten Wert) und die Farbe, der diese zugeordnet wird (der zweite Wert).</param>
        <summary>Legt die Farbumwandlungstabelle für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine Farb Umwandlungs Tabelle ist ein Array von- <xref:System.Drawing.Imaging.ColorMap> Strukturen. Jede <xref:System.Drawing.Imaging.ColorMap> Struktur verfügt über zwei <xref:System.Drawing.Color> Objekte: eine, die eine alte Farbe angibt, und eine, die eine entsprechende neue Farbe angibt. Während des Renderings wird jede Farbe, die einer der alten Farben in der Umwandlungs-Tabelle entspricht, in die entsprechende neue Farbe geändert.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Umwandlungs Tabelle für die Standard Kategorie, eine Farb Umwandlungs Tabelle für die Bitmapkategorie und noch eine andere Farb Umwandlungs Tabelle für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.



## Examples
 Das folgende Codebeispiel ist für die Verwendung mit Windows Forms konzipiert und erfordert, wobei es sich um <xref:System.Windows.Forms.PaintEventArgs> `e` einen Parameter des- <xref:System.Windows.Forms.Control.Paint> Ereignis Handlers handelt. Der Code führt die folgenden Aktionen aus:

1.  Erstellt ein Bild (ein roter Kreis), speichert es als Circle2.jpg, öffnet dieses Bild und zeichnet es auf dem Bildschirm.

2.  Erstellt eine Farbzuordnung, die die Farbe Rot der Farbe grün zuordnet.

3.  Zeichnet das zuvor erstellte Bild erneut auf dem Bildschirm, aber dieses Mal wird die Farbzuordnung verwendet.

 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetRemapTable (map, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">Ein Array von Farbpaaren vom Typ <see cref="T:System.Drawing.Imaging.ColorMap" />. Jedes Farbpaar enthält eine vorhandene Farbe (den ersten Wert) und die Farbe, der diese zugeordnet wird (der zweite Wert).</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die die Farbumwandlungstabelle festgelegt ist.</param>
        <summary>Legt die Farbumwandlungstabelle für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine Farb Umwandlungs Tabelle ist ein Array von- <xref:System.Drawing.Imaging.ColorMap> Strukturen. Jede <xref:System.Drawing.Imaging.ColorMap> Struktur verfügt über zwei <xref:System.Drawing.Color> Objekte: eine, die eine alte Farbe angibt, und eine, die eine entsprechende neue Farbe angibt. Während des Renderings wird jede Farbe, die einer der alten Farben in der Umwandlungs-Tabelle entspricht, in die entsprechende neue Farbe geändert.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. eine Farb Umwandlungs Tabelle für die Standard Kategorie, eine Farb Umwandlungs Tabelle für die Bitmapkategorie und noch eine andere Farb Umwandlungs Tabelle für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Sammlung von Anpassungs Einstellungen für die Standard Kategorie an. Wenn Sie die Farb Umwandlungs Tabelle für die Stift Kategorie durch Übergabe <xref:System.Drawing.Imaging.ColorAdjustType.Pen> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> Methode festlegen, gilt keine der Standard Anpassungs Einstellungen für Stifte.



## Examples
 Ein Codebeispiel finden Sie unter der- <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> Methode.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den Schwellenwert (Transparenzbereich) fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single -&gt; unit" Usage="imageAttributes.SetThreshold threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">Eine reelle Zahl, die den Schwellenwert angibt.</param>
        <summary>Legt den Schwellenwert (Transparenzbereich) für die Standardkategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der Schwellenwert ist ein Wert zwischen 0 und 1, der einen Umstellungs Punkt für jede Farbkomponente angibt. Nehmen wir beispielsweise an der Schwellenwert auf 0,7 festgelegt ist, und nehmen Sie einer Farbe, deren Rot rendern, Grün- und Blauanteil Komponenten sind 230, 50 und 220 bzw. Die rote Komponente (230) ist größer als 0,7 x255, sodass die rote Komponente in 255 (volle Intensität) geändert wird. Die grüne Komponente (50) ist kleiner als 0,7 x255, sodass die grüne Komponente in 0 geändert wird. Die blaue Komponente (220) ist größer als 0,7 x255, sodass die blaue Komponente in 255 geändert wird.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Schwellenwert für die Standard Kategorie, einen Schwellenwert für die Bitmapkategorie und noch einen anderen Schwellenwert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.



## Examples
 Das folgende Codebeispiel ist für die Verwendung mit Windows Forms konzipiert und erfordert, wobei es sich um <xref:System.Windows.Forms.PaintEventArgs> `e` einen Parameter des- <xref:System.Windows.Forms.Control.Paint> Ereignis Handlers handelt. Der Code führt die folgenden Aktionen aus:

1.  Öffnet einen <xref:System.Drawing.Image> und zeichnet ihn auf dem Bildschirm.

2.  Erstellt ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und legt seinen Schwellenwert mithilfe der- <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> Methode fest.

3.  Zeichnet das Bild mithilfe des Schwellenwerts des-Objekts auf dem Bildschirm <xref:System.Drawing.Imaging.ImageAttributes> .

 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetThreshold (threshold, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">Ein Schwellenwert zwischen 0,0 und 1,0, der als Schwelle zum Sortieren von Farben verwendet wird, die einem Maximal- oder Minimalwert zugeordnet werden.</param>
        <param name="type">Ein Element von <see cref="T:System.Drawing.Imaging.ColorAdjustType" />, das die Kategorie angibt, für die der Farbschwellenwert festgelegt ist.</param>
        <summary>Legt den Schwellenwert (Transparenzbereich) für eine angegebene Kategorie fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der Schwellenwert ist ein Wert zwischen 0 und 1, der einen Umstellungs Punkt für jede Farbkomponente angibt. Nehmen wir beispielsweise an der Schwellenwert auf 0,7 festgelegt ist, und nehmen Sie einer Farbe, deren Rot rendern, Grün- und Blauanteil Komponenten sind 230, 50 und 220 bzw. Die rote Komponente (230) ist größer als 0,7 x255, sodass die rote Komponente in 255 (volle Intensität) geändert wird. Die grüne Komponente (50) ist kleiner als 0,7 x255, sodass die grüne Komponente in 0 geändert wird. Die blaue Komponente (220) ist größer als 0,7 x255, sodass die blaue Komponente in 255 geändert wird.

 Ein- <xref:System.Drawing.Imaging.ImageAttributes> Objekt verwaltet Farb-und Graustufen Einstellungen für fünf Anpassungs Kategorien: Standard, Bitmap, Pinsel, Stift und Text. Sie können z. b. einen Schwellenwert für die Standard Kategorie, einen Schwellenwert für die Bitmapkategorie und noch einen anderen Schwellenwert für die Stift Kategorie angeben.

 Die Standardeinstellungen für Farbanpassung und Graustufen Anpassung gelten für alle Kategorien, die keine eigenen Anpassungs Einstellungen aufweisen. Wenn Sie z. b. keine Anpassungs Einstellungen für die Kategorie Pen angeben, gelten die Standardeinstellungen für die Kategorie Pen.

 Sobald Sie eine Farb Anpassungs Einstellung oder eine Einstellung für die Anpassung der Graustufen für eine bestimmte Kategorie angeben, gelten die Standard Anpassungs Einstellungen nicht mehr für diese Kategorie. Angenommen, Sie geben eine Sammlung von Anpassungs Einstellungen für die Standard Kategorie an. Wenn Sie den Schwellenwert für die Stift Kategorie festlegen, indem Sie <xref:System.Drawing.Imaging.ColorAdjustType.Pen> an die- <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> Methode übergeben, gilt keine der Standard Anpassungs Einstellungen für Stifte.



## Examples
 Ein Codebeispiel finden Sie unter der- <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> Methode.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den Umbruchmodus fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode -&gt; unit" Usage="imageAttributes.SetWrapMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Drawing2D.WrapMode" />, das angibt, wie ein Bereich mit Kopien eines Bildes gekachelt wird.</param>
        <summary>Legt den Umbruchmodus fest, mit dem bestimmt wird, wie eine Struktur in einer Form oder an den Begrenzungen der Form gekachelt werden soll. Wenn eine Struktur kleiner als eine Form ist, wird sie in der Form gekachelt, um sie auszufüllen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das Aufrufen der <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> -Methode entspricht dem Aufrufen <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> und übergeben <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> von für den- `color` Parameter. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Gibt die Farbe der Pixel außerhalb eines gerenderten Bilds an. Diese Farbe ist sichtbar, wenn der Mode-Parameter auf festgelegt ist <xref:System.Drawing.Drawing2D.WrapMode.Clamp> und das an die Methode übergebenen Quell Rechteck <xref:System.Drawing.Graphics.DrawImage%2A> größer als das Bild selbst ist.



## Examples
 Das folgende Codebeispiel ist für die Verwendung mit Windows Forms konzipiert und erfordert, wobei es sich um <xref:System.Windows.Forms.PaintEventArgs> `e` einen Parameter des- <xref:System.Windows.Forms.Control.Paint> Ereignis Handlers handelt. Der Code führt die folgenden Aktionen aus:

1.  Öffnet einen <xref:System.Drawing.Image> aus der Circle3.jpg Datei (ein kleiner, rot gefüllte Kreis) und zeichnet ihn auf dem Bildschirm.

2.  Erstellt ein <xref:System.Drawing.Imaging.ImageAttributes> -Objekt und legt die- <xref:System.Drawing.Drawing2D.WrapMode> Enumeration auf fest <xref:System.Drawing.Drawing2D.WrapMode.Tile> .

3.  Erstellt ein <xref:System.Drawing.TextureBrush> mithilfe des Bilds aus der Circle3.jpg Datei.

4.  Zeichnet ein Rechteck auf dem Bildschirm, der mit den kleinen, rot gefüllten Kreisen gefüllt ist.

 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode, color As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Drawing2D.WrapMode" />, das angibt, wie ein Bereich mit Kopien eines Bildes gekachelt wird.</param>
        <param name="color">Ein <see cref="T:System.Drawing.Imaging.ImageAttributes" />-Objekt, das die Farbe der Pixel außerhalb eines gerenderten Bilds angibt. Diese Farbe wird angezeigt, wenn der mode-Parameter auf <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> festgelegt wird und das an <see cref="Overload:System.Drawing.Graphics.DrawImage" /> übergebene Quellrechteck größer als das eigentliche Bild ist.</param>
        <summary>Legt den Umbruchmodus und die Farbe fest, mit denen festgelegt wird, wie eine Struktur in einer Form oder an den Begrenzungen der Form gekachelt werden soll. Wenn eine Struktur kleiner als eine Form ist, wird sie in der Form gekachelt, um sie auszufüllen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Ein Codebeispiel finden Sie unter der- <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> Methode.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode, color As Color, clamp As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color * bool -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color, clamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">Ein Element von <see cref="T:System.Drawing.Drawing2D.WrapMode" />, das angibt, wie ein Bereich mit Kopien eines Bildes gekachelt wird.</param>
        <param name="color">Ein Farbobjekt, das die Farbe der Pixel außerhalb eines gerenderten Bilds angibt. Diese Farbe wird angezeigt, wenn der mode-Parameter auf <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> festgelegt wird und das an <see cref="Overload:System.Drawing.Graphics.DrawImage" /> übergebene Quellrechteck größer als das eigentliche Bild ist.</param>
        <param name="clamp">Dieser Parameter hat keine Auswirkungen. Legen Sie hierfür <see langword="false" /> fest.</param>
        <summary>Legt den Umbruchmodus und die Farbe fest, mit denen festgelegt wird, wie eine Struktur in einer Form oder an den Begrenzungen der Form gekachelt werden soll. Wenn eine Struktur kleiner als eine Form ist, wird sie in der Form gekachelt, um sie auszufüllen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Ein Codebeispiel finden Sie unter der- <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> Methode.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
