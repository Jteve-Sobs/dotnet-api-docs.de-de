<Type Name="ProjectProperty" FullName="Microsoft.Build.Evaluation.ProjectProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33bb8f5c25dfdd123a2ab8e4b7245d67f5be7603" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36736854" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProjectProperty : IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectProperty extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectProperty&#xA;Implements IEquatable(Of ProjectProperty)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectProperty abstract : IEquatable&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt;" />
  <TypeSignature Language="F#" Value="type ProjectProperty = class&#xA;    interface IEquatable&lt;ProjectProperty&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{UnevaluatedValue}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e1aee-101">Stellt eine ausgewertete Entwurfszeiteigenschaft dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1aee-101">Represents an evaluated design-time property.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedValue : string" Usage="Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProperty.EvaluatedValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-102">Ruft den ausgewerteten Eigenschaftswert ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-102">Gets the evaluated property value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-103">Gibt den ausgewerteten Eigenschaftswert zurück, der nie NULL ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-103">Returns the evaluated property value, which is never null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aee-104">Kann nicht direkt festgelegt werden. nur der nicht ausgewertete Wert kann festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="e1aee-104">Cannot be set directly; only the unevaluated value can be set.</span></span> <span data-ttu-id="e1aee-105">Der ausgewertete Wert enthält kein Escape-Zeichensequenzen.</span><span class="sxs-lookup"><span data-stu-id="e1aee-105">The evaluated value contains no character escape sequences.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnvironmentProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsEnvironmentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnvironmentProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEnvironmentProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEnvironmentProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnvironmentProperty : bool" Usage="Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-106">Bestimmt, ob die Eigenschaft aus den Umgebungsvariablen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-106">Determines whether the property originated from the environment variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-107">True, wenn die Eigenschaft aus einer Umgebungsvariablen stammt, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-107">True if the property originated from an environment variable; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGlobalProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsGlobalProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGlobalProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsGlobalProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsGlobalProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGlobalProperty : bool" Usage="Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-108">Bestimmt, ob die Eigenschaft eine globale Eigenschaft ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-108">Determines whether the property is a global property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-109">True, wenn die Eigenschaft eine globale Eigenschaft ist, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-109">True if the property is a global property; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public abstract bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ProjectProperty.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-110">Bestimmt, ob die Eigenschaft aus einer importierten Datei stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-110">Determines whether the property originates from an imported file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-111">Gibt true zurück, wenn die Eigenschaft aus einer importierten Datei stammt und nicht aus einer Umgebungsvariablen, globalen Eigenschaft oder reservierten Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-111">Returns true if the property originates from an imported file and not from an environment variable, a global property, or a reserved property.</span>
          </span>
          <span data-ttu-id="e1aee-112">Andernfalls wird False zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-112">Returns false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReservedProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsReservedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReservedProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReservedProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReservedProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReservedProperty : bool" Usage="Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-113">Bestimmt, ob die Eigenschaft eine reservierte Eigenschaft ist, z. B. 'MSBuildProjectFile'.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-113">Determines whether the property is a reserved property, for example 'MSBuildProjectFile'.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-114">Gibt true zurück, wenn die Eigenschaft eine reservierte Eigenschaft ist, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-114">Returns true if the property is a reserved property; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Build.Evaluation.ProjectProperty.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProperty.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-115">Ruft den Namen der Eigenschaft ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-115">Gets the name of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-116">Gibt den Name der Eigenschaft zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-116">Returns the name of the property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Build.Evaluation.ProjectProperty Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectProperty Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Predecessor As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Build::Evaluation::ProjectProperty ^ Predecessor { Microsoft::Build::Evaluation::ProjectProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Predecessor : Microsoft.Build.Evaluation.ProjectProperty" Usage="Microsoft.Build.Evaluation.ProjectProperty.Predecessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-117">Ruft die letzte Eigenschaft ab, die bei der Auswertung von dieser Eigenschaft überschrieben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-117">Gets the last property that was overridden by this property during evaluation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-118">Gibt die letzte Eigenschaft zurück, deren Wert bei der Auswertung von dieser Eigenschaft überschrieben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-118">Returns the last property whose value was overridden by this property during evaluation.</span>
          </span>
          <span data-ttu-id="e1aee-119">Gibt NULL zurück, wenn die Eigenschaft nicht überschrieben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-119">Returns null if the property has not been overridden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aee-120">Diese Methode sucht alle Eigenschaften mit dem gleichen Namen, diese Punkte oben in der logischen Projektdatei und deren Bedingungen auf "true" ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e1aee-120">This method searches for all properties with the same name that lie above in the logical project file, and whose conditions evaluate to true.</span></span>  
  
 <span data-ttu-id="e1aee-121">Wenn das Projekt nicht seit der letzten Änderung erneut ausgewertet wurde, kann dieser Wert falsch sein.</span><span class="sxs-lookup"><span data-stu-id="e1aee-121">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Project : Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.ProjectProperty.Project" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-122">Ruft das Projekt ab, das diese Eigenschaft enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-122">Gets the project that contains this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-123">Gibt das Projekt zurück, das diese Eigenschaft enthält und nie NULL ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-123">Returns the project that contains this property, which is never null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectProperty&gt;.Equals (Microsoft.Build.Evaluation.ProjectProperty other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals(class Microsoft.Build.Evaluation.ProjectProperty other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectProperty&gt;#Equals(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectProperty) As Boolean Implements IEquatable(Of ProjectProperty).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals(Microsoft::Build::Evaluation::ProjectProperty ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="e1aee-124">Die Projekteigenschaft, mit der verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-124">The project property to be compared to</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1aee-125">Vergleicht diese Projekteigenschaft mit der angegebenen Projekteigenschaft auf Gleichheit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-125">Compares this project property with the given project property for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1aee-126">Gibt „true“ zurück, wenn die Projekteigenschaften gleich sind, andernfalls „false“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-126">Returns true if the project properties are equal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public abstract string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnevaluatedValue : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-127">Ruft den nicht ausgewerteten Eigenschaftswert ab oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-127">Gets or sets the unevaluated property value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-128">Gibt den nicht ausgewerteten Eigenschaftswert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-128">Returns the unevaluated property value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aee-129">Der Setter-Methode aktualisiert den nicht ausgewerteten Wert und den ausgewerteten Wert jedoch wirkt sich etwas im Projekt nicht bis zum erneuten Auswertung.</span><span class="sxs-lookup"><span data-stu-id="e1aee-129">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="e1aee-130">Die enthaltende Projekt als geändert markiert.</span><span class="sxs-lookup"><span data-stu-id="e1aee-130">The containing project is marked as modified.</span></span> <span data-ttu-id="e1aee-131">Nicht ausgewerteten Werte werden als enthalten Escapezeichensequenzen nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="e1aee-131">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Build.Construction.ProjectPropertyElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectPropertyElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Xml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Xml As ProjectPropertyElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Build::Construction::ProjectPropertyElement ^ Xml { Microsoft::Build::Construction::ProjectPropertyElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectPropertyElement" Usage="Microsoft.Build.Evaluation.ProjectProperty.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectPropertyElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1aee-132">Ruft das zugeordnete Eigenschaftenelement ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-132">Gets the associated property element.</span>
          </span>
          <span data-ttu-id="e1aee-133">Unterstützende XML-Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-133">Backing XML property.</span>
          </span>
          <span data-ttu-id="e1aee-134">Nur NULL, wenn dies eine globale, integrierte oder Umgebungseigenschaft ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-134">Null only if this is a global, environment, or built-in property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1aee-135">Gibt das zugeordnete Eigenschaftenelement zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-135">Returns the associated property element.</span>
          </span>
          <span data-ttu-id="e1aee-136">Gibt NULL zurück, wenn dies eine globale oder reservierte Eigenschaft ist oder aus einer Umgebungsvariablen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1aee-136">Return null if this is a global or reserved property, or originates from an environment variable.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>