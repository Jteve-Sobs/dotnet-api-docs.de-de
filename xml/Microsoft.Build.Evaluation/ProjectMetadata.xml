<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e87b3c9ee48d4423e50f5b329b1c2c9462a83488" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="40000993" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <TypeSignature Language="F#" Value="type ProjectMetadata = class&#xA;    interface IEquatable&lt;ProjectMetadata&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eeccb-101">Stellt ausgewertete Entwurfszeitmetadaten dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeccb-101">Represents evaluated design-time metadata.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeccb-102">Zur Darstellung von integrierten Metadaten like % (Dateiname) verwendet nie.</span><span class="sxs-lookup"><span data-stu-id="eeccb-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="eeccb-103">Die Metadaten sind immer Projektquellcode zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="eeccb-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="eeccb-104">Die Metadaten enthalten ist, indem Sie entweder eine <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> oder <xref:Microsoft.Build.Evaluation.ProjectItem>.</span><span class="sxs-lookup"><span data-stu-id="eeccb-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-105">Speicherort des Condition-Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-105">Location of the Condition attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-106">Gibt den Speicherort des Condition-Attributs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-106">Returns Condition attribute location.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedValue : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-107">Ruft den ausgewerteten Metadatenwert ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-107">Gets the evaluated metadata value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-108">Gibt den ausgewerteten Metadatenwert zurück, der nie NULL ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-108">Returns the evaluated metadata value, which is never null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeccb-109">Nicht direkt festgelegt werden: nur der nicht ausgewertete Wert kann festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="eeccb-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-110">Bestimmt, ob die Metadaten aus einer importierten Datei stammen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-110">Determines if the metadata originated from an imported file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-111">Gibt true zurück, wenn die Metadaten aus einer importierten Datei stammen, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-111">Returns true if the metadata originated from an imported file; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-112">Ruft den Elementtyp der enthaltenden Elementdefinition oder des Elements ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-112">Gets the item type of the containing item definition or item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-113">Gibt den Elementtyp der enthaltenden Elementdefinition oder des Elements zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-113">Returns the item type of the containing item definition or item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-114">Speicherort des Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-114">Location of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-115">Gibt den Elementspeicherort zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-115">Returns the element location.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-116">Ruft den Namen der Metadaten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-116">Gets the name of the metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-117">Gibt den Namen der Metadaten zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-117">Returns the name of the metadata.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Predecessor : Microsoft.Build.Evaluation.ProjectMetadata" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-118">Ruft die letzten Metadaten (aus einer Elementdefinition oder einem Element) ab, die bei der Auswertung von diesen Metadaten überschrieben wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-119">Gibt die letzten Metadaten (aus einer Elementdefinition oder einem Element) zurück, deren Wert bei der Auswertung von diesen Metadaten überschrieben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-119">Returns the last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation.</span>
          </span>
          <span data-ttu-id="eeccb-120">Gibt NULL zurück, wenn die Metadaten nicht überschrieben wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-120">Returns null if the metadata has not been overridden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeccb-121">Diese Methode verwendet wird, sucht alle Metadaten mit dem gleichen Namen, Lüge oben in der logischen Datei, und die Elementdefinitionen für den gleichen Elementtyp enthalten sind und, deren Bedingungen "true" ergeben.</span><span class="sxs-lookup"><span data-stu-id="eeccb-121">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="eeccb-122">Wenn die Metadaten mit einem Element enthalten ist, sucht diese Methode alle vorherigen Metadaten mit dem gleichen Namen und das Element, dessen Bedingung "true" ergeben.</span><span class="sxs-lookup"><span data-stu-id="eeccb-122">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="eeccb-123">Elementdefinitionen werden vor Elementen durchsucht werden.</span><span class="sxs-lookup"><span data-stu-id="eeccb-123">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="eeccb-124">Wenn das Projekt nicht seit der letzten Änderung erneut ausgewertet wurde, kann dieser Wert falsch sein.</span><span class="sxs-lookup"><span data-stu-id="eeccb-124">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Project : Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-125">Ruft das Projekt ab, das diese Metadaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-125">Gets the project that contains this metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-126">Gibt das Projekt zurück, das diese Metadaten enthält, und ist nie NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-126">Returns the project that contains this metadata, which is never null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="eeccb-127">Die Projektmetadaten, mit denen verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-127">The project metadata to be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeccb-128">Vergleicht diese Projektmetadaten mit den angegebenen Projektmetadaten auf Gleichheit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-128">Compares this project metadata with the given project metadata for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeccb-129">Gibt „true“ zurück, wenn die Projektmetadaten gleich sind, andernfalls „false“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-129">Returns true if the project metadata are equal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnevaluatedValue : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-130">Ruft den nicht ausgewerteten Metadatenwert ab oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-130">Gets or sets the unevaluated metadata value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-131">Gibt den nicht ausgewerteten Metadatenwert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-131">Returns the unevaluated metadata value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeccb-132">Die Set-Methode sowohl für den nicht ausgewerteten Wert als auch für den ausgewerteten Wert aktualisiert, aber Sie hat keine Auswirkungen auf etwas anderes in das Projekt erst eine erneute Auswertung.</span><span class="sxs-lookup"><span data-stu-id="eeccb-132">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="eeccb-133">Z. B. – wenn ein Teil der Metadaten, die mit dem Namen "m" für das Element vom Typ "i" geändert wird, es hat keine Auswirkungen auf "j" der von ausgewertet wird "@(j ->"% (m)")" bis zum erneuten bereitstellungsbewertung.</span><span class="sxs-lookup"><span data-stu-id="eeccb-133">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="eeccb-134">– Wenn die nicht ausgewertete Wert des "m" auf ein festgelegt ist, die durch die Auswertung, z. B. "$(p)", geändert wird der ausgewertete Wert wird festgelegt werden, "$(p)" bis zum erneuten bereitstellungsbewertung.</span><span class="sxs-lookup"><span data-stu-id="eeccb-134">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="eeccb-135">Festlegen von Metadaten über eine <xref:Microsoft.Build.Evaluation.ProjectItem> kann dazu führen, dass die zugeordnete <xref:Microsoft.Build.Construction.ProjectItemElement> aufgeteilt werden, wenn das Element aus einer Liste, Platzhalter oder Semikolon Elementliste stammt,.</span><span class="sxs-lookup"><span data-stu-id="eeccb-135">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="eeccb-136">Da es sich um eine Absicht, gelten nur für dieses bestimmte Element impliziert.</span><span class="sxs-lookup"><span data-stu-id="eeccb-136">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="eeccb-137">Festlegen von Metadaten durch ProjectMetadata bewirkt nicht aufteilen, da es eine Absicht beeinflusst alle Elemente, die mit dem zugrunde liegenden impliziert <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span><span class="sxs-lookup"><span data-stu-id="eeccb-137">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="eeccb-138">Das enthaltende Projekt wird als geändert markiert.</span><span class="sxs-lookup"><span data-stu-id="eeccb-138">The containing project is marked as modified.</span></span> <span data-ttu-id="eeccb-139">Nicht ausgewerteten Werte wird angenommen, dass enthält Zeichenfolgen mit Escapezeichen versehen, je nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="eeccb-139">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="eeccb-140">Diese Methode kann nicht auf das Projekt selbst konsistent lassen.</span><span class="sxs-lookup"><span data-stu-id="eeccb-140">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectMetadataElement" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeccb-141">Ruft das zugeordnete Projektmetadatenelement ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-141">Gets the associated project metadata element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeccb-142">Gibt das zugeordnete Projektmetadatenelement zurück und kann nie NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeccb-142">Returns the associated project metadata element, which can never be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>