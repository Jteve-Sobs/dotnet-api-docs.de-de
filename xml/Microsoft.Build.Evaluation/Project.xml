<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata><Meta Name="ms.openlocfilehash" Value="205bf7bdbf40fbfacaf77773b82a9e411fc551de" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72405699" /></Metadata><TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f6215-101">Stellt ein Projekt mit Entwurfszeitsemantik dar.</span><span class="sxs-lookup"><span data-stu-id="f6215-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="f6215-102">Mit dieser Klasse können Projektdateien geladen, Elemente und Eigenschaften bearbeitet und Projekte erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6215-103">Erstellt ein leeres Projekt mit den globalen Eigenschaften der globalen Projektauflistung und der Standardtoolsversion.</span><span class="sxs-lookup"><span data-stu-id="f6215-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6215-104">Erstellt ein leeres Projekt mit den globalen Eigenschaften der globalen Projektauflistung und der Standardtoolsversion.</span><span class="sxs-lookup"><span data-stu-id="f6215-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-105">Dieses Projekt wird der globalen Projekt Auflistung hinzugefügt, wenn es den vollständigen Pfad zur Quell Projektdatei erhält, in der Regel durch Speichern des Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f6215-106">Für die Auswertung zu verwendendes ProjectRootElement.</span><span class="sxs-lookup"><span data-stu-id="f6215-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="f6215-107">Erstellt ein leeres Projekt und wertet es anhand des angegebenen Projektstamms und der globalen Eigenschaften der globalen Projektauflistung und der Standardtoolsversion aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-108">Dieses Projekt wird der globalen Projekt Auflistung hinzugefügt, wenn diesem Projekt oder dem angegebenen Projektstamm der vollständige Pfad zur Quell Projektdatei zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="f6215-109">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-110">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="f6215-111">Die Projektauflistung, der das neue Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="f6215-112">Erstellt ein leeres Projekt mit den globalen Eigenschaften der angegebenen Projektauflistung und der Standardtoolsversion.</span><span class="sxs-lookup"><span data-stu-id="f6215-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-113">Dieses Projekt wird der angegebenen Projekt Auflistung hinzugefügt, wenn es den vollständigen Pfad zur Quell Projektdatei erhält, in der Regel durch Speichern des Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f6215-114">Die Quellprojektdatei, die ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="f6215-115">Erstellt ein Projekt und wertet es anhand der angegebenen Quellprojektdatei und mit den globalen Eigenschaften der globalen Projektauflistung und der Standardtoolsversion aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-116">Das Projekt wird der globalen Projekt Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="f6215-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="f6215-117">Löst InvalidOperationException aus, wenn bereits ein Projekt in der Projekt Auflistung vorhanden ist, das diese Quell Projektdatei auswertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="f6215-118">Kann e/a-bezogene Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="f6215-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="f6215-119">Wenn die Evaluierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="f6215-120">XML-Reader zum Lesen von Projektquellcode.</span><span class="sxs-lookup"><span data-stu-id="f6215-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="f6215-121">Erstellt ein Projekt und wertet den Quellcode vom angegebenen XML-Reader aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="f6215-122">Der Quellcode wird mit den globalen Eigenschaften der globalen Projektauflistung und der Standardtoolsversion ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-123">Dieses Projekt wird der globalen Projekt Auflistung hinzugefügt, wenn es den vollständigen Pfad zur Quell Projektdatei erhält, in der Regel durch Speichern des Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="f6215-124">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-125">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f6215-126">Der Projektstamm, der für die Auswertung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-127">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-127">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-128">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-129">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-129">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-130">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-130">May be null.</span></span></param>
        <summary><span data-ttu-id="f6215-131">Erstellt ein leeres Projekt und wertet es anhand des angegebenen Projektstamms und mit den angegebenen globalen Eigenschaften und der angegebenen Toolsversion aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-132">Dieses Projekt wird der globalen Projekt Auflistung hinzugefügt, wenn diesem Projekt oder dem angegebenen Projektstamm der vollständige Pfad zur Quell Projektdatei zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="f6215-133">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-134">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="f6215-135">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-135">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-136">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-137">Die zum Auswerten des Projekts verwendete Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="f6215-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="f6215-138">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-139">Die Projektauflistung, der das neue Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="f6215-140">Erstellt ein leeres Projekt, das mit der angegebenen Projektauflistung, den angegebenen globalen Eigenschaften und der angegebenen Toolsversion ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-141">Das Projekt wird der angegebenen Projekt Auflistung hinzugefügt, wenn es den vollständigen Pfad zur Quell Projektdatei erhält, in der Regel durch Speichern des Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f6215-142">Der Pfad zur Quellprojektdatei, die ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-143">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-143">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-144">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-145">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-145">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-146">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-146">May be null.</span></span></param>
        <summary><span data-ttu-id="f6215-147">Erstellt ein Projekt und wertet es anhand der angegebenen Quellprojektdatei und mit den angegebenen globalen Eigenschaften und der angegebenen Toolsversion aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-148">Das Projekt wird der globalen Projekt Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="f6215-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="f6215-149">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-150">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="f6215-151">Kann e/a-bezogene Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="f6215-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="f6215-152">XML-Reader zum Lesen von Projektquellcode.</span><span class="sxs-lookup"><span data-stu-id="f6215-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-153">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-153">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-154">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-155">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-155">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-156">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-156">May be null.</span></span></param>
        <summary><span data-ttu-id="f6215-157">Erstellt ein Projekt und wertet den Quellcode vom angegebenen XML-Reader aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="f6215-158">Der Quellcode wird mit den angegebenen globalen Eigenschaften und der angegebenen Toolsversion ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-159">Dieses Projekt wird der globalen Projekt Auflistung hinzugefügt, wenn es den vollständigen Pfad zur Quell Projektdatei erhält, in der Regel durch Speichern des Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="f6215-160">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-161">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f6215-162">Der Projektstamm, der für die Auswertung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-163">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-163">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-164">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-165">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-165">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-166">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-167">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="f6215-168">Erstellt ein Projekt und wertet es anhand des angegebenen Projektstamms und mit den angegebenen globalen Eigenschaften und der angegebenen Toolsversion aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-169">Dieses Projekt wird der angegebenen Projekt Auflistung hinzugefügt, wenn entweder diesem Projekt oder dem angegebenen Projektstamm der vollständige Pfad zur Quell Projektdatei zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="f6215-170">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-171">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f6215-172">Der Pfad zur Quellprojektdatei, die ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-173">Die globalen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="f6215-173">The global properties.</span></span> <span data-ttu-id="f6215-174">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-175">Die Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="f6215-175">The tools version.</span></span> <span data-ttu-id="f6215-176">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-177">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-177">The project collection the project is added to.</span></span> <span data-ttu-id="f6215-178">Darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="f6215-179">Erstellt ein Projekt und wertet es anhand der angegebenen Quellprojektdatei und mit den angegebenen globalen Eigenschaften und der angegebenen Toolsversion aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-180">Das Projekt wird der angegebenen Projekt Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="f6215-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="f6215-181">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-182">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="f6215-183">Kann e/a-bezogene Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="f6215-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="f6215-184">XML-Reader zum Lesen von Projektquellcode.</span><span class="sxs-lookup"><span data-stu-id="f6215-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-185">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-185">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-186">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-187">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-187">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-188">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-189">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-189">The project collection the project is added to.</span></span> <span data-ttu-id="f6215-190">Darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="f6215-191">Erstellt ein Projekt und wertet den Quellcode vom angegebenen XML-Reader aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="f6215-192">Der Quellcode wird mit den angegebenen globalen Eigenschaften und der angegebenen Toolsversion ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-193">Dieses Projekt wird der angegebenen Projekt Auflistung hinzugefügt, wenn entweder diesem Projekt oder dem angegebenen Projektstamm der vollständige Pfad zur Quell Projektdatei zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="f6215-194">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-195">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f6215-196">Der Projektstamm, der für die Auswertung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-197">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-197">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-198">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-199">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-199">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-200">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-201">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-201">The project collection the project is added to.</span></span> <span data-ttu-id="f6215-202">Darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="f6215-203">Die für die Auswertung zu verwendenden Einstellungen für das Laden.</span><span class="sxs-lookup"><span data-stu-id="f6215-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="f6215-204">Erstellt ein Projekt und wertet es anhand des angegebenen Projektstamms und mit den angegebenen globalen Eigenschaften, der angegebenen Toolsversion und den angegebenen Einstellungen für das Laden aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-205">Dieses Projekt wird der angegebenen Projekt Auflistung hinzugefügt, wenn entweder diesem Projekt oder dem angegebenen Projektstamm der vollständige Pfad zur Quell Projektdatei zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="f6215-206">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-207">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f6215-208">Der Pfad zur Quellprojektdatei, die ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-209">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-209">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-210">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-211">Die Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="f6215-211">The tools version.</span></span> <span data-ttu-id="f6215-212">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-213">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-213">The project collection the project is added to.</span></span> <span data-ttu-id="f6215-214">Darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="f6215-215">Die für die Auswertung zu verwendenden Einstellungen für das Laden.</span><span class="sxs-lookup"><span data-stu-id="f6215-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="f6215-216">Erstellt ein Projekt und wertet es anhand der angegebenen Quellprojektdatei und mit den angegebenen globalen Eigenschaften, der angegebenen Toolsversion und den angegebenen Einstellungen für das Laden aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-217">Das Projekt wird der angegebenen Projekt Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="f6215-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="f6215-218">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-219">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="f6215-220">Kann e/a-bezogene Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="f6215-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="f6215-221">XML-Reader zum Lesen von Projektquellcode.</span><span class="sxs-lookup"><span data-stu-id="f6215-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-222">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-222">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-223">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-224">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-224">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-225">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-226">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-226">The project collection the project is added to.</span></span> <span data-ttu-id="f6215-227">Darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="f6215-228">Die für die Auswertung zu verwendenden Einstellungen für das Laden.</span><span class="sxs-lookup"><span data-stu-id="f6215-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="f6215-229">Erstellt ein Projekt und wertet den Quellcode vom angegebenen XML-Reader aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="f6215-230">Der Quellcode wird mit den angegebenen globalen Eigenschaften und der angegebenen Toolsversion ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-231">Dieses Projekt wird der angegebenen Projekt Auflistung hinzugefügt, wenn entweder diesem Projekt oder dem angegebenen Projektstamm der vollständige Pfad zur Quell Projektdatei zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="f6215-232">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-233">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f6215-234">Der Projektstamm, der für die Auswertung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-235">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-235">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-236">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-237">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-237">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-238">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="f6215-239">Sub-Toolsetversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="f6215-240">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-241">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-241">The project collection the project is added to.</span></span> <span data-ttu-id="f6215-242">Darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="f6215-243">Die für die Auswertung zu verwendenden Einstellungen für das Laden.</span><span class="sxs-lookup"><span data-stu-id="f6215-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="f6215-244">Erstellt ein Projekt und wertet es anhand des angegebenen Projektstamms und mit den angegebenen globalen Eigenschaften, den Tool- und Unter-Toolset-Versionen, der Projektauflistung und den angegebenen Einstellungen für das Laden aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-245">Dieses Projekt wird der angegebenen Projekt Auflistung hinzugefügt, wenn entweder diesem Projekt oder dem angegebenen Projektstamm der vollständige Pfad zur Quell Projektdatei zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="f6215-246">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-247">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f6215-248">Der Pfad zur Quellprojektdatei, die ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-249">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-249">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-250">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-251">Die Toolsversion.</span><span class="sxs-lookup"><span data-stu-id="f6215-251">The tools version.</span></span> <span data-ttu-id="f6215-252">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="f6215-253">Die Version des Sub-Toolsets.</span><span class="sxs-lookup"><span data-stu-id="f6215-253">The sub toolset version.</span></span> <span data-ttu-id="f6215-254">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-255">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-255">The project collection the project is added to.</span></span> <span data-ttu-id="f6215-256">Darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="f6215-257">Die für die Auswertung zu verwendenden Einstellungen für das Laden.</span><span class="sxs-lookup"><span data-stu-id="f6215-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="f6215-258">Erstellt ein Projekt und wertet es anhand der angegebenen Quellprojektdatei und mit den angegebenen globalen Eigenschaften, den Tool- und Unter-Toolset-Versionen, der Projektauflistung und den angegebenen Einstellungen für das Laden aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-259">Das Projekt wird der angegebenen Projekt Auflistung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="f6215-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="f6215-260">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-261">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="f6215-262">Kann e/a-bezogene Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="f6215-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="f6215-263">XML-Reader zum Lesen von Projektquellcode.</span><span class="sxs-lookup"><span data-stu-id="f6215-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f6215-264">Globale Eigenschaften für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-264">Global properties to evaluate with.</span></span> <span data-ttu-id="f6215-265">Ist möglicherweise NULL, in diesem Fall werden die globalen Eigenschaften der enthaltenden Projektauflistung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f6215-266">Toolsversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-266">Tools version to evaluate with.</span></span> <span data-ttu-id="f6215-267">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="f6215-268">Sub-Toolsetversion für die Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="f6215-269">Ist möglicherweise NULL.</span><span class="sxs-lookup"><span data-stu-id="f6215-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f6215-270">Die Projektauflistung, der das Projekt hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-270">The project collection the project is added to.</span></span> <span data-ttu-id="f6215-271">Darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="f6215-272">Die für die Auswertung zu verwendenden Einstellungen für das Laden.</span><span class="sxs-lookup"><span data-stu-id="f6215-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="f6215-273">Erstellt ein Projekt und wertet den Quellcode vom angegebenen XML-Reader aus.</span><span class="sxs-lookup"><span data-stu-id="f6215-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="f6215-274">Der Quellcode wird mit den gegebenen globalen Eigenschaften, Tool- und Unter-Toolset-Versionen, der Projektauflistung und den Ladeeinstellungen ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-275">Dieses Projekt wird der angegebenen Projekt Auflistung hinzugefügt, wenn entweder diesem Projekt oder dem angegebenen Projektstamm der vollständige Pfad zur Quell Projektdatei zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="f6215-276">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="f6215-277">Löst InvalidOperationException aus, wenn in der Projekt Auflistung bereits ein entsprechendes Projekt geladen ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6215-278">Fügt ein Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="f6215-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f6215-279">Der Elementtyp des hinzugefügten Elements.</span><span class="sxs-lookup"><span data-stu-id="f6215-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="f6215-280">Include-Attribut des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="f6215-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="f6215-281">Fügt dem Projekt ein Element ohne Metadaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="f6215-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="f6215-282">Das hinzugefügte Element.</span><span class="sxs-lookup"><span data-stu-id="f6215-282">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-283">Alle Metadaten können später hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-283">Any metadata can be added later.</span></span> <span data-ttu-id="f6215-284">Ändert die Projekt Quelle nicht, wenn ein Platzhalter Ausdruck bereits das neue Element enthält.</span><span class="sxs-lookup"><span data-stu-id="f6215-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="f6215-285">Die Auswertung erfolgt auf Grundlage der bestmöglichen Leistung.</span><span class="sxs-lookup"><span data-stu-id="f6215-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="f6215-286">Elemente, die in der Projekt Quelle nach dem neuen Element definiert sind, können für die Auswertung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="f6215-287">Nur dieses Element wird ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-287">Only this item is evaluated.</span></span> <span data-ttu-id="f6215-288">Andere Elemente, die möglicherweise von dieser abhängen, sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="f6215-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f6215-289">Der Elementtyp des hinzugefügten Elements.</span><span class="sxs-lookup"><span data-stu-id="f6215-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="f6215-290">Include-Attribut des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="f6215-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="f6215-291">Die Metadaten des hinzugefügten Elements.</span><span class="sxs-lookup"><span data-stu-id="f6215-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="f6215-292">Fügt dem Projekt ein Element mit den angegebenen Metadaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="f6215-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="f6215-293">Das hinzugefügte Element.</span><span class="sxs-lookup"><span data-stu-id="f6215-293">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-294">Die Metadaten können NULL sein. Dies bedeutet, dass keine Metadaten angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="f6215-295">Die Auswertung erfolgt auf Grundlage der bestmöglichen Leistung.</span><span class="sxs-lookup"><span data-stu-id="f6215-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="f6215-296">Elemente, die in der Projekt Quelle nach dem neuen Element definiert sind, können für die Auswertung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="f6215-297">Nur dieses Element wird ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-297">Only this item is evaluated.</span></span> <span data-ttu-id="f6215-298">Andere Elemente, die möglicherweise von dieser abhängen, sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="f6215-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6215-299">Fügt dem Projekt ein Element ohne Metadaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="f6215-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="f6215-300">Ermittelt nicht, ob ein vorhandener Platzhalter bereits mit dem neuen Element übereinstimmt, außer wenn es das erste Element in einer Elementgruppe ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="f6215-301">Sucht das neue Element nicht in der Nähe ähnlicher Elemente.</span><span class="sxs-lookup"><span data-stu-id="f6215-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f6215-302">Der hinzuzufügende Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="f6215-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="f6215-303">Das nicht ausgewertete Include-Attribut, das dem Element hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="f6215-304">Fügt dem Projekt ein Element ohne Metadaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="f6215-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="f6215-305">Ermittelt nicht, ob ein vorhandener Platzhalter bereits mit dem neuen Element übereinstimmt, außer wenn es das erste Element in einer Elementgruppe ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="f6215-306">Sucht das neue Element nicht in der Nähe ähnlicher Elemente.</span><span class="sxs-lookup"><span data-stu-id="f6215-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="f6215-307">Eine Liste der hinzugefügten Projektelemente.</span><span class="sxs-lookup"><span data-stu-id="f6215-307">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-308">Fügt das Element an die erste Element Gruppe an, die nicht über eine Bedingung verfügt und entweder keine untergeordneten Elemente aufweist oder deren erstes untergeordnetes Element ein Element desselben Typs ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="f6215-309">Wertet aus:-erweitert mit allen Elementen.</span><span class="sxs-lookup"><span data-stu-id="f6215-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="f6215-310">Elemente, die in der XML-Datei unterhalb des neuen Elements definiert sind, können verwendet werden, obwohl Sie in einer realen Auswertung nicht wären.</span><span class="sxs-lookup"><span data-stu-id="f6215-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="f6215-311">Nur dieses Element wird ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-311">Only this item is evaluated.</span></span> <span data-ttu-id="f6215-312">Andere Elemente, die möglicherweise von dieser abhängen, sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="f6215-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="f6215-313">Dies ist ein Vorteil, dass es verstanden wird, dass das Projekt nicht notwendigerweise in einem vollständig selbst konsistenten Zustand belassen wird, bis eine erneute Auswertung erfolgt.</span><span class="sxs-lookup"><span data-stu-id="f6215-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f6215-314">Der hinzuzufügende Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="f6215-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="f6215-315">Das nicht ausgewertete Include-Attribut, das dem Element hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="f6215-316">Die Metadaten, die hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="f6215-317">Fügt dem Projekt ein Element mit Metadaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="f6215-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="f6215-318">Metadaten sind möglicherweise NULL und geben keine Metadaten an.</span><span class="sxs-lookup"><span data-stu-id="f6215-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="f6215-319">Ermittelt nicht, ob ein vorhandener Platzhalter bereits mit dem neuen Element übereinstimmt, außer wenn es das erste Element in einer Elementgruppe ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="f6215-320">Sucht das neue Element nicht in der Nähe ähnlicher Elemente.</span><span class="sxs-lookup"><span data-stu-id="f6215-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="f6215-321">Eine Liste der hinzugefügten Projektelemente.</span><span class="sxs-lookup"><span data-stu-id="f6215-321">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-322">Fügt das Element an die erste Element Gruppe an, die nicht über eine Bedingung verfügt und entweder keine untergeordneten Elemente aufweist oder deren erstes untergeordnetes Element ein Element desselben Typs ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="f6215-323">Wertet aus:-erweitert mit allen Elementen.</span><span class="sxs-lookup"><span data-stu-id="f6215-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="f6215-324">Elemente, die in der XML-Datei unterhalb des neuen Elements definiert sind, können verwendet werden, obwohl Sie in einer realen Auswertung nicht wären.</span><span class="sxs-lookup"><span data-stu-id="f6215-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="f6215-325">Nur dieses Element wird ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-325">Only this item is evaluated.</span></span> <span data-ttu-id="f6215-326">Andere Elemente, die möglicherweise von dieser abhängen, sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="f6215-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="f6215-327">Dies ist ein Vorteil, dass es verstanden wird, dass das Projekt nicht notwendigerweise in einem vollständig selbst konsistenten Zustand belassen wird, bis eine erneute Auswertung erfolgt.</span><span class="sxs-lookup"><span data-stu-id="f6215-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-328">Ruft alle Elementdefinitionsmetadaten ab, die bei der Auswertung gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="f6215-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="f6215-329">Alle Element Definitions Metadaten, die während der Auswertung gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="f6215-329">All item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="f6215-330">Dies schließt keine Elemente ein, deren Bedingungen nicht true ergeben haben, und keine seit der letzten Auswertung hinzugefügten Elementdefinitionsmetadaten.</span><span class="sxs-lookup"><span data-stu-id="f6215-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-331">Element Metadaten werden während der zweiten Evaluierungsphase gelesen.</span><span class="sxs-lookup"><span data-stu-id="f6215-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="f6215-332">Im Unterschied zu den Metadaten, die von der itemdefinitions-Eigenschaft zurückgegeben werden, werden diese Metadaten geordnet und enthalten alle Metadaten, die anschließend mit demselben Namen und Elementtyp überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-333">Ruft einen Enumerator über alle bei der Auswertung gefundenen Elemente ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="f6215-334">Diese werden beim dritten Auswertungsdurchlauf gelesen.</span><span class="sxs-lookup"><span data-stu-id="f6215-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="f6215-335">Ein Enumerator für alle Elemente, die während der Auswertung gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="f6215-335">An enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="f6215-336">Diese werden beim dritten Auswertungsdurchlauf gelesen.</span><span class="sxs-lookup"><span data-stu-id="f6215-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-337">Im Gegensatz zu den Elementen, die von der Items-Eigenschaft zurückgegeben werden, werden diese in Bezug auf alle anderen Elemente, die während der Auswertung gefunden werden, angeordnet, nicht nur in Bezug auf Elemente desselben Elementtyps.</span><span class="sxs-lookup"><span data-stu-id="f6215-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="f6215-338">Bei manchen Anwendungen ist diese gesamte gegenseitige Reihenfolge von Bedeutung, und solche Hosts können diese Eigenschaft verwenden.</span><span class="sxs-lookup"><span data-stu-id="f6215-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="f6215-339">Die-Enumeration enthält keine Elemente, deren Bedingungen nicht als true ausgewertet wurden, und enthält auch keine Elemente, die seit der letzten Auswertung hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="f6215-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-340">Ruft alle während der Auswertung gefundenen Eigenschaften ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="f6215-341">Alle während der Auswertung gefundenen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="f6215-341">All properties encountered during evaluation.</span></span> <span data-ttu-id="f6215-342">Dies schließt keine Eigenschaften ein, deren Bedingungen nicht true ergeben haben, und keine seit der letzten Auswertung hinzugefügten Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="f6215-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-343">Diese Eigenschaften werden während der ersten Evaluierungsphase gelesen.</span><span class="sxs-lookup"><span data-stu-id="f6215-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="f6215-344">Anders als Eigenschaften, die von der Properties-Eigenschaft zurückgegeben werden, werden diese geordnet und enthalten alle Eigenschaften, die anschließend mit dem gleichen Namen überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6215-345">Erstellt dieses Projekt mit den Standardzielen.</span><span class="sxs-lookup"><span data-stu-id="f6215-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6215-346">Erstellt dieses Projekt mit den Standardzielen.</span><span class="sxs-lookup"><span data-stu-id="f6215-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="f6215-347"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-347"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-348">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-349">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="f6215-350">Die Protokollierung, die bei der Builderstellung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="f6215-351">Erstellt dieses Projekt mit den Standardzielen und der angegebenen Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="f6215-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="f6215-352"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-352"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-353">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-354">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="f6215-355">Ein Enumerator über alle Protokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="f6215-356">Erstellt dieses Projekt mit den Standardzielen und den angegebenen Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="f6215-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="f6215-357"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-357"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-358">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-359">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f6215-360">Das zu erstellende Ziel.</span><span class="sxs-lookup"><span data-stu-id="f6215-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="f6215-361">Erstellt dieses Projekt und erstellt dabei das angegebene Ziel.</span><span class="sxs-lookup"><span data-stu-id="f6215-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="f6215-362"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-362"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-363">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-364">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f6215-365">Ein Array von Zielen, das erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="f6215-366">Erstellt dieses Projekt und erstellt dabei die angegebenen Ziele.</span><span class="sxs-lookup"><span data-stu-id="f6215-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="f6215-367"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-367"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-368">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-369">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="f6215-370">Die Protokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f6215-371">Die Remoteprotokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="f6215-372">Erstellt dieses Projekt mit den Standardzielen sowie den angegebenen Protokollierungen und Remoteprotokollierungen.</span><span class="sxs-lookup"><span data-stu-id="f6215-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="f6215-373"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-373"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-374">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-375">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f6215-376">Das zu erstellende Ziel.</span><span class="sxs-lookup"><span data-stu-id="f6215-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="f6215-377">Die Protokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="f6215-378">Erstellt dieses Projekt, erstellt dabei das angegebene Ziel und verwendet die angegebenen Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="f6215-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="f6215-379"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-379"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-380">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-381">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f6215-382">Die zu erstellenden Ziele.</span><span class="sxs-lookup"><span data-stu-id="f6215-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="f6215-383">Die Protokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="f6215-384">Erstellt dieses Projekt, erstellt dabei die angegebenen Ziele und verwendet die angegebenen Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="f6215-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="f6215-385"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-385"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-386">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-387">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f6215-388">Das zu erstellende Ziel.</span><span class="sxs-lookup"><span data-stu-id="f6215-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="f6215-389">Die Protokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f6215-390">Die Remoteprotokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="f6215-391">Erstellt dieses Projekt, erstellt dabei das angegebene Ziel und verwendet die angegebenen Protokollierungen und Remoteprotokollierungen.</span><span class="sxs-lookup"><span data-stu-id="f6215-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="f6215-392"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-392"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-393">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-394">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f6215-395">Die zu erstellenden Ziele.</span><span class="sxs-lookup"><span data-stu-id="f6215-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="f6215-396">Die Protokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f6215-397">Die Remoteprotokollierungen, die bei der Builderstellung verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="f6215-398">Erstellt dieses Projekt, erstellt dabei die angegebene Ziele und verwendet die angegebenen Protokollierungen und Remoteprotokollierungen.</span><span class="sxs-lookup"><span data-stu-id="f6215-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="f6215-399"><see langword="true" /> bei Erfolg, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-399"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-400">Um virtuelle Elemente für buildzwecke festzulegen oder zu erhalten, Klonen Sie explizit eine Projekt Instanz, und erstellen Sie diese.</span><span class="sxs-lookup"><span data-stu-id="f6215-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="f6215-401">Mit dieser Methode wird das Projekt Objekt nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-402">Ruft eine Auflistung möglicher Eigenschaftswerte für Eigenschaften ab, die zur Auswertung von in Eigenschaften, Eigenschaftengruppen, Importen und whens gefundenen Bedingungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="f6215-403">Eine Auflistung möglicher Eigenschaftswerte für Eigenschaften, die verwendet werden, um Bedingungen auszuwerten, die für Eigenschaften, Eigenschaften Gruppen, Importe und wann es gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-403">A collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="f6215-404">Die Auflistung erfolgt in kanonischer Form.</span><span class="sxs-lookup"><span data-stu-id="f6215-404">The collection is in canonical form.</span></span> <span data-ttu-id="f6215-405">Der Name des Eintrags ist der Name der auszuwertenden Eigenschaft, und der Wert ist eine Liste möglicher Eigenschaftswerte.</span><span class="sxs-lookup"><span data-stu-id="f6215-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-406">Wenn z. b. die folgenden Bedingungen für Eigenschaften in einem Projekt vorhanden sind: Condition = "' $ (Configuration)&#124;$ (Platform) ' = = ' Debug&#124;x86 '" Condition = "$ (Configuration) ' = = ' Release '" die Tabelle wird mit {"Configuration", {"Debug", "Release"}} {"Platform", {"x86"}} aufgefüllt. diese Sammlung wird von Visual Studio zum Bestimmen der im Projekt definierten Konfigurationen</span><span class="sxs-lookup"><span data-stu-id="f6215-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6215-407">Erstellt eine Projektinstanz auf Grundlage dieses Projekts, aber vollständig davon getrennt.</span><span class="sxs-lookup"><span data-stu-id="f6215-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-408">Kann zur unabhängigen Erstellung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-408">Can be used to build independently.</span></span> <span data-ttu-id="f6215-409">Das ursprüngliche Projekt wird ausgewertet, bevor die Instanz erstellt wird, falls erforderlich, damit das ursprüngliche Projekt als nicht geändert markiert wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6215-410">Erstellt eine Projektinstanz auf Grundlage dieses Projekts, aber vollständig davon getrennt.</span><span class="sxs-lookup"><span data-stu-id="f6215-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="f6215-411">Die Projektinstanz.</span><span class="sxs-lookup"><span data-stu-id="f6215-411">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-412">Kann zur unabhängigen Erstellung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-412">Can be used to build independently.</span></span> <span data-ttu-id="f6215-413">Das ursprüngliche Projekt wird ausgewertet, bevor die Instanz erstellt wird, falls erforderlich, damit das ursprüngliche Projekt als nicht geändert markiert wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="f6215-414">Bestimmt, ob die erstellte Projektinstanz unveränderlich ist und ob sie eine Nachschlagetabelle zur Verbesserung der Leistung enthält.</span><span class="sxs-lookup"><span data-stu-id="f6215-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="f6215-415">Erstellt eine Projektinstanz auf Grundlage dieses Projekts, aber vollständig davon getrennt.</span><span class="sxs-lookup"><span data-stu-id="f6215-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="f6215-416">Die Projektinstanz.</span><span class="sxs-lookup"><span data-stu-id="f6215-416">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-417">Kann zur unabhängigen Erstellung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-417">Can be used to build independently.</span></span> <span data-ttu-id="f6215-418">Das ursprüngliche Projekt wird ausgewertet, bevor die Instanz erstellt wird, falls erforderlich, damit das ursprüngliche Projekt als nicht geändert markiert wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-419">Ruft das Stammverzeichnis für dieses Projekt ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="f6215-420">Das Stammverzeichnis für dieses Projekt.</span><span class="sxs-lookup"><span data-stu-id="f6215-420">The root directory for this project.</span></span> <span data-ttu-id="f6215-421">Das Stammverzeichnis ist nie NULL, Projekte im Speicher verwenden das aktuelle Verzeichnis beim Laden des Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-422">Ruft einen Wert ab, der angibt, ob <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> temporär deaktiviert ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="f6215-422">Gets or sets a value that indicates whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="f6215-423">Dies ermöglicht z. B. das Festlegen einer globalen Eigenschaft, ohne dass das Projekt für eine erneute Auswertung entsprechend als geändert markiert wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="f6215-424"><see langword="true" />, um anzugeben, dass <see langword="MarkDirty" /> vorübergehend deaktiviert ist. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-424"><see langword="true" /> to indicate <see langword="MarkDirty" /> is temporarily disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-425">Ruft eine Zahl ab, die bei jeder erneuten Auswertung des Projekts inkrementiert wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="f6215-426">Der inkrementierte Wert.</span><span class="sxs-lookup"><span data-stu-id="f6215-426">The incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-427">Dieser Wert sollte mit vorherigen Werten verglichen werden, um festzustellen, ob das Projekt erneut ausgewertet wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="f6215-428">Es sollte nicht verwendet werden, um zu bestimmen, wie oft das Projekt erneut ausgewertet wurde, da es für eine bestimmte erneute Auswertung um mehr als eins erhöht werden kann.</span><span class="sxs-lookup"><span data-stu-id="f6215-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="f6215-429">Die auszuwertende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="f6215-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="f6215-430">Wertet die angegebene Zeichenfolge aus, indem Elemente und Eigenschaften erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="f6215-431">Die Zeichenfolge wird ausgewertet, als ob sie ganz am Ende der Projektdatei gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="f6215-432">Die ausgewertete Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="f6215-432">The evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-433">Diese Methode kann verwendet werden, wenn die bestmögliche Auswertung ausreichend ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-434">Ruft den vollständigen Pfad zur Projektquelldatei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="f6215-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="f6215-435">Der vollständige Pfad zur Projekt Quelldatei oder eine leere Zeichenfolge, wenn das Projekt nicht vom Datenträger geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-435">The full path to the project source file, or an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-436">Wenn diese Eigenschaft für ein Projekt in einer Projekt Auflistung festgelegt wird, wird das Projekt umbenannt.</span><span class="sxs-lookup"><span data-stu-id="f6215-436">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6215-437">Ruft den ausgewerteten, mit Escapezeichen versehenen Wert des Include-Attributs der bereitgestellten Elemente ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-437">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f6215-438">Das Element, das ausgewertet und mit Escapezeichen versehen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-438">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="f6215-439">Ruft den ausgewerteten, mit Escapezeichen versehenen Wert des Include-Attributs der bereitgestellten Elemente ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-439">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="f6215-440">Der ausgewertete, mit Escapezeichen versehene Wert des Include-Attributs der bereitgestellten Elemente.</span><span class="sxs-lookup"><span data-stu-id="f6215-440">The evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f6215-441">Die Elementdefinition, die ausgewertet und mit Escapezeichen versehen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-441">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="f6215-442">Ruft den ausgewerteten, mit Escapezeichen versehenen Wert des Include-Attributs der bereitgestellten Elementdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-442">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="f6215-443">Der Wert des Include-Attributs.</span><span class="sxs-lookup"><span data-stu-id="f6215-443">The value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f6215-444">Der Elementtyp, der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-444">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="f6215-445">Ruft alle Elemente im Projekt mit dem angegebenen Elementtyp ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-445">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="f6215-446">Gibt eine leere Liste zurück, wenn keine Elemente vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="f6215-446">If there are none, returns an empty list.</span></span> <span data-ttu-id="f6215-447">Mit AddItem oder RemoveItem können Elemente in diesem Projekt geändert werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-447">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="f6215-448">Alle Elemente im Projekt mit dem angegebenen Elementtyp oder eine leere Liste, wenn keine Elemente mit dem angegebenen Namen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="f6215-448">All the items in the project of the given item type, or an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-449">Mit AddItem oder RemoveItem können Elemente in diesem Projekt geändert werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-449">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="f6215-450">Das ausgewertete Include-Attribut.</span><span class="sxs-lookup"><span data-stu-id="f6215-450">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="f6215-451">Ruft alle Elemente mit dem angegebenen ausgewerteten Include-Attribut ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-451">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="f6215-452">Alle Elemente mit dem angegebenen ausgewerteten Include-Attribut.</span><span class="sxs-lookup"><span data-stu-id="f6215-452">All items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-453">Beispielsweise gibt diese Methode möglicherweise alle Elemente zurück, die das ausgewertete Include-Attribut "Component. cpp" aufweisen.</span><span class="sxs-lookup"><span data-stu-id="f6215-453">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="f6215-454">In der Regel werden NULL oder ein Element zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f6215-454">Typically zero or one items are returned.</span></span> <span data-ttu-id="f6215-455">Es können jedoch mehrere Elemente mit demselben Pfad und anderen Elementtypen oder sogar mit denselben Elementtypen vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-455">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f6215-456">Der Elementtyp, der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-456">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="f6215-457">Ruft alle Elemente im Projekt mit dem angegebenen Typ ab, unabhängig davon, ob ihr Condition-Attribut true ergibt.</span><span class="sxs-lookup"><span data-stu-id="f6215-457">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="f6215-458">Dies ist eine schreibgeschützte Liste, mit AddItem oder RemoveItem können Elemente in diesem Projekt geändert werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-458">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="f6215-459">Alle Elemente im Projekt mit dem angegebenen Typ, unabhängig davon, ob ihr Condition-Attribut als „true“ ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-459">All the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-460">Dies ist eine schreibgeschützte Liste.</span><span class="sxs-lookup"><span data-stu-id="f6215-460">This is a read-only list.</span></span> <span data-ttu-id="f6215-461">Mit AddItem oder RemoveItem können Elemente in diesem Projekt geändert werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-461">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6215-462">Ruft einen Enumerator über alle Elemente im "logischen Projekt" ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-462">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="f6215-463">Das logische Projekt wird definiert als das nicht ausgewertete Projekt, das aus der einzelnen MSBuild-Datei abgerufen wurde, die das Ergebnis des Inlinings des Texts aller Importe der ursprünglichen MSBuild-Projektmanifestdatei ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-463">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="f6215-464">Ein Enumerator über alle Elemente im „logischen Projekt“.</span><span class="sxs-lookup"><span data-stu-id="f6215-464">An enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-465">Das logische Projekt wird als nicht ausgewertetes Projekt definiert, das aus der einzelnen MSBuild-Datei abgerufen wurde. Dies ist das Ergebnis der Einbeziehung von Inline den Text aller Importe der ursprünglichen MSBuild-Projekt Manifest-Datei.</span><span class="sxs-lookup"><span data-stu-id="f6215-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6215-466">Ruft den Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen im bereitgestellten Element ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-466">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="f6215-467">Das Metadatum, das mit Escapezeichen versehen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-467">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="f6215-468">Ruft den Wert mit Escapezeichen des bereitgestellten Metadatums ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-468">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="f6215-469">Der Wert mit Escapezeichen des bereitgestellten Metadatums.</span><span class="sxs-lookup"><span data-stu-id="f6215-469">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f6215-470">Das Element, dessen Metadaten mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-470">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="f6215-471">Der Name der Metadaten, die mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-471">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="f6215-472">Ruft den Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen im bereitgestellten Element ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-472">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="f6215-473">Der Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen im bereitgestellten Element.</span><span class="sxs-lookup"><span data-stu-id="f6215-473">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f6215-474">Die Elementdefinition, deren Metadaten mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-474">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="f6215-475">Der Name der Metadaten, die mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f6215-475">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="f6215-476">Ruft den Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen in der bereitgestellten Elementdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-476">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="f6215-477">Der Wert mit Escapezeichen des Metadatums mit dem angegebenen Namen in der bereitgestellten Elementdefinition.</span><span class="sxs-lookup"><span data-stu-id="f6215-477">The escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f6215-478">Der Name der abzurufenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-478">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="f6215-479">Ruft jede Eigenschaft im Projekt mit dem angegebenen Namen ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-479">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="f6215-480">Jede Eigenschaft im Projekt, die den angegebenen Namen aufweist, oder <see langword="null" />, wenn keine Eigenschaft mit diesem Namen vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-480">Any property in the project that has the specified name, or <see langword="null" /> if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f6215-481">Der Name der Eigenschaft, deren Wert abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-481">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="f6215-482">Ruft den Wert der angegebenen Eigenschaft in diesem Projekt ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-482">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="f6215-483">Der Wert der angegebenen Eigenschaft in diesem Projekt oder eine leere Zeichenfolge, wenn keine Eigenschaft mit diesem Namen existiert.</span><span class="sxs-lookup"><span data-stu-id="f6215-483">The value of the given property in this project, or an empty string if no property of that name exists.</span></span> <span data-ttu-id="f6215-484">Escapesequenzen werden vor dem Zurückgeben der Zeichenfolge umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="f6215-484">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-485">Eine Eigenschaft mit einem Wert einer leeren Zeichenfolge und keiner Eigenschaft wird von dieser Methode nicht unterschieden.</span><span class="sxs-lookup"><span data-stu-id="f6215-485">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="f6215-486">Verwenden Sie GetProperty (Name), um zu bestimmen, ob eine Eigenschaft im Projekt überhaupt festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-486">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="f6215-487">Die Eigenschaft, die mit Escapezeichen versehen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-487">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="f6215-488">Ruft den Wert mit Escapezeichen der bereitgestellten Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-488">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="f6215-489">Der Wert mit Escapezeichen der bereitgestellten Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-489">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-490">Ruft ein Wörterbuch der für die Auswertung dieses Projekts verwendeten globalen Eigenschaften ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-490">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="f6215-491">Ein Wörterbuch der für die Auswertung dieses Projekts verwendeten globalen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="f6215-491">A dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-492">Dies ist der öffentlich verfügbar gemachte Getter, der in ein Schreib geschütztes, nicht gelesene IDictionary \<string, String > übersetzt.</span><span class="sxs-lookup"><span data-stu-id="f6215-492">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="f6215-493">Um leicht zu erkennen, wann eine dirbindung besteht, wird das Festlegen und Entfernen von globalen Eigenschaften mit <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> und <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A> erreicht.</span><span class="sxs-lookup"><span data-stu-id="f6215-493">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-494">Ruft eine Liste aller Dateien ab, die in die Auswertung dieses Projekts einbezogen wurden.</span><span class="sxs-lookup"><span data-stu-id="f6215-494">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="f6215-495">Eine Liste aller Dateien, die zur Auswertung dieses Projekts beigetragen haben.</span><span class="sxs-lookup"><span data-stu-id="f6215-495">A list of all the files that contributed to the evaluation of this project.</span></span>  
  
 <span data-ttu-id="f6215-496">Der Name jedes Elements ist das Import-Element, das den Import der Datei verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="f6215-496">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="f6215-497">Der Wert jedes Elements ist der Projektstamm des importierten Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-497">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="f6215-498">Import-Elemente, deren Condition-Attribut false ergeben hat, werden nicht eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="f6215-498">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-499">Der Projektstamm dieses Projekts ist nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="f6215-499">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-500">Ruft eine Liste doppelter Importe ab, wenn ein Import mehrmals importiert wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-500">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="f6215-501">Allerdings wurde nur der erste Import zur Auswertung verwendet.</span><span class="sxs-lookup"><span data-stu-id="f6215-501">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="f6215-502">Eine Liste doppelter Importe.</span><span class="sxs-lookup"><span data-stu-id="f6215-502">A list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-503">Ruft eine Eigenschaft ab, die auswählt, ob die Ziele und die Aufgaben dieses Projekts erstellt werden können, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="f6215-503">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="f6215-504"><see langword="true" />, wenn die Ziele und die Aufgaben dieses Projekts erstellt werden können. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-504"><see langword="true" /> if the targets and tasks of this project can be built; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-505">Kann aus Sicherheitsgründen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-505">Can be used for security purposes.</span></span> <span data-ttu-id="f6215-506">Standardmäßig hat ein neues Projekt dieselbe isbuildenabled-Einstellung wie die übergeordnete Projekt Auflistung, in der es enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-506">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="f6215-507">Wenn isbuildenabled den Wert false hat, schlägt die Buildmethode für dieses Projekt fehl.</span><span class="sxs-lookup"><span data-stu-id="f6215-507">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-508">Ruft einen Wert ab, der angibt, ob dieses Projekt geändert wurde, sodass es neu ausgewertet werden muss.</span><span class="sxs-lookup"><span data-stu-id="f6215-508">Gets a value that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="f6215-509"><see langword="true" />, wenn dieses Projekt geändert wurde, sodass es neu ausgewertet werden muss. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-509"><see langword="true" /> if this project has been modified so that it must be reevaluated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-510">Ein Projekt wird geändert und muss neu ausgewertet werden, wenn der zugrunde liegende Projekt Quell Code, einschließlich Änderungen an importierten Dateien, geändert wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-510">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="f6215-511">Ein Projekt, das ebenfalls geändert wird, muss neu ausgewertet werden, wenn das Projekt Tool Änderungen ändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-511">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-512">Ruft ein Wörterbuch von Elementdefinitionen in diesem Projekt ab, sortiert nach Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="f6215-512">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="f6215-513">Ein Wörterbuch der Element Definitionen in diesem Projekt, geordnet nach Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="f6215-513">A dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-514">Ruft einen Enumerator über alle Elemente in diesem Projekt ab, geordnet in Gruppen von Elementtypen.</span><span class="sxs-lookup"><span data-stu-id="f6215-514">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="f6215-515">Ein Enumerator über alle Elemente in diesem Projekt, geordnet in Gruppen von Elementtypen.</span><span class="sxs-lookup"><span data-stu-id="f6215-515">An enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-516">Ruft einen Enumerator über alle Elemente in diesem Projekt ab, geordnet in Gruppen von Elementtypen.</span><span class="sxs-lookup"><span data-stu-id="f6215-516">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="f6215-517">Ein Enumerator über alle Elemente in diesem Projekt, geordnet in Gruppen von Elementtypen, einschließlich Elementen, deren Bedingungen zu "false" ausgewertet werden, oder die in Elementgruppen enthalten sind, deren Bedingung zu "<see langword="false" />" ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-517">An enumerator over all items in this project, ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-518">Kann verwendet werden, um alle Elemente anzuzeigen, auch wenn Sie nicht Teil des Builds in der aktuellen Konfiguration sind.</span><span class="sxs-lookup"><span data-stu-id="f6215-518">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-519">Ruft einen Enumerator über alle Elementtypen in diesem Projekt ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-519">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="f6215-520">Ein Enumerator über alle Elementtypen in diesem Projekt.</span><span class="sxs-lookup"><span data-stu-id="f6215-520">An enumerator over all item types in this project.</span></span> <span data-ttu-id="f6215-521">Dies ist eine geordnete Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f6215-521">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6215-522">Markiert dieses Projekt als geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-522">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-523">Es ist nur selten notwendig, diese Methode explizit aufzurufen, da alle Änderungen, die sich auf ein Projekt auswirken, es automatisch als geändert markieren.</span><span class="sxs-lookup"><span data-stu-id="f6215-523">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="f6215-524">Manchmal muss jedoch diese Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-524">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="f6215-525">Ein Projekt kann beispielsweise über ein Import-Element verfügen, dessen Bedingung von einer Datei abhängt, die auf einem Datenträger vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-525">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="f6215-526">Wenn diese Datei nicht zur Evaluierungszeit vorhanden ist und nach der Auswertung erstellt wird, muss das Projekt explizit als geändert markiert werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-526">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="f6215-527">Die <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A>-Methode verwendet diese Eigenschaft, um zu bestimmen, ob eine Auswertung notwendig ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-527">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-528">Ruft die Projektauflistung ab, die dieses Projekt enthält.</span><span class="sxs-lookup"><span data-stu-id="f6215-528">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="f6215-529">Die Projekt Auflistung, die dieses Projekt enthält, das nie <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-529">The project collection that contains this project, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-530">Der Speicherort der ursprünglichen Datei selbst, nicht der eines bestimmter Inhalts in der Datei.</span><span class="sxs-lookup"><span data-stu-id="f6215-530">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="f6215-531">Wenn der Datei kein Name zugewiesen wurde, ist dies ein leerer Speicherort.</span><span class="sxs-lookup"><span data-stu-id="f6215-531">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="f6215-532">Dies ist ein legitimer Fall für das Fehlen eines Speicherorts.</span><span class="sxs-lookup"><span data-stu-id="f6215-532">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="f6215-533">Der Speicherort der Ursprungs Datei oder ein leerer Speicherort, wenn der Datei kein Name zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-533">The originating file location, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-534">Ruft einen Enumerator über alle Eigenschaften in diesem Projekt ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-534">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="f6215-535">Dies ist eine ungeordnete Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f6215-535">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="f6215-536">Ein Enumerator über alle Eigenschaften in diesem Projekt.</span><span class="sxs-lookup"><span data-stu-id="f6215-536">An enumerator over all properties in this project.</span></span> <span data-ttu-id="f6215-537">Da Eigenschaften entsprechend der Anzeige ausgewertet werden, ist dies eine ungeordnete Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f6215-537">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6215-538">Wertet das Projekt neu aus, um Änderungen aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="f6215-538">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-539">Das Projekt wird nur dann erneut ausgewertet, wenn es als geändert markiert ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-539">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="f6215-540">Die erneute Auswertung umfasst alle Änderungen, die am Projekt Quell Code vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="f6215-540">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="f6215-541">Löst InvalidProjectFileException aus, wenn die Auswertung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="f6215-541">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f6215-542">Der Name der zu entfernenden globalen Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-542">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="f6215-543">Entfernt eine globale Eigenschaft und markiert das Projekt als geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-543">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="f6215-544"><see langword="true" />, wenn der Wert der globalen Eigenschaft festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-544"><see langword="true" /> if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f6215-545">Das zu entfernende Element.</span><span class="sxs-lookup"><span data-stu-id="f6215-545">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="f6215-546">Entfernt ein Element aus dem Projekt.</span><span class="sxs-lookup"><span data-stu-id="f6215-546">Removes an item from the project.</span></span> <span data-ttu-id="f6215-547">Das zu entfernende Element muss im Projekt vorhanden sein und darf nicht aus einer importierten Datei stammen.</span><span class="sxs-lookup"><span data-stu-id="f6215-547">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="f6215-548"><see langword="true" />, wenn das Element in diesem ausgewerteten Projekt vorhanden ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-548"><see langword="true" /> if the item is present in this evaluated project; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f6215-549">Normalerweise gibt diese Methode true zurück, da die Methode eine Ausnahme auslöst, wenn das angeforderte Element nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-549">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="f6215-550">Wenn das Element nur in der ItemsIgnoringCondition-Auflistung vorhanden ist, gibt die Methode jedoch <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="f6215-550">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-551">Wenn die Element Gruppe, in der das Element enthalten ist, leer ist, wird Sie ebenfalls entfernt.</span><span class="sxs-lookup"><span data-stu-id="f6215-551">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="f6215-552">Wenn das Element von einem Platzhalter oder durch Semikolon getrennten Ausdruck stammt, wird der Ausdruck zuerst in mehrere Elemente erweitert.</span><span class="sxs-lookup"><span data-stu-id="f6215-552">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="f6215-553">Das Projekt wird aktualisiert, aber bis zur erneuten Auswertung erfolgt keine weitere Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-553">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="f6215-554">Wenn z. b. ein Element vom Typ "i" entfernt wird, wird "j", das von "@ (i)" ausgewertet wird, erst geändert, wenn eine erneute Auswertung durchgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-554">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="f6215-555">Die zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="f6215-555">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="f6215-556">Entfernt alle angegebenen Elemente aus dem Projekt, außer wenn sie aus einem importierten Projekt stammen.</span><span class="sxs-lookup"><span data-stu-id="f6215-556">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-557">Wenn ein Element aus einem importierten Projekt stammt, wird es einfach übersprungen.</span><span class="sxs-lookup"><span data-stu-id="f6215-557">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="f6215-558">Die zu entfernende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-558">The property to remove.</span></span></param>
        <summary><span data-ttu-id="f6215-559">Entfernt eine Eigenschaft aus dem Projekt.</span><span class="sxs-lookup"><span data-stu-id="f6215-559">Removes an property from the project.</span></span> <span data-ttu-id="f6215-560">Die zu entfernende Eigenschaft muss im Projekt vorhanden sein und darf nicht aus einer importierten Datei stammen.</span><span class="sxs-lookup"><span data-stu-id="f6215-560">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="f6215-561"><see langword="true" />, wenn die Eigenschaft in diesem ausgewerteten Projekt vorhanden ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-561"><see langword="true" /> if the property is present in this evaluated project; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-562">Wenn die Eigenschaften Gruppe, die die Eigenschaft enthält, leer ist, wird Sie ebenfalls entfernt.</span><span class="sxs-lookup"><span data-stu-id="f6215-562">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="f6215-563">Das Projekt wird aktualisiert, aber bis zur erneuten Auswertung erfolgt keine weitere Auswertung.</span><span class="sxs-lookup"><span data-stu-id="f6215-563">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="f6215-564">Wenn z. b. "p" entfernt wird, wird "q", das aus "$ (p)" ausgewertet wird, erst nach der erneuten Auswertung geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-564">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6215-565">Speichert das Projekt mit der Standardzeichencodierung im Dateisystem, wenn es geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-565">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6215-566">Speichert das Projekt mit der Standardzeichencodierung im Dateisystem, wenn es geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-566">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f6215-567">Der TextWriter zum Speichern des Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-567">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="f6215-568">Speichert das Projekt im bereitgestellten TextWriter, unabhängig davon, ob das Projekt geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-568">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="f6215-569">Verwendet die Zeichencodierung des TextWriters und markiert das Projekt als nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="f6215-569">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f6215-570">Der Pfad zum Projektquellcode.</span><span class="sxs-lookup"><span data-stu-id="f6215-570">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="f6215-571">Speichert das Projekt mit der Standardzeichencodierung im Dateisystem, wenn es geändert wurde oder wenn der Pfad zum Projektquellcode geändert wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-571">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="f6215-572">Die zum Speichern des Projekts verwendete Zeichencodierung.</span><span class="sxs-lookup"><span data-stu-id="f6215-572">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="f6215-573">Speichert das Projekt mit der angegebenen Zeichencodierung im Dateisystem, wenn es geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-573">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f6215-574">Der Pfad zum Projektquellcode.</span><span class="sxs-lookup"><span data-stu-id="f6215-574">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="f6215-575">Die zum Speichern des Projekts verwendete Zeichencodierung.</span><span class="sxs-lookup"><span data-stu-id="f6215-575">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="f6215-576">Speichert das Projekt mit der angegebenen Zeichencodierung im Dateisystem, wenn es geändert wurde oder wenn der Pfad zum Projektquellcode geändert wird.</span><span class="sxs-lookup"><span data-stu-id="f6215-576">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f6215-577">Der Writer, der die Projektdatei speichert.</span><span class="sxs-lookup"><span data-stu-id="f6215-577">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="f6215-578">Speichert eine "logische" oder "vorverarbeitete" Projektdatei, die alle importierten Dateien so einschließt, als würden sie eine einzige Datei bilden.</span><span class="sxs-lookup"><span data-stu-id="f6215-578">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f6215-579">Der Name der festzulegenden globalen Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-579">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="f6215-580">Der neue Wert der globalen Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-580">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="f6215-581">Legt eine globale Eigenschaft fest, nachdem das Projekt ausgewertet wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-581">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="f6215-582">Wenn sich der Wert ändert, wird das Projekt für eine erforderliche Neuauswertung markiert.</span><span class="sxs-lookup"><span data-stu-id="f6215-582">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="f6215-583"><see langword="true" />, wenn sich der Wert ändert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6215-583"><see langword="true" /> if the value changes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f6215-584">Der Name der festzulegenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-584">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="f6215-585">Der neue nicht ausgewertete Wert der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-585">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="f6215-586">Legt eine Eigenschaft mit dem angegebenen Namen und Wert fest oder fügt sie dem Projekt hinzu.</span><span class="sxs-lookup"><span data-stu-id="f6215-586">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="f6215-587">Überschreibt den Wert einer Eigenschaft mit dem gleichen Namen, wenn sie nicht aus einer importierten Datei stammt.</span><span class="sxs-lookup"><span data-stu-id="f6215-587">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="f6215-588">Die Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f6215-588">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-589">Wenn keine Eigenschaft mit dem angegebenen Namen vorhanden ist, aktualisiert die letzte vorhandene Eigenschaft mit dem angegebenen Namen, der keine Bedingung für sich selbst oder die zugehörige Eigenschaften Gruppe hat, es sei denn, Sie stammt aus einer importierten Datei.</span><span class="sxs-lookup"><span data-stu-id="f6215-589">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="f6215-590">Andernfalls fügt eine neue Eigenschaft in der ersten Eigenschaften Gruppe ohne Bedingung hinzu und erstellt eine Eigenschaften Gruppe, wenn dies erforderlich ist, nach der letzten vorhandenen Eigenschaften Gruppe, sonst am Anfang des Projekts.</span><span class="sxs-lookup"><span data-stu-id="f6215-590">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="f6215-591">Die Auswertung erfolgt auf Grundlage der bestmöglichen Leistung.</span><span class="sxs-lookup"><span data-stu-id="f6215-591">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="f6215-592">Eigenschaften, die in der Projekt Quelle nach der neuen Eigenschaft definiert sind, können für die Auswertung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-592">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="f6215-593">Nur diese Eigenschaft wird ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="f6215-593">Only this property is evaluated.</span></span> <span data-ttu-id="f6215-594">Andere Eigenschaften, die möglicherweise von dieser abhängig sind, sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="f6215-594">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-595">Ruft einen Wert ab, der bestimmt, ob ReevaluateIfNecessary vorübergehend deaktiviert ist, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="f6215-595">Gets or sets a value that indicates whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="f6215-596">Dies ist nützlich, wenn der Host Lese- und Schreibvorgänge für das Projekt erwartet und vorübergehend Richtigkeit zugunsten von Leistung geopfert werden soll.</span><span class="sxs-lookup"><span data-stu-id="f6215-596">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="f6215-597">Ein Flag, das bestimmt, ob reevaluateignecessary vorübergehend deaktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-597">A flag that determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-598">Ruft den Wert des SubToolsetVersion-Attributs ab, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="f6215-598">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="f6215-599">Dieser Wert wurde mit dem Wert des ToolsVersion-Attributs kombiniert, um die Toolseteigenschaften für dieses Projekt zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="f6215-599">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="f6215-600">Der subtoolsetversion-Attribut Wert oder eine leere Zeichenfolge, wenn das Attribut nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="f6215-600">The SubToolsetVersion attribute value, or an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-601">Ruft ein Wörterbuch aller Ziele in diesem Projekt ab, sortiert nach Zielnamen.</span><span class="sxs-lookup"><span data-stu-id="f6215-601">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="f6215-602">Ein Schreib geschütztes Wörterbuch aller Ziele in diesem Projekt, sortiert nach Zielname.</span><span class="sxs-lookup"><span data-stu-id="f6215-602">A read-only dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="f6215-603">Überschriebene Ziele sind in dieser Auflistung nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="f6215-603">Overridden targets are not included in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-604">Ruft die Toolsversion ab, mit der dieses Projekt ausgewertet wurde, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="f6215-604">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="f6215-605">Die ToolsVersion, mit der dieses Projekt ausgewertet wurde, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="f6215-605">The tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-606">Wird durch den-Konstruktor festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f6215-606">Set by the constructor.</span></span> <span data-ttu-id="f6215-607">Dies ist nicht notwendigerweise identisch mit der ToolsVersion für das projekttags, falls vorhanden. Sie wurde möglicherweise extern angegeben, z. b. mit einem/TV-Schalter in der Befehlszeile.</span><span class="sxs-lookup"><span data-stu-id="f6215-607">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="f6215-608">Die tatsächliche ToolsVersion für das projekttags kann aus <xref:Microsoft.Build.Evaluation.Project.Xml%2A> abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="f6215-608">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="f6215-609">Die ToolsVersion kann nicht geändert werden, nachdem das Projekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="f6215-609">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6215-610">Ruft das diesem Projekt zugeordnete Stammprojekt ab.</span><span class="sxs-lookup"><span data-stu-id="f6215-610">Gets the root project associated with this project.</span></span> <span data-ttu-id="f6215-611">Kann nie <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="f6215-611">Can never be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="f6215-612">Das diesem Projekt zugeordnete Stamm Projekt, das nie <see langword="null" /> sein kann.</span><span class="sxs-lookup"><span data-stu-id="f6215-612">The root project associated with this project, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6215-613">Es gibt keine Möglichkeit, diese Eigenschaft festzulegen.</span><span class="sxs-lookup"><span data-stu-id="f6215-613">There is no way to set this property.</span></span> <span data-ttu-id="f6215-614">Wenn Sie über einen neuen Projektstamm verfügen, können Sie ihn in ein neues Projekt auswerten.</span><span class="sxs-lookup"><span data-stu-id="f6215-614">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
