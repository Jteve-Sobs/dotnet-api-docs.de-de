<Type Name="UnconditionalSuppressMessageAttribute" FullName="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8fcea07278c005bc16a667501705ce7061a3870" /><Meta Name="ms.sourcegitcommit" Value="6fca7f55940a389853cc2d183619073ce0d69092" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/26/2020" /><Meta Name="ms.locfileid" Value="88868445" /></Metadata><TypeSignature Language="C#" Value="public sealed class UnconditionalSuppressMessageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UnconditionalSuppressMessageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnconditionalSuppressMessageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnconditionalSuppressMessageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type UnconditionalSuppressMessageAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Unterdrückt die Meldung eines bestimmten Regelverstoßes und lässt mehrere Unterdrückungen in einem einzelnen Codeartefakt zu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<xref:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute> unterscheidet sich von darin <xref:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute> , dass keine vorhanden ist <xref:System.Diagnostics.ConditionalAttribute> . Sie wird immer in der kompilierten Assembly beibehalten.

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnconditionalSuppressMessageAttribute (string category, string checkId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string category, string checkId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (category As String, checkId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnconditionalSuppressMessageAttribute(System::String ^ category, System::String ^ checkId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : string * string -&gt; System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" Usage="new System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute (category, checkId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="checkId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">Die Kategorie für das Attribut.</param>
        <param name="checkId">Der Bezeichner der Analyseregel, auf die das Attribut angewendet wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />-Klasse und gibt die Kategorie des Tools und den Bezeichner für eine Analyseregel an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string? Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Kategorie ab, die die Klassifizierung des Attributs bezeichnet.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die- <xref:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category> Eigenschaft beschreibt das Tool oder die Tool Analyse Kategorie, auf die ein nachrichtenunterdrückungs Attribut angewendet wird.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckId">
      <MemberSignature Language="C#" Value="public string? CheckId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CheckId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CheckId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckId : string" Usage="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bezeichner der Analysetoolregel ab, die unterdrückt werden soll.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Zusammen verkettet, bilden die <xref:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category> -Eigenschaft und die-Eigenschaft <xref:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId> einen eindeutigen Check-Bezeichner.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Justification">
      <MemberSignature Language="C#" Value="public string Justification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Justification" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Justification" />
      <MemberSignature Language="VB.NET" Value="Public Property Justification As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Justification { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Justification : string with get, set" Usage="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Justification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Begründung für das Unterdrücken der Codeanalysemeldung ab oder legt diese fest.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageId">
      <MemberSignature Language="C#" Value="public string MessageId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageId : string with get, set" Usage="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein optionales Argument ab, das Ausschlusskriterien erweitert, oder legt dieses fest.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die- <xref:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId> Eigenschaft ist ein optionales Argument, das zusätzlichen Ausschluss angibt, bei dem das Literale metadatenziel nicht ausreichend präzise ist. Beispielsweise <xref:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute> kann nicht innerhalb einer Methode angewendet werden, und es kann wünschenswert sein, eine Verletzung gegen eine-Anweisung in der-Methode zu unterdrücken, die eine Regelverletzung, aber nicht für alle-Anweisungen in der-Methode bietet.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string with get, set" Usage="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bereich des Codes ab, der für das Attribut relevant ist, oder legt diesen fest.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die- `Scope` Eigenschaft ist ein optionales Argument, das den Metadatenbereich angibt, für den das Attribut relevant ist.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen voll qualifizierten Pfad ab, der das Ziel des Attributs darstellt, oder legt diesen fest.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die- <xref:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target> Eigenschaft ist ein optionales Argument, das das Analyse Ziel des Attributs identifiziert. Ein Beispielwert ist `System.IO.Stream.ctor():System.Void`.
Da es voll qualifiziert ist, kann es lange dauern, insbesondere für Ziele wie Parameter.
Die Benutzeroberfläche des Analysetools sollte in der Lage sein, den Parameter automatisch zu formatieren.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
