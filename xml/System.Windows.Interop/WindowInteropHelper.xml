<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WindowInteropHelper.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5492213104b0f184cf0ecaffdd93a2b0d6ad1a860.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">492213104b0f184cf0ecaffdd93a2b0d6ad1a860</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</source>
          <target state="translated">Unterstützt die Zusammenarbeit von WPF- und Wind32-Code.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>Members of this class allows the caller to have internal access to the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> HWND and the parent HWND of a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">Member dieser Klasse kann der Aufrufer internen Zugriff auf die <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> HWND und das übergeordnete HWND von einer <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>The proper security checks are performed by those members.</source>
          <target state="translated">Mitglieder werden die richtigen sicherheitsüberprüfungen ausgeführt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>Use this class whenever you need a more specific object based on its HWND.</source>
          <target state="translated">Verwenden Sie diese Klasse benötigt ein spezifischeres Objekt basierend auf seinem HWND werden sollen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>An example scenario is if you need to host a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> dialog box in a <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">Ein Beispielszenario ist, wenn Sie zum Hosten müssen einer <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> im Dialogfeld eine <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> Anwendung.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>Initialize the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> with a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> window object for the dialog box.</source>
          <target state="translated">Initialisieren der <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> mit einem <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Fensterobjekt für das Dialogfeld.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>You can then get the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> window's handle (HWND) from the <ph id="ph2">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> property and specify the owner for the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> window with the <ph id="ph4">&lt;xref:System.Windows.Interop.WindowInteropHelper.Owner%2A&gt;</ph> property.</source>
          <target state="translated">Rufen Sie dann die <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Fensterhandle (HWND) aus der <ph id="ph2">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> Eigenschaft, und geben Sie den Besitzer für die <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Fenster mit der <ph id="ph4">&lt;xref:System.Windows.Interop.WindowInteropHelper.Owner%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> when hosting a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> dialog box in a <ph id="ph3">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> beim Hosten einer <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> im Dialogfeld eine <ph id="ph3">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> Anwendung.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>Another scenario supported by this class is to obtain a <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> object from a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> object.</source>
          <target state="translated">Ein weiteres Szenario, die von dieser Klasse unterstützt wird, zum Abrufen einer <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> -Objekt aus einem <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> enables direct processing of <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> messages through the <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> ermöglicht die direkte Verarbeitung von <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> Meldungen über die <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>By using <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> in place of a <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> you can still handle messages that have no equivalent or handling in <ph id="ph4">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">Mithilfe von <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> anstelle von einer <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> können Sie weiterhin Nachrichten nicht äquivalent oder Behandeln von, in denen behandeln <ph id="ph4">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.WindowInteropHelper">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> source, then call <ph id="ph3">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> on the <ph id="ph4">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> to get from HWND to <ph id="ph5">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.</source>
          <target state="translated">Erstellen einer <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> mit der <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> Datenquelle aus, und rufen Sie dann <ph id="ph3">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> auf die <ph id="ph4">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> zum Abrufen von HWND auf <ph id="ph5">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> window object.</source>
          <target state="translated">Ein <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>-Fensterobjekt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.WindowInteropHelper" /&gt;</ph> class for a specified <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> window.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.Interop.WindowInteropHelper" /&gt;</ph>-Klasse für ein angegebenes <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>-Fenster.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
          <source>The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">Das Fenster kann ein Dialogfeld oder ein Fenster, das andernfalls nicht geeignet für das Hosten innerhalb der Grenzen des ist eine <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> Anwendung.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>Creates the HWND of the window if the HWND has not been created yet.</source>
          <target state="translated">Erstellt den HWND des Fensters, wenn der HWND noch nicht erstellt wurde.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that represents the HWND.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>, das den HWND darstellt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> method when you want to separate window handle (HWND) creation from the actual showing of the managed <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> Methode, wenn Sie Handle (HWND) fenstererstellung aus den tatsächlichen mit der verwalteten trennen möchten <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</source>
          <target state="translated">Dies ist hilfreich, wenn Automatisierungsclient vorliegen, der die Aufgaben ohne die Notwendigkeit zum Anzeigen eines Fensters können.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>If the native window has not yet been created, this method creates the native window, sets the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> property, and returns the HWND.</source>
          <target state="translated">Wenn das systemeigene Fenster noch nicht erstellt wurde, erstellt diese Methode das systemeigene Fenster, legt die <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> Eigenschaft aus und gibt das HWND zurück.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>If the native window has been created already, the handle of the existing native window is returned.</source>
          <target state="translated">Wenn das systemeigene Fenster bereits erstellt wurde, wird das Handle des vorhandenen systemeigenen Fensters zurückgegeben.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>If the native window is created as a result of calling this method, the <ph id="ph1">&lt;xref:System.Windows.Window.SourceInitialized&gt;</ph> event is raised.</source>
          <target state="translated">Wenn das systemeigene Fenster erstellt wird, als Ergebnis beim Aufrufen dieser Methode die <ph id="ph1">&lt;xref:System.Windows.Window.SourceInitialized&gt;</ph> Ereignis wird ausgelöst.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>Querying the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> property after the <ph id="ph2">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> method is called returns the existing window handle.</source>
          <target state="translated">Abfragen der <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> Eigenschaft nach der <ph id="ph2">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> Methode wird aufgerufen, gibt das vorhandene Fensterhandle zurück.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>The visual tree is not attached to the window until after the <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> method is called.</source>
          <target state="translated">Die visuelle Struktur ist nicht angefügt an das Fenster erst nach der <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> -Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> method more than one time does not create new window handles.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> Methode mehr als einmal erstellt keine neuen Fensterhandles.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> method when the handle has already been created by a call to the <ph id="ph2">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> method does not create a new window handle.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> Methode, wenn das Handle bereits durch einen Aufruf erstellt wurde die <ph id="ph2">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> Methode erstellt ein neues Fensterhandle.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>A native window is only created when no handle exists when the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> method is called.</source>
          <target state="translated">Ein systemeigenes Fenster wird nur erstellt, wenn kein Handle vorhanden ist. wenn die <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> Methode wird aufgerufen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</source>
          <target state="translated">Eigenschaften, die festgelegt werden, mithilfe von systemeigenen Fenster-APIs über p/Invoke Aufrufen möglicherweise nicht in den verwalteten APIs-Fenster angezeigt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> property is not guaranteed to reflect the native setting.</source>
          <target state="translated">Angenommen, wenn Sie das Fenster, um die obersten werden mit dem systemeigenen MS_EX_TOPMOST-Flag nach dem Festlegen der <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A&gt;</ph> -Methode aufgerufen wird, die <ph id="ph2">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> Eigenschaft ist nicht garantiert die systemeigene Einstellung reflektiert.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>to create and access a window handle.</source>
          <target state="translated">zum Erstellen und Zugriff auf ein Fensterhandle.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.WindowInteropHelper.Handle">
          <source>Gets the window handle for a <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> window that is used to create this <ph id="ph2">&lt;see cref="T:System.Windows.Interop.WindowInteropHelper" /&gt;</ph>.</source>
          <target state="translated">Ruft das Fensterhandle für ein <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>-Fenster ab, in dem dieser <ph id="ph2">&lt;see cref="T:System.Windows.Interop.WindowInteropHelper" /&gt;</ph> erstellt wird.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.WindowInteropHelper.Handle">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> window handle (HWND).</source>
          <target state="translated">Das <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>-Fensterhandle (HWND).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.WindowInteropHelper.Handle">
          <source>to obtain a window handle.</source>
          <target state="translated">Um ein Fensterhandle abzurufen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.WindowInteropHelper.Handle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.WindowInteropHelper.Owner">
          <source>Gets or sets the handle of the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> owner window.</source>
          <target state="translated">Ruft das Fensterhandle des <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>-Besitzerfensters ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.WindowInteropHelper.Owner">
          <source>The owner window handle (HWND).</source>
          <target state="translated">Das Besitzerfensterhandle (HWND).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.WindowInteropHelper.Owner">
          <source>You can reparent windows by setting this property.</source>
          <target state="translated">Sie können Windows neu zuordnen, indem Sie diese Eigenschaft festlegen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.WindowInteropHelper.Owner">
          <source>As is true for general <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> programming, do not reparent windows that are already in use.</source>
          <target state="translated">"True" ist für allgemeine <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> programmieren, nicht neu zuordnen Fenster, die bereits in Verwendung sind.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.WindowInteropHelper.Owner">
          <source>to get or set this property value.</source>
          <target state="translated">zum Abrufen oder Festlegen der Wert dieser Eigenschaft.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.WindowInteropHelper.Owner">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>