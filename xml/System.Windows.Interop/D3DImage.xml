<Type Name="D3DImage" FullName="System.Windows.Interop.D3DImage">
  <TypeSignature Language="C#" Value="public class D3DImage : System.Windows.Media.ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi D3DImage extends System.Windows.Media.ImageSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.D3DImage" />
  <TypeSignature Language="VB.NET" Value="Public Class D3DImage&#xA;Inherits ImageSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class D3DImage : System::Windows::Media::ImageSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ImageSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fe146-101">Eine <see cref="T:System.Windows.Media.ImageSource" />, die eine vom Benutzer erstellte Direct3D-Oberfläche anzeigt.</span><span class="sxs-lookup"><span data-stu-id="fe146-101">An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-102">Verwenden der <xref:System.Windows.Interop.D3DImage> -Klasse zum Hosten von Direct3D-Inhalt in einer Windows Presentation Foundation (WPF)-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="fe146-102">Use the <xref:System.Windows.Interop.D3DImage> class to host Direct3D content in a Windows Presentation Foundation (WPF) application.</span></span>  
  
 <span data-ttu-id="fe146-103">Rufen Sie die <xref:System.Windows.Interop.D3DImage.Lock%2A> Methode, um die Direct3D Inhalt angezeigt wird, ändert sich der <xref:System.Windows.Interop.D3DImage>.</span><span class="sxs-lookup"><span data-stu-id="fe146-103">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the Direct3D content displayed by the <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="fe146-104">Rufen Sie die <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode zum Zuweisen einer Direct3D-Oberfläche, um eine <xref:System.Windows.Interop.D3DImage>.</span><span class="sxs-lookup"><span data-stu-id="fe146-104">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to a <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="fe146-105">Rufen Sie die <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> Methode zum Nachverfolgen von Updates an die Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-105">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to track updates to the Direct3D surface.</span></span> <span data-ttu-id="fe146-106">Rufen Sie die <xref:System.Windows.Interop.D3DImage.Unlock%2A> Methode, um die geänderten Bereiche anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fe146-106">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to display the changed areas.</span></span>  
  
 <span data-ttu-id="fe146-107">Die <xref:System.Windows.Interop.D3DImage> -Klasse verwaltet zwei Anzeigepuffer, die aufgerufen werden der *Hintergrundpuffer* und *front Puffer*.</span><span class="sxs-lookup"><span data-stu-id="fe146-107">The <xref:System.Windows.Interop.D3DImage> class manages two display buffers, which are called the *back buffer* and the *front buffer*.</span></span> <span data-ttu-id="fe146-108">Der Hintergrundpuffer ist die Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-108">The back buffer is your Direct3D surface.</span></span>  <span data-ttu-id="fe146-109">Änderungen an den Hintergrundpuffer werden auf den Front-Puffer vorwärts kopiert, beim Aufrufen der <xref:System.Windows.Interop.D3DImage.Unlock%2A> -Methode, in denen es auf die Hardware angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fe146-109">Changes to the back buffer are copied forward to the front buffer when you call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method, where it is displayed on the hardware.</span></span> <span data-ttu-id="fe146-110">In einigen Fällen wird der Front-Puffer nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="fe146-110">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="fe146-111">Diese mangelnde Verfügbarkeit kann durch Bildschirm sperren, Vollbild-exklusive Direct3D-Anwendungen, Benutzer wechseln oder andere Systemaktivitäten verursacht werden.</span><span class="sxs-lookup"><span data-stu-id="fe146-111">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="fe146-112">In diesem Fall wird die WPF-Anwendung benachrichtigt, durch Behandeln der <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="fe146-112">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="fe146-113">Wie Ihre Anwendung auf den Front-Puffer als nicht verfügbar reagiert, hängt davon ab, ob WPF aktiviert ist, auf Elemente des Softwarerendering zurückgreifen.</span><span class="sxs-lookup"><span data-stu-id="fe146-113">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="fe146-114">Die <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode verfügt über eine Überladung, die einen Parameter, der angibt akzeptiert, ob WPF Softwarerendering zurückgreift.</span><span class="sxs-lookup"><span data-stu-id="fe146-114">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering"></a><span data-ttu-id="fe146-115">Zu einem nicht verfügbar Front Puffer reagiert wird, wenn WPF nicht wieder auf Software Rendering liegt</span><span class="sxs-lookup"><span data-stu-id="fe146-115">Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</span></span>  
 <span data-ttu-id="fe146-116">Beim Aufrufen der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> überladen, oder rufen Sie die <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> -Überladung mit der `enableSoftwareFallback` Parameter festgelegt wird, um `false`, das Renderingsystem frei seinen Verweis auf den Hintergrundpuffer aus, wenn der Front-Puffer verfügbar ist mehr und keine Daten ist angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fe146-116">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="fe146-117">Wenn der Front-Puffer wieder verfügbar ist, löst das Renderingsystem die <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> Ereignis, um die WPF-Anwendung zu benachrichtigen.</span><span class="sxs-lookup"><span data-stu-id="fe146-117">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="fe146-118">Können, erstellen Sie einen Ereignishandler für das <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> Ereignis Rendering erneut mit einer gültigen Direct3D-Oberfläche neu starten.</span><span class="sxs-lookup"><span data-stu-id="fe146-118">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="fe146-119">Um Rendering neu zu starten, rufen Sie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe146-119">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering"></a><span data-ttu-id="fe146-120">Reagiert auf einen nicht verfügbar, Front-Puffer beim WPF greift auf Elemente des Softwarerendering gesichert</span><span class="sxs-lookup"><span data-stu-id="fe146-120">Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</span></span>  
 <span data-ttu-id="fe146-121">Beim Aufrufen der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> -Überladung mit der `enableSoftwareFallback` Parametersatz auf `true`, das Renderingsystem behält seinen Verweis auf den Hintergrundpuffer aus, wenn der Front-Puffer ausfällt, daher keine Notwendigkeit zum Aufrufen besteht <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> beim im Vordergrund Puffer steht erneut zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="fe146-121">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="fe146-122">Möglicherweise gibt es Situationen, in denen das Gerät des Benutzers nicht mehr verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="fe146-122">There may be situations where the user’s device becomes unavailable.</span></span>  <span data-ttu-id="fe146-123">In diesem Fall rufen <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> unter der WPF Verweis auf den Hintergrundpuffer freigeben.</span><span class="sxs-lookup"><span data-stu-id="fe146-123">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF’s reference to the back buffer.</span></span>  <span data-ttu-id="fe146-124">Aufrufen, wenn Sie Ihr Gerät zurücksetzen müssen, <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> mit der `backBuffer` Parametersatz auf `null`, und rufen Sie anschließend <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> erneut mit `backBuffer` legen Sie auf eine gültige Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-124">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with the `backBuffer` parameter set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe146-125">Leistung hängt stark auf die Einstellungen der Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-125">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="fe146-126">Weitere Informationen finden Sie unter [Überlegungen zur Leistung für WPF-Interoperabilität und Direct3D9](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-126">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe146-127">Die <xref:System.Windows.Interop.D3DImage> Klasse zeigt keine Direct3D-Inhalt beim Rendern von WPF in der Software, z. B. über eine Remotedesktopverbindung es sei denn, Sie rufen <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> , und geben Sie `true` für die `enableSoftwareFallback` Parameter.</span><span class="sxs-lookup"><span data-stu-id="fe146-127">The <xref:System.Windows.Interop.D3DImage> class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> and specify `true` for the `enableSoftwareFallback` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe146-128">Im folgenden Codebeispiel wird veranschaulicht, wie zum Deklarieren einer <xref:System.Windows.Interop.D3DImage> in XAML.</span><span class="sxs-lookup"><span data-stu-id="fe146-128">The following code example shows how to declare a <xref:System.Windows.Interop.D3DImage> in XAML.</span></span> <span data-ttu-id="fe146-129">Müssen Sie eine Zuordnung der <xref:System.Windows.Interop> Namespace, da er nicht in den standardmäßigen XAML-Namespaces enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="fe146-129">You must map the <xref:System.Windows.Interop> namespace, because it is not included in the default XAML namespaces.</span></span> <span data-ttu-id="fe146-130">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-130">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-xaml[System.Windows.Interop.D3DImage#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fe146-131">für den Zugriff auf nicht verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="fe146-131">for access to unmanaged resources.</span></span> <span data-ttu-id="fe146-132">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-132">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="fe146-133">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fe146-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe146-134">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Interop.D3DImage" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe146-134">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe146-135">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Interop.D3DImage" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe146-135">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-136">Die Bildschirmauflösung Standard ist 1/96 Zoll.</span><span class="sxs-lookup"><span data-stu-id="fe146-136">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fe146-137">für den Zugriff auf nicht verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="fe146-137">for access to unmanaged resources.</span></span> <span data-ttu-id="fe146-138">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-138">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="fe146-139">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fe146-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage (double dpiX, double dpiY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 dpiX, float64 dpiY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dpiX As Double, dpiY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage(double dpiX, double dpiY);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dpiX" Type="System.Double" />
        <Parameter Name="dpiY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dpiX"><span data-ttu-id="fe146-140">Die Anzeigeauflösung auf der x-Achse.</span><span class="sxs-lookup"><span data-stu-id="fe146-140">The display resolution on the x-axis.</span></span></param>
        <param name="dpiY"><span data-ttu-id="fe146-141">Die Anzeigeauflösung auf der y-Achse.</span><span class="sxs-lookup"><span data-stu-id="fe146-141">The display resolution on the y-axis.</span></span></param>
        <summary><span data-ttu-id="fe146-142">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Interop.D3DImage" />-Klasse mit der angegebenen Anzeigeauflösung.</span><span class="sxs-lookup"><span data-stu-id="fe146-142">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-143">Die Bildschirmauflösung Standard ist 1/96 Zoll.</span><span class="sxs-lookup"><span data-stu-id="fe146-143">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fe146-144"><paramref name="dpiX" /> oder <paramref name="dpiY" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="fe146-144"><paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fe146-145">für den Zugriff auf nicht verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="fe146-145">for access to unmanaged resources.</span></span> <span data-ttu-id="fe146-146">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-146">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="fe146-147">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fe146-147">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="AddDirtyRect">
      <MemberSignature Language="C#" Value="public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDirtyRect(valuetype System.Windows.Int32Rect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDirtyRect (dirtyRect As Int32Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDirtyRect(System::Windows::Int32Rect dirtyRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="System.Windows.Int32Rect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect"><span data-ttu-id="fe146-148">Ein <see cref="T:System.Windows.Int32Rect" />, das den geänderten Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="fe146-148">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</span></span></param>
        <summary><span data-ttu-id="fe146-149">Gibt den Bereich des Hintergrundpuffers an, der geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="fe146-149">Specifies the area of the back buffer that changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-150">Rufen Sie die <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> Methode an, dass Änderungen Code, den Hintergrundpuffer versucht hat.</span><span class="sxs-lookup"><span data-stu-id="fe146-150">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to indicate changes your code has made to the back buffer.</span></span> <span data-ttu-id="fe146-151">Um gerendert werden, die geänderte Bereich im Hintergrundpuffer benötigen einen entsprechenden geänderten Bereich für die <xref:System.Windows.Interop.D3DImage>.</span><span class="sxs-lookup"><span data-stu-id="fe146-151">To be rendered, the changed area on the back buffer must have a corresponding changed area on the <xref:System.Windows.Interop.D3DImage>.</span></span>  
  
 <span data-ttu-id="fe146-152">Rufen Sie die <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> und <xref:System.Windows.Interop.D3DImage.Lock%2A> Methoden vor dem Aufruf der <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fe146-152">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> and <xref:System.Windows.Interop.D3DImage.Lock%2A> methods before calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="fe146-153">Rufen Sie die <xref:System.Windows.Interop.D3DImage.Unlock%2A> Methode, um die geänderten Bereiche in den Front-Puffer zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="fe146-153">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the changed areas to the front buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe146-154">Nachdem einige Aufrufe von der <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> -Methode, die geänderten Bereiche in einem einzelnen Bereich zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="fe146-154">After a few calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method, the changed areas are merged into a single area.</span></span> <span data-ttu-id="fe146-155">Dies bedeutet, dass Sie gültige Daten außerhalb der geänderten Bereiche haben müssen.</span><span class="sxs-lookup"><span data-stu-id="fe146-155">This means you must have valid data outside of the changed areas.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe146-156">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> Methode, um den geänderten Bereich in den Hintergrundpuffer anzugeben.</span><span class="sxs-lookup"><span data-stu-id="fe146-156">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to specify the changed region in the back buffer.</span></span> <span data-ttu-id="fe146-157">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-157">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fe146-158">Die Bitmap wurde nicht durch einen Aufruf der <see cref="M:System.Windows.Interop.D3DImage.Lock" />-Methode oder der <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />-Methode gesperrt.</span><span class="sxs-lookup"><span data-stu-id="fe146-158">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span>  
  
 <span data-ttu-id="fe146-159">- oder - </span><span class="sxs-lookup"><span data-stu-id="fe146-159">-or-</span></span>  
  
 <span data-ttu-id="fe146-160">Der Hintergrundpuffer wurde nicht durch einen Aufruf der <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />-Methode zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="fe146-160">The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fe146-161">Mindestens eine der folgenden Bedingungen ist erfüllt.</span><span class="sxs-lookup"><span data-stu-id="fe146-161">One or more of the following conditions is true.</span></span>  
  
 <span data-ttu-id="fe146-162"><paramref name="dirtyRect.X" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="fe146-162"><paramref name="dirtyRect.X" /> &lt; 0</span></span>  
  
 <span data-ttu-id="fe146-163"><paramref name="dirtyRect.Y" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="fe146-163"><paramref name="dirtyRect.Y" /> &lt; 0</span></span>  
  
 <span data-ttu-id="fe146-164"><paramref name="dirtyRect.Width" /> &lt; 0 oder <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 oder <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span><span class="sxs-lookup"><span data-stu-id="fe146-164"><paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fe146-165">für den Zugriff auf nicht verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="fe146-165">for access to unmanaged resources.</span></span> <span data-ttu-id="fe146-166">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-166">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="fe146-167">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fe146-167">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe146-168">Erstellt einen änderbaren Klon des <see cref="T:System.Windows.Interop.D3DImage" />-Objekts, indem tiefe Kopien der Werte dieses Objekts erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="fe146-168">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values.</span></span> <span data-ttu-id="fe146-169">Beim Kopieren von Abhängigkeitseigenschaften kopiert diese Methode Ressourcenverweise und Datenbindungen (die möglicherweise nicht mehr aufgelöst werden können), jedoch keine Animationen oder deren aktuelle Werte.</span><span class="sxs-lookup"><span data-stu-id="fe146-169">When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="fe146-170">Ein änderbarer Klon des aktuellen Objekts.</span><span class="sxs-lookup"><span data-stu-id="fe146-170">A modifiable clone of the current object.</span></span> <span data-ttu-id="fe146-171">Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true." /> war.</span><span class="sxs-lookup"><span data-stu-id="fe146-171">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-172">Diese Methode wird verwendet, um änderbare Kopien erzeugen fixierte <xref:System.Windows.Freezable> Objekte (oder eine beliebige <xref:System.Windows.Freezable> Objekt).</span><span class="sxs-lookup"><span data-stu-id="fe146-172">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="fe146-173">Der Einfachheit halber führt Shadowing für diese Methode die geerbte Version mit einer Implementierung mit starker Typisierung.</span><span class="sxs-lookup"><span data-stu-id="fe146-173">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="fe146-174">Weitere Informationen finden Sie unter <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fe146-174">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="fe146-175">Das zu klonende Objekt.</span><span class="sxs-lookup"><span data-stu-id="fe146-175">The object to clone.</span></span></param>
        <summary><span data-ttu-id="fe146-176">Definiert die Instanz als Klon (tiefe Kopie) des angegebenen <see cref="T:System.Windows.Freezable" />-Elements, indem Basiseigenschaftenwerte (nicht animiert) verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fe146-176">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe146-177">Erstellt einen änderbaren Klon des <see cref="T:System.Windows.Interop.D3DImage" />-Objekts, indem tiefe Kopien der aktuellen Werte dieses Objekts erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="fe146-177">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="fe146-178">Ressourcenverweise, Datenbindungen und Animationen werden nicht kopiert, ihre aktuellen Werte werden jedoch kopiert.</span><span class="sxs-lookup"><span data-stu-id="fe146-178">Resource references, data bindings, and animations are not copied, but their current values are copied.</span></span></summary>
        <returns><span data-ttu-id="fe146-179">Ein änderbarer Klon des aktuellen Objekts.</span><span class="sxs-lookup"><span data-stu-id="fe146-179">A modifiable clone of the current object.</span></span> <span data-ttu-id="fe146-180">Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true" /> war.</span><span class="sxs-lookup"><span data-stu-id="fe146-180">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-181">Diese Methode wird verwendet, um änderbare Kopien erzeugen fixierte <xref:System.Windows.Freezable> Objekte (oder eine beliebige <xref:System.Windows.Freezable> Objekt).</span><span class="sxs-lookup"><span data-stu-id="fe146-181">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="fe146-182">Der Einfachheit halber führt Shadowing für diese Methode die geerbte Version mit einer Implementierung mit starker Typisierung.</span><span class="sxs-lookup"><span data-stu-id="fe146-182">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="fe146-183">Weitere Informationen finden Sie unter <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fe146-183">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="fe146-184">Der <see cref="T:System.Windows.Freezable" />, der geklont werden soll.</span><span class="sxs-lookup"><span data-stu-id="fe146-184">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="fe146-185">Macht die Instanz mithilfe aktueller Eigenschaftswerte zu einem Klon (tiefe Kopie) des angegebenen <see cref="T:System.Windows.Freezable" />-Elements, der geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="fe146-185">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackBuffer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Imaging.BitmapSource CopyBackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CopyBackBuffer () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Imaging::BitmapSource ^ CopyBackBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe146-186">Erstellt eine Softwarekopie des <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-186">Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <returns><span data-ttu-id="fe146-187">Eine <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, die eine Softwarekopie des aktuellen Zustands des Hintergrundpuffers darstellt, andernfalls <see langword="null" />, wenn der Hintergrundpuffer nicht gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="fe146-187">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, <see langword="null" /> if the back buffer cannot be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-188">Die <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> Methode wird von Clients, z. B. das Drucksystem aufgerufen und der <xref:System.Windows.Media.Imaging.RenderTargetBitmap> Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe146-188">The <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method is called by clients such as the printing system and the <xref:System.Windows.Media.Imaging.RenderTargetBitmap> class.</span></span>  
  
 <span data-ttu-id="fe146-189">Überschreiben Sie optional die <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> Methode, um benutzerdefinierte Logik zu implementieren und Zurückgeben einer anderen <xref:System.Windows.Media.Imaging.BitmapSource>.</span><span class="sxs-lookup"><span data-stu-id="fe146-189">Optionally override the <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method to implement custom logic and return a different <xref:System.Windows.Media.Imaging.BitmapSource>.</span></span> <span data-ttu-id="fe146-190">Sie können z. B. einen Platzhalter zurückgeben <xref:System.Windows.Media.Imaging.BitmapSource> Wenn standardmäßig <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> Implementierung gibt `null`.</span><span class="sxs-lookup"><span data-stu-id="fe146-190">For example, you can return a placeholder <xref:System.Windows.Media.Imaging.BitmapSource> if the default <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fe146-191">für den Zugriff auf nicht verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="fe146-191">for access to unmanaged resources.</span></span> <span data-ttu-id="fe146-192">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-192">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="fe146-193">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fe146-193">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe146-194">Erstellt beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der abgeleiteten <see cref="T:System.Windows.Interop.D3DImage" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe146-194">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class.</span></span></summary>
        <returns><span data-ttu-id="fe146-195">Die neue Instanz.</span><span class="sxs-lookup"><span data-stu-id="fe146-195">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-196">Ableiten von der <xref:System.Windows.Interop.D3DImage> -Klasse, die Sie überschreiben müssen die <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> Methode, um die richtige Klonen zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="fe146-196">If you derive from the <xref:System.Windows.Interop.D3DImage> class, you must override the <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> method to enable correct cloning.</span></span> <span data-ttu-id="fe146-197">Die standardmäßige Implementierung führt eine `return new D3DImage()`, das ist nicht richtig, wenn die Instanz eine andere Klasse ist.</span><span class="sxs-lookup"><span data-stu-id="fe146-197">The default implementation performs a `return new D3DImage()`, which will not be correct if the instance is a different class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!D3DImage ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe146-198">Gibt Ressourcen frei und führt andere Bereinigungsvorgänge durch, bevor das <see cref="T:System.Windows.Interop.D3DImage" /> durch die Garbage Collection wieder freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fe146-198">Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-199">Diese Methode überschreibt <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe146-199">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="fe146-200">Diese Methode sollte nicht von Anwendungscode aufgerufen werden. ein Objekt `Finalize` Methode wird automatisch während der Garbagecollection aufgerufen, durch einen Aufruf von seiner Finalisierung verfolgt, durch den Garbage Collector deaktiviert wurde die <xref:System.GC.SuppressFinalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fe146-200">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="fe146-201">Weitere Informationen finden Sie unter [Finalize-Methoden und Destruktoren](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md), und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="fe146-201">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fe146-202">für den Zugriff auf nicht verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="fe146-202">for access to unmanaged resources.</span></span> <span data-ttu-id="fe146-203">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="fe146-204">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fe146-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override sealed bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="fe146-205">Hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="fe146-205">Has no effect.</span></span></param>
        <summary><span data-ttu-id="fe146-206">Legt das <see cref="T:System.Windows.Interop.D3DImage" /> als nicht änderbar fest oder bestimmt, ob es als nicht änderbar festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fe146-206">Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns>
          <span data-ttu-id="fe146-207"><see langword="false" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="fe146-207"><see langword="false" /> in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-208">Die <xref:System.Windows.Interop.D3DImage> Klasse lässt nicht zu fixieren, da Änderungen immer aufgrund front Puffer Verfügbarkeit möglich sind.</span><span class="sxs-lookup"><span data-stu-id="fe146-208">The <xref:System.Windows.Interop.D3DImage> class does not allow freezing because changes are always possible due to front buffer availability.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="fe146-209">Die zu kopierende Instanz.</span><span class="sxs-lookup"><span data-stu-id="fe146-209">The instance to copy.</span></span></param>
        <summary><span data-ttu-id="fe146-210">Definiert die Instanz als fixierten Klon des angegebenen <see cref="T:System.Windows.Freezable" /> mit Basiseigenschaftswerten (nicht animiert).</span><span class="sxs-lookup"><span data-stu-id="fe146-210">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="fe146-211">Das <see cref="T:System.Windows.Freezable" />, das kopiert und fixiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fe146-211">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="fe146-212">Legt die aktuelle Instanz als fixierten Klon des angegebenen <see cref="T:System.Windows.Freezable" /> fest.</span><span class="sxs-lookup"><span data-stu-id="fe146-212">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="fe146-213">Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, werden die aktuellen animierten Werte kopiert.</span><span class="sxs-lookup"><span data-stu-id="fe146-213">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override sealed double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe146-214">Ruft die Höhe des <see cref="T:System.Windows.Interop.D3DImage" /> ab.</span><span class="sxs-lookup"><span data-stu-id="fe146-214">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="fe146-215">Die Höhe des <see cref="T:System.Windows.Interop.D3DImage" /> in Maßeinheiten.</span><span class="sxs-lookup"><span data-stu-id="fe146-215">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="fe146-216">Eine Maßeinheit ist 1/96 Zoll.</span><span class="sxs-lookup"><span data-stu-id="fe146-216">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-217">Der Wert der <xref:System.Windows.Interop.D3DImage.Height%2A> können ändern, wenn Sie ein neuer Hintergrundpuffer zugewiesen ist, durch einen Aufruf der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fe146-217">The value of <xref:System.Windows.Interop.D3DImage.Height%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailable">
      <MemberSignature Language="C#" Value="public bool IsFrontBufferAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrontBufferAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrontBufferAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrontBufferAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe146-218">Ruft einen Wert ab, der angibt, ob ein Frontpuffer vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="fe146-218">Gets a value that indicates whether a front buffer exists.</span></span></summary>
        <value>
          <span data-ttu-id="fe146-219"><see langword="true" />, wenn ein Frontpuffer vorhanden ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-219"><see langword="true" /> if a front buffer exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-220">In einigen Fällen wird der Front-Puffer nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="fe146-220">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="fe146-221">Diese mangelnde Verfügbarkeit kann durch Bildschirm sperren, Vollbild-exklusive Direct3D-Anwendungen, Benutzer wechseln oder andere Systemaktivitäten verursacht werden.</span><span class="sxs-lookup"><span data-stu-id="fe146-221">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="fe146-222">In diesem Fall wird die WPF-Anwendung benachrichtigt, durch Behandeln der <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="fe146-222">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="fe146-223">Wie Ihre Anwendung auf den Front-Puffer als nicht verfügbar reagiert, hängt davon ab, ob WPF aktiviert ist, auf Elemente des Softwarerendering zurückgreifen.</span><span class="sxs-lookup"><span data-stu-id="fe146-223">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="fe146-224">Die <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode verfügt über eine Überladung, die einen Parameter, der angibt akzeptiert, ob WPF Softwarerendering zurückgreift.</span><span class="sxs-lookup"><span data-stu-id="fe146-224">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="fe146-225">Weitere Informationen finden Sie unter den Hinweisen in der <xref:System.Windows.Interop.D3DImage> Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe146-225">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
<a name="dependencyPropertyInfo_IsFrontBufferAvailable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fe146-226">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fe146-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fe146-227">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="fe146-227">Identifier field</span></span>|<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty>|  
|<span data-ttu-id="fe146-228">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="fe146-228">Metadata properties set to `true`</span></span>|<span data-ttu-id="fe146-229">Keiner</span><span class="sxs-lookup"><span data-stu-id="fe146-229">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fe146-230">Im folgenden Codebeispiel wird veranschaulicht, wie überprüft der <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> Eigenschaft, wenn das Ziel Zusammensetzung zu rendern.</span><span class="sxs-lookup"><span data-stu-id="fe146-230">The following code example shows how to check the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> property when rendering the composition target.</span></span> <span data-ttu-id="fe146-231">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-231">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <altmember cref="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsFrontBufferAvailableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsFrontBufferAvailableChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe146-232">Tritt ein, wenn sich die <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="fe146-232">Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-233">Behandeln der <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> benachrichtigt werden, wenn der Status des Front-Puffers wechselt.</span><span class="sxs-lookup"><span data-stu-id="fe146-233">Handle the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> to be notified when the status of the front buffer changes.</span></span> <span data-ttu-id="fe146-234">Wie Ihre Anwendung auf den Front-Puffer als nicht verfügbar reagiert, hängt davon ab, ob WPF aktiviert ist, auf Elemente des Softwarerendering zurückgreifen.</span><span class="sxs-lookup"><span data-stu-id="fe146-234">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="fe146-235">Die <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode verfügt über eine Überladung, die einen Parameter, der angibt akzeptiert, ob WPF Softwarerendering zurückgreift.</span><span class="sxs-lookup"><span data-stu-id="fe146-235">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="fe146-236">Weitere Informationen finden Sie unter den Hinweisen in der <xref:System.Windows.Interop.D3DImage> Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe146-236">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrontBufferAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFrontBufferAvailableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFrontBufferAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe146-237">Bezeichnet die <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fe146-237">Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe146-238">Sperrt das <see cref="T:System.Windows.Interop.D3DImage" /> und aktiviert Vorgänge im Hintergrundpuffer.</span><span class="sxs-lookup"><span data-stu-id="fe146-238">Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-239">Rufen Sie die <xref:System.Windows.Interop.D3DImage.Lock%2A> Methode so ändern Sie den Hintergrundpuffer durch Aufrufen der <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> und <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="fe146-239">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the back buffer by calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> and <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> methods.</span></span> <span data-ttu-id="fe146-240">Während der <xref:System.Windows.Interop.D3DImage> ist gesperrt, Rendern der Anwendung kann auch auf die Direct3D-Oberfläche, die auf den Hintergrundpuffer zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="fe146-240">While the <xref:System.Windows.Interop.D3DImage> is locked, your application can also render to the Direct3D surface assigned to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe146-241">Die <xref:System.Windows.Interop.D3DImage.Lock%2A> Methode blockiert, wenn das Renderingsystem den Hintergrundpuffer zum Aktualisieren des Front-Puffers liest.</span><span class="sxs-lookup"><span data-stu-id="fe146-241">The <xref:System.Windows.Interop.D3DImage.Lock%2A> method blocks when the rendering system is reading the back buffer to update the front buffer.</span></span> <span data-ttu-id="fe146-242">Verwenden der <xref:System.Windows.Interop.D3DImage.TryLock%2A> Methode zur Vermeidung auf unbestimmte Zeit blockiert.</span><span class="sxs-lookup"><span data-stu-id="fe146-242">Use the <xref:System.Windows.Interop.D3DImage.TryLock%2A> method to avoid blocking indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe146-243">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Windows.Interop.D3DImage.Lock%2A> Methode zum Aktivieren von Updates auf den Hintergrundpuffer.</span><span class="sxs-lookup"><span data-stu-id="fe146-243">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to enable updates to the back buffer.</span></span> <span data-ttu-id="fe146-244">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-244">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fe146-245">Die Sperrenanzahl ist gleich <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-245">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.ImageMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Metadata As ImageMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageMetadata ^ Metadata { System::Windows::Media::ImageMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe146-246">Ruft die Metadaten ab, die der Bildquelle zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="fe146-246">Gets the metadata associated with the image source.</span></span></summary>
        <value>
          <span data-ttu-id="fe146-247"><see langword="null" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="fe146-247"><see langword="null" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public int PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe146-248">Ruft die Höhe des <see cref="T:System.Windows.Interop.D3DImage" /> in Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="fe146-248">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="fe146-249">Die Höhe des <see cref="T:System.Windows.Interop.D3DImage" /> in Pixel.</span><span class="sxs-lookup"><span data-stu-id="fe146-249">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-250">Der Wert der <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> können ändern, wenn Sie ein neuer Hintergrundpuffer zugewiesen ist, durch einen Aufruf der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fe146-250">The value of <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe146-251">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> Eigenschaft, um den geänderten Bereich in den Hintergrundpuffer anzugeben.</span><span class="sxs-lookup"><span data-stu-id="fe146-251">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="fe146-252">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-252">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public int PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe146-253">Ruft die Breite des <see cref="T:System.Windows.Interop.D3DImage" /> in Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="fe146-253">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="fe146-254">Die Breite des <see cref="T:System.Windows.Interop.D3DImage" /> in Pixel.</span><span class="sxs-lookup"><span data-stu-id="fe146-254">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-255">Der Wert der <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> können ändern, wenn Sie ein neuer Hintergrundpuffer zugewiesen ist, durch einen Aufruf der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fe146-255">The value of <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe146-256">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> Eigenschaft, um den geänderten Bereich in den Hintergrundpuffer anzugeben.</span><span class="sxs-lookup"><span data-stu-id="fe146-256">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="fe146-257">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-257">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBackBuffer">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe146-258">Weist eine Direct3D-Oberfläche als Quelle des Hintergrundpuffers zu.</span><span class="sxs-lookup"><span data-stu-id="fe146-258">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="fe146-259">Der Typ der Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-259">The type of Direct3D surface.</span></span> <span data-ttu-id="fe146-260">Muss ein gültiger <see cref="T:System.Windows.Interop.D3DResourceType" /> sein.</span><span class="sxs-lookup"><span data-stu-id="fe146-260">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="fe146-261">Die Direct3D-Oberfläche, die als Hintergrundpuffer zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fe146-261">The Direct3D surface to assign as the back buffer.</span></span></param>
        <summary><span data-ttu-id="fe146-262">Weist eine Direct3D-Oberfläche als Quelle des Hintergrundpuffers zu.</span><span class="sxs-lookup"><span data-stu-id="fe146-262">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-263">Rufen Sie die <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode zum Zuweisen einer Direct3D-Oberfläche auf die Hintergrundpuffer.</span><span class="sxs-lookup"><span data-stu-id="fe146-263">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe146-264">Leistung hängt stark auf die Einstellungen der Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-264">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="fe146-265">Weitere Informationen finden Sie unter [Überlegungen zur Leistung für WPF-Interoperabilität und Direct3D9](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-265">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
 <span data-ttu-id="fe146-266">Aufrufen der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> Überladung entspricht dem Aufrufen der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> -Überladung mit der `enableSoftwareFallback` Parametersatz auf `false`.</span><span class="sxs-lookup"><span data-stu-id="fe146-266">Calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload is identical to calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`.</span></span> <span data-ttu-id="fe146-267">Beim Aufruf <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> , oder rufen Sie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> mit der `enableSoftwareFallback` Parametersatz auf `false`, das Renderingsystem gibt den Verweis auf den Hintergrundpuffer frei, wenn es sich bei front Puffer mehr verfügbar ist und es wird nichts angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fe146-267">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> or call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="fe146-268">Wenn der Front-Puffer wieder verfügbar ist, löst das Renderingsystem die <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> Ereignis, um die WPF-Anwendung zu benachrichtigen.</span><span class="sxs-lookup"><span data-stu-id="fe146-268">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="fe146-269">Können, erstellen Sie einen Ereignishandler für das <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> Ereignis Rendering erneut mit einer gültigen Direct3D-Oberfläche neu starten.</span><span class="sxs-lookup"><span data-stu-id="fe146-269">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="fe146-270">Um Rendering neu zu starten, rufen Sie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe146-270">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="fe146-271">Die folgende Liste enthält die erforderlichen Hintergrundpuffer-Einstellungen für die `IDirect3DSurface9` Typ.</span><span class="sxs-lookup"><span data-stu-id="fe146-271">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="fe146-272">`D3DFMT_A8R8G8B8` oder `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="fe146-272">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="fe146-273">Multisampling ist zulässig, auf `IDirect3DSurface9Ex` nur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="fe146-273">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe146-274">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode zum Zuweisen einer Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-274">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface.</span></span> <span data-ttu-id="fe146-275">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-275">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fe146-276">Das <see cref="T:System.Windows.Interop.D3DImage" /> wurde nicht durch einen Aufruf der <see cref="M:System.Windows.Interop.D3DImage.Lock" />-Methode oder der <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />-Methode gesperrt.</span><span class="sxs-lookup"><span data-stu-id="fe146-276">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fe146-277"><paramref name="backBufferType" /> ist kein gültiger <see cref="T:System.Windows.Interop.D3DResourceType" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-277"><paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fe146-278">Die Erstellungsparameter für <paramref name="backBuffer" /> erfüllen nicht die Anforderungen für <paramref name="backBufferType" /> oder die <paramref name="backBuffer" />-Einheit ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="fe146-278">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fe146-279">für den Zugriff auf nicht verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="fe146-279">for access to unmanaged resources.</span></span> <span data-ttu-id="fe146-280">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-280">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="fe146-281">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fe146-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer, bool enableSoftwareFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr, enableSoftwareFallback As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
        <Parameter Name="enableSoftwareFallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="fe146-282">Der Typ der Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-282">The type of Direct3D surface.</span></span> <span data-ttu-id="fe146-283">Muss ein gültiger <see cref="T:System.Windows.Interop.D3DResourceType" /> sein.</span><span class="sxs-lookup"><span data-stu-id="fe146-283">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="fe146-284">Die Direct3D-Oberfläche, die als Hintergrundpuffer zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fe146-284">The Direct3D surface to assign as the back buffer.</span></span></param>
        <param name="enableSoftwareFallback">
          <span data-ttu-id="fe146-285"><see langword="true" />, um auf Softwarerendering zurückzugreifen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-285"><see langword="true" /> to fall back on software rendering; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fe146-286">Weist eine Direct3D-Oberfläche als Quelle des Hintergrundpuffers zu.</span><span class="sxs-lookup"><span data-stu-id="fe146-286">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-287">Beim Aufrufen der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> überladen, oder rufen Sie die <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> -Überladung mit der `enableSoftwareFallback` Parameter festgelegt wird, um `false`, das Renderingsystem frei seinen Verweis auf den Hintergrundpuffer aus, wenn der Front-Puffer verfügbar ist mehr und keine Daten ist angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fe146-287">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="fe146-288">Wenn der Front-Puffer wieder verfügbar ist, löst das Renderingsystem die <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> Ereignis, um die WPF-Anwendung zu benachrichtigen.</span><span class="sxs-lookup"><span data-stu-id="fe146-288">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="fe146-289">Können, erstellen Sie einen Ereignishandler für das <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> Ereignis Rendering erneut mit einer gültigen Direct3D-Oberfläche neu starten.</span><span class="sxs-lookup"><span data-stu-id="fe146-289">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="fe146-290">Um Rendering neu zu starten, rufen Sie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe146-290">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="fe146-291">Beim Aufruf <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> mit der `enableSoftwareFallback` Parametersatz auf `true`, das Renderingsystem behält seinen Verweis auf den Hintergrundpuffer aus, wenn der Front-Puffer ausfällt, daher keine Notwendigkeit zum Aufrufen besteht <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Wenn der Front-Puffer ist Verfügbare erneut aus.</span><span class="sxs-lookup"><span data-stu-id="fe146-291">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="fe146-292">Möglicherweise gibt es Situationen, in denen das Gerät des Benutzers nicht mehr verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="fe146-292">There may be situations where the user’s device becomes unavailable.</span></span>  <span data-ttu-id="fe146-293">In diesem Fall rufen <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> unter der WPF Verweis auf den Hintergrundpuffer freigeben.</span><span class="sxs-lookup"><span data-stu-id="fe146-293">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF’s reference to the back buffer.</span></span>  <span data-ttu-id="fe146-294">Wenn Sie Ihr Gerät zurücksetzen müssen, rufen Sie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> mit `backBuffer` festgelegt `null`, und rufen Sie dann <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> erneut mit `backBuffer` legen Sie auf eine gültige Direct3D-Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="fe146-294">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with `backBuffer` set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
 <span data-ttu-id="fe146-295">Die folgende Liste enthält die erforderlichen Hintergrundpuffer-Einstellungen für die `IDirect3DSurface9` Typ.</span><span class="sxs-lookup"><span data-stu-id="fe146-295">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="fe146-296">`D3DFMT_A8R8G8B8` oder `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="fe146-296">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="fe146-297">Multisampling ist zulässig, auf `IDirect3DSurface9Ex` nur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="fe146-297">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLock">
      <MemberSignature Language="C#" Value="public bool TryLock (System.Windows.Duration timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryLock(valuetype System.Windows.Duration timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryLock (timeout As Duration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryLock(System::Windows::Duration timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="fe146-298">Der Zeitraum, über den auf den Erhalt der Sperre gewartet werden soll.</span><span class="sxs-lookup"><span data-stu-id="fe146-298">The duration to wait for the lock to be acquired.</span></span></param>
        <summary><span data-ttu-id="fe146-299">Versucht, das <see cref="T:System.Windows.Interop.D3DImage" /> zu sperren, und wartet den angegebenen Zeitraum ab.</span><span class="sxs-lookup"><span data-stu-id="fe146-299">Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</span></span></summary>
        <returns>
          <span data-ttu-id="fe146-300"><see langword="true" />, wenn die Sperre erhalten wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-300"><see langword="true" /> if the lock was acquired; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fe146-301">Für <paramref name="timeout" /> ist <see cref="P:System.Windows.Duration.Automatic" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="fe146-301"><paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fe146-302">Die Sperrenanzahl ist gleich <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-302">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unlock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe146-303">Verringert die Sperrenanzahl für das <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="fe146-303">Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-304">Wenn die Sperrenanzahl für die <xref:System.Windows.Interop.D3DImage> NULL ist, erreicht die <xref:System.Windows.Interop.D3DImage> vollständig entsperrt wird.</span><span class="sxs-lookup"><span data-stu-id="fe146-304">When the lock count for the <xref:System.Windows.Interop.D3DImage> reaches zero, the <xref:System.Windows.Interop.D3DImage> is fully unlocked.</span></span> <span data-ttu-id="fe146-305">Die <xref:System.Windows.Interop.D3DImage> RuntimeCompatibility zum Rendern, wenn das Bild Bereiche geändert hat, die von früheren aufrufen angegeben wurden die <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fe146-305">The <xref:System.Windows.Interop.D3DImage> is marked for rendering if the image has changed areas that were specified by previous calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="fe146-306">Wenn die Änderungen und Rendering erfolgt, zusätzliche Aufrufe für die <xref:System.Windows.Interop.D3DImage.Lock%2A> Methodenblock, bis der Renderthread den Inhalt des Puffers zurück auf den Front-Puffer kopiert wurde.</span><span class="sxs-lookup"><span data-stu-id="fe146-306">When the changes are committed and rendering occurs, additional calls to the <xref:System.Windows.Interop.D3DImage.Lock%2A> method block until the render thread has copied the contents of the back buffer to the front buffer.</span></span> <span data-ttu-id="fe146-307">Diese Synchronisierung wird vermieden, Anzeige-Elemente, z. B. beendet wird.</span><span class="sxs-lookup"><span data-stu-id="fe146-307">This synchronization avoids display artifacts, such as tearing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe146-308">Aktualisieren Sie die Direct3D-Oberfläche, während nicht die <xref:System.Windows.Interop.D3DImage> ist nicht gesperrt.</span><span class="sxs-lookup"><span data-stu-id="fe146-308">Do not update the Direct3D surface while the <xref:System.Windows.Interop.D3DImage> is unlocked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe146-309">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Windows.Interop.D3DImage.Unlock%2A> Methode, um den aktualisierten Hintergrundpuffer auf den Front-Puffer zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="fe146-309">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the updated back buffer to the front buffer.</span></span> <span data-ttu-id="fe146-310">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="fe146-310">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override sealed double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe146-311">Ruft die Breite des <see cref="T:System.Windows.Interop.D3DImage" /> ab.</span><span class="sxs-lookup"><span data-stu-id="fe146-311">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="fe146-312">Die Breite des <see cref="T:System.Windows.Interop.D3DImage" /> in Maßeinheiten.</span><span class="sxs-lookup"><span data-stu-id="fe146-312">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="fe146-313">Eine Maßeinheit ist 1/96 Zoll.</span><span class="sxs-lookup"><span data-stu-id="fe146-313">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe146-314">Der Wert der <xref:System.Windows.Interop.D3DImage.Width%2A> können ändern, wenn Sie ein neuer Hintergrundpuffer zugewiesen ist, durch einen Aufruf der <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fe146-314">The value of <xref:System.Windows.Interop.D3DImage.Width%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
  </Members>
</Type>