<Type Name="CompositionContainer" FullName="System.ComponentModel.Composition.Hosting.CompositionContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="71df1c0da25a471a8bbecc4088c811a2b9d5698a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78714680" /></Metadata><TypeSignature Language="C#" Value="public class CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable, System.ComponentModel.Composition.ICompositionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositionContainer extends System.ComponentModel.Composition.Hosting.ExportProvider implements class System.ComponentModel.Composition.ICompositionService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositionContainer&#xA;Inherits ExportProvider&#xA;Implements ICompositionService, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionContainer : System::ComponentModel::Composition::Hosting::ExportProvider, IDisposable, System::ComponentModel::Composition::ICompositionService" />
  <TypeSignature Language="F#" Value="type CompositionContainer = class&#xA;    inherit ExportProvider&#xA;    interface ICompositionService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Hosting.ExportProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.ICompositionService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="65ad8-101">Verwaltet die Komposition von Teilen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-101">Manages the composition of parts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad8-102">Ein <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>-Objekt dient zwei Haupt Zwecken in einer Anwendung.</span><span class="sxs-lookup"><span data-stu-id="65ad8-102">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object serves two major purposes in an application.</span></span> <span data-ttu-id="65ad8-103">Zuerst wird nachverfolgt, welche Teile für die Komposition und deren Abhängigkeiten verfügbar sind, und die Zusammensetzung wird immer dann durchführt, wenn sich der Satz der verfügbaren Teile ändert.</span><span class="sxs-lookup"><span data-stu-id="65ad8-103">First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes.</span></span> <span data-ttu-id="65ad8-104">Zweitens stellt Sie die Methoden bereit, mit denen die Anwendung Instanzen von zusammengesetzten Teilen abruft oder die Abhängigkeiten eines Zusammensetz baren Teils füllt.</span><span class="sxs-lookup"><span data-stu-id="65ad8-104">Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="65ad8-105">Dieser Typ implementiert die <xref:System.IDisposable>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="65ad8-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="65ad8-106">Nach Abschluss der Verwendung sollten Sie den Typ entweder direkt oder indirekt löschen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="65ad8-107">Zum direkten Löschen des Typs rufen Sie seine <xref:System.IDisposable.Dispose%2A>-Methode in einem `try`/`catch`-Block auf.</span><span class="sxs-lookup"><span data-stu-id="65ad8-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="65ad8-108">Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="65ad8-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="65ad8-109">Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.</span><span class="sxs-lookup"><span data-stu-id="65ad8-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="65ad8-110">Teile können dem Container entweder direkt oder über die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A>-Eigenschaft zur Verfügung gestellt werden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-110">Parts can be made available to the container either directly or through the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A> property.</span></span> <span data-ttu-id="65ad8-111">Alle Teile, die in diesem <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> erkennbar sind, stehen dem Container zur Verfügung, um Importe und alle direkt hinzugefügten Teile zu erfüllen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-111">All the parts discoverable in this <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> are available to the container to fulfill imports, along with any parts added directly.</span></span>  
  
 <span data-ttu-id="65ad8-112">Mit der <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>-Methode können instanziierte Teile einem vorhandenen Container hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-112">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method allows instantiated parts to be added to an existing container.</span></span> <span data-ttu-id="65ad8-113">Wenn die Komposition erfolgreich ist, werden die Importe der Teile aus dem Container ausgefüllt, und ihre Exporte sind für andere Teile verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65ad8-113">Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts.</span></span> <span data-ttu-id="65ad8-114">Importe, die als rezusammensetzbar gekennzeichnet sind, werden für die Neukomposition registriert.</span><span class="sxs-lookup"><span data-stu-id="65ad8-114">Imports marked as recomposable will be registered for recomposition.</span></span>  
  
 <span data-ttu-id="65ad8-115">Die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A>-Methode ermöglicht es einem Teil, seine Importe auszufüllen, ohne dem Container hinzugefügt zu werden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-115">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A> method allows a part to have its imports filled without being added to the container.</span></span> <span data-ttu-id="65ad8-116">Wenn die Komposition erfolgreich ist, werden die Importe des Parts ausgefüllt, aber die Exporte des Teils sind nicht für andere Teile verfügbar, und für die Neukomposition werden keine Importe registriert.</span><span class="sxs-lookup"><span data-stu-id="65ad8-116">If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.</span></span>  
  
 <span data-ttu-id="65ad8-117"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Objekte sollten immer verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-117"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objects should always be disposed.</span></span> <span data-ttu-id="65ad8-118">Wenn die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A>-Methode aufgerufen wird, löscht das <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>-Objekt auch alle Teile, die es erstellt hat.</span><span class="sxs-lookup"><span data-stu-id="65ad8-118">When the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A> method is called, the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object also disposes all the parts that it has created.</span></span>  
  
 <span data-ttu-id="65ad8-119">Ein <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Objekt, auf das von mehreren Threads aus zugegriffen werden kann, muss mithilfe des <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29>-Konstruktors mit dem `isThreadSafe`-Parameter auf `true`festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-119">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object that can be accessed from multiple threads must be constructed with the `isThreadSafe` parameter set to `true`, using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29> constructor.</span></span> <span data-ttu-id="65ad8-120">Wenn `isThreadSafe` `true`ist, wird die Leistung etwas langsamer, daher empfiehlt es sich, diesen Parameter in Single Thread-Szenarios `false` zu legen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-120">Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios.</span></span> <span data-ttu-id="65ad8-121">Der Standardwert ist `false`.</span><span class="sxs-lookup"><span data-stu-id="65ad8-121">The default is `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="65ad8-122">Ein <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> sollte sich niemals selbst importieren oder einen Teil, der einen Verweis darauf enthält.</span><span class="sxs-lookup"><span data-stu-id="65ad8-122">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> should never import itself, or a part that has a reference to it.</span></span> <span data-ttu-id="65ad8-123">Ein solcher Verweis kann es einem nicht vertrauenswürdigen Teil ermöglichen, Zugriff auf alle Teile im Container zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="65ad8-123">Such a reference could allow an untrusted part to gain access all the parts in the container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65ad8-124">Im folgenden Beispiel wird ein <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Objekt mit einem Katalog initialisiert und zum Auffüllen der Importe eines Teils verwendet.</span><span class="sxs-lookup"><span data-stu-id="65ad8-124">In the following example, a <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object is initialized with a catalog and is used to fill the imports of a part.</span></span> <span data-ttu-id="65ad8-125">In diesem Beispiel wird das attributierte Programmiermodell verwendet.</span><span class="sxs-lookup"><span data-stu-id="65ad8-125">This example uses the Attributed Programming Model.</span></span>  
  
 [!code-csharp[Composition.CompositionContainer#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/49b787ff-2741-4836-ad51-c3017dc592d4"><span data-ttu-id="65ad8-126">Übersicht über das Modell der attributierten Programmierung</span><span class="sxs-lookup"><span data-stu-id="65ad8-126">Attributed Programming Model Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65ad8-127">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="65ad8-127">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65ad8-128">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="65ad8-128">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer providers" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="providers"><span data-ttu-id="65ad8-129">Ein Array von <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />-Objekten, die den <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Zugriff auf <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte bereitstellen, oder <see langword="null" />, um <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> auf ein leeres <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> festzulegen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-129">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="65ad8-130">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Klasse mit den angegebenen Exportanbietern.</span><span class="sxs-lookup"><span data-stu-id="65ad8-130">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified export providers.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65ad8-131"><paramref name="providers" /> enthält ein Element, das <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="65ad8-131"><paramref name="providers" /> contains an element that is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (compositionOptions As CompositionOptions, ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Hosting.CompositionOptions * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (compositionOptions, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="compositionOptions"><span data-ttu-id="65ad8-132">Ein Objekt, das das Verhalten dieses Containers angibt.</span><span class="sxs-lookup"><span data-stu-id="65ad8-132">An object that specifies the behavior of this container.</span></span></param>
        <param name="providers"><span data-ttu-id="65ad8-133">Ein Array von <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />-Objekten, die den <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Zugriff auf <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte bereitstellen, oder <see langword="null" />, um <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> auf ein leeres <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> festzulegen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-133">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="65ad8-134">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Klasse mit dem angegebenen Katalog und den angegebenen Exportanbietern und Optionen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-134">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified export providers and options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65ad8-135"><paramref name="providers" /> enthält ein Element, das <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="65ad8-135"><paramref name="providers" /> contains an element that is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="65ad8-136">Ein Katalog, der <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte für <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="65ad8-136">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></param>
        <param name="providers"><span data-ttu-id="65ad8-137">Ein Array von <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />-Objekten, die den <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Zugriff auf <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte bereitstellen, oder <see langword="null" />, um <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> auf ein leeres <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> festzulegen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-137">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="65ad8-138">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Klasse mit dem angegebenen Katalog und den angegebenen Exportanbietern.</span><span class="sxs-lookup"><span data-stu-id="65ad8-138">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog and export providers.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65ad8-139"><paramref name="providers" /> enthält ein Element, das <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="65ad8-139"><paramref name="providers" /> contains an element that is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, isThreadSafe As Boolean, ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, bool isThreadSafe, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * bool * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, isThreadSafe, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="65ad8-140">Ein Katalog, der <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte für <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="65ad8-140">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></param>
        <param name="isThreadSafe"><span data-ttu-id="65ad8-141"><see langword="true" />, wenn dieses <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Objekt threadsicher sein muss, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-141"><see langword="true" /> if this <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object must be thread-safe; otherwise, <see langword="false" />.</span></span></param>
        <param name="providers"><span data-ttu-id="65ad8-142">Ein Array von <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />-Objekten, die den <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Zugriff auf <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte bereitstellen, oder <see langword="null" />, um die <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />-Eigenschaft auf ein leeres <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> festzulegen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-142">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set the <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> property to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="65ad8-143">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Klasse mit dem angegebenen Katalog, im threadsicheren Modus und mit den angegebenen Exportanbietern.</span><span class="sxs-lookup"><span data-stu-id="65ad8-143">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog, thread-safe mode, and export providers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad8-144">Ein <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Objekt, auf das von mehreren Threads aus zugegriffen werden kann, muss den `isThreadSafe`-Parameter auf `true`festlegen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-144">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object that can be accessed from multiple threads must set the `isThreadSafe` parameter to `true`.</span></span> <span data-ttu-id="65ad8-145">Wenn `isThreadSafe` `true`ist, wird die Leistung etwas langsamer, daher empfiehlt es sich, diesen Parameter in Single Thread-Szenarios `false` zu legen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-145">Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios.</span></span> <span data-ttu-id="65ad8-146">Der Standardwert ist `false`.</span><span class="sxs-lookup"><span data-stu-id="65ad8-146">The default is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65ad8-147">Mindestens ein Element von <paramref name="providers" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-147">One or more elements of <paramref name="providers" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, compositionOptions As CompositionOptions, ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * System.ComponentModel.Composition.Hosting.CompositionOptions * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, compositionOptions, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="65ad8-148">Ein Katalog, der <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte für <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="65ad8-148">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></param>
        <param name="compositionOptions"><span data-ttu-id="65ad8-149">Ein Objekt, das Optionen angibt, die sich auf das Verhalten des Containers auswirken.</span><span class="sxs-lookup"><span data-stu-id="65ad8-149">An object that specifies options that affect the behavior of the container.</span></span></param>
        <param name="providers"><span data-ttu-id="65ad8-150">Ein Array von <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />-Objekten, die den <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Zugriff auf <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte bereitstellen, oder <see langword="null" />, um <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> auf ein leeres <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> festzulegen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-150">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="65ad8-151">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Klasse mit dem angegebenen Katalog, Optionen und Exportanbietern.</span><span class="sxs-lookup"><span data-stu-id="65ad8-151">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog, options, and export providers.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65ad8-152"><paramref name="providers" /> enthält ein Element, das <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="65ad8-152"><paramref name="providers" /> contains an element that is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Catalog">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Catalog As ComposablePartCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ Catalog { System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Catalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog" Usage="System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65ad8-153">Ruft das <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />-Objekt ab, das den Containerzugriff auf <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="65ad8-153">Gets the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> that provides the container access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></summary>
        <value><span data-ttu-id="65ad8-154">Der Katalog, der den <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Zugriff auf von <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />-Objekten erzeugte Exporte bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="65ad8-154">The catalog that provides the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to exports produced from <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> objects.</span></span> <span data-ttu-id="65ad8-155">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-155">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="65ad8-156">Das <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Objekt wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="65ad8-156">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compose">
      <MemberSignature Language="C#" Value="public void Compose (System.ComponentModel.Composition.Hosting.CompositionBatch batch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compose(class System.ComponentModel.Composition.Hosting.CompositionBatch batch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compose (batch As CompositionBatch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compose(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch);" />
      <MemberSignature Language="F#" Value="member this.Compose : System.ComponentModel.Composition.Hosting.CompositionBatch -&gt; unit" Usage="compositionContainer.Compose batch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </Parameters>
      <Docs>
        <param name="batch"><span data-ttu-id="65ad8-157">Änderungen an <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />, die während der Komposition berücksichtigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-157">Changes to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> to include during the composition.</span></span></param>
        <summary><span data-ttu-id="65ad8-158">Fügt die Teile im angegebenen <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /> dem Container hinzu bzw. entfernt sie aus dem Container und führt die Komposition aus.</span><span class="sxs-lookup"><span data-stu-id="65ad8-158">Adds or removes the parts in the specified <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /> from the container and executes composition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad8-159">Diese Methode ist die primäre Methode zum direkten hinzufügen oder Entfernen von Teilen aus dem Container.</span><span class="sxs-lookup"><span data-stu-id="65ad8-159">This method is the primary way of directly adding or removing parts from the container.</span></span> <span data-ttu-id="65ad8-160">Der <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> behält immer einen stabilen, zusammengesetzten Zustand bei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-160">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> will always maintain a stable, composed state.</span></span> <span data-ttu-id="65ad8-161">Daher ist das Aufrufen von <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> mit einem leeren <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> nie erforderlich, um die Komposition zu starten.</span><span class="sxs-lookup"><span data-stu-id="65ad8-161">Therefore, calling <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> with an empty <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> is never necessary to start composition.</span></span> <span data-ttu-id="65ad8-162">Stattdessen können Sie die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>-Methode immer dann aufzurufen, wenn Sie Änderungen an den für die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>verfügbaren Teilen vornehmen müssen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-162">Instead, call the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method whenever you need to make changes to the parts available to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span>  
  
 <span data-ttu-id="65ad8-163">Die <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> kann beide Teile enthalten, die hinzugefügt werden sollen, und Teile, die entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-163">The <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> can contain both parts to be added and parts to be removed.</span></span>  <span data-ttu-id="65ad8-164">Die Neukomposition findet nur einmal für jeden <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-164">Recomposition will take place only once for each call to <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65ad8-165">In diesem einfachen Beispiel werden drei Teile erstellt und der <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>hinzugefügt, und ein Teil wird abgerufen, um anzuzeigen, dass alle Importe ausgefüllt wurden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-165">In this simple example, three parts are created and added to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, and one part is retrieved to show that all imports have been filled.</span></span> <span data-ttu-id="65ad8-166">In diesem Beispiel wird das attributierte Programmiermodell verwendet.</span><span class="sxs-lookup"><span data-stu-id="65ad8-166">This example uses the Attributed Programming Model.</span></span>  
  
 [!code-csharp[Composition.CompositionContainer.Compose#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer.compose/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer.Compose#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer.compose/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/49b787ff-2741-4836-ad51-c3017dc592d4"><span data-ttu-id="65ad8-167">Übersicht über das Modell der attributierten Programmierung</span><span class="sxs-lookup"><span data-stu-id="65ad8-167">Attributed Programming Model Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65ad8-168">Gibt die von der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-168">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionContainer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65ad8-169">Gibt alle von der aktuellen Instanz der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-169">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad8-170">Rufen Sie `Dispose` auf, wenn Sie <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-170">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="65ad8-171">Die `Dispose`-Methode bewirkt, dass <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="65ad8-171">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state.</span></span> <span data-ttu-id="65ad8-172">Nachdem Sie `Dispose`aufgerufen haben, müssen Sie alle Verweise auf die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> belegt hat.</span><span class="sxs-lookup"><span data-stu-id="65ad8-172">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.</span></span>  
  
 <span data-ttu-id="65ad8-173">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="65ad8-173">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65ad8-174">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> freigeben.</span><span class="sxs-lookup"><span data-stu-id="65ad8-174">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="65ad8-175">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="65ad8-175">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="compositionContainer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="65ad8-176"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="65ad8-176"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="65ad8-177">Gibt die von <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-177">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetExportsCore (definition As ImportDefinition, atomicComposition As AtomicComposition) As IEnumerable(Of Export)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="override this.GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="compositionContainer.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="65ad8-178">Das Objekt, das die Bedingungen der abzurufenden <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte definiert.</span><span class="sxs-lookup"><span data-stu-id="65ad8-178">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="65ad8-179">Die zu verwendende Kompositionstransaktion oder <see langword="null" />, um die Transaktionskomposition zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="65ad8-179">The composition transaction to use, or <see langword="null" /> to disable transactional composition.</span></span></param>
        <summary><span data-ttu-id="65ad8-180">Gibt eine Auflistung aller Exporte zurück, die mit den Bedingungen im angegebenen <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />-Objekt zu übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-180">Returns a collection of all exports that match the conditions in the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> object.</span></span></summary>
        <returns><span data-ttu-id="65ad8-181">Eine Auflistung aller <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte in diesem <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Objekt, die mit den durch <paramref name="definition" /> angegebenen Bedingungen übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-181">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects in this <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object that match the conditions specified by <paramref name="definition" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad8-182">Implementierungen sollten keine kardinalitätsbezogenen Konflikte als Fehler behandeln und keine Ausnahmen für die kardinalitätsbezogenen Konflikte auslösen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-182">Implementations should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</span></span> <span data-ttu-id="65ad8-183">Wenn der Import beispielsweise genau einen Export anfordert und der Anbieter entweder keine übereinstimmenden Exporte oder mehr als einen hat, sollte die <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A> Methode eine leere <xref:System.Collections.Generic.IEnumerable%601> Auflistung von <xref:System.ComponentModel.Composition.Primitives.Export> Objekten zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="65ad8-183">For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A> method should return an empty <xref:System.Collections.Generic.IEnumerable%601> collection of <xref:System.ComponentModel.Composition.Primitives.Export> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt; Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ComponentModel.Composition.Hosting.ExportProvider&gt; Providers" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ReadOnlyCollection(Of ExportProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ Providers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt;" Usage="System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65ad8-184">Ruft die Exportanbieter ab, die den Containerzugriff auf zusätzliche <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />-Objekte bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-184">Gets the export providers that provide the container access to additional <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> objects.</span></span></summary>
        <value><span data-ttu-id="65ad8-185">Eine Auflistung von <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />-Objekten, die den <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Zugriff auf weitere <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-185">A collection of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to additional <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span> <span data-ttu-id="65ad8-186">Standard ist eine leere <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-186">The default is an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="65ad8-187">Der <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-187">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExport">
      <MemberSignature Language="C#" Value="public void ReleaseExport (System.ComponentModel.Composition.Primitives.Export export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExport(class System.ComponentModel.Composition.Primitives.Export export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExport (export As Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseExport(System::ComponentModel::Composition::Primitives::Export ^ export);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExport : System.ComponentModel.Composition.Primitives.Export -&gt; unit" Usage="compositionContainer.ReleaseExport export" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="export" Type="System.ComponentModel.Composition.Primitives.Export" />
      </Parameters>
      <Docs>
        <param name="export"><span data-ttu-id="65ad8-188">Das <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekt, das freigegeben werden muss.</span><span class="sxs-lookup"><span data-stu-id="65ad8-188">The <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> that needs to be released.</span></span></param>
        <summary><span data-ttu-id="65ad8-189">Gibt das angegebene <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekt aus dem <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> frei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-189">Releases the specified <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad8-190">Das Verhalten dieser Methode kann in Abhängigkeit von der Implementierung des <xref:System.ComponentModel.Composition.Hosting.ExportProvider> variieren, das die <xref:System.ComponentModel.Composition.Primitives.Export> Instanz erzeugt hat.</span><span class="sxs-lookup"><span data-stu-id="65ad8-190">The behavior of this method may vary depending on the implementation of the <xref:System.ComponentModel.Composition.Hosting.ExportProvider> that produced the <xref:System.ComponentModel.Composition.Primitives.Export> instance.</span></span> <span data-ttu-id="65ad8-191">Als Regel sollten nicht freigegebene Exporte vom Container getrennt werden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-191">As a rule, non-shared exports should be detached from the container.</span></span>  
  
 <span data-ttu-id="65ad8-192">Beispielsweise gibt die <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> nur eine <xref:System.ComponentModel.Composition.Primitives.Export> frei, wenn Sie von einer <xref:System.ComponentModel.Composition.Primitives.ComposablePart> stammt, die unter einem <xref:System.ComponentModel.Composition.CreationPolicy.NonShared> Kontext erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="65ad8-192">For example, the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> will only release an <xref:System.ComponentModel.Composition.Primitives.Export> if it comes from a <xref:System.ComponentModel.Composition.Primitives.ComposablePart> that was constructed under a <xref:System.ComponentModel.Composition.CreationPolicy.NonShared> context.</span></span> <span data-ttu-id="65ad8-193">Release in diesem Kontext bedeutet, dass die Abhängigkeits Kette der <xref:System.ComponentModel.Composition.Primitives.Export> Objekte durchlaufen, Verweise aus dem Container getrennt werden und bei Bedarf `Dispose` auf den <xref:System.ComponentModel.Composition.Primitives.ComposablePart> Objekten aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="65ad8-193">Release in this context means walking the dependency chain of the <xref:System.ComponentModel.Composition.Primitives.Export> objects, detaching references from the container and calling `Dispose` on the <xref:System.ComponentModel.Composition.Primitives.ComposablePart> objects as needed.</span></span> <span data-ttu-id="65ad8-194">Wenn die <xref:System.ComponentModel.Composition.Primitives.Export> in einem <xref:System.ComponentModel.Composition.CreationPolicy.Shared> Kontext erstellt wurde, führt der <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> keine Aktion aus, da die angegebene <xref:System.ComponentModel.Composition.Primitives.Export> von anderen Anforderern verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="65ad8-194">If the <xref:System.ComponentModel.Composition.Primitives.Export> was constructed under a <xref:System.ComponentModel.Composition.CreationPolicy.Shared> context the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> will do nothing, as the specified <xref:System.ComponentModel.Composition.Primitives.Export> may being used by other requestors.</span></span> <span data-ttu-id="65ad8-195">Diese werden nur getrennt, wenn der Container selbst freigegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="65ad8-195">Those will only be detached when the container is itself disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65ad8-196"><paramref name="export" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-196"><paramref name="export" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExport&lt;T&gt; (Lazy&lt;T&gt; export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExport&lt;T&gt;(class System.Lazy`1&lt;!!T&gt; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExport(Of T) (export As Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void ReleaseExport(Lazy&lt;T&gt; ^ export);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExport : Lazy&lt;'T&gt; -&gt; unit" Usage="compositionContainer.ReleaseExport export" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="export" Type="System.Lazy&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="65ad8-197">Der Typ des Exports.</span><span class="sxs-lookup"><span data-stu-id="65ad8-197">The type of the export.</span></span></typeparam>
        <param name="export"><span data-ttu-id="65ad8-198">Ein indirekter Verweis auf den zu entfernenden Export.</span><span class="sxs-lookup"><span data-stu-id="65ad8-198">An indirect reference to the export to remove.</span></span></param>
        <summary><span data-ttu-id="65ad8-199">Entfernt den angegebenen Export aus der Komposition und gibt sofern möglich seine Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-199">Removes the specified export from composition and releases its resources if possible.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65ad8-200"><paramref name="export" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-200"><paramref name="export" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports">
      <MemberSignature Language="C#" Value="public void ReleaseExports (System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports(class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports (exports As IEnumerable(Of Export))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;System.ComponentModel.Composition.Primitives.Export&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;" />
      </Parameters>
      <Docs>
        <param name="exports"><span data-ttu-id="65ad8-201">Eine Auflistung freizugebender <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekte.</span><span class="sxs-lookup"><span data-stu-id="65ad8-201">A collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to be released.</span></span></param>
        <summary><span data-ttu-id="65ad8-202">Gibt einen Satz von <see cref="T:System.ComponentModel.Composition.Primitives.Export" />-Objekten aus dem <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> frei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-202">Releases a set of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad8-203">Das Verhalten dieser Methode kann je nach Kontext, in dem die <xref:System.ComponentModel.Composition.Primitives.Export> erstellt wurde, variieren.</span><span class="sxs-lookup"><span data-stu-id="65ad8-203">The behavior of this method may vary depending on the context in which the <xref:System.ComponentModel.Composition.Primitives.Export> was constructed.</span></span> <span data-ttu-id="65ad8-204">Weitere Informationen finden Sie unter der Methode <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A>.</span><span class="sxs-lookup"><span data-stu-id="65ad8-204">For more information, see the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65ad8-205"><paramref name="exports" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-205"><paramref name="exports" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65ad8-206"><paramref name="exports" /> enthält ein Element, das <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="65ad8-206"><paramref name="exports" /> contains an element that is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExports&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports(Of T) (exports As IEnumerable(Of Lazy(Of T)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;Lazy&lt;'T&gt;&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="65ad8-207">Der Typ der Exporte.</span><span class="sxs-lookup"><span data-stu-id="65ad8-207">The type of the exports.</span></span></typeparam>
        <param name="exports"><span data-ttu-id="65ad8-208">Eine Auflistung von indirekten Verweisen auf die zu entfernenden Exporte.</span><span class="sxs-lookup"><span data-stu-id="65ad8-208">A collection of indirect references to the exports to be removed.</span></span></param>
        <summary><span data-ttu-id="65ad8-209">Entfernt eine Auflistung der Exporte aus der Komposition und gibt sofern möglich ihre Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-209">Removes a collection of exports from composition and releases their resources if possible.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65ad8-210"><paramref name="exports" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-210"><paramref name="exports" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65ad8-211"><paramref name="exports" /> enthält ein Element, das <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="65ad8-211"><paramref name="exports" /> contains an element that is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExports&lt;T,TMetadataView&gt; (System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports&lt;T, TMetadataView&gt;(class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports(Of T, TMetadataView) (exports As IEnumerable(Of Lazy(Of T, TMetadataView)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="65ad8-212">Der Typ der Exporte.</span><span class="sxs-lookup"><span data-stu-id="65ad8-212">The type of the exports.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="65ad8-213">Der Typ der Metadatenansicht der Exporte.</span><span class="sxs-lookup"><span data-stu-id="65ad8-213">The type of the exports' metadata view.</span></span></typeparam>
        <param name="exports"><span data-ttu-id="65ad8-214">Eine Auflistung von indirekten Verweisen auf die zu entfernenden Exporte und ihre Metadaten.</span><span class="sxs-lookup"><span data-stu-id="65ad8-214">A collection of indirect references to the exports to be removed and their metadata.</span></span></param>
        <summary><span data-ttu-id="65ad8-215">Entfernt eine Auflistung der Exporte aus der Komposition und gibt sofern möglich ihre Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="65ad8-215">Removes a collection of exports from composition and releases their resources if possible.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65ad8-216"><paramref name="exports" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-216"><paramref name="exports" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="65ad8-217"><paramref name="exports" /> enthält ein Element, das <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="65ad8-217"><paramref name="exports" /> contains an element that is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SatisfyImportsOnce(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImportsOnce (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SatisfyImportsOnce(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="abstract member SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit&#xA;override this.SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="compositionContainer.SatisfyImportsOnce part" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="65ad8-218">Das Part, dessen Importe ausgeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="65ad8-218">The part to satisfy the imports of.</span></span></param>
        <summary><span data-ttu-id="65ad8-219">Führt die Importe des angegebenen <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />-Objekts aus, ohne es zur Neuerstellung zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="65ad8-219">Satisfies the imports of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object without registering it for recomposition.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="65ad8-220">Das <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />-Objekt wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="65ad8-220">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="65ad8-221"><paramref name="part" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65ad8-221"><paramref name="part" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="65ad8-222">Fehler bei der Komposition.</span><span class="sxs-lookup"><span data-stu-id="65ad8-222">An error occurred during composition.</span></span> <span data-ttu-id="65ad8-223"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> enthält eine Auflistung der Fehler, die aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="65ad8-223"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of the errors that occurred.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
