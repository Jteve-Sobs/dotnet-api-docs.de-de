<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FilteredCatalog.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eec5106b169a7cb84701b49ba63d22728538aa13.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eec5106b169a7cb84701b49ba63d22728538aa13</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>Represents a catalog after a filter function is applied to it.</source>
          <target state="translated">Stellt einen Katalog dar, nachdem hierfür eine Filterfunktion angewendet wurde.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Dieser Typ implementiert die <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Aufrufen, um den Typ direkt zu verwerfen, dessen <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> Methode in einer <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> Block.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. <ph id="ph1">`using`</ph> (in c#) oder <ph id="ph2">`Using`</ph> (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> Thema zur Schnittstelle.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>The underlying catalog.</source>
          <target state="translated">Der zugrunde liegende Katalog.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>The function to filter parts.</source>
          <target state="translated">Die Funktion zur Filterung von Teilen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> class with the specified underlying catalog and filter.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph>-Klasse mit dem angegebenenzugrunde liegenden Katalog und Filter.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed">
          <source>Occurs when the underlying catalog has changed.</source>
          <target state="translated">Tritt ein, wenn sich der zugrunde liegende Katalog geändert hat.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing">
          <source>Occurs when the underlying catalog is changing.</source>
          <target state="translated">Tritt auf, wenn sich der darunterliegende Katalog ändert.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.FilteredCatalog.Complement">
          <source>Gets a catalog that contains parts that are present in the underlying catalog but that were filtered out by the filter function.</source>
          <target state="translated">Ruft einen Katalog ab, der Teile enthält, die im zugrunde liegenden Katalog vorhanden sind, aber von der Filterfunktion ausgefiltert wurden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.FilteredCatalog.Complement">
          <source>A catalog that contains the complement of this catalog.</source>
          <target state="translated">Ein Katalog, der die Ergänzung des Katalogs enthält.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um verwaltete und nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>Called by the <ph id="ph1">&lt;see langword="Dispose()" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize()" /&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> class.</source>
          <target state="translated">Wird von der <ph id="ph1">&lt;see langword="Dispose()" /&gt;</ph>-Methode und der <ph id="ph2">&lt;see langword="Finalize()" /&gt;</ph>-Methode aufgerufen, um die verwalteten und nicht verwalteten von der aktuellen Instanz der <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph>-Klasse verwendeten Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>This method is called only by the public <ph id="ph1">`Dispose()`</ph> and <ph id="ph2">`Finalize()`</ph> methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the <ph id="ph3">`Dispose(Boolean)`</ph> method should be used as follows:</source>
          <target state="translated">Diese Methode wird aufgerufen, nur von den öffentlichen <ph id="ph1">`Dispose()`</ph> und <ph id="ph2">`Finalize()`</ph> -Methoden für diese Methode nicht direkt aufrufen. Beim Implementieren des Dispose-Musters, den booleschen Parameter, der die <ph id="ph3">`Dispose(Boolean)`</ph> Methode sollte wie folgt verwendet werden:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`Dispose()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`true`</ph> to release both managed and unmanaged resources.</source>
          <target state="translated">Die <ph id="ph1">`Dispose()`</ph> -Methode des aktuellen Objekts aufrufen sollte <ph id="ph2">`Dispose(Boolean)`</ph> mit booleschen Parameters festgelegt <ph id="ph3">`true`</ph> um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`Finalize()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`false`</ph> to release only unmanaged resources.</source>
          <target state="translated">Die <ph id="ph1">`Finalize()`</ph> -Methode des aktuellen Objekts aufrufen sollte <ph id="ph2">`Dispose(Boolean)`</ph> mit booleschen Parameters festgelegt <ph id="ph3">`false`</ph> um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.Dispose(System.Boolean)">
          <source>For more information, see .</source>
          <target state="translated">Weitere Informationen finden Sie unter .</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetEnumerator">
          <source>Returns an enumerator that iterates through the catalog.</source>
          <target state="translated">Gibt einen Enumerator zurück, der den Katalog durchläuft.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetEnumerator">
          <source>An enumerator that can be used to iterate through the catalog.</source>
          <target state="translated">Ein Enumerator, der zum Durchlaufen des Katalogs verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>The import to match.</source>
          <target state="translated">Der zu vergleichende Import.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>Gets the exported parts from this catalog that match the specified import.</source>
          <target state="translated">Ruft die exportierten Teile dieses Katalogs ab, die mit dem angegebenen Import übereinstimmen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>A collection of matching parts.</source>
          <target state="translated">Eine Sammlung übereinstimmender Teile.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all their dependencies.</source>
          <target state="translated">Ruft ein neues <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph>-Objekt ab, das alle Teile dieses Katalogs und alle Abhängigkeiten enthält.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all their dependencies.</source>
          <target state="translated">Ruft ein neues <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph>-Objekt ab, das alle Teile dieses Katalogs und alle Abhängigkeiten enthält.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies">
          <source>The new catalog.</source>
          <target state="translated">Der neue Katalog.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>The filter for imports.</source>
          <target state="translated">Der Filter für Importe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all dependencies that can be reached through imports that match the specified filter.</source>
          <target state="translated">Ruft ein neues <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph>-Objekt ab, das alle Teile dieses Katalogs und alle Abhängigkeiten enthält, die durch Importe erreicht werden können, die mit dem angegebenen Filter übereinstimmen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependencies(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>The new catalog.</source>
          <target state="translated">Der neue Katalog.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.FilteredCatalog">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all their dependents.</source>
          <target state="translated">Ruft ein neues <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph>-Objekt ab, das alle Teile dieses Katalogs und alle Abhängigkeiten enthält.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all their dependents.</source>
          <target state="translated">Ruft ein neues <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph>-Objekt ab, das alle Teile dieses Katalogs und alle Abhängigkeiten enthält.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents">
          <source>The new catalog.</source>
          <target state="translated">Der neue Katalog.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>The filter for imports.</source>
          <target state="translated">Der Filter für Importe.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph> object that contains all the parts from this catalog and all dependents that can be reached through imports that match the specified filter.</source>
          <target state="translated">Ruft ein neues <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.FilteredCatalog" /&gt;</ph>-Objekt ab, das alle Teile dieses Katalogs und alle Abhängigkeiten enthält, die durch Importe erreicht werden können, die mit dem angegebenen Filter übereinstimmen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.IncludeDependents(System.Func{System.ComponentModel.Composition.Primitives.ImportDefinition,System.Boolean})">
          <source>The new catalog.</source>
          <target state="translated">Der neue Katalog.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Provides data for the event.</source>
          <target state="translated">Stellt Daten für das Ereignis bereit.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changed" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Provides data for the event.</source>
          <target state="translated">Stellt Daten für das Ereignis bereit.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.FilteredCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.FilteredCatalog.Changing" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>