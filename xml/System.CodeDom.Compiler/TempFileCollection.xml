<Type Name="TempFileCollection" FullName="System.CodeDom.Compiler.TempFileCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec7de530483b546ab4952038d6bffecd64a1c103" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78722974" /></Metadata><TypeSignature Language="C#" Value="public class TempFileCollection : IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.TempFileCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TempFileCollection&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TempFileCollection : IDisposable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type TempFileCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7d772-101">Stellt eine Auflistung temporärer Dateien dar.</span><span class="sxs-lookup"><span data-stu-id="7d772-101">Represents a collection of temporary files.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-102"><xref:System.CodeDom.Compiler.TempFileCollection> kann verwendet werden, um eindeutige Dateinamen zu generieren und eine Liste von Dateien nachzuverfolgen.</span><span class="sxs-lookup"><span data-stu-id="7d772-102"><xref:System.CodeDom.Compiler.TempFileCollection> can be used to generate unique file names and to keep track of a list of files.</span></span> <span data-ttu-id="7d772-103">Dies kann nützlich sein, um beim Verwalten einer Liste von vom Compiler generierten zwischen Dateien, die ggf. nach der Verwendung gelöscht werden, die <xref:System.CodeDom.Compiler.ICodeCompiler> Implementierer zu.</span><span class="sxs-lookup"><span data-stu-id="7d772-103">This can be useful to <xref:System.CodeDom.Compiler.ICodeCompiler> implementers when managing a list of compiler-generated intermediate files, which are sometimes deleted after use.</span></span>  
  
 <span data-ttu-id="7d772-104">Verwenden Sie einen entsprechend überladenen Konstruktor, um ein Verzeichnis anzugeben, in dem eindeutige temporäre Dateinamen generiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="7d772-104">To specify a directory to generate unique temporary file names in, use an appropriately overloaded constructor.</span></span> <span data-ttu-id="7d772-105">Sie können auch eine Konstruktorüberladung verwenden, um anzugeben, ob Dateien, die der Auflistung hinzugefügt werden sollen,, sofern nicht anders angegeben, bei Verwendung der Methoden <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> oder <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> gelöscht werden sollen, wenn die Auflistung verworfen oder die <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-105">You can also use a constructor overload to indicate whether files added to the collection should, if not specified otherwise when using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> or <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods, be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.</span></span>  
  
 <span data-ttu-id="7d772-106">Eine Datei in einem beliebigen Verzeichnis kann einer Instanz von <xref:System.CodeDom.Compiler.TempFileCollection> mithilfe der <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>-Methode hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-106">A file in any directory can be added to an instance of <xref:System.CodeDom.Compiler.TempFileCollection> using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> method.</span></span>  
  
 <span data-ttu-id="7d772-107">Um einen eindeutigen Namen für eine temporäre Datei einer bestimmten Dateierweiterung zu generieren, rufen Sie <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> auf, und geben Sie die Erweiterung des zu generierenden Datei namens an.</span><span class="sxs-lookup"><span data-stu-id="7d772-107">To generate a unique name for a temporary file of a particular file extension, call <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and specify the extension of the file name to generate.</span></span> <span data-ttu-id="7d772-108">Die <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>-Methode gibt eine Zeichenfolge zurück, die aus einem vollständigen Pfad zu einem Dateinamen der angegebenen Erweiterung in dem Verzeichnis besteht, das durch die <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A>-Eigenschaft angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-108">The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will return a string consisting of a full path to a file name of the specified extension in the directory specified by the <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> property.</span></span> <span data-ttu-id="7d772-109">Die <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>-Methode gibt nur einen eindeutigen Dateinamen pro Dateinamenerweiterung zurück.</span><span class="sxs-lookup"><span data-stu-id="7d772-109">The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will only return one unique file name per file name extension.</span></span>  
  
 <span data-ttu-id="7d772-110">Die Methoden <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> und <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> haben über Ladungen, mit denen Sie angeben können, ob die Dateien gelöscht werden sollen, wenn die Auflistung verworfen oder die <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-110">Both the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods have overloads that allow you to specify whether the files should be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.</span></span>  
  
 <span data-ttu-id="7d772-111">Mit der <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>-Methode werden alle Dateien in der Auflistung gelöscht, mit Ausnahme derjenigen, die für die Aufbewahrung markiert sind.</span><span class="sxs-lookup"><span data-stu-id="7d772-111">The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method will delete all the files in the collection except those that are marked to be kept.</span></span>  
  
 <span data-ttu-id="7d772-112">Die <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A>-Eigenschaft gibt den vollständigen Pfad des Basis Dateinamens ohne Dateinamenerweiterung an, mit der die von der <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>-Methode zurückgegebenen Dateinamen generiert werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-112">The <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> property indicates a full path to the base file name, without a file name extension, used to generate the file names returned by the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d772-113">Diese Klasse enthält einen Link Aufruf und eine Vererbungs Anforderung auf Klassenebene, die für alle Member gilt.</span><span class="sxs-lookup"><span data-stu-id="7d772-113">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="7d772-114">Eine <xref:System.Security.SecurityException> wird ausgelöst, wenn der unmittelbare Aufrufer oder die abgeleitete Klasse nicht über die Berechtigung für volle Vertrauenswürdigkeit verfügt.</span><span class="sxs-lookup"><span data-stu-id="7d772-114">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="7d772-115">Ausführliche Informationen zu Sicherheitsanforderungen finden Sie unter [Link](~/docs/framework/misc/link-demands.md) Aufrufe und [Vererbungs Anforderungen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="7d772-115">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d772-116">Das folgende Beispiel zeigt die Verwendung der <xref:System.CodeDom.Compiler.TempFileCollection>-Klasse und der Methoden <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> und <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d772-116">The following example shows the use of the <xref:System.CodeDom.Compiler.TempFileCollection> class and the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> methods.</span></span>  
  
 [!code-csharp[System.CodeDom.Compiler.TempFileCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/CS/program.cs#1)]
 [!code-vb[System.CodeDom.Compiler.TempFileCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d772-117">Initialisiert eine neue Instanz der Klasse <see cref="T:System.CodeDom.Compiler.TempFileCollection" />.</span><span class="sxs-lookup"><span data-stu-id="7d772-117">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d772-118">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.Compiler.TempFileCollection" />-Klasse mit Standardwerten.</span><span class="sxs-lookup"><span data-stu-id="7d772-118">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-119">Dies ist ein Parameter loser Konstruktor, der die Auflistung mit den Standardeinstellungen initialisiert.</span><span class="sxs-lookup"><span data-stu-id="7d772-119">This is a parameterless constructor that initializes the collection with default settings.</span></span> <span data-ttu-id="7d772-120">Standardmäßig speichert diese temporäre Datei Sammlung die Dateien in einem temporären Standardverzeichnis und löscht die temporären Dateien, nachdem Sie generiert und verwendet wurden.</span><span class="sxs-lookup"><span data-stu-id="7d772-120">By default, this temporary files collection will store the files in a default temporary directory and will delete the temporary files after they have been generated and used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection (string tempDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tempDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tempDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection(System::String ^ tempDir);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.TempFileCollection : string -&gt; System.CodeDom.Compiler.TempFileCollection" Usage="new System.CodeDom.Compiler.TempFileCollection tempDir" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tempDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tempDir"><span data-ttu-id="7d772-121">Ein Pfad zu dem temporären Verzeichnis, in dem die temporären Dateien gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-121">A path to the temporary directory to use for storing the temporary files.</span></span></param>
        <summary><span data-ttu-id="7d772-122">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.Compiler.TempFileCollection" />-Klasse mit dem angegebenen temporären Verzeichnis, für das festgelegt wurde, dass temporäre Dateien nach der Generierung und Verwendung standardmäßig gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-122">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class using the specified temporary directory that is set to delete the temporary files after their generation and use, by default.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection (string tempDir, bool keepFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tempDir, bool keepFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tempDir As String, keepFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection(System::String ^ tempDir, bool keepFiles);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.TempFileCollection : string * bool -&gt; System.CodeDom.Compiler.TempFileCollection" Usage="new System.CodeDom.Compiler.TempFileCollection (tempDir, keepFiles)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tempDir" Type="System.String" />
        <Parameter Name="keepFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tempDir"><span data-ttu-id="7d772-123">Ein Pfad zu dem temporären Verzeichnis, in dem die temporären Dateien gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-123">A path to the temporary directory to use for storing the temporary files.</span></span></param>
        <param name="keepFiles"><span data-ttu-id="7d772-124"><see langword="true" />, wenn die temporären Dateien nach der Verwendung beibehalten, <see langword="false" />, wenn sie gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="7d772-124"><see langword="true" /> if the temporary files should be kept after use; <see langword="false" /> if the temporary files should be deleted.</span></span></param>
        <summary><span data-ttu-id="7d772-125">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.Compiler.TempFileCollection" />-Klasse mit den Angaben für das temporäre Verzeichnis und dem Wert, der angibt, ob die temporären Dateien nach der Generierung und Verwendung standardmäßig gelöscht oder beibehalten werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-125">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class using the specified temporary directory and specified value indicating whether to keep or delete the temporary files after their generation and use, by default.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-126">Der Wert `keepFiles` wird zum Festlegen des <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>-Parameters verwendet.</span><span class="sxs-lookup"><span data-stu-id="7d772-126">The value of `keepFiles` is used to set the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> parameter.</span></span> <span data-ttu-id="7d772-127">Die temporären Dateien in der Auflistung werden nach Abschluss der compileraktivität beibehalten oder gelöscht, basierend auf dem Wert der <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>-Eigenschaft in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="7d772-127">The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property in the collection.</span></span> <span data-ttu-id="7d772-128">Wenn jede Datei der Auflistung hinzugefügt wird, wird der aktuelle Wert <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> zugeordnet, es sei denn, Sie wird mit einer Methode hinzugefügt, die über einen `keepFile`-Parameter verfügt. in diesem Fall wird dieser Wert für die jeweilige Datei verwendet.</span><span class="sxs-lookup"><span data-stu-id="7d772-128">As each file is added to the collection, the current value of <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is associated with it, unless it is added with a method that has a `keepFile` parameter, in which case that value is used for that specific file.</span></span> <span data-ttu-id="7d772-129">Wenn die <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>-Methode aufgerufen wird, wenn <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> `true`ist, werden alle Dateien gelöscht, einschließlich derjenigen, die mit dem <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> Wert `true`hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-129">When the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called, if <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is `true`, all files are deleted, including those added with a <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> value of `true`.</span></span> <span data-ttu-id="7d772-130">Dadurch können bestimmte Dateien, die als Dateien beibehalten werden, nach der Kompilierung für Zwecke wie z. b. Fehlerberichterstattung temporär aufbewahrt und dann gelöscht werden, wenn Sie nicht mehr benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-130">This allows specific files, those identified as being keep files, to be temporarily retained after compilation for purposes such as error reporting, then deleted when they are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddExtension">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d772-131">Fügt der Auflistung einen Dateinamen mit der angegebenen Dateinamenerweiterung hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d772-131">Adds a file name with the specified file name extension to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public string AddExtension (string fileExtension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddExtension(string fileExtension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExtension (fileExtension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AddExtension(System::String ^ fileExtension);" />
      <MemberSignature Language="F#" Value="member this.AddExtension : string -&gt; string" Usage="tempFileCollection.AddExtension fileExtension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileExtension"><span data-ttu-id="7d772-132">Die Dateinamenerweiterung für den automatisch generierten temporären Dateinamen, der der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-132">The file name extension for the auto-generated temporary file name to add to the collection.</span></span></param>
        <summary><span data-ttu-id="7d772-133">Fügt der Auflistung einen Dateinamen mit der angegebenen Dateinamenerweiterung hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d772-133">Adds a file name with the specified file name extension to the collection.</span></span></summary>
        <returns><span data-ttu-id="7d772-134">Ein Dateiname mit der angegebenen Erweiterung, der gerade der Auflistung hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="7d772-134">A file name with the specified extension that was just added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-135">Diese Methode gibt einen Dateinamen mit der angegebenen Erweiterung zurück, der der Auflistung temporärer Dateien hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="7d772-135">This method returns a file name with the specified extension that has been added to the temporary files collection.</span></span> <span data-ttu-id="7d772-136">Der andere Code muss die Datei immer noch erstellen, bevor Sie verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="7d772-136">Other code must still create the file before it can be used.</span></span>  
  
 <span data-ttu-id="7d772-137">Diese Methode kann nur einmal für jede Dateinamenerweiterung aufgerufen werden, da Sie denselben Namen zurückgibt, wenn Sie mit derselben Erweiterung aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-137">This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public string AddExtension (string fileExtension, bool keepFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddExtension(string fileExtension, bool keepFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExtension (fileExtension As String, keepFile As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AddExtension(System::String ^ fileExtension, bool keepFile);" />
      <MemberSignature Language="F#" Value="member this.AddExtension : string * bool -&gt; string" Usage="tempFileCollection.AddExtension (fileExtension, keepFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
        <Parameter Name="keepFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileExtension"><span data-ttu-id="7d772-138">Die Dateinamenerweiterung für den automatisch generierten temporären Dateinamen, der der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-138">The file name extension for the auto-generated temporary file name to add to the collection.</span></span></param>
        <param name="keepFile"><span data-ttu-id="7d772-139"><see langword="true" />, wenn die Datei nach der Verwendung beibehalten, <see langword="false" />, wenn sie gelöscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-139"><see langword="true" /> if the file should be kept after use; <see langword="false" /> if the file should be deleted.</span></span></param>
        <summary><span data-ttu-id="7d772-140">Fügt der Auflistung einen Dateinamen mit der angegebenen Dateinamenerweiterung unter Verwendung des angegebenen Wertes hinzu, der angibt, ob die Datei gelöscht oder beibehalten werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-140">Adds a file name with the specified file name extension to the collection, using the specified value indicating whether the file should be deleted or retained.</span></span></summary>
        <returns><span data-ttu-id="7d772-141">Ein Dateiname mit der angegebenen Erweiterung, der gerade der Auflistung hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="7d772-141">A file name with the specified extension that was just added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-142">Diese Methode gibt einen Dateinamen mit der angegebenen Erweiterung zurück, der der Auflistung temporärer Dateien hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="7d772-142">This method returns a file name with the specified extension that has been added to the temporary files collection.</span></span> <span data-ttu-id="7d772-143">Der andere Code muss die Datei immer noch erstellen, bevor Sie verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="7d772-143">Other code must still create the file before it can be used.</span></span>  
  
 <span data-ttu-id="7d772-144">Diese Methode kann nur einmal für jede Dateinamenerweiterung aufgerufen werden, da Sie denselben Namen zurückgibt, wenn Sie mit derselben Erweiterung aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-144">This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7d772-145">Der <paramref name="fileExtension" /> ist <see langword="null" /> oder eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="7d772-145"><paramref name="fileExtension" /> is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddFile">
      <MemberSignature Language="C#" Value="public void AddFile (string fileName, bool keepFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFile(string fileName, bool keepFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFile (fileName As String, keepFile As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFile(System::String ^ fileName, bool keepFile);" />
      <MemberSignature Language="F#" Value="member this.AddFile : string * bool -&gt; unit" Usage="tempFileCollection.AddFile (fileName, keepFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="keepFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d772-146">Der Name der Datei, die der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-146">The name of the file to add to the collection.</span></span></param>
        <param name="keepFile"><span data-ttu-id="7d772-147"><see langword="true" />, wenn die Datei nach der Verwendung beibehalten, <see langword="false" />, wenn sie gelöscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-147"><see langword="true" /> if the file should be kept after use; <see langword="false" /> if the file should be deleted.</span></span></param>
        <summary><span data-ttu-id="7d772-148">Fügt der Auflistung die Datei mit dem angegebenen Wert hinzu, der festlegt, ob die Datei nach dem Löschen der Auflistung oder dem Aufruf der <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" />-Methode beibehalten werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-148">Adds the specified file to the collection, using the specified value indicating whether to keep the file after the collection is disposed or when the <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> method is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7d772-149">Das folgende Beispiel zeigt die Verwendung der <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%28System.String%2CSystem.Boolean%29>-Methode zum Hinzufügen einer Datei, die in der-Auflistung aufbewahrt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-149">The following example shows the use of the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%28System.String%2CSystem.Boolean%29> method to add a file that is to be kept to the collection.</span></span> <span data-ttu-id="7d772-150">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.CodeDom.Compiler.TempFileCollection>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-150">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.TempFileCollection> class.</span></span>  
  
 [!code-csharp[System.CodeDom.Compiler.TempFileCollection#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/CS/program.cs#2)]
 [!code-vb[System.CodeDom.Compiler.TempFileCollection#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7d772-151">Der <paramref name="fileName" /> ist <see langword="null" /> oder eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="7d772-151"><paramref name="fileName" /> is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="7d772-152">Oder</span><span class="sxs-lookup"><span data-stu-id="7d772-152">-or-</span></span> 
 <span data-ttu-id="7d772-153">"<paramref name="fileName" />" ist doppelt vorhanden.</span><span class="sxs-lookup"><span data-stu-id="7d772-153"><paramref name="fileName" /> is a duplicate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.BasePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BasePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BasePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BasePath : string" Usage="System.CodeDom.Compiler.TempFileCollection.BasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d772-154">Ruft den vollständigen Pfad des Basisdateinamens ohne Dateinamenerweiterung im Pfad des temporären Verzeichnisses ab, das zum Generieren von temporären Dateinamen für die Auflistung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-154">Gets the full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.</span></span></summary>
        <value><span data-ttu-id="7d772-155">Der vollständige Pfad des Basisdateinamens ohne Dateinamenerweiterung im Pfad des temporären Verzeichnisses, das zum Generieren von temporären Dateinamen für die Auflistung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-155">The full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="7d772-156">Wenn die <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" />-Eigenschaft nicht oder auf <see langword="null" /> festgelegt wurde und <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> nicht für das von der <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" />-Eigenschaft angegebene temporäre Verzeichnis gewährt wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-156">If the <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" /> property has not been set or is set to <see langword="null" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> is not granted for the temporary directory indicated by the <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] fileNames, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(string[] fileNames, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (fileNames As String(), start As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::String ^&gt; ^ fileNames, int start);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string[] * int -&gt; unit" Usage="tempFileCollection.CopyTo (fileNames, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileNames"><span data-ttu-id="7d772-157">Das Array von Zeichenfolgen, in das kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-157">The array of strings to copy to.</span></span></param>
        <param name="start"><span data-ttu-id="7d772-158">Der Index des Arrays, an dem mit dem Kopieren begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-158">The index of the array to begin copying to.</span></span></param>
        <summary><span data-ttu-id="7d772-159">Kopiert die Member der Auflistung beginnend am angegebenen Index in die angegebene Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="7d772-159">Copies the members of the collection to the specified string, beginning at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.CodeDom.Compiler.TempFileCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d772-160">Ruft die Anzahl der Dateien in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="7d772-160">Gets the number of files in the collection.</span></span></summary>
        <value><span data-ttu-id="7d772-161">Die Anzahl der Dateien in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="7d772-161">The number of files in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="tempFileCollection.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d772-162">Löscht die temporären Dateien in dieser Auflistung, die nicht für das Beibehalten markiert wurden.</span><span class="sxs-lookup"><span data-stu-id="7d772-162">Deletes the temporary files within this collection that were not marked to be kept.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-163">Die <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>-Methode untersucht die einzelnen Dateien in der Auflistung, um zu bestimmen, ob die Datei aufbewahrt oder gelöscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-163">The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method examines each file in the collection to determine, on an individual basis, whether the file is to be kept or deleted.</span></span> <span data-ttu-id="7d772-164">Dateien können mithilfe von Add-Methoden, die einen `keepFile` Parameter akzeptieren, explizit für die Aufbewahrung gekennzeichnet werden, wenn Sie der Sammlung hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-164">Files can be explicitly marked to be kept when added to the collection using add methods that take a `keepFile` parameter.</span></span> <span data-ttu-id="7d772-165">Beim Hinzufügen einer Datei zur Auflistung mithilfe der <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> Überladung, die keinen `keepFile`-Parameter hat, wird der Wert der <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>-Eigenschaft als Standard Indikator für die Keep-Datei verwendet.</span><span class="sxs-lookup"><span data-stu-id="7d772-165">When adding a file to the collection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default keep file indicator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tempFileCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="7d772-166"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="7d772-166"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="7d772-167">Gibt die von <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="7d772-167">Releases the unmanaged resources used by the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-168">Diese Methode wird von der öffentlichen `Dispose()`-Methode und der <xref:System.Object.Finalize%2A>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7d772-168">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7d772-169">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der `disposing`-Parameter auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="7d772-169">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7d772-170"><xref:System.Object.Finalize%2A> ruft `Dispose` auf, bei dem `disposing` auf `false`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="7d772-170"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="7d772-171">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.CodeDom.Compiler.TempFileCollection> verweist.</span><span class="sxs-lookup"><span data-stu-id="7d772-171">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.CodeDom.Compiler.TempFileCollection> references.</span></span> <span data-ttu-id="7d772-172">Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="7d772-172">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d772-173">
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-173">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="7d772-174">Beim Überschreiben von <see langword="Dispose(Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="7d772-174">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="7d772-175">Weitere Informationen zum Implementieren von <see langword="Dispose(Boolean)" />finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="7d772-175">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="7d772-176">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="7d772-176">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="7d772-177">Implementieren einer Dispose-Methode</span><span class="sxs-lookup"><span data-stu-id="7d772-177">Implementing a Dispose method</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="7d772-178">Bereinigen von nicht verwalteten Ressourcen</span><span class="sxs-lookup"><span data-stu-id="7d772-178">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TempFileCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TempFileCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tempFileCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d772-179">Versucht, die temporären Dateien zu löschen, bevor dieses Objekt von der Garbage Collection freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-179">Attempts to delete the temporary files before this object is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-180">Diese Methode überschreibt <xref:System.Object.Finalize%2A?displayProperty=nameWithType> und bereinigt Ressourcen durch Aufrufen von `Dispose(false)`.</span><span class="sxs-lookup"><span data-stu-id="7d772-180">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="7d772-181">Überschreiben Sie `Dispose(Boolean)`, um die Bereinigung anzupassen.</span><span class="sxs-lookup"><span data-stu-id="7d772-181">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="7d772-182">Der Anwendungscode sollte diese Methode nicht aufzurufen. die `Finalize`-Methode eines Objekts wird automatisch während des Garbage Collection aufgerufen, es sei denn, die Garbage Collector wurde durch einen Aufruf der <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>-Methode deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="7d772-182">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7d772-183">Weitere Informationen finden Sie unter [Finalize-Methoden und debugtoren](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md)und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="7d772-183">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="tempFileCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d772-184">Ruft einen Enumerator ab, der die Member der Auflistung aufzählen kann.</span><span class="sxs-lookup"><span data-stu-id="7d772-184">Gets an enumerator that can enumerate the members of the collection.</span></span></summary>
        <returns><span data-ttu-id="7d772-185">Ein <see cref="T:System.Collections.IEnumerator" />, der die Member der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="7d772-185">An <see cref="T:System.Collections.IEnumerator" /> that contains the collection's members.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepFiles">
      <MemberSignature Language="C#" Value="public bool KeepFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepFiles" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.KeepFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepFiles : bool with get, set" Usage="System.CodeDom.Compiler.TempFileCollection.KeepFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d772-186">Ruft einen Wert ab, der angibt, ob die Dateien beim Aufrufen der <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" />-Methode oder beim Freigeben der Auflistung standardmäßig beibehalten werden sollen, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="7d772-186">Gets or sets a value indicating whether to keep the files, by default, when the <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> method is called or the collection is disposed.</span></span></summary>
        <value><span data-ttu-id="7d772-187"><see langword="true" />, wenn die Dateien beibehalten werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d772-187"><see langword="true" /> if the files should be kept; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-188">Der Wert der <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>-Eigenschaft wird als Standardwert verwendet, wenn die <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> Überladung, die über keinen `keepFile`-Parameter verfügt, aufgerufen wird, um der Auflistung eine temporäre Datei hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="7d772-188">The value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default value when the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter is called to add a temporary file to the collection.</span></span> <span data-ttu-id="7d772-189">Jede temporäre Datei in der Sammlung verfügt über ein zugeordnetes Flag zum Beibehalten von Dateien, mit dem festgelegt wird, ob diese Datei aufbewahrt oder gelöscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7d772-189">Each temporary file in the collection has an associated keep file flag that determines, on a per-file basis, whether that file is to be kept or deleted.</span></span> <span data-ttu-id="7d772-190">Dateien werden nach Abschluss der Kompilierung automatisch aufbewahrt oder gelöscht, basierend auf dem zugehörigen Wert Beibehaltungs Dateien.</span><span class="sxs-lookup"><span data-stu-id="7d772-190">Files are automatically kept or deleted on completion of the compilation based on their associated keep files value.</span></span> <span data-ttu-id="7d772-191">Nach Abschluss der Kompilierung können Dateien, die beibehalten wurden, durch Festlegen <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> false und Aufrufen der <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>-Methode freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-191">However, after compilation is complete, files that were kept can be released by setting <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> false and calling the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method.</span></span>  <span data-ttu-id="7d772-192">Dies führt dazu, dass alle Dateien gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="7d772-192">This will result in all files being deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int start);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, start As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int start) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="tempFileCollection.System.Collections.ICollection.CopyTo (array, start)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="7d772-193">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d772-193">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="7d772-194">Das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung aufweisen.</span><span class="sxs-lookup"><span data-stu-id="7d772-194">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="start"><span data-ttu-id="7d772-195">Der nullbasierte Index im Array, bei dem das Kopieren beginnt.</span><span class="sxs-lookup"><span data-stu-id="7d772-195">The zero-based index in array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="7d772-196">Kopiert die Elemente dieser Auflistung in ein Array, wobei am angegebenen Index des Zielarrays begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-196">Copies the elements of the collection to an array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-197">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="7d772-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7d772-198">Er kann nur verwendet werden, wenn die <xref:System.CodeDom.Compiler.TempFileCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-198">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.Count : int" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d772-199">Ruft die Anzahl der in der Auflistung enthaltenen Elemente ab.</span><span class="sxs-lookup"><span data-stu-id="7d772-199">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="7d772-200">Die Anzahl der in <see cref="T:System.Collections.ICollection" /> enthaltenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="7d772-200">The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-201">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="7d772-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7d772-202">Er kann nur verwendet werden, wenn die <xref:System.CodeDom.Compiler.TempFileCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-202">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d772-203">Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="7d772-203">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="7d772-204"><see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d772-204"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-205">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="7d772-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7d772-206">Er kann nur verwendet werden, wenn die <xref:System.CodeDom.Compiler.TempFileCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-206">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d772-207">Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="7d772-207">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="7d772-208">Ein Objekt, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="7d772-208">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-209">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="7d772-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7d772-210">Er kann nur verwendet werden, wenn die <xref:System.CodeDom.Compiler.TempFileCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-210">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="tempFileCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d772-211">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="7d772-211">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="7d772-212">Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die Auflistung durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="7d772-212">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-213">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="7d772-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7d772-214">Er kann nur verwendet werden, wenn die <xref:System.CodeDom.Compiler.TempFileCollection>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-214">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="tempFileCollection.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d772-215">Führt anwendungsdefinierte Tasks aus, die mit der Freigabe oder dem Zurücksetzen nicht verwalteter Ressourcen verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="7d772-215">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d772-216">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="7d772-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7d772-217">Er kann nur verwendet werden, wenn die <xref:System.CodeDom.Compiler.TempFileCollection>-Instanz in eine <xref:System.IDisposable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="7d772-217">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="TempDir">
      <MemberSignature Language="C#" Value="public string TempDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TempDir" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.TempDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TempDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TempDir { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TempDir : string" Usage="System.CodeDom.Compiler.TempFileCollection.TempDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d772-218">Ruft das temporäre Verzeichnis zum Speichern der temporären Dateien ab.</span><span class="sxs-lookup"><span data-stu-id="7d772-218">Gets the temporary directory to store the temporary files in.</span></span></summary>
        <value><span data-ttu-id="7d772-219">Das temporäre Verzeichnis zum Speichern der temporären Dateien.</span><span class="sxs-lookup"><span data-stu-id="7d772-219">The temporary directory to store the temporary files in.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
