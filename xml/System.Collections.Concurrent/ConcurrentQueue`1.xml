<Type Name="ConcurrentQueue&lt;T&gt;" FullName="System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92d93820173a88b490f4ddc7494e6c9e4d136c0c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConcurrentQueue&lt;T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentQueue`1&lt;T&gt; extends System.Object implements class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentQueue`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentQueue(Of T)&#xA;Implements IEnumerable(Of T), IProducerConsumerCollection(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ConcurrentQueue : System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="16aa6-101">Der Typ der Elemente in der Warteschlange.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16aa6-101">The type of the elements contained in the queue.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="16aa6-102">Stellt eine threadsichere FIFO-Auflistung (First-In-First-Out) dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16aa6-102">Represents a thread-safe first in-first out (FIFO) collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="16aa6-103"><xref:System.Collections.Concurrent.ConcurrentQueue%601> implementiert die <xref:System.Collections.Generic.IReadOnlyCollection%601> Schnittstelle beginnend mit der [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in früheren Versionen von .NET Framework, die <xref:System.Collections.Concurrent.ConcurrentQueue%601> Klasse implementiert diese Schnittstelle nicht.</span><span class="sxs-lookup"><span data-stu-id="16aa6-103"><xref:System.Collections.Concurrent.ConcurrentQueue%601> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentQueue%601> class did not implement this interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16aa6-104">Das folgende Beispiel zeigt, wie Sie eine <xref:System.Collections.Concurrent.ConcurrentQueue%601> in die Warteschlange eingereiht und dequeue-Elemente:</span><span class="sxs-lookup"><span data-stu-id="16aa6-104">The following example shows how to use a <xref:System.Collections.Concurrent.ConcurrentQueue%601> to enqueue and dequeue items:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentQueue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentqueue/cs/concqueue.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentQueue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentqueue/vb/concqueue.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="16aa6-105">Alle öffentlichen und geschützten Member der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> sind threadsicher und können von mehreren Threads gleichzeitig verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16aa6-105">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-106">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-106">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentQueue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-107">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-107">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentQueue (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentQueue(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="16aa6-108">Die Auflistung, deren Elemente in die neue <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> kopiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-108">The collection whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16aa6-109">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-109">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> class that contains elements copied from the specified collection</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="16aa6-110">Das <paramref name="collection" />-Argument ist null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-110">The <paramref name="collection" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="16aa6-111">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-111">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
          <span data-ttu-id="16aa6-112">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-112">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="16aa6-113">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-113">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16aa6-114">Kopiert die <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />-Elemente in ein vorhandenes eindimensionales <see cref="T:System.Array" />, beginnend beim angegebenen Arrayindex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-114">Copies the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="16aa6-115">
            <paramref name="array" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-115">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="16aa6-116">
            <paramref name="index" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-116">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="16aa6-117">
            <paramref name="index" /> ist gleich oder größer als die Länge des <paramref name="array" /> -oder- die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> ist größer als der verfügbare Platz von <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-117">
              <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentQueue`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-118">Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-118">Gets the number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16aa6-119">Die Anzahl der Elemente, die in <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-119">The number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16aa6-120">Verwenden, um zu bestimmen, ob die Auflistung keine Elemente enthält, der die <xref:System.Collections.Concurrent.ConcurrentQueue%601.IsEmpty%2A> Eigenschaft wird empfohlen, anstatt das Abrufen der Anzahl der Elemente aus der <xref:System.Collections.Concurrent.ConcurrentQueue%601.Count%2A> -Eigenschaft und mit 0 verglichen wird.</span><span class="sxs-lookup"><span data-stu-id="16aa6-120">For determining whether the collection contains any items, use of the <xref:System.Collections.Concurrent.ConcurrentQueue%601.IsEmpty%2A> property is recommended rather than retrieving the number of items from the <xref:System.Collections.Concurrent.ConcurrentQueue%601.Count%2A> property and comparing it to 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.Enqueue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="16aa6-121">Das Objekt, das am Ende der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-121">The object to add to the end of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
          <span data-ttu-id="16aa6-122">Der Wert kann ein NULL-Verweis (Nothing in Visual Basic) für Verweistypen sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-122">The value can be a null reference (Nothing in Visual Basic) for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16aa6-123">Fügt am Ende der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> ein Objekt hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-123">Adds an object to the end of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-124">Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-124">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16aa6-125">Ein Enumerator für den Inhalt der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-125">An enumerator for the contents of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16aa6-126">Die Enumeration stellt einen Snapshot des Inhalts der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="16aa6-126">The enumeration represents a moment-in-time snapshot of the contents of the queue.</span></span> <span data-ttu-id="16aa6-127">Reflektiert keine Änderungen an der Auflistung nach <xref:System.Collections.Concurrent.ConcurrentQueue%601.GetEnumerator%2A> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="16aa6-127">It does not reflect any updates to the collection after <xref:System.Collections.Concurrent.ConcurrentQueue%601.GetEnumerator%2A> was called.</span></span> <span data-ttu-id="16aa6-128">Der Enumerator sicher gleichzeitig mit der Lesevorgänge vom verwendet wird, und schreibt in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="16aa6-128">The enumerator is safe to use concurrently with reads from and writes to the queue.</span></span>  
  
 <span data-ttu-id="16aa6-129">Der Enumerator gibt die Elemente der Auflistung zurück, in der Reihenfolge in der sie hinzugefügt wurden, die in FIFO-Reihenfolge (First-in-First-Out) ist.</span><span class="sxs-lookup"><span data-stu-id="16aa6-129">The enumerator returns the collection elements in the order in which they were added, which is FIFO order (first-in, first-out).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentQueue`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-130">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> leer ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-130">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16aa6-131">True, wenn der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> leer ist, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-131">true if the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> is empty; otherwise, false.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16aa6-132">Bestimmen, ob die Auflistung keine Elemente enthält, die Verwendung dieser Eigenschaft wird empfohlen, anstatt Abrufen der Anzahl der Elemente aus der <xref:System.Collections.Concurrent.ConcurrentQueue%601.Count%2A> -Eigenschaft und mit 0 verglichen wird.</span><span class="sxs-lookup"><span data-stu-id="16aa6-132">For determining whether the collection contains any items, use of this property is recommended rather than retrieving the number of items from the <xref:System.Collections.Concurrent.ConcurrentQueue%601.Count%2A> property and comparing it to 0.</span></span> <span data-ttu-id="16aa6-133">Allerdings wie dieser Auflistung gleichzeitig zugegriffen werden soll, es kann der Fall sein, die die Auflistung nach einem anderen Thread ändern, wird <xref:System.Collections.Concurrent.ConcurrentQueue%601.IsEmpty%2A> zurückgegeben wird, daher wird das Ergebnis ungültig gemacht.</span><span class="sxs-lookup"><span data-stu-id="16aa6-133">However, as this collection is intended to be accessed concurrently, it may be the case that another thread will modify the collection after <xref:System.Collections.Concurrent.ConcurrentQueue%601.IsEmpty%2A> returns, thus invalidating the result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Function TryAdd (item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryAdd" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(T item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryAdd;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="16aa6-134">Das Objekt, das <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-134">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
          <span data-ttu-id="16aa6-135">Der Wert kann ein NULL-Verweis (Nothing in Visual Basic) für Verweistypen sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-135">The value can be a null reference (Nothing in Visual Basic) for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16aa6-136">Versucht, der <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> ein Objekt hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-136">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16aa6-137">True, wenn das Objekt erfolgreich hinzugefügt wurde, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-137">true if the object was added successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16aa6-138">Für <xref:System.Collections.Concurrent.ConcurrentQueue%601>, dieser Vorgang wird immer das Objekt am Ende hinzufügen der <xref:System.Collections.Concurrent.ConcurrentQueue%601> und "true" zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="16aa6-138">For <xref:System.Collections.Concurrent.ConcurrentQueue%601>, this operation will always add the object to the end of the <xref:System.Collections.Concurrent.ConcurrentQueue%601> and return true.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Function TryTake (ByRef item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryTake" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake([Runtime::InteropServices::Out] T % item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryTake;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="16aa6-139">Wenn diese Methode zurückgegeben wird und der Vorgang erfolgreich war, enthält <c>item</c> das entfernte Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-139">When this method returns, if the operation was successful, <c>item</c> contains the object removed.</span>
          </span>
          <span data-ttu-id="16aa6-140">Wenn kein Objekt zum Entfernen verfügbar war, ist der Wert nicht angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-140">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16aa6-141">Versucht, ein Objekt aus der <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> zu entfernen und zurückzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-141">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16aa6-142">True, wenn ein Element erfolgreich entfernt und zurückgegeben wurde, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-142">true if an element was removed and returned succesfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16aa6-143">Für <xref:System.Collections.Concurrent.ConcurrentQueue%601>, diesen Vorgang versucht, entfernen Sie das Objekt vom Anfang der <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="16aa6-143">For <xref:System.Collections.Concurrent.ConcurrentQueue%601>, this operation will attempt to remove the object from the beginning of the <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="16aa6-144">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-144">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span>
          </span>
          <span data-ttu-id="16aa6-145">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-145">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="16aa6-146">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-146">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16aa6-147">Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-147">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="16aa6-148">
            <paramref name="array" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-148">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="16aa6-149">
            <paramref name="index" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-149">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="16aa6-150">
            <paramref name="array" /> ist mehrdimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-150">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="16aa6-151">-oder- <paramref name="array" /> hat keine nullbasierte Indizierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-151">-or- <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="16aa6-152">- oder - <paramref name="index" /> ist gleich oder größer als die Länge des <paramref name="array" /> -oder- die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> ist größer als der verfügbare Platz von <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-152">-or- <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="16aa6-153">-oder- Der Typ der Quelle <see cref="T:System.Collections.ICollection" /> kann nicht automatisch in den Typ des als Ziel festgelegten <paramref name="array" /> umgewandelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-153">-or- The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-154">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> mit SyncRoot synchronisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-154">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16aa6-155">True, wenn der Zugriff auf die <see cref="T:System.Collections.ICollection" /> mit SyncRoot synchronisiert wird, andernfalls false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-155">true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot; otherwise, false.</span>
          </span>
          <span data-ttu-id="16aa6-156">Für <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> gibt diese Eigenschaft immer false zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-156">For <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />, this property always returns false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-157">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-157">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="16aa6-158">Diese Eigenschaft wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-158">This property is not supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16aa6-159">Gibt NULL (Nothing in Visual Basic) zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-159">Returns null  (Nothing in Visual Basic).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="16aa6-160">Die SyncRoot-Eigenschaft wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-160">The SyncRoot property is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-161">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-161">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16aa6-162">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-162">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;T&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16aa6-163">Kopiert die in der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> gespeicherten Elemente in ein neues Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-163">Copies the elements stored in the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16aa6-164">Ein neues Array mit einer Momentaufnahme von Elementen, die aus dem <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> kopiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-164">A new array containing a snapshot of elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDequeue">
      <MemberSignature Language="C#" Value="public bool TryDequeue (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDequeue([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.TryDequeue(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryDequeue (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryDequeue([Runtime::InteropServices::Out] T % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="16aa6-165">Wenn diese Methode zurückgegeben wird und der Vorgang erfolgreich war, enthält <c>result</c> das entfernte Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-165">When this method returns, if the operation was successful, <c>result</c> contains the object removed.</span>
          </span>
          <span data-ttu-id="16aa6-166">Wenn kein Objekt zum Entfernen verfügbar war, ist der Wert nicht angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-166">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16aa6-167">Versucht, das Objekt am Anfang der gleichzeitigen Warteschlange zu entfernen und zurückzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-167">Tries to remove and return the object at the beginning of the concurrent queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16aa6-168">
            <see langword="true" />, wenn ein Element vom Anfang der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> erfolgreich entfernt und zurückgegeben wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-168">
              <see langword="true" /> if an element was removed and returned from the beginning of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16aa6-169"><xref:System.Collections.Concurrent.ConcurrentQueue%601> Synchronisierung wird intern behandelt.</span><span class="sxs-lookup"><span data-stu-id="16aa6-169"><xref:System.Collections.Concurrent.ConcurrentQueue%601> handles all synchronization internally.</span></span> <span data-ttu-id="16aa6-170">Wenn zwei Aufruf threads <xref:System.Collections.Concurrent.ConcurrentQueue%601.TryDequeue%2A> an genau den gleichen Zeitpunkt, keiner der Vorgänge blockiert wird.</span><span class="sxs-lookup"><span data-stu-id="16aa6-170">If two threads call <xref:System.Collections.Concurrent.ConcurrentQueue%601.TryDequeue%2A> at precisely the same moment, neither operation is blocked.</span></span> <span data-ttu-id="16aa6-171">Bei Erkennung eines Konflikts zwischen zwei Threads ist ein Thread muss erneut versucht, das nächste Element abzurufen, und die Synchronisierung wird intern behandelt.</span><span class="sxs-lookup"><span data-stu-id="16aa6-171">When a conflict is detected between two threads, one thread has to try again to retrieve the next element, and the synchronization is handled internally.</span></span>  
  
 <span data-ttu-id="16aa6-172"><xref:System.Collections.Concurrent.ConcurrentQueue%601.TryDequeue%2A> versucht, ein Element aus der Warteschlange zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="16aa6-172"><xref:System.Collections.Concurrent.ConcurrentQueue%601.TryDequeue%2A> tries to remove an element from the queue.</span></span> <span data-ttu-id="16aa6-173">Wenn die Methode erfolgreich ist, wird das Element entfernt und der Methodenrückgabe `true`ist, andernfalls gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="16aa6-173">If the method is successful, the item is removed and the method returns `true`; otherwise, it returns `false`.</span></span> <span data-ttu-id="16aa6-174">In diesem Fall atomar in Bezug auf andere Vorgänge in der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="16aa6-174">That happens atomically with respect to other operations on the queue.</span></span> <span data-ttu-id="16aa6-175">Wenn die Warteschlange mit Code, z. B. aufgefüllt wurde `q.Enqueue("a"); q.Enqueue("b"); q.Enqueue("c");` und zwei Threads gleichzeitig versuchen, ein Element aus der Warteschlange entfernt, wird ein Thread dequeue `a` und der andere Thread wird dequeue `b`.</span><span class="sxs-lookup"><span data-stu-id="16aa6-175">If the queue was populated with code such as `q.Enqueue("a"); q.Enqueue("b"); q.Enqueue("c");` and two threads concurrently try to dequeue an element, one thread will dequeue `a` and the other thread will dequeue `b`.</span></span> <span data-ttu-id="16aa6-176">Beide Aufrufe von <xref:System.Collections.Concurrent.ConcurrentQueue%601.TryDequeue%2A> zurück `true`, da sie sowohl in der Lage, ein Element aus der Warteschlange entfernt wurden.</span><span class="sxs-lookup"><span data-stu-id="16aa6-176">Both calls to <xref:System.Collections.Concurrent.ConcurrentQueue%601.TryDequeue%2A> will return `true`, because they were both able to dequeue an element.</span></span> <span data-ttu-id="16aa6-177">Wenn jeder Thread wieder ein weiteres Element aus der Warteschlange entfernt wird, wird einer der Threads dequeue `c` und zurückgeben `true`, während der andere Thread die Warteschlange leer findet und zurück `false`.</span><span class="sxs-lookup"><span data-stu-id="16aa6-177">If each thread goes back to dequeue an additional element, one of the threads will dequeue `c` and return `true`, whereas the other thread will find the queue empty and will return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentQueue`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="16aa6-178">Wenn diese Methode einen Wert zurückgibt, enthält <c>result</c> ein Objekt vom Anfang der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> oder einen nicht angegebenen Wert, wenn bei dem Vorgang ein Fehler aufgetreten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-178">When this method returns, <c>result</c> contains an object from the beginning of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> or an unspecified value if the operation failed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16aa6-179">Versucht, ein Objekt vom Anfang der <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> zurückzugeben, ohne es zu entfernen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-179">Tries to return an object from the beginning of the <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16aa6-180">
            <see langword="true" /> wenn ein Objekt erfolgreich zurückgegeben wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16aa6-180">
              <see langword="true" /> if an object was returned successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>