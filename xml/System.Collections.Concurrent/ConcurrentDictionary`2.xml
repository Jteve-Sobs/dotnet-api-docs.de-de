<Type Name="ConcurrentDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Concurrent.ConcurrentDictionary&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="852211d7287647afacc966f6c4ba46a2e0ace085" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69340736" /></Metadata><TypeSignature Language="C#" Value="public class ConcurrentDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class ConcurrentDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type ConcurrentDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IDictionary&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="06e4f-101">Der Typ der Schlüssel im Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="06e4f-101">The type of the keys in the dictionary.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="06e4f-102">Der Typ der Werte im Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="06e4f-102">The type of the values in the dictionary.</span></span></typeparam>
    <summary><span data-ttu-id="06e4f-103">Stellt eine threadsichere Auflistung von Schlüssel-Wert-Paaren dar, auf die durch mehrere Threads gleichzeitig zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="06e4f-103">Represents a thread-safe collection of key/value pairs that can be accessed by multiple threads concurrently.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4f-104">Bei sehr großen <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Objekten können Sie die maximale Array Größe auf einem 64-Bit-System auf 2 Gigabyte (GB) erhöhen, indem Sie das [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) -Konfigurationselement `true` in der Laufzeitumgebung auf festlegen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-104">For very large <xref:System.Collections.Concurrent.ConcurrentDictionary%602> objects, you can increase the maximum array size to 2 gigabytes (GB) on a 64-bit system by setting the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06e4f-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602>implementiert die <xref:System.Collections.Generic.IReadOnlyCollection%601> -Schnittstelle und die [!INCLUDE[net_v46](~/includes/net-v46-md.md)]-Schnittstelle, beginnend mit. in früheren <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Versionen des-.NET Framework wurde diese Schnittstelle von der- <xref:System.Collections.Generic.IReadOnlyDictionary%602> Klasse nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> and <xref:System.Collections.Generic.IReadOnlyDictionary%602> interfaces starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class did not implement these interfaces.</span></span>  
  
 <span data-ttu-id="06e4f-106">Wie die <xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType> - <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Klasse implementiert die <xref:System.Collections.Generic.IDictionary%602> -Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="06e4f-106">Like the <xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType> class, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span> <span data-ttu-id="06e4f-107">Außerdem <xref:System.Collections.Concurrent.ConcurrentDictionary%602> bietet mehrere Methoden zum Hinzufügen oder Aktualisieren von Schlüssel-Wert-Paaren im Wörterbuch, wie in der folgenden Tabelle beschrieben.</span><span class="sxs-lookup"><span data-stu-id="06e4f-107">In addition, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> provides several methods for adding or updating key/value pairs in the dictionary, as described in the following table.</span></span>  
  
|<span data-ttu-id="06e4f-108">Aufgabe</span><span class="sxs-lookup"><span data-stu-id="06e4f-108">To do this</span></span>|<span data-ttu-id="06e4f-109">Diese Methode verwenden</span><span class="sxs-lookup"><span data-stu-id="06e4f-109">Use this method</span></span>|<span data-ttu-id="06e4f-110">Hinweise zur Verwendung</span><span class="sxs-lookup"><span data-stu-id="06e4f-110">Usage notes</span></span>|  
|----------------|---------------------|-----------------|  
|<span data-ttu-id="06e4f-111">Fügen Sie dem Wörterbuch einen neuen Schlüssel hinzu, wenn er nicht bereits im Wörterbuch vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-111">Add a new key to the dictionary, if it doesn't already exist in the dictionary</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A>|<span data-ttu-id="06e4f-112">Diese Methode fügt das angegebene Schlüssel-Wert-Paar hinzu, wenn der Schlüssel derzeit nicht im Wörterbuch vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-112">This method adds the specified key/value pair, if the key doesn't currently exist in the dictionary.</span></span> <span data-ttu-id="06e4f-113">Die Methode gibt `true` oder `false` zurück, je nachdem, ob das neue Paar hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="06e4f-113">The method returns `true` or `false` depending on whether the new pair was added.</span></span>|  
|<span data-ttu-id="06e4f-114">Aktualisieren Sie den Wert für einen vorhandenen Schlüssel im Wörterbuch, wenn dieser Schlüssel einen bestimmten Wert aufweist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-114">Update the value for an existing key in the dictionary, if that key has a specific value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>|<span data-ttu-id="06e4f-115">Diese Methode überprüft, ob der Schlüssel über einen angegebenen Wert verfügt. wenn dies der Fall ist, wird der Schlüssel mit einem neuen Wert aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-115">This method checks whether the key has a specified value, and if it does, updates the key with a new value.</span></span> <span data-ttu-id="06e4f-116">Sie ähnelt der-Methode <xref:System.Threading.Interlocked.CompareExchange%2A> , mit der Ausnahme, dass Sie für Wörterbuch Elemente verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-116">It's similar to the <xref:System.Threading.Interlocked.CompareExchange%2A> method, except that it's used for dictionary elements.</span></span>|  
|<span data-ttu-id="06e4f-117">Speichern Sie ein Schlüssel-Wert-Paar im Wörterbuch bedingungslos, und überschreiben Sie den Wert eines Schlüssels, der bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-117">Store a key/value pair in the dictionary unconditionally, and overwrite the value of a key that already exists</span></span>|<span data-ttu-id="06e4f-118">Der Setter des Indexers:`dictionary[key] = newValue`</span><span class="sxs-lookup"><span data-stu-id="06e4f-118">The indexer's setter: `dictionary[key] = newValue`</span></span>||  
|<span data-ttu-id="06e4f-119">Fügen Sie dem Wörterbuch ein Schlüssel-Wert-Paar hinzu, oder aktualisieren Sie den Wert für den Schlüssel basierend auf dem vorhandenen Wert des Schlüssels, wenn der Schlüssel bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-119">Add a key/value pair to the dictionary, or if the key already exists, update the value for the key based on the key's existing value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29><br /><br /> <span data-ttu-id="06e4f-120">- oder -</span><span class="sxs-lookup"><span data-stu-id="06e4f-120">-or-</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29>|<span data-ttu-id="06e4f-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29>akzeptiert den Schlüssel und zwei Delegaten.</span><span class="sxs-lookup"><span data-stu-id="06e4f-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key and two delegates.</span></span> <span data-ttu-id="06e4f-122">Der erste Delegat wird verwendet, wenn der Schlüssel nicht im Wörterbuch vorhanden ist. Er akzeptiert den Schlüssel und gibt den Wert zurück, der für den Schlüssel hinzugefügt werden sollte.</span><span class="sxs-lookup"><span data-stu-id="06e4f-122">It uses the first delegate if the key doesn't exist in the dictionary; it accepts the key and returns the value that should be added for the key.</span></span> <span data-ttu-id="06e4f-123">Er verwendet den zweiten Delegaten, wenn der Schlüssel vorhanden ist. der Schlüssel und sein aktueller Wert werden akzeptiert, und der neue Wert, der für den Schlüssel festgelegt werden sollte, wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="06e4f-123">It uses the second delegate if the key does exist; it accepts the key and its current value, and it returns the new value that should be set for the key.</span></span><br /><br /> <span data-ttu-id="06e4f-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29>akzeptiert den Schlüssel, einen hinzu zufügenden Wert und den Update Delegaten.</span><span class="sxs-lookup"><span data-stu-id="06e4f-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key, a value to add, and the update delegate.</span></span> <span data-ttu-id="06e4f-125">Dies entspricht der vorherigen Überladung, mit dem Unterschied, dass kein Delegat verwendet wird, um einen Schlüssel hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-125">This is the same as the previous overload, except that it doesn't use a delegate to add a key.</span></span>|  
|<span data-ttu-id="06e4f-126">Gibt den Wert für einen Schlüssel im Wörterbuch an, fügt dem Wörterbuch den Wert hinzu und gibt ihn zurück, wenn der Schlüssel nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-126">Get the value for a key in the dictionary, adding the value to the dictionary and returning it if the key doesn't exist</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29><br /><br /> <span data-ttu-id="06e4f-127">- oder -</span><span class="sxs-lookup"><span data-stu-id="06e4f-127">-or-</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29>|<span data-ttu-id="06e4f-128">Diese über Ladungen stellen eine verzögerte Initialisierung für ein Schlüssel-Wert-Paar im Wörterbuch bereit und fügen den Wert nur hinzu, wenn er nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-128">These overloads provide lazy initialization for a key/value pair in the dictionary, adding the value only if it's not there.</span></span><br /><br /> <span data-ttu-id="06e4f-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29>nimmt den Wert an, der hinzugefügt werden soll, wenn der Schlüssel nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> takes the value to be added if the key doesn't exist.</span></span><br /><br /> <span data-ttu-id="06e4f-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29>nimmt einen Delegaten an, der den Wert generiert, wenn der Schlüssel nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> takes a delegate that will generate the value if the key doesn't exist.</span></span>|  
  
 <span data-ttu-id="06e4f-131">Alle diese Vorgänge sind atomarisch und in Bezug auf alle anderen Vorgänge in der <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Klasse Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="06e4f-131">All these operations are atomic and are thread-safe with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span> <span data-ttu-id="06e4f-132">Die einzigen Ausnahmen sind die Methoden, die einen Delegaten akzeptieren, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> d. h. und. <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A></span><span class="sxs-lookup"><span data-stu-id="06e4f-132">The only exceptions are the methods that accept a delegate, that is, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>.</span></span> <span data-ttu-id="06e4f-133">Bei Änderungen und Schreibvorgängen für das Wörter <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Buch verwendet differenzierte Sperren, um die Thread Sicherheit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-133">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="06e4f-134">(Lesevorgänge für das Wörterbuch werden auf Sperr freie Weise ausgeführt.) Allerdings werden Delegaten für diese Methoden außerhalb der Sperren aufgerufen, um Probleme zu vermeiden, die durch die Ausführung von unbekanntem Code unter einer Sperre auftreten können.</span><span class="sxs-lookup"><span data-stu-id="06e4f-134">(Read operations on the dictionary are performed in a lock-free manner.) However, delegates for these methods are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="06e4f-135">Daher unterliegt der von diesen Delegaten ausgeführte Code nicht der Atomizität des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="06e4f-135">Therefore, the code executed by these delegates is not subject to the atomicity of the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4f-136">Im folgenden Beispiel wird gezeigt, wie ein <xref:System.Collections.Concurrent.ConcurrentDictionary%602> -Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-136">The following example shows how to construct a <xref:System.Collections.Concurrent.ConcurrentDictionary%602> object.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="06e4f-137">Alle öffentlichen und geschützten Member von <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> sind Thread sicher und können gleichzeitig von mehreren Threads verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-137">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> are thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="06e4f-138">Allerdings sind Elemente, auf die über eine der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> Schnittstellen, die von implementiert werden, einschließlich Erweiterungs Methoden, nicht unbedingt Thread sicher und müssen möglicherweise vom Aufrufer synchronisiert werden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-138">However, members accessed through one of the interfaces the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-139">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-139">Thread-Safe Collections</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-140">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-140">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06e4f-141">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="06e4f-141">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-142">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-142">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-143">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-143">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06e4f-144">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Klasse mit der Standardparallelitätsebene und der Standardanfangskapazität, wobei der Standardvergleich für den Schlüsseltyp verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-144">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4f-145">Die Standard Parallelitäts Ebene ist gleich der Anzahl der CPUs.</span><span class="sxs-lookup"><span data-stu-id="06e4f-145">The default concurrency level is equal to the number of CPUs.</span></span> <span data-ttu-id="06e4f-146">Je höher die Parallelitäts Stufe ist, desto mehr gleichzeitige Schreibvorgänge können ohne Störungen und Blockierung stattfinden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-146">The higher the concurrency level is, the more concurrent write operations can take place without interference and blocking.</span></span> <span data-ttu-id="06e4f-147">Werte höherer Parallelitäts Stufen bewirken auch, dass Vorgänge, die alle Sperren erfordern (z. b. `ToArray` die `Count`Änderung der Tabellengröße und), teurer werden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-147">Higher concurrency level values also cause operations that require all locks (for example, table resizing, `ToArray` and `Count`) to become more expensive.</span></span> <span data-ttu-id="06e4f-148">Die Standardkapazität (DEFAULT_CAPACITY), die die anfängliche Anzahl von Buchern darstellt, ist ein Kompromiss zwischen der Größe eines sehr kleinen Wörterbuchs und der Anzahl der Größenänderung beim Erstellen eines großen Wörterbuchs.</span><span class="sxs-lookup"><span data-stu-id="06e4f-148">The default capacity (DEFAULT_CAPACITY), which represents the initial number of buckets, is a trade-off between the size of a very small dictionary and the number of resizes when constructing a large dictionary.</span></span> <span data-ttu-id="06e4f-149">Außerdem sollte die Kapazität nicht durch eine kleine Primzahl teilbar sein.</span><span class="sxs-lookup"><span data-stu-id="06e4f-149">Also, the capacity should not be divisible by a small prime number.</span></span> <span data-ttu-id="06e4f-150">Die Standardkapazität beträgt 31.</span><span class="sxs-lookup"><span data-stu-id="06e4f-150">The default capacity is 31.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-151">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-151">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-152">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-152">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="06e4f-153">Das <see cref="T:System.Collections.Generic.IEnumerable`1" />, dessen Elemente in das neue <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-153">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="06e4f-154">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Klasse, die aus dem angegebenen <see cref="T:System.Collections.Generic.IEnumerable`1" /> kopierte Elemente enthält, die Standardparallelitätsebene und Standardanfangskapazität aufweist und den Standardvergleich für den Schlüsseltyp verwendet.</span><span class="sxs-lookup"><span data-stu-id="06e4f-154">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IEnumerable`1" />, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-155"><paramref name="collection" /> oder einer seiner Schlüssel ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-155"><paramref name="collection" /> or any of its keys is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4f-156"><paramref name="collection" /> enthält mindestens einen doppelten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-156"><paramref name="collection" /> contains one or more duplicate keys.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-157">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-157">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-158">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-158">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="06e4f-159">Die Übereinstimmungsvergleich-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-159">The equality comparison implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="06e4f-160">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Klasse mit der Standardparallelitätsebene und -Kapazität und dem angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-160">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level and capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-161"><paramref name="comparer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-161"><paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-162">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-162">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-163">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-163">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (collection, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="06e4f-164">Das <see cref="T:System.Collections.Generic.IEnumerable`1" />, dessen Elemente in das neue <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-164">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="06e4f-165">Die <see cref="T:System.Collections.Generic.IEqualityComparer`1" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-165">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="06e4f-166">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Klasse, die aus dem angegebenen <see cref="T:System.Collections.IEnumerable" /> kopierte Elemente enthält, die Standardparallelitätsebene und Standardanfangskapazität aufweist und den angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="06e4f-166">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> has the default concurrency level, has the default initial capacity, and uses the specified  <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-167"><paramref name="collection" /> oder <paramref name="comparer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-167"><paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-168">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-168">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-169">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-169">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * int -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="06e4f-170">Die geschätzte Anzahl von Threads, die das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> gleichzeitig aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="06e4f-170">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="capacity"><span data-ttu-id="06e4f-171">Die anfängliche Anzahl von Elementen, die das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="06e4f-171">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span></span></param>
        <summary><span data-ttu-id="06e4f-172">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Klasse mit der angegebenen Parallelitätsebene und Kapazität, wobei der Standardvergleich für den Schlüsseltyp verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-172">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06e4f-173"><paramref name="concurrencyLevel" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="06e4f-173"><paramref name="concurrencyLevel" /> is less than 1.</span></span>  
  
<span data-ttu-id="06e4f-174">- oder -</span><span class="sxs-lookup"><span data-stu-id="06e4f-174">-or-</span></span> 
 <span data-ttu-id="06e4f-175"><paramref name="capacity" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="06e4f-175"><paramref name="capacity" /> is less than 0.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-176">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-176">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-177">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-177">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, collection, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="06e4f-178">Die geschätzte Anzahl von Threads, die das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> gleichzeitig aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="06e4f-178">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="collection"><span data-ttu-id="06e4f-179">Das <see cref="T:System.Collections.Generic.IEnumerable`1" />, dessen Elemente in das neue <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-179">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="06e4f-180">Die <see cref="T:System.Collections.Generic.IEqualityComparer`1" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-180">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="06e4f-181">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Klasse, die aus dem angegebenen <see cref="T:System.Collections.IEnumerable" /> kopierte Elemente enthält und den angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="06e4f-181">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" />, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-182"><paramref name="collection" /> oder <paramref name="comparer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-182"><paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06e4f-183"><paramref name="concurrencyLevel" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="06e4f-183"><paramref name="concurrencyLevel" /> is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4f-184"><paramref name="collection" /> enthält mindestens einen doppelten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-184"><paramref name="collection" /> contains one or more duplicate keys.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-185">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-185">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-186">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-186">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer, comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * int * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, capacity, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="06e4f-187">Die geschätzte Anzahl von Threads, die das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> gleichzeitig aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="06e4f-187">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="capacity"><span data-ttu-id="06e4f-188">Die anfängliche Anzahl von Elementen, die das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="06e4f-188">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span></span></param>
        <param name="comparer"><span data-ttu-id="06e4f-189">Die <see cref="T:System.Collections.Generic.IEqualityComparer`1" />-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-189">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="06e4f-190">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />-Klasse mit der angegebenen Parallelitätsebene und Anfangskapazität und dem angegebenen <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-190">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-191"><paramref name="comparer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-191"><paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06e4f-192"><paramref name="concurrencyLevel" /> oder <paramref name="capacity" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="06e4f-192"><paramref name="concurrencyLevel" /> or <paramref name="capacity" /> is less than 1.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-193">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-193">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-194">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-194">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06e4f-195">Fügt dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist, oder aktualisiert ein Schlüssel-Wert-Paar im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, wenn der Schlüssel bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-195">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06e4f-196">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> -Methode aufgerufen wird:</span><span class="sxs-lookup"><span data-stu-id="06e4f-196">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-197">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-197">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-198">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-198">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, Func&lt;TKey,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; addValueFactory, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValueFactory As Func(Of TKey, TValue), updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * Func&lt;'Key, 'Value&gt; * Func&lt;'Key, 'Value, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValueFactory, updateValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-199">Der Schlüssel, der hinzugefügt oder dessen Wert aktualisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-199">The key to be added or whose value should be updated</span></span></param>
        <param name="addValueFactory"><span data-ttu-id="06e4f-200">Die Funktion zum Generieren eines Werts für einen nicht vorhandenen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-200">The function used to generate a value for an absent key</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="06e4f-201">Die Funktion zum Generieren eines neuen Werts für einen vorhandenen Schlüssel auf Grundlage des vorhandenen Werts des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="06e4f-201">The function used to generate a new value for an existing key based on the key's existing value</span></span></param>
        <summary><span data-ttu-id="06e4f-202">Verwendet die angegebene Funktionen, um dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ein Schlüssel-Wert-Paar hinzuzufügen, wenn der Schlüssel nicht bereits vorhanden ist, oder um ein Schlüssel-Wert-Paar im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> zu aktualisieren, wenn der Schlüssel bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-202">Uses the specified functions to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="06e4f-203">Der neue Wert für den Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-203">The new value for the key.</span></span> <span data-ttu-id="06e4f-204">Dies ist entweder das Ergebnis von <paramref name="addValueFactory" /> (wenn der Schlüssel nicht vorhanden war) oder das Ergebnis von <paramref name="updateValueFactory" /> (wenn der Schlüssel vorhanden war).</span><span class="sxs-lookup"><span data-stu-id="06e4f-204">This will be either be the result of <paramref name="addValueFactory" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4f-205">Wenn Sie gleich <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> zeitig in verschiedenen Threads aufrufen `addValueFactory` , kann mehrmals aufgerufen werden, das Schlüssel-Wert-Paar wird jedoch möglicherweise nicht für jeden Aufruf dem Wörterbuch hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-205">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  

 <span data-ttu-id="06e4f-206">Bei Änderungen und Schreibvorgängen für das Wörter <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Buch verwendet differenzierte Sperren, um die Thread Sicherheit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-206">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="06e4f-207">(Lesevorgänge für das Wörterbuch werden auf Sperr freie Weise ausgeführt.) Allerdings werden `addValueFactory` die `updateValueFactory` Delegaten und außerhalb der Sperren aufgerufen, um Probleme zu vermeiden, die durch die Ausführung von unbekanntem Code unter einer Sperre auftreten können.</span><span class="sxs-lookup"><span data-stu-id="06e4f-207">(Read operations on the dictionary are performed in a lock-free manner.) However, the `addValueFactory` and `updateValueFactory` delegates are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="06e4f-208">Daher ist nicht atomarisch in Bezug auf alle anderen Vorgänge in der <xref:System.Collections.Concurrent.ConcurrentDictionary%602> -Klasse. <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A></span><span class="sxs-lookup"><span data-stu-id="06e4f-208">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-209"><paramref name="key" />, <paramref name="addValueFactory" /> oder <paramref name="updateValueFactory" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-209"><paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-210">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<see cref="F:System.Int32.MaxValue" />).</span><span class="sxs-lookup"><span data-stu-id="06e4f-210">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-211">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-211">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-212">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-212">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, TValue addValue, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, !TValue addValue, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValue As TValue, updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, TValue addValue, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value * Func&lt;'Key, 'Value, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValue, updateValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValue" Type="TValue" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-213">Der Schlüssel, der hinzugefügt oder dessen Wert aktualisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-213">The key to be added or whose value should be updated</span></span></param>
        <param name="addValue"><span data-ttu-id="06e4f-214">Der Wert, der für einen nicht vorhandenen Schlüssel hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-214">The value to be added for an absent key</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="06e4f-215">Die Funktion zum Generieren eines neuen Werts für einen vorhandenen Schlüssel auf Grundlage des vorhandenen Werts des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="06e4f-215">The function used to generate a new value for an existing key based on the key's existing value</span></span></param>
        <summary><span data-ttu-id="06e4f-216">Fügt dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist, oder aktualisiert ein Schlüssel-Wert-Paar im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> mithilfe der angegebenen Funktion, wenn der Schlüssel bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-216">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="06e4f-217">Der neue Wert für den Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-217">The new value for the key.</span></span> <span data-ttu-id="06e4f-218">Dies ist entweder <paramref name="addValue" /> (wenn der Schlüssel nicht vorhanden war) oder das Ergebnis von <paramref name="updateValueFactory" /> (wenn der Schlüssel vorhanden war).</span><span class="sxs-lookup"><span data-stu-id="06e4f-218">This will be either be <paramref name="addValue" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06e4f-219">Im folgenden Codebeispiel wird gezeigt, wie ein <xref:System.Collections.Concurrent.ConcurrentDictionary%602> initialisiert wird und wie die addorupdate-Methode verwendet wird, um der Auflistung ein zusätzliches Element hinzuzufügen und die vorhandenen Elemente zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="06e4f-219">The following code example shows how to initialize an <xref:System.Collections.Concurrent.ConcurrentDictionary%602> and how to use the AddOrUpdate method to add an additional item to the collection, and update the existing items.</span></span>  
  
 [!code-csharp[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/cs/program.cs#1)]
 [!code-vb[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/vb/module1.vb#1)]  

## Remarks  
 <span data-ttu-id="06e4f-220">Bei Änderungen und Schreibvorgängen für das Wörter <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Buch verwendet differenzierte Sperren, um die Thread Sicherheit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-220">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="06e4f-221">(Lesevorgänge für das Wörterbuch werden auf Sperr freie Weise ausgeführt.) Der `updateValueFactory` Delegat wird jedoch außerhalb der Sperren aufgerufen, um Probleme zu vermeiden, die durch die Ausführung von unbekanntem Code unter einer Sperre auftreten können.</span><span class="sxs-lookup"><span data-stu-id="06e4f-221">(Read operations on the dictionary are performed in a lock-free manner.) However, the `updateValueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="06e4f-222">Daher ist nicht atomarisch in Bezug auf alle anderen Vorgänge in der <xref:System.Collections.Concurrent.ConcurrentDictionary%602> -Klasse. <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A></span><span class="sxs-lookup"><span data-stu-id="06e4f-222">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-223"><paramref name="key" /> oder <paramref name="updateValueFactory" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-223"><paramref name="key" /> or <paramref name="updateValueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-224">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<see cref="F:System.Int32.MaxValue" />).</span><span class="sxs-lookup"><span data-stu-id="06e4f-224">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-225">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-225">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-226">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-226">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TArg,TValue&gt; updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; addValueFactory, class System.Func`4&lt;!TKey, !TValue, !!TArg, !TValue&gt; updateValueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate(Of TArg) (key As TKey, addValueFactory As Func(Of TKey, TArg, TValue), updateValueFactory As Func(Of TKey, TValue, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TArg, TValue&gt; ^ updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * Func&lt;'Key, 'Arg, 'Value&gt; * Func&lt;'Key, 'Value, 'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValueFactory, updateValueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TArg,TValue&gt;" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="factoryArgument" Type="TArg" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TArg"><span data-ttu-id="06e4f-227">Der Typ eines Arguments, das an <paramref name="addValueFactory" /> und <paramref name="updateValueFactory" />übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-227">The type of an argument to pass into <paramref name="addValueFactory" /> and <paramref name="updateValueFactory" />.</span></span></typeparam>
        <param name="key"><span data-ttu-id="06e4f-228">Der Schlüssel, der hinzugefügt oder dessen Wert aktualisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-228">The key to be added or whose value should be updated.</span></span></param>
        <param name="addValueFactory"><span data-ttu-id="06e4f-229">Die Funktion zum Generieren eines Werts für einen nicht vorhandenen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-229">The function used to generate a value for an absent key.</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="06e4f-230">Die Funktion zum Generieren eines neuen Werts für einen vorhandenen Schlüssel auf Grundlage des vorhandenen Werts des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="06e4f-230">The function used to generate a new value for an existing key based on the key's existing value.</span></span></param>
        <param name="factoryArgument"><span data-ttu-id="06e4f-231">Ein Argument, das an <paramref name="addValueFactory" /> und <paramref name="updateValueFactory" /> übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-231">An argument to pass into <paramref name="addValueFactory" /> and <paramref name="updateValueFactory" />.</span></span></param>
        <summary><span data-ttu-id="06e4f-232">Verwendet die angegebene Funktionen und das angegebene Argument, um dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ein Schlüssel-Wert-Paar hinzuzufügen, wenn der Schlüssel nicht bereits vorhanden ist, oder um ein Schlüssel-Wert-Paar im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> zu aktualisieren, wenn der Schlüssel bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-232">Uses the specified functions and argument to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="06e4f-233">Der neue Wert für den Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-233">The new value for the key.</span></span> <span data-ttu-id="06e4f-234">Dies ist entweder das Ergebnis von <paramref name="addValueFactory" /> (wenn der Schlüssel nicht vorhanden war) oder das Ergebnis von <paramref name="updateValueFactory" /> (wenn der Schlüssel vorhanden war).</span><span class="sxs-lookup"><span data-stu-id="06e4f-234">This will be either be the result of <paramref name="addValueFactory" /> (if the key was absent) or the result of <paramref name="updateValueFactory" /> (if the key was present).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4f-235">Wenn Sie gleich <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> zeitig in verschiedenen Threads aufrufen `addValueFactory` , kann mehrmals aufgerufen werden, das Schlüssel-Wert-Paar wird jedoch möglicherweise nicht für jeden Aufruf dem Wörterbuch hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-235">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  

 <span data-ttu-id="06e4f-236">Bei Änderungen und Schreibvorgängen für das Wörter <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Buch verwendet differenzierte Sperren, um die Thread Sicherheit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-236">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="06e4f-237">(Lesevorgänge für das Wörterbuch werden auf Sperr freie Weise ausgeführt.) Allerdings werden `addValueFactory` die `updateValueFactory` Delegaten und außerhalb der Sperren aufgerufen, um Probleme zu vermeiden, die durch die Ausführung von unbekanntem Code unter einer Sperre auftreten können.</span><span class="sxs-lookup"><span data-stu-id="06e4f-237">(Read operations on the dictionary are performed in a lock-free manner.) However, the `addValueFactory` and `updateValueFactory` delegates are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="06e4f-238">Daher ist nicht atomarisch in Bezug auf alle anderen Vorgänge in der <xref:System.Collections.Concurrent.ConcurrentDictionary%602> -Klasse. <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A></span><span class="sxs-lookup"><span data-stu-id="06e4f-238">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-239"><paramref name="key" />, <paramref name="addValueFactory" /> oder <paramref name="updateValueFactory" /> ist ein NULL-Verweis („Nothing“ in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="06e4f-239"><paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-240">Das Wörterbuch enthält zu viele Elemente.</span><span class="sxs-lookup"><span data-stu-id="06e4f-240">The dictionary contains too many elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="concurrentDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06e4f-241">Entfernt sämtliche Schlüssel und Werte aus dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-241">Removes all keys and values from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-242">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-242">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-243">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-243">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool&#xA;override this.ContainsKey : 'Key -&gt; bool" Usage="concurrentDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-244">Der im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> zu suchende Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-244">The key to locate in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="06e4f-245">Bestimmt, ob das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> den angegebenen Schlüssel enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-245">Determines whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains the specified key.</span></span></summary>
        <returns><span data-ttu-id="06e4f-246"><see langword="true" />, wenn das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-246"><see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-247"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-247"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-248">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-248">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-249">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-249">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-250">Ruft die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ab.</span><span class="sxs-lookup"><span data-stu-id="06e4f-250">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="06e4f-251">Die Anzahl der Schlüssel-Wert-Paare im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-251">The number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4f-252">Diese Eigenschaft verfügt über eine Momentaufnahme Semantik und stellt die Anzahl der <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType> Elemente in der Zeit dar, zu der der Zugriff auf die Eigenschaft erfolgt ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-252">This property has snapshot semantics and represents the number of items in the <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType> at the moment when the property was accessed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-253">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<see cref="F:System.Int32.MaxValue" />).</span><span class="sxs-lookup"><span data-stu-id="06e4f-253">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-254">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-254">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-255">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-255">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;" Usage="concurrentDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__35))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__34))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06e4f-256">Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> durchläuft.</span><span class="sxs-lookup"><span data-stu-id="06e4f-256">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="06e4f-257">Ein Enumerator für <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-257">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4f-258">Der Enumerator, der vom Wörterbuch zurückgegeben wurde, kann sicher gleichzeitig mit Lese-und Schreibvorgängen in das Wörterbuch verwendet werden, es stellt jedoch keine Momentaufnahme des Wörterbuchs dar.</span><span class="sxs-lookup"><span data-stu-id="06e4f-258">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="06e4f-259">Der durch den Enumerator verfügbar gemachte Inhalt kann Änderungen enthalten, die nach <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> dem Aufruf von an dem Wörterbuch vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-259">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-260">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-260">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-261">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-261">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOrAdd">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06e4f-262">Fügt dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-262">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span></span> <span data-ttu-id="06e4f-263">Gibt den neuen Wert oder den vorhandenen Wert zurück, wenn der Schlüssel bereits existiert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-263">Returns the new value, or the existing value if the key already exists.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06e4f-264">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> -Methode aufgerufen wird:</span><span class="sxs-lookup"><span data-stu-id="06e4f-264">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-265">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-265">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-266">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-266">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, Func&lt;TKey,TValue&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, valueFactory As Func(Of TKey, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TValue&gt; ^ valueFactory);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * Func&lt;'Key, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, valueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-267">Der Schlüssel des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06e4f-267">The key of the element to add.</span></span></param>
        <param name="valueFactory"><span data-ttu-id="06e4f-268">Die Funktion, mit der ein Wert für den Schlüssel generiert wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-268">The function used to generate a value for the key.</span></span></param>
        <summary><span data-ttu-id="06e4f-269">Fügt dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ein Schlüssel/Wert-Paar mithilfe der angegebenen Funktion hinzu, wenn der Schlüssel noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-269">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key does not already exist.</span></span> <span data-ttu-id="06e4f-270">Gibt den neuen Wert oder den vorhandenen Wert zurück, wenn der Schlüssel existiert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-270">Returns the new value, or the existing value if the key exists.</span></span></summary>
        <returns><span data-ttu-id="06e4f-271">Der Wert für den Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-271">The value for the key.</span></span> <span data-ttu-id="06e4f-272">Dies ist entweder der vorhandene Wert für den Schlüssel, wenn der Schlüssel bereits im Wörterbuch vorhanden ist, oder der neue Wert, wenn der Schlüssel nicht im Wörterbuch vorhanden war.</span><span class="sxs-lookup"><span data-stu-id="06e4f-272">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="06e4f-273">Bei Änderungen und Schreibvorgängen für das Wörter <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Buch verwendet differenzierte Sperren, um die Thread Sicherheit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-273">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="06e4f-274">(Lesevorgänge für das Wörterbuch werden auf Sperr freie Weise ausgeführt.) Der `valueFactory` Delegat wird jedoch außerhalb der Sperren aufgerufen, um Probleme zu vermeiden, die durch die Ausführung von unbekanntem Code unter einer Sperre auftreten können.</span><span class="sxs-lookup"><span data-stu-id="06e4f-274">(Read operations on the dictionary are performed in a lock-free manner.) However, the `valueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="06e4f-275">Daher ist nicht atomarisch in Bezug auf alle anderen Vorgänge in der <xref:System.Collections.Concurrent.ConcurrentDictionary%602> -Klasse. <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A></span><span class="sxs-lookup"><span data-stu-id="06e4f-275">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  

 <span data-ttu-id="06e4f-276">Da ein Schlüssel/Wert von einem anderen Thread eingefügt werden kann `valueFactory` , während einen Wert generiert, können Sie sich nicht darauf `valueFactory` verlassen, dass der erstellte Wert nur, wenn er ausgeführt wurde, in das Wörterbuch eingefügt und zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-276">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="06e4f-277">Wenn Sie gleich <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> zeitig in verschiedenen Threads aufrufen `valueFactory` , kann mehrmals aufgerufen werden, es wird jedoch nur ein Schlüssel-Wert-Paar zum Wörterbuch hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-277">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="06e4f-278">Der Rückgabewert hängt davon ab, ob der Schlüssel im Wörterbuch vorhanden ist und ob ein Schlüssel/Wert von einem anderen Thread <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> eingefügt wird, nachdem `valueFactory` aufgerufen wurde, aber bevor einen Wert generiert:</span><span class="sxs-lookup"><span data-stu-id="06e4f-278">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="06e4f-279">Szenario</span><span class="sxs-lookup"><span data-stu-id="06e4f-279">Scenario</span></span> | <span data-ttu-id="06e4f-280">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="06e4f-280">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="06e4f-281">Der Schlüssel ist bereits im Wörterbuch vorhanden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-281">The key is already in the dictionary.</span></span> | <span data-ttu-id="06e4f-282">Der vorhandene Wert wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="06e4f-282">The existing value is returned.</span></span> |
 | <span data-ttu-id="06e4f-283">Der Schlüssel befindet sich nicht im Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="06e4f-283">The key is not in the dictionary.</span></span> <span data-ttu-id="06e4f-284">`valueFactory`generiert einen Wert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-284">`valueFactory` generates a value.</span></span> <span data-ttu-id="06e4f-285">Beim Überprüfen des Schlüssels wird kein Schlüssel gefunden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-285">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="06e4f-286">Der Schlüssel/Wert wird in das Wörterbuch eingefügt, und der Wert wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="06e4f-286">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="06e4f-287">Der Schlüssel befindet sich nicht im Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="06e4f-287">The key is not in the dictionary.</span></span> <span data-ttu-id="06e4f-288">`valueFactory`generiert einen Wert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-288">`valueFactory` generates a value.</span></span> <span data-ttu-id="06e4f-289">Beim `valueFactory` erzeugen des Werts fügt ein anderer Thread einen Wert für den Schlüssel ein.</span><span class="sxs-lookup"><span data-stu-id="06e4f-289">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="06e4f-290">Nachdem `valueFactory` ausgeführt wurde und der Schlüssel erneut überprüft wurde, wird der vom anderen Thread eingefügte Schlüssel gefunden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-290">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="06e4f-291">Der vom anderen Thread eingefügte Wert wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="06e4f-291">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-292"><paramref name="key" /> oder <paramref name="valueFactory" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-292"><paramref name="key" /> or <paramref name="valueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-293">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<see cref="F:System.Int32.MaxValue" />).</span><span class="sxs-lookup"><span data-stu-id="06e4f-293">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-294">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-294">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-295">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-295">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, value As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * 'Value -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-296">Der Schlüssel des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06e4f-296">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="06e4f-297">Der hinzuzufügende Wert, wenn der Schlüssel nicht bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-297">The value to be added, if the key does not already exist.</span></span></param>
        <summary><span data-ttu-id="06e4f-298">Fügt dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-298">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span></span> <span data-ttu-id="06e4f-299">Gibt den neuen Wert oder den vorhandenen Wert zurück, wenn der Schlüssel existiert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-299">Returns the new value, or the existing value if the key exists.</span></span></summary>
        <returns><span data-ttu-id="06e4f-300">Der Wert für den Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-300">The value for the key.</span></span> <span data-ttu-id="06e4f-301">Dies ist entweder der vorhandene Wert für den Schlüssel, wenn der Schlüssel bereits im Wörterbuch vorhanden ist, oder der neue Wert, wenn der Schlüssel nicht im Wörterbuch vorhanden war.</span><span class="sxs-lookup"><span data-stu-id="06e4f-301">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-302"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-302"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-303">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<see cref="F:System.Int32.MaxValue" />).</span><span class="sxs-lookup"><span data-stu-id="06e4f-303">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-304">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-304">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-305">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-305">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; valueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd(Of TArg) (key As TKey, valueFactory As Func(Of TKey, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * Func&lt;'Key, 'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, valueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="factoryArgument" Type="TArg" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TArg"><span data-ttu-id="06e4f-306">Der Typ eines Arguments, das an übergeben <paramref name="valueFactory" />werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-306">The type of an argument to pass into <paramref name="valueFactory" />.</span></span></typeparam>
        <param name="key"><span data-ttu-id="06e4f-307">Der Schlüssel des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06e4f-307">The key of the element to add.</span></span></param>
        <param name="valueFactory"><span data-ttu-id="06e4f-308">Die Funktion, mit der ein Wert für den Schlüssel generiert wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-308">The function used to generate a value for the key.</span></span></param>
        <param name="factoryArgument"><span data-ttu-id="06e4f-309">Ein Argumentwert, der an <paramref name="valueFactory" /> übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-309">An argument value to pass into <paramref name="valueFactory" />.</span></span></param>
        <summary><span data-ttu-id="06e4f-310">Fügt dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> mithilfe der angegebenen Funktion und eines Arguments ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel noch nicht vorhanden ist, oder gibt den vorhanden Wert zurück, wenn der Schlüssel vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-310">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function and an argument if the key does not already exist, or returns the existing value if the key exists.</span></span></summary>
        <returns><span data-ttu-id="06e4f-311">Der Wert für den Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-311">The value for the key.</span></span> <span data-ttu-id="06e4f-312">Dies ist entweder der vorhandene Wert für den Schlüssel, wenn der Schlüssel bereits im Wörterbuch vorhanden ist, oder der neue Wert, wenn der Schlüssel nicht im Wörterbuch vorhanden war.</span><span class="sxs-lookup"><span data-stu-id="06e4f-312">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="06e4f-313">Bei Änderungen und Schreibvorgängen für das Wörter <xref:System.Collections.Concurrent.ConcurrentDictionary%602> Buch verwendet differenzierte Sperren, um die Thread Sicherheit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-313">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="06e4f-314">(Lesevorgänge für das Wörterbuch werden auf Sperr freie Weise ausgeführt.) Der `valueFactory` Delegat wird jedoch außerhalb der Sperren aufgerufen, um Probleme zu vermeiden, die durch die Ausführung von unbekanntem Code unter einer Sperre auftreten können.</span><span class="sxs-lookup"><span data-stu-id="06e4f-314">(Read operations on the dictionary are performed in a lock-free manner.) However, the `valueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="06e4f-315">Daher ist nicht atomarisch in Bezug auf alle anderen Vorgänge in der <xref:System.Collections.Concurrent.ConcurrentDictionary%602> -Klasse. <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A></span><span class="sxs-lookup"><span data-stu-id="06e4f-315">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  

 <span data-ttu-id="06e4f-316">Da ein Schlüssel/Wert von einem anderen Thread eingefügt werden kann `valueFactory` , während einen Wert generiert, können Sie sich nicht darauf `valueFactory` verlassen, dass der erstellte Wert nur, wenn er ausgeführt wurde, in das Wörterbuch eingefügt und zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-316">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="06e4f-317">Wenn Sie gleich <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> zeitig in verschiedenen Threads aufrufen `valueFactory` , kann mehrmals aufgerufen werden, es wird jedoch nur ein Schlüssel-Wert-Paar zum Wörterbuch hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-317">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="06e4f-318">Der Rückgabewert hängt davon ab, ob der Schlüssel im Wörterbuch vorhanden ist und ob ein Schlüssel/Wert von einem anderen Thread <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> eingefügt wird, nachdem `valueFactory` aufgerufen wurde, aber bevor einen Wert generiert:</span><span class="sxs-lookup"><span data-stu-id="06e4f-318">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="06e4f-319">Szenario</span><span class="sxs-lookup"><span data-stu-id="06e4f-319">Scenario</span></span> | <span data-ttu-id="06e4f-320">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="06e4f-320">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="06e4f-321">Der Schlüssel ist bereits im Wörterbuch vorhanden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-321">The key is already in the dictionary.</span></span> | <span data-ttu-id="06e4f-322">Der vorhandene Wert wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="06e4f-322">The existing value is returned.</span></span> |
 | <span data-ttu-id="06e4f-323">Der Schlüssel befindet sich nicht im Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="06e4f-323">The key is not in the dictionary.</span></span> <span data-ttu-id="06e4f-324">`valueFactory`generiert einen Wert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-324">`valueFactory` generates a value.</span></span> <span data-ttu-id="06e4f-325">Beim Überprüfen des Schlüssels wird kein Schlüssel gefunden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-325">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="06e4f-326">Der Schlüssel/Wert wird in das Wörterbuch eingefügt, und der Wert wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="06e4f-326">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="06e4f-327">Der Schlüssel befindet sich nicht im Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="06e4f-327">The key is not in the dictionary.</span></span> <span data-ttu-id="06e4f-328">`valueFactory`generiert einen Wert.</span><span class="sxs-lookup"><span data-stu-id="06e4f-328">`valueFactory` generates a value.</span></span> <span data-ttu-id="06e4f-329">Beim `valueFactory` erzeugen des Werts fügt ein anderer Thread einen Wert für den Schlüssel ein.</span><span class="sxs-lookup"><span data-stu-id="06e4f-329">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="06e4f-330">Nachdem `valueFactory` ausgeführt wurde und der Schlüssel erneut überprüft wurde, wird der vom anderen Thread eingefügte Schlüssel gefunden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-330">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="06e4f-331">Der vom anderen Thread eingefügte Wert wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="06e4f-331">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-332"><paramref name="key" /> ist ein <see langword="null" />-Verweis („Nothing“ in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="06e4f-332"><paramref name="key" /> is a <see langword="null" /> reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-333">Das Wörterbuch enthält zu viele Elemente.</span><span class="sxs-lookup"><span data-stu-id="06e4f-333">The dictionary contains too many elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-334">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> leer ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-334">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty.</span></span></summary>
        <value><span data-ttu-id="06e4f-335"><see langword="true" />, wenn das <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> leer ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-335"><see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-336">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-336">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-337">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-337">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-338">Der Schlüssel des abzurufenden oder festzulegenden Werts.</span><span class="sxs-lookup"><span data-stu-id="06e4f-338">The key of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="06e4f-339">Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="06e4f-339">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="06e4f-340">Der Wert des Schlüssel/Wertpaars am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="06e4f-340">The value of the key/value pair at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-341"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-341"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="06e4f-342">Die Eigenschaft wird abgerufen, und der <paramref name="key" /> ist nicht in der Auflistung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-342">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-343">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-343">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-344">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-344">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TKey&gt; ^ Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;'Key&gt;" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-345">Ruft eine Auflistung ab, die die Schlüssel im <see cref="T:System.Collections.Generic.Dictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-345">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="06e4f-346">Eine Auflistung der Schlüssel in <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-346">A collection of keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-347">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-347">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-348">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-348">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="06e4f-349">Das dem Wörterbuch hinzuzufügende <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-349">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the dictionary.</span></span></param>
        <summary><span data-ttu-id="06e4f-350">Fügt der Auflistung ein Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="06e4f-350">Adds an item to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-351">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-351">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-352">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-352">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="06e4f-353">Der im <see cref="T:System.Collections.Generic.ICollection`1" /> zu suchende Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-353">The key to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="06e4f-354">Ruft ab, ob das <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element mit dem angegebenen Schlüssel enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-354">Gets whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="06e4f-355"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-355"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-356">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-356">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-357">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-357">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="06e4f-358">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-358">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="06e4f-359">Für das Array muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-359">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="06e4f-360">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-360">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="06e4f-361">Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein Array, wobei am angegebenen Arrayindex begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-361">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at the specified array index.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-362">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-362">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-363">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-363">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey,TValue&gt;&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-364">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.ICollection" /> schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-364">Gets a value that indicates whether the <see cref="T:System.Collections.ICollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="06e4f-365"><see langword="true" />, wenn das <see cref="T:System.Collections.ICollection" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-365"><see langword="true" /> if the <see cref="T:System.Collections.ICollection" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-366">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-366">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-367">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-367">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="06e4f-368">Das zu entfernende <see cref="T:System.Collections.Generic.KeyValuePair`2" />-Element.</span><span class="sxs-lookup"><span data-stu-id="06e4f-368">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to remove.</span></span></param>
        <summary><span data-ttu-id="06e4f-369">Entfernt das angegebene Schlüssel-Wert-Paar aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="06e4f-369">Removes the specified key/value pair from the collection.</span></span></summary>
        <returns><span data-ttu-id="06e4f-370"><see langword="true" />, wenn das Element erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-370"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06e4f-371">Diese Methode gibt auch "false" zurück, wenn <paramref name="key" /> in der ursprünglichen <see cref="T:System.Collections.Generic.ICollection`1" /> nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="06e4f-371">This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-372">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-372">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-373">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-373">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add">
      <MemberSignature Language="C#" Value="void IDictionary&lt;TKey,TValue&gt;.Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(TKey key, TValue value) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-374">Das Objekt, das als Schlüssel des hinzuzufügenden Elements verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-374">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="06e4f-375">Das Objekt, das als Wert des hinzuzufügenden Elements verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-375">The object to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="06e4f-376">Fügt dem <see cref="T:System.Collections.Generic.IDictionary`2" /> den angegebenen Schlüssel und Wert hinzu.</span><span class="sxs-lookup"><span data-stu-id="06e4f-376">Adds the specified key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-377"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-377"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4f-378">In <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> ist bereits ein Element mit demselben Schlüssel enthalten.</span><span class="sxs-lookup"><span data-stu-id="06e4f-378">An element with the same key already exists in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-379">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<see cref="F:System.Int32.MaxValue" />).</span><span class="sxs-lookup"><span data-stu-id="06e4f-379">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-380">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-380">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-381">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-381">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove">
      <MemberSignature Language="C#" Value="bool IDictionary&lt;TKey,TValue&gt;.Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(TKey key) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-382">Der Schlüssel des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06e4f-382">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="06e4f-383">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Generic.IDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-383">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="06e4f-384"><see langword="true" />, wenn das Element erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-384"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06e4f-385">Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="key" /> nicht im ursprünglichen <see cref="T:System.Collections.Generic.IDictionary`2" /> gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="06e4f-385">This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-386"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-386"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-387">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-387">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-388">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-388">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-389">Ruft eine Auflistung ab, die die Schlüssel im <see cref="T:System.Collections.Generic.Dictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-389">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="06e4f-390">Eine Auflistung, die die Schlüssel des <see cref="T:System.Collections.Generic.Dictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-390">A collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-391">Ruft eine Auflistung ab, die die Werte im <see cref="T:System.Collections.Generic.Dictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-391">Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="06e4f-392">Eine Auflistung, die die Werte im <see cref="T:System.Collections.Generic.Dictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-392">A collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="06e4f-393">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-393">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="06e4f-394">Für das Array muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-394">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="06e4f-395">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-395">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="06e4f-396">Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein Array, wobei am angegebenen Arrayindex begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-396">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at the specified array index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-397"><paramref name="array" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-397"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="06e4f-398"><paramref name="index" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="06e4f-398"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4f-399"><paramref name="index" /> ist größer oder gleich der Länge von <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-399"><paramref name="index" /> is equal to or greater than the length of the <paramref name="array" />.</span></span>  
  
<span data-ttu-id="06e4f-400">- oder -</span><span class="sxs-lookup"><span data-stu-id="06e4f-400">-or-</span></span> 
<span data-ttu-id="06e4f-401">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.ICollection" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />s.</span><span class="sxs-lookup"><span data-stu-id="06e4f-401">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-402">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-402">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-403">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-403">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-404">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> mit SyncRoot synchronisiert wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-404">Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span></span></summary>
        <value><span data-ttu-id="06e4f-405"><see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-405"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06e4f-406">Gibt <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> für diese Eigenschaft immer <see langword="false" />zurück.</span><span class="sxs-lookup"><span data-stu-id="06e4f-406">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-407">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-407">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-408">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-408">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-409">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="06e4f-409">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="06e4f-410">Diese Eigenschaft wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-410">This property is not supported.</span></span></summary>
        <value><span data-ttu-id="06e4f-411">Gibt immer NULL zurück.</span><span class="sxs-lookup"><span data-stu-id="06e4f-411">Always returns null.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="06e4f-412">Diese Eigenschaft wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-412">This property is not supported.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-413">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-413">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-414">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-414">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-415">Das Objekt, das als Schlüssel verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-415">The object to use as the key.</span></span></param>
        <param name="value"><span data-ttu-id="06e4f-416">Das Objekt, das als Wert verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-416">The object to use as the value.</span></span></param>
        <summary><span data-ttu-id="06e4f-417">Fügt dem Wörterbuch den angegebenen Schlüssel und Wert hinzu.</span><span class="sxs-lookup"><span data-stu-id="06e4f-417">Adds the specified key and value to the dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-418"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-418"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4f-419"><paramref name="key" /> ist ein Typ, der dem Schlüsseltyp von <see cref="T:System.Collections.Generic.Dictionary`2" /> nicht zugewiesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="06e4f-419"><paramref name="key" /> is of a type that is not assignable to the key type  of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
<span data-ttu-id="06e4f-420">- oder -</span><span class="sxs-lookup"><span data-stu-id="06e4f-420">-or-</span></span> 
 <span data-ttu-id="06e4f-421"><paramref name="value" /> weist einen Typ auf, der dem Werttyp in <see cref="T:System.Collections.Generic.Dictionary`2" /> nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06e4f-421"><paramref name="value" /> is of a type that is not assignable to the type of values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
<span data-ttu-id="06e4f-422">- oder -</span><span class="sxs-lookup"><span data-stu-id="06e4f-422">-or-</span></span> 
<span data-ttu-id="06e4f-423">Ein Wert mit dem gleichen Namen ist bereits im <see cref="T:System.Collections.Generic.Dictionary`2" /> vorhanden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-423">A value with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-424">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<see cref="F:System.Int32.MaxValue" />).</span><span class="sxs-lookup"><span data-stu-id="06e4f-424">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-425">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-425">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-426">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-426">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-427">Der im <see cref="T:System.Collections.Generic.IDictionary`2" /> zu suchende Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="06e4f-427">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="06e4f-428">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Generic.IDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-428">Gets a value that indicates the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="06e4f-429"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.IDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-429"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-430"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-430"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-431">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-431">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-432">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-432">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06e4f-433">Stellt einen <see cref="T:System.Collections.IDictionaryEnumerator" /> für das <see cref="T:System.Collections.Generic.IDictionary`2" /> bereit.</span><span class="sxs-lookup"><span data-stu-id="06e4f-433">Provides a <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="06e4f-434">Ein <see cref="T:System.Collections.IDictionaryEnumerator" /> für die <see cref="T:System.Collections.Generic.IDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-434">A <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-435">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-435">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-436">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-436">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-437">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.Generic.IDictionary`2" /> eine feste Größe hat.</span><span class="sxs-lookup"><span data-stu-id="06e4f-437">Gets a value that indicates whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="06e4f-438"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.IDictionary`2" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-438"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06e4f-439">Für <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, gibt diese Eigenschaft immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06e4f-439">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-440">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-440">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-441">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-441">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-442">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.Generic.IDictionary`2" /> schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-442">Gets a value that indicates whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="06e4f-443"><see langword="true" />, wenn das <see cref="T:System.Collections.Generic.IDictionary`2" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-443"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06e4f-444">Für <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, gibt diese Eigenschaft immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="06e4f-444">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-445">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-445">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-446">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-446">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-447">Der Schlüssel des abzurufenden oder festzulegenden Werts.</span><span class="sxs-lookup"><span data-stu-id="06e4f-447">The key of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="06e4f-448">Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="06e4f-448">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="06e4f-449">Der dem angegebenen Schlüssel zugeordnete Wert, oder <see langword="null" />, wenn <paramref name="key" /> nicht im Wörterbuch enthalten ist oder <paramref name="key" /> einen Typ aufweist, der dem Schlüsseltyp <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> des  nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06e4f-449">The value associated with the specified key, or  <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-450"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-450"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06e4f-451">Es wird ein Wert zugewiesen, und <paramref name="key" /> ist ein Typ, der dem Schlüsseltyp oder Werttyp des <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> nicht zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="06e4f-451">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type or the value type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-452">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-452">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-453">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-453">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-454">Ruft ein <see cref="T:System.Collections.ICollection" /> ab, das die Schlüssel des <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-454">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys of the  <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="06e4f-455">Eine Schnittstelle, die die Schlüssel von <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-455">An interface that contains the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-456">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-456">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-457">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-457">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-458">Der Schlüssel des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06e4f-458">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="06e4f-459">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-459">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-460"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-460"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-461">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-461">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-462">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-462">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-463">Ruft ein <see cref="T:System.Collections.ICollection" /> ab, das die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-463">Gets an <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="06e4f-464">Eine Schnittstelle, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-464">An interface that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-465">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-465">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-466">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-466">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06e4f-467">Gibt einen Enumerator zurück, der die <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> durchläuft.</span><span class="sxs-lookup"><span data-stu-id="06e4f-467">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="06e4f-468">Ein Enumerator für <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-468">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4f-469">Der Enumerator, der vom Wörterbuch zurückgegeben wurde, kann sicher gleichzeitig mit Lese-und Schreibvorgängen in das Wörterbuch verwendet werden, es stellt jedoch keine Momentaufnahme des Wörterbuchs dar.</span><span class="sxs-lookup"><span data-stu-id="06e4f-469">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="06e4f-470">Der durch den Enumerator verfügbar gemachte Inhalt kann Änderungen enthalten, die nach <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> dem Aufruf von an dem Wörterbuch vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="06e4f-470">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-471">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-471">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-472">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-472">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As KeyValuePair(Of TKey, TValue)()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[]" Usage="concurrentDictionary.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06e4f-473">Kopiert die im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> gespeicherten Schlüssel-Wert-Paare in einem neuen Array.</span><span class="sxs-lookup"><span data-stu-id="06e4f-473">Copies the key and value pairs stored in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="06e4f-474">Ein neues Array, das eine Momentaufnahme von aus dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> kopierten Schlüssel-Wert-Paaren enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-474">A new array containing a snapshot of key and value pairs copied from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-475">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-475">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-476">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-476">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'Key * 'Value -&gt; bool" Usage="concurrentDictionary.TryAdd (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-477">Der Schlüssel des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06e4f-477">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="06e4f-478">Der Wert des hinzuzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="06e4f-478">The value of the element to add.</span></span> <span data-ttu-id="06e4f-479">Der Wert kann für Verweistypen <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="06e4f-479">The value can be  <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="06e4f-480">Versucht, dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> den angegebenen Schlüssel und Wert hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="06e4f-480">Attempts to add the specified key and value to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="06e4f-481"><see langword="true" />, wenn das Schlüssel-Wert-Paar zu <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> hinzugefügt wurde, <see langword="false" />, wenn der Schlüssel bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-481"><see langword="true" /> if the key/value pair was added to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> successfully; <see langword="false" /> if the key already exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06e4f-482">Diese Methode gibt `false` zurück, wenn der Schlüssel bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-482">This method returns `false` if the key already exists.</span></span> <span data-ttu-id="06e4f-483">Verwenden Sie <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> die <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> -oder-Methode, um den Wert zu aktualisieren, falls bereits ein Schlüssel vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-483">Use the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> or <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method to update the value in case a key already exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06e4f-484">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType> -Methode aufgerufen wird:</span><span class="sxs-lookup"><span data-stu-id="06e4f-484">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-485"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-485"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="06e4f-486">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<see cref="F:System.Int32.MaxValue" />).</span><span class="sxs-lookup"><span data-stu-id="06e4f-486">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-487">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-487">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-488">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-488">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool&#xA;override this.TryGetValue : 'Key *  -&gt; bool" Usage="concurrentDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-489">Der Schlüssel des abzurufenden Werts.</span><span class="sxs-lookup"><span data-stu-id="06e4f-489">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="06e4f-490">Enthält nach Abschluss der Methode das Objekt aus dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, das den angegebenen Schlüssel oder den Standardwert des Typs hat, wenn beim Vorgang ein Fehler aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-490">When this method returns, contains the object from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> that has the specified key, or the default value of the type if the operation failed.</span></span></param>
        <summary><span data-ttu-id="06e4f-491">Versucht, den Wert abzurufen, der dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-491">Attempts to get the value associated with the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="06e4f-492"><see langword="true" />, wenn der Schlüssel im <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> gefunden wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-492"><see langword="true" /> if the key was found in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-493"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-493"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-494">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-494">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-495">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-495">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRemove(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryRemove : 'Key *  -&gt; bool" Usage="concurrentDictionary.TryRemove (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-496">Der Schlüssel des Elements, das entfernt und zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="06e4f-496">The key of the element to remove and return.</span></span></param>
        <param name="value"><span data-ttu-id="06e4f-497">Wenn diese Methode beendet wird, enthält das entfernte Objekt aus <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, oder den Standardwert des <see langword="TValue" /> Typs, wenn <paramref name="key" /> leer ist.</span><span class="sxs-lookup"><span data-stu-id="06e4f-497">When this method returns, contains the object removed from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, or the default value of  the <see langword="TValue" /> type if <paramref name="key" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="06e4f-498">Versucht, den Wert zu entfernen und zurückzugeben, der den angegebenen Schlüssel aus dem <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> hat.</span><span class="sxs-lookup"><span data-stu-id="06e4f-498">Attempts to remove and return the value that has the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="06e4f-499"><see langword="true" />, wenn das Objekt erfolgreich entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-499"><see langword="true" /> if the object was removed successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06e4f-500">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType> -Methode aufgerufen wird:</span><span class="sxs-lookup"><span data-stu-id="06e4f-500">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-501"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-501"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-502">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-502">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-503">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-503">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryUpdate">
      <MemberSignature Language="C#" Value="public bool TryUpdate (TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUpdate(!TKey key, !TValue newValue, !TValue comparisonValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdate (key As TKey, newValue As TValue, comparisonValue As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUpdate(TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="F#" Value="member this.TryUpdate : 'Key * 'Value * 'Value -&gt; bool" Usage="concurrentDictionary.TryUpdate (key, newValue, comparisonValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="newValue" Type="TValue" />
        <Parameter Name="comparisonValue" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="06e4f-504">Der Schlüssel des Werts, der mit <paramref name="comparisonValue" /> verglichen und möglicherweise ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-504">The key of the value that is compared with <paramref name="comparisonValue" /> and possibly replaced.</span></span></param>
        <param name="newValue"><span data-ttu-id="06e4f-505">Der Wert, der den Wert des Elements mit dem angegebenen <paramref name="key" /> ersetzt, wenn der Vergleich Gleichheit ergibt.</span><span class="sxs-lookup"><span data-stu-id="06e4f-505">The value that replaces the value of the element that has the specified <paramref name="key" /> if the comparison results in equality.</span></span></param>
        <param name="comparisonValue"><span data-ttu-id="06e4f-506">Der Wert, der mit dem Wert des Elements mit dem angegebenen <paramref name="key" /> verglichen wird.</span><span class="sxs-lookup"><span data-stu-id="06e4f-506">The value that is compared with the value of the element that has the specified <paramref name="key" />.</span></span></param>
        <summary><span data-ttu-id="06e4f-507">Aktualisiert den Wert, der <paramref name="key" /> zugeordnet ist, in <paramref name="newValue" />, wenn der mit <paramref name="key" /> vorhandene Wert <paramref name="comparisonValue" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="06e4f-507">Updates the value associated with <paramref name="key" /> to <paramref name="newValue" /> if the existing value with <paramref name="key" /> is equal to <paramref name="comparisonValue" />.</span></span></summary>
        <returns><span data-ttu-id="06e4f-508"><see langword="true" />, wenn der Wert mit <paramref name="key" /> gleich <paramref name="comparisonValue" /> war und durch <paramref name="newValue" /> ersetzt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-508"><see langword="true" /> if the value with <paramref name="key" /> was equal to <paramref name="comparisonValue" /> and was replaced with <paramref name="newValue" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06e4f-509">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> -Methode aufgerufen wird:</span><span class="sxs-lookup"><span data-stu-id="06e4f-509">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06e4f-510"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06e4f-510"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-511">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-511">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-512">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-512">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TValue&gt; ^ Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'Value&gt;" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06e4f-513">Ruft eine Auflistung ab, die die Werte im <see cref="T:System.Collections.Generic.Dictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-513">Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="06e4f-514">Eine Auflistung, die die Werte im <see cref="T:System.Collections.Generic.Dictionary`2" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="06e4f-514">A collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="06e4f-515">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="06e4f-515">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598"><span data-ttu-id="06e4f-516">Gewusst wie: Hinzufügen und Entfernen von Elementen aus einem ConcurrentDictionary</span><span class="sxs-lookup"><span data-stu-id="06e4f-516">How to: Add and Remove Items from a ConcurrentDictionary</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
