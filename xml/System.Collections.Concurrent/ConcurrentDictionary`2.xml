<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConcurrentDictionary`2.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">037e736f-f76f-422a-bcb7-5d2d599f851d4202eb12ba1934ff1ee126f044e9627be2e6de25.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4202eb12ba1934ff1ee126f044e9627be2e6de25</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fc53860cd2661bb7bde6e4b2858fcda4ec4c889</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">Der Typ der Schlüssel im Wörterbuch.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">Der Typ der Werte im Wörterbuch.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Represents a thread-safe collection of key/value pairs that can be accessed by multiple threads concurrently.</source>
          <target state="translated">Stellt eine threadsichere Auflistung von Schlüssel-Wert-Paaren dar, auf die durch mehrere Threads gleichzeitig zugegriffen werden kann.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> objects, you can increase the maximum array size to 2 gigabytes (GB) on a 64-bit system by setting the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">Für sehr große <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> Objekte aufweist, Sie können die maximale Arraygröße 2 Gigabyte (GB) auf einem 64-Bit-System erhöhen, indem Sie das Konfigurationselement auf <ph id="ph2">`true`</ph> in der Umgebung zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> interfaces starting with the <ph id="ph4">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id="ph5">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> class did not implement these interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> implementiert die <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> und <ph id="ph3">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> Schnittstellen, beginnend mit der <ph id="ph4">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in früheren Versionen von .NET Framework, die <ph id="ph5">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> Klasse implementiert diese Schnittstellen nicht.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Like the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType&gt;</ph> class, <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> implements the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface.</source>
          <target state="translated">Wie die <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType&gt;</ph> -Klasse, <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> implementiert die <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>In addition, <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> provides several methods for adding or updating key/value pairs in the dictionary, as described in the following table.</source>
          <target state="translated">Darüber hinaus <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> bietet mehrere Methoden zum Hinzufügen oder Aktualisieren von Schlüssel/Wert-Paare im Wörterbuch vorhanden ist, wie in der folgenden Tabelle beschrieben.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>To do this</source>
          <target state="translated">Aufgabe</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Use this method</source>
          <target state="translated">Verwenden Sie diese Methode</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Usage notes</source>
          <target state="translated">Hinweise zur Verwendung</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Add a new key to the dictionary, if it doesn’t already exist in the dictionary</source>
          <target state="translated">Fügen Sie einen neuen Schlüssel auf das Wörterbuch, wenn er nicht bereits im Wörterbuch vorhanden</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>This method adds the specified key/value pair, if the key doesn’t currently exist in the dictionary.</source>
          <target state="translated">Diese Methode fügt das angegebene Schlüssel-Wert-Paar hinzu, wenn der Schlüssel im Wörterbuch nicht vorhanden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The method returns <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> depending on whether the new pair was added.</source>
          <target state="translated">Gibt die Methode <ph id="ph1">`true`</ph> oder <ph id="ph2">`false`</ph> abhängig davon, ob das neue Paar hinzugefügt wurde.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Update the value for an existing key in the dictionary, if that key has a specific value</source>
          <target state="translated">Aktualisieren Sie den Wert für einen vorhandenen Schlüssel im Wörterbuch vorhanden ist, ein, wenn dieser Schlüssel einen konkreten Wert hat.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>This method checks whether the key has a specified value, and if it does, updates the key with a new value.</source>
          <target state="translated">Diese Methode überprüft, ob der Schlüssel einen angegebenen Wert enthält, und es der Fall ist, den Schlüssel mit einem neuen Wert aktualisiert.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>It's similar to the <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%2A&gt;</ph> method, except that it's used for dictionary elements.</source>
          <target state="translated">Ähnliches gilt für die <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%2A&gt;</ph> Methode, mit der Ausnahme, dass die It für Wörterbuchelemente verwendeten.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Store a key/value pair in the dictionary unconditionally, and overwrite the value of a key that already exists</source>
          <target state="translated">Speichern Sie ein Schlüssel/Wert-Paar im Wörterbuch bedingungslos und überschreiben Sie den Wert eines Schlüssels, der bereits vorhanden ist</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The indexer’s setter: <ph id="ph1">`dictionary[key] = newValue`</ph></source>
          <target state="translated">Der Indexer Setter-Methode: <ph id="ph1">`dictionary[key] = newValue`</ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Add a key/value pair to the dictionary, or if the key already exists, update the value for the key based on the key’s existing value</source>
          <target state="translated">Dem Wörterbuch fügen Sie ein Schlüssel/Wert-Paar hinzu, oder wenn der Schlüssel bereits vorhanden ist, aktualisieren Sie den Wert für den Schlüssel, die basierend auf vorhandenen Werts des Schlüssels</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>—or—</source>
          <target state="translated">– oder –</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29&gt;</ph> accepts the key and two delegates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29&gt;</ph> akzeptiert den Schlüssel und zwei Delegaten an.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>It uses the first delegate if the key doesn’t exist in the dictionary; it accepts the key and returns the value that should be added for the key.</source>
          <target state="translated">Der erste Delegat verwendet, wenn der Schlüssel nicht im Wörterbuch vorhanden ist; es akzeptiert die Schlüssel und gibt den Wert, der für den Schlüssel hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>It uses the second delegate if the key does exist; it accepts the key and its current value, and it returns the new value that should be set for the key.</source>
          <target state="translated">Er verwendet den zweiten Delegaten, wenn der Schlüssel vorhanden ist. es akzeptiert die Schlüssel und seinen aktuellen Wert und den neuen Wert zurück, der für den Schlüssel festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29&gt;</ph> accepts the key, a value to add, and the update delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29&gt;</ph> akzeptiert den Schlüssel, ein hinzuzufügende Wert und der Updatedelegat.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>This is the same as the previous overload, except that it doesn't use a delegate to add a key.</source>
          <target state="translated">Dies ist identisch mit der vorherigen Überladung, außer dass es einen Delegaten Hinzufügen eines Schlüssels verwendet.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Get the value for a key in the dictionary, adding the value to the dictionary and returning it if the key doesn’t exist</source>
          <target state="translated">Rufen Sie den Wert für einen Schlüssel im Wörterbuch vorhanden ist, den Wert zum Wörterbuch hinzufügen und das zurückgeben, wenn der Schlüssel nicht vorhanden ist</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>—or—</source>
          <target state="translated">– oder –</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>These overloads provide lazy initialization for a key/value pair in the dictionary, adding the value only if it’s not there.</source>
          <target state="translated">Diese Überladungen geben die verzögerte Initialisierung für ein Schlüssel/Wert-Paar im Wörterbuch vorhanden ist, nur dann, wenn sie nicht vorhanden ist, wird durch das Hinzufügen des Werts.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29&gt;</ph> takes the value to be added if the key doesn’t exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29&gt;</ph> nimmt den Wert hinzugefügt werden, wenn der Schlüssel nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29&gt;</ph> takes a delegate that will generate the value if the key doesn’t exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29&gt;</ph> wird ein Delegat, der den Wert generiert wird, wenn der Schlüssel nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>All these operations are atomic and are thread-safe with regards to all other operations on the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> class.</source>
          <target state="translated">Alle diese Vorgänge sind atomar und Thread-sichere sind im Hinblick auf andere Vorgänge auf die <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The only exceptions are the methods that accept a delegate, that is, <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph>.</source>
          <target state="translated">Die einzigen Ausnahmen sind die Methoden, die ein Delegat, d. h. akzeptieren <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>For modifications and write operations to the dictionary, <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> uses fine-grained locking to ensure thread safety.</source>
          <target state="translated">Für Änderungen und Schreibvorgänge auf das Wörterbuch <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> verwendet differenzierte sperren, um Threadsicherheit zu gewährleisten.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>(Read operations on the dictionary are performed in a lock-free manner.) However, delegates for these methods are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</source>
          <target state="translated">(Read-Vorgänge für das Wörterbuch werden in einer Weise sperrenfreie ausgeführt). Jedoch sind Delegate für diese Methoden aufgerufen, außerhalb der Sperren, um die Probleme zu vermeiden, die beim Ausführen von unbekanntem Code eine Sperre auftreten können.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Therefore, the code executed by these delegates is not subject to the atomicity of the operation.</source>
          <target state="translated">Deshalb unterliegt der Code ausgeführt wird, indem Sie diesen Delegaten nicht die Unteilbarkeit des Vorgangs.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The following example shows how to construct a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> object.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">Alle öffentlichen und geschützten Member der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> sind threadsicher und können von mehreren Threads gleichzeitig verwendet werden.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>However, members accessed through one of the interfaces the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</source>
          <target state="translated">Allerdings Mitglieder erfolgt über eine der Schnittstellen der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> implementiert, einschließlich Erweiterungsmethoden, sind nicht unbedingt threadsicher und müssen möglicherweise vom Anrufer synchronisiert werden.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>-Klasse mit der Standardparallelitätsebene und der Standardanfangskapazität, wobei der Standardvergleich für den Schlüsseltyp verwendet wird.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The default concurrency level is the default concurrency multiplier (DEFAULT_CONCURRENCY_MULTIPLIER) times the number of CPUs.</source>
          <target state="translated">Die Standardparallelitätsebene ist der standardmäßige Parallelität Multiplikator (DEFAULT_CONCURRENCY_MULTIPLIER) multipliziert mit der Anzahl der CPUs.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The higher the default concurrency multiplier is, the more concurrent write operations can take place without interference and blocking.</source>
          <target state="translated">Je höher der Standardeinstellung Parallelität Multiplikator ist, mehrere gleichzeitige Schreibvorgänge können stattfinden ohne Störungen und blockieren.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>Higher multiplier values also cause operations that require all locks (for example, table resizing, <ph id="ph1">`ToArray`</ph> and <ph id="ph2">`Count`</ph>) to become more expensive.</source>
          <target state="translated">Höhere Multiplikator Werte auch dazu führen, dass Vorgänge, die alle Sperren erfordern (z. B. Tabelle ändern der Größe, <ph id="ph1">`ToArray`</ph> und <ph id="ph2">`Count`</ph>) teurer werden.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The default concurrency multiplier is 4.</source>
          <target state="translated">Der Standardwert Parallelität Multiplikator ist 4.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The default capacity (DEFAULT_CAPACITY), which represents the initial number of buckets, is a trade-off between the size of a very small dictionary and the number of resizes when constructing a large dictionary.</source>
          <target state="translated">Die festgelegte Standardkapazität (DEFAULT_CAPACITY), die womit die anfängliche Anzahl von Buckets dargestellt wird, ist ein Kompromiss zwischen der Größe eines Wörterbuchs sehr klein und die Anzahl der ändert die Größe beim Erstellen eines großen Wörterbuchs.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>Also, the capacity should not be divisible by a small prime number.</source>
          <target state="translated">Darüber hinaus darf die Kapazität nicht durch eine kleine Anzahl von Primzahlen teilbar sein.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The default capacity is 31.</source>
          <target state="translated">Die festgelegte Standardkapazität ist 31.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, dessen Elemente in das neue <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> kopiert werden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>-Klasse, die aus dem angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> kopierte Elemente enthält, die Standardparallelitätsebene und Standardanfangskapazität aufweist und den Standardvergleich für den Schlüsseltyp verwendet.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> or any of its keys is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> oder einer seiner Schlüssel ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> enthält mindestens einen doppelten Schlüssel.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparison implementation to use when comparing keys.</source>
          <target state="translated">Die Übereinstimmungsvergleich-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that is empty, has the default concurrency level and capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>-Klasse mit der Standardparallelitätsebene und -Kapazität und dem angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, dessen Elemente in das neue <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> kopiert werden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> has the default concurrency level, has the default initial capacity, and uses the specified  <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>-Klasse, die aus dem angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> kopierte Elemente enthält, die Standardparallelitätsebene und Standardanfangskapazität aufweist und den angegebenen <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> or <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source>The estimated number of threads that will update the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> concurrently.</source>
          <target state="translated">Die geschätzte Anzahl von Threads, die das <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> gleichzeitig aktualisieren.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated">Die anfängliche Anzahl von Elementen, die das <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> enthalten kann.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>-Klasse mit der angegebenen Parallelitätsebene und Kapazität, wobei der Standardvergleich für den Schlüsseltyp verwendet wird.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> is less than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> ist kleiner als 1.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The estimated number of threads that will update the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> concurrently.</source>
          <target state="translated">Die geschätzte Anzahl von Threads, die das <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> gleichzeitig aktualisieren.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, dessen Elemente in das neue <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> kopiert werden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>, and uses the specified <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>-Klasse, die aus dem angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> kopierte Elemente enthält und den angegebenen <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> or <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> is less than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> ist kleiner als 1.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> enthält mindestens einen doppelten Schlüssel.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The estimated number of threads that will update the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> concurrently.</source>
          <target state="translated">Die geschätzte Anzahl von Threads, die das <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> gleichzeitig aktualisieren.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated">Die anfängliche Anzahl von Elementen, die das <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> enthalten kann.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>-Klasse mit der angegebenen Parallelitätsebene und Anfangskapazität und dem angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> or <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> is less than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> ist kleiner als 1.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist, or updates a key/value pair in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key already exists.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist, oder aktualisiert ein Schlüssel-Wert-Paar im <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, wenn der Schlüssel bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> method:</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> Methode:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The key to be added or whose value should be updated</source>
          <target state="translated">Der Schlüssel, der hinzugefügt oder dessen Wert aktualisiert werden soll.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The function used to generate a value for an absent key</source>
          <target state="translated">Die Funktion zum Generieren eines Werts für einen nicht vorhandenen Schlüssel.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The function used to generate a new value for an existing key based on the key's existing value</source>
          <target state="translated">Die Funktion zum Generieren eines neuen Werts für einen vorhandenen Schlüssel auf Grundlage des vorhandenen Werts des Schlüssels.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>Uses the specified functions to add a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist, or to update a key/value pair in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key already exists.</source>
          <target state="translated">Verwendet die angegebene Funktionen, um dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ein Schlüssel-Wert-Paar hinzuzufügen, wenn der Schlüssel nicht bereits vorhanden ist, oder um ein Schlüssel-Wert-Paar im <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> zu aktualisieren, wenn der Schlüssel bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The new value for the key.</source>
          <target state="translated">Der neue Wert für den Schlüssel.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>This will be either be the result of addValueFactory (if the key was absent) or the result of updateValueFactory (if the key was present).</source>
          <target state="translated">Dies ist entweder das Ergebnis von addValueFactory (wenn der Schlüssel nicht vorhanden war) oder das Ergebnis von updateValueFactory (wenn der Schlüssel vorhanden war).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>If you call <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> simultaneously on different threads, <ph id="ph2">`addValueFactory`</ph> may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</source>
          <target state="translated">Beim Aufrufen <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> gleichzeitig in verschiedenen Threads <ph id="ph2">`addValueFactory`</ph> aufgerufen werden möglicherweise mehrere Male auf, aber das Schlüssel/Wert-Paar kann nicht hinzugefügt werden, auf das Wörterbuch für jeden Aufruf.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph>, <ph id="ph2">&lt;paramref name="addValueFactory" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="updateValueFactory" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>, <ph id="ph2">&lt;paramref name="addValueFactory" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="updateValueFactory" /&gt;</ph> ist <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The key to be added or whose value should be updated</source>
          <target state="translated">Der Schlüssel, der hinzugefügt oder dessen Wert aktualisiert werden soll.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The value to be added for an absent key</source>
          <target state="translated">Der Wert, der für einen nicht vorhandenen Schlüssel hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The function used to generate a new value for an existing key based on the key's existing value</source>
          <target state="translated">Die Funktion zum Generieren eines neuen Werts für einen vorhandenen Schlüssel auf Grundlage des vorhandenen Werts des Schlüssels.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist, or updates a key/value pair in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> by using the specified function if the key already exists.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist, oder aktualisiert ein Schlüssel-Wert-Paar im <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> mithilfe der angegebenen Funktion, wenn der Schlüssel bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The new value for the key.</source>
          <target state="translated">Der neue Wert für den Schlüssel.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>This will be either be addValue (if the key was absent) or the result of updateValueFactory (if the key was present).</source>
          <target state="translated">Dies ist entweder addValue (wenn der Schlüssel nicht vorhanden war) oder das Ergebnis von updateValueFactory (wenn der Schlüssel vorhanden war).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The following code example shows how to initialize an <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> and how to use the AddOrUpdate method to add an additional item to the collection, and update the existing items.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Initialisieren einer <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> sowie zum Verwenden der Methode kann nicht auf die Auflistung ein weiteres Element hinzu, und die vorhandenen Elemente aktualisiert.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="updateValueFactory" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="updateValueFactory" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The type of the keys in this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph></source>
          <target state="translated">Der Typ der Schlüssel in diesem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The key to be added or whose value should be updated.</source>
          <target state="translated">Der Schlüssel, der hinzugefügt oder dessen Wert aktualisiert werden soll.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The function used to generate a value for an absent key.</source>
          <target state="translated">Die Funktion zum Generieren eines Werts für einen nicht vorhandenen Schlüssel.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The function used to generate a new value for an existing key based on the key's existing value.</source>
          <target state="translated">Die Funktion zum Generieren eines neuen Werts für einen vorhandenen Schlüssel auf Grundlage des vorhandenen Werts des Schlüssels.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>An argument to pass into <bpt id="p1">&lt;c&gt;</bpt>addValueFactory<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>updateValueFactory<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein Argument, das an <bpt id="p1">&lt;c&gt;</bpt>addValueFactory<ept id="p1">&lt;/c&gt;</ept> und <bpt id="p2">&lt;c&gt;</bpt>updateValueFactory<ept id="p2">&lt;/c&gt;</ept> übergeben werden soll.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist, or updates a key/value pair in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key already exists.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist, oder aktualisiert ein Schlüssel-Wert-Paar im <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, wenn der Schlüssel bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The new value for the key.</source>
          <target state="translated">Der neue Wert für den Schlüssel.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>This will be either be the result of addValueFactory (if the key was absent) or the result of updateValueFactory (if the key was present).</source>
          <target state="translated">Dies ist entweder das Ergebnis von addValueFactory (wenn der Schlüssel nicht vorhanden war) oder das Ergebnis von updateValueFactory (wenn der Schlüssel vorhanden war).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph>, <ph id="ph2">&lt;paramref name="addValueFactory" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="updateValueFactory" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>, <ph id="ph2">&lt;paramref name="addValueFactory" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="updateValueFactory" /&gt;</ph> ist ein NULL-Verweis („Nothing“ in Visual Basic).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear">
          <source>Removes all keys and values from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Entfernt sämtliche Schlüssel und Werte aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> contains the specified key.</source>
          <target state="translated">Bestimmt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> den angegebenen Schlüssel enthält.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ruft die Anzahl der Schlüssel-Wert-Paare im <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Schlüssel-Wert-Paare im <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <source>This property has snapshot semantics and represents the number of items in the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType&gt;</ph> at the moment when the property was accessed.</source>
          <target state="translated">Diese Eigenschaft verfügt über eine Momentaufnahme Semantik und stellt die Anzahl der Elemente in der <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType&gt;</ph> im Moment, wenn die Eigenschaft zugegriffen wurde.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Gibt einen Enumerator zurück, der die <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> durchläuft.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <source>An enumerator for the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ein Enumerator für <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <source>The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</source>
          <target state="translated">Zurückgegebenes aus dem Wörterbuch sicher ist, verwenden Sie gleichzeitig mit der Lesevorgänge und Schreibvorgänge auf das Wörterbuch, jedoch keinen Snapshot des Wörterbuchs darstellt.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <source>The contents exposed through the enumerator may contain modifications made to the dictionary after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A&gt;</ph> was called.</source>
          <target state="translated">Den Inhalt durch den Enumerator verfügbar gemacht werden möglicherweise Änderungen, die dem Wörterbuch nach <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A&gt;</ph> aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> method:</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> Methode:</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key of the element to add.</source>
          <target state="translated">Der Schlüssel des hinzuzufügenden Elements.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The function used to generate a value for the key.</source>
          <target state="translated">Die Funktion, mit der ein Wert für den Schlüssel generiert wird.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> by using the specified function if the key does not already exist, or returns the existing value if the key exists.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> mithilfe der angegebenen Funktion ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel noch nicht vorhanden ist, oder gibt den vorhanden Wert zurück, wenn der Schlüssel bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The value for the key.</source>
          <target state="translated">Der Wert für den Schlüssel.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>Since a key/value can be inserted by another thread while <ph id="ph1">`valueFactory`</ph> is generating a value, you cannot trust that just because <ph id="ph2">`valueFactory`</ph> executed, its produced value will be inserted into the dictionary and returned.</source>
          <target state="translated">Da ein Schlüssel-Wert können, von einem anderen Thread während eingefügt werden <ph id="ph1">`valueFactory`</ph> ist Generieren eines Werts an, Sie können nicht als vertrauenswürdig einstufen, die nur weil <ph id="ph2">`valueFactory`</ph> ausgeführt, dessen erstellten Wert wird in das Wörterbuch eingefügt und zurückgegeben.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>If you call <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> simultaneously on different threads, <ph id="ph2">`valueFactory`</ph> may be called multiple times, but only one key/value pair will be added to the dictionary.</source>
          <target state="translated">Beim Aufrufen <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> gleichzeitig in verschiedenen Threads <ph id="ph2">`valueFactory`</ph> aufgerufen werden möglicherweise mehrere Male auf, aber nur ein Schlüssel/Wert-Paar wird, die dem Wörterbuch hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> is called but before <ph id="ph2">`valueFactory`</ph> generates a value:</source>
          <target state="translated">Der Rückgabewert hängt das Vorhandensein der Schlüssel im Wörterbuch sowie ggf. einzufügende ein Schlüssel-Wert von einem anderen Thread nach <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> aufgerufen wird, jedoch bevor <ph id="ph2">`valueFactory`</ph> wird ein Wert generiert:</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>Scenario</source>
          <target state="translated">Szenario</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>Return value</source>
          <target state="translated">Rückgabewert</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key is already in the dictionary.</source>
          <target state="translated">Der Schlüssel ist bereits im Wörterbuch.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The existing value is returned.</source>
          <target state="translated">Der vorhandene Wert wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key is not in the dictionary.</source>
          <target state="translated">Der Schlüssel ist nicht im Wörterbuch.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source><ph id="ph1">`valueFactory`</ph> generates a value.</source>
          <target state="translated"><ph id="ph1">`valueFactory`</ph> generiert einen Wert an.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>On rechecking for the key, no key is found.</source>
          <target state="translated">Für erneute für den Schlüssel, ist kein Schlüssel gefunden.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key/value is inserted into the dictionary, and the value is returned.</source>
          <target state="translated">Der Schlüssel-Wert dem Wörterbuch eingefügt wird, und der Wert wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key is not in the dictionary.</source>
          <target state="translated">Der Schlüssel ist nicht im Wörterbuch.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source><ph id="ph1">`valueFactory`</ph> generates a value.</source>
          <target state="translated"><ph id="ph1">`valueFactory`</ph> generiert einen Wert an.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>While <ph id="ph1">`valueFactory`</ph> is generating the value, a different thread inserts a value for the key.</source>
          <target state="translated">Während <ph id="ph1">`valueFactory`</ph> ist generieren Sie den Wert von ein anderen Thread Fügt einen Wert für den Schlüssel.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>After <ph id="ph1">`valueFactory`</ph> executes and upon rechecking for the key, the key inserted by the other thread is found.</source>
          <target state="translated">Nach dem <ph id="ph1">`valueFactory`</ph> ausgeführt wird und nach erneute für den Schlüssel, der Schlüssel, die von der andere Thread eingefügt wurden gefunden.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The value inserted by the other thread is returned.</source>
          <target state="translated">Der Wert, der von der andere Thread eingefügt wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">Der Schlüssel des hinzuzufügenden Elements.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>The value to be added, if the key does not already exist.</source>
          <target state="translated">Der hinzuzufügende Wert, wenn der Schlüssel nicht bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>The value for the key.</source>
          <target state="translated">Der Wert für den Schlüssel.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</source>
          <target state="translated">Dies ist entweder der vorhandene Wert für den Schlüssel, wenn der Schlüssel bereits im Wörterbuch vorhanden ist, oder der neue Wert, wenn der Schlüssel nicht im Wörterbuch vorhanden war.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>The type of the keys in this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph></source>
          <target state="translated">Der Typ der Schlüssel in diesem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>The key of the element to add.</source>
          <target state="translated">Der Schlüssel des hinzuzufügenden Elements.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>The function used to generate a value for the key.</source>
          <target state="translated">Die Funktion, mit der ein Wert für den Schlüssel generiert wird.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>An argument value to pass into <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ein Argumentwert, der an <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> übergeben werden soll.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> ein Schlüssel-Wert-Paar hinzu, wenn der Schlüssel nicht bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>The value for the key.</source>
          <target state="translated">Der Wert für den Schlüssel.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>This will be either the existing value for the key if the key is already in the dictionary, or the new value for the key as returned by <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> if the key was not in the dictionary.</source>
          <target state="translated">Dies ist entweder der vorhandene Wert für den Schlüssel, wenn der Schlüssel bereits im Verzeichnis vorhanden ist, oder der neue Wert für den Schlüssel, wie von <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> zurückgegeben, wenn der Schlüssel nicht im Wörterbuch vorhanden war.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> is empty.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> leer ist.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> leer ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source>The key of the value to get or set.</source>
          <target state="translated">Der Schlüssel des abzurufenden oder festzulegenden Werts.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source>The value of the key/value pair at the specified index.</source>
          <target state="translated">Der Wert des Schlüssel/Wertpaars am angegebenen Index.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection.</source>
          <target state="translated">Die Eigenschaft wird abgerufen, und der <ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist nicht in der Auflistung vorhanden.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys">
          <source>Gets a collection containing the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ruft eine Auflistung ab, die die Schlüssel im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys">
          <source>A collection of keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Eine Auflistung der Schlüssel in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale Array, das das Ziel der aus <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Für das Array muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an array, starting at the specified array index.</source>
          <target state="translated">Kopiert die Elemente der <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> in ein Array, wobei am angegebenen Arrayindex begonnen wird.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer oder gleich der Länge von <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> ist größer als der verfügbare Platz vom <ph id="ph2">&lt;paramref name="index" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>s.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized with the SyncRoot.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> mit SyncRoot synchronisiert wird.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Zugriff auf das <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert (threadsicher) ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>For <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> this property always returns <bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</source>
          <target state="translated">Für <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> gibt diese Eigenschaft immer <bpt id="p1">**</bpt>"false"<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Ruft ein Objekt ab, mit dem der Zugriff auf <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>This property is not supported.</source>
          <target state="translated">Diese Eigenschaft wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Always returns null.</source>
          <target state="translated">Gibt immer NULL zurück.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>This property is not supported.</source>
          <target state="translated">Diese Eigenschaft wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the key.</source>
          <target state="translated">Das Objekt, das als Schlüssel verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the value.</source>
          <target state="translated">Das Objekt, das als Wert verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds the specified key and value to the dictionary.</source>
          <target state="translated">Fügt dem Wörterbuch den angegebenen Schlüssel und Wert hinzu.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type  of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist ein Typ, der dem Schlüsseltyp von <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> nicht zugewiesen werden kann.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the type of values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> weist einen Typ auf, der dem Werttyp in <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> nicht zugeordnet werden kann.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>A value with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ein Wert mit dem gleichen Namen ist bereits im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> vorhanden.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>Gets whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">Ruft ab, ob das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> ein Element mit dem angegebenen Schlüssel enthält.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Stellt einen <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> für das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> bereit.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> für die <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> eine feste Größe aufweist.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> eine feste Größe aufweist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>For <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Für <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> gibt diese Eigenschaft immer <ph id="ph2">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> schreibgeschützt ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>For <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Für <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> gibt diese Eigenschaft immer <ph id="ph2">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the value to get or set.</source>
          <target state="translated">Der Schlüssel des abzurufenden oder festzulegenden Werts.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The value associated with the specified key, or  <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not in the dictionary or <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type of the <ph id="ph4">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Der dem angegebenen Schlüssel zugeordnete Wert, oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="key" /&gt;</ph> nicht im Wörterbuch enthalten ist oder <ph id="ph3">&lt;paramref name="key" /&gt;</ph> einen Typ aufweist, der dem Schlüsseltyp des <ph id="ph4">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> nicht zugeordnet werden kann.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type or the value type of the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Es wird ein Wert zugewiesen, und <ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist ein Typ, der dem Schlüsseltyp oder Werttyp des <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> nicht zugeordnet werden kann.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the keys of the  <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> ab, das die Schlüssel des <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys">
          <source>An interface that contains the keys of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Eine Schnittstelle, die die Schlüssel von <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">Der Schlüssel des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Entfernt das Element mit dem angegebenen Schlüssel aus dem <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> ab, das die Werte im <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values">
          <source>An interface that contains the values in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Eine Schnittstelle, die die Werte im <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Gibt einen Enumerator zurück, der die <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> durchläuft.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator for the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ein Enumerator für <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</source>
          <target state="translated">Zurückgegebenes aus dem Wörterbuch sicher ist, verwenden Sie gleichzeitig mit der Lesevorgänge und Schreibvorgänge auf das Wörterbuch, jedoch keinen Snapshot des Wörterbuchs darstellt.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The contents exposed through the enumerator may contain modifications made to the dictionary after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A&gt;</ph> was called.</source>
          <target state="translated">Den Inhalt durch den Enumerator verfügbar gemacht werden möglicherweise Änderungen, die dem Wörterbuch nach <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A&gt;</ph> aufgerufen wurde.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
          <source>Copies the key and value pairs stored in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> to a new array.</source>
          <target state="translated">Kopiert die im <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> gespeicherten Schlüssel-Wert-Paare in einem neuen Array.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
          <source>A new array containing a snapshot of key and value pairs copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ein neues Array, das eine Momentaufnahme von aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> kopierten Schlüssel-Wert-Paaren enthält.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">Der Schlüssel des hinzuzufügenden Elements.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The value of the element to add.</source>
          <target state="translated">Der Wert des hinzuzufügenden Elements.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The value can be  <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>Attempts to add the specified key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Versucht, dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> den angegebenen Schlüssel und Wert hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key/value pair was added to the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> successfully; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the key already exists.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Schlüssel-Wert-Paar zum <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> hinzugefügt wurde, <ph id="ph3">&lt;see langword="false" /&gt;</ph>, wenn der Schlüssel bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>This method returns <ph id="ph1">`false`</ph> if the key already exists.</source>
          <target state="translated">Diese Methode gibt <ph id="ph1">`false`</ph> , wenn der Schlüssel bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> method to update the value in case a key already exists.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> Methode zum Aktualisieren des Werts für den Fall, dass ein Schlüssel bereits vorhanden ist.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType&gt;</ph> method:</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType&gt;</ph> Methode:</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">Das Wörterbuch enthält bereits die maximale Anzahl von Elementen (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source>The key of the value to get.</source>
          <target state="translated">Der Schlüssel des abzurufenden Werts.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, contains the object from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> that has the specified key, or the default value of the type if the operation failed.</source>
          <target state="translated">Enthält nach Abschluss der Methode das Objekt aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, das den angegebenen Schlüssel oder den Standardwert des Typs hat, wenn beim Vorgang ein Fehler aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source>Attempts to get the value associated with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Versucht, den Wert abzurufen, der dem angegebenen Schlüssel aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was found in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Schlüssel im <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> gefunden wird, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source>The key of the element to remove and return.</source>
          <target state="translated">Der Schlüssel des Elements, das entfernt und zurückgegeben werden soll.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source>When this method returns, contains the object removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, or the default value of  the <ph id="ph2">&lt;see langword="TValue" /&gt;</ph> type if <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> does not exist.</source>
          <target state="translated">Enthält, wenn diese Methode zurückgegeben wird, das aus der <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> entfernte Objekt oder den Standardwert des Typs <ph id="ph2">&lt;see langword="TValue" /&gt;</ph>, wenn <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> leer ist.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source>Attempts to remove and return the value that has the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Versucht, den Wert zu entfernen und zurückzugeben, der den angegebenen Schlüssel aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> hat.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object was removed successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Objekt erfolgreich entfernt wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType&gt;</ph> method:</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType&gt;</ph> Methode:</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>The key whose value is compared with <bpt id="p1">&lt;c&gt;</bpt>comparisonValue<ept id="p1">&lt;/c&gt;</ept> and possibly replaced.</source>
          <target state="translated">Der Schlüssel, dessen Wert mit <bpt id="p1">&lt;c&gt;</bpt>comparisonValue<ept id="p1">&lt;/c&gt;</ept> verglichen und möglicherweise ersetzt wird.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>The value that replaces the value of the element that has the specified <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> if the comparison results in equality.</source>
          <target state="translated">Der Wert, der den Wert des Elements durch den angegebenen <bpt id="p1">&lt;c&gt;</bpt>Schlüssel<ept id="p1">&lt;/c&gt;</ept> ersetzt, wenn der Vergleich Gleichheit ergibt.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>The value that is compared to the value of the element that has the specified <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Wert, der mit dem Wert des Elements mit dem angegebenen <bpt id="p1">&lt;c&gt;</bpt>Schlüssel<ept id="p1">&lt;/c&gt;</ept> verglichen wird.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>Updates the value associated with <ph id="ph1">&lt;paramref name="key" /&gt;</ph> to <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph> if the existing value is equal to <ph id="ph3">&lt;paramref name="comparisonValue" /&gt;</ph>.</source>
          <target state="translated">Aktualisiert den Wert, der <ph id="ph1">&lt;paramref name="key" /&gt;</ph> zugeordnet ist, auf <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph>, wenn der vorhandene Wert <ph id="ph3">&lt;paramref name="comparisonValue" /&gt;</ph> entspricht.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value with <ph id="ph2">&lt;paramref name="key" /&gt;</ph> was equal to <ph id="ph3">&lt;paramref name="comparisonValue" /&gt;</ph> and was replaced with <ph id="ph4">&lt;paramref name="newValue" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Wert mit <ph id="ph2">&lt;paramref name="key" /&gt;</ph> gleich <ph id="ph3">&lt;paramref name="comparisonValue" /&gt;</ph> war und durch <ph id="ph4">&lt;paramref name="newValue" /&gt;</ph> ersetzt wurde, andernfalls <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A&gt;</ph> method:</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A&gt;</ph> Methode:</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values">
          <source>Gets a collection that contains the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ruft eine Auflistung ab, die die Werte im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values">
          <source>A collection that contains the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Eine Auflistung, die die Werte im <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> enthält.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>