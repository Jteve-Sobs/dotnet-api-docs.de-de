<Type Name="Partitioner&lt;TSource&gt;" FullName="System.Collections.Concurrent.Partitioner&lt;TSource&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d3d14c1b4a7f24cc79d4571f023b51d53e67d0e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70588331" /></Metadata><TypeSignature Language="C#" Value="public abstract class Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Partitioner`1&lt;TSource&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.Partitioner`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Partitioner(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class Partitioner abstract" />
  <TypeSignature Language="F#" Value="type Partitioner&lt;'Source&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource"><span data-ttu-id="8d03c-101">Typ der Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="8d03c-101">Type of the elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="8d03c-102">Stellt eine bestimmte Form dar, eine Datenquelle in mehrere Partitionen zu trennen.</span><span class="sxs-lookup"><span data-stu-id="8d03c-102">Represents a particular manner of splitting a data source into multiple partitions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d03c-103">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="8d03c-103">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d03c-104">Im folgenden Beispiel wird gezeigt, wie ein Partitionierer implementiert wird, der jeweils ein einzelnes Element zurückgibt:</span><span class="sxs-lookup"><span data-stu-id="8d03c-104">The following example shows how to implement a partitioner that returns a single element at a time:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.Partitioner#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.partitioner/cs/partitioner.cs#1)]
 [!code-vb[System.Collections.Concurrent.Partitioner#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.partitioner/vb/partitioner.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8d03c-105">Die statischen Methoden für <see cref="T:System.Collections.Concurrent.Partitioner`1" /> sind alle Thread sicher und können gleichzeitig von mehreren Threads verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d03c-105">The static methods on <see cref="T:System.Collections.Concurrent.Partitioner`1" /> are all thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="8d03c-106">Während ein erstellter Partitionierer verwendet wird, sollte die zugrunde liegende Datenquelle jedoch nicht geändert werden, unabhängig davon, ob Sie aus demselben Thread verwendet wird, der einen Partitionierer oder einen separaten Thread verwendet.</span><span class="sxs-lookup"><span data-stu-id="8d03c-106">However, while a created partitioner is in use, the underlying data source should not be modified, whether from the same thread that is using a partitioner or from a separate thread.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
    <altmember cref="T:System.Collections.Concurrent.Partitioner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Partitioner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Partitioner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d03c-107">Erstellt eine neue Partitioniererinstanz.</span><span class="sxs-lookup"><span data-stu-id="8d03c-107">Creates a new partitioner instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="8d03c-108">Benutzerdefinierte Partitionierer für PLINQ und TPL</span><span class="sxs-lookup"><span data-stu-id="8d03c-108">Custom Partitioners for PLINQ and TPL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;TSource&gt; GetDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt; GetDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDynamicPartitions () As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ GetDynamicPartitions();" />
      <MemberSignature Language="F#" Value="abstract member GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;&#xA;override this.GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;" Usage="partitioner.GetDynamicPartitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d03c-109">Erstellt ein Objekt, das die zugrunde liegende Auflistung in eine variable Anzahl von Partitionen partitionieren kann.</span><span class="sxs-lookup"><span data-stu-id="8d03c-109">Creates an object that can partition the underlying collection into a variable number of partitions.</span></span></summary>
        <returns><span data-ttu-id="8d03c-110">Ein Objekt, das Partitionen über der zugrunde liegenden Datenquelle erstellen kann.</span><span class="sxs-lookup"><span data-stu-id="8d03c-110">An object that can create partitions over the underlying data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d03c-111">Das zurückgegebene Objekt implementiert <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> die-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="8d03c-111">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="8d03c-112">Durch <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> Aufrufen von für das-Objekt wird eine weitere Partition für die Sequenz erstellt.</span><span class="sxs-lookup"><span data-stu-id="8d03c-112">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="8d03c-113">Die <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A> -Methode wird nur unterstützt <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> , wenn die-Eigenschaft true zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8d03c-113">The <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span> <span data-ttu-id="8d03c-114">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="8d03c-114">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d03c-115">Dynamische Partitionierung wird nicht von der Basisklasse unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8d03c-115">Dynamic partitioning is not supported by the base class.</span></span> <span data-ttu-id="8d03c-116">Sie müssen dies in einer abgeleiteten Klasse implementieren.</span><span class="sxs-lookup"><span data-stu-id="8d03c-116">You must implement it in a derived class.</span></span></exception>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="8d03c-117">Benutzerdefinierte Partitionierer für PLINQ und TPL</span><span class="sxs-lookup"><span data-stu-id="8d03c-117">Custom Partitioners for PLINQ and TPL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPartitions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt; GetPartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt;&gt; GetPartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPartitions (partitionCount As Integer) As IList(Of IEnumerator(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;TSource&gt; ^&gt; ^ GetPartitions(int partitionCount);" />
      <MemberSignature Language="F#" Value="abstract member GetPartitions : int -&gt; System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;'Source&gt;&gt;" Usage="partitioner.GetPartitions partitionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount"><span data-ttu-id="8d03c-118">Die Anzahl der zu erstellenden Partitionen.</span><span class="sxs-lookup"><span data-stu-id="8d03c-118">The number of partitions to create.</span></span></param>
        <summary><span data-ttu-id="8d03c-119">Partitioniert die zugrunde liegende Auflistung in die angegebene Anzahl von Partitionen.</span><span class="sxs-lookup"><span data-stu-id="8d03c-119">Partitions the underlying collection into the given number of partitions.</span></span></summary>
        <returns><span data-ttu-id="8d03c-120">Eine Liste, die <paramref name="partitionCount" />-Enumeratoren enthält.</span><span class="sxs-lookup"><span data-stu-id="8d03c-120">A list containing <paramref name="partitionCount" /> enumerators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d03c-121">Eine Klasse, die diese Methode implementiert, erwartet, dass genau die Anzahl der Partitionen zurückgibt, `partitionCount`die in angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="8d03c-121">A class that implements this method is expected to return exactly the number of partitions that are specified in `partitionCount`.</span></span> <span data-ttu-id="8d03c-122">Wenn eine Partition keine Elemente enthält, geben Sie einen leeren Enumerator anstelle von NULL zurück (Nothing in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8d03c-122">If a partition contains no elements, then return an empty enumerator rather than null (Nothing in Visual Basic).</span></span> <span data-ttu-id="8d03c-123">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="8d03c-123">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="8d03c-124">Benutzerdefinierte Partitionierer für PLINQ und TPL</span><span class="sxs-lookup"><span data-stu-id="8d03c-124">Custom Partitioners for PLINQ and TPL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDynamicPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDynamicPartitions" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDynamicPartitions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDynamicPartitions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDynamicPartitions : bool" Usage="System.Collections.Concurrent.Partitioner&lt;'Source&gt;.SupportsDynamicPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d03c-125">Ruft ab, ob zusätzliche Partitionen dynamisch erstellt werden können.</span><span class="sxs-lookup"><span data-stu-id="8d03c-125">Gets whether additional partitions can be created dynamically.</span></span></summary>
        <value><span data-ttu-id="8d03c-126"><see langword="true" />, wenn <see cref="T:System.Collections.Concurrent.Partitioner`1" /> die Partitionen dynamisch erstellen kann, wenn Sie angefordert werden. , wenn <see cref="T:System.Collections.Concurrent.Partitioner`1" /> der Partitionen nur statisch zuordnen kann. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8d03c-126"><see langword="true" /> if the <see cref="T:System.Collections.Concurrent.Partitioner`1" /> can create partitions dynamically as they are requested; <see langword="false" /> if the <see cref="T:System.Collections.Concurrent.Partitioner`1" /> can only allocate partitions statically.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d03c-127">Wenn eine abgeleitete Klasse nicht außer Kraft setzt <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A>und <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> implementiert, sollte false zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8d03c-127">If a derived class does not override and implement <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A>, <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> should return false.</span></span> <span data-ttu-id="8d03c-128">Der Wert von <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> darf sich nicht über die Lebensdauer dieser Instanz unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="8d03c-128">The value of <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> should not vary over the lifetime of this instance.</span></span> <span data-ttu-id="8d03c-129">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="8d03c-129">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="8d03c-130">Benutzerdefinierte Partitionierer für PLINQ und TPL</span><span class="sxs-lookup"><span data-stu-id="8d03c-130">Custom Partitioners for PLINQ and TPL</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
