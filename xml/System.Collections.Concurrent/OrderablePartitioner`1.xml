<Type Name="OrderablePartitioner&lt;TSource&gt;" FullName="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;">
  <TypeSignature Language="C#" Value="public abstract class OrderablePartitioner&lt;TSource&gt; : System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OrderablePartitioner`1&lt;TSource&gt; extends System.Collections.Concurrent.Partitioner`1&lt;!TSource&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.OrderablePartitioner`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OrderablePartitioner(Of TSource)&#xA;Inherits Partitioner(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class OrderablePartitioner abstract : System::Collections::Concurrent::Partitioner&lt;TSource&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.Concurrent.Partitioner&lt;TSource&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TSource">TSource</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource"><span data-ttu-id="b2ee7-101">Typ der Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-101">Type of the elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="b2ee7-102">Stellt eine bestimmte Methode dar, mit der eine sortierbare Datenquelle in mehrere Partitionen aufgeteilt wird.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-102">Represents a particular manner of splitting an orderable data source into multiple partitions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-103">Die Implementierung der abgeleiteten Klasse ist verantwortlich für die Sortierung der Elemente in Schlüssel-Wert-Paare in Verfolgungsinformationen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-103">The implementation of the derived class is responsible for ordering the elements into key-value pairs in whatever manner is appropriate.</span></span> <span data-ttu-id="b2ee7-104">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-104">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2ee7-105">Das folgende Beispiel zeigt, wie einen Partitionierer implementieren, der jeweils ein Element zurückgibt:</span><span class="sxs-lookup"><span data-stu-id="b2ee7-105">The following example shows how to implement an orderable partitioner that returns one element at a time:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.OrderablePartitioner#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.orderablepartitioner/cs/orderablepartitioner.cs#1)]
 [!code-vb[System.Collections.Concurrent.OrderablePartitioner#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.orderablepartitioner/vb/orderablepartitioner.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b2ee7-106">Alle öffentlichen Member des <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> sind threadsicher und können von mehreren Threads gleichzeitig aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-106">All public members of <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> are thread-safe and may be called from multiple threads concurrently.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OrderablePartitioner (bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (keysOrderedInEachPartition As Boolean, keysOrderedAcrossPartitions As Boolean, keysNormalized As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OrderablePartitioner(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keysOrderedInEachPartition" Type="System.Boolean" />
        <Parameter Name="keysOrderedAcrossPartitions" Type="System.Boolean" />
        <Parameter Name="keysNormalized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keysOrderedInEachPartition"><span data-ttu-id="b2ee7-107">Gibt an, ob die Elemente in jeder Partition in der Reihenfolge zunehmender Schlüssel zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-107">Indicates whether the elements in each partition are yielded in the order of increasing keys.</span></span></param>
        <param name="keysOrderedAcrossPartitions"><span data-ttu-id="b2ee7-108">Gibt an, ob Elemente in einer früheren Partition immer vor Elementen in einer späteren Partition vorkommen.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-108">Indicates whether elements in an earlier partition always come before elements in a later partition.</span></span> <span data-ttu-id="b2ee7-109">Wenn true, verfügt jedes Element in Partition 0 über einen kleineren Sortierschlüssel als ein Element in Partition 1, jedes Element in Partition 1 verfügt über einen kleineren Sortierschlüssel als ein Element in Partition 2 usw.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-109">If true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</span></span></param>
        <param name="keysNormalized"><span data-ttu-id="b2ee7-110">Gibt an, ob Schlüssel normalisiert sind.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-110">Indicates whether keys are normalized.</span></span> <span data-ttu-id="b2ee7-111">Wenn TRUE, sind alle Sortierschlüssel eindeutige ganze Zahlen im Bereich</span><span class="sxs-lookup"><span data-stu-id="b2ee7-111">If true, all order keys are distinct integers in the range [0 ..</span></span> <span data-ttu-id="b2ee7-112">[0..numberOfElements-1].</span><span class="sxs-lookup"><span data-stu-id="b2ee7-112">numberOfElements-1].</span></span> <span data-ttu-id="b2ee7-113">Wenn false, müssen Sortierschlüssel immer noch eindeutig sein, allerdings wird nur ihre relative Reihenfolge betrachtet, nicht ihre absoluten Werte.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-113">If false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</span></span></param>
        <summary><span data-ttu-id="b2ee7-114">Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />-Klasse mit den angegebenen Einschränkungen für die Indexschlüssel zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-114">Called from constructors in derived classes to initialize the <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> class with the specified constraints on the index keys.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-115">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-115">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicPartitions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;TSource&gt; GetDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt; GetDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDynamicPartitions () As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ GetDynamicPartitions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2ee7-116">Erstellt ein Objekt, das die zugrunde liegende Auflistung in eine variable Anzahl von Partitionen partitionieren kann.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-116">Creates an object that can partition the underlying collection into a variable number of partitions.</span></span></summary>
        <returns><span data-ttu-id="b2ee7-117">Ein Objekt, das Partitionen über der zugrunde liegenden Datenquelle erstellen kann.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-117">An object that can create partitions over the underlying data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-118">Das zurückgegebene Objekt implementiert die <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-118">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="b2ee7-119">Aufrufen von <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> für das Objekt eine andere Partition über die Sequenz erstellt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-119">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="b2ee7-120">Die standardmäßige Implementierung bietet das gleiche Verhalten wie <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> mit dem Unterschied, dass der zurückgegebene Satz von Partitionen nicht die Schlüssel für die Elemente bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-120">The default implementation provides the same behavior as <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> except that the returned set of partitions does not provide the keys for the elements.</span></span>  
  
 <span data-ttu-id="b2ee7-121">Die <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A> Methode wird nur unterstützt, wenn die <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> Eigenschaft gibt "true" zurück.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-121">The <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span>  
  
 <span data-ttu-id="b2ee7-122">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-122">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b2ee7-123">Dynamische Partitionierung wird nicht von der Basisklasse unterstützt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-123">Dynamic partitioning is not supported by the base class.</span></span> <span data-ttu-id="b2ee7-124">Sie muss in abgeleiteten Klassen implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-124">It must be implemented in derived classes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrderableDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;long,TSource&gt;&gt; GetOrderableDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int64, !TSource&gt;&gt; GetOrderableDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrderableDynamicPartitions () As IEnumerable(Of KeyValuePair(Of Long, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;long, TSource&gt;&gt; ^ GetOrderableDynamicPartitions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Int64,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2ee7-125">Erstellt ein Objekt, das die zugrunde liegende Auflistung in eine variable Anzahl von Partitionen partitionieren kann.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-125">Creates an object that can partition the underlying collection into a variable number of partitions.</span></span></summary>
        <returns><span data-ttu-id="b2ee7-126">Ein Objekt, das Partitionen über der zugrunde liegenden Datenquelle erstellen kann.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-126">An object that can create partitions over the underlying data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-127">Das zurückgegebene Objekt implementiert die <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-127">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="b2ee7-128">Aufrufen von <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> für das Objekt eine andere Partition über die Sequenz erstellt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-128">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="b2ee7-129">Jede Partition wird als Enumerator über Schlüssel-Wert-Paare dargestellt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-129">Each partition is represented as an enumerator over key-value pairs.</span></span> <span data-ttu-id="b2ee7-130">Der Wert im Paar ist das Element selbst, und der Schlüssel ist eine ganze Zahl, die die relative Reihenfolge dieses Elements gegenüber anderen Elementen bestimmt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-130">The value in the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements.</span></span>  
  
 <span data-ttu-id="b2ee7-131">Die <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> Methode wird nur unterstützt, wenn die <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> Eigenschaft gibt "true" zurück.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-131">The <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span>  
  
 <span data-ttu-id="b2ee7-132">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-132">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b2ee7-133">Dynamische Partitionierung wird nicht von diesem Partitionierer unterstützt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-133">Dynamic partitioning is not supported by this partitioner.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrderablePartitions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;long,TSource&gt;&gt;&gt; GetOrderablePartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int64, !TSource&gt;&gt;&gt; GetOrderablePartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOrderablePartitions (partitionCount As Integer) As IList(Of IEnumerator(Of KeyValuePair(Of Long, TSource)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;long, TSource&gt;&gt; ^&gt; ^ GetOrderablePartitions(int partitionCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Int64,TSource&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount"><span data-ttu-id="b2ee7-134">Die Anzahl der zu erstellenden Partitionen.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-134">The number of partitions to create.</span></span></param>
        <summary><span data-ttu-id="b2ee7-135">Partitioniert die zugrunde liegende Auflistung in die angegebene Anzahl sortierbarer Partitionen.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-135">Partitions the underlying collection into the specified number of orderable partitions.</span></span></summary>
        <returns><span data-ttu-id="b2ee7-136">Eine Liste, die <paramref name="partitionCount" />-Enumeratoren enthält.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-136">A list containing <paramref name="partitionCount" /> enumerators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-137">Jede Partition wird als Enumerator über Schlüssel-Wert-Paare dargestellt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-137">Each partition is represented as an enumerator over key-value pairs.</span></span>  
  
 <span data-ttu-id="b2ee7-138">Der Wert des Paars ist das Element selbst, und der Schlüssel ist eine ganze Zahl, die die relative Reihenfolge dieses Elements gegenüber anderen Elementen in der Datenquelle bestimmt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-138">The value of the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements in the data source.</span></span>  
  
 <span data-ttu-id="b2ee7-139">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-139">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt; GetPartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt;&gt; GetPartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPartitions (partitionCount As Integer) As IList(Of IEnumerator(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;TSource&gt; ^&gt; ^ GetPartitions(int partitionCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount"><span data-ttu-id="b2ee7-140">Die Anzahl der zu erstellenden Partitionen.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-140">The number of partitions to create.</span></span></param>
        <summary><span data-ttu-id="b2ee7-141">Partitioniert die zugrunde liegende Auflistung in die angegebene Anzahl geordneter Partitionen.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-141">Partitions the underlying collection into the given number of ordered partitions.</span></span></summary>
        <returns><span data-ttu-id="b2ee7-142">Eine Liste, die <paramref name="partitionCount" />-Enumeratoren enthält.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-142">A list containing <paramref name="partitionCount" /> enumerators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-143">Die standardmäßige Implementierung bietet das gleiche Verhalten wie <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A> mit dem Unterschied, dass der zurückgegebene Satz von Partitionen nicht die Schlüssel für die Elemente bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-143">The default implementation provides the same behavior as <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A> except that the returned set of partitions does not provide the keys for the elements.</span></span>  
  
 <span data-ttu-id="b2ee7-144">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-144">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysNormalized">
      <MemberSignature Language="C#" Value="public bool KeysNormalized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysNormalized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysNormalized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysNormalized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2ee7-145">Ruft ab, ob Sortierschlüssel normalisiert sind.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-145">Gets whether order keys are normalized.</span></span></summary>
        <value><span data-ttu-id="b2ee7-146">True, wenn die Schlüssel normalisiert sind, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-146">true if the keys are normalized; otherwise false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-147">Wenn <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A> gibt "true", alle Sortierschlüssel sind eindeutige ganze Zahlen im Bereich [0..</span><span class="sxs-lookup"><span data-stu-id="b2ee7-147">If <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A> returns true, all order keys are distinct integers in the range [0 ..</span></span> <span data-ttu-id="b2ee7-148">[0..numberOfElements-1].</span><span class="sxs-lookup"><span data-stu-id="b2ee7-148">numberOfElements-1].</span></span> <span data-ttu-id="b2ee7-149">Wenn die Eigenschaft "false" müssen Sortierschlüssel immer noch werden unterschiedliche zurückgibt, aber nur deren relative Reihenfolge betrachtet wird, nicht deren absoluten Werten.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-149">If the property returns false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</span></span>  
  
 <span data-ttu-id="b2ee7-150">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-150">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysOrderedAcrossPartitions">
      <MemberSignature Language="C#" Value="public bool KeysOrderedAcrossPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysOrderedAcrossPartitions" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysOrderedAcrossPartitions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysOrderedAcrossPartitions { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2ee7-151">Ruft ab, ob Elemente in einer früheren Partition immer vor Elementen in einer späteren Partition vorkommen.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-151">Gets whether elements in an earlier partition always come before elements in a later partition.</span></span></summary>
        <value><span data-ttu-id="b2ee7-152">True, wenn die Elemente in einer früheren Partition immer vor Elementen in einer späteren Partition vorkommen, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-152">true if the elements in an earlier partition always come before elements in a later partition; otherwise false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-153">Wenn <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A> gibt "true", jedes Element in der Partition 0 hat einen kleineren Sortierschlüssel als ein Element in Partition 1, jedes Element in Partition 1 mit einen kleineren Sortierschlüssel als ein Element in Partition 2 usw. hat.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-153">If <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A> returns true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</span></span>  
  
 <span data-ttu-id="b2ee7-154">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-154">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysOrderedInEachPartition">
      <MemberSignature Language="C#" Value="public bool KeysOrderedInEachPartition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysOrderedInEachPartition" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysOrderedInEachPartition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysOrderedInEachPartition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2ee7-155">Ruft ab, ob Elemente in jeder Partition in der Reihenfolge zunehmender Schlüssel zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-155">Gets whether elements in each partition are yielded in the order of increasing keys.</span></span></summary>
        <value><span data-ttu-id="b2ee7-156">True, wenn die Elemente in jeder Partition in der Reihenfolge zunehmender Schlüssel zurückgegeben werden, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b2ee7-156">true if the elements in each partition are yielded in the order of increasing keys; otherwise false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ee7-157">Weitere Informationen finden Sie unter [Custom Partitioners for PLINQ and TPL (Benutzerdefinierte Partitionierer für PLINQ und TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="b2ee7-157">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>