<Type Name="IProducerConsumerCollection&lt;T&gt;" FullName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72bb6d0aa4460406ef657e83a9823990d1a4f829" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78719672" /></Metadata><TypeSignature Language="C#" Value="public interface IProducerConsumerCollection&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProducerConsumerCollection`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProducerConsumerCollection(Of T)&#xA;Implements ICollection, IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IProducerConsumerCollection : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IProducerConsumerCollection&lt;'T&gt; = interface&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type IProducerConsumerCollection&lt;'T&gt; = interface&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Collections.Concurrent" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="cf0f4-101">Gibt den Typ der Elemente in der Auflistung an.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-101">Specifies the type of elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="cf0f4-102">Definiert Methoden zum Ändern threadsicherer Auflistungen für die Verwendung durch Erzeuger/Verbraucher.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-102">Defines methods to manipulate thread-safe collections intended for producer/consumer usage.</span></span> <span data-ttu-id="cf0f4-103">Diese Schnittstelle stellt eine einheitliche Darstellung von Producer/Consumer-Auflistungen bereit, damit Abstraktionen auf höherer Ebene, z. B. <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />, die Auflistung als zugrunde liegenden Speichermechanismus verwenden können.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-103">This interface provides a unified representation for producer/consumer collections so that higher level abstractions such as <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> can use the collection as the underlying storage mechanism.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf0f4-104">Weitere Informationen finden Sie unter Übersicht über [Thread sichere](~/docs/standard/collections/thread-safe/index.md) Auflistungen und [BlockingCollection](~/docs/standard/collections/thread-safe/blockingcollection-overview.md).</span><span class="sxs-lookup"><span data-stu-id="cf0f4-104">For more information, see [Thread-Safe Collections](~/docs/standard/collections/thread-safe/index.md) and [BlockingCollection Overview](~/docs/standard/collections/thread-safe/blockingcollection-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf0f4-105">Das folgende Beispiel zeigt eine Stapel Datenstruktur, die <xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=nameWithType>implementiert.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-105">The following example shows a stack data structure that implements <xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.IProducerConsumerCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.iproducerconsumercollection/cs/iprodcon.cs#1)]
 [!code-vb[System.Collections.Concurrent.IProducerConsumerCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.iproducerconsumercollection/vb/iprodcon.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="cf0f4-106">Alle-Implementierungen dieser Schnittstelle müssen ermöglichen, dass alle Member dieser Schnittstelle gleichzeitig von mehreren Threads verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-106">All implementations of this interface must enable all members of this interface to be used concurrently from multiple threads.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-bounding-and-blocking.md"><span data-ttu-id="cf0f4-107">Gewusst wie: Hinzufügen von Begrenzungs-und Blockierungs Funktionen zu einer Auflistungs Klasse</span><span class="sxs-lookup"><span data-stu-id="cf0f4-107">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit" Usage="iProducerConsumerCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cf0f4-108">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-108">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span>  
  
<span data-ttu-id="cf0f4-109">Das Array muss über eine nullbasierte Indizierung verfügen.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-109">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="cf0f4-110">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-110">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="cf0f4-111">Kopiert die Elemente aus der <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> in ein <see cref="T:System.Array" />, beginnend bei einem angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-111">Copies the elements of the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to an <see cref="T:System.Array" />, starting at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf0f4-112">Die-Methode stellt eine Momentaufnahme der zugrunde liegenden-Auflistung bereit.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-112">The method provides a snapshot of the underlying collection.</span></span> <span data-ttu-id="cf0f4-113">Es ist möglich, dass andere Threads Elemente direkt nach dem Kopieren hinzufügen oder entfernen.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-113">It is possible for other threads to add or remove items immediately after the copy is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf0f4-114"><paramref name="array" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span><span class="sxs-lookup"><span data-stu-id="cf0f4-114"><paramref name="array" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf0f4-115"><paramref name="index" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="cf0f4-115"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf0f4-116"><paramref name="index" /> ist gleich oder größer als die Länge des <paramref name="array" /> -oder- die Anzahl der Elemente in der Auflistung ist größer als der verfügbare Platz von <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-116"><paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the collection is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="cf0f4-117">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="cf0f4-117">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/blockingcollection-overview.md"><span data-ttu-id="cf0f4-118">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="cf0f4-118">BlockingCollection Overview</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-bounding-and-blocking.md"><span data-ttu-id="cf0f4-119">Gewusst wie: Hinzufügen von Begrenzungs-und Blockierungs Funktionen zu einer Auflistungs Klasse</span><span class="sxs-lookup"><span data-stu-id="cf0f4-119">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; 'T[]" Usage="iProducerConsumerCollection.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf0f4-120">Kopiert die in der <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> enthaltenen Elemente in ein neues Array.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-120">Copies the elements contained in the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="cf0f4-121">Ein neues Array, das die aus der <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> kopierten Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-121">A new array containing the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf0f4-122">Die-Methode stellt eine Momentaufnahme der zugrunde liegenden-Auflistung bereit.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-122">The method provides a snapshot of the underlying collection.</span></span> <span data-ttu-id="cf0f4-123">Es ist möglich, dass andere Threads Elemente direkt nach dem Array hinzufügen oder entfernen.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-123">It is possible for other threads to add or remove items immediately after the array is made.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="cf0f4-124">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="cf0f4-124">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/blockingcollection-overview.md"><span data-ttu-id="cf0f4-125">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="cf0f4-125">BlockingCollection Overview</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-bounding-and-blocking.md"><span data-ttu-id="cf0f4-126">Gewusst wie: Hinzufügen von Begrenzungs-und Blockierungs Funktionen zu einer Auflistungs Klasse</span><span class="sxs-lookup"><span data-stu-id="cf0f4-126">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item);" />
      <MemberSignature Language="F#" Value="abstract member TryAdd : 'T -&gt; bool" Usage="iProducerConsumerCollection.TryAdd item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cf0f4-127">Das Objekt, das <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-127">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="cf0f4-128">Versucht, der <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> ein Objekt hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-128">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="cf0f4-129"><see langword="true" />, wenn das Objekt erfolgreich hinzugefügt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-129"><see langword="true" /> if the object was added successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf0f4-130">Das <paramref name="item" /> war für diese Auflistung ungültig.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-130">The <paramref name="item" /> was invalid for this collection.</span></span></exception>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="cf0f4-131">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="cf0f4-131">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/blockingcollection-overview.md"><span data-ttu-id="cf0f4-132">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="cf0f4-132">BlockingCollection Overview</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-bounding-and-blocking.md"><span data-ttu-id="cf0f4-133">Gewusst wie: Hinzufügen von Begrenzungs-und Blockierungs Funktionen zu einer Auflistungs Klasse</span><span class="sxs-lookup"><span data-stu-id="cf0f4-133">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="abstract member TryTake : 'T -&gt; bool" Usage="iProducerConsumerCollection.TryTake item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="cf0f4-134">Wenn diese Methode beendet wird und das Objekt erfolgreich entfernt und zurückgegeben wurde, enthält <paramref name="item" /> das entfernte Objekt.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-134">When this method returns, if the object was removed and returned successfully, <paramref name="item" /> contains the removed object.</span></span> <span data-ttu-id="cf0f4-135">Wenn kein Objekt zum Entfernen verfügbar war, ist der Wert nicht angegeben.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-135">If no object was available to be removed, the value is unspecified.</span></span></param>
        <summary><span data-ttu-id="cf0f4-136">Versucht, ein Objekt aus der <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> zu entfernen und zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-136">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="cf0f4-137"><see langword="true" />, wenn ein Objekt erfolgreich entfernt und zurückgegeben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf0f4-137"><see langword="true" /> if an object was removed and returned successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/collections/thread-safe/index.md"><span data-ttu-id="cf0f4-138">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="cf0f4-138">Thread-Safe Collections</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/blockingcollection-overview.md"><span data-ttu-id="cf0f4-139">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="cf0f4-139">BlockingCollection Overview</span></span></related>
        <related type="Article" href="~/docs/standard/collections/thread-safe/how-to-add-bounding-and-blocking.md"><span data-ttu-id="cf0f4-140">Gewusst wie: Hinzufügen von Begrenzungs-und Blockierungs Funktionen zu einer Auflistungs Klasse</span><span class="sxs-lookup"><span data-stu-id="cf0f4-140">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
