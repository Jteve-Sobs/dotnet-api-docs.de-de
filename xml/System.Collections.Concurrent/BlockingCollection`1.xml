<Type Name="BlockingCollection&lt;T&gt;" FullName="System.Collections.Concurrent.BlockingCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dfa002396aa70ffd9520103c90c616c66e1a6f98" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86780501" /></Metadata><TypeSignature Language="C#" Value="public class BlockingCollection&lt;T&gt; : IDisposable, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockingCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.BlockingCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class BlockingCollection(Of T)&#xA;Implements ICollection, IDisposable, IEnumerable(Of T), IReadOnlyCollection(Of T)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BlockingCollection : IDisposable, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type BlockingCollection&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IDisposable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class BlockingCollection&lt;T&gt; : IDisposable, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.ICollection" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockingCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public Class BlockingCollection(Of T)&#xA;Implements ICollection, IDisposable, IEnumerable(Of T)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BlockingCollection : IDisposable, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::ICollection" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type BlockingCollection&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type BlockingCollection&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IDisposable&#xA;    interface IReadOnlyCollection&lt;'T&gt;" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type BlockingCollection&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IDisposable&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Collections.Concurrent" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections.Concurrent" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("Count = {Count}, Type = {m_collection}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("Count = {Count}, Type = {m_collection}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemThreadingCollections_BlockingCollectionDebugView`1))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemThreadingCollections_BlockingCollectionDebugView`1))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="57501-101">Der Typ der Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="57501-101">The type of elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="57501-102">Stellt Sperr- und Begrenzungsfunktionen für threadsichere Auflistungen bereit, die <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> implementieren.</span><span class="sxs-lookup"><span data-stu-id="57501-102">Provides blocking and bounding capabilities for thread-safe collections that implement <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-103"><xref:System.Collections.Concurrent.BlockingCollection%601> ist eine Thread sichere Auflistungs Klasse, die Folgendes bereitstellt:</span><span class="sxs-lookup"><span data-stu-id="57501-103"><xref:System.Collections.Concurrent.BlockingCollection%601> is a thread-safe collection class that provides the following:</span></span>  
  
-   <span data-ttu-id="57501-104">Eine Implementierung des Producer/Consumer-Musters. <xref:System.Collections.Concurrent.BlockingCollection%601> ist ein Wrapper für die- <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="57501-104">An implementation of the producer/consumer pattern; <xref:System.Collections.Concurrent.BlockingCollection%601> is a wrapper for the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span>  
  
-   <span data-ttu-id="57501-105">Gleichzeitiges hinzufügen und Entfernen von Elementen aus mehreren Threads mit den <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A>  <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> Methoden und.</span><span class="sxs-lookup"><span data-stu-id="57501-105">Concurrent addition and removal of items from multiple threads with the <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and  <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> methods.</span></span>  
  
-   <span data-ttu-id="57501-106">Eine gebundene Auflistung, die <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> -und-Vorgänge blockiert, <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> Wenn die Auflistung voll oder leer ist.</span><span class="sxs-lookup"><span data-stu-id="57501-106">A bounded collection that blocks <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations when the collection is full or empty.</span></span>  
  
-   <span data-ttu-id="57501-107">Abbruch von- <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> oder- <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> Vorgängen mithilfe eines- <xref:System.Threading.CancellationToken> Objekts in der-  <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> oder- <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="57501-107">Cancellation of <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations by using a <xref:System.Threading.CancellationToken> object in the  <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="57501-108">Dieser Typ implementiert die <xref:System.IDisposable>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="57501-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="57501-109">Nach Abschluss der Verwendung sollten Sie den Typ entweder direkt oder indirekt löschen.</span><span class="sxs-lookup"><span data-stu-id="57501-109">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="57501-110">Zum direkten Löschen des Typs rufen Sie seine <xref:System.IDisposable.Dispose%2A>-Methode in einem `try`/`catch`-Block auf.</span><span class="sxs-lookup"><span data-stu-id="57501-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="57501-111">Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="57501-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="57501-112">Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.</span><span class="sxs-lookup"><span data-stu-id="57501-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span> <span data-ttu-id="57501-113">Beachten Sie außerdem, dass die- <xref:System.Collections.Concurrent.BlockingCollection%601.Dispose> Methode nicht Thread sicher ist.</span><span class="sxs-lookup"><span data-stu-id="57501-113">Also, note that the <xref:System.Collections.Concurrent.BlockingCollection%601.Dispose> method is not thread-safe.</span></span> <span data-ttu-id="57501-114">Alle anderen öffentlichen und geschützten Member von <xref:System.Collections.Concurrent.BlockingCollection%601> sind Thread sicher und können gleichzeitig von mehreren Threads verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="57501-114">All other public and protected members of <xref:System.Collections.Concurrent.BlockingCollection%601> are thread-safe and may be used concurrently from multiple threads.</span></span>  
  
 <span data-ttu-id="57501-115"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> stellt eine Auflistung dar, die das Thread sichere hinzufügen und Entfernen von Daten ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="57501-115"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> represents a collection that allows for thread-safe adding and removal of data.</span></span> <span data-ttu-id="57501-116"><xref:System.Collections.Concurrent.BlockingCollection%601> wird als Wrapper für eine <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> -Instanz verwendet und ermöglicht Entfernungs Versuche aus der-Auflistung, um zu blockieren, bis die Daten verfügbar sind, die entfernt werden können.</span><span class="sxs-lookup"><span data-stu-id="57501-116"><xref:System.Collections.Concurrent.BlockingCollection%601> is used as a wrapper for an <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> instance, and allows removal attempts from the collection to block until data is available to be removed.</span></span> <span data-ttu-id="57501-117">Entsprechend können Sie ein- <xref:System.Collections.Concurrent.BlockingCollection%601> Element erstellen, um eine obere Grenze für die Anzahl der Datenelemente zu erzwingen, die in zulässig <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> sind. zusätzliche Versuche der Auflistung können dann blockieren, bis Speicherplatz zum Speichern der hinzugefügten Elemente verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-117">Similarly, you can create a <xref:System.Collections.Concurrent.BlockingCollection%601> to enforce an upper bound on the number of data elements allowed in the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>; addition attempts to the collection may then block until space is available to store the added items.</span></span> <span data-ttu-id="57501-118">Auf diese Weise <xref:System.Collections.Concurrent.BlockingCollection%601> ähnelt einer herkömmlichen blockierenden Warteschlangen-Datenstruktur, mit der Ausnahme, dass der zugrunde liegende Datenspeichermechanismus als abstrahiert wird <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="57501-118">In this manner, <xref:System.Collections.Concurrent.BlockingCollection%601> is similar to a traditional blocking queue data structure, except that the underlying data storage mechanism is abstracted away as an <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>.</span></span>  
  
 <span data-ttu-id="57501-119"><xref:System.Collections.Concurrent.BlockingCollection%601> unterstützt das Begrenzen und Blockieren.</span><span class="sxs-lookup"><span data-stu-id="57501-119"><xref:System.Collections.Concurrent.BlockingCollection%601> supports bounding and blocking.</span></span> <span data-ttu-id="57501-120">Begrenzungs Mittel bedeutet, dass Sie die maximale Kapazität der Auflistung festlegen können.</span><span class="sxs-lookup"><span data-stu-id="57501-120">Bounding means that you can set the maximum capacity of the collection.</span></span> <span data-ttu-id="57501-121">Das umschließende ist in bestimmten Szenarien wichtig, da es Ihnen ermöglicht, die maximale Größe der Auflistung im Arbeitsspeicher zu steuern, und verhindert, dass die Erstellungs Threads zu weit vor den Verb raubenden Threads verschoben werden. Mehrere Threads oder Tasks können der Auflistung gleichzeitig Elemente hinzufügen, und wenn die Auflistung die angegebene maximale Kapazität erreicht, werden die Erstellungs Threads blockiert, bis ein Element entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="57501-121">Bounding is important in certain scenarios because it enables you to control the maximum size of the collection in memory, and it prevents the producing threads from moving too far ahead of the consuming threads.Multiple threads or tasks can add items to the collection concurrently, and if the collection reaches its specified maximum capacity, the producing threads will block until an item is removed.</span></span> <span data-ttu-id="57501-122">Mehrere Consumer können gleichzeitig Elemente entfernen, und wenn die Sammlung leer ist, werden die verbrauchenden Threads blockiert, bis ein Producer ein Element hinzufügt.</span><span class="sxs-lookup"><span data-stu-id="57501-122">Multiple consumers can remove items concurrently, and if the collection becomes empty, the consuming threads will block until a producer adds an item.</span></span> <span data-ttu-id="57501-123">Ein produzierenden Thread kann die-Methode aufzurufen <xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A> , um anzugeben, dass keine weiteren Elemente hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="57501-123">A producing thread can call the <xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A> method to indicate that no more items will be added.</span></span> <span data-ttu-id="57501-124">Consumer überwachen die <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A>-Eigenschaft, um zu erkennen, wann die Sammlung leer ist und keine Elemente mehr hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="57501-124">Consumers monitor the <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> property to know when the collection is empty and no more items will be added.</span></span>  
  
 <span data-ttu-id="57501-125"><xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> -und- <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> Vorgänge werden in der Regel in einer-Schleife ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="57501-125"><xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations are typically performed in a loop.</span></span> <span data-ttu-id="57501-126">Sie können eine Schleife abbrechen, indem Sie ein <xref:System.Threading.CancellationToken> -Objekt an <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> die <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> -Methode oder die-Methode übergeben und dann <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> bei jeder Iterationen den Wert der-Eigenschaft des Tokens überprüfen.</span><span class="sxs-lookup"><span data-stu-id="57501-126">You can cancel a loop by passing in a <xref:System.Threading.CancellationToken> object to the <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method, and then checking the value of the token's <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property on each iteration.</span></span> <span data-ttu-id="57501-127">Wenn der Wert ist `true` , müssen Sie auf die Abbruch Anforderung reagieren, indem Sie sämtliche Ressourcen bereinigen und die Schleife beenden.</span><span class="sxs-lookup"><span data-stu-id="57501-127">If the value is `true`, it is up to you to respond the cancellation request by cleaning up any resources and exiting the loop.</span></span>  
  
 <span data-ttu-id="57501-128">Wenn Sie ein- <xref:System.Collections.Concurrent.BlockingCollection%601> Objekt erstellen, können Sie nicht nur die begrenzte Kapazität, sondern auch den Typ der zu verwendenden Sammlung angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-128">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify not only the bounded capacity but also the type of collection to use.</span></span> <span data-ttu-id="57501-129">Beispielsweise können Sie ein- <xref:System.Collections.Concurrent.ConcurrentQueue%601> Objekt für das First in, First Out (FIFO)-Verhalten oder ein- <xref:System.Collections.Concurrent.ConcurrentStack%601> Objekt für das Last in, First Out-Verhalten (LIFO) angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-129">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="57501-130">Sie können jede Sammlungsklasse verwenden, die die <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="57501-130">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="57501-131">Der standardmäßige Sammlungstyp für <xref:System.Collections.Concurrent.BlockingCollection%601> ist <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="57501-131">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 <span data-ttu-id="57501-132">Ändern Sie die zugrunde liegende Auflistung nicht direkt.</span><span class="sxs-lookup"><span data-stu-id="57501-132">Do not modify the underlying collection directly.</span></span> <span data-ttu-id="57501-133">Verwenden <xref:System.Collections.Concurrent.BlockingCollection%601> Sie Methoden, um Elemente hinzuzufügen oder zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-133">Use <xref:System.Collections.Concurrent.BlockingCollection%601> methods to add or remove elements.</span></span> <span data-ttu-id="57501-134">Das <xref:System.Collections.Concurrent.BlockingCollection%601> Objekt kann beschädigt werden, wenn Sie die zugrunde liegende Auflistung direkt ändern.</span><span class="sxs-lookup"><span data-stu-id="57501-134">The <xref:System.Collections.Concurrent.BlockingCollection%601> object can become corrupted if you change the underlying collection directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57501-135">Im folgenden Beispiel wird gezeigt, wie Elemente gleichzeitig aus einer blockierenden Auflistung hinzugefügt und daraus entfernt werden:</span><span class="sxs-lookup"><span data-stu-id="57501-135">The following example shows how to add and take items concurrently from a blocking collection:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#1)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="57501-136">Die verwerfen-Methode ist nicht Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="57501-136">The Dispose method is not thread-safe.</span></span> <span data-ttu-id="57501-137">Alle anderen öffentlichen und geschützten Member von <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> sind Thread sicher und können gleichzeitig von mehreren Threads verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="57501-137">All other public and protected members of <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
    <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-138">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-138">Thread-Safe Collections</span></span></related>
    <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-139">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-139">BlockingCollection Overview</span></span></related>
    <related type="Article" href="/dotnet/standard/collections/thread-safe/how-to-add-bounding-and-blocking"><span data-ttu-id="57501-140">Gewusst wie: Hinzufügen von Begrenzungs-und Blockierungs Funktionen zu einer Auflistungs Klasse</span><span class="sxs-lookup"><span data-stu-id="57501-140">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-141">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Klasse ohne obere Grenze.</span><span class="sxs-lookup"><span data-stu-id="57501-141">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57501-142">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Klasse ohne obere Grenze.</span><span class="sxs-lookup"><span data-stu-id="57501-142">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-143">Die standardmäßige zugrunde liegende Auflistung ist ein- <xref:System.Collections.Concurrent.ConcurrentQueue%601> Objekt, das das First in, First Out (FIFO)-Verhalten bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-143">The default underlying collection is a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object, which provides first in, first out (FIFO) behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-144">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-144">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-145">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-145">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IProducerConsumerCollection(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;'T&gt; -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="57501-146">Die Auflistung, die als zugrunde liegender Datenspeicher verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-146">The collection to use as the underlying data store.</span></span></param>
        <summary><span data-ttu-id="57501-147">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Klasse ohne obere Grenze und unter Verwendung der angegebenen <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> als zugrunde liegenden Datenspeicher.</span><span class="sxs-lookup"><span data-stu-id="57501-147">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound and using the provided <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> as its underlying data store.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-148">Das <paramref name="collection" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-148">The <paramref name="collection" /> argument is null.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-149">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-149">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-150">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-150">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (int boundedCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 boundedCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (boundedCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(int boundedCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : int -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; boundedCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="boundedCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="boundedCapacity"><span data-ttu-id="57501-151">Die begrenzte Größe der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="57501-151">The bounded size of the collection.</span></span></param>
        <summary><span data-ttu-id="57501-152">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Klasse mit der angegebenen oberen Grenze.</span><span class="sxs-lookup"><span data-stu-id="57501-152">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class with the specified upper-bound.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-153">Die standardmäßige zugrunde liegende Auflistung ist ein-Wert <xref:System.Collections.Concurrent.ConcurrentQueue%601> .</span><span class="sxs-lookup"><span data-stu-id="57501-153">The default underlying collection is a <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-154">Der <paramref name="boundedCapacity" /> ist kein positiver Wert.</span><span class="sxs-lookup"><span data-stu-id="57501-154">The <paramref name="boundedCapacity" /> is not a positive value.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-155">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-155">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-156">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-156">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt; collection, int boundedCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt; collection, int32 boundedCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IProducerConsumerCollection(Of T), boundedCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt; ^ collection, int boundedCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;'T&gt; * int -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; (collection, boundedCapacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;" />
        <Parameter Name="boundedCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="57501-157">Die Auflistung, die als zugrunde liegender Datenspeicher verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-157">The collection to use as the underlying data store.</span></span></param>
        <param name="boundedCapacity"><span data-ttu-id="57501-158">Die begrenzte Größe der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="57501-158">The bounded size of the collection.</span></span></param>
        <summary><span data-ttu-id="57501-159">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Klasse mit der angegebenen oberen Grenze und unter Verwendung der angegebenen <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> als zugrunde liegenden Datenspeicher.</span><span class="sxs-lookup"><span data-stu-id="57501-159">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class with the specified upper-bound and using the provided <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> as its underlying data store.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-160">Das <paramref name="collection" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-160">The <paramref name="collection" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-161">Der <paramref name="boundedCapacity" /> ist kein positiver Wert.</span><span class="sxs-lookup"><span data-stu-id="57501-161">The <paramref name="boundedCapacity" /> is not a positive value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-162">Der angegebene <paramref name="collection" /> enthält mehr Werte als von <paramref name="boundedCapacity" /> erlaubt.</span><span class="sxs-lookup"><span data-stu-id="57501-162">The supplied <paramref name="collection" /> contains more values than is permitted by <paramref name="boundedCapacity" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-163">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-163">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-164">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-164">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-165">Fügt das Element der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="57501-165">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-166">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-166">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-167">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-167">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="blockingCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-168">Das Element, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-168">The item to be added to the collection.</span></span> <span data-ttu-id="57501-169">Der Wert kann ein NULL-Verweis sein.</span><span class="sxs-lookup"><span data-stu-id="57501-169">The value can be a null reference.</span></span></param>
        <summary><span data-ttu-id="57501-170">Fügt das Element der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="57501-170">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-171">Wenn eine begrenzte Kapazität beim Initialisieren dieser Instanz von angegeben wurde <xref:System.Collections.Concurrent.BlockingCollection%601> , kann ein Add-in-Add-Vorgang blockiert werden, bis Speicherplatz zum Speichern des bereitgestellten Elements verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-171">If a bounded capacity was specified when this instance of <xref:System.Collections.Concurrent.BlockingCollection%601> was initialized, a call to Add may block until space is available to store the provided item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-172"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-172">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-173">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde hinsichtlich Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-173">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="57501-174">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-174">-or-</span></span> 
<span data-ttu-id="57501-175">Das Element wurde von der zugrunde liegenden Auflistung nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-175">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-176">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-176">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-177">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-177">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!T item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T, cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T * System.Threading.CancellationToken -&gt; unit" Usage="blockingCollection.Add (item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-178">Das Element, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-178">The item to be added to the collection.</span></span> <span data-ttu-id="57501-179">Der Wert kann ein NULL-Verweis sein.</span><span class="sxs-lookup"><span data-stu-id="57501-179">The value can be a null reference.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="57501-180">Ein Abbruchtoken, das überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-180">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="57501-181">Fügt das Element der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="57501-181">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-182">Wenn eine begrenzte Kapazität angegeben wurde, als diese Instanz von <xref:System.Collections.Concurrent.BlockingCollection%601> initialisiert wurde, kann ein-Aufrufvorgang blockiert werden, <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> bis Speicherplatz zum Speichern des bereitgestellten Elements verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-182">If a bounded capacity was specified when this instance of <xref:System.Collections.Concurrent.BlockingCollection%601> was initialized, a call to <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> may block until space is available to store the provided item.</span></span>  
  
 <span data-ttu-id="57501-183">Diese Methode kann frühzeitig mit einem zurückgeben, <xref:System.OperationCanceledException> Wenn `cancellationToken` abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="57501-183">This method can return early with an <xref:System.OperationCanceledException> if the `cancellationToken` is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-184">Wenn <see cref="T:System.Threading.CancellationToken" /> abgebrochen ist.</span><span class="sxs-lookup"><span data-stu-id="57501-184">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-185">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde freigegeben, oder die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> besitzt, wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-185">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that owns <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-186">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde hinsichtlich Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-186">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="57501-187">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-187">-or-</span></span> 
<span data-ttu-id="57501-188">Das Element wurde von der zugrunde liegenden Auflistung nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-188">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-189">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-189">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-190">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-190">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-191">Fügt das angegebene Element einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen hinzu.</span><span class="sxs-lookup"><span data-stu-id="57501-191">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToAny">
      <MemberSignature Language="C#" Value="public static int AddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddToAny (collections As BlockingCollection(Of T)(), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item);" />
      <MemberSignature Language="F#" Value="static member AddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.AddToAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-192">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-192">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-193">Das Element, das einer der Auflistungen hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-193">The item to be added to one of the collections.</span></span></param>
        <summary><span data-ttu-id="57501-194">Fügt das angegebene Element einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen hinzu.</span><span class="sxs-lookup"><span data-stu-id="57501-194">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-195">Der Index der Auflistung im <paramref name="collections" />-Array, dem das Element hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-195">The index of the collection in the <paramref name="collections" /> array to which the item was added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-196">Wenn eine begrenzte Kapazität angegeben wurde, als alle <xref:System.Collections.Concurrent.BlockingCollection%601> Instanzen initialisiert wurden, kann ein AddTo any-Befehl so lange blockieren, bis Speicherplatz in einer der Auflistungen verfügbar ist, um das bereitgestellte Element zu speichern.</span><span class="sxs-lookup"><span data-stu-id="57501-196">If a bounded capacity was specified when all of the <xref:System.Collections.Concurrent.BlockingCollection%601> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-197">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-197">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-198">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-198">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-199">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-199">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-200">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element, oder mindestens eine Auflistungen wurde für Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-200">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-201">Mindestens eine zugrunde liegende Auflistung hat das Element nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-201">At least one underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-202">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-202">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-203">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-203">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToAny">
      <MemberSignature Language="C#" Value="public static int AddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddToAny (collections As BlockingCollection(Of T)(), item As T, cancellationToken As CancellationToken) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.AddToAny (collections, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-204">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-204">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-205">Das Element, das einer der Auflistungen hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-205">The item to be added to one of the collections.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="57501-206">Ein Abbruchtoken, das überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-206">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="57501-207">Fügt das angegebene Element einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen hinzu.</span><span class="sxs-lookup"><span data-stu-id="57501-207">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-208">Der Index der Auflistung im <paramref name="collections" />-Array, dem das Element hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-208">The index of the collection in the <paramref name="collections" /> array to which the item was added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-209">Wenn eine begrenzte Kapazität angegeben wurde, als alle <xref:System.Collections.Concurrent.BlockingCollection%601> Instanzen initialisiert wurden, kann ein AddTo any-Befehl so lange blockieren, bis Speicherplatz in einer der Auflistungen verfügbar ist, um das bereitgestellte Element zu speichern.</span><span class="sxs-lookup"><span data-stu-id="57501-209">If a bounded capacity was specified when all of the <xref:System.Collections.Concurrent.BlockingCollection%601> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</span></span> <span data-ttu-id="57501-210">Diese Methode gibt möglicherweise zurück, bevor das Element einer Auflistung hinzugefügt wird, wenn der `cancellationToken` abgebrochen wird, bevor Leerraum verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-210">This method may return before the item is added to any collection if the `cancellationToken` is canceled before space is available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-211">Wenn <see cref="T:System.Threading.CancellationToken" /> abgebrochen ist.</span><span class="sxs-lookup"><span data-stu-id="57501-211">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-212">Mindestens eine zugrunde liegende Auflistung hat das Element nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-212">At least one underlying collection didn't accept the item.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-213">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-213">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-214">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-214">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-215">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element, oder mindestens eine Auflistungen wurde für Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-215">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-216">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen oder die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-216">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed, or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-217">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-217">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-218">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-218">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BoundedCapacity">
      <MemberSignature Language="C#" Value="public int BoundedCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BoundedCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundedCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BoundedCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundedCapacity : int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.BoundedCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57501-219">Ruft die begrenzte Kapazität dieser <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="57501-219">Gets the bounded capacity of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></summary>
        <value><span data-ttu-id="57501-220">Die begrenzte Kapazität dieser Auflistung oder int.MaxValue, wenn keine Begrenzung angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-220">The bounded capacity of this collection, or int.MaxValue if no bound was supplied.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-221"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-221">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-222">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-222">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-223">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-223">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompleteAdding">
      <MemberSignature Language="C#" Value="public void CompleteAdding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteAdding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteAdding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteAdding();" />
      <MemberSignature Language="F#" Value="member this.CompleteAdding : unit -&gt; unit" Usage="blockingCollection.CompleteAdding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57501-224">Markiert die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen als Instanzen, die keine weiteren Hinzufügungen annehmen.</span><span class="sxs-lookup"><span data-stu-id="57501-224">Marks the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances as not accepting any more additions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-225">Nachdem eine Sammlung zum Hinzufügen als abgeschlossen markiert wurde, ist das Hinzufügen zur Auflistung nicht zulässig, und der Versuch, aus der Auflistung zu entfernen, wird nicht gewartet, wenn die Auflistung leer ist.</span><span class="sxs-lookup"><span data-stu-id="57501-225">After a collection has been marked as complete for adding, adding to the collection is not permitted and attempts to remove from the collection will not wait when the collection is empty.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-226"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-226">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-227">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-227">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-228">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-228">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="blockingCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="57501-229">Das eindimensionale Array, das als Ziel der aus der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz kopierten Elemente fungiert.</span><span class="sxs-lookup"><span data-stu-id="57501-229">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span> <span data-ttu-id="57501-230">Für das Array muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="57501-230">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="57501-231">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="57501-231">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="57501-232">Kopiert alle Elemente in der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz in ein kompatibles eindimensionales Array, wobei am angegebenen Index des Zielarrays begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="57501-232">Copies all of the items in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-233">CopyTo stellt eine Momentaufnahme der Auflistung zu einem bestimmten Zeitpunkt dar.</span><span class="sxs-lookup"><span data-stu-id="57501-233">CopyTo represents a snapshot of the collection at a precise point in time.</span></span> <span data-ttu-id="57501-234">Wenn andere Threads Elemente hinzufügen oder entfernen, während CopyTo ausgeführt wird, stellen die von CopyTo zurückgegebenen Elemente möglicherweise nicht den Zustand der Auflistung dar.</span><span class="sxs-lookup"><span data-stu-id="57501-234">If other threads are adding or removing items while CopyTo is executing, then the elements returned by CopyTo might not represent the state of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-235"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-235">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-236">Das <paramref name="array" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-236">The <paramref name="array" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-237">Das <paramref name="index" />-Argument ist weniger als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="57501-237">The <paramref name="index" /> argument is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-238">Das <paramref name="index" />-Argument ist gleich  oder größer als die Länge des <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="57501-238">The <paramref name="index" /> argument is equal to or greater than the length of the <paramref name="array" />.</span></span>  
  
<span data-ttu-id="57501-239">Das Zielarray ist zu klein, um alle BlockingCollection-Elemente aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="57501-239">The destination array is too small to hold all of the BlockingCollection elements.</span></span>  
  
<span data-ttu-id="57501-240">Der Arrayrang stimmt nicht überein.</span><span class="sxs-lookup"><span data-stu-id="57501-240">The array rank doesn't match.</span></span>  
  
<span data-ttu-id="57501-241">Der Arraytyp ist mit dem Typ der BlockingCollection-Elemente nicht kompatibel.</span><span class="sxs-lookup"><span data-stu-id="57501-241">The array type is incompatible with the type of the BlockingCollection elements.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-242">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-242">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-243">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-243">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57501-244">Ruft die Anzahl der Elemente in <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> ab.</span><span class="sxs-lookup"><span data-stu-id="57501-244">Gets the number of items contained in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <value><span data-ttu-id="57501-245">Die Anzahl der Elemente in der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="57501-245">The number of items contained in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-246">Wenn eine Methode in BlockingCollection ausgeführt wird, während auf die Count-Eigenschaft zugegriffen wird, ist der Rückgabewert ungefähr.</span><span class="sxs-lookup"><span data-stu-id="57501-246">If any method in BlockingCollection is executing while the Count property is being accessed, the return value is approximate.</span></span> <span data-ttu-id="57501-247">Count kann eine Zahl, die größer oder kleiner als die tatsächliche Anzahl von Elementen in der BlockingCollection ist, widerspiegeln.</span><span class="sxs-lookup"><span data-stu-id="57501-247">Count may reflect a number that is either greater than or less than the actual number of items in the BlockingCollection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-248"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-248">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-249">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-249">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-250">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-250">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-251">Gibt alle von der aktuellen Instanz der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="57501-251">Releases all resources used by the current instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="blockingCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57501-252">Gibt alle von der aktuellen Instanz der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="57501-252">Releases all resources used by the current instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-253">Die `Dispose` Methode ist nicht Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="57501-253">The `Dispose` method is not thread-safe.</span></span>  
  
 <span data-ttu-id="57501-254">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Collections.Concurrent.BlockingCollection%601> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="57501-254">Call `Dispose` when you are finished using the <xref:System.Collections.Concurrent.BlockingCollection%601>.</span></span> <span data-ttu-id="57501-255">Die `Dispose`-Methode bewirkt, dass <xref:System.Collections.Concurrent.BlockingCollection%601> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="57501-255">The `Dispose` method leaves the <xref:System.Collections.Concurrent.BlockingCollection%601> in an unusable state.</span></span> <span data-ttu-id="57501-256">Nach dem Aufrufen `Dispose` von müssen Sie alle Verweise auf den freigeben, <xref:System.Collections.Concurrent.BlockingCollection%601> damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Collections.Concurrent.BlockingCollection%601> belegt hat.</span><span class="sxs-lookup"><span data-stu-id="57501-256">After calling `Dispose`, you must release all references to the <xref:System.Collections.Concurrent.BlockingCollection%601> so the garbage collector can reclaim the memory that the <xref:System.Collections.Concurrent.BlockingCollection%601> was occupying.</span></span>  
  
 <span data-ttu-id="57501-257">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged) und [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="57501-257">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57501-258">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Collections.Concurrent.BlockingCollection%601> freigeben.</span><span class="sxs-lookup"><span data-stu-id="57501-258">Always call `Dispose` before you release your last reference to the <xref:System.Collections.Concurrent.BlockingCollection%601>.</span></span> <span data-ttu-id="57501-259">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Collections.Concurrent.BlockingCollection%601>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="57501-259">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Collections.Concurrent.BlockingCollection%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-260">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-260">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-261">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-261">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="blockingCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="57501-262">Ob explizit verworfen (true) oder wegen eines Finalizers (false).</span><span class="sxs-lookup"><span data-stu-id="57501-262">Whether being disposed explicitly (true) or due to a finalizer (false).</span></span></param>
        <summary><span data-ttu-id="57501-263">Gibt von der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz verwendete Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="57501-263">Releases resources used by the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-264">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-264">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-265">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-265">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConsumingEnumerable">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-266">Stellt ein verwendetes <see cref="T:System.Collections.Generic.IEnumerator`1" /> für Elemente in der Auflistung bereit.</span><span class="sxs-lookup"><span data-stu-id="57501-266">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span></span></summary>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-267">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-267">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-268">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-268">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConsumingEnumerable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetConsumingEnumerable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; GetConsumingEnumerable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsumingEnumerable () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetConsumingEnumerable();" />
      <MemberSignature Language="F#" Value="member this.GetConsumingEnumerable : unit -&gt; seq&lt;'T&gt;" Usage="blockingCollection.GetConsumingEnumerable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57501-269">Stellt ein verwendetes <see cref="T:System.Collections.Generic.IEnumerator`1" /> für Elemente in der Auflistung bereit.</span><span class="sxs-lookup"><span data-stu-id="57501-269">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span></span></summary>
        <returns><span data-ttu-id="57501-270">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />, das Elemente aus der Auflistung entfernt und zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="57501-270">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that removes and returns items from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57501-271">Im folgenden Beispiel wird die Verwendung der- <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A> Methode veranschaulicht:</span><span class="sxs-lookup"><span data-stu-id="57501-271">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#4)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-272"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-272">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-273">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-273">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-274">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-274">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetConsumingEnumerable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetConsumingEnumerable (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; GetConsumingEnumerable(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsumingEnumerable (cancellationToken As CancellationToken) As IEnumerable(Of T)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetConsumingEnumerable(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetConsumingEnumerable : System.Threading.CancellationToken -&gt; seq&lt;'T&gt;" Usage="blockingCollection.GetConsumingEnumerable cancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetConsumingEnumerable (cancellationToken As CancellationToken) As IEnumerable(Of T)" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.BlockingCollection`1/&lt;GetConsumingEnumerable&gt;d__2))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.BlockingCollection`1/&lt;GetConsumingEnumerable&gt;d__2))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.BlockingCollection`1/&lt;GetConsumingEnumerable&gt;d__68))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.BlockingCollection`1/&lt;GetConsumingEnumerable&gt;d__68))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="57501-275">Ein Abbruchtoken, das überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-275">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="57501-276">Stellt ein verwendetes <see cref="T:System.Collections.Generic.IEnumerable`1" /> für Elemente in der Auflistung bereit.</span><span class="sxs-lookup"><span data-stu-id="57501-276">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerable`1" /> for items in the collection.</span></span></summary>
        <returns><span data-ttu-id="57501-277">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />, das Elemente aus der Auflistung entfernt und zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="57501-277">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that removes and returns items from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-278">Diese Methode ermöglicht es Client Code, Elemente aus der Auflistung mithilfe einer foreach-Schleife (für jede in Visual Basic) oder <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> einer PLINQ-Abfrage zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-278">This method enables client code to remove items from the collection by using a foreach loop (For Each in Visual Basic), or <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> or a PLINQ query.</span></span> <span data-ttu-id="57501-279">Der Enumerator stellt weiterhin Elemente bereit (sofern vorhanden), bis den Wert <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> true zurückgibt, und wenn <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> false ist, wird die Schleife blockiert, bis ein Element verfügbar ist oder bis der <xref:System.Threading.CancellationToken> abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="57501-279">The enumerator will continue to provide items (if any exist) until <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> returns true, and if <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> is false the loop blocks until an item becomes available or until the <xref:System.Threading.CancellationToken> is cancelled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-280">Wenn <see cref="T:System.Threading.CancellationToken" /> abgebrochen ist.</span><span class="sxs-lookup"><span data-stu-id="57501-280">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-281">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde freigegeben, oder die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-281">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-282">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-282">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-283">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-283">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsAddingCompleted">
      <MemberSignature Language="C#" Value="public bool IsAddingCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingCompleted : bool" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.IsAddingCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57501-284">Ruft ab, ob diese <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> zum Hinzufügen als vollständig markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-284">Gets whether this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete for adding.</span></span></summary>
        <value><span data-ttu-id="57501-285">Ob diese Auflistung zum Hinzufügen als vollständig markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-285">Whether this collection has been marked as complete for adding.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-286"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-286">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-287">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-287">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-288">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-288">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57501-289">Ruft ab, ob diese <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> zum Hinzufügen als vollständig markiert wurde und leer ist.</span><span class="sxs-lookup"><span data-stu-id="57501-289">Gets whether this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete for adding and is empty.</span></span></summary>
        <value><span data-ttu-id="57501-290">Ob diese Auflistung zum Hinzufügen als vollständig markiert wurde und leer ist.</span><span class="sxs-lookup"><span data-stu-id="57501-290">Whether this collection has been marked as complete for adding and is empty.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-291"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-291">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-292">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-292">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-293">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-293">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="blockingCollection.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57501-294">Stellt einen <see cref="T:System.Collections.Generic.IEnumerator`1" /> für Elemente in der Auflistung bereit.</span><span class="sxs-lookup"><span data-stu-id="57501-294">Provides an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span></span></summary>
        <returns><span data-ttu-id="57501-295">Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> für die Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="57501-295">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the items in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-296">Im Gegensatz zu <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A> <xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType> gibt einen Standard Enumerator zurück, der die zugrunde liegende Auflistung nicht ändert.</span><span class="sxs-lookup"><span data-stu-id="57501-296">Unlike <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A>, <xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType> returns a standard enumerator that does not modify the underlying collection.</span></span> <span data-ttu-id="57501-297">Wenn andere Threads Elemente gleichzeitig hinzufügen oder entfernen, wenn GetEnumerator aufgerufen wird, stellen die vom Enumerator zurückgegebenen Elemente möglicherweise nicht den aktuellen Zustand der Auflistung dar.</span><span class="sxs-lookup"><span data-stu-id="57501-297">If other threads are adding or removing elements concurrently when GetEnumerator is called, then the elements returned by the enumerator might not represent the current state of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-298"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-298">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-299">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-299">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-300">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-300">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="blockingCollection.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="57501-301">Das eindimensionale Array, das als Ziel der aus der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz kopierten Elemente fungiert.</span><span class="sxs-lookup"><span data-stu-id="57501-301">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span> <span data-ttu-id="57501-302">Für das Array muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="57501-302">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="57501-303">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="57501-303">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="57501-304">Kopiert alle Elemente in der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz in ein kompatibles eindimensionales Array, wobei am angegebenen Index des Zielarrays begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="57501-304">Copies all of the items in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-305"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-305">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-306">Das <paramref name="array" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-306">The <paramref name="array" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-307">Das <paramref name="index" />-Argument ist weniger als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="57501-307">The <paramref name="index" /> argument is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-308">Das <paramref name="index" />-Argument ist gleich oder größer als die Länge des <paramref name="array" />, das Array ist mehrdimensional, oder der Typparameter für die Auflistung kann in den Typ des Zielarrays nicht automatisch umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="57501-308">The <paramref name="index" /> argument is equal to or greater than the length of the <paramref name="array" />, the array is multidimensional, or the type parameter for the collection cannot be cast automatically to the type of the destination array.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-309">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-309">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-310">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-310">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57501-311">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="57501-311">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="57501-312">Gibt immer zurück <see langword="false" /> , um anzugeben, dass der Zugriff nicht synchronisiert ist.</span><span class="sxs-lookup"><span data-stu-id="57501-312">Always returns <see langword="false" /> to indicate the access is not synchronized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="57501-313">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="57501-313">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="57501-314">Er kann nur verwendet werden, wenn die <xref:System.Collections.Concurrent.BlockingCollection`1>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="57501-314">It can be used only when the <xref:System.Collections.Concurrent.BlockingCollection`1> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-315"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-315">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-316">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-316">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-317">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-317">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57501-318">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="57501-318">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="57501-319">Diese Eigenschaft wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="57501-319">This property is not supported.</span></span></summary>
        <value><span data-ttu-id="57501-320">Gibt <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="57501-320">Returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="57501-321">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="57501-321">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="57501-322">Er kann nur verwendet werden, wenn die <xref:System.Collections.Concurrent.BlockingCollection`1>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="57501-322">It can be used only when the <xref:System.Collections.Concurrent.BlockingCollection`1> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57501-323">Die SyncRoot-Eigenschaft wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="57501-323">The SyncRoot property is not supported.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-324">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-324">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-325">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-325">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="blockingCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57501-326">Stellt einen <see cref="T:System.Collections.IEnumerator" /> für Elemente in der Auflistung bereit.</span><span class="sxs-lookup"><span data-stu-id="57501-326">Provides an <see cref="T:System.Collections.IEnumerator" /> for items in the collection.</span></span></summary>
        <returns><span data-ttu-id="57501-327">Ein <see cref="T:System.Collections.IEnumerator" /> für die Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="57501-327">An <see cref="T:System.Collections.IEnumerator" /> for the items in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="57501-328">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="57501-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="57501-329">Er kann nur verwendet werden, wenn die <xref:System.Collections.Concurrent.BlockingCollection`1>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="57501-329">It can be used only when the <xref:System.Collections.Concurrent.BlockingCollection`1> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-330"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-330">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-331">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-331">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-332">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-332">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Take">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-333">Entfernt ein Element aus <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="57501-333">Removes an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-334">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-334">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-335">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-335">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public T Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Take" />
      <MemberSignature Language="VB.NET" Value="Public Function Take () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Take();" />
      <MemberSignature Language="F#" Value="member this.Take : unit -&gt; 'T" Usage="blockingCollection.Take " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57501-336">Entfernt ein Element aus <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="57501-336">Removes  an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="57501-337">Das aus der Auflistung entfernte Element.</span><span class="sxs-lookup"><span data-stu-id="57501-337">The item removed from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-338">Ein-Vorgang <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> kann blockieren, bis ein Element zum Entfernen verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-338">A call to <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> may block until an item is available to be removed.</span></span>  
  
 <span data-ttu-id="57501-339">Die Reihenfolge, in der ein Element entfernt wird, hängt vom Typ der Sammlung ab, die zum Erstellen der Instanz verwendet wird <xref:System.Collections.Concurrent.BlockingCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="57501-339">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="57501-340">Wenn Sie ein- <xref:System.Collections.Concurrent.BlockingCollection%601> Objekt erstellen, können Sie den Typ der zu verwendenden Sammlung angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-340">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="57501-341">Beispielsweise können Sie ein- <xref:System.Collections.Concurrent.ConcurrentQueue%601> Objekt für das First in, First Out (FIFO)-Verhalten oder ein- <xref:System.Collections.Concurrent.ConcurrentStack%601> Objekt für das Last in, First Out-Verhalten (LIFO) angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-341">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="57501-342">Sie können jede Sammlungsklasse verwenden, die die <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="57501-342">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="57501-343">Der standardmäßige Sammlungstyp für <xref:System.Collections.Concurrent.BlockingCollection%601> ist <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="57501-343">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-344"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-344">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-345">Die zugrunde liegende Auflistung wurde außerhalb dieser <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert, oder die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> ist leer, und die Auflistung wurde zum Hinzufügen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-345">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance, or the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> is empty and the collection has been marked as complete for adding.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-346">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-346">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-347">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-347">BlockingCollection Overview</span></span></related>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-348">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> ist leer und wurde hinsichtlich Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-348">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> is empty and has been marked as complete with regards to additions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public T Take (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Take(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Take (cancellationToken As CancellationToken) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Take(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Take : System.Threading.CancellationToken -&gt; 'T" Usage="blockingCollection.Take cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="57501-349">Objekt, mit dem der Take-Vorgang abgebrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="57501-349">Object that can be used to cancel the take operation.</span></span></param>
        <summary><span data-ttu-id="57501-350">Entfernt ein Element aus <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="57501-350">Removes an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="57501-351">Das aus der Auflistung entfernte Element.</span><span class="sxs-lookup"><span data-stu-id="57501-351">The item removed from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-352">Ein-Vorgang <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> kann blockieren, bis ein Element zum Entfernen verfügbar ist oder das Token abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="57501-352">A call to <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> may block until an item is available to be removed or the token is canceled.</span></span>  
  
 <span data-ttu-id="57501-353">Die Reihenfolge, in der ein Element entfernt wird, hängt vom Typ der Sammlung ab, die zum Erstellen der Instanz verwendet wird <xref:System.Collections.Concurrent.BlockingCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="57501-353">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="57501-354">Wenn Sie ein- <xref:System.Collections.Concurrent.BlockingCollection%601> Objekt erstellen, können Sie den Typ der zu verwendenden Sammlung angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-354">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="57501-355">Beispielsweise können Sie ein- <xref:System.Collections.Concurrent.ConcurrentQueue%601> Objekt für das First in, First Out (FIFO)-Verhalten oder ein- <xref:System.Collections.Concurrent.ConcurrentStack%601> Objekt für das Last in, First Out-Verhalten (LIFO) angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-355">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="57501-356">Sie können jede Sammlungsklasse verwenden, die die <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="57501-356">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="57501-357">Der standardmäßige Sammlungstyp für <xref:System.Collections.Concurrent.BlockingCollection%601> ist <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="57501-357">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-358">Das <see cref="T:System.Threading.CancellationToken" /> wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="57501-358">The <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-359">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde freigegeben, oder die <see cref="T:System.Threading.CancellationTokenSource" />, die das Token erstellt hat, wurde abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="57501-359">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created the token was canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-360">Die zugrunde liegende Auflistung wurde außerhalb dieser <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert, die BlockingCollection ist zum Hinzufügen als vollständig markiert, oder die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> ist leer.</span><span class="sxs-lookup"><span data-stu-id="57501-360">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance or the BlockingCollection is marked as complete for adding, or the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> is empty.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-361">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-361">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-362">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-362">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeFromAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-363">Verwendet ein Element aus einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen.</span><span class="sxs-lookup"><span data-stu-id="57501-363">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-364">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-364">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-365">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-365">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeFromAny">
      <MemberSignature Language="C#" Value="public static int TakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="static member TakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TakeFromAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-366">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-366">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-367">Das Element, das aus einer der Auflistungen entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-367">The item removed from one of the collections.</span></span></param>
        <summary><span data-ttu-id="57501-368">Verwendet ein Element aus einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen.</span><span class="sxs-lookup"><span data-stu-id="57501-368">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-369">Der Index der Auflistung im <paramref name="collections" />-Array, aus dem das Element entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-369">The index of the collection in the <paramref name="collections" /> array from which the item was removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-370">Ein-Befehl, der "TakeFromAny" aufruft, kann blockieren, bis ein Element entfernt werden kann.</span><span class="sxs-lookup"><span data-stu-id="57501-370">A call to TakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-371">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-371">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-372">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-372">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-373">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-373">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-374">Das <paramref name="collections" />-Argument ist ein Array der Länge 0 oder enthält ein NULL-Element oder <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> wurde für die Auflistung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="57501-374">The <paramref name="collections" /> argument is a 0-length array or contains a null element or <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> has been called on the collection.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-375">Mindestens eine der zugrunde liegenden Auflistungen wurde außerhalb seiner <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-375">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-376">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-376">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-377">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-377">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TakeFromAny">
      <MemberSignature Language="C#" Value="public static int TakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T, cancellationToken As CancellationToken) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TakeFromAny (collections, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-378">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-378">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-379">Das Element, das aus einer der Auflistungen entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-379">The item removed from one of the collections.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="57501-380">Ein Abbruchtoken, das überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-380">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="57501-381">Verwendet ein Element aus einer angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz und berücksichtigt das angegebene Abbruchtoken.</span><span class="sxs-lookup"><span data-stu-id="57501-381">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances while observing the specified cancellation token.</span></span></summary>
        <returns><span data-ttu-id="57501-382">Der Index der Auflistung im <paramref name="collections" />-Array, aus dem das Element entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-382">The index of the collection in the <paramref name="collections" /> array from which the item was removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-383">Ein-Befehl, der "TakeFromAny" aufruft, kann blockieren, bis ein Element entfernt werden kann.</span><span class="sxs-lookup"><span data-stu-id="57501-383">A call to TakeFromAny may block until an item is available to be removed.</span></span> <span data-ttu-id="57501-384">Die Methode gibt frühzeitig mit einer OperationCanceledException zurück, wenn das Token abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="57501-384">The method will return early with an OperationCanceledException if the token is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-385">Wenn <see cref="T:System.Threading.CancellationToken" /> abgebrochen ist.</span><span class="sxs-lookup"><span data-stu-id="57501-385">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-386">Mindestens eine der zugrunde liegenden Auflistungen wurde außerhalb seiner <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-386">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-387">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-387">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-388">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-388">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-389">Das <paramref name="collections" />-Argument ist ein Array der Länge 0 oder enthält ein NULL-Element oder <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> wurde für die Auflistung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="57501-389">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> has been called on the collection.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-390">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-390">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-391">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-391">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-392">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-392">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="blockingCollection.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57501-393">Kopiert die Elemente aus der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz in ein neues Array.</span><span class="sxs-lookup"><span data-stu-id="57501-393">Copies the items from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance into a new array.</span></span></summary>
        <returns><span data-ttu-id="57501-394">Ein Array, das Kopien der Elemente aus der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="57501-394">An array containing copies of the elements of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-395">Die kopierten Elemente werden nicht aus der Auflistung entfernt.</span><span class="sxs-lookup"><span data-stu-id="57501-395">The copied elements are not removed from the collection.</span></span>  
  
 <span data-ttu-id="57501-396">Wenn eine Methode in BlockingCollection ausgeführt wird, während die "-Methode"-Methode ausgeführt wird, ist der Rückgabewert ungefähre Werte.</span><span class="sxs-lookup"><span data-stu-id="57501-396">If any method in BlockingCollection is executing while the ToArray method executes, the return value is approximate.</span></span> <span data-ttu-id="57501-397">Das Array kann Elemente enthalten, die bereits entfernt wurden, oder Elemente ausschließen, die bereits eingefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="57501-397">ToArray  may include items that have already been removed, or exclude items that have already been inserted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-398"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-398">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-399">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-399">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-400">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-400">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAdd">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-401">Versucht, der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> das angegebene Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-401">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T -&gt; bool" Usage="blockingCollection.TryAdd item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-402">Das Element, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-402">The item to be added to the collection.</span></span></param>
        <summary><span data-ttu-id="57501-403">Versucht, der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> das angegebene Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-403">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="57501-404"><see langword="true" />, wenn <paramref name="item" /> hinzugefügt werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="57501-404"><see langword="true" /> if <paramref name="item" /> could be added; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="57501-405">Wenn das Element ein Duplikat ist und die zugrunde liegende Auflistung keine Duplikate zulässt, wird eine <see cref="T:System.InvalidOperationException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="57501-405">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-406">Wenn die Auflistung eine begrenzte Auflistung ist und voll ist, gibt diese Methode sofort false zurück, ohne das Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-406">If the collection is a bounded collection, and is full, this method immediately returns false without adding the item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-407"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-407">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-408">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde hinsichtlich Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-408">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="57501-409">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-409">-or-</span></span> 
<span data-ttu-id="57501-410">Das Element wurde von der zugrunde liegenden Auflistung nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-410">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-411">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-411">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-412">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-412">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T, millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * int -&gt; bool" Usage="blockingCollection.TryAdd (item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-413">Das Element, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-413">The item to be added to the collection.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="57501-414">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="57501-414">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="57501-415">Versucht, das angegebene Element im angegebenen Zeitraum der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-415">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> within the specified time period.</span></span></summary>
        <returns><span data-ttu-id="57501-416"><see langword="true" />, wenn der Sammlung <paramref name="item" /> innerhalb der angegebenen Zeit hinzugefügt werden konnte, andernfalls FALSE.</span><span class="sxs-lookup"><span data-stu-id="57501-416"><see langword="true" /> if the <paramref name="item" /> could be added to the collection within the specified time; otherwise, false.</span></span> <span data-ttu-id="57501-417">Wenn das Element ein Duplikat ist und die zugrunde liegende Auflistung keine Duplikate zulässt, wird eine <see cref="T:System.InvalidOperationException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="57501-417">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-418"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-418">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-419"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-419"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-420">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde hinsichtlich Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-420">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="57501-421">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-421">-or-</span></span> 
<span data-ttu-id="57501-422">Das Element wurde von der zugrunde liegenden Auflistung nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-422">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-423">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-423">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-424">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-424">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * TimeSpan -&gt; bool" Usage="blockingCollection.TryAdd (item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-425">Das Element, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-425">The item to be added to the collection.</span></span></param>
        <param name="timeout"><span data-ttu-id="57501-426">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</span><span class="sxs-lookup"><span data-stu-id="57501-426">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="57501-427">Versucht, der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> das angegebene Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-427">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="57501-428"><see langword="true" />, wenn der Sammlung <paramref name="item" /> innerhalb der angegebenen Zeitspanne hinzugefügt werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="57501-428"><see langword="true" /> if the <paramref name="item" /> could be added to the collection within the specified time span; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-429"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-429">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-430"><paramref name="timeout" /> ist eine negative Zahl ungleich  -1 Millisekunden, die ein unendliches Timeout darstellt, - oder - Timeout ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="57501-430"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-431">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde hinsichtlich Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-431">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="57501-432">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-432">-or-</span></span> 
<span data-ttu-id="57501-433">Das Element wurde von der zugrunde liegenden Auflistung nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-433">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-434">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-434">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-435">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-435">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T, millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * int * System.Threading.CancellationToken -&gt; bool" Usage="blockingCollection.TryAdd (item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-436">Das Element, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-436">The item to be added to the collection.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="57501-437">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="57501-437">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="57501-438">Ein Abbruchtoken, das überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-438">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="57501-439">Versucht, das angegebene Element unter Berücksichtigung des Abbruchtokens im angegebenen Zeitraum der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-439">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> within the specified time period, while observing a cancellation token.</span></span></summary>
        <returns><span data-ttu-id="57501-440"><see langword="true" />, wenn der Sammlung <paramref name="item" /> innerhalb der angegebenen Zeit hinzugefügt werden konnte, andernfalls FALSE.</span><span class="sxs-lookup"><span data-stu-id="57501-440"><see langword="true" /> if the <paramref name="item" /> could be added to the collection within the specified time; otherwise, false.</span></span> <span data-ttu-id="57501-441">Wenn das Element ein Duplikat ist und die zugrunde liegende Auflistung keine Duplikate zulässt, wird eine <see cref="T:System.InvalidOperationException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="57501-441">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-442">Wenn <see cref="T:System.Threading.CancellationToken" /> abgebrochen ist.</span><span class="sxs-lookup"><span data-stu-id="57501-442">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-443">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde entfernt, oder die zugrundeliegende <see cref="T:System.Threading.CancellationTokenSource" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-443">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the underlying <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-444"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-444"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-445">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde hinsichtlich Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-445">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span></span>  
  
<span data-ttu-id="57501-446">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-446">-or-</span></span> 
<span data-ttu-id="57501-447">Das Element wurde von der zugrunde liegenden Auflistung nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-447">The underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-448">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-448">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-449">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-449">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAddToAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-450">Versucht, einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen das angegebene Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-450">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-451">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-451">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-452">Das Element, das einer der Auflistungen hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-452">The item to be added to one of the collections.</span></span></param>
        <summary><span data-ttu-id="57501-453">Versucht, einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen das angegebene Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-453">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-454">Der Index der Auflistung im <paramref name="collections" />-Array, dem das Element hinzugefügt wurde, oder -1, wenn das Element nicht hinzugefügt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="57501-454">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-455">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-455">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-456">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-456">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-457">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-457">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-458">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element, oder mindestens eine Auflistungen wurde für Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-458">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-459">Mindestens eine zugrunde liegende Auflistung hat das Element nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-459">At least one underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-460">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-460">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-461">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-461">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-462">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-462">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-463">Das Element, das einer der Auflistungen hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-463">The item to be added to one of the collections.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="57501-464">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="57501-464">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="57501-465">Versucht, einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen das angegebene Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-465">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-466">Der Index der Auflistung im <paramref name="collections" />-Array, dem das Element hinzugefügt wurde, oder -1, wenn das Element nicht hinzugefügt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="57501-466">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-467">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-467">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-468">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-468">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-469"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-469"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span> 
<span data-ttu-id="57501-470">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-470">-or-</span></span> 
<span data-ttu-id="57501-471">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-471">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-472">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element, oder mindestens eine Auflistungen wurde für Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-472">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-473">Mindestens eine zugrunde liegende Auflistung hat das Element nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-473">At least one underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-474">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-474">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-475">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-475">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T, timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * TimeSpan -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-476">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-476">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-477">Das Element, das einer der Auflistungen hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-477">The item to be added to one of the collections.</span></span></param>
        <param name="timeout"><span data-ttu-id="57501-478">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</span><span class="sxs-lookup"><span data-stu-id="57501-478">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="57501-479">Versucht, das angegebene Element einer angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz hinzuzufügen und berücksichtigt das angegebene Abbruchtoken.</span><span class="sxs-lookup"><span data-stu-id="57501-479">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances while observing the specified cancellation token.</span></span></summary>
        <returns><span data-ttu-id="57501-480">Der Index der Auflistung im <paramref name="collections" />-Array, dem das Element hinzugefügt wurde, oder -1, wenn das Element nicht hinzugefügt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="57501-480">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-481">Diese Methode kann früh zurückgegeben werden, wenn das CancellationToken abgebrochen wird, bevor der Speicherplatz für den Add-Vorgang verfügbar war.</span><span class="sxs-lookup"><span data-stu-id="57501-481">This method can return early if the cancellationToken is cancelled before space was available for the Add operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-482">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen oder die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellt hat, wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-482">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-483">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-483">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-484"><paramref name="timeout" /> ist eine negative Zahl ungleich  -1 Millisekunden, die ein unendliches Timeout darstellt, - oder - Timeout ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="57501-484"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="57501-485">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-485">-or-</span></span> 
<span data-ttu-id="57501-486">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-486">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-487">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element, oder mindestens eine Auflistungen wurde für Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-487">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-488">Mindestens eine zugrunde liegende Auflistung hat das Element nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-488">At least one underlying collection didn't accept the item.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-489">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-489">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-490">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-490">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T, millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-491">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-491">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-492">Das Element, das einer der Auflistungen hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-492">The item to be added to one of the collections.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="57501-493">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="57501-493">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="57501-494">Ein Abbruchtoken, das überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-494">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="57501-495">Versucht, einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen das angegebene Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="57501-495">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-496">Der Index der Auflistung im <paramref name="collections" />-Array, dem das Element hinzugefügt wurde, oder -1, wenn das Element nicht hinzugefügt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="57501-496">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-497">Wenn <see cref="T:System.Threading.CancellationToken" /> abgebrochen ist.</span><span class="sxs-lookup"><span data-stu-id="57501-497">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-498">Mindestens eine zugrunde liegende Auflistung hat das Element nicht akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="57501-498">At least one underlying collection didn't accept the item.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-499">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-499">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-500"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-500"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span> 
<span data-ttu-id="57501-501">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-501">-or-</span></span> 
<span data-ttu-id="57501-502">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-502">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-503">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element, oder mindestens eine Auflistungen wurde für Hinzufügungen als vollständig markiert.</span><span class="sxs-lookup"><span data-stu-id="57501-503">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-504">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-504">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-505">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-505">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-506">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-506">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryTake">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-507">Versucht, ein Element aus der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-507">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57501-508">Im folgenden Beispiel wird die Verwendung der <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A>-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="57501-508">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#2)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-509">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-509">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-510">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-510">BlockingCollection Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryTake : 'T -&gt; bool" Usage="blockingCollection.TryTake item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-511">Das Element, das aus der Auflistung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-511">The item to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="57501-512">Versucht, ein Element aus der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-512">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="57501-513"><see langword="true" />, wenn ein Element entfernt werden konnte; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="57501-513"><see langword="true" /> if an item could be removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-514">Wenn die Auflistung leer ist, gibt diese Methode sofort false zurück.</span><span class="sxs-lookup"><span data-stu-id="57501-514">If the collection is empty, this method immediately returns false.</span></span>  
  
 <span data-ttu-id="57501-515">Die Reihenfolge, in der ein Element entfernt wird, hängt vom Typ der Sammlung ab, die zum Erstellen der Instanz verwendet wird <xref:System.Collections.Concurrent.BlockingCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="57501-515">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="57501-516">Wenn Sie ein- <xref:System.Collections.Concurrent.BlockingCollection%601> Objekt erstellen, können Sie den Typ der zu verwendenden Sammlung angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-516">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="57501-517">Beispielsweise können Sie ein- <xref:System.Collections.Concurrent.ConcurrentQueue%601> Objekt für das First in, First Out (FIFO)-Verhalten oder ein- <xref:System.Collections.Concurrent.ConcurrentStack%601> Objekt für das Last in, First Out-Verhalten (LIFO) angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-517">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="57501-518">Sie können jede Sammlungsklasse verwenden, die die <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="57501-518">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="57501-519">Der standardmäßige Sammlungstyp für <xref:System.Collections.Concurrent.BlockingCollection%601> ist <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="57501-519">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-520"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-520">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-521">Die zugrunde liegende Auflistung wurde außerhalb dieser <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-521">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-522">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-522">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-523">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-523">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T, millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.TryTake : 'T * int -&gt; bool" Usage="blockingCollection.TryTake (item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-524">Das Element, das aus der Auflistung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-524">The item to be removed from the collection.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="57501-525">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="57501-525">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="57501-526">Versucht, ein Element im angegebenen Zeitraum aus der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-526">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period.</span></span></summary>
        <returns><span data-ttu-id="57501-527"><see langword="true" />, wenn ein Element innerhalb der angegebenen Zeit aus der Auflistung entfernt werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="57501-527"><see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-528">Die Reihenfolge, in der ein Element entfernt wird, hängt vom Typ der Sammlung ab, die zum Erstellen der Instanz verwendet wird <xref:System.Collections.Concurrent.BlockingCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="57501-528">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="57501-529">Wenn Sie ein erstellen <xref:System.Collections.Concurrent.BlockingCollection%601> , können Sie den Typ der zu verwendenden Sammlung angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-529">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601>, you can specify the type of collection to use.</span></span> <span data-ttu-id="57501-530">Beispielsweise können Sie ein- <xref:System.Collections.Concurrent.ConcurrentQueue%601> Objekt für das First in, First Out (FIFO)-Verhalten oder ein- <xref:System.Collections.Concurrent.ConcurrentStack%601> Objekt für das Last in, First Out-Verhalten (LIFO) angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-530">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="57501-531">Sie können jede Sammlungsklasse verwenden, die die <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="57501-531">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="57501-532">Der standardmäßige Sammlungstyp für <xref:System.Collections.Concurrent.BlockingCollection%601> ist <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="57501-532">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-533"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-533">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-534"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-534"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-535">Die zugrunde liegende Auflistung wurde außerhalb dieser <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-535">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-536">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-536">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-537">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-537">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.TryTake : 'T * TimeSpan -&gt; bool" Usage="blockingCollection.TryTake (item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-538">Das Element, das aus der Auflistung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-538">The item to be removed from the collection.</span></span></param>
        <param name="timeout"><span data-ttu-id="57501-539">Ein Objekt, dass die Anzahl der zu wartenden Millisekunden angibt, oder ein Objekt, das -1 Millisekunden zum unendlichen Warten angibt.</span><span class="sxs-lookup"><span data-stu-id="57501-539">An object that represents the number of milliseconds to wait, or an object that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="57501-540">Versucht, ein Element im angegebenen Zeitraum aus der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-540">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period.</span></span></summary>
        <returns><span data-ttu-id="57501-541"><see langword="true" />, wenn ein Element innerhalb der angegebenen Zeit aus der Auflistung entfernt werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="57501-541"><see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-542">Die Reihenfolge, in der ein Element entfernt wird, hängt vom Typ der Sammlung ab, die zum Erstellen der Instanz verwendet wird <xref:System.Collections.Concurrent.BlockingCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="57501-542">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="57501-543">Wenn Sie ein- <xref:System.Collections.Concurrent.BlockingCollection%601> Objekt erstellen, können Sie den Typ der zu verwendenden Sammlung angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-543">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="57501-544">Beispielsweise können Sie ein- <xref:System.Collections.Concurrent.ConcurrentQueue%601> Objekt für das First in, First Out (FIFO)-Verhalten oder ein- <xref:System.Collections.Concurrent.ConcurrentStack%601> Objekt für das Last in, First Out-Verhalten (LIFO) angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-544">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="57501-545">Sie können jede Sammlungsklasse verwenden, die die <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="57501-545">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="57501-546">Der standardmäßige Sammlungstyp für <xref:System.Collections.Concurrent.BlockingCollection%601> ist <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="57501-546">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-547"><see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-547">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-548"><paramref name="timeout" /> ist eine negative Zahl ungleich -1 Millisekunden, die ein unendliches Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-548"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="57501-549">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-549">-or-</span></span> 
 <span data-ttu-id="57501-550"><paramref name="timeout" /> ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="57501-550"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-551">Die zugrunde liegende Auflistung wurde außerhalb dieser <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-551">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-552">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-552">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-553">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-553">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T, millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TryTake : 'T * int * System.Threading.CancellationToken -&gt; bool" Usage="blockingCollection.TryTake (item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="57501-554">Das Element, das aus der Auflistung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-554">The item to be removed from the collection.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="57501-555">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="57501-555">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="57501-556">Ein Abbruchtoken, das überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-556">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="57501-557">Versucht, ein Element unter Berücksichtigung des Abbruchtokens im angegebenen Zeitraum aus der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-557">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period while observing a cancellation token.</span></span></summary>
        <returns><span data-ttu-id="57501-558"><see langword="true" />, wenn ein Element innerhalb der angegebenen Zeit aus der Auflistung entfernt werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="57501-558"><see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-559">Die Reihenfolge, in der ein Element entfernt wird, hängt vom Typ der Sammlung ab, die zum Erstellen der Instanz verwendet wird <xref:System.Collections.Concurrent.BlockingCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="57501-559">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="57501-560">Wenn Sie ein- <xref:System.Collections.Concurrent.BlockingCollection%601> Objekt erstellen, können Sie den Typ der zu verwendenden Sammlung angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-560">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="57501-561">Beispielsweise können Sie ein- <xref:System.Collections.Concurrent.ConcurrentQueue%601> Objekt für das First in, First Out (FIFO)-Verhalten oder ein- <xref:System.Collections.Concurrent.ConcurrentStack%601> Objekt für das Last in, First Out-Verhalten (LIFO) angeben.</span><span class="sxs-lookup"><span data-stu-id="57501-561">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="57501-562">Sie können jede Sammlungsklasse verwenden, die die <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="57501-562">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="57501-563">Der standardmäßige Sammlungstyp für <xref:System.Collections.Concurrent.BlockingCollection%601> ist <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="57501-563">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-564">Das <see cref="T:System.Threading.CancellationToken" /> wurde abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="57501-564">The <see cref="T:System.Threading.CancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-565">Die <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> wurde entfernt, oder die zugrundeliegende <see cref="T:System.Threading.CancellationTokenSource" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="57501-565">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the underlying <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-566"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-566"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-567">Die zugrundeliegende Auflistung wurde außerhalb dieser <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-567">The underlying collection was modified outside this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-568">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-568">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-569">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-569">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryTakeFromAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57501-570">Versucht, ein Element aus einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-570">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-571">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-571">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-572">Das Element, das aus einer der Auflistungen entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-572">The item removed from one of the collections.</span></span></param>
        <summary><span data-ttu-id="57501-573">Versucht, ein Element aus einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-573">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-574">Der Index der Auflistung im <paramref name="collections" />-Array, aus dem das Element entfernt wurde, oder -1, wenn ein Element nicht entfernt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="57501-574">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-575">Ein-Befehl von TryTakeFromAny kann blockieren, bis ein Element zum Entfernen verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-575">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57501-576">Im folgenden Beispiel wird die Verwendung der- <xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType> Methode veranschaulicht:</span><span class="sxs-lookup"><span data-stu-id="57501-576">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#3)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-577">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-577">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-578">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-578">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-579">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-579">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-580">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element.</span><span class="sxs-lookup"><span data-stu-id="57501-580">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-581">Mindestens eine der zugrunde liegenden Auflistungen wurde außerhalb seiner <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-581">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-582">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-582">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-583">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-583">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-584">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-584">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-585">Das Element, das aus einer der Auflistungen entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-585">The item removed from one of the collections.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="57501-586">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="57501-586">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="57501-587">Versucht, ein Element aus einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-587">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-588">Der Index der Auflistung im <paramref name="collections" />-Array, aus dem das Element entfernt wurde, oder -1, wenn ein Element nicht entfernt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="57501-588">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-589">Ein-Befehl von TryTakeFromAny kann blockieren, bis ein Element zum Entfernen verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-589">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-590">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-590">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-591">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-591">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-592"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-592"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span> 
<span data-ttu-id="57501-593">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-593">-or-</span></span> 
<span data-ttu-id="57501-594">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-594">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-595">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element.</span><span class="sxs-lookup"><span data-stu-id="57501-595">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-596">Mindestens eine der zugrunde liegenden Auflistungen wurde außerhalb seiner <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-596">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-597">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-597">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-598">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-598">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T, timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * TimeSpan -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-599">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-599">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-600">Das Element, das aus einer der Auflistungen entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-600">The item removed from one of the collections.</span></span></param>
        <param name="timeout"><span data-ttu-id="57501-601">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</span><span class="sxs-lookup"><span data-stu-id="57501-601">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="57501-602">Versucht, ein Element aus einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-602">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-603">Der Index der Auflistung im <paramref name="collections" />-Array, aus dem das Element entfernt wurde, oder -1, wenn ein Element nicht entfernt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="57501-603">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-604">Ein-Befehl von TryTakeFromAny kann blockieren, bis ein Element zum Entfernen verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-604">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-605">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-605">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-606">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-606">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-607"><paramref name="timeout" /> ist eine negative Zahl ungleich  -1 Millisekunden, die ein unendliches Timeout darstellt, - oder - Timeout ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="57501-607"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="57501-608">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-608">-or-</span></span> 
<span data-ttu-id="57501-609">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-609">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-610">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element.</span><span class="sxs-lookup"><span data-stu-id="57501-610">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-611">Mindestens eine der zugrunde liegenden Auflistungen wurde außerhalb seiner <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-611">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-612">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-612">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-613">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-613">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T, millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections"><span data-ttu-id="57501-614">Das Array von Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="57501-614">The array of collections.</span></span></param>
        <param name="item"><span data-ttu-id="57501-615">Das Element, das aus einer der Auflistungen entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="57501-615">The item removed from one of the collections.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="57501-616">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="57501-616">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="57501-617">Ein Abbruchtoken, das überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="57501-617">A cancellation token to observe.</span></span></param>
        <summary><span data-ttu-id="57501-618">Versucht, ein Element aus einer der angegebenen <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="57501-618">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span></span></summary>
        <returns><span data-ttu-id="57501-619">Der Index der Auflistung im <paramref name="collections" />-Array, aus dem das Element entfernt wurde, oder -1, wenn ein Element nicht entfernt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="57501-619">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57501-620">Ein-Befehl von TryTakeFromAny kann blockieren, bis ein Element zum Entfernen verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="57501-620">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="57501-621">Wenn <see cref="T:System.Threading.CancellationToken" /> abgebrochen ist.</span><span class="sxs-lookup"><span data-stu-id="57501-621">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57501-622">Mindestens eine der zugrunde liegenden Auflistungen wurde außerhalb seiner <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanz geändert.</span><span class="sxs-lookup"><span data-stu-id="57501-622">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57501-623">Das <paramref name="collections" />-Argument ist null.</span><span class="sxs-lookup"><span data-stu-id="57501-623">The <paramref name="collections" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57501-624"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="57501-624"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span> 
<span data-ttu-id="57501-625">- oder -</span><span class="sxs-lookup"><span data-stu-id="57501-625">-or-</span></span> 
<span data-ttu-id="57501-626">Die Anzahl von <paramref name="collections" /> ist größer als die maximale Größe von 62 für STA und 63 für MTA.</span><span class="sxs-lookup"><span data-stu-id="57501-626">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57501-627">Das <paramref name="collections" />-Argument ist ein 0-Länge-Array oder enthält ein NULL-Element.</span><span class="sxs-lookup"><span data-stu-id="57501-627">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57501-628">Mindestens eine der <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />-Instanzen wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="57501-628">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span></span></exception>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/"><span data-ttu-id="57501-629">Threadsichere Auflistungen</span><span class="sxs-lookup"><span data-stu-id="57501-629">Thread-Safe Collections</span></span></related>
        <related type="Article" href="/dotnet/standard/collections/thread-safe/blockingcollection-overview"><span data-ttu-id="57501-630">Übersicht über BlockingCollections</span><span class="sxs-lookup"><span data-stu-id="57501-630">BlockingCollection Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
