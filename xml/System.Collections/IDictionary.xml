<Type Name="IDictionary" FullName="System.Collections.IDictionary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d65355c00bc29c72fe185a801447527b66ac3ba" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51321687" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDictionary : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionary implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionary&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDictionary : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IDictionary = interface&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c68f1-101">Stellt eine nicht generische Auflistung von Schlüssel-Wert-Paaren dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c68f1-101">Represents a nongeneric collection of key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-102">Die <xref:System.Collections.IDictionary> Schnittstelle ist die Basisschnittstelle für nicht generische Auflistungen von Schlüssel/Wert-Paaren.</span><span class="sxs-lookup"><span data-stu-id="c68f1-102">The <xref:System.Collections.IDictionary> interface is the base interface for nongeneric collections of key/value pairs.</span></span> <span data-ttu-id="c68f1-103">Die generische Version dieser Schnittstelle finden Sie unter <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c68f1-103">For the generic version of this interface, see <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c68f1-104">Jedes Element ist ein Schlüssel/Wert-Paar gespeichert, die einem <xref:System.Collections.DictionaryEntry> Objekt.</span><span class="sxs-lookup"><span data-stu-id="c68f1-104">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="c68f1-105">Jedes Paar muss einen eindeutigen Schlüssel besitzen.</span><span class="sxs-lookup"><span data-stu-id="c68f1-105">Each pair must have a unique key.</span></span> <span data-ttu-id="c68f1-106">Implementierungen können variieren, in der gibt an, ob sie die Taste, um null sein können.</span><span class="sxs-lookup"><span data-stu-id="c68f1-106">Implementations can vary in whether they allow the key to be null.</span></span>  <span data-ttu-id="c68f1-107">Der Wert kann null sein und muss nicht eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="c68f1-107">The value can be null and does not have to be unique.</span></span> <span data-ttu-id="c68f1-108">Die <xref:System.Collections.IDictionary> Schnittstelle ermöglicht es, die der Schlüssel und Werte aufgelistet werden sollen, aber es nicht impliziert keine bestimmte Sortierreihenfolge.</span><span class="sxs-lookup"><span data-stu-id="c68f1-108">The <xref:System.Collections.IDictionary> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="c68f1-109"><xref:System.Collections.IDictionary> Implementierungen fallen in drei Kategorien: schreibgeschützt, fester Größe, variabler Größe.</span><span class="sxs-lookup"><span data-stu-id="c68f1-109"><xref:System.Collections.IDictionary> implementations fall into three categories: read-only, fixed-size, variable-size.</span></span> <span data-ttu-id="c68f1-110">Ein schreibgeschütztes <xref:System.Collections.IDictionary> Objekt nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="c68f1-110">A read-only <xref:System.Collections.IDictionary> object cannot be modified.</span></span> <span data-ttu-id="c68f1-111">Ein fester Größe <xref:System.Collections.IDictionary> Objekt lässt nicht das Hinzufügen oder Entfernen von Elementen, aber die Änderung der vorhandenen Elemente ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="c68f1-111">A fixed-size <xref:System.Collections.IDictionary> object does not allow the addition or removal of elements, but does allow the modification of existing elements.</span></span> <span data-ttu-id="c68f1-112">Variabler Größe <xref:System.Collections.IDictionary> Objekt ermöglicht das Hinzufügen, entfernen, und Ändern von Elementen.</span><span class="sxs-lookup"><span data-stu-id="c68f1-112">A variable-size <xref:System.Collections.IDictionary> object allows the addition, removal, and modification of elements.</span></span>  
  
 <span data-ttu-id="c68f1-113">Die `foreach` -Anweisung der c#-Sprache (`For Each` in Visual Basic) gibt ein Objekt des Typs der Elemente in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="c68f1-113">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="c68f1-114">Da jedes Element von der <xref:System.Collections.IDictionary> Objekt ist ein Schlüssel/Wert-Paar, Typ des Elements nicht den Typ des Schlüssels oder den Typ des Werts.</span><span class="sxs-lookup"><span data-stu-id="c68f1-114">Since each element of the <xref:System.Collections.IDictionary> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="c68f1-115">Stattdessen ist der Typ des Elements <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="c68f1-115">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="c68f1-116">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="c68f1-116">For example:</span></span>  
  
 [!code-cpp[Dictionary#14](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/remarks.cpp#14)]
 [!code-csharp[Dictionary#14](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/remarks.cs#14)]
 [!code-vb[Dictionary#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/remarks.vb#14)]  
  
 <span data-ttu-id="c68f1-117">Die `foreach` Anweisung ist ein Wrapper um den Enumerator, der lässt nur das Lesen aus, jedoch nicht das Schreiben in die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="c68f1-117">The `foreach` statement is a wrapper around the enumerator, which allows only reading from but not writing to the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-118">Im folgenden Codebeispiel wird veranschaulicht, wie eine einfaches Dictionary-Klasse definiert, die implementiert die <xref:System.Collections.IDictionary> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="c68f1-118">The following code example demonstrates how to define a simple dictionary class that implements the <xref:System.Collections.IDictionary> interface.</span></span>  
  
 [!code-cpp[Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#1)]
 [!code-csharp[Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#1)]
 [!code-vb[Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="c68f1-119">Die implementierende Klasse benötigen eine Möglichkeit zum Vergleichen von Schlüsseln.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c68f1-119">The implementing class must have a means to compare keys.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.ICollection" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit" Usage="iDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c68f1-120">Das <see cref="T:System.Object" />, das als Schlüssel für das hinzuzufügende Element verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-120">The <see cref="T:System.Object" /> to use as the key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c68f1-121">Das <see cref="T:System.Object" />, das als Wert für das hinzuzufügende Element verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-121">The <see cref="T:System.Object" /> to use as the value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68f1-122">Fügt dem <see cref="T:System.Collections.IDictionary" />-Objekt ein Element mit dem angegebenen Schlüssel und Wert hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-122">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-123">Sie können auch die <xref:System.Collections.IDictionary.Item%2A> Eigenschaft, um neue Elemente hinzufügen, indem dem Wert eines Schlüssels, der im Wörterbuch nicht vorhanden (z. B. `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="c68f1-123">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="c68f1-124">Aber wenn es sich bei der angegebene Schlüssel im Wörterbuch bereits vorhanden ist, Festlegen der <xref:System.Collections.IDictionary.Item%2A> Eigenschaft überschreibt den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-124">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="c68f1-125">Im Gegensatz dazu die <xref:System.Collections.IDictionary.Add%2A> Methode vorhandene Elemente nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-125">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="c68f1-126">Implementierungen können je nach, ob sie den Schlüssel, ermöglichen `null`.</span><span class="sxs-lookup"><span data-stu-id="c68f1-126">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-127">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c68f1-127">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Add%2A> method.</span></span> <span data-ttu-id="c68f1-128">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-128">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#9](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#9)]
 [!code-csharp[Dictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#9)]
 [!code-vb[Dictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68f1-129">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-129">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c68f1-130">Ein Element mit demselben Schlüssel ist im <see cref="T:System.Collections.IDictionary" />-Objekt  bereits vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-130">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c68f1-131">
            <see cref="T:System.Collections.IDictionary" /> ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-131">The <see cref="T:System.Collections.IDictionary" /> is read-only.</span>
          </span>
          <span data-ttu-id="c68f1-132">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-132">-or-</span>
          </span>
          <span data-ttu-id="c68f1-133">
            <see cref="T:System.Collections.IDictionary" /> hat eine feste Größe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-133">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iDictionary.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c68f1-134">Entfernt alle Elemente aus dem <see cref="T:System.Collections.IDictionary" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-134">Removes all elements from the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c68f1-135">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.Clear%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c68f1-135">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Clear%2A> method.</span></span> <span data-ttu-id="c68f1-136">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-136">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#8](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#8)]
 [!code-csharp[Dictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#8)]
 [!code-vb[Dictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c68f1-137">Das <see cref="T:System.Collections.IDictionary" />-Objekt ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-137">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool" Usage="iDictionary.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c68f1-138">Der im <see cref="T:System.Collections.IDictionary" />-Objekt zu suchende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-138">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68f1-139">Ermittelt, ob das <see cref="T:System.Collections.IDictionary" />-Objekt ein Element mit dem angegebenen Schlüssel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-139">Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68f1-140">
            <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem Schlüssel enthält, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-140">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-141">Implementierungen können je nach, ob sie den Schlüssel, ermöglichen `null`.</span><span class="sxs-lookup"><span data-stu-id="c68f1-141">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
 <span data-ttu-id="c68f1-142">Ab .NET Framework 2.0 wird diese Methode verwendet Objekte in einer Auflistung <xref:System.Object.Equals%2A> und <xref:System.IComparable.CompareTo%2A> Methoden `item` um zu bestimmen, ob `item` vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c68f1-142">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="c68f1-143">Diese Entscheidung wurde in früheren Versionen von .NET Framework, mit der <xref:System.Object.Equals%2A> und <xref:System.IComparable.CompareTo%2A> Methoden der `item` Parameter für die Objekte in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="c68f1-143">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-144">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.Contains%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c68f1-144">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Contains%2A> method.</span></span> <span data-ttu-id="c68f1-145">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-145">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#5)]
 [!code-csharp[Dictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#5)]
 [!code-vb[Dictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68f1-146">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-146">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="iDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c68f1-147">Gibt ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.IDictionary" />-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-147">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68f1-148">Ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.IDictionary" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-148">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-149">[Visual Basic C#]</span><span class="sxs-lookup"><span data-stu-id="c68f1-149">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="c68f1-150">Die `foreach`-Anweisung der Programmiersprache C# (`for each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="c68f1-150">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="c68f1-151">Daher wird die Verwendung `foreach` wird empfohlen, anstelle die direkte Bearbeitung des Enumerators.</span><span class="sxs-lookup"><span data-stu-id="c68f1-151">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c68f1-152">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c68f1-152">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c68f1-153">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-153">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c68f1-154"><xref:System.Collections.IEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück.</span><span class="sxs-lookup"><span data-stu-id="c68f1-154"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="c68f1-155">An dieser Position ist die <xref:System.Collections.IEnumerator.Current%2A> Eigenschaft ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-155">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="c68f1-156">Daher muss der Enumerator durch einen Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <xref:System.Collections.IEnumerator.Current%2A> gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="c68f1-156">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c68f1-157"><xref:System.Collections.IEnumerator.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c68f1-157"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c68f1-158"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.IEnumerator.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="c68f1-158"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c68f1-159">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c68f1-159">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c68f1-160">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c68f1-160">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c68f1-161">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.IEnumerator.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-161">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c68f1-162">Um <xref:System.Collections.IEnumerator.Current%2A> wieder auf das erste Element der Auflistung festzulegen, können Sie <xref:System.Collections.IEnumerator.Reset%2A> gefolgt von <xref:System.Collections.IEnumerator.MoveNext%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c68f1-162">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c68f1-163">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="c68f1-163">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c68f1-164">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-164">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="c68f1-165">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="c68f1-165">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c68f1-166">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="c68f1-166">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c68f1-167">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="c68f1-167">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68f1-168">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" />-Objekt eine feste Größe hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-168">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68f1-169">
            <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" />-Objekt eine feste Größe hat, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-169">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-170">Eine Auflistung mit fester Größe lässt das Hinzufügen oder Entfernen von Elementen nach die Auflistung erstellt wird, die Änderung der vorhandenen Elemente lässt jedoch nicht zu.</span><span class="sxs-lookup"><span data-stu-id="c68f1-170">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="c68f1-171">Eine Auflistung mit fester Größe ist einfach eine Sammlung mit einem Wrapper, der verhindert wird, hinzufügen und Entfernen von Elementen. Wenn Änderungen, um die zugrunde liegende Auflistung vorgenommen werden, z. B. zum Hinzufügen oder Entfernen von Elementen, gibt die Auflistung mit fester Größe aus diesem Grund, diese Änderungen wieder.</span><span class="sxs-lookup"><span data-stu-id="c68f1-171">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-172">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.IsFixedSize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c68f1-172">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.IsFixedSize%2A> property.</span></span> <span data-ttu-id="c68f1-173">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-173">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#6](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#6)]
 [!code-csharp[Dictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#6)]
 [!code-vb[Dictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68f1-174">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-174">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68f1-175">
            <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" />-Objekt schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-175">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-176">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="c68f1-176">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-177">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.IsReadOnly%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c68f1-177">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.IsReadOnly%2A> property.</span></span> <span data-ttu-id="c68f1-178">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-178">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#4)]
 [!code-csharp[Dictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#4)]
 [!code-vb[Dictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c68f1-179">Der Schlüssel des abzurufenden oder zu festzulegenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-179">The key of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68f1-180">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-180">Gets or sets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68f1-181">Das Element mit dem angegebenen Schlüssel oder <see langword="null" />, wenn der Schlüssel nicht vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-181">The element with the specified key, or <see langword="null" /> if the key does not exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-182">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgender Syntax: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="c68f1-182">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="c68f1-183">Sie können auch die <xref:System.Collections.IDictionary.Item%2A> Eigenschaft, um neue Elemente hinzufügen, indem dem Wert eines Schlüssels, der im Wörterbuch nicht vorhanden (z. B. `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="c68f1-183">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="c68f1-184">Aber wenn es sich bei der angegebene Schlüssel im Wörterbuch bereits vorhanden ist, Festlegen der <xref:System.Collections.IDictionary.Item%2A> Eigenschaft überschreibt den alten Wert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-184">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="c68f1-185">Im Gegensatz dazu die <xref:System.Collections.IDictionary.Add%2A> Methode vorhandene Elemente nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-185">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="c68f1-186">Implementierungen können je nach, ob sie den Schlüssel, ermöglichen `null`.</span><span class="sxs-lookup"><span data-stu-id="c68f1-186">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
 <span data-ttu-id="c68f1-187">Die C#-Sprache verwendet die `this` [dies](~/docs/csharp/language-reference/keywords/this.md) -Schlüsselwort zum Definieren der Indexer der <xref:System.Collections.IDictionary.Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c68f1-187">The C# language uses the `this`[this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.IDictionary.Item%2A> property.</span></span> <span data-ttu-id="c68f1-188">Visual Basic implementiert <xref:System.Collections.IDictionary.Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="c68f1-188">Visual Basic implements <xref:System.Collections.IDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-189">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.Item%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c68f1-189">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Item%2A> property.</span></span> <span data-ttu-id="c68f1-190">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-190">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#13](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#13)]
 [!code-csharp[Dictionary#13](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#13)]
 [!code-vb[Dictionary#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68f1-191">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-191">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c68f1-192">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Collections.IDictionary" />-Objekt ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-192">The property is set and the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
          <span data-ttu-id="c68f1-193">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-193">-or-</span>
          </span>
          <span data-ttu-id="c68f1-194">Die Eigenschaft wird festgelegt, <paramref name="key" /> ist in der Auflistung nicht vorhanden, und der <see cref="T:System.Collections.IDictionary" /> hat eine feste Größe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-194">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68f1-195">Ruft ein <see cref="T:System.Collections.ICollection" />-Objekt ab, das die Schlüssel des <see cref="T:System.Collections.IDictionary" />-Objekts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-195">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68f1-196">Ein <see cref="T:System.Collections.ICollection" />-Objekt, das die Schlüssel des <see cref="T:System.Collections.IDictionary" />-Objekts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-196">An <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-197">Die Reihenfolge der Schlüssel in der zurückgegebenen <xref:System.Collections.ICollection> Objekt ist nicht angegeben, aber es ist garantiert die gleiche Reihenfolge wie die entsprechenden Werte in der <xref:System.Collections.ICollection> zurückgegebenes der <xref:System.Collections.IDictionary.Values%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c68f1-197">The order of the keys in the returned <xref:System.Collections.ICollection> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-198">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.Keys%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c68f1-198">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span> <span data-ttu-id="c68f1-199">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-199">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#10](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#10)]
 [!code-csharp[Dictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#10)]
 [!code-vb[Dictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c68f1-200">Der Schlüssel des zu entfernenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-200">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68f1-201">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-201">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-202">Wenn das <xref:System.Collections.IDictionary>-Objekt kein Element mit dem angegebenen Schlüssel enthält, bleibt das <xref:System.Collections.IDictionary> unverändert.</span><span class="sxs-lookup"><span data-stu-id="c68f1-202">If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged.</span></span> <span data-ttu-id="c68f1-203">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c68f1-203">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-204">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.Remove%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c68f1-204">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Remove%2A> method.</span></span> <span data-ttu-id="c68f1-205">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-205">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#7)]
 [!code-csharp[Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#7)]
 [!code-vb[Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68f1-206">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-206">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c68f1-207">Das <see cref="T:System.Collections.IDictionary" />-Objekt ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-207">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
          <span data-ttu-id="c68f1-208">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-208">-or-</span>
          </span>
          <span data-ttu-id="c68f1-209">
            <see cref="T:System.Collections.IDictionary" /> hat eine feste Größe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-209">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68f1-210">Ruft ein <see cref="T:System.Collections.ICollection" />-Objekt ab, das die Werte des <see cref="T:System.Collections.IDictionary" />-Objekts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-210">Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68f1-211">Ein <see cref="T:System.Collections.ICollection" />-Objekt, das die Werte des <see cref="T:System.Collections.IDictionary" />-Objekts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68f1-211">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68f1-212">Die Reihenfolge der Werte in der zurückgegebenen <xref:System.Collections.ICollection> Objekt ist nicht angegeben, aber ist immer der gleichen Reihenfolge wie die entsprechenden Schlüssel in der <xref:System.Collections.ICollection> zurückgegebenes der <xref:System.Collections.IDictionary.Keys%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c68f1-212">The order of the values in the returned <xref:System.Collections.ICollection> object is unspecified, but is guaranteed to be the same order as the corresponding keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68f1-213">Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Collections.IDictionary.Values%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c68f1-213">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Values%2A> property.</span></span> <span data-ttu-id="c68f1-214">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Collections.IDictionary> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c68f1-214">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#11)]
 [!code-csharp[Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#11)]
 [!code-vb[Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
  </Members>
</Type>