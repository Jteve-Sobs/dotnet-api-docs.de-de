<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDictionary.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f8a8884f6a8528c2d85903a16fd7de0aba47df8f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8a8884f6a8528c2d85903a16fd7de0aba47df8f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IDictionary">
          <source>Represents a nongeneric collection of key/value pairs.</source>
          <target state="translated">Stellt eine nicht generische Auflistung von Schlüssel-Wert-Paaren dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface is the base interface for nongeneric collections of key/value pairs.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Schnittstelle ist die Basisschnittstelle für nicht generische Auflistungen von Schlüssel/Wert-Paaren.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>For the generic version of this interface, see <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die generische Version dieser Schnittstelle finden Sie unter <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Each element is a key/value pair stored in a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">Jedes Element ist ein Schlüssel/Wert-Paar in gespeicherten ein <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Each pair must have a unique key.</source>
          <target state="translated">Jedes Paar muss einen eindeutigen Schlüssel aufweisen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Implementations can vary in whether they allow the key to be null.</source>
          <target state="translated">Implementierungen können variieren, im gibt an, ob sie den Schlüssel NULL zulassen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The value can be null and does not have to be unique.</source>
          <target state="translated">Der Wert kann null sein und muss nicht eindeutig sein.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Schnittstelle ermöglicht es, die Schlüssel und Werte aufgelistet werden sollen, aber es keine bestimmte Sortierreihenfolge nicht impliziert.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> implementations fall into three categories: read-only, fixed-size, variable-size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Implementierungen fallen in drei Kategorien: schreibgeschützte fester Größe, variabler Größe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>A read-only <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object cannot be modified.</source>
          <target state="translated">Ein schreibgeschützter <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Objekt kann nicht geändert werden.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>A fixed-size <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object does not allow the addition or removal of elements, but does allow the modification of existing elements.</source>
          <target state="translated">Ein fester Größe <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Objekt lässt nicht zu, das Hinzufügen oder Entfernen von Elementen, aber die Änderung von vorhandenen Elementen lässt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>A variable-size <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object allows the addition, removal, and modification of elements.</source>
          <target state="translated">Ein variabler Größe <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Objekt ermöglicht das Hinzufügen, entfernen und Ändern von Elementen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`For Each`</ph> in Visual Basic) ein Objekt des Typs der Elemente in der Auflistung zurück.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Da jedes Element von der <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Objekt ist ein Schlüssel/Wert-Paar, der Elementtyp nicht den Typ des Schlüssels oder den Typ des Werts.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">Stattdessen der Elementtyp ist <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>For example:</source>
          <target state="translated">Zum Beispiel:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from but not writing to the collection.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> Anweisung ist ein Wrapper um den Enumerator, der nur aus lesen, jedoch nicht das Schreiben in die Auflistung zulässt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The following code example demonstrates how to define a simple dictionary class that implements the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie eine einfache Wörterbuchklasse definiert, die implementiert die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The implementing class must have a means to compare keys.</source>
          <target state="translated">Die implementierende Klasse benötigen eine Möglichkeit zum Vergleichen von Schlüsseln.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the key of the element to add.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das als Schlüssel für das hinzuzufügende Element verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the value of the element to add.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das als Wert für das hinzuzufügende Element verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt ein Element mit dem angegebenen Schlüssel und Wert hinzu.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">Sie können auch die <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> Eigenschaft zum Hinzufügen neuer Elemente durch Festlegen des Werts eines Schlüssels, der im Wörterbuch nicht vorhanden (z. B. <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Wenn der angegebene Schlüssel bereits im Wörterbuch vorhanden ist, jedoch durch Festlegen der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> Eigenschaft überschreibt den alten Wert.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Im Gegensatz dazu die <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> Methode vorhandene Elemente nicht geändert.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>Implementations can vary in whether they allow the key to be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Implementierungen können variieren, ob sie den Schlüssel ermöglichen <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Ein Element mit demselben Schlüssel ist im <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt  bereits vorhanden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Entfernt alle Elemente aus dem <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Clear">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Clear%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Clear">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object contains an element with the specified key.</source>
          <target state="translated">Ermittelt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt ein Element mit dem angegebenen Schlüssel enthält.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> ein Element mit dem Schlüssel enthält, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>Implementations can vary in whether they allow the key to be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Implementierungen können variieren, ob sie den Schlüssel ermöglichen <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">Beginnend mit .NET Framework 2.0, verwendet diese Methode Objekte in der Auflistung <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden auf <ph id="ph3">`item`</ph> um zu bestimmen, ob <ph id="ph4">`item`</ph> vorhanden ist.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In früheren Versionen von .NET Framework-diese Entscheidung wurde versucht, mithilfe der <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden der <ph id="ph3">`item`</ph> Parameter für die Objekte in der Auflistung.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Gibt ein <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph>-Objekt für das <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt zurück.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph>-Objekt für das <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, c#]</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph>-Anweisung der Programmiersprache C# (<ph id="ph2">`for each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">Verwenden Sie deshalb <ph id="ph1">`foreach`</ph> wird direkt und den Enumerator nicht empfohlen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> setzt den Enumerator ebenfalls auf diese Position zurück.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">An dieser Position ist die <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Eigenschaft ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Daher muss der Enumerator durch einen Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> wieder auf das erste Element der Auflistung festzulegen, können Sie <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> gefolgt von <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt eine feste Größe hat.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt eine feste Größe hat, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">Eine Auflistung mit fester Größe lässt das Hinzufügen oder Entfernen von Elementen nach dem die Auflistung erstellt, aber die Änderung von vorhandenen Elementen lässt nicht zu.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Eine Auflistung mit fester Größe ist einfach eine Auflistung mit einem Wrapper, der verhindert, dass hinzufügen und Entfernen von Elementen. Deshalb spiegelt die Auflistung mit fester Größe zum Änderungen vorgenommen werden, auf die zugrunde liegende Auflistung, z. B. das Hinzufügen oder Entfernen von Elementen, die Änderungen.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsFixedSize%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsFixedSize%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt schreibgeschützt ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsReadOnly%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The key of the element to get or set.</source>
          <target state="translated">Der Schlüssel des abzurufenden oder zu festzulegenden Elements.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The element with the specified key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the key does not exist.</source>
          <target state="translated">Das Element mit dem angegebenen Schlüssel oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn der Schlüssel nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgender Syntax: <ph id="ph1">`myCollection[key]`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">Sie können auch die <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> Eigenschaft zum Hinzufügen neuer Elemente durch Festlegen des Werts eines Schlüssels, der im Wörterbuch nicht vorhanden (z. B. <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Wenn der angegebene Schlüssel bereits im Wörterbuch vorhanden ist, jedoch durch Festlegen der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> Eigenschaft überschreibt den alten Wert.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Im Gegensatz dazu die <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> Methode vorhandene Elemente nicht geändert.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>Implementations can vary in whether they allow the key to be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Implementierungen können variieren, ob sie den Schlüssel ermöglichen <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The C# language uses the <ph id="ph1">`this`</ph><bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph2">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">Die C#-Sprache verwendet die <ph id="ph1">`this`</ph> <bpt id="p1">[</bpt>dies<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> -Schlüsselwort zum Definieren der Indexer anstatt zu implementieren die <ph id="ph2">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementiert <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">Die Eigenschaft wird festgelegt, und das <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Die Eigenschaft wird festgelegt, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist in der Auflistung nicht vorhanden, und <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>-Objekt ab, das die Schlüssel des <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekts enthält.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>-Objekt, das die Schlüssel des <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekts enthält.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">Die Reihenfolge der Schlüssel in der zurückgegebenen <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> Objekt ist nicht vorgegeben, jedoch ist die Reihenfolge als die entsprechenden Werte in der <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> zurückgegebenes der <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Keys">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Keys">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">Der Schlüssel des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Entfernt das Element mit dem angegebenen Schlüssel aus dem <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> remains unchanged.</source>
          <target state="translated">Wenn das <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>-Objekt kein Element mit dem angegebenen Schlüssel enthält, bleibt das <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> unverändert.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">Es werden keine Ausnahmen ausgelöst.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekt ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>-Objekt ab, das die Werte des <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekts enthält.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>-Objekt, das die Werte des <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Objekts enthält.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Values">
          <source>The order of the values in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is unspecified, but is guaranteed to be the same order as the corresponding keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Die Reihenfolge der Werte in der zurückgegebenen <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> Objekt ist nicht vorgegeben, jedoch ist die Reihenfolge als die entsprechenden Schlüssel in der <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> zurückgegebenes der <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Values">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Implementieren der <ph id="ph1">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Values">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> Klasse.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>