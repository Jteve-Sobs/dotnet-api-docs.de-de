<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedList.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d3124b7bda8739a20a75d51b771ab675fd3a27c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3124b7bda8739a20a75d51b771ab675fd3a27c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.SortedList">
          <source>Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</source>
          <target state="translated">Stellt eine Auflistung von Schlüssel-Wert-Paaren dar, die nach Schlüsseln sortiert sind und auf die sowohl über Schlüssel als auch über Indizes zugegriffen werden kann.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For the generic version of this collection, see <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die generische Version dieser Auflistung finden Sie unter <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> element can be accessed by its key, like an element in any <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation, or by its index, like an element in any <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> implementation.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Element über seinen Schlüssel, wie ein Element in einem möglich <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> Implementierung oder ihren Index, wie ein Element in einem <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt verwaltet intern zwei Arrays, die die Elemente der Liste, d. h. ein Array für die Schlüssel speichern und ein anderes Array für die zugehörigen Werte.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Each element is a key/value pair that can be accessed as a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">Jedes Element ist ein Schlüssel/Wert-Paar, das als zugegriffen werden kann ein <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Ein Schlüssel kann nicht <ph id="ph1">`null`</ph>, aber ein Wert sein kann.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ist die Anzahl der Elemente der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, die Kapazität wird automatisch erhöht, nach Bedarf über die neuzuordnung.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">Die Kapazität kann verringert werden, durch den Aufruf <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> oder durch Festlegen der <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> Eigenschaft explizit.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Für sehr große <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekte aufweist, können Sie die maximale Kapazität auf 2 Milliarden Elemente auf einem 64-Bit-System erhöhen, indem die <ph id="ph2">`enabled`</ph> Attribut des Konfigurationselements auf <ph id="ph3">`true`</ph> in der Umgebung zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Die Elemente eines eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt nach Schlüsseln sortiert sind entweder nach einem bestimmten <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> -Implementierung angeben, wann die <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> erstellten oder entsprechend der <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Implementierung, die die Schlüssel selbst.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>In either case, a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> does not allow duplicate keys.</source>
          <target state="translated">In beiden Fällen ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> lässt keine doppelten Schlüssel.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Die Sequenz der Index basiert auf der Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, erfolgt dieses einfügen in <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in der richtigen Reihenfolge und die Indizierung entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Wenn ein Element entfernt wird, die Indizierung ebenfalls entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Aus diesem Grund kann der Index eines bestimmten Schlüssel/Wert-Paars ändern, wenn Elemente hinzugefügt oder daraus entfernt werden die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Operations on a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object tend to be slower than operations on a <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> object because of the sorting.</source>
          <target state="translated">Vorgänge für eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt sind tendenziell langsamer als Vorgänge für eine <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> Objekt aufgrund der Sortierung.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>However, the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</source>
          <target state="translated">Allerdings die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> bietet mehr Flexibilität ermöglicht den Zugriff auf die Werte über den zugehörigen Schlüssel oder über die Indizes.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Elemente in dieser Auflistung können über einen Ganzzahlenindex zugegriffen werden.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">In dieser Auflistung Indizes sind nullbasiert.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> -Anweisung der Programmiersprache c# (<ph id="ph2">`for each`</ph> in Visual Basic) ein Objekt des Typs der Elemente in der Auflistung zurück.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Da jedes Element von der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ist ein Schlüssel/Wert-Paar, der Elementtyp nicht den Typ des Schlüssels oder den Typ des Werts.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Rather, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">Der Elementtyp ist <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For example:</source>
          <target state="translated">Zum Beispiel:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph> Anweisung ist ein Wrapper um den Enumerator, der nur das Lesen aus nicht das Schreiben in die Auflistung zulässt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The following code example shows how to create and initialize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to print out its keys and values.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen und initialisieren Sie ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> -Objekt und seiner Schlüssel und Werte auszugeben.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Öffentliche statische (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) Member dieses Typs sind threadsicher.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> Objekt Unterstützung für mehrere Reader gleichzeitig, solange die Auflistung nicht geändert wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /&gt;</ph> method.</source>
          <target state="translated">Um die Threadsicherheit der <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>, alle Operationen müssen ausgeführt werden, über den Wrapper zurückgegebene die <ph id="ph2">&lt;see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Collections.SortedList">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the default initial capacity, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key added to the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Klasse, die über die anfängliche Standardkapazität verfügt und entsprechend der <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle sortiert wird, die von jedem zum <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt hinzugefügten Schlüssel implementiert wird.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeder Schlüssel implementieren, muss die <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> Schnittstelle, um Vergleiche mit jedem anderen Schlüssel in der Lage sein, die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Die Elemente sind gemäß sortiert die <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> -Implementierung jedes Schlüssels hinzugefügt der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Im folgenden Codebeispiel wird erstellt Auflistungen, die mit anderen <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Konstruktoren und zeigt die Unterschiede im Verhalten der Sammlungen.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn die <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>-Implementierung des jeweiligen Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the default initial capacity, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Klasse, die über die anfängliche Standardkapazität verfügt und entsprechend der angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>-Schnittstelle sortiert wird.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Die Elemente sortiert werden entsprechend den Angaben <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die <ph id="ph1">`comparer`</ph> Parameter ist <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> -Implementierung des jeweiligen Schlüssels verwendet wird; daher muss jeder Schlüssel implementieren die <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Schnittstelle, um Vergleiche mit jedem anderen Schlüssel in der Lage sein, die <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Im folgenden Codebeispiel wird erstellt Auflistungen, die mit anderen <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Konstruktoren und zeigt die Unterschiede im Verhalten der Sammlungen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> implementation to copy to a new <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Implementierung, die in ein neues <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt kopiert werden soll.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Klasse mit Elementen, die aus dem angegebenen Wörterbuch kopiert werden. Die anfängliche Kapazität entspricht der Anzahl der kopierten Elemente, und die Sortierung erfolgt entsprechend der <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle, die von den einzelnen Schlüsseln implementiert wird.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeder Schlüssel implementieren, muss die <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> Schnittstelle, um Vergleiche mit jedem anderen Schlüssel in der Lage sein, die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Die Elemente sind gemäß sortiert die <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> -Implementierung jedes Schlüssels hinzugefügt der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> object is an example of an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation that can be passed to this constructor.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> Objekt ist ein Beispiel für eine <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> Implementierung, die an diesen Konstruktor übergeben werden kann.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a copy of the keys and values stored in the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">Die neue <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt enthält eine Kopie der gespeicherten Schlüssel und Werte der <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente im <ph id="ph3">`d`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Im folgenden Codebeispiel wird erstellt Auflistungen, die mit anderen <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Konstruktoren und zeigt die Unterschiede im Verhalten der Sammlungen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>One or more elements in <ph id="ph1">&lt;paramref name="d" /&gt;</ph> do not implement the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated">Mindestens ein Element in <ph id="ph1">&lt;paramref name="d" /&gt;</ph> implementiert die <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle nicht.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Die anfängliche Anzahl an Elementen, die das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the specified initial capacity, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key added to the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Klasse, die über die angegebene anfängliche Standardkapazität verfügt und entsprechend der <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle sortiert wird, die von jedem zum <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt hinzugefügten Schlüssel implementiert wird.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Jeder Schlüssel implementieren, muss die <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> Schnittstelle, um Vergleiche mit jedem anderen Schlüssel in der Lage sein, die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Die Elemente sind gemäß sortiert die <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> -Implementierung jedes Schlüssels hinzugefügt der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">`initialCapacity`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Im folgenden Codebeispiel wird erstellt Auflistungen, die mit anderen <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Konstruktoren und zeigt die Unterschiede im Verhalten der Sammlungen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>There is not enough available memory to create a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object with the specified <ph id="ph2">&lt;paramref name="initialCapacity" /&gt;</ph>.</source>
          <target state="translated">Es ist nicht genügend Arbeitsspeicher verfügbar, um ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt mit der angegebenen <ph id="ph2">&lt;paramref name="initialCapacity" /&gt;</ph> zu erstellen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn die <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>-Implementierung des jeweiligen Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Die anfängliche Anzahl an Elementen, die das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the specified initial capacity, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Klasse, die über die angegebene anfängliche Kapazität verfügt und entsprechend der angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>-Schnittstelle sortiert wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Die Elemente sortiert werden entsprechend den Angaben <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die <ph id="ph1">`comparer`</ph> Parameter ist <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> -Implementierung des jeweiligen Schlüssels verwendet wird; daher muss jeder Schlüssel implementieren die <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Schnittstelle, um Vergleiche mit jedem anderen Schlüssel in der Lage sein, die <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Im folgenden Codebeispiel wird erstellt Auflistungen, die mit anderen <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Konstruktoren und zeigt die Unterschiede im Verhalten der Sammlungen.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>There is not enough available memory to create a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object with the specified <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>.</source>
          <target state="translated">Es ist nicht genügend Arbeitsspeicher verfügbar, um ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt mit der angegebenen <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> zu erstellen.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> implementation to copy to a new <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Implementierung, die in ein neues <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt kopiert werden soll.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>-Implementierung, die beim Vergleich von Schlüsseln verwendet wird.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, wenn die <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>-Implementierung des jeweiligen Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Klasse, die aus dem angegebenen Wörterbuch kopierte Elemente enthält. Die anfängliche Kapazität entspricht der Anzahl der kopierten Elemente, und die Sortierung erfolgt nach der angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>-Schnittstelle.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Die Elemente sortiert werden entsprechend den Angaben <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die <ph id="ph1">`comparer`</ph> Parameter ist <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> -Implementierung des jeweiligen Schlüssels verwendet wird; daher muss jeder Schlüssel implementieren die <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Schnittstelle, um Vergleiche mit jedem anderen Schlüssel in der Lage sein, die <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> object is an example of an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation that can be passed to this constructor.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> Objekt ist ein Beispiel für eine <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> Implementierung, die an diesen Konstruktor übergeben werden kann.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a copy of the keys and values stored in the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">Die neue <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt enthält eine Kopie der gespeicherten Schlüssel und Werte der <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente im <ph id="ph3">`d`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">Im folgenden Codebeispiel wird erstellt Auflistungen, die mit anderen <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Konstruktoren und zeigt die Unterschiede im Verhalten der Sammlungen.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and one or more elements in <ph id="ph3">&lt;paramref name="d" /&gt;</ph> do not implement the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>, und mindestens ein Element in <ph id="ph3">&lt;paramref name="d" /&gt;</ph> implementiert die <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle nicht.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The key of the element to add.</source>
          <target state="translated">Der Schlüssel des hinzuzufügenden Elements.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The value of the element to add.</source>
          <target state="translated">Der Wert des hinzuzufügenden Elements.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Wert kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>Adds an element with the specified key and value to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Fügt einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ein Element mit dem angegebenen Schlüssel und Wert hinzu.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The insertion point is determined based on the comparer selected, either explicitly or by default, when the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object was created.</source>
          <target state="translated">Die Einfügemarke wird basierend auf den Vergleich ausgewählt, entweder explizit oder standardmäßig bestimmt. wenn die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt erstellt wurde.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> bereits gleich <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>, die Kapazität der <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt wird von automatisch Neuzuordnen des internen Arrays erhöht, und die vorhandenen Elemente werden in das neue Array kopiert, bevor das neue Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object (for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">Sie können auch die <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> zum Hinzufügen neuer Elemente durch Festlegen des Werts eines Schlüssels, die Eigenschaft ist nicht vorhanden, der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt (z. B. <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Jedoch, wenn der angegebene Schlüssel bereits vorhanden ist die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>wird durch das Festlegen der <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> Eigenschaft überschreibt den alten Wert.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Im Gegensatz dazu die <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> Methode vorhandene Elemente nicht geändert.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Die Elemente eines eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt nach Schlüsseln sortiert sind entweder nach einem bestimmten <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> -Implementierung angeben, wann die <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> erstellten oder entsprechend der <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Implementierung, die die Schlüssel selbst.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Ein Schlüssel kann nicht <ph id="ph1">`null`</ph>, aber ein Wert sein kann.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang für unsortierte Daten, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">Es ist eine O (Log <ph id="ph1">`n`</ph>) Vorgang, wenn das neue Element am Ende der Liste hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">Wenn die Einfügung eine Größe verursacht, wird der Vorgang ist O (<ph id="ph1">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The following code example shows how to add elements to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Hinzufügen von Elementen einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>An element with the specified <ph id="ph1">&lt;paramref name="key" /&gt;</ph> already exists in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ein Element mit dem angegebenen <ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist bereits im <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt vorhanden.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is set to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface, and <ph id="ph3">&lt;paramref name="key" /&gt;</ph> does not implement the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> ist auf die Verwendung der <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle festgelegt, und <ph id="ph3">&lt;paramref name="key" /&gt;</ph> implementiert die <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph>-Schnittstelle nicht.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>There is not enough available memory to add the element to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Es ist nicht genügend Arbeitsspeicher verfügbar, um das Element zu <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Der Vergleich löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>Gets or sets the capacity of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft die Kapazität eines <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekts ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Die Anzahl von Elementen, die das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt enthalten kann.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt speichern kann.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> ist die Anzahl der Elemente, die tatsächlich in der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> ist immer größer als oder gleich <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> überschreitet <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> beim Hinzufügen von Elementen, die Kapazität wird automatisch erhöht, indem Neuzuordnen des internen Arrays vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">Die Kapazität kann verringert werden, durch den Aufruf <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> oder durch Festlegen der <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> Eigenschaft explizit.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">Wenn der Wert des <ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> explizit festgelegt ist, des internen Arrays ist auch zugewiesen, um die angegebene Kapazität aufzunehmen.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang. Festlegen der Eigenschaft ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die neue Kapazität.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>The value assigned is less than the current number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Der zugewiesene Wert ist kleiner als die derzeitige Anzahl der Elemente im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">Im System ist nicht genügend Arbeitsspeicher verfügbar.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>Removes all elements from a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Entfernt alle Elemente aus einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> 0 (null) festgelegt ist und Verweise auf andere Objekte von Elementen in der Auflistung werden ebenfalls freigegeben.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> bleibt unverändert.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, call <ph id="ph2">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or set the <ph id="ph3">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property directly.</source>
          <target state="translated">Die Kapazität des Zurücksetzen der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> -Objekt, rufen Sie <ph id="ph2">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> oder legen Sie die <ph id="ph3">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> -Eigenschaft direkt.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> to the default capacity.</source>
          <target state="translated">Indem Sie eine leere <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> legt die Kapazität der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> auf die festgelegte Standardkapazität.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>The following code example shows how to trim the unused portions of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to clear the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die ungenutzte Bereiche verkürzt eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> -Objekt und zum Löschen der Werte der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clone">
          <source>Creates a shallow copy of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Erstellt eine flache Kopie eines <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Eine flache Kopie des <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</source>
          <target state="translated">Eine flache Kopie einer Auflistung kopiert nur die Elemente der Auflistung, ob sie die Verweistypen sind, oder Wert eingibt, aber die Objekte, denen auf die verwiesen wird nicht kopiert.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Die Verweise in der neuen Auflistung zeigen auf dieselben Objekte, denen auf die Verweise in der ursprünglichen Auflistung verweisen.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Im Gegensatz dazu eine tiefe Kopie einer Auflistung kopiert die Elemente aus, und alles, was durch die Elemente direkt oder indirekt verweist.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific key.</source>
          <target state="translated">Ermittelt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt einen bestimmten Schlüssel enthält.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ein Element mit dem angegebenen <ph id="ph3">&lt;paramref name="key" /&gt;</ph> enthält, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Die Elemente eines eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt nach Schlüsseln sortiert sind entweder nach einem bestimmten <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> -Implementierung angeben, wann die <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> erstellten oder entsprechend der <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Implementierung, die die Schlüssel selbst.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> implements <ph id="ph2">&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> implementiert <ph id="ph2">&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>It behaves exactly as <ph id="ph1">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>.</source>
          <target state="translated">Sie verhält sich genau wie <ph id="ph1">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode verwendet einen binären Suchalgorithmus; Diese Methode ist daher eine O (Log <ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnend mit .NET Framework 2.0, verwendet diese Methode Objekte in der Auflistung <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden auf <ph id="ph3">`item`</ph> zu bestimmen, ob das Element vorhanden ist.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In früheren Versionen von .NET Framework-diese Entscheidung wurde versucht, mithilfe der <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden der <ph id="ph3">`item`</ph> Parameter für die Objekte in der Auflistung.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, um zu bestimmen, ob ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ein bestimmtes Element enthält.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Der Vergleich löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific key.</source>
          <target state="translated">Ermittelt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt einen bestimmten Schlüssel enthält.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ein Element mit dem angegebenen <ph id="ph3">&lt;paramref name="key" /&gt;</ph> enthält, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Die Elemente eines eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt nach Schlüsseln sortiert sind entweder nach einem bestimmten <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> -Implementierung angeben, wann die <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> erstellten oder entsprechend der <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Implementierung, die die Schlüssel selbst.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>This method behaves exactly as the <ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode verhält sich genauso wie die <ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode verwendet einen binären Suchalgorithmus; Diese Methode ist daher eine O (Log <ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnend mit .NET Framework 2.0, verwendet diese Methode Objekte in der Auflistung <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden auf <ph id="ph3">`item`</ph> zu bestimmen, ob das Element vorhanden ist.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In früheren Versionen von .NET Framework-diese Entscheidung wurde versucht, mithilfe der <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden der <ph id="ph3">`item`</ph> Parameter für die Objekte in der Auflistung.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, um zu bestimmen, ob ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ein bestimmtes Element enthält.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Der Vergleich löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zu suchende Wert.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Wert kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific value.</source>
          <target state="translated">Ermittelt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt einen bestimmten Wert enthält.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ein Element mit dem angegebenen <ph id="ph3">&lt;paramref name="value" /&gt;</ph> enthält, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The values of the elements of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are compared to the specified value using the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Die Werte der Elemente des der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt verglichen werden, um den angegebenen Wert mit dem <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. aus diesem Grund ist die durchschnittliche Ausführungszeit proportional zur <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist, also eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnend mit .NET Framework 2.0, verwendet diese Methode Objekte in der Auflistung <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden auf <ph id="ph3">`item`</ph> zu bestimmen, ob das Element vorhanden ist.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In früheren Versionen von .NET Framework-diese Entscheidung wurde versucht, mithilfe der <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden der <ph id="ph3">`item`</ph> Parameter für die Objekte in der Auflistung.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, um zu bestimmen, ob ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt ein bestimmtes Element enthält.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> object that is the destination of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>-Objekt, das das Ziel der aus <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> kopierten <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekte darstellt.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>Copies <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> elements to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> object, starting at the specified index in the array.</source>
          <target state="translated">Kopiert <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Elemente in ein eindimensionales <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>-Objekt, beginnend mit dem angegebenen Index im Array.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The key/value pairs are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> object in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Schlüssel/Wert-Paare werden kopiert, um die <ph id="ph1">&lt;xref:System.Array&gt;</ph> Objekt in der gleichen Reihenfolge, in dem sich der Enumerator durchläuft, die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>To copy only the keys in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, use <ph id="ph2">`SortedList.Keys.CopyTo`</ph>.</source>
          <target state="translated">So kopieren Sie nur die Schlüssel in der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, verwenden Sie <ph id="ph2">`SortedList.Keys.CopyTo`</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>To copy only the values in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, use <ph id="ph2">`SortedList.Values.CopyTo`</ph>.</source>
          <target state="translated">So kopieren Sie nur die Werte in der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, verwenden Sie <ph id="ph2">`SortedList.Values.CopyTo`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The following code example shows how to copy the values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object into a one-dimensional <ph id="ph2">&lt;xref:System.Array&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie So kopieren Sie die Werte in einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt in ein eindimensionales <ph id="ph2">&lt;xref:System.Array&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist mehrdimensional.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der aus dem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Quellobjekt zu kopierenden Elemente ist größer als der verfügbare Platz von <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> kann nicht automatisch in den Typ des Ziel-<ph id="ph2">&lt;paramref name="array" /&gt;</ph> umgewandelt werden.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Count">
          <source>Gets the number of elements contained in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft die Anzahl der Elemente ab, die in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt enthalten sind.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Die Anzahl der Elemente, die im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt enthalten sind.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>Each element is a key/value pair that can be accessed as a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">Jedes Element ist ein Schlüssel/Wert-Paar, das als zugegriffen werden kann ein <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt speichern kann.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> ist die Anzahl der Elemente, die tatsächlich in der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> ist immer größer als oder gleich <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> überschreitet <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> beim Hinzufügen von Elementen, die Kapazität wird automatisch erhöht, indem Neuzuordnen des internen Arrays vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">Der nullbasierte Index des abzurufenden Werts.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>Gets the value at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft den Wert am angegebenen Index in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The value at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Der Wert am angegebenen Index im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Die Sequenz der Index basiert auf der Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, erfolgt dieses einfügen in <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in der richtigen Reihenfolge und die Indizierung entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Wenn ein Element entfernt wird, die Indizierung ebenfalls entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Aus diesem Grund kann der Index eines bestimmten Schlüssel/Wert-Paars ändern, wenn Elemente hinzugefügt oder daraus entfernt werden die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen eines oder aller Schlüssel oder Werte in einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object that iterates through a <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Gibt ein <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph>-Objekt zurück, das ein <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt durchläuft.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph>-Objekt für das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph>-Anweisung der Programmiersprache C# (<ph id="ph2">`for each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> setzt den Enumerator ebenfalls auf diese Position zurück.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">An dieser Position ist <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> nicht definiert.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Daher muss der Enumerator durch einen Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> wieder auf das erste Element der Auflistung festzulegen, können Sie <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> gefolgt von <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">Der nullbasierte Index des abzurufenden Schlüssels.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>Gets the key at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft den Schlüssel am angegebenen Index in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The key at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Der Schlüssel am angegebenen Index im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Die Sequenz der Index basiert auf der Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, erfolgt dieses einfügen in <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in der richtigen Reihenfolge und die Indizierung entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Wenn ein Element entfernt wird, die Indizierung ebenfalls entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Aus diesem Grund kann der Index eines bestimmten Schlüssel/Wert-Paars ändern, wenn Elemente hinzugefügt oder daraus entfernt werden die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen eines oder aller Schlüssel oder Werte in einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKeyList">
          <source>Gets the keys in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft die Schlüssel in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKeyList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>-Objekt, das die Schlüssel im <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt enthält.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> object is a read-only view of the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Das zurückgegebene <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> Objekt ist eine schreibgeschützte Ansicht der Schlüssel aus der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">Änderungen an den zugrunde liegenden <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> werden sofort dargestellt, der <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The elements of the returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> are sorted in the same order as the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Die Elemente der zurückgegebenen <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> werden in der gleichen Reihenfolge wie die Schlüssel sortiert die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> property, but returns an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> object.</source>
          <target state="translated">Diese Methode ist vergleichbar mit der <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> -Eigenschaft, aber gibt eine <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> -Objekt anstelle einer <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen eines oder aller Schlüssel oder Werte in einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetValueList">
          <source>Gets the values in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft die Werte in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetValueList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>-Objekt, das die Werte des <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekts enthält.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> object is a read-only view of the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Das zurückgegebene <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> Objekt ist eine schreibgeschützte Ansicht der Werte von der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">Änderungen an den zugrunde liegenden <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> werden sofort dargestellt, der <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The elements of the returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> are sorted in the same order as the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Die Elemente der zurückgegebenen <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> werden in der gleichen Reihenfolge wie die Werte sortiert die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.Values%2A&gt;</ph> property, but returns an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> object.</source>
          <target state="translated">Diese Methode ist vergleichbar mit der <ph id="ph1">&lt;xref:System.Collections.SortedList.Values%2A&gt;</ph> -Eigenschaft, aber gibt eine <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> -Objekt anstelle einer <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen eines oder aller Schlüssel oder Werte in einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zu suchende Schlüssel.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Returns the zero-based index of the specified key in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Gibt den nullbasierten Index des angegebenen Schlüssels in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zurück.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The zero-based index of the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter, if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object; otherwise, -1.</source>
          <target state="translated">Der nullbasierte Index des <ph id="ph1">&lt;paramref name="key" /&gt;</ph>-Parameters, wenn <ph id="ph2">&lt;paramref name="key" /&gt;</ph> im <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt gefunden wurde, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created, or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Die Elemente eines eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt nach Schlüsseln sortiert sind entweder nach einem bestimmten <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> -Implementierung angeben, wann die <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> erstellt wird, oder entsprechend der <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Implementierung, die die Schlüssel selbst.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Die Sequenz der Index basiert auf der Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, erfolgt dieses einfügen in <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in der richtigen Reihenfolge und die Indizierung entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Wenn ein Element entfernt wird, die Indizierung ebenfalls entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Aus diesem Grund kann der Index eines bestimmten Schlüssel/Wert-Paars ändern, wenn Elemente hinzugefügt oder daraus entfernt werden die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode verwendet einen binären Suchalgorithmus; Diese Methode ist daher eine O (Log <ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnend mit .NET Framework 2.0, verwendet diese Methode Objekte in der Auflistung <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden auf <ph id="ph3">`item`</ph> zu bestimmen, ob das Element vorhanden ist.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In früheren Versionen von .NET Framework-diese Entscheidung wurde versucht, mithilfe der <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden der <ph id="ph3">`item`</ph> Parameter für die Objekte in der Auflistung.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The following code example shows how to determine the index of a key or a value in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie bestimmt den Index eines Schlüssels oder eines Werts in einem <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Der Vergleich löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Der im <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zu suchende Wert.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Wert kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Returns the zero-based index of the first occurrence of the specified value in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Gibt den nullbasierten Index des ersten Vorkommens des angegebenen Werts in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zurück.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The zero-based index of the first occurrence of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter, if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object; otherwise, -1.</source>
          <target state="translated">Der nullbasierte Index des ersten Vorkommens des <ph id="ph1">&lt;paramref name="value" /&gt;</ph>-Parameters in der Auflistung, sofern <ph id="ph2">&lt;paramref name="value" /&gt;</ph> im <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt gefunden wurde, andernfalls -1.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Die Sequenz der Index basiert auf der Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, erfolgt dieses einfügen in <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in der richtigen Reihenfolge und die Indizierung entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Wenn ein Element entfernt wird, die Indizierung ebenfalls entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Aus diesem Grund kann der Index eines bestimmten Schlüssel/Wert-Paars ändern, wenn Elemente hinzugefügt oder daraus entfernt werden die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The values of the elements of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are compared to the specified value using the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Die Werte der Elemente des der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> verglichen werden, um den angegebenen Wert mit dem <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>This method uses a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode verwendet eine lineare Suche. Diese Methode ist daher eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnend mit .NET Framework 2.0, verwendet diese Methode Objekte in der Auflistung <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden auf <ph id="ph3">`item`</ph> zu bestimmen, ob das Element vorhanden ist.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In früheren Versionen von .NET Framework-diese Entscheidung wurde versucht, mithilfe der <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> Methoden der <ph id="ph3">`item`</ph> Parameter für die Objekte in der Auflistung.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The following code example shows how to determine the index of a key or a value in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie bestimmt den Index eines Schlüssels oder eines Werts in einem <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object has a fixed size.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt eine feste Größe hat.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt eine feste Größe hat, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">Eine Auflistung mit fester Größe lässt das Hinzufügen oder Entfernen von Elementen nach dem die Auflistung erstellt, aber die Änderung von vorhandenen Elementen lässt nicht zu.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Eine Auflistung mit fester Größe ist einfach eine Auflistung mit einem Wrapper, der verhindert, dass hinzufügen und Entfernen von Elementen. Deshalb spiegelt die Auflistung mit fester Größe zum Änderungen vorgenommen werden, auf die zugrunde liegende Auflistung, z. B. das Hinzufügen oder Entfernen von Elementen, die Änderungen.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt schreibgeschützt ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Eine Auflistung, die schreibgeschützt ist, ist eine Auflistung mit einem Wrapper, der verhindert, dass die Auflistung ändern; Wenn Änderungen an der zugrunde liegenden Auflistung vorgenommen werden, spiegelt die schreibgeschützte Auflistung daher diese Änderungen wider.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Gets a value indicating whether access to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is synchronized (thread safe).</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Zugriff auf ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt synchronisiert (threadsicher) ist.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Zugriff auf das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt synchronisiert (threadsicher) ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>To guarantee the thread safety of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Um die Threadsicherheit ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> -Objekt, alle Operationen müssen ausgeführt werden, über den Wrapper zurückgegebene die <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The following code example shows how to lock a collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, das eine Auflistung mit Sperren der <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> Eigenschaft während der gesamten Enumeration.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The following code example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, determine whether a <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Synchronisieren einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt, zu bestimmen, ob eine <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> synchronisiert ist, und verwenden Sie eine synchronisierte <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The key associated with the value to get or set.</source>
          <target state="translated">Der Schlüssel, der dem abzurufenden oder festzulegenden Wert zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Gets and sets the value associated with a specific key in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft den Wert ab, der einem bestimmten Schlüssel in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zugeordnet ist, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The value associated with the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object, if <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is found; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;paramref name="key" /&gt;</ph> gefunden wird, der dem <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Parameter zugeordnete Wert im <ph id="ph3">&lt;paramref name="key" /&gt;</ph>-Objekt, andernfalls <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property to access a specific element in a collection by specifying the following syntax: <ph id="ph2">`myCollection[key]`</ph>.</source>
          <target state="translated">Sie können die <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> Eigenschaft, um ein bestimmtes Element in einer Auflistung zuzugreifen, indem Sie die folgende Syntax angeben: <ph id="ph2">`myCollection[key]`</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>You can also use this property to add new elements by setting the value of a key that does not exist in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue)`</ph>.</source>
          <target state="translated">Sie können diese Eigenschaft auch verwenden, zum Hinzufügen neuer Elemente durch Festlegen des Werts eines Schlüssels, der nicht in vorhanden ist die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt (z. B. <ph id="ph2">`myCollection["myNonexistentKey"] = myValue)`</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Jedoch, wenn der angegebene Schlüssel bereits vorhanden ist die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>wird durch das Festlegen der <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> Eigenschaft überschreibt den alten Wert.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Im Gegensatz dazu die <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> Methode vorhandene Elemente nicht geändert.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Ein Schlüssel kann nicht <ph id="ph1">`null`</ph>, aber ein Wert sein kann.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the <ph id="ph4">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> method or the <ph id="ph5">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph> method to determine if the key exists in the list.</source>
          <target state="translated">Zur Unterscheidung <ph id="ph1">`null`</ph> zurückgegeben wird, weil der angegebene Schlüssel nicht gefunden wird und <ph id="ph2">`null`</ph> zurückgegeben wird, weil der Wert des angegebenen Schlüssels ist <ph id="ph3">`null`</ph>, verwenden Sie die <ph id="ph4">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> Methode oder die <ph id="ph5">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph> Methode, um festzustellen, wo der Schlüssel in der Liste vorhanden ist.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Die Elemente eines eine <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> nach Schlüsseln sortiert sind entweder nach einem bestimmten <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> -Implementierung angeben, wann die <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> erstellten oder entsprechend der <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> Implementierung, die die Schlüssel selbst.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Die Programmiersprache c# verwendet das Schlüsselwort der Indexer definieren die <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementiert <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist eine O (Log <ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Festlegen der Eigenschaft ist eine O (Log <ph id="ph1">`n`</ph>) Vorgang, wenn der Schlüssel bereits in der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">Wenn der Schlüssel nicht in der Liste enthalten ist, Festlegen der Eigenschaft ist eine O (<ph id="ph1">`n`</ph>) Vorgang für unsortierte Daten oder O (Log <ph id="ph2">`n`</ph>) Wenn das neue Element am Ende der Liste hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">Wenn die Einfügung eine Größe verursacht, wird der Vorgang ist O (<ph id="ph1">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">Die Eigenschaft wird festgelegt, und das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Die Eigenschaft wird festgelegt, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist in der Auflistung nicht vorhanden, und <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>There is not enough available memory to add the element to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Es ist nicht genügend Arbeitsspeicher verfügbar, um das Element zu <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Der Vergleich löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Keys">
          <source>Gets the keys in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft die Schlüssel in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>-Objekt, das die Schlüssel im <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt enthält.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is a read-only view of the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> Objekt ist eine schreibgeschützte Ansicht der Schlüssel aus der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Änderungen an den zugrunde liegenden <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> werden sofort dargestellt, der <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted in the same order as the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Die Elemente der <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> werden in der gleichen Reihenfolge wie die Schlüssel sortiert die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>This property is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;</ph> method, but returns an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> object.</source>
          <target state="translated">Diese Eigenschaft ähnelt der <ph id="ph1">&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;</ph> -Methode, aber gibt eine <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> -Objekt anstelle einer <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">Der Schlüssel des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>Removes the element with the specified key from a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Entfernt das Element mit dem angegebenen Schlüssel aus einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> remains unchanged.</source>
          <target state="translated">Wenn das <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>-Objekt kein Element mit dem angegebenen Schlüssel enthält, bleibt das <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> unverändert.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">Es werden keine Ausnahmen ausgelöst.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">In Auflistungen mit zusammenhängenden Elementen, beispielsweise Listen, wird die nach dem Entfernen eines Elements entstandene Lücke durch Verschieben aller nachfolgenden Elemente gefüllt.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Wenn die Auflistung indiziert ist, werden auch die Indizes der verschobenen Elemente aktualisiert.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Dies gilt nicht für Auflistungen, in denen die Elemente konzeptionell in Buckets gruppiert sind, beispielsweise Hashtabellen.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The following code example shows how to remove elements from a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Entfernen von Elementen aus einem <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Der nullbasierte Index des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Entfernt das Element am angegebenen Index aus einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Die Sequenz der Index basiert auf der Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, erfolgt dieses einfügen in <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in der richtigen Reihenfolge und die Indizierung entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Wenn ein Element entfernt wird, die Indizierung ebenfalls entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Aus diesem Grund kann der Index eines bestimmten Schlüssel/Wert-Paars ändern, wenn Elemente hinzugefügt oder daraus entfernt werden die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">In Auflistungen mit zusammenhängenden Elementen, beispielsweise Listen, wird die nach dem Entfernen eines Elements entstandene Lücke durch Verschieben aller nachfolgenden Elemente gefüllt.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Wenn die Auflistung indiziert ist, werden auch die Indizes der verschobenen Elemente aktualisiert.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Dies gilt nicht für Auflistungen, in denen die Elemente konzeptionell in Buckets gruppiert sind, beispielsweise Hashtabellen.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The following code example shows how to remove elements from a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Entfernen von Elementen aus einem <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The zero-based index at which to save <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der nullbasierte Index, an dem <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> gespeichert werden soll.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to save into the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das im <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt gespeichert werden soll.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Wert kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>Replaces the value at a specific index in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ersetzt den Wert an einem bestimmten Index in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">Die Sequenz der Index basiert auf der Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Wenn ein Element hinzugefügt wird, erfolgt dieses einfügen in <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in der richtigen Reihenfolge und die Indizierung entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Wenn ein Element entfernt wird, die Indizierung ebenfalls entsprechend angepasst.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Aus diesem Grund kann der Index eines bestimmten Schlüssel/Wert-Paars ändern, wenn Elemente hinzugefügt oder daraus entfernt werden die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The following code example shows how to replace the value of an existing element in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Ersetzen des Werts eines vorhandenen Elements in einem <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> liegt außerhalb des Bereichs der gültigen Indizes für das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object to synchronize.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt, das synchronisiert werden soll.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Returns a synchronized (thread-safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Gibt einen synchronisierten (threadsicheren) Wrapper für ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt zurück.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>A synchronized (thread-safe) wrapper for the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ein synchronisierter (threadsicherer) Wrapper das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>To guarantee the thread safety of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, all operations must be done through this wrapper only.</source>
          <target state="translated">Um die Threadsicherheit ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> -Objekt, alle Operationen müssen über diesen Wrapper nur ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> Eigenschaft während der gesamten Enumeration.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The following code example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, determine whether a <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Synchronisieren einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt, zu bestimmen, ob eine <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> synchronisiert ist, und verwenden Sie eine synchronisierte <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Gets an object that can be used to synchronize access to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft ein Objekt ab, mit dem der Zugriff auf ein <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ein Objekt, mit dem der Zugriff auf das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Eine synchronisierte Version der Erstellung der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> -Objekts die <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Abgeleitete Klassen können jedoch eigene synchronisierte Version der Bereitstellen der <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> mithilfe der <ph id="ph2">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Die Synchronisierungscode dürfen Vorgänge auf die <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> von der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>, nicht direkt auf die <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Dies gewährleistet die einwandfreie Funktion von Auflistungen, die von anderen Objekten abgeleitet sind.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Es Auflistungsinstanz ordnungsgemäße Synchronisierung mit anderen Threads, die gleichzeitig eventuell die <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> Eigenschaft während der gesamten Enumeration.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> zurück, der <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> durchläuft.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> für das <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, c#]</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph>-Anweisung der Programmiersprache C# (<ph id="ph2">`for each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> setzt den Enumerator ebenfalls auf diese Position zurück.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">An dieser position Aufrufen <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Daher muss der Enumerator durch einen Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>Aufrufen <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> wieder auf das erste Element der Auflistung festzulegen, können Sie <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> gefolgt von <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Wenn die Auflistung, zwischen geändert wird <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt das Element, das auf festgelegt, wird, auch wenn der Enumerator bereits ungültig ist.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>Sets the capacity to the actual number of elements in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Legt die Kapazität auf die tatsächliche Anzahl der in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt enthaltenen Elemente fest.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">Diese Methode kann verwendet werden, um Speicher für eine Auflistung Mehraufwand zu minimieren, wenn die Auflistung keine neuen Elemente hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.SortedList.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">Zurücksetzen einer <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt an den Ausgangszustand Aufruf der <ph id="ph2">&lt;xref:System.Collections.SortedList.Clear%2A&gt;</ph> Methode vor dem Aufruf <ph id="ph3">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> to the default capacity.</source>
          <target state="translated">Indem Sie eine leere <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> legt die Kapazität der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> auf die festgelegte Standardkapazität.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The following code example shows how to trim the unused portions of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to clear its values.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die ungenutzte Bereiche verkürzt ein <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> -Objekt und seine Werte löschen.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> hat eine feste Größe.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Values">
          <source>Gets the values in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ruft die Werte in einem <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>-Objekt, das die Werte des <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>-Objekts enthält.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is a read-only view of the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> Objekt ist eine schreibgeschützte Ansicht der Werte von der <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Änderungen an den zugrunde liegenden <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> werden sofort dargestellt, der <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted in the same order as the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Die Elemente der <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> werden in der gleichen Reihenfolge wie die Werte sortiert die <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>This property is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;</ph> method, but returns an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> object.</source>
          <target state="translated">Diese Eigenschaft ähnelt der <ph id="ph1">&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;</ph> -Methode, aber gibt eine <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> -Objekt anstelle einer <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>