<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Stack.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b364bfdec5920f343b57c572dbfbe97d9389647b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b364bfdec5920f343b57c572dbfbe97d9389647b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Stack">
          <source>Represents a simple last-in-first-out (LIFO) non-generic collection of objects.</source>
          <target state="translated">Stellt eine einfache Last-in-First-out-Auflistung (LIFO) von Objekten dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>For the generic version of this collection, see <ph id="ph1">&lt;xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die generische Version dieser Auflistung finden Sie unter <ph id="ph1">&lt;xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> ist die Anzahl der Elemente der <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, die Kapazität wird automatisch erhöht, nach Bedarf über die neuzuordnung.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> is less than the capacity of the stack, <ph id="ph2">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> is an O(1) operation.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> ist kleiner als die Kapazität des Stapels <ph id="ph2">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>If the capacity needs to be increased to accommodate the new element, <ph id="ph1">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> becomes an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Wenn die Kapazität erhöht werden, um das neue Element aufzunehmen muss <ph id="ph1">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> wird eine O (<ph id="ph2">`n`</ph>)-Vorgang, in dem <ph id="ph3">`n`</ph> ist <ph id="ph4">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source><ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph> is an O(1) operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph> ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source><ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> akzeptiert <ph id="ph2">`null`</ph> als gültigen Wert und lässt doppelte Elemente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>The following example shows how to create and add values to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> and how to display its values.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Erstellen und Hinzufügen von Werten für eine <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> und wie seine Werte angezeigt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Öffentliche statische (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) Member dieses Typs sind threadsicher.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /&gt;</ph> method.</source>
          <target state="translated">Um die Threadsicherheit der <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>, alle Operationen müssen ausgeführt werden, über den Wrapper zurückgegebene die <ph id="ph2">&lt;see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Collections.Stack">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> class that is empty and has the default initial capacity.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>-Klasse, die die Standardanfangskapazität aufweist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Dieser Konstruktor ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to copy elements from.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>, aus der Elemente kopiert werden sollen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und deren anfängliche Kapazität der Anzahl der kopierten Elemente entspricht.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> in the same order they are read by the <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> of the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Die Elemente kopiert werden, auf die <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> in der gleichen Reihenfolge, die sie vom gelesen werden die <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> von der <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente im <ph id="ph3">`col`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="col" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="col" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> can contain.</source>
          <target state="translated">Die anfängliche Anzahl von Elementen, die das <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> enthalten kann.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</source>
          <target state="translated">Initialisiert eine neue, leere Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>-Klasse, die über die angegebene anfängliche Kapazität, mindestens aber über die anfängliche Standardkapazität verfügt.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> can hold.</source>
          <target state="translated">Die Kapazität einer <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> ist die Anzahl der Elemente, die die <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> aufnehmen kann.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wenn Elemente hinzugefügt werden eine <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">`initialCapacity`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Clear">
          <source>Removes all objects from the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Entfernt alle Objekte aus dem <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> ist auf 0 (null) festgelegt, und Verweise auf andere Objekte von Elementen in der Auflistung werden ebenfalls freigegeben.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clear">
          <source>The following example shows how to clear the values of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Löschen der Werte der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Clone">
          <source>Creates a shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine flache Kopie von <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Eine flache Kopie von <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">Eine flache Kopie einer Auflistung kopiert nur die Elemente der Auflistung, ob sie Verweis- oder Werttypen sind, aber die Objekte, denen auf die verwiesen wird nicht kopiert.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Die Verweise in der neuen Auflistung zeigen auf dieselben Objekte, denen auf die Verweise in der ursprünglichen Auflistung verweisen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Im Gegensatz dazu eine tiefe Kopie einer Auflistung kopiert die Elemente aus, und alles, was durch die Elemente direkt oder indirekt verweist.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Wert kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Bestimmt, ob sich ein Element in <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> befindet.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> in der <ph id="ph3">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> gefunden wird, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>This method determines equality by calling the <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Diese Methode bestimmt die Gleichheit durch Aufrufen der <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (<ph id="ph1">`n`</ph>)-Vorgang, in dem <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method tests for equality by passing the <ph id="ph1">`obj`</ph> argument to the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method of individual objects in the collection.</source>
          <target state="translated">Beginnend mit .NET Framework 2.0, diese Methode testet auf Gleichheit durch Übergeben der <ph id="ph1">`obj`</ph> Argument an die <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> -Methode der einzelnen Objekte in der Auflistung.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using passing the individual items in the collection to the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> method of the <ph id="ph2">`obj`</ph> argument.</source>
          <target state="translated">In früheren Versionen von .NET Framework-diese Entscheidung wurde versucht, mithilfe der einzelnen Elemente in der Auflistung zu übergeben der <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> Methode der <ph id="ph2">`obj`</ph> Argument.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">Kopiert <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> in ein vorhandenes eindimensionales <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, beginnend beim angegebenen Arrayindex.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>.</source>
          <target state="translated">Die Elemente kopiert werden, auf das Array in der Last in First Out (LIFO)-Reihenfolge die Elemente einer Folge von Aufrufen an zurückgegebenes <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The following example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> into a one-dimensional array.</source>
          <target state="translated">Das folgende Beispiel zeigt die Vorgehensweise beim Kopieren einer <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> in ein eindimensionales Array.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist mehrdimensional.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> ist größer als der verfügbare Platz vom <ph id="ph2">&lt;paramref name="index" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>s.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> kann nicht automatisch in den Typ des Ziel-<ph id="ph2">&lt;paramref name="array" /&gt;</ph> umgewandelt werden.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Stack.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Ruft die Anzahl der Elemente ab, die in <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente, die in <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>The capacity is the number of elements that the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> can store.</source>
          <target state="translated">Die Kapazität ist die Anzahl der Elemente, die die <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> speichern können.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> ist die Anzahl der Elemente, die tatsächlich in der <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Die Kapazität ist immer größer als oder gleich <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> überschreitet die Kapazität beim Hinzufügen von Elementen, die Kapazität wird automatisch durch Neuzuordnen des internen Arrays vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> für das <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> für das <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, c#]</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph>-Anweisung der Programmiersprache C# (<ph id="ph2">`for each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> setzt den Enumerator ebenfalls auf diese Position zurück.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">An dieser Position ist <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> nicht definiert.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Daher muss der Enumerator durch einen Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> wieder auf das erste Element der Auflistung festzulegen, können Sie <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> gefolgt von <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Collections.Stack.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> synchronisiert (threadsicher) ist.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if access to the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Zugriff auf die <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> synchronisiert (threadsicher) ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.Stack.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Um die Threadsicherheit der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, alle Operationen müssen ausgeführt werden, über den Wrapper zurückgegebene die <ph id="ph2">&lt;xref:System.Collections.Stack.Synchronized%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> während der gesamten Enumeration.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>The following example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, determine if a <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt die Vorgehensweise beim Synchronisieren einer <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, zu bestimmen, ob eine <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> synchronisiert ist, und verwenden Sie eine synchronisierte <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Peek">
          <source>Returns the object at the top of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> without removing it.</source>
          <target state="translated">Gibt das oberste Objekt von <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> zurück, ohne es zu entfernen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> at the top of the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Das oberste <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> von <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Diese Methode ähnelt der <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>-Methode, aber <ph id="ph2">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> ändert die <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> nicht.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source><ph id="ph1">`null`</ph> can be pushed onto the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph> geschoben werden können, auf die <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> als Platzhalter, wenn erforderlich.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source>To distinguish between a null value and the end of the stack, check the <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> property or catch the <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>, which is thrown when the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> is empty.</source>
          <target state="translated">Um einen null-Wert und dem Ende des Stapels zu unterscheiden, überprüfen Sie die <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> Eigenschaft oder ein Catch die <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>, die ausgelöst wird, wenn die <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> ist leer.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, or view the element at the top of the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie zum Hinzufügen von Elementen der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, entfernen Sie Elemente aus der <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, oder zeigen Sie das Element am Anfang der <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> ist leer.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Pop">
          <source>Removes and returns the object at the top of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Entfernt das oberste Objekt aus <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> und gibt es zurück.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Pop">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> removed from the top of the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das vom Anfang des <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> entfernt wurde.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Diese Methode ähnelt der <ph id="ph1">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph>-Methode, aber <ph id="ph2">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> ändert die <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> nicht.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source><ph id="ph1">`null`</ph> can be pushed onto the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph> geschoben werden können, auf die <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> als Platzhalter, wenn erforderlich.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source>To distinguish between a null value and the end of the stack, check the <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> property or catch the <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>, which is thrown when the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> is empty.</source>
          <target state="translated">Um einen null-Wert und dem Ende des Stapels zu unterscheiden, überprüfen Sie die <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> Eigenschaft oder ein Catch die <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>, die ausgelöst wird, wenn die <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> ist leer.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, or view the element at the top of the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie zum Hinzufügen von Elementen der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, entfernen Sie Elemente aus der <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, oder zeigen Sie das Element am Anfang der <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Pop">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is empty.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> ist leer.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to push onto the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das auf dem <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> abgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Wert kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>Inserts an object at the top of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Fügt ein Objekt am Anfang des <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> ein.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> bereits gleich der Kapazität, die Kapazität der <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> wird von automatisch Neuzuordnen des internen Arrays erhöht und die vorhandenen Elemente werden in das neue Array kopiert, bevor das neue Element hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source><ph id="ph1">`null`</ph> can be pushed onto the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph> geschoben werden können, auf die <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> als Platzhalter, wenn erforderlich.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>It occupies a slot in the stack and is treated like any object.</source>
          <target state="translated">Belegt einen Slot im Stapel, und wie ein Objekt behandelt.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> is less than the capacity of the stack, <ph id="ph2">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> is an O(1) operation.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> ist kleiner als die Kapazität des Stapels <ph id="ph2">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, <ph id="ph1">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> becomes an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Wenn die Kapazität erhöht werden, um das neue Element aufzunehmen muss <ph id="ph1">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> wird eine O (<ph id="ph2">`n`</ph>)-Vorgang, in dem <ph id="ph3">`n`</ph> ist <ph id="ph4">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, or view the element at the top of the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie zum Hinzufügen von Elementen der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, entfernen Sie Elemente aus der <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, oder zeigen Sie das Element am Anfang der <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> to synchronize.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>, die synchronisiert werden soll.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>Returns a synchronized (thread safe) wrapper for the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Gibt einen synchronisierten (threadsicheren) Wrapper für <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>A synchronized wrapper around the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Ein synchronisierter Wrapper um <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, all operations must be done through this wrapper.</source>
          <target state="translated">Um die Threadsicherheit der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, alle Vorgänge über diesen Wrapper erfolgen müssen.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> während der gesamten Enumeration.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>The following example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, determine if a <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt die Vorgehensweise beim Synchronisieren einer <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, zu bestimmen, ob eine <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> synchronisiert ist, und verwenden Sie eine synchronisierte <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source><ph id="ph1">&lt;paramref name="stack" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stack" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Collections.Stack.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Ruft ein Objekt ab, mit dem der Zugriff auf <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be used to synchronize access to the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, mit dem der Zugriff auf die <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>-Auflistung synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Collections.Stack.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Eine synchronisierte Version der Erstellung der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, verwenden Sie die <ph id="ph2">&lt;xref:System.Collections.Stack.Synchronized%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Abgeleitete Klassen können jedoch eigene synchronisierte Version der Bereitstellen der <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> mithilfe der <ph id="ph2">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Die Synchronisierungscode dürfen Vorgänge auf die <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> von der <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, nicht direkt auf die <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Dies gewährleistet die einwandfreie Funktion von Auflistungen, die von anderen Objekten abgeleitet sind.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> object.</source>
          <target state="translated">Es Auflistungsinstanz ordnungsgemäße Synchronisierung mit anderen Threads, die gleichzeitig eventuell die <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> während der gesamten Enumeration.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.ToArray">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> to a new array.</source>
          <target state="translated">Kopiert <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> in ein neues Array.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.ToArray">
          <source>A new array containing copies of the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Ein neues Array, das Kopien der Elemente aus <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.ToArray">
          <source>The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>.</source>
          <target state="translated">Die Elemente kopiert werden, auf das Array in der Last in First Out (LIFO)-Reihenfolge die Elemente einer Folge von Aufrufen an zurückgegebenes <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.ToArray">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.ToArray">
          <source>The following example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> into a one-dimensional array.</source>
          <target state="translated">Das folgende Beispiel zeigt die Vorgehensweise beim Kopieren einer <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> in ein eindimensionales Array.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>