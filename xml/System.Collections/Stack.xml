<Type Name="Stack" FullName="System.Collections.Stack">
  <TypeSignature Language="C#" Value="public class Stack : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Stack" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stack : ICloneable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Stack/StackDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8bb78-101">Stellt eine einfache Last-in-First-out-Auflistung (LIFO) von Objekten dar.</span><span class="sxs-lookup"><span data-stu-id="8bb78-101">Represents a simple last-in-first-out (LIFO) non-generic collection of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-102">Die generische Version dieser Auflistung finden Sie unter <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-102">For the generic version of this collection, see <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8bb78-103">Die Kapazität einer <xref:System.Collections.Stack> ist die Anzahl der Elemente der <xref:System.Collections.Stack> aufnehmen kann.</span><span class="sxs-lookup"><span data-stu-id="8bb78-103">The capacity of a <xref:System.Collections.Stack> is the number of elements the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="8bb78-104">Wenn Elemente hinzugefügt werden eine <xref:System.Collections.Stack>, die Kapazität wird automatisch erhöht, nach Bedarf über die neuzuordnung.</span><span class="sxs-lookup"><span data-stu-id="8bb78-104">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="8bb78-105">Wenn <xref:System.Collections.Stack.Count%2A> ist kleiner als die Kapazität des Stapels <xref:System.Collections.Stack.Push%2A> ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-105">If <xref:System.Collections.Stack.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Stack.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="8bb78-106">Wenn die Kapazität erhöht werden, um das neue Element aufzunehmen muss <xref:System.Collections.Stack.Push%2A> wird eine O (`n`)-Vorgang, in dem `n` ist <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-106">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Stack.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span> <span data-ttu-id="8bb78-107"><xref:System.Collections.Stack.Pop%2A> ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-107"><xref:System.Collections.Stack.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="8bb78-108"><xref:System.Collections.Stack> akzeptiert `null` als gültigen Wert und lässt doppelte Elemente.</span><span class="sxs-lookup"><span data-stu-id="8bb78-108"><xref:System.Collections.Stack> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-109">Im folgende Beispiel wird gezeigt, wie zum Erstellen und Hinzufügen von Werten für eine <xref:System.Collections.Stack> und wie seine Werte angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bb78-109">The following example shows how to create and add values to a <xref:System.Collections.Stack> and how to display its values.</span></span>  
  
 [!code-cpp[Classic Stack Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack Example/CS/source.cs#1)]
 [!code-vb[Classic Stack Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8bb78-110">Öffentliche statische (<see langword="Shared" /> in Visual Basic) Member dieses Typs sind threadsicher.</span><span class="sxs-lookup"><span data-stu-id="8bb78-110">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="8bb78-111">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</span><span class="sxs-lookup"><span data-stu-id="8bb78-111">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="8bb78-112">Um die Threadsicherheit der <see cref="T:System.Collections.Stack" />, alle Operationen müssen ausgeführt werden, über den Wrapper zurückgegebene die <see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="8bb78-112">To guarantee the thread safety of the <see cref="T:System.Collections.Stack" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /> method.</span></span>  
  
 <span data-ttu-id="8bb78-113">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="8bb78-113">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8bb78-114">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="8bb78-114">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8bb78-115">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-115">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Generic.Stack`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8bb78-116">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Stack" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bb78-116">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bb78-117">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Stack" />-Klasse, die die Standardanfangskapazität aufweist.</span><span class="sxs-lookup"><span data-stu-id="8bb78-117">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-118">Die Kapazität einer <xref:System.Collections.Stack> ist die Anzahl der Elemente, die die <xref:System.Collections.Stack> aufnehmen kann.</span><span class="sxs-lookup"><span data-stu-id="8bb78-118">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="8bb78-119">Wenn Elemente hinzugefügt werden eine <xref:System.Collections.Stack>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8bb78-119">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8bb78-120">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-120">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="8bb78-121">Dieser Konstruktor ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-121">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.ICollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::ICollection ^ col);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="col"><span data-ttu-id="8bb78-122">Die <see cref="T:System.Collections.ICollection" />, aus der Elemente kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-122">The <see cref="T:System.Collections.ICollection" /> to copy elements from.</span></span></param>
        <summary><span data-ttu-id="8bb78-123">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Stack" />-Klasse, die aus der angegebenen Auflistung kopierte Elemente enthält und deren anfängliche Kapazität der Anzahl der kopierten Elemente entspricht.</span><span class="sxs-lookup"><span data-stu-id="8bb78-123">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-124">Die Kapazität einer <xref:System.Collections.Stack> ist die Anzahl der Elemente, die die <xref:System.Collections.Stack> aufnehmen kann.</span><span class="sxs-lookup"><span data-stu-id="8bb78-124">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="8bb78-125">Wenn Elemente hinzugefügt werden eine <xref:System.Collections.Stack>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8bb78-125">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8bb78-126">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-126">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="8bb78-127">Die Elemente kopiert werden, auf die <xref:System.Collections.Stack> in der gleichen Reihenfolge, die sie vom gelesen werden die <xref:System.Collections.IEnumerator> von der <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-127">The elements are copied onto the <xref:System.Collections.Stack> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="8bb78-128">Dieser Konstruktor ist eine O (`n`) Vorgang, wobei `n` ist die Anzahl der Elemente im `col`.</span><span class="sxs-lookup"><span data-stu-id="8bb78-128">This constructor is an O(`n`) operation, where `n` is the number of elements in `col`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bb78-129"><paramref name="col" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-129"><paramref name="col" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int initialCapacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity"><span data-ttu-id="8bb78-130">Die anfängliche Anzahl von Elementen, die das <see cref="T:System.Collections.Stack" /> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="8bb78-130">The initial number of elements that the <see cref="T:System.Collections.Stack" /> can contain.</span></span></param>
        <summary><span data-ttu-id="8bb78-131">Initialisiert eine neue, leere Instanz der <see cref="T:System.Collections.Stack" />-Klasse, die über die angegebene anfängliche Kapazität, mindestens aber über die anfängliche Standardkapazität verfügt.</span><span class="sxs-lookup"><span data-stu-id="8bb78-131">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-132">Die Kapazität einer <xref:System.Collections.Stack> ist die Anzahl der Elemente, die die <xref:System.Collections.Stack> aufnehmen kann.</span><span class="sxs-lookup"><span data-stu-id="8bb78-132">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="8bb78-133">Wenn Elemente hinzugefügt werden eine <xref:System.Collections.Stack>, die Kapazität wird automatisch erhöht Neuzuordnen des internen Arrays wie erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8bb78-133">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="8bb78-134">Wenn die Größe der Auflistung geschätzt werden kann, die anfängliche Kapazität angeben entfällt die Notwendigkeit einer Reihe von größenänderungsvorgänge beim Hinzufügen von Elementen zum Ausführen der <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-134">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="8bb78-135">Dieser Konstruktor ist eine O (`n`) Vorgang, wobei `n` ist `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="8bb78-135">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bb78-136"><paramref name="initialCapacity" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="8bb78-136"><paramref name="initialCapacity" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bb78-137">Entfernt alle Objekte aus dem <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-137">Removes all objects from the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-138"><xref:System.Collections.Stack.Count%2A> ist auf 0 (null) festgelegt, und Verweise auf andere Objekte von Elementen in der Auflistung werden ebenfalls freigegeben.</span><span class="sxs-lookup"><span data-stu-id="8bb78-138"><xref:System.Collections.Stack.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="8bb78-139">Diese Methode ist eine O (`n`) Vorgang, wobei `n` ist <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-139">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-140">Im folgende Beispiel wird gezeigt, wie zum Löschen der Werte der <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-140">The following example shows how to clear the values of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bb78-141">Erstellt eine flache Kopie von <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-141">Creates a shallow copy of the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns><span data-ttu-id="8bb78-142">Eine flache Kopie von <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-142">A shallow copy of the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-143">Eine flache Kopie einer Auflistung kopiert nur die Elemente der Auflistung, ob sie Verweis- oder Werttypen sind, aber die Objekte, denen auf die verwiesen wird nicht kopiert.</span><span class="sxs-lookup"><span data-stu-id="8bb78-143">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="8bb78-144">Die Verweise in der neuen Auflistung zeigen auf dieselben Objekte, denen auf die Verweise in der ursprünglichen Auflistung verweisen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-144">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="8bb78-145">Im Gegensatz dazu eine tiefe Kopie einer Auflistung kopiert die Elemente aus, und alles, was durch die Elemente direkt oder indirekt verweist.</span><span class="sxs-lookup"><span data-stu-id="8bb78-145">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="8bb78-146">Diese Methode ist eine O (`n`) Vorgang, wobei `n` ist <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-146">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bb78-147">Das im <see cref="T:System.Collections.Stack" /> zu suchende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8bb78-147">The object to locate in the <see cref="T:System.Collections.Stack" />.</span></span> <span data-ttu-id="8bb78-148">Der Wert kann <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="8bb78-148">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8bb78-149">Bestimmt, ob sich ein Element in <see cref="T:System.Collections.Stack" /> befindet.</span><span class="sxs-lookup"><span data-stu-id="8bb78-149">Determines whether an element is in the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns>
          <span data-ttu-id="8bb78-150"><see langword="true" />, wenn das <paramref name="obj" /> in der <see cref="T:System.Collections.Stack" /> gefunden wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-150"><see langword="true" />, if <paramref name="obj" /> is found in the <see cref="T:System.Collections.Stack" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-151">Diese Methode bestimmt die Gleichheit durch Aufrufen der <xref:System.Object.Equals%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="8bb78-151">This method determines equality by calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8bb78-152">Diese Methode führt eine lineare Suche. Diese Methode ist daher eine O (`n`)-Vorgang, in dem `n` ist <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-152">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
 <span data-ttu-id="8bb78-153">Beginnend mit .NET Framework 2.0, diese Methode testet auf Gleichheit durch Übergeben der `obj` Argument an die <xref:System.Object.Equals%2A> -Methode der einzelnen Objekte in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="8bb78-153">Starting with the .NET Framework 2.0, this method tests for equality by passing the `obj` argument to the <xref:System.Object.Equals%2A> method of individual objects in the collection.</span></span> <span data-ttu-id="8bb78-154">In früheren Versionen von .NET Framework-diese Entscheidung wurde versucht, mithilfe der einzelnen Elemente in der Auflistung zu übergeben der <xref:System.Object.Equals%2A> Methode der `obj` Argument.</span><span class="sxs-lookup"><span data-stu-id="8bb78-154">In the earlier versions of the .NET Framework, this determination was made by using passing the individual items in the collection to the <xref:System.Object.Equals%2A> method of the `obj` argument.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8bb78-155">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Stack" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="8bb78-155">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Stack" />.</span></span> <span data-ttu-id="8bb78-156">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8bb78-156">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="8bb78-157">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="8bb78-157">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="8bb78-158">Kopiert <see cref="T:System.Collections.Stack" /> in ein vorhandenes eindimensionales <see cref="T:System.Array" />, beginnend beim angegebenen Arrayindex.</span><span class="sxs-lookup"><span data-stu-id="8bb78-158">Copies the <see cref="T:System.Collections.Stack" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-159">Die Elemente kopiert werden, auf das Array in der Last in First Out (LIFO)-Reihenfolge die Elemente einer Folge von Aufrufen an zurückgegebenes <xref:System.Collections.Stack.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-159">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Stack.Pop%2A>.</span></span>  
  
 <span data-ttu-id="8bb78-160">Diese Methode ist eine O (`n`) Vorgang, wobei `n` ist <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-160">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-161">Das folgende Beispiel zeigt die Vorgehensweise beim Kopieren einer <xref:System.Collections.Stack> in ein eindimensionales Array.</span><span class="sxs-lookup"><span data-stu-id="8bb78-161">The following example shows how to copy a <xref:System.Collections.Stack> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Stack.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bb78-162"><paramref name="array" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-162"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8bb78-163"><paramref name="index" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="8bb78-163"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8bb78-164"><paramref name="array" /> ist mehrdimensional.</span><span class="sxs-lookup"><span data-stu-id="8bb78-164"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="8bb78-165">- oder - </span><span class="sxs-lookup"><span data-stu-id="8bb78-165">-or-</span></span>  
  
 <span data-ttu-id="8bb78-166">Die Anzahl der Elemente in der Quell-<see cref="T:System.Collections.Stack" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Ziel-<paramref name="array" />s.</span><span class="sxs-lookup"><span data-stu-id="8bb78-166">The number of elements in the source <see cref="T:System.Collections.Stack" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8bb78-167">Der Typ der Quell-<see cref="T:System.Collections.Stack" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="8bb78-167">The type of the source <see cref="T:System.Collections.Stack" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.Stack.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bb78-168">Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.Stack" /> enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="8bb78-168">Gets the number of elements contained in the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <value><span data-ttu-id="8bb78-169">Die Anzahl der Elemente, die in <see cref="T:System.Collections.Stack" /> enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="8bb78-169">The number of elements contained in the <see cref="T:System.Collections.Stack" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-170">Die Kapazität ist die Anzahl der Elemente, die die <xref:System.Collections.Stack> speichern können.</span><span class="sxs-lookup"><span data-stu-id="8bb78-170">The capacity is the number of elements that the <xref:System.Collections.Stack> can store.</span></span> <span data-ttu-id="8bb78-171"><xref:System.Collections.Stack.Count%2A> ist die Anzahl der Elemente, die tatsächlich in der <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-171"><xref:System.Collections.Stack.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="8bb78-172">Die Kapazität ist immer größer als oder gleich <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-172">The capacity is always greater than or equal to <xref:System.Collections.Stack.Count%2A>.</span></span> <span data-ttu-id="8bb78-173">Wenn <xref:System.Collections.Stack.Count%2A> überschreitet die Kapazität beim Hinzufügen von Elementen, die Kapazität wird automatisch durch Neuzuordnen des internen Arrays vor dem Kopieren der alten Elemente und das Hinzufügen neuer Elemente.</span><span class="sxs-lookup"><span data-stu-id="8bb78-173">If <xref:System.Collections.Stack.Count%2A> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="8bb78-174">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-174">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bb78-175">Gibt einen <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.Stack" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="8bb78-175">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns><span data-ttu-id="8bb78-176">Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-176">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-177">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="8bb78-177">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8bb78-178">Die `foreach`-Anweisung der Programmiersprache C# (`for each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="8bb78-178">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="8bb78-179">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="8bb78-179">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8bb78-180">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8bb78-180">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8bb78-181">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="8bb78-181">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8bb78-182"><xref:System.Collections.IEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück.</span><span class="sxs-lookup"><span data-stu-id="8bb78-182"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="8bb78-183">An dieser Position ist <xref:System.Collections.IEnumerator.Current%2A> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="8bb78-183">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="8bb78-184">Daher muss der Enumerator durch einen Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <xref:System.Collections.IEnumerator.Current%2A> gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="8bb78-184">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="8bb78-185"><xref:System.Collections.IEnumerator.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bb78-185"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="8bb78-186"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.IEnumerator.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="8bb78-186"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8bb78-187">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="8bb78-187">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8bb78-188">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <xref:System.Collections.IEnumerator.MoveNext%2A> auch zurückgeben `false`.</span><span class="sxs-lookup"><span data-stu-id="8bb78-188">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8bb78-189">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.IEnumerator.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="8bb78-189">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="8bb78-190">Um <xref:System.Collections.IEnumerator.Current%2A> wieder auf das erste Element der Auflistung festzulegen, können Sie <xref:System.Collections.IEnumerator.Reset%2A> gefolgt von <xref:System.Collections.IEnumerator.MoveNext%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-190">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="8bb78-191">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="8bb78-191">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8bb78-192">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="8bb78-192">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="8bb78-193">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</span><span class="sxs-lookup"><span data-stu-id="8bb78-193">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="8bb78-194">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</span><span class="sxs-lookup"><span data-stu-id="8bb78-194">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="8bb78-195">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</span><span class="sxs-lookup"><span data-stu-id="8bb78-195">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="8bb78-196">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-196">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bb78-197">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.Stack" /> synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="8bb78-197">Gets a value indicating whether access to the <see cref="T:System.Collections.Stack" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="8bb78-198"><see langword="true" />, wenn der Zugriff auf die <see cref="T:System.Collections.Stack" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-198"><see langword="true" />, if access to the <see cref="T:System.Collections.Stack" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8bb78-199">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-199">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-200">Um die Threadsicherheit der <xref:System.Collections.Stack>, alle Operationen müssen ausgeführt werden, über den Wrapper zurückgegebene die <xref:System.Collections.Stack.Synchronized%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8bb78-200">To guarantee the thread safety of the <xref:System.Collections.Stack>, all operations must be done through the wrapper returned by the <xref:System.Collections.Stack.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="8bb78-201">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="8bb78-201">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8bb78-202">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="8bb78-202">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8bb78-203">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-203">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="8bb78-204">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <xref:System.Collections.Stack.SyncRoot%2A> während der gesamten Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8bb78-204">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="8bb78-205">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-205">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-206">Das folgende Beispiel zeigt die Vorgehensweise beim Synchronisieren einer <xref:System.Collections.Stack>, zu bestimmen, ob eine <xref:System.Collections.Stack> synchronisiert ist, und verwenden Sie eine synchronisierte <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-206">The following example shows how to synchronize a <xref:System.Collections.Stack>, determine if a <xref:System.Collections.Stack> is synchronized, and use a synchronized <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bb78-207">Gibt das oberste Objekt von <see cref="T:System.Collections.Stack" /> zurück, ohne es zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-207">Returns the object at the top of the <see cref="T:System.Collections.Stack" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="8bb78-208">Das oberste <see cref="T:System.Object" /> von <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-208">The <see cref="T:System.Object" /> at the top of the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-209">Diese Methode ähnelt der <xref:System.Collections.Stack.Pop%2A>-Methode, aber <xref:System.Collections.Stack.Peek%2A> ändert die <xref:System.Collections.Stack> nicht.</span><span class="sxs-lookup"><span data-stu-id="8bb78-209">This method is similar to the <xref:System.Collections.Stack.Pop%2A> method, but <xref:System.Collections.Stack.Peek%2A> does not modify the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="8bb78-210">`null` geschoben werden können, auf die <xref:System.Collections.Stack> als Platzhalter, wenn erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8bb78-210">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="8bb78-211">Um einen null-Wert und dem Ende des Stapels zu unterscheiden, überprüfen Sie die <xref:System.Collections.Stack.Count%2A> Eigenschaft oder ein Catch die <xref:System.InvalidOperationException>, die ausgelöst wird, wenn die <xref:System.Collections.Stack> ist leer.</span><span class="sxs-lookup"><span data-stu-id="8bb78-211">To distinguish between a null value and the end of the stack, check the <xref:System.Collections.Stack.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Stack> is empty.</span></span>  
  
 <span data-ttu-id="8bb78-212">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-212">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-213">Das folgende Beispiel zeigt, wie Sie zum Hinzufügen von Elementen der <xref:System.Collections.Stack>, entfernen Sie Elemente aus der <xref:System.Collections.Stack>, oder zeigen Sie das Element am Anfang der <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-213">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8bb78-214">Die <see cref="T:System.Collections.Stack" /> ist leer.</span><span class="sxs-lookup"><span data-stu-id="8bb78-214">The <see cref="T:System.Collections.Stack" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Stack.Pop" />
        <altmember cref="M:System.Collections.Stack.Push(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public virtual object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Pop () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Pop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bb78-215">Entfernt das oberste Objekt aus <see cref="T:System.Collections.Stack" /> und gibt es zurück.</span><span class="sxs-lookup"><span data-stu-id="8bb78-215">Removes and returns the object at the top of the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns><span data-ttu-id="8bb78-216">Das <see cref="T:System.Object" />, das vom Anfang des <see cref="T:System.Collections.Stack" /> entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="8bb78-216">The <see cref="T:System.Object" /> removed from the top of the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-217">Diese Methode ähnelt der <xref:System.Collections.Stack.Peek%2A>-Methode, aber <xref:System.Collections.Stack.Peek%2A> ändert die <xref:System.Collections.Stack> nicht.</span><span class="sxs-lookup"><span data-stu-id="8bb78-217">This method is similar to the <xref:System.Collections.Stack.Peek%2A> method, but <xref:System.Collections.Stack.Peek%2A> does not modify the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="8bb78-218">`null` geschoben werden können, auf die <xref:System.Collections.Stack> als Platzhalter, wenn erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8bb78-218">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="8bb78-219">Um einen null-Wert und dem Ende des Stapels zu unterscheiden, überprüfen Sie die <xref:System.Collections.Stack.Count%2A> Eigenschaft oder ein Catch die <xref:System.InvalidOperationException>, die ausgelöst wird, wenn die <xref:System.Collections.Stack> ist leer.</span><span class="sxs-lookup"><span data-stu-id="8bb78-219">To distinguish between a null value and the end of the stack, check the <xref:System.Collections.Stack.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Stack> is empty.</span></span>  
  
 <span data-ttu-id="8bb78-220">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-220">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-221">Das folgende Beispiel zeigt, wie Sie zum Hinzufügen von Elementen der <xref:System.Collections.Stack>, entfernen Sie Elemente aus der <xref:System.Collections.Stack>, oder zeigen Sie das Element am Anfang der <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-221">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8bb78-222">Die <see cref="T:System.Collections.Stack" /> ist leer.</span><span class="sxs-lookup"><span data-stu-id="8bb78-222">The <see cref="T:System.Collections.Stack" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Stack.Peek" />
        <altmember cref="M:System.Collections.Stack.Push(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public virtual void Push (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Push(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Push (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Push(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bb78-223">Das <see cref="T:System.Object" />, das auf dem <see cref="T:System.Collections.Stack" /> abgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8bb78-223">The <see cref="T:System.Object" /> to push onto the <see cref="T:System.Collections.Stack" />.</span></span> <span data-ttu-id="8bb78-224">Der Wert kann <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="8bb78-224">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8bb78-225">Fügt ein Objekt am Anfang des <see cref="T:System.Collections.Stack" /> ein.</span><span class="sxs-lookup"><span data-stu-id="8bb78-225">Inserts an object at the top of the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-226">Wenn <xref:System.Collections.Stack.Count%2A> bereits gleich der Kapazität, die Kapazität der <xref:System.Collections.Stack> wird von automatisch Neuzuordnen des internen Arrays erhöht und die vorhandenen Elemente werden in das neue Array kopiert, bevor das neue Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="8bb78-226">If <xref:System.Collections.Stack.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Stack> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="8bb78-227">`null` geschoben werden können, auf die <xref:System.Collections.Stack> als Platzhalter, wenn erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8bb78-227">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="8bb78-228">Belegt einen Slot im Stapel, und wie ein Objekt behandelt.</span><span class="sxs-lookup"><span data-stu-id="8bb78-228">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="8bb78-229">Wenn <xref:System.Collections.Stack.Count%2A> ist kleiner als die Kapazität des Stapels <xref:System.Collections.Stack.Push%2A> ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-229">If <xref:System.Collections.Stack.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Stack.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="8bb78-230">Wenn die Kapazität erhöht werden, um das neue Element aufzunehmen muss <xref:System.Collections.Stack.Push%2A> wird eine O (`n`)-Vorgang, in dem `n` ist <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-230">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Stack.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-231">Das folgende Beispiel zeigt, wie Sie zum Hinzufügen von Elementen der <xref:System.Collections.Stack>, entfernen Sie Elemente aus der <xref:System.Collections.Stack>, oder zeigen Sie das Element am Anfang der <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-231">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Stack.Peek" />
        <altmember cref="M:System.Collections.Stack.Pop" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Stack Synchronized (System.Collections.Stack stack);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Stack Synchronized(class System.Collections.Stack stack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Stack ^ Synchronized(System::Collections::Stack ^ stack);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stack" Type="System.Collections.Stack" />
      </Parameters>
      <Docs>
        <param name="stack"><span data-ttu-id="8bb78-232">Die <see cref="T:System.Collections.Stack" />, die synchronisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8bb78-232">The <see cref="T:System.Collections.Stack" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="8bb78-233">Gibt einen synchronisierten (threadsicheren) Wrapper für <see cref="T:System.Collections.Stack" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="8bb78-233">Returns a synchronized (thread safe) wrapper for the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <returns><span data-ttu-id="8bb78-234">Ein synchronisierter Wrapper um <see cref="T:System.Collections.Stack" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-234">A synchronized wrapper around the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-235">Um die Threadsicherheit der <xref:System.Collections.Stack>, alle Vorgänge über diesen Wrapper erfolgen müssen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-235">To guarantee the thread safety of the <xref:System.Collections.Stack>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="8bb78-236">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="8bb78-236">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8bb78-237">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="8bb78-237">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8bb78-238">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-238">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="8bb78-239">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <xref:System.Collections.Stack.SyncRoot%2A> während der gesamten Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8bb78-239">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="8bb78-240">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-240">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-241">Das folgende Beispiel zeigt die Vorgehensweise beim Synchronisieren einer <xref:System.Collections.Stack>, zu bestimmen, ob eine <xref:System.Collections.Stack> synchronisiert ist, und verwenden Sie eine synchronisierte <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-241">The following example shows how to synchronize a <xref:System.Collections.Stack>, determine if a <xref:System.Collections.Stack> is synchronized, and use a synchronized <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8bb78-242"><paramref name="stack" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bb78-242"><paramref name="stack" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bb78-243">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.Stack" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8bb78-243">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Stack" />.</span></span></summary>
        <value><span data-ttu-id="8bb78-244">Ein <see cref="T:System.Object" />, mit dem der Zugriff auf die <see cref="T:System.Collections.Stack" />-Auflistung synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8bb78-244">An <see cref="T:System.Object" /> that can be used to synchronize access to the <see cref="T:System.Collections.Stack" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-245">Eine synchronisierte Version der Erstellung der <xref:System.Collections.Stack>, verwenden Sie die <xref:System.Collections.Stack.Synchronized%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8bb78-245">To create a synchronized version of the <xref:System.Collections.Stack>, use the <xref:System.Collections.Stack.Synchronized%2A> method.</span></span> <span data-ttu-id="8bb78-246">Abgeleitete Klassen können jedoch eigene synchronisierte Version der Bereitstellen der <xref:System.Collections.Stack> mithilfe der <xref:System.Collections.Stack.SyncRoot%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bb78-246">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Stack> using the <xref:System.Collections.Stack.SyncRoot%2A> property.</span></span> <span data-ttu-id="8bb78-247">Die Synchronisierungscode dürfen Vorgänge auf die <xref:System.Collections.Stack.SyncRoot%2A> von der <xref:System.Collections.Stack>, nicht direkt auf die <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-247">The synchronizing code must perform operations on the <xref:System.Collections.Stack.SyncRoot%2A> of the <xref:System.Collections.Stack>, not directly on the <xref:System.Collections.Stack>.</span></span> <span data-ttu-id="8bb78-248">Dies gewährleistet die einwandfreie Funktion von Auflistungen, die von anderen Objekten abgeleitet sind.</span><span class="sxs-lookup"><span data-stu-id="8bb78-248">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="8bb78-249">Es Auflistungsinstanz ordnungsgemäße Synchronisierung mit anderen Threads, die gleichzeitig eventuell die <xref:System.Collections.Stack> Objekt.</span><span class="sxs-lookup"><span data-stu-id="8bb78-249">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Stack> object.</span></span>  
  
 <span data-ttu-id="8bb78-250">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="8bb78-250">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="8bb78-251">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="8bb78-251">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="8bb78-252">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</span><span class="sxs-lookup"><span data-stu-id="8bb78-252">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="8bb78-253">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <xref:System.Collections.Stack.SyncRoot%2A> während der gesamten Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8bb78-253">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="8bb78-254">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8bb78-254">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bb78-255">Kopiert <see cref="T:System.Collections.Stack" /> in ein neues Array.</span><span class="sxs-lookup"><span data-stu-id="8bb78-255">Copies the <see cref="T:System.Collections.Stack" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="8bb78-256">Ein neues Array, das Kopien der Elemente aus <see cref="T:System.Collections.Stack" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="8bb78-256">A new array containing copies of the elements of the <see cref="T:System.Collections.Stack" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb78-257">Die Elemente kopiert werden, auf das Array in der Last in First Out (LIFO)-Reihenfolge die Elemente einer Folge von Aufrufen an zurückgegebenes <xref:System.Collections.Stack.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-257">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Stack.Pop%2A>.</span></span>  
  
 <span data-ttu-id="8bb78-258">Diese Methode ist eine O (`n`) Vorgang, wobei `n` ist <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8bb78-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bb78-259">Das folgende Beispiel zeigt die Vorgehensweise beim Kopieren einer <xref:System.Collections.Stack> in ein eindimensionales Array.</span><span class="sxs-lookup"><span data-stu-id="8bb78-259">The following example shows how to copy a <xref:System.Collections.Stack> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Stack.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)" />
        <altmember cref="M:System.Collections.Stack.Pop" />
      </Docs>
    </Member>
  </Members>
</Type>