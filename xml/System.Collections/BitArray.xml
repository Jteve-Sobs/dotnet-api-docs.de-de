<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BitArray.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5056363895a01ed4f3d85a3d6c19a8aa8cb07f553.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">056363895a01ed4f3d85a3d6c19a8aa8cb07f553</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.BitArray">
          <source>Manages a compact array of bit values, which are represented as Booleans, where <ph id="ph1">&lt;see langword="true" /&gt;</ph> indicates that the bit is on (1) and <ph id="ph2">&lt;see langword="false" /&gt;</ph> indicates the bit is off (0).</source>
          <target state="translated">Verwaltet ein komprimiertes Array von Bitwerten, die als boolesche Werte dargestellt sind. <ph id="ph1">&lt;see langword="true" /&gt;</ph> bezeichnet hierbei ein gesetztes Bit (1), und <ph id="ph2">&lt;see langword="false" /&gt;</ph> bezeichnet ein nicht gesetztes Bit (0).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> class is a collection class in which the capacity is always the same as the count.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> -Klasse ist eine Auflistungsklasse, die in dem die Kapazität immer gleich der Anzahl ist.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Elements are added to a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> by increasing the <ph id="ph2">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> property; elements are deleted by decreasing the <ph id="ph3">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> property.</source>
          <target state="translated">Werden Elemente hinzugefügt, eine <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> infolge einer Erhöhung der <ph id="ph2">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> Eigenschafts-Elemente werden gelöscht, verringert werden, da die <ph id="ph3">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>The size of a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> is controlled by the client; indexing past the end of the <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> throws an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.The <ph id="ph4">&lt;xref:System.Collections.BitArray&gt;</ph> class provides methods that are not found in other collections, including those that allow multiple elements to be modified at once using a filter, such as <ph id="ph5">&lt;xref:System.Collections.BitArray.And%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.BitArray.Or%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.BitArray.Xor%2A&gt;</ph> , <ph id="ph8">&lt;xref:System.Collections.BitArray.Not%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.BitArray.SetAll%2A&gt;</ph>.</source>
          <target state="translated">Die Größe des eine <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> wird durch den Client gesteuert, Indizierung, nach dem Ende der <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>. Die <ph id="ph4">&lt;xref:System.Collections.BitArray&gt;</ph> Klasse enthält Methoden, die nicht, in anderen Auflistungen gefunden werden, einschließlich derer, die mehrere Elemente gleichzeitig wie z. B. über einen Filter geändert werden können <ph id="ph5">&lt;xref:System.Collections.BitArray.And%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.BitArray.Or%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.BitArray.Xor%2A&gt;</ph> , <ph id="ph8">&lt;xref:System.Collections.BitArray.Not%2A&gt;</ph>, und <ph id="ph9">&lt;xref:System.Collections.BitArray.SetAll%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> class is a structure that provides the same functionality as <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph>, but with faster performance.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> Klasse ist eine Struktur, die die gleiche Funktionalität wie <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph>, jedoch leistungsfähiger.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> is faster because it is a value type and therefore allocated on the stack, whereas <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> is a reference type and, therefore, allocated on the heap.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> ist schneller, da es sich um einen Werttyp handelt, und daher auf dem Stapel zugeordnet, während <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> einen Referenztyp darstellt und daher auf dem Heap reserviert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> can store exactly 32 bits, whereas <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> can store a variable number of bits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> kann genau 32 Bits speichern, wohingegen <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> kann eine Variable Anzahl von Bits gespeichert.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> stores both bit flags and small integers, thereby making it ideal for data that is not exposed to the user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> Speichert Bitflags und kleine ganze Zahlen, wodurch er besonders geeignet für Daten, die nicht verfügbar gemacht werden, die dem Benutzer.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>However, if the number of required bit flags is unknown, is variable, or is greater than 32, use <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> instead.</source>
          <target state="translated">Wenn die Anzahl der erforderlichen Bitflags unbekannt ist, wird die Variable oder größer als 32 ist, allerdings verwenden <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> stattdessen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> is in the <ph id="ph2">&lt;xref:System.Collections&gt;</ph> namespace; <ph id="ph3">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> is in the <ph id="ph4">&lt;xref:System.Collections.Specialized&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> befindet sich in der <ph id="ph2">&lt;xref:System.Collections&gt;</ph> Namespace. <ph id="ph3">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> befindet sich in der <ph id="ph4">&lt;xref:System.Collections.Specialized&gt;</ph> Namespace.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Elemente in dieser Auflistung können über einen Ganzzahlenindex zugegriffen werden.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">In dieser Auflistung Indizes sind nullbasiert.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>The following code example shows how to create and initialize a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> and how to print out its values.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen und initialisieren Sie ein <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> und wie Sie die entsprechenden Werte ausgegeben.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Öffentliche statische (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) Member dieses Typs sind threadsicher.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Bei Instanzmembern ist die Threadsicherheit nicht gewährleistet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Diese Implementierung bietet keinen synchronisierten (threadsicheren) Wrapper für ein <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Collections.BitArray">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class whose capacity and initial values can be specified.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Klasse, deren Kapazität und Anfangswerte angegeben werden können.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Boolean[])">
          <source>An array of Booleans to copy.</source>
          <target state="translated">Ein Array mit den zu kopierenden booleschen Werten.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Boolean[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that contains bit values copied from the specified array of Booleans.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Klasse mit Bitwerten, die aus dem angegebenen Array von booleschen Werten kopiert werden.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Boolean[])">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`values`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente im <ph id="ph3">`values`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Boolean[])">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>An array of bytes containing the values to copy, where each byte represents eight consecutive bits.</source>
          <target state="translated">Ein Bytearray, das die zu kopierenden Werte enthält, wobei jedes Byte acht aufeinander folgende Bits darstellt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that contains bit values copied from the specified array of bytes.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Klasse mit Bitwerten, die aus dem angegebenen Bytearray kopiert werden.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>The first byte in the array represents bits 0 through 7, the second byte represents bits 8 through 15, and so on.</source>
          <target state="translated">Das erste Byte im Array darstellt, die Bits 0 bis 7, das zweite Byte Bits 8 bis 15 und So weiter.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>The Least Significant Bit of each byte represents the lowest index value: " <ph id="ph1">`bytes`</ph> [0] &amp; 1" represents bit 0, " <ph id="ph2">`bytes`</ph> [0] &amp; 2" represents bit 1, " <ph id="ph3">`bytes`</ph> [0] &amp; 4" represents bit 2, and so on.</source>
          <target state="translated">Das niederwertigste Bit des jeweiligen Bytes stellt den niedrigsten Indexwert: " <ph id="ph1">`bytes`</ph> [0] &amp; 1" stellt Bit 0 (null) " <ph id="ph2">`bytes`</ph> [0] &amp; 2" stellt Bit 1, " <ph id="ph3">`bytes`</ph> [0] &amp; 4" stellt bit 2 und so weiter.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`bytes`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente im <ph id="ph3">`bytes`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>The length of <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Die Länge von <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> to copy.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, das kopiert werden soll.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that contains bit values copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Klasse mit Bitwerten, die aus dem angegebenen <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> kopiert wurden.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`bits`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente im <ph id="ph3">`bits`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="bits" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bits" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32)">
          <source>The number of bit values in the new <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Bitwerte im neuen <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that can hold the specified number of bit values, which are initially set to <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Klasse, die die angegebene Anzahl von Bitwerten enthalten kann. Diese werden am Anfang auf <ph id="ph2">&lt;see langword="false" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`length`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">`length`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="length" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>An array of integers containing the values to copy, where each integer represents 32 consecutive bits.</source>
          <target state="translated">Ein Array von Ganzzahlen, das die zu kopierenden Werte enthält, wobei jede Ganzzahl 32 aufeinander folgende Bits darstellt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that contains bit values copied from the specified array of 32-bit integers.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Klasse mit Bitwerten, die aus dem angegebenen Array von 32-Bit-Ganzzahlen kopiert werden.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>The number in the first <ph id="ph1">`values`</ph> array element represents bits 0 through 31, the second number in the array represents bits 32 through 63, and so on.</source>
          <target state="translated">Die Anzahl in der ersten <ph id="ph1">`values`</ph> Arrayelement stellt Bits 0 bis 31, die zweite Zahl im Array Bits 32 bis 63 und So weiter.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>The Least Significant Bit of each integer represents the lowest index value: " <ph id="ph1">`values`</ph> [0] &amp; 1" represents bit 0, " <ph id="ph2">`values`</ph> [0] &amp; 2" represents bit 1, " <ph id="ph3">`values`</ph> [0] &amp; 4" represents bit 2, and so on.</source>
          <target state="translated">Das niederwertigste Bit der jeweiligen Ganzzahl stellt den niedrigsten Indexwert: " <ph id="ph1">`values`</ph> [0] &amp; 1" stellt Bit 0 (null) " <ph id="ph2">`values`</ph> [0] &amp; 2" stellt Bit 1, " <ph id="ph3">`values`</ph> [0] &amp; 4" stellt bit 2 und so weiter.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`values`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist die Anzahl der Elemente im <ph id="ph3">`values`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>The length of <ph id="ph1">&lt;paramref name="values" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph></source>
          <target state="translated">Die Länge von <ph id="ph1">&lt;paramref name="values" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source>The number of bit values in the new <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Bitwerte im neuen <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source>The Boolean value to assign to each bit.</source>
          <target state="translated">Der boolesche Wert, der jedem Bit zugeordnet werden soll.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that can hold the specified number of bit values, which are initially set to the specified value.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Klasse, die die angegebene Anzahl von Bitwerten enthalten kann. Diese werden am Anfang auf den angegebenen Wert festgelegt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`length`</ph>.</source>
          <target state="translated">Dieser Konstruktor ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">`length`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="length" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>The array with which to perform the bitwise AND operation.</source>
          <target state="translated">Das Array, mit dem die bitweise AND-Operation ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>Performs the bitwise AND operation between the elements of the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object and the corresponding elements in the specified array.</source>
          <target state="translated">Führt die bitweise AND-Operation zwischen den Elementen des aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekts und den entsprechenden Elementen im angegebenen Array aus.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object will be modified to store the result of the bitwise AND operation.</source>
          <target state="translated">Das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekt wird so geändert, dass das Ergebnis der bitweisen AND-Operation gespeichert wird.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>An array containing the result of the bitwise AND operation, which is a reference to the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object.</source>
          <target state="translated">Ein Array, das das Ergebnis der bitweisen AND-Operation enthält. Hierbei handelt es sich um einen Verweis auf das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>The bitwise AND operation returns <ph id="ph1">`true`</ph> if both operands are <ph id="ph2">`true`</ph>, and returns <ph id="ph3">`false`</ph> if one or both operands are <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Gibt die bitweise AND-Operation <ph id="ph1">`true`</ph> Wenn beide Operanden <ph id="ph2">`true`</ph>, und gibt <ph id="ph3">`false`</ph> Wenn einer oder beide Operanden sind <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>The following code example shows how to perform the bitwise AND operation between two <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> objects.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die bitweise AND-Operation zwischen zwei auszuführenden <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> and the current <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> do not have the same number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> und das aktuelle <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> enthalten nicht die gleiche Anzahl von Elementen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Clone">
          <source>Creates a shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine flache Kopie von <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Eine flache Kopie von <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">Eine flache Kopie einer Auflistung kopiert nur die Elemente der Auflistung, ob sie Verweis- oder Werttypen sind, aber die Objekte, denen auf die verwiesen wird nicht kopiert.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Die Verweise in der neuen Auflistung zeigen auf dieselben Objekte, denen auf die Verweise in der ursprünglichen Auflistung verweisen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Im Gegensatz dazu eine tiefe Kopie einer Auflistung kopiert die Elemente aus, und alles, was durch die Elemente direkt oder indirekt verweist.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Das eindimensionale <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, das das Ziel der aus der <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> kopierten Elemente ist.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Für das <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> muss eine nullbasierte Indizierung verwendet werden.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Der nullbasierte Index im <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>, ab dem kopiert wird.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Kopiert die gesamte <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Instanz in ein kompatibles eindimensionales <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, beginnend am angegebenen Index des Zielarrays.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">Das angegebene Array muss einen kompatiblen Typ aufweisen.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>Only <ph id="ph1">`bool`</ph>, <ph id="ph2">`int`</ph>, and <ph id="ph3">`byte`</ph> types of arrays are supported.</source>
          <target state="translated">Nur <ph id="ph1">`bool`</ph>, <ph id="ph2">`int`</ph>, und <ph id="ph3">`byte`</ph> Typen von Arrays werden unterstützt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Diese Methode verwendet <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> die Elemente kopiert.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The following code example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> into a one-dimensional <ph id="ph2">&lt;xref:System.Array&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Kopieren einer <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> in einem eindimensionalen <ph id="ph2">&lt;xref:System.Array&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> ist mehrdimensional.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente in der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> ist größer als der verfügbare Platz vom <ph id="ph2">&lt;paramref name="index" /&gt;</ph> bis zum Ende des Ziel-<ph id="ph3">&lt;paramref name="array" /&gt;</ph>s.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Quell-<ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> kann nicht automatisch in den Typ des Ziel-<ph id="ph2">&lt;paramref name="array" /&gt;</ph> umgewandelt werden.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Ruft die Anzahl der Elemente ab, die in <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente, die in <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> enthalten sind.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> return the same value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> den gleichen Wert zurück.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> can be set to a specific value, but <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> kann auf einen bestimmten Wert festgelegt werden, aber <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">Der nullbasierte Index des abzurufenden Werts.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>Gets the value of the bit at a specific position in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Ruft den Wert des Bits an einer bestimmten Position in <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>The value of the bit at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Der Wert des Bits an Position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>The following code example shows how to set and get specific elements in a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Festlegen und Abrufen von bestimmten Elementen einem <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to the number of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer oder gleich der Anzahl von Elementen in <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Gibt einen Enumerator zurück, der die <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> durchläuft.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the entire <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> für das gesamte <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Die <ph id="ph1">`foreach`</ph>-Anweisung der Programmiersprache C# (<ph id="ph2">`for each`</ph> in Visual Basic) verbirgt die Komplexität der Enumeratoren.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daher empfiehlt es sich, <ph id="ph1">`foreach`</ph> zu verwenden und den Enumerator nicht direkt zu ändern.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> setzt den Enumerator ebenfalls auf diese Position zurück.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">An dieser Position ist <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> nicht definiert.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Daher muss der Enumerator durch einen Aufruf von <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> legt <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> auf das nächste Element fest.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> wieder auf das erste Element der Auflistung festzulegen, können Sie <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> gefolgt von <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung; daher ist die Enumeration einer Auflistung systembedingt kein threadsicheres Verfahren.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu garantieren, können Sie die Auflistung während der gesamten Enumeration sperren.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Um den Lese- und Schreibzugriff auf diese Auflistung durch mehrere Threads zuzulassen, müssen Sie eine eigene Synchronisierung implementieren.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> is read-only.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> schreibgeschützt ist.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>This property is always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Diese Eigenschaft ist immer <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.BitArray.IsReadOnly%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IList?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> implementiert die <ph id="ph2">&lt;xref:System.Collections.BitArray.IsReadOnly%2A&gt;</ph> Eigenschaft, da er erforderlich ist der <ph id="ph3">&lt;xref:System.Collections.IList?displayProperty=nameWithType&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Eine schreibgeschützte Auflistung gestattet nach dem Erstellen der Auflistung weder das Hinzufügen noch das Ändern oder Entfernen von Elementen.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Eine Auflistung, die schreibgeschützt ist, ist eine Auflistung mit einem Wrapper, der verhindert, dass die Auflistung ändern; Wenn Änderungen an der zugrunde liegenden Auflistung vorgenommen werden, spiegelt die schreibgeschützte Auflistung daher diese Änderungen wider.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> synchronisiert (threadsicher) ist.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>This property is always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Diese Eigenschaft ist immer <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.BitArray.IsSynchronized%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> implementiert die <ph id="ph2">&lt;xref:System.Collections.BitArray.IsSynchronized%2A&gt;</ph> Eigenschaft, da er erforderlich ist der <ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> während der gesamten Enumeration.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>The zero-based index of the value to get or set.</source>
          <target state="translated">Der nullbasierte Index des Werts, der abgerufen oder festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>Gets or sets the value of the bit at a specific position in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Ruft den Wert eines Bits an einer bestimmten Position im <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>The value of the bit at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Der Wert des Bits an Position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgender Syntax: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.BitArray.Item%2A&gt;</ph> property.</source>
          <target state="translated">Die Programmiersprache c# verwendet das Schlüsselwort der Indexer definieren die <ph id="ph1">&lt;xref:System.Collections.BitArray.Item%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.BitArray.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementiert <ph id="ph1">&lt;xref:System.Collections.BitArray.Item%2A&gt;</ph> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein o(1)-Vorgang. Festlegen der Eigenschaft ist auch ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.BitArray.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer oder gleich <ph id="ph2">&lt;see cref="P:System.Collections.BitArray.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Length">
          <source>Gets or sets the number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Ruft die Anzahl von Elementen im <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>The number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Elemente im <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> return the same value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> den gleichen Wert zurück.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> can be set to a specific value, but <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> kann auf einen bestimmten Wert festgelegt werden, aber <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> ist schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>If <ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Collections.BitArray&gt;</ph> is truncated and the elements after the index <ph id="ph4">`value`</ph> -1 are deleted.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> auf einen Wert festgelegt ist kleiner als <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.BitArray&gt;</ph> wird abgeschnitten, und die Elemente nach dem Index <ph id="ph4">`value`</ph> -1 werden gelöscht.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>If <ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> is set to a value that is greater than <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>, the new elements are set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> festgelegt ist, auf einen Wert, der größer ist <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>, neue Elemente werden festgelegt, um <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>Setting this property is an O(<ph id="ph1">`n`</ph>) operation.</source>
          <target state="translated">Durch Festlegen dieser Eigenschaft ist eine O (<ph id="ph1">`n`</ph>) Vorgang.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Length">
          <source>The property is set to a value that is less than zero.</source>
          <target state="translated">Die Eigenschaft wird auf einen Wert festgelegt, der kleiner als 0 (null) ist.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Not">
          <source>Inverts all the bit values in the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, so that elements set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> are changed to <ph id="ph3">&lt;see langword="false" /&gt;</ph>, and elements set to <ph id="ph4">&lt;see langword="false" /&gt;</ph> are changed to <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Invertiert alle Bitwerte im aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, sodass auf <ph id="ph2">&lt;see langword="true" /&gt;</ph> festgelegte Elemente auf <ph id="ph3">&lt;see langword="false" /&gt;</ph> und auf <ph id="ph4">&lt;see langword="false" /&gt;</ph> festgelegte Elemente auf <ph id="ph5">&lt;see langword="true" /&gt;</ph> festgelegt werden.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Not">
          <source>The current instance with inverted bit values.</source>
          <target state="translated">Die aktuelle Instanz mit invertierten Bitwerten.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Not">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Not">
          <source>The following code example shows how to apply NOT to a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, gelten nicht für eine <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>The array with which to perform the bitwise OR operation.</source>
          <target state="translated">Das Array, mit dem die bitweise OR-Operation ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>Performs the bitwise OR operation between the elements of the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object and the corresponding elements in the specified array.</source>
          <target state="translated">Führt die bitweise OR-Operation zwischen den Elementen des aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekts und den entsprechenden Elementen im angegebenen Array aus.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object will be modified to store the result of the bitwise OR operation.</source>
          <target state="translated">Das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekt wird so geändert, dass das Ergebnis der bitweisen OR-Operation gespeichert wird.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>An array containing the result of the bitwise OR operation, which is a reference to the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object.</source>
          <target state="translated">Ein Array, das das Ergebnis der bitweisen OR-Operation enthält. Hierbei handelt es sich um einen Verweis auf das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>The bitwise OR operation returns <ph id="ph1">`true`</ph> if one or both operands are <ph id="ph2">`true`</ph>, and returns <ph id="ph3">`false`</ph> if both operands are <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Gibt die bitweise OR-Operation <ph id="ph1">`true`</ph> Wenn einer oder beide Operanden sind <ph id="ph2">`true`</ph>, und gibt <ph id="ph3">`false`</ph> Wenn beide Operanden sind <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>The following code example shows how to perform the OR operation between two <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> objects.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie der OR-Operation zwischen zwei auszuführenden <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> and the current <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> do not have the same number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> und das aktuelle <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> enthalten nicht die gleiche Anzahl von Elementen.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>The zero-based index of the bit to set.</source>
          <target state="translated">Der nullbasierte Index des festzulegenden Bits.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>The Boolean value to assign to the bit.</source>
          <target state="translated">Der boolesche Wert, der dem Bit zugeordnet werden soll.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>Sets the bit at a specific position in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> to the specified value.</source>
          <target state="translated">Legt das Bit an einer bestimmten Position im <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> auf den angegebenen Wert fest.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Diese Methode ist ein o(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>The following code example shows how to set and get specific elements in a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Festlegen und Abrufen von bestimmten Elementen einem <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to the number of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer oder gleich der Anzahl von Elementen in <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.SetAll(System.Boolean)">
          <source>The Boolean value to assign to all bits.</source>
          <target state="translated">Der boolesche Wert, der allen Bits zugeordnet werden soll.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.SetAll(System.Boolean)">
          <source>Sets all bits in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> to the specified value.</source>
          <target state="translated">Legt alle Bits in <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> auf den angegebenen Wert fest.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.SetAll(System.Boolean)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.SetAll(System.Boolean)">
          <source>The following code example shows how to set and get specific elements in a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Festlegen und Abrufen von bestimmten Elementen einem <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Ruft ein Objekt ab, mit dem der Zugriff auf <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Ein Objekt, mit dem der Zugriff auf die <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> synchronisiert werden kann.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Abgeleitete Klassen bieten eine eigene synchronisierte Version der der <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> mithilfe der <ph id="ph2">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">Die Synchronisierungscode dürfen Vorgänge auf die <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> von der <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph>, nicht direkt auf die <ph id="ph3">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Dies gewährleistet die einwandfreie Funktion von Auflistungen, die von anderen Objekten abgeleitet sind.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> object.</source>
          <target state="translated">Es Auflistungsinstanz ordnungsgemäße Synchronisierung mit anderen Threads, die gleichzeitig eventuell die <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, das die Auflistung mit Sperren der <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> während der gesamten Enumeration.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Das Abrufen des Werts dieser Eigenschaft ist ein O(1)-Vorgang.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>The array with which to perform the bitwise exclusive OR operation.</source>
          <target state="translated">Das Array, mit dem die bitweise exklusive OR-Operation ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>Performs the bitwise exclusive OR operation between the elements of the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object against the corresponding elements in the specified array.</source>
          <target state="translated">Führt die bitweise exklusive OR-Operation zwischen den Elementen des aktuellen <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekts für die entsprechenden Elemente im angegebenen Array aus.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object will be modified to store the result of the bitwise exclusive OR operation.</source>
          <target state="translated">Das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekt wird dahingehend geändert, dass das Ergebnis der bitweisen exklusiven OR-Operation gespeichert wird.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>An array containing the result of the bitwise exclusive OR operation, which is a reference to the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object.</source>
          <target state="translated">Ein Array, das das Ergebnis der bitweisen exklusiven OR-Operation enthält. Hierbei handelt es sich um einen Verweis auf das aktuelle <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>The bitwise exclusive OR operation returns <ph id="ph1">`true`</ph> if exactly one operand is <ph id="ph2">`true`</ph>, and returns <ph id="ph3">`false`</ph> if both operands have the same Boolean value.</source>
          <target state="translated">Gibt die bitweise exklusive OR-Operation <ph id="ph1">`true`</ph> ist genau ein Operand <ph id="ph2">`true`</ph>, und gibt <ph id="ph3">`false`</ph> Wenn beide Operanden den gleichen booleschen Wert aufweisen.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode ist eine O (<ph id="ph1">`n`</ph>) Vorgang, wobei <ph id="ph2">`n`</ph> ist <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>The following code example shows how to perform the XOR operation between two <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> objects.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Ausführen des XOR-Vorgangs zwischen zwei <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> and the current <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> do not have the same number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> und das aktuelle <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> enthalten nicht die gleiche Anzahl von Elementen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>