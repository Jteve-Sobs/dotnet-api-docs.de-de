<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4e85bcbf9a9d19580aae5d6a81e1c216865dea6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86737307" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>Definiert Methoden zur Unterstützung der strukturellen Gleichheitsüberprüfung von Objekten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktur Gleichheit bedeutet, dass zwei Objekte gleich sind, da Sie gleiche Werte aufweisen. Sie unterscheidet sich von der Verweis Gleichheit, was darauf hinweist, dass zwei Objekt Verweise gleich sind, weil Sie auf dasselbe physische Objekt verweisen. Die- <xref:System.Collections.IStructuralEquatable> Schnittstelle ermöglicht es Ihnen, angepasste Vergleiche zu implementieren, um die strukturelle Gleichheit von Sammlungsobjekten zu überprüfen. Das heißt, Sie können eine eigene Definition der strukturellen Gleichheit erstellen und angeben, dass diese Definition mit einem Sammlungstyp verwendet werden soll, der die- <xref:System.Collections.IStructuralEquatable> Schnittstelle annimmt. Die-Schnittstelle verfügt über zwei Member: <xref:System.Collections.IStructuralEquatable.Equals%2A> , die auf Gleichheit prüft, indem eine angegebene <xref:System.Collections.IEqualityComparer> -Implementierung verwendet wird, und <xref:System.Collections.IStructuralEquatable.GetHashCode%2A> , die identische Hashcodes für Objekte zurückgibt, die gleich sind.  
  
> [!NOTE]
>  Die- <xref:System.Collections.IStructuralEquatable> Schnittstelle unterstützt nur benutzerdefinierte Vergleiche für strukturelle Gleichheit. Die <xref:System.Collections.IStructuralComparable> -Schnittstelle unterstützt benutzerdefinierte Struktur Vergleiche beim Sortieren und sortieren.  
  
 Der .NET Framework bietet auch Standard Gleichheits Vergleiche, die von der-Eigenschaft und der-Eigenschaft zurückgegeben werden <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> . Weitere Informationen finden Sie unter Beispiel:  
  
 Die generischen tupelklassen ( <xref:System.Tuple%601> , <xref:System.Tuple%602> , usw. <xref:System.Tuple%603> ) und die- <xref:System.Array> Klasse stellen explizite Implementierungen der- <xref:System.Collections.IStructuralEquatable> Schnittstelle bereit. Durch umwandeln (in c#) oder konvertieren (in Visual Basic) der aktuellen Instanz eines Arrays oder Tupels in einen <xref:System.Collections.IStructuralEquatable> Schnittstellen Wert und bereitstellen <xref:System.Collections.IEqualityComparer> der Implementierung als Argument für die- <xref:System.Collections.IStructuralEquatable.Equals%2A> Methode können Sie einen benutzerdefinierten Gleichheits Vergleich für das Array oder die Auflistung definieren.  
  
   
  
## Examples

Der Standard Gleichheits Vergleich, `EqualityComparer<Object>.Default.Equals` , betrachtet zwei `NaN` Werte als gleich. In einigen Fällen möchten Sie jedoch möglicherweise, dass der Vergleich von `NaN` Werten auf Gleichheit zurückgegeben `false` wird, was bedeutet, dass die Werte nicht verglichen werden können. Im folgenden Beispiel wird eine `NanComparer` -Klasse definiert, die die <xref:System.Collections.IEqualityComparer> -Schnittstelle implementiert. Sie wird vom dritten Beispiel als Argument für die- <xref:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)> Methode der- <xref:System.Collections.IStructuralEquatable> Schnittstelle verwendet, die von Tupeln implementiert wird. Mit <xref:System.Double> <xref:System.Single> dem Gleichheits Operator werden zwei oder zwei Werte verglichen. Sie übergibt Werte eines beliebigen anderen Typs an den Standard Gleichheits Vergleich.  
  
[!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
[!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 Im folgenden Beispiel werden zwei identische 3-Tupel-Objekte erstellt, deren Komponenten aus drei <xref:System.Double> Werten bestehen. Der Wert der zweiten Komponente ist <xref:System.Double.NaN?displayProperty=nameWithType> . Im Beispiel wird dann die <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> -Methode aufgerufen, und die- <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> Methode wird dreimal aufgerufen. Beim ersten Mal übergibt Sie den Standard Gleichheits Vergleich, der von der-Eigenschaft zurückgegeben wird <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> . Beim zweiten Mal übergibt Sie den Standard Gleichheits Vergleich, der von der-Eigenschaft zurückgegeben wird <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> . Beim dritten Mal übergibt Sie das benutzerdefinierte `NanComparer` Objekt. Wie die Ausgabe des Beispiels zeigt, geben die ersten drei Methodenaufrufe zurück `true` , während der vierte Aufruf zurückgibt `false` .  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberSignature Language="C#" Value="public bool Equals (object? other, System.Collections.IEqualityComparer comparer);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
        <param name="comparer">Ein Objekt, das bestimmt, ob die aktuelle Instanz und <paramref name="other" /> gleich sind.</param>
        <summary>Bestimmt, ob die Struktur eines Objekt und der aktuellen Instanz gleich ist.</summary>
        <returns><see langword="true" />, wenn die beiden Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Collections.IStructuralEquatable.Equals%2A> -Methode unterstützt den benutzerdefinierten strukturellen Vergleich von Array-und tupelobjekten. Diese Methode ruft wiederum die `comparer` -Methode des-Objekts <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> auf, um einzelne Array Elemente oder tupelkomponenten zu vergleichen, beginnend mit dem ersten Element oder der Komponente. Die einzelnen Aufrufe von <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> beenden, und die- <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> Methode gibt einen Wert zurück, wenn ein Methodenaufruf `false` oder alle Array Elemente oder tupelkomponenten verglichen wurden.  
  
   
  
## Examples  
 Der Standard Gleichheits Vergleich, `EqualityComparer<Object>.Default.Equals` , betrachtet zwei `NaN` Werte als gleich. In einigen Fällen möchten Sie jedoch möglicherweise, dass der Vergleich von `NaN` Werten auf Gleichheit zurückgegeben `false` wird, was bedeutet, dass die Werte nicht verglichen werden können. Im folgenden Beispiel wird eine `NanComparer` -Klasse definiert, die die <xref:System.Collections.IStructuralEquatable> -Schnittstelle implementiert. Mit <xref:System.Double> <xref:System.Single> dem Gleichheits Operator werden zwei oder zwei Werte verglichen. Sie übergibt Werte eines beliebigen anderen Typs an den Standard Gleichheits Vergleich.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 Im folgenden Beispiel werden zwei identische 3-Tupel-Objekte erstellt, deren Komponenten aus drei <xref:System.Double> Werten bestehen. Der Wert der zweiten Komponente ist <xref:System.Double.NaN?displayProperty=nameWithType> . Im Beispiel wird dann die <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> -Methode aufgerufen, und die- <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> Methode wird dreimal aufgerufen. Beim ersten Mal übergibt Sie den Standard Gleichheits Vergleich, der von der-Eigenschaft zurückgegeben wird <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> . Beim zweiten Mal übergibt Sie den Standard Gleichheits Vergleich, der von der-Eigenschaft zurückgegeben wird <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> . Beim dritten Mal übergibt Sie das benutzerdefinierte `NanComparer` Objekt. Wie die Ausgabe des Beispiels zeigt, geben die ersten drei Methodenaufrufe zurück `true` , während der vierte Aufruf zurückgibt `false` .  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Ein Objekt, das den Hashcode des aktuellen Objekts berechnet.</param>
        <summary>Gibt einen Hashcode für die aktuelle Instanz zurück.</summary>
        <returns>Der Hashcode für die aktuelle Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Methode, um angepasste Hashcodes für Auflistungs Objekte zurückzugeben, die dem angepassten Vergleich der von der-Methode bereitgestellten Struktur Gleichheit entsprechen <xref:System.Collections.IStructuralEquatable.Equals%2A> .  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn die- <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> Methode <see langword="true" /> für zwei-Objekte zurückgibt, müssen die von der- <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> Methode für die beiden-Objekte zurückgegebenen Werte ebenfalls gleich sein.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
