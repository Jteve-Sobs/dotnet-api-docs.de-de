<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b984d179b3cd1e666e2dbdd92fc92cc72cb6a55" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36644070" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert Methoden zur Unterstützung der strukturellen Gleichheitsüberprüfung von Objekten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strukturelle Gleichheit bedeutet, dass zwei Objekte gleich sind, da sie die gleiche Werte aufweisen. Es unterscheidet sich vom Verweisgleichheit, was bedeutet, dass zwei Objektverweise gleich sind, da sie die gleiche physische Objekt verweisen. Die <xref:System.Collections.IStructuralEquatable> Schnittstelle können Sie benutzerdefinierte Vergleiche zur Überprüfung der strukturellen gleichheitsüberprüfung von Auflistungsobjekten zu implementieren. Sie können, also erstellen Sie Ihre eigene Definitionen der strukturellen gleichheitsüberprüfung und gibt an, dass diese Definition mit dem Auflistungstyp verwendet wird, akzeptiert die <xref:System.Collections.IStructuralEquatable> Schnittstelle. Die Schnittstelle verfügt über zwei Member: <xref:System.Collections.IStructuralEquatable.Equals%2A>, die testet auf Gleichheit mit einem angegebenen <xref:System.Collections.IEqualityComparer> -Implementierung und <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, womit identische Hashcodes für Objekte, die gleich sind.  
  
> [!NOTE]
>  Die <xref:System.Collections.IStructuralEquatable> -Schnittstelle unterstützt nur benutzerdefinierte Vergleiche auf Strukturgleichheit überprüft. Die <xref:System.Collections.IStructuralComparable> Schnittstelle unterstützt benutzerdefinierte strukturelle Vergleiche für das Sortieren und zu sortieren.  
  
 Die .NET Framework stellt auch Vergleiche auf Gleichheit, die von zurückgegeben werden die <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> und <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> Eigenschaften. Weitere Informationen finden Sie im Beispiel.  
  
 Die generische Tuple-Klassen (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>usw.) und die <xref:System.Array> Klasse bereitstellen, explizite Implementierungen von der <xref:System.Collections.IStructuralEquatable> Schnittstelle. Durch Umwandlung (in c#) oder konvertieren (in Visual Basic) der aktuellen Instanz eines Arrays oder das Tupel mit einer <xref:System.Collections.IStructuralEquatable> Schnittstelle Wert und Ihrer <xref:System.Collections.IEqualityComparer> Implementierung als Argument an die <xref:System.Collections.IStructuralEquatable.Equals%2A> -Methode, können Sie eine benutzerdefinierte Gleichheit definieren Prüfung auf das Array oder einer Auflistung.  
  
   
  
## Examples  
 Der Standardgleichheitsvergleich `EqualityComparer<Object>.Default.Equals`, betrachtet zwei `NaN` Werte gleich sind. In einigen Fällen, Sie sollten jedoch den Vergleich von `NaN` Werte hinsichtlich ihrer Gleichheit zurückzugebenden `false`, was bedeutet, dass die Werte nicht verglichen werden können. Im folgenden Beispiel wird eine `NanComparer`-Klasse definiert, die die <xref:System.Collections.IStructuralEquatable>-Schnittstelle implementiert. Es vergleicht zwei <xref:System.Double> oder zwei <xref:System.Single> Werte mithilfe des Gleichheitsoperators. Die Werte eines anderen Typs übergeben an den Standardgleichheitsvergleich.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 Das folgende Beispiel erstellt zwei identische 3-Tupel-Objekte, deren Komponenten aus drei bestehen <xref:System.Double> Werte. Der Wert der zweiten Komponente <xref:System.Double.NaN?displayProperty=nameWithType>. Das Beispiel ruft dann die <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> -Methode, und ruft die <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> Methode drei Mal. Erstmals ausführen, übergibt den Standardgleichheitsvergleich, die von zurückgegeben wird das <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> Eigenschaft. Beim zweiten Aufruf übergibt den Standardgleichheitsvergleich, die von zurückgegeben wird das <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> Eigenschaft. Das dritte Mal übergibt die benutzerdefinierte `NanComparer` Objekt. Wie die Ausgabe des Beispiels zeigt, die ersten drei Methodenaufrufe return `true`, während im vierte Aufruf gibt `false`.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
        <param name="comparer">Ein Objekt, das bestimmt, ob die aktuelle Instanz und <c>other</c> gleich sind.</param>
        <summary>Bestimmt, ob die Struktur eines Objekt und der aktuellen Instanz gleich ist.</summary>
        <returns>
          <see langword="true" />, wenn die beiden Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Collections.IStructuralEquatable.Equals%2A> -Methode unterstützt benutzerdefinierte Strukturvergleich von Arrays und Tupel-Objekte. Diese Methode wiederum ruft die `comparer` des Objekts <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> Methode, um einzelne Arrayelemente oder Tupelkomponenten, beginnend mit dem ersten Element oder eine Komponente zu vergleichen. Die einzelnen Aufrufe <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> End und dem <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> Methode gibt einen Wert entweder ein Methodenaufruf gibt `false` oder nachdem alle Arrayelemente oder Tupelkomponenten verglichen wurden.  
  
   
  
## Examples  
 Der Standardgleichheitsvergleich `EqualityComparer<Object>.Default.Equals`, betrachtet zwei `NaN` Werte gleich sind. In einigen Fällen, Sie sollten jedoch den Vergleich von `NaN` Werte hinsichtlich ihrer Gleichheit zurückzugebenden `false`, was bedeutet, dass die Werte nicht verglichen werden können. Im folgenden Beispiel wird eine `NanComparer`-Klasse definiert, die die <xref:System.Collections.IStructuralEquatable>-Schnittstelle implementiert. Es vergleicht zwei <xref:System.Double> oder zwei <xref:System.Single> Werte mithilfe des Gleichheitsoperators. Die Werte eines anderen Typs übergeben an den Standardgleichheitsvergleich.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 Das folgende Beispiel erstellt zwei identische 3-Tupel-Objekte, deren Komponenten aus drei bestehen <xref:System.Double> Werte. Der Wert der zweiten Komponente <xref:System.Double.NaN?displayProperty=nameWithType>. Das Beispiel ruft dann die <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> -Methode, und ruft die <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> Methode drei Mal. Erstmals ausführen, übergibt den Standardgleichheitsvergleich, die von zurückgegeben wird das <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> Eigenschaft. Beim zweiten Aufruf übergibt den Standardgleichheitsvergleich, die von zurückgegeben wird das <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> Eigenschaft. Das dritte Mal übergibt die benutzerdefinierte `NanComparer` Objekt. Wie die Ausgabe des Beispiels zeigt, die ersten drei Methodenaufrufe return `true`, während im vierte Aufruf gibt `false`.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Ein Objekt, das den Hashcode des aktuellen Objekts berechnet.</param>
        <summary>Gibt einen Hashcode für die aktuelle Instanz zurück.</summary>
        <returns>Der Hashcode für die aktuelle Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Methode, um benutzerdefinierte Hashcodes für die von Auflistungsobjekten, entsprechen, die dem benutzerdefinierten Vergleich auf Strukturgleichheit überprüft, die von bereitgestellte Zurückgeben der <xref:System.Collections.IStructuralEquatable.Equals%2A> Methode.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn die <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> Methodenrückgabe <see langword="true" /> für zwei Objekte, die Werte zurückgegeben, durch die <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> -Methode für die beiden Objekte muss ebenfalls identisch sein.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>