<Type Name="IComparer" FullName="System.Collections.IComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0303e433ad5b52599d8ee27e0f455b171de421c9" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78715564" /></Metadata><TypeSignature Language="C#" Value="public interface IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IComparer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparer" />
  <TypeSignature Language="F#" Value="type IComparer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Macht eine Methode verfügbar, die zwei Objekte vergleicht.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle wird in Verbindung mit den Methoden <xref:System.Array.Sort%2A?displayProperty=nameWithType> und <xref:System.Array.BinarySearch%2A?displayProperty=nameWithType> verwendet. Es bietet eine Möglichkeit, die Sortierreihenfolge einer Auflistung anzupassen. Hinweise zu Parametern und Rückgabe Werten finden Sie in der <xref:System.Collections.IComparer.Compare%2A>-Methode.  Die generische Entsprechung ist die <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType>-Schnittstelle.   
  
 Die Standard Implementierung dieser Schnittstelle ist die <xref:System.Collections.Comparer>-Klasse. Die generische Version dieser Schnittstelle finden Sie unter <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType>.  
  
   
  
## Examples  

Im folgenden Beispiel wird die <xref:System.Collections.IComparer>-Schnittstelle verwendet, um ein Zeichen folgen Array zu sortieren. In diesem Beispiel wird die <xref:System.Collections.IComparer.Compare%2A>-Methode mit der <xref:System.Collections.CaseInsensitiveComparer>-Klasse implementiert, um die Reihenfolge der Inhalte des Arrays umzukehren.  
  
[!code-csharp[sorting-an-array](~/samples/snippets/csharp/api/system.collections/icomparer/reverse.cs)]
[!code-vb[sorting-an-array](~/samples/snippets/visualbasic/api/system.collections/icomparer/reverse.vb)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Comparer" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Object, y As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Compare(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int" Usage="iComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">Das erste der zu vergleichenden Objekte.</param>
        <param name="y">Das zweite der zu vergleichenden Objekte.</param>
        <summary>Vergleicht zwei Objekte und gibt einen Wert zurück, der angibt, ob ein Wert niedriger, gleich oder größer als der andere Wert ist.</summary>
        <returns>Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt:<br />   – Wenn diese kleiner als 0 (null) sind, ist <paramref name="x" /> kleiner als <paramref name="y" />.<br />   – Wenn diese 0 (null) sind, ist <paramref name="x" /> gleich <paramref name="y" />.<br />   – Wenn diese größer als 0 sind, ist <paramref name="x" /> größer als <paramref name="y" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bevorzugte Implementierung besteht darin, die <xref:System.IComparable.CompareTo%2A>-Methode eines der Parameter zu verwenden.  
  
 Das Vergleichen von `null` mit einem beliebigen Typ ist zulässig und generiert bei der Verwendung <xref:System.IComparable>keine Ausnahme. Beim Sortieren wird `null` als kleiner als ein beliebiges anderes Objekt betrachtet.  
  
   
  
## Examples  

Im folgenden Beispiel wird die <xref:System.Collections.IComparer>-Schnittstelle verwendet, um ein Zeichen folgen Array zu sortieren. In diesem Beispiel wird die <xref:System.Collections.IComparer.Compare%2A>-Methode mit der <xref:System.Collections.CaseInsensitiveComparer>-Klasse implementiert, um die Reihenfolge der Inhalte des Arrays umzukehren.  
  
[!code-csharp[sorting-an-array](~/samples/snippets/csharp/api/system.collections/icomparer/reverse.cs)]
[!code-vb[sorting-an-array](~/samples/snippets/visualbasic/api/system.collections/icomparer/reverse.vb)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Weder <paramref name="x" /> noch <paramref name="y" /> implementieren die <see cref="T:System.IComparable" />-Schnittstelle.  
  
Oder 
 <paramref name="x" /> und <paramref name="y" /> sind nicht vom gleichen Typ. Keines der beiden kann einen Vergleich mit dem jeweils anderen Objekt behandeln.</exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
