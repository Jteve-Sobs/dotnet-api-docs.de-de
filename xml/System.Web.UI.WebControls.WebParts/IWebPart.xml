<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f43a4345fbed22d5bfd7bb0dff3bcfffb3a5acf" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37596349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert allgemeine Benutzeroberflächeneigenschaften, die von ASP.NET-<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle bietet mehrere UI-oriented-Eigenschaften, die die benutzererfahrung für die Arbeit mit <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Beim Erstellen von der Basisklasse abgeleitete Steuerelemente <xref:System.Web.UI.WebControls.WebParts.WebPart> -Klasse, erhalten Sie eine Implementierung aller Eigenschaften in der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle, da die <xref:System.Web.UI.WebControls.WebParts.WebPart> Basisklasse implementiert diese Schnittstelle.  
  
 Können Sie vorhandene Steuerelemente, ASP.NET-Steuerelemente oder benutzerdefinierten Steuerelementen, die nicht von erben die <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse als Teil einer Webparts-Anwendung, und sie können auch diese Benutzeroberfläche orientierte-Eigenschaften, die von der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle. Setzen Sie vorhandene Steuerelemente in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone, bei der Ausführung werden sie von umschlossen eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt. Da die <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Klasse erbt von der <xref:System.Web.UI.WebControls.WebParts.WebPart> Basisklasse, können Sie vorhandene Steuerelemente fungieren als "true" <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, und es werden die Eigenschaften der hinzugefügt der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle.  
  
 Wenn Sie Steuerelemente platzieren, die nicht <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente in Zonen, die sie verwenden die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Eigenschaften zur Laufzeit, und Sie können auch die Werte für diese Eigenschaften deklarieren, auf die Steuerelemente im Markup der Seite (im seitenpersistenten Format). Aber da diese Eigenschaften zur Laufzeit nur auf die Steuerelemente verfügbar sind, während der Entwurfszeit Codierungsfunktionen wie IntelliSense nicht erkennen <xref:System.Web.UI.WebControls.WebParts.IWebPart> Eigenschaften, die auf Serversteuerelemente deklariert werden. Deklarierte Eigenschaften dieser Steuerelemente funktionieren weiterhin, wenn Sie die Seite laden, aber Microsoft Visual Studio nicht die Eigenschaften als gültig, zur Entwurfszeit erkannt werden. Wenn Sie hinzufügen möchten die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Eigenschaften zu vorhandenen Server und Benutzersteuerelemente verlassen, die während der Entwurfszeit-Benutzeroberfläche zu verbessern, können Sie implementieren die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle in einem Serversteuerelement.  
  
 Möglicherweise ist der Hauptgrund zum Implementieren der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle ist für Steuerelemente, die nicht über die Verwendung von Expando (Benutzerdefiniert)-Eigenschaften unterstützen. Expando-Eigenschaften sind Zeichenfolgen, die auf eine Klasse dynamisch als Eigenschaft von hinzugefügt werden können die <xref:System.Web.UI.IAttributeAccessor> Schnittstelle. Steuerelemente, die diese Schnittstelle implementieren einschließlich der <xref:System.Web.UI.WebControls.WebControl> Klasse und dessen untergeordneten Elementen Expando-Eigenschaften verwenden können. Aus diesem Grund alle ASP.NET-Serversteuerelemente, benutzerdefinierte Steuerelemente, die von ihnen ableiten, Web-Benutzersteuerelemente, und <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente unterstützen die Verwendung von Expando-Eigenschaften. Jedoch benutzerdefinierte Steuerelemente, die direkt von der Basisklasse erben <xref:System.Web.UI.Control> Klasse Expando-Eigenschaften nicht unterstützt. Daher, wenn Sie diese Steuerelemente in deklarieren eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, Sie werden nicht in der Lage, deklarieren Sie die allgemeinen <xref:System.Web.UI.WebControls.WebParts.IWebPart> Eigenschaften für die Steuerelemente, Eigenschaften, z. B. <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> und <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>. Wenn Sie diese Eigenschaften mit solche Steuerelemente verwenden möchten, müssen Sie implementieren die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle in einem Benutzersteuerelement. Dies ist eine einfache Implementierung, die minimal zeigt, wie Sie die Eigenschaften zu implementieren.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement. Das Benutzersteuerelement implementiert alle Eigenschaften der <xref:System.Web.UI.WebControls.WebParts.IWebPart> -Schnittstelle sowie zwei zusätzliche Öffentliche Eigeschaften an Steuerelemente gebunden, in der Benutzeroberfläche. Verwenden Sie die beiden benutzerdefinierten Eigenschaften jeder der `Personalizable` -Attribut, das die Werte in diesen Eigenschaften über Browsersitzungen hinweg gespeichert werden kann. Beachten Sie, dass in der Basisklasse <xref:System.Web.UI.WebControls.WebParts.WebPart> Implementierung, die alle Eigenschaften der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle als personalisierbar implementiert, obwohl sie nicht in diesem Codebeispiel sind.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 Der zweite Teil des Codebeispiels wird die Webseite, die das Benutzersteuerelement hostet. Die Seite verfügt über eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zu steuern, in dem das Steuerelement verwiesen wird. Beachten Sie, dass einige der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle-Eigenschaftswerte werden deklarativ im Markup für das Benutzersteuerelement, das ermöglicht, Verhalten und die etwa so aussehen festgelegt ein <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelements zur Entwurfszeit und Laufzeit. Wenn Sie auf die Seite in einem Browser laden, können die Benutzeroberfläche auf der Seite zeigen die Möglichkeit, ändern Sie die Werte der implementierten programmgesteuert <xref:System.Web.UI.WebControls.WebParts.IWebPart> Eigenschaften zur Laufzeit. Wenn Sie einige der Eigenschaftswerte ändern, die Änderungen sind nicht auf der Seite zu sehen, aber in den Quellcode der Seite sichtbar sind (die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Eigenschaft), oder werden in der Anwendung Statusdaten gespeichert (die <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Eigenschaft).  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Normalerweise Sie müssen nicht zum Implementieren der <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> Schnittstelle für benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> -Steuerelemente oder Serversteuerelemente, da die Basis <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Klasse bereits implementiert die Schnittstelle. Benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Steuerelemente und andere Steuerelemente, die in befinden <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> Zonen können alle der <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> Eigenschaften.  Der Hauptgrund zum Implementieren der <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> selbst, ob in einer benutzerdefinierten Schnittstelle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Steuerelement oder ein anderes Serversteuerelement ist, wenn Sie die standardmäßige Implementierung ändern möchten. Beispielsweise empfiehlt es sich um Standardwerte für einige der Eigenschaften bereitzustellen. Ein weiterer Grund für die Schnittstelle in einem Benutzer- oder Server-Steuerelement zu implementieren ist, damit die Entwurfszeit für die Arbeit mit diesen Eigenschaften für das Steuerelement erweitert wird.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL eines Bildes ab, mit dem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement in einem Katalog von Steuerelementen dargestellt wird, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die die URL eines Bilds darstellt, mit dem das Steuerelement in einem Katalog dargestellt wird. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Teile von Webanwendungen bieten häufig eine Katalog (oder Liste) von Steuerelementen, die Benutzer zu einer Seite hinzufügen können. Die <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> -Eigenschaft für ein Steuerelement enthält die URL zu einem Bild, das das Steuerelement darstellt, wenn es in einem Katalog angezeigt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, deklarativ und programmatisch mit der <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Eigenschaft. Der vollständigen Quellcode für das Beispiel befindet sich im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Übersicht über die Klasse.  
  
 Im ersten Teil des Codebeispiels wird veranschaulicht, wie das Steuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Eigenschaft.  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 Der zweite Teil des Codebeispiels wird veranschaulicht, die Methode in das Benutzersteuerelement, die programmgesteuert den Wert für setzt die <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Eigenschaft, wenn ein Benutzer den Namen der entsprechenden Eigenschaft aus den Optionsfeldern auf der Seite auswählt setzt einen neuen Wert in das Textfeld ein, und dann klickt auf die **Update** Schaltfläche.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Im dritten Teil des Codebeispiels wird veranschaulicht, wie der Benutzer steuern, die implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle verwiesen wird, einem <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement, und wie die <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Eigenschaft wird auf dem Steuerelement deklarativ festgelegt. Beachten Sie, da es kein Katalog von Webparts-Steuerelemente, die in diesem Beispiel bereitgestellt ist, die tatsächliche Auswirkung der Einstellung dieser Eigenschaft angezeigt werden.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen kurzen Ausdruck ab, der die Funktion des Steuerelements zusammenfasst und in QuickInfos und Katalogen von <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen verwendet wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die die Funktionen des Steuerelements in Kurzform zusammenfasst. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Eigenschaftswert wird in der Regel als eine beschreibende Zeichenfolge für ein Steuerelement in Katalogen, die Listen bieten verwendet <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, und als QuickInfo in der Titelleiste eines Steuerelements. Der Inhalt der Eigenschaft wird in einer QuickInfo angezeigt, wenn ein Benutzer den Mauszeiger über den Text in der Titelleiste des Steuerelements positioniert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, deklarativ und programmatisch mit der <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Eigenschaft. Der vollständigen Quellcode für das Beispiel befindet sich im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Übersicht über die Klasse.  
  
 Im ersten Teil des Codebeispiels wird veranschaulicht, wie das Steuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Eigenschaft.  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 Der zweite Teil des Codebeispiels wird veranschaulicht, die Methode in das Benutzersteuerelement, die programmgesteuert den Wert für setzt die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Eigenschaft, wenn ein Benutzer den Namen der entsprechenden Eigenschaft aus den Optionsfeldern auf der Seite auswählt setzt einen neuen Wert in das Textfeld ein, und dann klickt auf die **Update** Schaltfläche.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Im dritten Teil des Codebeispiels wird veranschaulicht, wie der Benutzer steuern, die implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle verwiesen wird, einem <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement, und wie die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Eigenschaft wird auf dem Steuerelement deklarativ festgelegt. Beachten Sie, dass Sie den Wert dieser Eigenschaft anzeigen können, indem Sie den Mauszeiger über den Text in der Titelleiste des Steuerelements positionieren, nachdem Sie die Seite in einem Browser geladen haben. Sie können auch experimentieren, programmgesteuert zu ändern, den Wert der Eigenschaft zur Laufzeit beim Laden der Webseite und die bereitgestellte Benutzeroberfläche (UI) verwenden, um den Wert der Eigenschaft zu ändern.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die mit dem Wert der <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />-Eigenschaft verkettet wird, um einen vollständigen Titel für ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zu bilden.</summary>
        <value>Eine Zeichenfolge, die als Untertitel für das Steuerelement fungiert. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> Eigenschaft wird verwendet, um eine standardmäßige Untertitel für zurückzugeben eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, das den Titel des Steuerelements in der Titelleiste angefügt wird.  
  
 Wenn Sie angeben, dass einen Standardwert für die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> -Eigenschaft in ein Steuerelement, implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle, die Webparts, das Steuerelement automatisch festgelegt, fügt diese dem Wert des der <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> -Eigenschaft des Steuerelements zur Laufzeit.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, deklarativ und programmatisch mit der <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> Eigenschaft. Der vollständigen Quellcode für das Beispiel befindet sich im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Übersicht über die Klasse.  
  
 Im ersten Teil des Codebeispiels wird veranschaulicht, wie das Steuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> Eigenschaft. Beachten Sie, dass die Eigenschaft schreibgeschützt ist und soll verwendet werden, um einen Standarduntertitel zu bieten, der auf den wichtigsten Titel eines Steuerelements angefügt wird.  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 Der zweite Teil des Codebeispiels wird veranschaulicht, wie der Benutzer steuern, die implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle verwiesen wird, einem <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement, und wie die schreibbaren Eigenschaften aus <xref:System.Web.UI.WebControls.WebParts.IWebPart> deklarativ für das Steuerelement festgelegt werden. Nachdem Sie die Seite in einem Browser laden, beachten Sie, dass der Standardwert der <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> -Eigenschaft, die im Code zur Implementierung des Benutzersteuerelements festgelegt wurde, wird mit dem Titel in der Titelleiste des Steuerelements angefügt.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Titel eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements ab oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge mit dem Titel des Steuerelements. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Den sichtbaren Titel-Text in der Titelleiste eines Steuerelements wird durch Festlegen der <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> Eigenschaft.  
  
 Wenn Sie einen Titel für ein Steuerelement nicht angeben, berechnet das Webparts-Steuerelement, das automatisch festgelegt, eine Standardzeichenfolge, die als Titel verwenden. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Darüber hinaus ist es möglich, einen Standarduntertitel zu bieten, der an die Title-Zeichenfolge angefügt wird. Ausführliche Informationen finden Sie unter <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, deklarativ und programmatisch mit der <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> Eigenschaft. Der vollständigen Quellcode für das Beispiel befindet sich im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Übersicht über die Klasse.  
  
 Im ersten Teil des Codebeispiels wird veranschaulicht, wie das Steuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> Eigenschaft.  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 Der zweite Teil des Codebeispiels wird veranschaulicht, die Methode in das Benutzersteuerelement, die programmgesteuert den Wert für setzt die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> Eigenschaft, wenn ein Benutzer den Namen der entsprechenden Eigenschaft aus den Optionsfeldern auf der Seite auswählt setzt einen neuen Wert in das Textfeld ein, und dann klickt auf die **Update** Schaltfläche.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Im dritten Teil des Codebeispiels wird veranschaulicht, wie der Benutzer steuern, die implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle verwiesen wird, einem <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement, und wie die <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> Eigenschaft wird auf dem Steuerelement deklarativ festgelegt.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL eines Bilds ab, mit dem ein Webparts-Steuerelement auf dessen eigener Titelleiste dargestellt wird, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die die URL eines Bildes darstellt. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Eigenschaft bietet eine Möglichkeit, ein Symbol zugeordnet eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Das Symbol wird in der Titelleiste des Steuerelements. Thematische aus Konsistenzgründen sollten Anwendungsentwickler dieses Symbol, wie in der Abbildung vornehmen, die das Steuerelement in einem Katalog von Webparts-Steuerelemente darstellt (das Bild, auf die verwiesen wird der <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Eigenschaft).  
  
 Wie sie in der Webparts-Steuerelementsatz, implementiert ist die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Eigenschaft personalisiert werden kann, von Endbenutzern so ändern Sie das Bild oder Symbol, das in der Titelleiste eines Steuerelements angezeigt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, deklarativ und programmatisch mit der <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Eigenschaft. Der vollständigen Quellcode für das Beispiel befindet sich im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Übersicht über die Klasse.  
  
 Im ersten Teil des Codebeispiels wird veranschaulicht, wie das Steuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Eigenschaft.  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 Der zweite Teil des Codebeispiels wird veranschaulicht, die Methode in das Benutzersteuerelement, die programmgesteuert den Wert für setzt die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Eigenschaft, wenn ein Benutzer den Namen der entsprechenden Eigenschaft aus den Optionsfeldern auf der Seite auswählt setzt einen neuen Wert in das Textfeld ein, und dann klickt auf die **Update** Schaltfläche.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Im dritten Teil des Codebeispiels wird veranschaulicht, wie der Benutzer steuern, die implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle verwiesen wird, einem <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement, und wie die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Eigenschaft wird auf dem Steuerelement deklarativ festgelegt. Beachten Sie, dass wenn Sie nicht die URL zu einem echten Bild angeben, ein Platzhalter für das Symbol in der Titelleiste angezeigt wird.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine URL zu ergänzenden Informationen über ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement ab oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die eine URL zu weiteren Informationen über ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement darstellt. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine URL zum Zuweisen der <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> -Eigenschaft, den Titel des Steuerelements wird ein Link. Der Zweck dieser Eigenschaft ist eine bequeme Möglichkeit für Endbenutzer den Zugriff auf zusätzliche Informationen zu einem Steuerelement angeben. Die zusätzliche Informationen kann copyright, Kontaktdaten, Details zu den Ersteller des Steuerelements oder einen Überblick über den Verwendungszweck des Steuerelements bereitstellen.  
  
> [!NOTE]
>  Normalerweise würden Sie keine verwenden die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> Eigenschaft, um auf Hilfeinhalt zu verknüpfen. Die beste Möglichkeit, geben Sie einen Link in der Hilfe für ein Steuerelement ist die Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, deklarativ und programmatisch mit der <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> Eigenschaft. Der vollständigen Quellcode für das Beispiel befindet sich im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.IWebPart> Übersicht über die Klasse.  
  
 Im ersten Teil des Codebeispiels wird veranschaulicht, wie das Steuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> Eigenschaft.  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 Der zweite Teil des Codebeispiels wird veranschaulicht, die Methode in das Benutzersteuerelement, die programmgesteuert den Wert für setzt die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> Eigenschaft, wenn ein Benutzer den Namen der entsprechenden Eigenschaft aus den Optionsfeldern auf der Seite auswählt setzt einen neuen Wert in das Textfeld ein, und dann klickt auf die **Update** Schaltfläche.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 Im dritten Teil des Codebeispiels wird veranschaulicht, wie der Benutzer steuern, die implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPart> Schnittstelle verwiesen wird, einem <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement, und wie die <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> Eigenschaft wird auf dem Steuerelement deklarativ festgelegt. Beachten Sie, dass wenn eine URL zu einer echten Seite nicht angegeben, und klicken Sie dann ein Benutzer auf den Link in der Titelleiste klickt, wird eine Fehlermeldung angezeigt.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      </Docs>
    </Member>
  </Members>
</Type>