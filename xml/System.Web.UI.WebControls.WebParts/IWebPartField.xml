<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33afb8f6041594bb9feb62847562a8e12e08d2f0" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69395207" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <TypeSignature Language="F#" Value="type IWebPartField = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Anbieterschnittstelle für das Verbinden von zwei Serversteuerelementen mit einem einzelnen Datenfeld.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ist für die Verwendung mit Webparts Verbindungen konzipiert. In einer Webparts Verbindung stellen zwei Server Steuerelemente, die sich in einer Zone befinden, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> eine Verbindung her und teilen Daten mit einem Steuerelement, das als Consumer fungiert, und dem anderen Steuerelement, das als Anbieter fungiert. Der Mechanismus für die Freigabe von Daten in einer Webparts Verbindung ist eine Schnittstellen Instanz, die der Anbieter mithilfe einer Rückruf Methode für den Consumer bedient. Zum Herstellen einer Verbindung müssen der Consumer und der Anbieter beide mit dem gleichen Schnittstellentyp für die Datenfreigabe arbeiten. Wenn der Consumer den vom Anbieter gesendeten Schnittstellentyp nicht erkennt, ist es weiterhin möglich, die Steuerelemente mithilfe eines Transformators (ein-Objekt) zu verbinden, der <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> die vom Anbieter gesendete Schnittstellen Instanz in einen Typ übersetzt, den der Consumer erkennt. Weitere Informationen zu Verbindungen finden Sie unter <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> und [Webparts Verbindungen (Übersicht](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))).  
  
 Bei der- <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle handelt es sich um eine Anbieter Schnittstelle, die im Webparts-Steuerelement als Standardschnittstelle zum Erstellen von Verbindungen basierend auf einem Datenfeld enthalten ist. Sie können auch benutzerdefinierte Schnittstellen erstellen, die mit Webparts-Verbindungen verwendet werden können. in vielen datengesteuerten Webanwendungen ist es jedoch hilfreich, Verbindungen basierend auf einer allgemeinen Zeile (Weitere Informationen finden Sie unter der- <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Schnittstelle), Tabelle (Weitere Informationen finden Sie unter der- <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle) oder Feld aus der Datenquelle mithilfe der- <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle zu erstellen. Bei einer typischen Verbindung würde ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, das als Anbieter fungiert, die-Schnittstelle implementieren und den Consumern eine <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Instanz der-Schnittstelle in einer speziellen Rückruf Methode bereitstellen. Der Anbieter kann z. b. eine <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle für ein Feld in der Benutzer Informations Tabelle implementieren, die die Postleitzahl-Daten eines Webbenutzers enthält. Ein anderes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, das als Consumer fungiert, würde eine spezielle Methode für den Empfang der Schnittstellen Instanz definieren und dann die Postleitzahl extrahieren und Wetterinformationen basierend auf der Postleitzahl suchen und anzeigen.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle verfügt über zwei verfügbar gemachte Member. Die- <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> Eigenschaft gibt Schema Informationen über das in einem-Objekt gekapselte Datenfeld zurück <xref:System.ComponentModel.PropertyDescriptor> . Die <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> -Methode deklariert eine Methode, die von einem Implementierer (z. b. einem Anbieter Steuerelement) verwendet wird, um die Felddaten der Schnittstellen Instanz abzurufen, wenn die Rückruf Methode aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe der-Schnittstelle eine statische Verbindung zwischen zwei-Steuerelementen erstellt wird <xref:System.Web.UI.WebControls.WebParts.IWebPartField> . Das Codebeispiel besteht aus drei Teilen:  
  
-   Quellcode für zwei benutzerdefinierte Steuerelemente, die <xref:System.Web.UI.WebControls.WebParts.WebPart> eine Verbindung mithilfe der- <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle bilden können, wobei ein Steuerelement als Anbieter fungiert, das andere als Consumer.  
  
-   Eine Webseite, die die Steuerelemente hostet und die statische Verbindung im Persistenzformat deklariert.  
  
-   Eine Beschreibung, was geschieht, wenn der Beispielcode ausgeführt wird.  
  
 Der erste Teil des Code Beispiels ist der Quellcode für die beiden benutzerdefinierten Steuerelemente. Der erste ist der Code für den Anbieter, der die- <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle implementiert. Der Einfachheit halber erstellt der Anbieter eine Tabelle mit Daten, anstatt eine Verbindung mit einer Datenbank herzustellen. Die `GetConnectionInterface` -Methode dient als Verbindungspunkt des Anbieters, der Rückruf Methode, die die-Schnittstellen Instanz an den Consumer zurückgibt. Für den Consumer wird die Schnittstellen Instanz aus dem Anbieter in der-Methode mit dem Namen abgerufen `SetConnectionInterface` , die mit einem-Attribut gekennzeichnet ist `ConnectionConsumer` . Nachdem die Instanz der Schnittstelle abgerufen wurde, ruft der Consumer in seiner- `OnPreRender` Methode die Implementierung der- <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> Methode im Anbieter auf, um die eigentlichen Daten abzurufen.  
  
 Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den App_Code Ordner der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird die dynamische Kompilierung verwendet. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 Der zweite Teil des Code Beispiels ist die Webseite, die die statische Verbindung deklariert und die Steuerelemente hostet. Im oberen Bereich der Seite befindet sich eine- `Register` Direktive, die den Namespace des Quellcodes deklariert, der im App_Code Verzeichnis enthalten ist. Die Verbindung wird mithilfe eines- `<asp:webpartconnection>` Elements deklariert. Die benutzerdefinierten Consumer-und Anbieter Steuerelemente werden in einem- `<zonetemplate>` Element innerhalb eines- `<asp:webpartzone>` Elements deklariert. Dies ist erforderlich, damit Sie eine Verbindung herstellen können (Sie müssen sich in einer Zone befinden, die von der-Klasse erbt <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ).  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 Lädt die Seite in einem Browser. Das Consumer-Steuerelement zeigt die Daten an, die aus dem angegebenen Feld bereitgestellt werden, das der Anbieter über eine Instanz der <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle verfügbar macht.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Übersicht über Webparts Verbindungen</related>
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : System.Web.UI.WebControls.WebParts.FieldCallback -&gt; unit" Usage="iWebPartField.GetFieldValue callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Ein <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" />-Delegat, der die Adresse einer Methode enthält, die die Daten empfängt.</param>
        <summary>Gibt den Wert für das Feld zurück, das von der Schnittstelle als Basis einer Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um die von der-Schnittstelle bestandenen Daten Feldwerte abzurufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Implementierung und die Verwendung der- <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> Methode veranschaulicht. Das komplette Beispiel wird in der Klassen Übersicht für die- <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle gezeigt. Das Anbieter Steuerelement implementiert die- <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> Methode, wobei der Wert eines bestimmten Felds in der Datentabelle zurückgegeben wird. Das Consumer-Steuerelement ruft die- <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> Methode in der- `OnPreRender` Methode auf, sodass der Wert der Daten auf die Seite geschrieben werden kann.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schemainformationen für ein Datenfeld ab, mit dessen Hilfe von zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen Daten gemeinsam verwendet werden können.</summary>
        <value>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Schemainformationen für das Datenfeld beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft stellt Eigenschafts Informationen für die von der-Schnittstelle über gebenden Daten bereit. Transformator-und Consumersteuerelemente können diese Eigenschaft Abfragen, um Informationen über den Typ, den Inhalt und andere Details des Felds, das in der <xref:System.Web.UI.WebControls.WebParts.IWebPartField> von einem Anbieter gesendeten Schnittstellen Instanz enthalten ist, zu erhalten.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Implementierung und Verwendung der- <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> Eigenschaft. Das komplette Beispiel wird in der Klassen Übersicht für die- <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle gezeigt. Das Anbieter Steuerelement implementiert die- <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> Eigenschaft. In der- `GetFieldValue` Methode wird anschließend die-Eigenschaft verwendet, um den Feldwert abzurufen.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>
