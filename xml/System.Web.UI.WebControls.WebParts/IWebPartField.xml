<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02f528dbdcd722988de202fead4382c1d26975f4" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51878385" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <TypeSignature Language="F#" Value="type IWebPartField = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Anbieterschnittstelle für das Verbinden von zwei Serversteuerelementen mit einem einzelnen Datenfeld.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle soll mit Webparts-Verbindungen verwendet werden. In einer Webparts-Verbindung zwei Serversteuerelemente in einem <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone Herstellen einer Verbindung und die Freigabe-Daten, mit einem Steuerelement als Consumer fungiert und das andere Steuerelement als Anbieter fungiert. Der Mechanismus zur Freigabe von Daten in einer Webparts-Verbindung ist eine Schnittstelleninstanz, die der Anbieter an den Consumer über eine Rückrufmethode bereitstellt. Um eine Verbindung herzustellen, müssen Consumer und Anbieter sowohl mit dem gleichen Schnittstellentyp arbeiten für die Freigabe von Daten. Wenn der Consumer den Schnittstellentyp, der vom Anbieter nicht erkennt, ist es weiterhin möglich, die Steuerelemente mithilfe eines Transformators verbunden (eine <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt), übersetzt die Schnittstelleninstanz, die vom Anbieter gesendet wird, in einen Typ, der Consumer erkennt. Weitere Informationen zu Verbindungen, finden Sie unter <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> und [Web Parts Verbindungen Overview](https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle ist eine Anbieterschnittstelle, die mit dem Webparts-Steuerelement, das als einer Standardschnittstelle zum Erstellen von Verbindungen, die basierend auf ein Feld enthalten. Sie können auch benutzerdefinierte Schnittstellen für die Verwendung mit Webparts-Verbindungen erstellen, aber in vielen Webanwendungen für datengesteuerte, es ist hilfreich, Verbindungen, die auf der Grundlage einer gemeinsamen Zeile erstellen (Weitere Informationen finden Sie unter der <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Schnittstelle), Tabelle (Weitere Informationen finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> -Schnittstelle), oder Feldknoten aus der Datenquelle, mit der <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle. In einer typischen-Verbindung eine <xref:System.Web.UI.WebControls.WebParts.WebPart> fungiert steuern, wie ein Anbieter implementiert würde die <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle, und stellen Sie eine Instanz der Schnittstelle für Kunden in eine spezielle Rückrufmethode. Beispielsweise der Anbieter implementiert möglicherweise eine <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle für ein Feld in der Tabelle mit den Benutzer, die eine Webbenutzers Postleitzahl Daten enthält. Eine andere <xref:System.Web.UI.WebControls.WebParts.WebPart> fungiert steuern, wie ein Consumer eine spezielle Methode zum erhalten der Schnittstelleninstanz, konnte die Postleitzahlendaten extrahieren und Nachschlagen und Wetterdaten basierend auf der Postleitzahl anzeigen definieren.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle verfügt über zwei verfügbar gemachten Member. Die <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> Eigenschaft gibt die Schemainformationen über das Datenfeld in den gekapselt ist eine <xref:System.ComponentModel.PropertyDescriptor> Objekt. Die <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> Methode deklariert eine Methode, die eine Implementierung (z. B. einem Anbietersteuerelement) verwendet wird, um die Schnittstelleninstanz-Feld-Daten abgerufen werden soll, wenn die Callback-Methode aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer statischen Verbindungs zwischen zwei Steuerelementen mithilfe der <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle. Im Codebeispiel besteht aus drei Teilen:  
  
-   Quellcode für zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die eine Verbindung mit bilden, kann die <xref:System.Web.UI.WebControls.WebParts.IWebPartField> -Schnittstelle, ein Steuerelement fungiert als Anbieter, der andere als Consumer fungiert.  
  
-   Eine Webseite, die die Steuerelemente hostet, und die statische Verbindung im seitenpersistenten Format deklariert.  
  
-   Eine Beschreibung dessen, was geschieht, wenn der Beispielcode ausgeführt wird.  
  
 Der erste Teil des Codebeispiels wird der Quellcode für die beiden benutzerdefinierten Steuerelemente. Zunächst wird der Code für den Anbieter implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle. Im Beispiel wird der Einfachheit halber erstellt der Anbieter eine Tabelle mit Daten an, statt eine Verbindung mit einer Datenbank an. Die `GetConnectionInterface` Methode dient als Verbindungspunkt für den Anbieter, die Callback-Methode, die die Schnittstelleninstanz an die Consumer zurückgibt. Der Consumer ruft es die Schnittstelleninstanz vom Anbieter in der Methode, die mit dem Namen `SetConnectionInterface`, die markiert ist, mit einem `ConnectionConsumer` Attribut. Nach dem Abrufen der Instanz der Schnittstelle den Consumer ein, in der `OnPreRender` Methodenaufrufe, die Implementierung der <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> -Methode in der Anbieter auf, um die eigentlichen Daten abzurufen.  
  
 Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierung. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuerelements](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 Der zweite Teil des Codebeispiels wird die Webseite, die die statische Verbindung und die Hosts die Steuerelemente deklariert. Am oberen Rand der Seite befindet sich eine `Register` -Direktive, die den Namespace des Quellcodes enthalten, die im Verzeichnis "App_Code" deklariert. Die Verbindung wird deklariert, mit einem `<asp:webpartconnection>` Element. In der benutzerdefinierten Consumer- und anbietersteuerelementen deklariert eine `<zonetemplate>` Element innerhalb einer `<asp:webpartzone>` -Element, das für diese Verbindung hergestellt werden muss (Unterverzeichnisstruktur müssen innerhalb einer Zone, die von erbt die <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Klasse).  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 Laden Sie die Seite in einem Browser. Das Consumer-Steuerelement zeigt die Daten aus dem angegebenen Feld, die der Anbieter durch eine Instanz der verfügbar macht die <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Übersicht über Webparts</related>
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : System.Web.UI.WebControls.WebParts.FieldCallback -&gt; unit" Usage="iWebPartField.GetFieldValue callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Ein <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" />-Delegat, der die Adresse einer Methode enthält, die die Daten empfängt.</param>
        <summary>Gibt den Wert für das Feld zurück, das von der Schnittstelle als Basis einer Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um die Datenfeldwerte übergeben, die von der Schnittstelle abzurufen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Implementierung und Verwendung der <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> Methode. Das vollständige Beispiel wird gezeigt, in der Übersicht zur Klasse der <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle. Das Anbietersteuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> -Methode an und gibt den Wert für ein bestimmtes Feld in der Datentabelle. Ruft der Consumer-Steuerelement die <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> -Methode in der die `OnPreRender` -Methode, damit der Wert der Daten auf die Seite geschrieben werden kann.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schemainformationen für ein Datenfeld ab, mit dessen Hilfe von zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen Daten gemeinsam verwendet werden können.</summary>
        <value>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Schemainformationen für das Datenfeld beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bietet Eigenschafteninformationen für die Daten, die von der Schnittstelle übergeben. Transformer und Consumer-Steuerelemente können diese Eigenschaft zum Abrufen von Informationen über den Typ, Inhalt, Abfragen und andere Details des Felds in die <xref:System.Web.UI.WebControls.WebParts.IWebPartField> clusternetzwerkschnittstellen-Instanz, die von einem Anbieter gesendet.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Implementierung und Verwendung der <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> Eigenschaft. Das vollständige Beispiel wird gezeigt, in der Übersicht zur Klasse der <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle. Das Anbietersteuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> Eigenschaft. Klicken Sie auf die `GetFieldValue` -Methode, verwendet er die Eigenschaft, um den Feldwert abzurufen.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>