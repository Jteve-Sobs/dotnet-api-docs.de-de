<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8533d1bcb2037288a1d1f3165cc140cabc83d902" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51907121" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fungiert als Basisklasse zum Definieren von Verbindungspunktobjekten, sodass das Consumer-Steuerelement und das Anbietersteuerelement Daten in einer Webparts-Verbindung gemeinsam nutzen können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Webparts-Verbindung besteht aus zwei Serversteuerelementen, die Freigabe von Daten: ein Steuerelement ist der Consumer, die andere den Anbieter. Eine Erläuterung der die wesentlichen Komponenten von einer Webparts-Verbindung, und die Connection-Objekt selbst, finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> Übersicht über die Klasse. Alle Webparts-Verbindung erfordert Verbindungspunkten. Der Anbieter und Consumer-Steuerelement müssen jede verfügen über mindestens einen definierten <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> -Objekt (jeder von ihnen haben kann optional mehrere Verbindungspunkte), enthält die Details für das wie ein Steuerelement den Typ der Daten zu einem anderen Steuerelement es eine Verbindung herstellen kann, kann gemeinsam nutzen. Bei einer tatsächlichen-Verbindung der Anbieter hat einen eigenen Typ eines Verbindungspunktobjekts (abgeleitet von der Basisklasse <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Klasse), ein <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> -Instanz und der Consumer hat sein eigenes Objekt, ein <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Instanz.  
  
 Um ein Anbieterverbindungspunkt erstellen zu können, müssen Entwickler eine Rückrufmethode an den Anbieter hinzufügen, die eine Instanz der implementierten Schnittstelle an einen Consumer zurückgibt. Sie müssen die Callback-Methode im Quellcode mit kennzeichnen einer `ConnectionProvider` Code-Attribut (finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> Klasse). Auf ähnliche Weise um einen Consumer-Verbindungspunkt erstellen zu können, müssen Entwickler eine Methode hinzufügen, an den Consumer, die eine Schnittstelleninstanz empfängt und sie müssen diese Methode mit Markieren einer `ConnectionConsumer` Attribut (finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> Klasse).  
  
 Wenn Entwickler Verbindungen auf einer Webseite erstellen, können sie als statische oder dynamische Verbindungen erstellt werden. Statische Verbindungen werden im Markup einer Webseite deklariert. Wenn eine Verbindung statische deklariert wird, Entwickler können festlegen, welche Verbindungspunkte für den Consumer und Anbieter verwendet werden, durch das Zuweisen von Werten zu den `ProviderConnectionPointID` und `ConsumerConnectionPointID` -Attribut in der `<asp:webpartconnection>` Elementtag. Dieser Ansatz ist besonders hilfreich, wenn es mehrere Verbindungspunkte, die in der Consumer- und anbietersteuerelementen definiert sind, weil dadurch die statische Verbindung zum Identifizieren der Verbindungspunkte, die für die Verbindung verwendet.  
  
 Dynamische Verbindungen werden programmgesteuert erstellt, eines Entwicklers Code oder von Benutzern über die Benutzeroberfläche (UI) von bereitgestellten der <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> Steuerelement. Um eine Verbindung im Code zu erstellen, müssen Entwickler rufen Sie eine Instanz von einem <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> -Objekt durch Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> Methode für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Bevor sie diese Methode aufrufen können, benötigen Entwickler Verweise auf der Consumer und Anbieter-Steuerelemente und ihre jeweiligen Dienstverbindungspunkt-Objekten. Rufen Sie Verweise auf die Verbindungspunkte für einen Anbieter und einem Consumersteuerelement Entwickler rufen Sie zuerst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> Methoden für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Diese Methoden geben die Point-Objekte, die wiederum an die Methode zum Erstellen einer Verbindung übergeben werden, kann die entsprechende Verbindung zurück.  
  
 Wenn des Anbieters und des Consumers Dienstverbindungspunkt-Objekten, mit denen, die sowohl die gleiche Art von Schnittstelle zusammenarbeiten, sie sind kompatibel und können eine direkte Verbindung zur Datenfreigabe bilden. Wenn sie nicht mit dem gleichen Schnittstellentyp, arbeiten eine <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt muss verwendet werden, um die Schnittstelleninstanz des Anbieters in einen Typ zu übersetzen, die der Consumer verwenden können.  
  
 Die abstrakte <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Klasse enthält die grundlegenden Details von Verbindungspunkten, die von sowohl Consumer- und anbietersteuerelementen gemeinsam genutzt werden. Mehrere Eigenschaften enthalten diese Details an. Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> Eigenschaft gibt an, ob ein Verbindungspunkt mehrere Verbindungen zu einem Zeitpunkt teilnehmen kann. In der Standardeinstellung Anbieterverbindungspunkten mehrere Verbindungen teilnehmen können, und Consumerverbindungspunkten nicht möglich. Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> -Eigenschaft gibt den Typ des Serversteuerelements ein Verbindungspunkt zugeordnet. Beachten Sie, dass nicht nur <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente können Verbindungen bilden; jedes Serversteuerelement, ob ein ASP.NET-Steuerelement an, ein benutzerdefiniertes Steuerelement oder ein Benutzersteuerelement, kann aktiviert werden, um an Verbindungen teilnehmen, wenn in einem <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone. Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Eigenschaft stellt einen Anzeigenamen für den Verbindungspunkt, der in der Benutzeroberfläche zur Unterstützung der Benutzer, die Erstellen von Verbindungen angezeigt werden kann. Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> Eigenschaft dient als ein Zeichenfolgenbezeichner für das Objekt selbst. Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Eigenschaft gibt an, welche Art von clusternetzwerkschnittstellen-Instanz über der Verbindungspunkt versteht. Gibt an, ob die ein bestimmten Verbindungspunkt enthält oder verwendet eine Instanz dieser Schnittstelle richtet sich nach, ob eine <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> oder <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekt.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> -Klasse verfügt über eine Methode. Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Methode gibt einen booleschen Wert, der angibt, ob ein Verbindungspunkt momentan an Verbindungen teilnehmen kann.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> -Klasse verfügt auch über ein öffentliches Feld, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>. Dieses Feld enthält einen Wert, der der Standardverbindungspunkt in einer Verbindung zu identifizieren.  
  
> [!NOTE]
>  Die Attribute zum Angeben von Methoden haben nur ein erforderlichen Parameter, Verbindungspunkt `displayName`, daher ist es möglich, das Standard-Verbindungsattribut von Punkt zu erstellen, ohne eine ID anzugeben. In solchen Fällen die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> Feld stellt einen Basiswert verwenden.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Erstellung einer Webparts-Verbindung mit den erforderlichen <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Objekte. Da die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> -Klasse ist eine abstrakte Basisklasse, die Instanzen der untergeordneten Klassen –<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> und <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>– die tatsächlichen Objekte, die zum Herstellen einer Verbindung verwendet werden.  
  
 Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, ändern Sie die Webparts-Anzeigemodus auf einer Seite.  
  
-   Quellcode für eine Schnittstelle und die beiden <xref:System.Web.UI.WebControls.WebParts.WebPart> fungiert als Anbieter und Consumer für eine Verbindung steuert.  
  
-   Eine Webseite auf alle Steuerelemente hosten, und führen das Codebeispiel.  
  
-   Eine Erklärung, wie die Beispielseite ausgeführt werden soll.  
  
 Der erste Teil dieses Codebeispiels wird das Benutzersteuerelement, das Benutzern ermöglicht, den Anzeigemodus auf einer Webseite zu ändern. Den folgende Quellcode in einer ASCX-Datei speichern, die durch das Erteilen sie des Dateinamen, die zugewiesen ist, die `Src` Attribut der `Register` die Richtlinie für dieses Steuerelement, das am oberen Rand der Hostingwebseite ist. Weitere Informationen zu Modi und eine Beschreibung des Quellcodes in diesem Steuerelement anzuzeigen, finden Sie unter [Exemplarische Vorgehensweise: Ändern des Anzeigemodus auf einer Webparts-Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 Der zweite Teil des Codebeispiels wird der Quellcode für die Benutzeroberfläche und Steuerelemente. Die Quelldatei enthält eine einfache Schnittstelle mit dem Namen `IZipCode`. Es gibt auch eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse mit dem Namen `ZipCodeWebPart` , implementiert die Schnittstelle, und wie das Anbietersteuerelement fungiert. Die `ProvideIZipCode` Methode ist die Callback-Methode, nur die Member der Schnittstelle implementiert. Die Methode gibt einfach eine Instanz der Schnittstelle zurück. Beachten Sie, die die Methode mit einem `ConnectionProvider` Attribut in seinen Metadaten. Dies ist der Mechanismus für die Methode als die Callback-Methode für den Anbieterverbindungspunkt identifiziert. Die andere <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse `WeatherWebPart`, und fungiert als Consumer für die Verbindung. Diese Klasse verfügt über eine Methode namens `GetZipCode` , die eine Instanz des ab der `IZipCode` Schnittstelle aus dem Anbietersteuerelement. Beachten Sie, dass diese Methode als die Consumer Verbindung mit gekennzeichnet ist eine `ConnectionConsumer` Attribut in seinen Metadaten. Dies ist der Mechanismus zum Identifizieren der Verbindung Point-Methode im Consumersteuerelement.  
  
 Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierung. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuerelements](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 Der dritte Teil des Codebeispiels wird die Webseite. Im oberen Bereich werden `Register` Anzeigemodi von Anweisungen zum Registrieren die benutzerdefinierten Steuerelemente, die die Verbindung zu bilden, und das Benutzersteuerelement, das Benutzern ermöglicht, ändern Sie auf der Seite. Die Verbindung selbst wird deklarativ in erstellt die `<staticconnections>` Element auf der Seite. Sie können die Verbindung auch programmgesteuert erstellen. der Code dafür ist Bestandteil der `Button1_Click` Methode. Ob die Verbindung entweder deklarativ oder programmgesteuert erstellt wird, müssen immer Verbindungspunkte für den Anbieter und Consumer angegeben werden. Die `Button2_Click` Methode greift auf die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> von Objekten für den Anbieter und Consumer und schreibt Sie einige der zugehörigen Eigenschaftswerte enthält, in eine Bezeichnung auf der Seite.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, klicken Sie auf die **Details bezüglich der Verbindungspunkte** Schaltfläche. Informationen zum Anbieter und Consumer zeigt Verbindung hergestellt werden, in der deklarativen Verbindung angezeigt. Verwenden Sie als Nächstes die **Anzeigemodus** Verbindungsmodus, Dropdown-Steuerelement auf die Seite in wechseln. Für das Verbenmenü eines der <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente (dargestellt durch einen Pfeil in der Titelleiste), klicken Sie auf der Connect-Verb. Die Verbindung, die Benutzeroberfläche angezeigt wird, erstellt automatisch von der `<asp:connectionszone>` Steuerelement deklariert werden, auf der Seite. Klicken Sie auf die **trennen** Schaltfläche, um die vorhandene Verbindung zu beenden. Verwenden der **Anzeigemodus** Steuerelement in den Durchsuchen-Modus zurück. Klicken Sie anschließend die **dynamische Verbindung** klicken, um programmgesteuert eine Verbindung zu erstellen. Klicken Sie auf die **Verbindungsdetails zeigen** erneut auf die Schaltfläche, um Details zu den zwei Dienstverbindungspunkt-Objekten anzugeben.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Übersicht über Webparts</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Verbindungspunkt mehrere Verbindungen gleichzeitig unterstützt.</summary>
        <value><see langword="true" />, wenn der Verbindungspunkt mehrere Verbindungen unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> Objekte verfügen über ihre <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> -Eigenschaftswert festgelegt wird, um `true` (durch die <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> Klasse), da die Webparts-Steuerelementsatz standardmäßig Anbieterverbindungspunkten Verbindungen an mehrere Consumer ermöglicht.  
  
 Im Gegensatz dazu <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekte verfügen über ihre <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> -Eigenschaftswert festgelegt wird, um `false` (durch die <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> Klasse), da die Webparts-Steuerelementsatz standardmäßig ermöglicht das Consumer-Verbindung verweist auf das Herstellen einer Verbindung mit nur ein Anbieter auf eine Zeit.  
  
 Sie können das Standardverhalten, das über mehrere Verbindungen durch Zuweisen von anderen Werten zu ändern der <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> -Eigenschaft (für Anbieter) oder die <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> Eigenschaft (bei Verbraucher) auf die beiden <xref:System.Attribute> Klassen, die für die Verbindungsattribute. Wenn Sie Consumerverbindungspunkten zur gleichen Zeit eine Verbindung für mehrere Anbieter aktivieren, muss alle sich daraus ergebenden Synchronisierungsprobleme Code bewältigen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> Eigenschaft sowohl <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> und <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekte. Dieses Codebeispiel zeigt nur die Webseite, die den Code, um Zugriff auf die Eigenschaft enthält; für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Übersicht über die Klasse.  
  
 Der Code in die `Button2_Click` Methode greift der Webseite auf die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> -Eigenschaft für jede der Verbindungspunkt Objekten und schreibt Sie jeden Wert in eine Bezeichnung. Führen Sie den Code, indem Sie auf die **Details bezüglich der Verbindungspunkte** Schaltfläche, nachdem die Seite in einem Browser geladen wird.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Type" /> des Serversteuerelements ab, dem ein Verbindungspunkt zugeordnet ist.</summary>
        <value>Ein <see cref="T:System.Type" />, der den Steuerelementtyp darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> -Eigenschaft ist häufig die <xref:System.Web.UI.WebControls.WebParts.WebPart> Typ. Jedoch, da jede Art von Steuerelement oder ein Serversteuerelement an Verbindungen teilnehmen kann, wenn sie ordnungsgemäß aktiviert ist und eine <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone, die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Eigenschaft kann einer dieser anderen Server Steuerelementtypen ebenfalls zurück.  
  
 Server bei der Steuerelemente, die nicht <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente befinden sich einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone, die diese umschlossen werden, mit einer <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt zur Laufzeit, sodass sie als fungieren können <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente sowie die Teilnahme an Verbindungen. Aber solche Steuerelemente Verbindungen beteiligt sind, wenn die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> gibt keinen Eigenschaftswert zurück. die <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> -Typ. gibt den Typ des der <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> des Objekts untergeordnete Steuerelement, der den Typ, der die Server- oder Benutzersteuerelement ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Eigenschaft sowohl <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> und <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekte. Dieses Codebeispiel zeigt nur die Webseite, die den Code, um Zugriff auf die Eigenschaft enthält; für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Übersicht über die Klasse.  
  
 Der Code in die `Button2_Click` Methode greift der Webseite auf die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> -Eigenschaft für jede der Verbindungspunkt Objekten und schreibt Sie jeden Wert in eine Bezeichnung. Führen Sie den Code, indem Sie auf die **Details bezüglich der Verbindungspunkte** Schaltfläche, nachdem die Seite in einem Browser geladen wird.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt eine Zeichenfolge dar, mit der der Standardverbindungspunkt innerhalb einer Auflistung von Verbindungspunkten identifiziert wird, die einem Steuerelement zugeordnet sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Verbindungspunkt erstellt wurde, es ist möglich, geben Sie eine ID für den Verbindungspunkt in den Quellcode einer Consumer- oder Anbietersteuerelement <xref:System.Web.UI.WebControls.WebParts.WebPart> steuern, mit einer <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> oder <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> Attribut. Aber wenn ein Attribut mit einem Verbindungspunkt in der Quellcode hinzugefügt wird die `ID` Parameter ist optional. Wenn die ID nicht im Attribut angegeben ist die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> Feld enthält eine Zeichenfolge, die zum Identifizieren der Standardverbindungspunkt verwendet wird.  
  
 Wenn mehrere Verbindungspunkte in einem Steuerelement Consumer- oder Anbietersteuerelement definiert sind, ist es erforderlich, eine für jeden Verbindungspunkt-ID anzugeben, damit die Verbindungspunkte unterschieden werden können, wenn Sie Verbindungen zu erstellen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die als benutzerfreundlicher Anzeigename dient und einen Verbindungspunkt in der Benutzeroberfläche darstellt.</summary>
        <value>Eine Zeichenfolge, die einen benutzerfreundlichen Anzeigenamen für ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />-Objekt enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um ein Webparts-Verbindung zu erstellen, müssen die Anbieter und Consumer-Steuerelemente für die Verbindung jeden mindestens ein Verbindungspunkt, eine Methode angeben, die es ihnen ermöglicht die Kommunikation und Datenaustausch. Um diesen Punkt Verbindungsmethoden identifizieren zu können, gibt ein Entwickler ein Attribut auf die ausgewählten Methoden. Anbieter wird ein `ConnectionProvider` -Attribut festgelegt ist, auf die ausgewählten Callback-Methode, und klicken Sie im Consumer, eine `ConnectionConsumer` -Attribut festgelegt ist, auf die Methode, die eine Instanz einer Schnittstelle empfangen, die Daten vom Anbieter enthält. Für beide Attribute, die einen Parameter, der immer erforderlich ist, unabhängig davon, welche Überladung deklariert ist, erstellen Sie das Attribut ist der `displayName` Parameter. Der Entwickler muss eine Zeichenfolge, die als einen Anzeigenamen für den Verbindungspunkt verwendet zuweisen und diese Zeichenfolge wird als Wert für die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Eigenschaftswert wird auf der Benutzeroberfläche einer Webseite angezeigt, wenn Benutzer Verbindungen erstellen. Z. B., wenn die <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> Steuerelement wird es erstellt eine Benutzeroberfläche für Benutzer zum Herstellen von Verbindungen zwischen Steuerelementen auf der Seite hinzugefügt. Nachdem ein Benutzer wechselt von einer Seite in den Verbindungsanzeigemodus und klickt auf ein Verb Connect auf einem <xref:System.Web.UI.WebControls.WebParts.WebPart> zu steuern, die Verbindung wird die Benutzeroberfläche angezeigt. Jedes Steuerelement, das in einer Verbindung teilnehmen kann, finden Sie in der Benutzeroberfläche, und neben jedem Steuerelement ist ein Dropdown-Listenfeld-Steuerelement, die Anzeigenamen des verfügbaren Verbindungspunkte anzeigt. Benutzer müssen mindestens einen Verbindungspunkt zum Herstellen einer Verbindung auswählen. Die Werte in der Liste der Verbindungspunkte erhalten Sie vom der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Eigenschaft. Wenn Entwickler eine benutzerdefinierte Benutzeroberfläche zum Erstellen von Verbindungen zu erstellen, können sie verwenden die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> -Eigenschaft in eine ähnliche Weise wie einen Anzeigenamen angeben, das einen Verbindungspunkt darstellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein anderes Serversteuerelement, das einem Verbindungspunkt zugeordnet wird.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob ein Verbindungspunkt an Verbindungen teilnehmen kann.</summary>
        <returns><see langword="true" />, wenn das Steuerelement einen Verbindungspunkt erstellen kann, um an einer Verbindung teilzunehmen, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> -Methode in Basis- <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> -Basisklasse gibt immer `true`, aber die abgeleitete Klassen können überschreiben, die Methode zurückgibt `true` oder `false` zu unterschiedlichen Zeitpunkten basierend auf den Zustand des `control`.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Methode sowohl <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> und <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekte. Dieses Codebeispiel zeigt nur die Webseite, die den Code, um Zugriff auf die Eigenschaft enthält; für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Übersicht über die Klasse.  
  
 Der Code in die `Button2_Click` Methode greift der Webseite auf die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> -Methode für den Verbindungspunkt Objekten und schreibt Sie jeden Wert in eine Bezeichnung. Führen Sie den Code, indem Sie auf die **Details bezüglich der Verbindungspunkte** Schaltfläche, nachdem die Seite in einem Browser geladen wird.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die den Bezeichner für einen Verbindungspunkt enthält.</summary>
        <value>Eine Zeichenfolge, die den Bezeichner für einen Verbindungspunkt enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Entwickler deklariert eine <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> oder <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> Attribut für eine Methode im Quellcode eines Steuerelements, damit die Methode, die als Verbindungspunkt, verwendet werden kann es nicht erforderlich, deklarieren die `ID` -Parameter für das Point-Verbindungsattribut. Das einzige erforderliche Attribut ist der `displayName` Parameter. An den Verbindungspunkt, eine Standard-ID zugewiesen ist, mit dem Wert aus der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> Feld.  
  
 Ist es nur eine Methode in einem Steuerelement, das als Verbindungspunkt verwendet wird, ist es nicht erforderlich, eine ID für den Verbindungspunkt an. Wenn mehrere Methoden, die als Verbindungspunkte vorhanden sind, müssen Sie eine ID für jede einzelne angeben. Andernfalls wird eine Ausnahme ausgelöst werden. Durch jeden Verbindungspunkt eine ID zugewiesen haben, können auch die Verbindungspunkt, mit denen Sie Verbindungen auf Webseiten zu deklarieren, oder sie im Code erstellen angeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> Eigenschaft sowohl <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> und <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekte. Dieses Codebeispiel zeigt nur die Webseite, die den Code, um Zugriff auf die Eigenschaft enthält; für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Übersicht über die Klasse.  
  
 Der Code in die `Button2_Click` Methode greift der Webseite auf die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> -Eigenschaft für jede der Verbindungspunkt Objekten und schreibt Sie jeden Wert in eine Bezeichnung. Führen Sie den Code, indem Sie auf die **Details bezüglich der Verbindungspunkte** Schaltfläche, nachdem die Seite in einem Browser geladen wird.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ von der von einem Verbindungspunkt verwendeten Schnittstelle ab.</summary>
        <value>Ein <see cref="T:System.Type" />, der dem von einem Steuerelement bereitgestellten oder verwendeten Schnittstellentyp entspricht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Eigenschaft gibt an, welche Art von Schnittstelle ein Verbindungspunkt verwendet. Damit können Sie feststellen, ob zwei Steuerelemente kompatibel und kann das Herstellen eine Verbindung. Wenn des Anbieterverbindungspunkts <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> unterscheidet sich von des Consumerverbindungspunkt <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, und klicken Sie dann die beiden Steuerelemente nicht kompatibel sind (d. h., dass sie ohne einen Transformator direkt verbunden werden können), und ein <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt muss zum Herstellen einer Verbindung verwendet werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Eigenschaft sowohl <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> und <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekte. Dieses Codebeispiel zeigt nur die Webseite, die den Code, um Zugriff auf die Eigenschaft enthält; für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Übersicht über die Klasse.  
  
 Der Code in die `Button2_Click` Methode greift der Webseite auf die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> -Eigenschaft für jede der Verbindungspunkt Objekten und schreibt Sie jeden Wert in eine Bezeichnung. Führen Sie den Code, indem Sie auf die **Details bezüglich der Verbindungspunkte** Schaltfläche, nachdem die Seite in einem Browser geladen wird.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
  </Members>
</Type>