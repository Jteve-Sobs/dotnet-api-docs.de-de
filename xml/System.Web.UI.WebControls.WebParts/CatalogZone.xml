<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cef57369c67df3c744525c16314e7261b734f49a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402037" /></Metadata><TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als primäres Steuerelement im Webparts-Steuerelementsatz zum Hosten von <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-Steuerelementen auf einer Webseite.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Innerhalb des Webparts Steuerelement Satzes ist eine Zone eine Region auf einer Webseite, die Webparts Steuerelemente enthält. Eine Webparts Zone wird von einem Zonen Steuerelement erstellt, bei dem es sich <xref:System.Web.UI.WebControls.CompositeControl> um einen Typ handelt, der zum enthalten weiterer Steuerelemente entworfen wurde. Die primären Funktionen einer Zone bestehen darin, die darin enthaltenen Steuerelemente festzulegen und eine gemeinsame Benutzeroberfläche (User Interface, UI) für diese Steuerelemente bereitzustellen. Allgemeine Informationen zu Zonen und deren Verwendung in Webparts Anwendungen finden Sie in der-Basis <xref:System.Web.UI.WebControls.WebParts.WebZone> Klasse und Webparts- [Steuerelement Satz Übersicht](https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)).  
  
 Ein wichtiges Feature von Webparts-Steuerelementen besteht darin, dass Endbenutzer Webseiten gemäß Ihren Einstellungen ändern (oder personalisieren) und Ihre personalisierten Einstellungen für zukünftige Browsersitzungen speichern können. Ein Aspekt der Änderung von Webparts Seiten umfasst die Möglichkeit, <xref:System.Web.UI.WebControls.WebParts.WebPart> einer Webparts Seite Steuerelemente oder andere Server Steuerelemente hinzuzufügen. Das <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Steuerelement stellt eine Liste oder einen Katalog von Steuerelementen bereit, die Benutzer zu einer Seite hinzufügen können.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Steuerelement ist eines der grundlegenden Steuerelemente im Webparts Steuerelement Satz. Sie wird von der <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> -Klasse abgeleitet, und der größte Teil ihres Verhaltens wird von dieser Klasse geerbt. Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Klasse fügt der Basisklasse eine Zonen Vorlage hinzu, bei der es sich um eine <xref:System.Web.UI.ITemplate> Implementierung der-Schnittstelle handelt. Die Zonen Vorlage ermöglicht Entwicklern das deklarative hinzu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> fügen von Steuerelementen zu einer Zone im Seiten persistenten Format.  
  
> [!IMPORTANT]
>  Eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone kann nur <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuer <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Elemente enthalten, und umgekehrt können sich Steuerelemente nur in Zonen befinden, <xref:System.Web.UI.WebControls.WebParts.CatalogZone>die <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> von der-Klasse abgeleitet werden, z. b.  
  
 Ein <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement wird nur dann sichtbar, wenn ein Benutzer eine Webseite in den Katalog Anzeige<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>Modus wechselt (). Ein Katalog kann mehrere Typen von <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelementen enthalten. Jedes <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelement ist ein Containertyp, der die Server Steuerelemente enthält, die Benutzer zur Seite hinzufügen können. Die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente unterscheiden sich abhängig davon, wo die Server Steuerelemente, die Sie enthalten, stammen. In der folgenden Tabelle werden <xref:System.Web.UI.WebControls.WebParts.CatalogPart> die Steuerelemente zusammengefasst, die mit dem Webparts-Steuerelement Satz bereitgestellt werden, und für jedes Steuerelement, welche Art von Server Steuerelementen  
  
|Steuerelement|Beschreibung|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Verwaltet Verweise auf Steuerelemente, die auf einer Seite geschlossen wurden. Diese Steuerelemente können von Benutzern erneut geöffnet (wieder auf der Seite hinzugefügt) werden.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Enthält Verweise auf Steuerelemente, die in einem Webparts Katalog im Markup einer Webseite deklariert werden. Diese Steuerelemente können von Benutzern zu einer Webseite hinzugefügt werden.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Stellt die Benutzeroberfläche für einen Benutzer zum Hochladen einer Definitionsdatei (eine XML-Datei mit einem) bereit. WebPart-Erweiterung und ein angegebenes Format, das Zustandsinformationen enthält, für ein-Steuerelement in einem Katalog, sodass das Steuerelement einer Webseite hinzugefügt werden kann.|  
  
 Da die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Klasse nur eine Zonen Vorlage zum Verhalten ihrer Basisklasse hinzufügt, weist Sie nur wenige Member auf. Der <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Konstruktor ist ein Parameter loser Konstruktor. mit ihm können Sie eine neue Instanz <xref:System.Web.UI.WebControls.WebParts.CatalogZone> der-Klasse initialisieren. Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> -Eigenschaft ruft einen Verweis auf das <xref:System.Web.UI.ITemplate> Objekt ab, das die Steuerelemente für die Zone enthält, oder legt diesen fest. Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Methode ist kritisch. Er überschreibt die Basis Methode, um die Auflistung aller <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente zu erstellen, die in der Zonen Vorlage enthalten sind.  
  
> [!NOTE]
>  Die Schaltflächen in <xref:System.Web.UI.WebControls.WebParts.CatalogZone> der Benutzeroberfläche erfordern Client seitige Skripterstellung, damit Sie ordnungsgemäß funktionieren. Wenn die Skripterstellung im Browser deaktiviert ist, kann der Benutzer über die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Benutzeroberfläche keine Aktionen ausführen.  
  
## <a name="accessibility"></a>Zugriff  
 Das Markup, das für dieses Steuerelement standardmäßig gerendert wird, entspricht möglicherweise nicht den Barrierefreiheits Standards, wie z. b. den Richtlinien für die Richtlinien für die Barrierefreiheit 1,0 ( Ausführliche Informationen zur Unterstützung der Barrierefreiheit für dieses Steuerelement finden Sie unter [ASP.NET Controls and Accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> deklarative und programmgesteuerte Verwendung des-Steuer Elements veranschaulicht. Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf der Webseite zu ändern.  
  
-   Eine Datei mit dem Quellcode für ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement und ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, das vom Katalog importiert und der Webseite hinzugefügt wird.  
  
-   Eine Webseite, die das Benutzer Steuerelement deklariert, und das <xref:System.Web.UI.WebControls.WebParts.CatalogZone> benutzerdefinierte Steuerelement.  
  
-   Eine Erläuterung der Art und Weise, wie das Beispiel ausgeführt wird.  
  
 Der erste Teil dieses Code Beispiels ist das Benutzer Steuerelement, das es Benutzern ermöglicht, Anzeigemodi auf einer Webseite zu ändern. Ausführliche Informationen zu Anzeigemodi und eine Beschreibung des Quellcodes in diesem Steuerelement finden [Sie unter Exemplarische Vorgehensweise: Ändern der Anzeigemodi auf einer Webparts](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)Seite  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 Der zweite Teil des Code Beispiels enthält den Code für die benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.CatalogZone> - <xref:System.Web.UI.WebControls.WebParts.WebPart> und-Steuerelemente. Der Code für das <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Steuerelement veranschaulicht, wie von <xref:System.Web.UI.WebControls.WebParts.CatalogZone> der-Klasse geerbt und seine Eigenschaften angepasst werden, indem einige Standardeigenschaftswerte im Konstruktor festgelegt werden. Der Quellcode veranschaulicht auch, wie eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse mit dem Namen `TextDisplayWebPart`erstellt wird. Dies ist das Steuerelement, das dem zugeordnet ist. Webpart-Beschreibungsdatei, die Sie als Teil dieses Code Beispiels importieren werden. Nachdem Sie die Beschreibungsdatei mithilfe des <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuer Elements auf der Webseite importiert haben, können Sie das `TextDisplayWebPart` -Steuerelement auf der Seite hinzufügen, das wie in der Beschreibungsdatei angegeben vollständig vorkonfiguriert ist.  
  
 Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird die dynamische Kompilierung verwendet. Wenn Sie das Beispiel auf diese Weise ausführen möchten, benennen Sie die Quell Code Datei, und fügen Sie Sie einem App_Code-Unterordner des Stamm Verzeichnisses Ihrer Webanwendung hinzu. Eine exemplarische Vorgehensweise, die beide Kompilierungs Methoden veranschaulicht [, finden Sie unter Exemplarische Vorgehensweise: Entwickeln und Verwenden eines benutzerdefinierten Webserver-](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Steuer Elements.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 Der dritte Teil des Code Beispiels ist die Webseite, die die-Steuerelemente enthält. Sie enthält eine `Register` -Direktive für das Benutzer Steuerelement und eine weitere für die Quelldatei mit den benutzerdefinierten Steuerelementen. Beachten Sie, dass in der zweiten Direktive die Assembly nicht als Name festgelegt wird, da im Beispiel keine Assembly verwendet wird, sondern die dynamische Kompilierung mit dem Quellcode im Unterordner App_Code verwendet wird. Die Webseite deklariert ein <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuer `<zonetemplate>` Element, und innerhalb seines untergeordneten Elements deklariert es <xref:System.Web.UI.WebControls.BulletedList> ein-Steuerelement. Obwohl es sich hierbei um ein Standard-ASP.NET-Steuerelement handelt, verfügt es zur Laufzeit über voll <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ständige Webparts Funktionalität, da das-Steuer <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Element ein <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> beliebiges Server Steuerelement in einem-Objekt mit einem-Objekt umschließt, sodass andere Server Steuerelemente im Web Teile von Anwendungen. Auch in dieser Zone deklariert ist das Benutzer <xref:System.Web.UI.WebControls.WebParts.WebPart> definierte Steuer `TextDisplayWebPart`Element mit dem Namen. Beachten Sie, dass dieses Steuerelement über `ExportMode="All"` ein deklariertes Attribut verfügt. Dies ermöglicht es Ihnen, eine zu exportieren. Webpart-Beschreibungsdatei, die die Eigenschaftswerte des Steuer Elements enthält, die von anderen Benutzern importiert werden können, um das vorkonfigurierte Steuerelement anderen Webseiten hinzuzufügen.  
  
> [!NOTE]
>  Damit Benutzer einer Webparts Anwendung eine Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente exportieren können, müssen Sie die Exportfunktion in der-Webanwendung auch aktivieren, indem Sie dem `<webParts>` -Element ein `enableExport="true"` -Attribut hinzufügen (das ein untergeordnetes Element von `<system.web>`ist).-Element) in der Datei "Web. config". Der Export ist standardmäßig deaktiviert. Wenn Sie den Export für Ihre Anwendung noch nicht aktiviert haben, bearbeiten Sie die Datei "Web. config", und führen Sie Sie jetzt aus.  
  
 Die Webseite deklariert auch das benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement und darin ein `<zonetemplate>` -Element, das ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement enthält. Der Benutzer verwendet dieses Steuerelement zur Laufzeit, um den zu importieren. Webpart-Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> das benutzerdefinierte Steuerelement.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Führen Sie nun das Codebeispiel aus. Laden Sie die Webseite in einem Browser. Der erste Schritt besteht darin, eine zu exportieren. Webpart-Beschreibungsdatei `TextDisplayWebPart` für das Steuerelement. Klicken Sie auf das Verbenmenü des benutzerdefinierten Steuer Elements (dargestellt durch den abwärts Pfeil in der Titelleiste), und klicken Sie auf **exportieren**. Befolgen Sie die Anweisungen, um eine Beschreibungsdatei für das-Steuerelement zu speichern. Öffnen Sie die. Webpart-Beschreibungsdatei in einem Editor, und bearbeiten Sie den Wert des Title-Eigenschafts Texts. Suchen Sie `<property>` das-Element mit dem `name="Title"`-Attribut, und bearbeiten Sie den Titeltext, der zwischen dem öffnenden und dem Schließ `<property>` enden Tag enthalten ist. Schließen Sie nun die Webseite, und bearbeiten Sie die Seitenquelle in einem Editor. Löschen Sie `<aspSample:TextDisplayWebPart>` das Steuerelement Deklarations Element, speichern Sie die Datei, und schließen Sie Sie.  
  
 Laden Sie die Webseite erneut in einem Browser. Das `TextDisplayWebPart` Steuerelement sollte nicht angezeigt werden, da es entfernt wurde. Verwenden Sie das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **catalog** aus, um die Seite in den Katalog Modus zu wechseln. Beachten Sie, dass <xref:System.Web.UI.WebControls.WebParts.CatalogZone> das benutzerdefinierte Steuerelement zusammen <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> mit dem-Steuerelement angezeigt wird. Klicken Sie auf die Schaltfläche **Durchsuchen** , um zu suchen Webpart-Beschreibungsdatei, die Sie `TextDisplayWebPart` für das Steuerelement exportiert haben. Klicken Sie auf **hochladen**, aktivieren Sie das Kontrollkästchen neben dem importierten Steuerelement, und klicken Sie auf **Hinzufügen** , um es der Seite hinzuzufügen. Klicken Sie auf **Katalog schließen** , um die Seite in den normalen Suchmodus zurückzukehren. Das importierte Steuerelement sollte nun auf der Seite angezeigt werden, und der Titel, der in der Titelleiste des Steuer Elements angezeigt wird, sollte der Titel Text sein, den Sie dem hinzugefügt haben. Webpart-Beschreibungsdatei.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">für den Betrieb in einer Hostumgebung. Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, Berechtigungswert: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides"><para>Sie können benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> Klassen erstellen, wenn Sie mehr Kontrolle über das Rendering und Verhalten der Benutzeroberfläche des Katalogs wünschen. Wenn Sie Benutzern Ihres Steuer Elements nicht die Möglichkeit geben müssen, Steuerelemente deklarativ <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> hinzuzufügen, können Sie direkt von der <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> -Klasse erben. Wenn Sie zulassen möchten, dass Steuerelemente deklarativ hinzugefügt werden, besteht der Ansatz von simples darin, <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> von der-Klasse zu erben, da Sie die Vorlage für die wesentliche Zone bereitstellt.  
  
Wenn Sie von <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> der-Klasse erben, können Sie die <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> -Methode überschreiben und die-Methode verwenden, um einem benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> Steuerelemente hinzuzufügen, wenn Sie <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> eine <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />umfassendere Kontrolle über das Hinzufügen benutzerdefinierter Steuerelemente zur Zone wünschen. .</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Übersicht über Webparts-Steuerelement Satz</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Übersicht über die Webparts Personalisierung</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da das <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Steuerelement eine Zonen Vorlage implementiert, wird es normalerweise deklarativ verwendet, und Sie müssen selten eine neue Instanz der-Klasse mit <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> dem-Konstruktor erstellen. Wenn Sie jedoch von der <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Klasse erben, um eine benutzerdefinierte Zone zu erstellen, können Sie den-Konstruktor verwenden, um einige seiner Eigenschaftswerte zu initialisieren und seine Darstellung anzupassen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die programmgesteuerte Verwendung des <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> -Konstruktors in einem <xref:System.Web.UI.WebControls.WebParts.CatalogZone> benutzerdefinierten-Steuerelement veranschaulicht. Der-Konstruktor wird verwendet, um einige Standardeigenschaftswerte für das-Steuerelement zu initialisieren. Der folgende Code zeigt die Benutzer <xref:System.Web.UI.WebControls.WebParts.CatalogZone> definierte-Klasse mit dem Konstruktor, der oben im oberen Bereich deklariert wurde. Den vollständigen Code und die Anweisungen, die zum Einrichten und Ausführen des Beispiels erforderlich sind, finden Sie im <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Abschnitt "Beispiel" in der Übersicht über die-Klasse.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz aller in der Zone deklarierten <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-Typen.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> mit Verweisen auf alle <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-Steuerelemente in der Zone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> -Methode ist eine kritische Methode, da diese Methode <xref:System.Web.UI.WebControls.WebParts.CatalogPart> alle Steuerelemente erstellt, die den Webparts Katalog bilden, wenn ein Benutzer eine Seite in den Katalog Anzeigemodus wechselt.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Methode in der <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Klasse, die mit dem Webparts-Steuerelement festgelegt wurde, kann ein beliebiges Server Steuerelement erstellen, das von der <xref:System.Web.UI.WebControls.WebParts.CatalogPart> -Klasse Wenn Sie also ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelement erstellen und es auf einer Seite innerhalb <xref:System.Web.UI.WebControls.WebParts.CatalogZone> eines Steuer Elements deklarieren, erstellt diese Methode das Steuerelement, wenn ein Benutzer die Seite in den Katalog Modus wechselt.  
  
 Aus verschiedenen Gründen möchten Sie jedoch möglicherweise die Kontrolle über <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> die-Methode haben. Möglicherweise möchten Sie nur bestimmte <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente erstellen. Angenommen, Sie erstellen einen Satz benutzerdefinierter <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente, die ein konsistentes Erscheinungsbild aufweisen und zu einem einzelnen Produkt oder einer Organisation gehören. Wenn Sie möchten, dass Seiten Entwickler auf die Verwendung dieser benutzerdefinierten Steuerelemente in einem Katalog beschränkt werden, sollten Sie <xref:System.Web.UI.WebControls.WebParts.CatalogZone> von der-Klasse <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> erben, die-Methode überschreiben und zulassen, dass die-Methode nur Steuerelemente desselben Typs wie die benutzerdefinierten Steuerelemente erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-Steuerelement besitzt keine ID.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Vorlage ab, die als Container für untergeordnete Steuerelemente in einem <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />-Steuerelement im seitenpersistenten Format fungiert, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die als Container für untergeordnete Steuerelemente in der Zone fungiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> -Eigenschaft verweist auf eine Vorlage <xref:System.Web.UI.ITemplate> vom Typ, die verwendet wird <xref:System.Web.UI.WebControls.WebParts.CatalogPart> , um die Steuerelemente in der Zone zu enthalten. Die Zonen Vorlage ermöglicht Seiten Entwicklern das deklarieren <xref:System.Web.UI.WebControls.WebParts.CatalogPart> der Steuerelemente, die Sie verwenden möchten, im Persistenzformat, anstatt alle Steuerelemente Programm gesteuert erstellen zu müssen.  
  
 Der Set-Accessor für <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> Ruft die-Methode auf, die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> erzwingt, dass die Auflistung von Steuerelementen, die in der Zonen Vorlage auf der Seite deklariert sind, aktualisiert werden soll. Dadurch wird sichergestellt, dass die Auflistung von Steuerelementen, auf die die Zone verweist, immer aktuell bleibt, wenn ein Benutzer die in der Vorlage tatsächlich deklarierten Steuerelemente auf der Seite ändert  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie eine benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> Zone erstellen möchten, Sie jedoch planen, die Steuerelemente Programm gesteuert zu erstellen, anstatt Seiten Entwicklern das <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> deklarieren zu gestatten, benötigen Sie keine Unterstützung für Zonen Vorlagen, und Sie können <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> direkt von der klassi.</para></block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>
