<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b4b9aeb1442e5af53e12483c8242162cd89e43d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51904567" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als primäres Steuerelement im Webparts-Steuerelementsatz zum Hosten von <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-Steuerelementen auf einer Webseite.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Webparts-Steuerelementsatz ist eine Zone für einer Region auf einer Webseite, die Webparts-Steuerelemente enthält. Webparts-Zone wird erstellt, indem eines Zonensteuerelements, der einen Typ von <xref:System.Web.UI.WebControls.CompositeControl> andere Steuerelemente enthalten soll. Die wichtigsten Funktionen einer Zone sind die Steuerelemente angeordnet werden, die sie enthält, und um eine gemeinsame Benutzeroberfläche (UI) für diese Steuerelemente bereitzustellen. Allgemeine Informationen zu Zonen und wie sie in Webparts-Anwendungen verwendet werden, finden Sie unter der Base <xref:System.Web.UI.WebControls.WebParts.WebZone> -Klasse, und [Web Parts Control Set Overview](https://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 Ein wichtiges Feature von Webparts-Steuerelemente ist, dass sie zulassen, Endbenutzer dass auf Webseiten zu ändern (oder personalisieren) entsprechend ihren Einstellungen, und speichern Sie ihre personalisierten Einstellungen für zukünftige Browsersitzungen. Ein Aspekt der Webparts-Seiten ändern bietet die Möglichkeit zum Hinzufügen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente oder andere Serversteuerelemente zu einer Webparts-Seite. Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> gesteuert, einer Liste oder einem Katalog von Steuerelementen, die Benutzer zu einer Seite hinzufügen können.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement ist eines der grundlegenden Steuerelemente in der Webparts-Steuerelementsatz. Es leitet sich von der <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> -Klasse, und die meisten sein Verhalten wird von dieser Klasse geerbt. Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasse fügt im Wesentlichen auf die Basisklasse eine Zonenvorlage, die eine Implementierung wird von der <xref:System.Web.UI.ITemplate> Schnittstelle. Der Vorlage der Zone ermöglicht Entwicklern, die deklarativ hinzufügen, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente zu einer Zone im seitenpersistenten Format.  
  
> [!IMPORTANT]
>  Ein <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone darf nur <xref:System.Web.UI.WebControls.WebParts.CatalogPart> -Steuerelemente, und umgekehrt <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente können nur von abgeleiteten Zonen enthalten die <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Klasse, z. B. <xref:System.Web.UI.WebControls.WebParts.CatalogZone>.  
  
 Ein <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement wird nur, wenn ein Benutzer eine Webseite Kataloganzeigemodus umschaltet sichtbar (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). Ein Katalog kann mehrere Typen von enthalten <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente. Jede <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelement ist ein Container, der die Steuerelemente enthält, Benutzer können auf der Seite hinzufügen. Die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> -Steuerelemente unterscheiden sich je nach der darin enthaltenen Steuerelemente Herkunft. Die folgende Tabelle enthält die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> steuert verfügbar mit dem Webparts-Steuerelementsatz und für jedes Steuerelement, welche Art von Server er steuert enthält.  
  
|Steuerelement|Beschreibung |  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Verwaltet Verweise auf Steuerelemente, die auf einer Seite geschlossen wurden. Diese Steuerelemente können (wieder in die Seite ") von Benutzern erneut geöffnet werden.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Enthält Verweise auf Steuerelemente, die in einem Katalog von Webparts im Markup einer Webseite deklariert werden. Diese Steuerelemente können von Benutzern zu einer Webseite hinzugefügt werden.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Stellt die Benutzeroberfläche für einen Benutzer zum Hochladen einer Definitionsdatei (einer XML-Datei mit ein. WebPart-Erweiterung und einem angegebenen Format, das enthält Zustandsinformationen) für ein Steuerelement zu einem Katalog, damit das Steuerelement zu einer Webseite hinzugefügt werden kann.|  
  
 Da die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasse nur eine Zonenvorlage hinzugefügt, um das Verhalten ihrer Basisklasse, verfügt er über einige Member. Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Konstruktor ist ein Standardkonstruktor; damit können Sie eine neue Instanz der Initialisieren der <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasse. Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Eigenschaft ruft ab oder legt einen Verweis auf die <xref:System.Web.UI.ITemplate> -Objekt, das die Steuerelemente für die Zone enthält. Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Methode ist unerlässlich. Es überschreibt die Basismethode, um die Auflistung aller erstellen <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente, die in der Vorlage der Zone enthalten sind.  
  
> [!NOTE]
>  Die Schaltflächen in der <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Benutzeroberfläche erfordern, clientseitige Skripts, um ordnungsgemäß zu funktionieren. Wenn Skripts im Browser deaktiviert ist, der Benutzer ist nicht möglich für Aktionen über die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Benutzeroberfläche.  
  
## <a name="accessibility"></a>Zugriff  
 Das Markup gerendert wird, wird standardmäßig für dieses Steuerelement kann nicht Accessibility Standards wie z. B. die Web Content Accessibility Guidelines 1.0 (WCAG) Priorität 1-Richtlinien entsprechen. Weitere Informationen zur Unterstützung von Eingabehilfen für dieses Steuerelement finden Sie unter [ASP.NET-Steuerelemente und Barrierefreiheit](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, deklarativ und programmatisch mit der <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement. Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Sie den Anzeigemodus auf der Webseite ändern kann.  
  
-   Eine Datei mit dem Quellcode für ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Kontrolle und eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, das dem Katalog importiert und an die Webseite hinzugefügt.  
  
-   Eine Webseite, die das Benutzersteuerelement, und die benutzerdefinierte deklariert <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement.  
  
-   Eine Erklärung der Vorgehensweise zum Ausführen des Beispiels.  
  
 Der erste Teil dieses Codebeispiels wird das Benutzersteuerelement, das Benutzern ermöglicht, den Anzeigemodus auf einer Webseite zu ändern. Weitere Informationen zu Modi und eine Beschreibung des Quellcodes in diesem Steuerelement anzuzeigen, finden Sie unter [Exemplarische Vorgehensweise: Ändern des Anzeigemodus auf einer Webparts-Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 Der zweite Teil des Codebeispiels enthält den Code für die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.CatalogZone> und <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Der Code für die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement wird veranschaulicht, wie das erben die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasse und ihre Eigenschaften durch Festlegen von Eigenschaftswerten im Konstruktor für einige Standardeinstellungen angepasst werden. Der Quellcode wird auch veranschaulicht, wie eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse mit dem Namen `TextDisplayWebPart`. Dies ist das zugeordnete Steuerelement die. WebPart-Beschreibungsdatei, die Sie als Teil dieses Codebeispiels importieren. Nach dem Importieren der Description-Datei mithilfe der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement auf der Webseite, Sie werden hinzufügen, die `TextDisplayWebPart` Steuerelement auf der Seite vollständig vorkonfiguriert ist wie angegeben in der Description-Datei.  
  
 Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierung daher, wenn Sie das Beispiel auf diese Weise ausführen möchten, nennen Sie die Quellcodedatei ein App_Code--Unterordner des Stammverzeichnisses Ihrer Webanwendung hinzugefügt. Eine exemplarische Vorgehensweise, die beide Methoden der Kompilierung wird veranschaulicht, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuerelements](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 Der dritte Teil des Codebeispiels wird die Webseite, die die Steuerelemente enthält. Er enthält eine `Register` -Direktive für das Benutzersteuerelement und eine für die Quelldatei mit den benutzerdefinierten Steuerelementen. Beachten Sie, dass in der zweiten Richtlinie, nicht die Assembly benennen, da im Beispiel wird eine Assembly nicht verwendet, verwendet er die dynamische Kompilierung mit dem Quellcode, die im Unterordner "App_Code" platziert. Die Webseite deklariert eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement, und innerhalb seines untergeordneten `<zonetemplate>` -Element deklariert eine <xref:System.Web.UI.WebControls.BulletedList> Steuerelement. Obwohl dies ein Standardsteuerelement von ASP.NET ist, muss volle Funktionalität von Webparts zur Laufzeit, da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern umschließt, die jedes Serversteuerelement in platziert eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> mit einer <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt, sodass andere Steuerelemente in der Web teilnehmen können Webparts-Anwendungen. In dieser Zone auch deklariert wird, ist die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement mit dem Namen `TextDisplayWebPart`. Beachten Sie, dass dieses Steuerelement ein Attribut des `ExportMode="All"` deklariert ist. Dadurch können Sie so exportieren Sie ein. WebPart-Beschreibungsdatei, die die Eigenschaftswerte des Steuerelements enthält, die von anderen Benutzern an das Steuerelement vorkonfiguriert, dass andere Webseiten hinzufügen importiert werden kann.  
  
> [!NOTE]
>  So aktivieren Sie die Benutzer einer Webparts-Anwendung so exportieren Sie eine Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, müssen Sie auch die Funktion zum Exportieren in der Webanwendung aktivieren, durch das Hinzufügen eine `enableExport="true"` -Attribut auf die `<webParts>` Element (Dies ist ein untergeordnetes Element des der `<system.web>`Element) in der Datei "Web.config". Export ist standardmäßig deaktiviert, also wenn Sie noch nicht Export für Ihre Anwendung aktiviert haben, bearbeiten Sie die Datei "Web.config", und dies jetzt tun.  
  
 Die Webseite deklariert außerdem die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement und darin, eine `<zonetemplate>` -Element, enthält ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Der Benutzer wird dieses Steuerelement zur Laufzeit verwendet, um das Importieren der. WebPart-Beschreibungsdatei für das benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Führen Sie jetzt im Codebeispiel wird ein. Laden Sie die Webseite in einem Browser. Der erste Schritt ist so exportieren Sie ein. WebPart-Beschreibungsdatei für die `TextDisplayWebPart` Steuerelement. Klicken Sie auf das im Verbenmenü des benutzerdefinierten Steuerelements (dargestellt durch den Pfeil nach unten in der Titelleiste), und klicken Sie auf **exportieren**. Befolgen Sie die Anweisungen zum Speichern einer Beschreibungsdatei für das Steuerelement aus. Öffnen der. Beschreibung der WebPart-Datei in einem Editor und bearbeiten Sie den Wert des Titeltexts-Eigenschaft. Suchen der `<property>` -Element, das das Attribut weist `name="Title"`, und bearbeiten Sie den Titeltext, der zwischen den öffnenden und schließenden enthalten ist `<property>` Tags. Klicken Sie jetzt schließen Sie die Webseite, und bearbeiten Sie die Seitenquelle in einem Editor. Löschen der `<aspSample:TextDisplayWebPart>` steuern Sie die Element-Deklaration, und klicken Sie dann zu speichern und schließen Sie die Datei.  
  
 Laden Sie die Webseite in einem Browser erneut. Die `TextDisplayWebPart` Steuerelement nicht angezeigt werden sollte, da Sie ihn entfernt. Verwenden der **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Katalog** auf die Seite in den Katalogmodus zu wechseln. Beachten Sie, dass die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement angezeigt wird, zusammen mit den <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Klicken Sie auf die **Durchsuchen** Schaltfläche zum Suchen der. WebPart-Beschreibungsdatei, die Sie exportiert haben, für die `TextDisplayWebPart` Steuerelement. Klicken Sie auf **hochladen**, wählen Sie das Kontrollkästchen neben das importierte Steuerelement, und klicken Sie auf **hinzufügen** , die sie zur Seite hinzuzufügen. Klicken Sie auf **Katalog schließen** in den normalen Durchsuchen-Modus zurück. Das importierte Steuerelement sollte jetzt angezeigt werden, auf der Seite und der Titel, der in der Titelleiste des Steuerelements angezeigt wird, muss den Titeltext, der Sie hinzugefügt haben, die. Beschreibung der WebPart-Datei.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">für den Betrieb in einer Hostumgebung. Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />, Berechtigungswert: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides">
      <para>Sie können benutzerdefinierte erstellen <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> Klassen, wenn Sie mehr Kontrolle über das Rendering und das Verhalten der Benutzeroberfläche des Katalogs möchten. Wenn Sie nicht benötigen, geben Sie die Benutzer des Steuerelements mit der Möglichkeit, hinzufügen <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> steuert deklarativ an, und klicken Sie dann direkt aus dem Sie erben können die <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> Klasse. Wenn Sie deklarativ hinzufügen von Steuerelementen aktivieren möchten, ist der Ansatz deklaratives das erben die <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> Klasse, da es die grundlegende Zonenvorlage bereitstellt.  
  
Erben von der <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> -Klasse, die Sie überschreiben können die <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> -Methode, und verwenden Sie die Methode zum Hinzufügen benutzerdefinierter <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> -Steuerelementen an eine <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, wenn Sie größere programmgesteuerte Kontrolle über das Hinzufügen von benutzerdefinierten soll <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> Steuerelemente in die Zeitzone .</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668">Webparts Control Set Overview</related>
    <related type="Article" href="https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320">Webparts-Personalisierung</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement implementiert, eine Vorlage für die Zone, in der Regel deklarativ verwendet und Sie müssen nur selten erstellen eine neue Instanz der Klasse mit dem <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Konstruktor. Allerdings erben von der <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasse, um eine benutzerdefinierte Zone, erstellen Sie mithilfe des Konstruktors initialisiert werden, einige der Eigenschaftswerte und ihre Darstellung anpassen möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Konstruktor in einem benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement. Der Konstruktor wird verwendet, um einige Standardwerte für die Eigenschaften für das Steuerelement zu initialisieren. Der folgende Code zeigt die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasse mit dem Konstruktor, der im oberen Bereich deklariert. Der vollständige Code und die Anweisungen zum Einrichten und Ausführen des Beispiels, finden Sie im Abschnitt "Beispiel" in der <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Übersicht über die Klasse.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz aller in der Zone deklarierten <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-Typen.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> mit Verweisen auf alle <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-Steuerelemente in der Zone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Methode ist eine wichtige Methode, da diese Methode, wenn ein Benutzer eine Seite Kataloganzeigemodus wechselt, alle erstellt die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente, Webparts-Katalog bilden.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> -Methode in der die <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Klasse bereitgestellte mit den Webparts-Steuerelementsatz jedes Serversteuerelement erstellen kann, die von erbt die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Klasse. Also bei der Erstellung eines benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.CatalogPart> steuern und deklarieren Sie ihn auf einer Seite innerhalb einer <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement diese Methode erstellt das Steuerelement, wenn ein Benutzer die Seite in den Katalogmodus wechselt.  
  
 Jedoch aus verschiedenen Gründen empfiehlt Kontrolle über die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Methode. Sie sollten nur bestimmte erstellt <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente. Nehmen wir beispielsweise an, die Sie erstellen einen Satz von benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente, die ein konsistentes Erscheinungsbild und ein einzelnes Produkt oder eine Organisation angehören. Wenn Entwickler von Seiten auf diese benutzerdefinierten Steuerelemente in einem Katalog mit beschränkt werden sollen, sollten Sie erben von der <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Klasse außer Kraft, indem die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> -Methode, und lassen Sie die Methode, die nur Steuerelemente des gleichen Typs wie Ihre benutzerdefinierten Steuerelemente zu erstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-Steuerelement besitzt keine ID.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Vorlage ab, die als Container für untergeordnete Steuerelemente in einem <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />-Steuerelement im seitenpersistenten Format fungiert, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die als Container für untergeordnete Steuerelemente in der Zone fungiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> -Eigenschaft verweist auf eine Vorlage vom Typ <xref:System.Web.UI.ITemplate> , mit dem Sie enthalten die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente in der Zone. Der Vorlage der Zone Seitenentwickler deklarieren die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente im seitenpersistenten Format, anstatt alle Steuerelemente programmgesteuert erstellen verwendet werden soll.  
  
 Der Set-Accessor für die <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> eigenschaftsaufrufen der <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> -Methode, die erzwingt, die Auflistung der dass <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente, die in der Vorlage der Zone auf der Seite zu aktualisierende deklariert werden. Dadurch wird sichergestellt, dass die Auflistung der Steuerelemente auf die Zone verweist aktuelle bleibt, wenn ein Benutzer die Steuerelemente, die tatsächlich in der Vorlage deklariert, auf der Seite ändert.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sollten Sie eine benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> Zone, aber Sie planen, erstellen die <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> programmgesteuert gesteuert werden, statt ermöglicht Seitenentwickler, um sie zu deklarieren, Sie nicht müssen Unterstützung von Vorlagen Zone sind, und Sie können die erben direkt von der <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> -Klasse.</para>
        </block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
  </Members>
</Type>