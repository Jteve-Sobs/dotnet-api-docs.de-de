<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="138ffda1aa735e92748c86113cfcda75fc5b451d" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59353056" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importiert eine Beschreibungsdatei für ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder ein anderes als <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement verwendetes ASP.NET-Serversteuerelement), sodass Benutzer das Steuerelement mit vorher festgelegten Einstellungen zu einer Webseite hinzufügen können. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement ermöglicht Benutzern das eine Beschreibungsdatei zu importieren, die Einstellungen beschrieben werden, auf eine <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement oder Serversteuerelement, das ein Benutzer möchte, Hinzufügen einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone.  
  
 Nachdem ein Benutzer eine Beschreibungsdatei enthält, importiert der <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement verwiesen wird, in der Datei wird angezeigt, in der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement, und ein Benutzer kann das Steuerelement auf der Seite hinzufügen.  
  
 Die Description-Datei ist nicht identisch mit das Steuerelement selbst. Es ist eine XML-Datei, die mit endet ein. WebPart-Erweiterung und -Wert-Paare – vor allem Eigenschaftswerte –, die beschreiben, den Zustand des Steuerelements enthält. Die Description-Datei wird entsprechend einem angegebenen XML-Format erstellt, wie beschrieben im Thema [Web Parts Control Beschreibung Files](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8).  
  
 Für das Steuerelement, dem auf die Description-Datei verweist, kann entweder in eine Assembly kompiliert werden, oder es kann ein Benutzersteuerelement in einer ASCX-Datei definiert sein. In beiden Fällen muss das Steuerelement in einer importierten Beschreibungsdatei verwiesen wird auf dem Webserver vorhanden sein, die die Seite, die versucht hostet, die das Steuerelement zu importieren. Die Description-Datei verweist auf das Steuerelement aus Name und die Assembly (oder Datei), das das Steuerelement enthält, und die Description-Datei enthält Einstellungen, die Eigenschaftswerte, Darstellung und Verhalten des Steuerelements beeinflussen.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement ermöglicht Benutzern das Freigeben von Einstellungen für Steuerelemente. Ein komplexes Steuerelement haben zahlreiche Eigenschaften und Einstellungen. Z. B. in einer typischen Intranetwebsite in einem großen Unternehmen, eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement könnte enthalten eine Reihe von Eigenschaften, die Werte für die Benutzer-Umgebung, z. B. Datenbankverbindungen, Abteilungsinformationen usw. enthalten. Das Steuerelement möglicherweise auch eine Reihe von Eigenschaften enthalten, die die Darstellung zu beeinflussen. Ein Benutzer konnte personalisieren das Steuerelement auf einem bestimmten Standort es korrekt funktioniert, exportieren die Beschreibungsdatei eine für das Steuerelement und anschließend freigeben die Description-Datei mit anderen Benutzern, die die Datei zum Hinzufügen des Steuerelements vollständig konfigurierte mit anderen Intranet importiert werden konnten Websites, die sie zulässig sind, um zu personalisieren. Solange die kompilierte Assembly oder ein Benutzersteuerelement-Datei mit dem Steuerelement auf dem Webserver vorhanden, die ihrem Standort gehostet wird ist, können Benutzer das Steuerelement zu anderen Websites hinzufügen.  
  
 Der Mechanismus, mit dem Importieren einer Beschreibungsdatei (und daher der zugeordneten Serversteuerelemente) in eine Webseite, ist die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement, das Seitenentwickler muss zu einer Webseite hinzufügen. Wenn ein Benutzer die Seite Kataloganzeigemodus, wechselt der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement angezeigt wird, und der Benutzer kann Benutzer dieses Steuerelement zum Durchsuchen der. WebPart-Beschreibungsdatei, die für das Serversteuerelement, das sie importieren möchten. Befolgen die Benutzeroberfläche und Anweisungen der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement, ein Benutzer kann das gewünschte Steuerelement in die Webseite, mit dessen Darstellung und die Eigenschaften, die vollständig gemäß konfiguriert sind, in der importierten Description-Datei hinzufügen.  
  
 Bevor eine <xref:System.Web.UI.WebControls.WebParts.WebPart> des Steuerelements Description-Datei importiert werden kann, die ein Benutzer muss zuerst erstellen (exportieren) die Datei basierend auf einer vorhandenen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Eine Beschreibungsdatei kann für ein Steuerelement exportiert werden, wenn die folgenden Bedingungen erfüllt sind:  
  
-   Das Steuerelement verfügt über Eigenschaften, die mit markiert die `Personalizable` Attribut.  
  
-   Die Datei "Web.config" enthält die `enableExport` -Attributwert festgelegt `true` auf die `<webParts>` Element.  
  
-   Ein Entwickler legt den Wert für die <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Eigenschaft des Steuerelements an einen anderen Wert als den Standardwert <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>, der den Export verhindert. Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Eigenschaftswert wird festgelegt, um <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, jede Eigenschaft, die enthält ein <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> Parameter mit einer `Personalizable` Attribut wird nicht exportiert werden, wenn ein Benutzer eine Description-Datei exportiert. Dies ermöglicht es Steuerelemententwicklern, um zu verhindern, dass vertrauliche Daten wie Verbindungszeichenfolgen in bestimmten Situationen exportiert wird.  
  
 Ein Benutzer kann ein Steuerelement, das für den Export durch Klicken auf das Exportieren-Verb, das im Verbmenü des Steuerelements, und den Anweisungen zum Speichern angezeigt wird aktiviert wurde exportieren ein. WebPart-Beschreibungsdatei für das Steuerelement. Andere Benutzer können diese Datei, um ihre eigenen Instanzen des Steuerelements zu konfigurieren. Klicken Sie dann importieren.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Klasse enthält mehrere Eigenschaften. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Eigenschaft enthält Text mit Anweisungen für Benutzer beim Durchsuchen die Description-Datei gefunden. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Eigenschaft enthält den Text, der als Beschriftung für das importierte Steuerelement dient, wie in der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> enthält Text, der angezeigt wird, wenn ein Fehler auftritt, wenn eine steuerelementbeschreibung importiert wird. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Eigenschaft überschreibt die Basiseigenschaft, um die Zuweisung von eines standardmäßigen Titels für ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> steuern, wenn der Entwickler einen Titel nicht zugewiesen ist. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Eigenschaft enthält den Text für die Schaltfläche, die der Benutzer klickt, um der Description-Datei hochzuladen und die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Eigenschaft enthält eine Anleitung für den Uploadprozess.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Klasse enthält auch mehrere eindeutige Methoden. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Methode ruft eine <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Objekt für die einzelnen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement im Katalog, wodurch ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement zum Anzeigen von Informationen über jedes Serversteuerelement ohne eine Instanz davon erstellen zu müssen. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Methode ruft eine Instanz eines bestimmten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement basierend auf der Beschreibung, die an die Methode übergeben.  
  
 Es gibt einige inhärenten Risiken im Zusammenhang mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Ein Beispiel ist die Möglichkeit, Importieren von schädlichen Daten in Ihre Webanwendung über die Description-Dateien, die für das Importieren von. Wenn jemand ein böswilliges Skript-Code als Wert für eine Zeichenfolgeneigenschaft, die in der Description-Datei eingefügt wurde, konnte das Skript möglicherweise ausgeführt, wenn ein Benutzer die Description-Datei importiert, und das Steuerelement auf die verwiesen wird, zu einer Webseite fügt. Serversteuerelemente, die Zeichenfolgentyp-Eigenschaften sollten immer die Eigenschaftendaten codieren, zur Minimierung des Risikos durch schädliche Daten Description-Dateien importieren. Ein weiteres Risiko umfasst die Typen importieren, die über die Description-Dateien (finden Sie unter [Web Parts Control Beschreibung Files](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Ein böswilliger Benutzer kann Anforderungen zum Laden von Assemblys in viele übermitteln der <xref:System.AppDomain>, wodurch ein hohes Maß an Arbeitsspeicher, die verarbeitet werden.  
  
 Um die Risiken im Zusammenhang mit dem Import zu vermeiden, können Sie das Feature deaktivieren vollständig nicht mit der Funktion zum Importieren oder die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Oder Sie können einschränken, welche Benutzer auf das Steuerelement zugreifen können. Sie können das auch programmgesteuert mit der Rollenverwaltung (siehe [Managing Authorization Using Roles](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). Z. B. beim Laden der Seite können Sie testen, um festzustellen, ob ein Benutzer in einer bestimmten Rolle, wie z. B. die Rolle "Administrator" ist. Wenn der Benutzer in der Rolle ist, können Sie programmgesteuert hinzufügen der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement auf der Seite für diesen Benutzer. Sie können auch einen deklarativen Ansatz verwenden, um die Gruppe von Benutzern zu begrenzen, die können die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement.  Innerhalb Ihrer Webseite, die einen Katalog enthält, könnte man zwei <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelemente: eine für Benutzer, die importiert werden können und eine für diejenigen, die nicht möglich. Enthält die Zone für Benutzer, die importiert werden kann die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Die Zone selbst platziert werden konnte, in der ein <xref:System.Web.UI.WebControls.LoginView> -Steuerelement, das Sie mithilfe des Steuerelements in der Zone, um zu beschränken, die authentifizierte Benutzer oder Rollen, die Sie angeben kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> deklarativ und programmgesteuert auf einer Webseite zu steuern. Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, enthält eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement und ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente.  
  
-   Eine Erklärung der Funktionsweise des Beispiels an, wenn Sie die Seite in einem Browser laden.  
  
 Der erste Teil dieses Codebeispiels wird das Benutzersteuerelement, das Benutzern ermöglicht, den Anzeigemodus auf einer Webseite zu ändern. Sie sollten den folgenden Quellcode in einer Datei zu platzieren, und nennen sie mit der Option Displaymodemenucs.ascx oder Displaymodemenuvb.ascx (je nachdem welche Sprache Sie verwenden). Weitere Informationen zu Modi und eine Beschreibung des Quellcodes in diesem Steuerelement anzuzeigen, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 Der zweite Teil des Codebeispiels wird die Webseite. Sind Sie am oberen Rand der Seite zwei `register` Direktiven enthalten, von denen eine für das Benutzersteuerelement und eine für die kompilierte Komponente, die die beiden benutzerdefinierten enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Beachten Sie, dass die Seite einen deklarative Verweis auf die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement, in der richtigen Hierarchie deklarativer Elemente geschachtelt. Beachten Sie auch, dass mehrere Eigenschaftswerte auf deklarativ zugewiesen sind die `<asp:importcatalogpart>` Element. Darüber hinaus die `Button1_Click` Methode aktualisiert eine Reihe von Eigenschaftswerten für das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement.  
  
 Auf der Seite des <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement, das zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente deklariert werden. Die `<aspSample:userinfowebpart>` Steuerelement verfügt über eine `exportmode="all"` Attribut darauf. Dieses Attribut ist erforderlich, damit Benutzer eine Beschreibungsdatei für das Steuerelement, zu exportieren, der dann von anderen Benutzern importiert werden kann, die das Steuerelement mit der Description-Datei importieren möchten.  
  
> [!NOTE]
>  So aktivieren Sie die Benutzer einer Webparts-Anwendung so exportieren Sie eine Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, müssen Sie auch die Funktion zum Exportieren in der Webanwendung aktivieren, durch das Hinzufügen eine `enableExport="true"` -Attribut auf die `<webParts>` Element (Dies ist ein untergeordnetes Element des der `<system.web>`Element) in der Datei "Web.config". Export ist standardmäßig deaktiviert, also wenn der Export für Ihre Anwendung noch nicht aktiviert haben, bearbeiten Sie die Datei "Web.config", und dies jetzt tun.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 Der dritte Teil des Codebeispiels wird der Quellcode für die beiden <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Beachten Sie, die einige Eigenschaften für diese Steuerelemente gekennzeichnet sind, mit der `WebBrowsable` Attribut. Dies ermöglicht die <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> Steuerelement, um die Benutzeroberfläche (UI) dynamisch zu generieren, damit ein Benutzer diese Eigenschaften zu bearbeiten, wenn die Steuerelemente im Bearbeitungsmodus befinden. Die Eigenschaften werden ebenfalls mit markiert einen `WebDisplayName` -Attribut, um den Text der Bezeichnung anzugeben, die neben jedes Steuerelement in der Benutzeroberfläche zum Bearbeiten angezeigt wird. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierung. Eine exemplarische Vorgehensweise, die beide Methoden der Kompilierung wird veranschaulicht, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 Wird aufgerufen, das benutzerdefinierte Steuerelement `TextDisplayWebPart` verwiesen wird, auf der Webseite mit einer `<aspSample:TextDisplayWebPart>` Element. Das andere Steuerelement mit dem Namen `UserInfoWebPart`, auch deklariert wird auf der Webseite anfänglich, obwohl Sie es später noch Mal, um die Funktion zum import einer Beschreibungsdatei für ein Steuerelement veranschaulichen entfernt werden.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Führen Sie jetzt im Codebeispiel wird ein. Laden Sie die Webseite in einem Browser. Der erste Schritt ist so bearbeiten Sie die `UserInfoWebPart` Steuerelement. Verwenden der **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **bearbeiten** um die Seite, um den Bearbeitungsmodus zu wechseln. Klicken Sie auf das im Verbenmenü des der `UserInfoWebPart` Control (auf den Pfeil nach unten in der Titelleiste), und klicken Sie dann auf **bearbeiten**. Wenn die Benutzeroberfläche zum Bearbeiten angezeigt wird, werden mehrere Bearbeitungssteuerelemente unterhalb der `UserInfoWebPart` -Steuerelement, das Sie verwenden können, um die Feldwerte zu bearbeiten. Bearbeiten Sie einige Felder aus, und klicken Sie auf **OK**, und verwenden Sie dann die **Anzeigemodus** Dropdownliste aus, um die Seite, um den Durchsuchen-Modus zurück.  
  
 Der zweite Schritt ist so exportieren Sie ein. WebPart-Beschreibungsdatei für die `UserInfoWebPart` Steuerelement. Klicken Sie auf das im Verbenmenü des benutzerdefinierten Steuerelements (dargestellt durch den Pfeil nach unten in der Titelleiste), und klicken Sie auf **exportieren**. Befolgen Sie die Anweisungen zum Speichern einer. WebPart-Beschreibungsdatei für das Steuerelement. Klicken Sie jetzt schließen Sie die Webseite, und bearbeiten Sie die Seitenquelle in einem Editor. Löschen der `<aspSample:userinfowebpart>` steuern Sie die Element-Deklaration, und klicken Sie dann zu speichern und schließen Sie die Datei. (Machen Sie diesen Schritt, um einen Benutzer zu simulieren, die noch nicht die `UserInfoWebPart` zu steuern, damit Sie das Steuerelement auf der Seite zu importieren).  
  
 Laden Sie die Webseite in einem Browser erneut. Die `UserInfoWebPart` Steuerelement nicht angezeigt werden sollte, da Sie ihn entfernt. Verwenden der **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Katalog** auf die Seite in den Katalogmodus zu wechseln. In der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> steuern, klicken Sie auf die **Durchsuchen** Schaltfläche, und navigieren Sie zu der. WebPart-Datei Sie erstellt haben, und klicken Sie auf die **hochladen** Schaltfläche. Ein Verweis auf das Steuerelement sollte mit einem Kontrollkästchen neben diesem angezeigt werden. Aktivieren Sie das Kontrollkästchen, und klicken Sie dann **hinzufügen** das Steuerelement auf der Seite hinzugefügt.  
  
 Während Sie in dieser Ansicht der Seite befinden, klicken Sie auf die **Update ImportCatalogPart** Schaltfläche am unteren Seitenrand, um die Auswirkungen der Aktualisierung programmgesteuert auf einer Anzahl an Eigenschaftenwerten finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Beachten Sie nach dem Klicken auf die Schaltfläche aus, wie die verschiedenen Eigenschaften in der Benutzeroberfläche geändert werden.  
  
 Klicken Sie abschließend auf **schließen** Katalogmodus beenden, und geben Sie die Seite, um den Durchsuchen-Modus zurück. Die `UserInfoWebPart` Steuerelement sollte jetzt auf der Seite angezeigt werden, die die Werte, die sie hatte, als Sie es zuvor exportiert haben.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Beschreibungsdateien für Webparts-Steuerelemente</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> Konstruktor ist ein Standard; in kein Konstruktor deklariert die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Klasse und daher keine besonderen Aufgaben ausgeführt werden, wenn eine neue Instanz der Klasse erstellt wird. Den Konstruktor wird von .NET Framework verwendet, zum Erstellen einer Instanz der Klasse.  
  
 Normalerweise Sie nicht benötigen, verwenden Sie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> Konstruktor programmgesteuert in Ihrem eigenen Code. Die beabsichtigte Verwendung des Steuerelements ist für Seitenentwickler, die es zu einer Seite deklarativ zur Entwurfszeit hinzugefügt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Textmeldung ab, die Benutzer auffordert, in das Verzeichnis einer Beschreibungsdatei zu wechseln, oder legt diese Textmeldung fest.</summary>
        <value>Eine Zeichenfolge, die den Text der Meldung enthält. Der Standardwert ist eine von .NET Framework bereitgestellte kulturspezifische Meldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> -Eigenschaft bietet Benutzern eine einfache Übersicht über das erste, was sie gerade ein importiertes Steuerelement hinzufügen müssen: Geben Sie den Speicherort einer Beschreibungsdatei, indem Sie entweder einen Pfad eingeben oder zur Datei navigieren. Ein typische Grund geben Sie einen benutzerdefinierten Wert für diese Eigenschaft ist, wenn Sie spezielle Anweisungen für Benutzer, z. B. einer bestimmten Netzwerkfreigabe verfügen, dem sie suchen sollten eine Beschreibungsdatei enthält.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Eigenschaft deklarativ und programmgesteuert. Für den vollständigen Code und zum Ausführen des Beispiels erforderlichen Schritte finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Übersicht über die Klasse.  
  
 Im folgenden Abschnitt des Codes, beachten Sie, dass die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Eigenschaftswert für das Steuerelement deklarativ festgelegt ist.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Abschnitt des Codes der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Eigenschaftswert programmgesteuert zugewiesen ist.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie auf die Seite in einem Browser laden, können Sie die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement, um auszuwählen **Katalogmodus** und der Seite in den Katalogmodus wechseln. Mit der Seite im Katalogmodus und der Description-Datei hochgeladen haben, beachten Sie die Textzeichenfolgen, die in der Benutzeroberfläche (UI) angezeigt, für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Wenn Sie auf die **Description-Datei hochladen** Schaltfläche der Text für einige der Eigenschaften in der Benutzeroberfläche geändert werden, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, welche Schaltfläche in der Benutzeroberfläche als Standardschaltfläche behandelt wird, die den Fokus erhält, wenn ein Formular gerendert wird, das die Schaltfläche enthält. Diese Eigenschaft ist nicht für den Aufruf aus Seitenentwicklercode vorgesehen.</summary>
        <value>Eine Zeichenfolge, die die ID des <see cref="T:System.Web.UI.WebControls.Button" /> enthält, der den Standardfokus in einem <see cref="T:System.Web.UI.WebControls.Panel" />-Steuerelement erhält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Code für diese Eigenschaft überschreibt die Basiseigenschaft geerbt von der <xref:System.Web.UI.WebControls.Panel> Klasse, um die Eigenschaft für Designer auszublenden und zu verhindern, dass Sie durch Designs beeinträchtigt wird. Obwohl sie öffentlich ist, wird diese Eigenschaft wird intern vom Webparts-Steuerelement für die Standardwiedergabe des Steuerelements verwendet und nicht von Seitenentwicklern verwendet werden soll.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung der Beschreibungen der verfügbaren <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente in einem Katalog zurück.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />, die eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> für jedes Steuerelement in einem Katalog enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Methode stellt eine Implementierung für die abstrakte Basismethode in deklariert die <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Klasse. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Methodenrückgabe beschreibende Informationen für jedes Steuerelement in einem Katalog. Beachten Sie, dass im Fall von einem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> steuern, kann es möglicherweise nur ein Serversteuerelement im Katalog zu einem Zeitpunkt, obwohl die Methode funktionieren würde, gäbe es mehrere Steuerelemente.  
  
 Ein <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Objekt ist ein Objekt, enthält wichtige Informationen zu, einer <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, einschließlich seine ID, einen Objektverweis auf das Steuerelement und die Werte für mehrere wichtige Eigenschaften, die von geerbt werden die <xref:System.Web.UI.WebControls.WebParts.Part> Klasse, z. B. <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> und <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Methode verbessert die Leistung. Wenn ein Katalog erstellt wird, benötigt es einige Informationen zu den einzelnen Steuerelementen, die er, einschließlich Titel, eine Beschreibung, ein Symbol enthält (falls vorhanden) und eine ID, Erstellen Sie eine Instanz jedes Steuerelements auf diese Informationen abzurufen, anstatt eine <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Zone, die einen Katalog Aufrufe erstellt die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> -Methode, und der Aufruf gibt nur die Beschreibungsinformationen für das Steuerelement anstelle einer Instanz von der -Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Methode auf einer Webseite. Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, enthält eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement und ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement sowie den Code, der verwendet die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Methode.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente.  
  
-   Eine Erklärung der Funktionsweise des Beispiels an, wenn Sie die Seite in einem Browser laden.  
  
 Der erste Teil dieses Codebeispiels wird das Benutzersteuerelement, das Benutzern ermöglicht, den Anzeigemodus auf einer Webseite zu ändern. Sie sollten den folgenden Quellcode in einer Datei zu platzieren, und nennen sie mit der Option Displaymodemenucs.ascx oder Displaymodemenuvb.ascx (je nachdem welche Sprache Sie verwenden). Weitere Informationen zu Modi und eine Beschreibung des Quellcodes in diesem Steuerelement anzuzeigen, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Der zweite Teil des Codebeispiels wird die Webseite. Sind Sie am oberen Rand der Seite zwei `register` Direktiven enthalten, von denen eine für das Benutzersteuerelement und eine für die kompilierte Komponente, die die beiden benutzerdefinierten enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Diese beiden Steuerelemente werden deklarativ im Markup der Seite auf die verwiesen wird. Bei der deklarativen Verweisen auf die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente (beide beginnen mit einer `aspSample` Präfix), beachten Sie, dass jede verfügt über eine `exportMode="all"` Attribut hinzugefügt wird. Mit diesem Attribut können Sie so exportieren Sie ein. WebPart-Beschreibungsdatei für das Steuerelement, das Sie in einem späteren zum Schritt importieren Sie das Steuerelement zu einer Seite verwenden.  
  
> [!NOTE]
>  So aktivieren Sie die Benutzer einer Webparts-Anwendung so exportieren Sie eine Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, müssen Sie auch die Funktion zum Exportieren in der Webanwendung aktivieren, durch das Hinzufügen eine `enableExport="true"` -Attribut auf die `<webParts>` Element (Dies ist ein untergeordnetes Element des der `<system.web>`Element) in der Datei "Web.config". Export ist standardmäßig deaktiviert, also wenn der Export für Ihre Anwendung noch nicht aktiviert haben, bearbeiten Sie die Datei "Web.config", und dies jetzt tun.  
  
 Die Seite enthält auch einen deklarativen Verweis auf die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement, in der richtigen Hierarchie deklarativer Elemente geschachtelt. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Methode wird aufgerufen, in den Code für die `Button1_Click` Methode.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Der dritte Teil des Codebeispiels wird der Quellcode für die beiden <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierung. Eine exemplarische Vorgehensweise, die beide Methoden der Kompilierung wird veranschaulicht, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Führen Sie jetzt im Codebeispiel wird ein. Laden Sie die Webseite in einem Browser. Der erste Schritt ist Export ein. WebPart-Beschreibungsdatei für jede <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (für die `TextDisplayWebPart` und für die `UserInfoWebPart` Steuerelement). Für jedes Steuerelement, klicken Sie auf das im Verbenmenü für das Steuerelement (dargestellt durch den Pfeil nach unten in der Titelleiste), und klicken Sie auf **exportieren**. Befolgen Sie die Anweisungen zum Speichern einer. WebPart-Beschreibungsdatei für das Steuerelement. Nachdem Sie die Beschreibungsdatei eine für jedes Steuerelement exportiert haben, schließen Sie die Webseite, und bearbeiten Sie die Seitenquelle in einem Editor. Löschen der `<aspSample:userinfowebpart>` und `<aspSample:textdisplaywebpart>` Deklarationselemente steuern, speichern und schließen Sie die Datei. (Beim Ausführen des diesen Schritt, um einen Benutzer zu simulieren, der diese Steuerelemente, die noch nicht so, dass Sie die Steuerelemente in der Seite zu importieren).  
  
 Laden Sie die Webseite in einem Browser erneut. Verwenden der **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Katalog** auf die Seite in den Katalogmodus zu wechseln. In der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> steuern, klicken Sie auf die **Durchsuchen** Schaltfläche, wechseln Sie zu der. WebPart-Dateien, die Sie erstellt haben, wählen Sie einen, und klicken Sie dann die **hochladen** Schaltfläche. Ein Verweis auf das Steuerelement sollte mit einem Kontrollkästchen neben diesem angezeigt werden. Aktivieren Sie das Kontrollkästchen, und klicken Sie dann **hinzufügen** das Steuerelement auf der Seite hinzugefügt. Wiederholen Sie diesen Vorgang für das andere Steuerelement aus.  
  
 Während Sie in dieser Ansicht der Seite befinden, klicken Sie auf die **Get WebPart Description** Schaltfläche am unteren Seitenrand, um die Auswirkung der programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> -Objekt für die steuerelementbeschreibung im geladenen der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Die Methode, die für den Zugriff auf die Description-Details, finden Sie unter den `Button1_Click` Methode der Seitenquelle, ist die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Methode. Eine Bezeichnung unterhalb der Schaltfläche zeigt grundlegende Informationen über das Steuerelement.  
  
 Nach dem Hinzufügen des ersten Steuerelements, wiederholen Sie den Vorgang, um das zweite Steuerelement der Seite hinzufügen. Klicken Sie abschließend auf **schließen** Katalogmodus beenden, und geben Sie die Seite, um den Durchsuchen-Modus zurück. Beide benutzerdefinierten Steuerelemente sollte jetzt angezeigt werden, auf der Seite mit den Werten, die sie hatten, wenn Sie zuvor das Description-Dateien exportiert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />, die Details zum Steuerelement enthält.</param>
        <summary>Gibt auf der Grundlage der an die Methode übergebenen Werte in der Beschreibung einen Verweis auf ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zurück.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, dessen Beschreibung mit den Werten in <paramref name="description" /> übereinstimmt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Methode gibt einen Verweis auf eine <xref:System.Web.UI.WebControls.WebParts.WebPart> , deren Beschreibungsdetails den Werten der entsprechen, Kontrolle der <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Objekt an die Methode übergeben. Diese Methode wird verwendet in der Regel zusammen mit den <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> -Methode, die zum Abrufen der Beschreibungen von Steuerelementen im Katalog verwendet wird. Einzelne <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente können dann abgerufen oder bearbeitet werden, nach Bedarf durch Übergeben der einzelnen <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Objekte die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Methode auf einer Webseite. Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, enthält eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement und ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement sowie den Code, der verwendet die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Methode.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente.  
  
-   Eine Erklärung der Funktionsweise des Beispiels an, wenn Sie die Seite in einem Browser laden.  
  
 Der erste Teil dieses Codebeispiels wird das Benutzersteuerelement, das Benutzern ermöglicht, den Anzeigemodus auf einer Webseite zu ändern. Sie sollten den folgenden Quellcode in einer Datei zu platzieren, und nennen sie mit der Option Displaymodemenucs.ascx oder Displaymodemenuvb.ascx (je nachdem welche Sprache Sie verwenden). Weitere Informationen zu Modi und eine Beschreibung des Quellcodes in diesem Steuerelement anzuzeigen, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Der zweite Teil des Codebeispiels wird die Webseite. Sind Sie am oberen Rand der Seite zwei `register` Direktiven enthalten, von denen eine für das Benutzersteuerelement und eine für die kompilierte Komponente, die die beiden benutzerdefinierten enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Diese beiden Steuerelemente werden deklarativ im Markup der Seite auf die verwiesen wird. Bei der deklarativen Verweisen auf die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente (beide beginnen mit einer `aspSample` Präfix), beachten Sie, dass jede verfügt über eine `exportMode="all"` Attribut hinzugefügt wird. Mit diesem Attribut können Sie so exportieren Sie ein. WebPart-Beschreibungsdatei für das Steuerelement, das Sie in einem späteren zum Schritt importieren Sie das Steuerelement zu einer Seite verwenden.  
  
> [!NOTE]
>  So aktivieren Sie die Benutzer einer Webparts-Anwendung so exportieren Sie eine Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, müssen Sie auch die Funktion zum Exportieren in der Webanwendung aktivieren, durch das Hinzufügen eine `enableExport="true"` -Attribut auf die `<webParts>` Element (Dies ist ein untergeordnetes Element des der `<system.web>`Element) in der Datei "Web.config". Export ist standardmäßig deaktiviert, also wenn der Export für Ihre Anwendung noch nicht aktiviert haben, bearbeiten Sie die Datei "Web.config", und dies jetzt tun.  
  
 Die Seite enthält auch einen deklarativen Verweis auf die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement, in der richtigen Hierarchie deklarativer Elemente geschachtelt. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Methode wird aufgerufen, in den Code für die `Button2_Click` Methode.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Der dritte Teil des Codebeispiels wird der Quellcode für die beiden <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierung. Eine exemplarische Vorgehensweise, die beide Methoden der Kompilierung wird veranschaulicht, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Führen Sie jetzt im Codebeispiel wird ein. Laden Sie die Webseite in einem Browser. Der erste Schritt ist Export ein. WebPart-Beschreibungsdatei für jede <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (für die `TextDisplayWebPart` und für die `UserInfoWebPart` Steuerelement). Für jedes Steuerelement, klicken Sie auf das im Verbenmenü für das Steuerelement (dargestellt durch den Pfeil nach unten in der Titelleiste), und klicken Sie auf **exportieren**. Befolgen Sie die Anweisungen zum Speichern einer. WebPart-Beschreibungsdatei für das Steuerelement. Nachdem Sie die Beschreibungsdatei eine für jedes Steuerelement exportiert haben, schließen Sie die Webseite, und bearbeiten Sie die Seitenquelle in einem Editor. Löschen der `<aspSample:userinfowebpart>` und `<aspSample:textdisplaywebpart>` Deklarationselemente steuern, speichern und schließen Sie die Datei. (Beim Ausführen des diesen Schritt, um einen Benutzer zu simulieren, der diese Steuerelemente, die noch nicht so, dass Sie die Steuerelemente in der Seite zu importieren).  
  
 Laden Sie die Webseite in einem Browser erneut. Verwenden der **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Katalog** auf die Seite in den Katalogmodus zu wechseln. In der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> steuern, klicken Sie auf die **Durchsuchen** Schaltfläche, wechseln Sie zu der. WebPart-Dateien, die Sie erstellt haben, wählen Sie einen, und klicken Sie dann die **hochladen** Schaltfläche. Ein Verweis auf das Steuerelement sollte mit einem Kontrollkästchen neben diesem angezeigt werden. Nun, dass die steuerelementbeschreibung in hochgeladen werden die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> steuern, klicken Sie auf die **verwenden GetWebPart** Schaltfläche am unteren Rand der Seite. Dadurch erfahren Sie, den Effekt des Aufrufs der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> -Methode und übergibt Sie an die steuerelementbeschreibung, die derzeit geladen, der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Beachten Sie, dass das zugeordnete Steuerelement sofort an die Webseite, ohne dass der Benutzer hinzugefügt wird auf die **hinzufügen** Schaltfläche. Der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> -Methode, die aufgerufen wird, in der `Button2_Click` Methodenrückgabe der Seitenquelle, die <xref:System.Web.UI.WebControls.WebParts.WebPart> die aktuelle Beschreibung in den geladene zugeordnete Steuerelement die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Weiter die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> -Methode aufgerufen wird, und die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement direkt auf der Seite hinzugefügt wird. Dies veranschaulicht das Hinzufügen des Steuerelements programmgesteuert über die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement ohne Eingreifen des Benutzers.  
  
 Nach dem Hinzufügen des ersten Steuerelements, wiederholen Sie den Vorgang, um das zweite Steuerelement der Seite hinzufügen. Klicken Sie abschließend auf **schließen** Katalogmodus beenden, und geben Sie die Seite, um den Durchsuchen-Modus zurück. Beide benutzerdefinierten Steuerelemente sollte jetzt angezeigt werden, auf der Seite mit den Werten, die sie hatten, wenn Sie zuvor das Description-Dateien exportiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="description" /> ist kein verfügbarer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />-Wert.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Text ab oder legt Text fest, der nach dem Import einer Beschreibungsdatei angezeigt wird und der das importierte Steuerelement im Katalog der importierten Steuerelemente darstellt oder beschreibt.</summary>
        <value>Eine Zeichenfolge, die den Text der Bezeichnung enthält. Der Standardwert ist eine von .NET Framework bereitgestellte kulturspezifische Meldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Eigenschaft wird normalerweise verwendet, eine kurze, allgemeine Bezeichnung enthält, die das Steuerelement im beschreibt die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Eigenschaft deklarativ und programmgesteuert. Für den vollständigen Code und zum Ausführen des Beispiels erforderlichen Schritte finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Übersicht über die Klasse.  
  
 Im folgenden Abschnitt des Codes, beachten Sie, dass die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Eigenschaftswert für das Steuerelement deklarativ festgelegt ist.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Abschnitt des Codes der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Eigenschaftswert programmgesteuert zugewiesen ist.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie auf die Seite in einem Browser laden, können Sie die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement, um auszuwählen **Katalogmodus** und der Seite in den Katalogmodus wechseln. Mit der Seite im Katalogmodus und der Description-Datei hochgeladen haben, beachten Sie die Textzeichenfolgen, die in der Benutzeroberfläche (UI) angezeigt, für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Wenn Sie auf die **Description-Datei hochladen** Schaltfläche der Text für einige der Eigenschaften in der Benutzeroberfläche geändert werden, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Fehlermeldung ab, die angezeigt wird, wenn während des Importvorgangs ein Fehler auftritt, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die den Text der Bezeichnung enthält. Der Standardwert ist eine von .NET Framework bereitgestellte kulturspezifische Meldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Eigenschaft ist nützlich, Benutzer zu benachrichtigen, wenn ein Problem oder Fehler auftritt, während die Seite versucht, den import einer Beschreibungsdatei.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Eigenschaft deklarativ und programmgesteuert. Für den vollständigen Code und zum Ausführen des Beispiels erforderlichen Schritte finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Übersicht über die Klasse.  
  
 Im folgenden Abschnitt des Codes, beachten Sie, dass die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Eigenschaftswert für das Steuerelement deklarativ festgelegt ist.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Abschnitt des Codes der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Eigenschaftswert programmgesteuert zugewiesen ist.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie auf die Seite in einem Browser laden, können Sie die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement, um auszuwählen **Katalogmodus** und der Seite in den Katalogmodus wechseln. Mit der Seite im Katalogmodus und der Description-Datei hochgeladen haben, beachten Sie die Textzeichenfolgen, die in der Benutzeroberfläche (UI) angezeigt, für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Wenn Sie auf die **Description-Datei hochladen** Schaltfläche der Text für einige der Eigenschaften in der Benutzeroberfläche geändert werden, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Titel ab, der in der Titelleiste eines <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />-Steuerelements angezeigt wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die als Titel des Steuerelements verwendet wird. Der Standardwert ist ein vom Webparts-Steuerelementsatz bereitgestellter berechneter Steuerelementname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> -Eigenschaftswert angezeigt wird, in der Titelleiste des Fensters ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> steuern, wenn das Steuerelement im Katalogmodus sichtbar ist. Wenn das Steuerelement auf einer Seite deklariert wird, können Sie einen Wert für die Eigenschaft festlegen, mit der `Title` Attribut. Wenn Sie einen Wert für den Titel nicht angeben, wird ein kulturspezifische-Standardwert verwendet, um die Art der Eigenschaften, die beschreiben, die dieses Steuerelement Benutzer bearbeiten kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Eigenschaft deklarativ und programmgesteuert. Für den vollständigen Code und zum Ausführen des Beispiels erforderlichen Schritte finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Übersicht über die Klasse.  
  
 Im folgenden Abschnitt des Codes, beachten Sie, dass die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Eigenschaftswert für das Steuerelement deklarativ festgelegt ist.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Abschnitt des Codes der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Eigenschaftswert programmgesteuert zugewiesen ist.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie auf die Seite in einem Browser laden, können Sie die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement, um auszuwählen **Katalogmodus** und der Seite in den Katalogmodus wechseln. Mit der Seite im Katalogmodus und der Description-Datei hochgeladen haben, beachten Sie die Textzeichenfolgen, die in der Benutzeroberfläche (UI) angezeigt, für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Wenn Sie auf die **Description-Datei hochladen** Schaltfläche der Text für einige der Eigenschaften in der Benutzeroberfläche geändert werden, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text für das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement ab, das das Hochladen einer Beschreibungsdatei startet, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die als Text für einen <see cref="T:System.Web.UI.WebControls.Button" /> verwendet wird. Der Standardwert ist eine vom Webparts-Steuerelementsatz bereitgestellte kulturspezifische Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Eigenschaft enthält den Text für die <xref:System.Web.UI.WebControls.Button> -Steuerelement, das während des Uploads wird initiiert. Wenn Sie benutzerdefinierten Text für diese Eigenschaft oder zum Zuweisen der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> -Eigenschaft muss der Text machen deutlich, dass der Benutzer eine Beschreibungsdatei hochlädt. Der Text sollte nicht angenommen oder dazu führen, dass das Steuerelement selbst wird während des Uploads tatsächlich hochgeladen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Eigenschaft deklarativ und programmgesteuert. Für den vollständigen Code und zum Ausführen des Beispiels erforderlichen Schritte finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Übersicht über die Klasse.  
  
 Im folgenden Abschnitt des Codes, beachten Sie, dass die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Eigenschaftswert für das Steuerelement deklarativ festgelegt ist.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Abschnitt des Codes der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Eigenschaftswert programmgesteuert zugewiesen ist.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie auf die Seite in einem Browser laden, können Sie die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement, um auszuwählen **Katalogmodus** und der Seite in den Katalogmodus wechseln. Mit der Seite im Katalogmodus und der Description-Datei hochgeladen haben, beachten Sie die Textzeichenfolgen, die in der Benutzeroberfläche (UI) angezeigt, für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Wenn Sie auf die **Description-Datei hochladen** Schaltfläche der Text für einige der Eigenschaften in der Benutzeroberfläche geändert werden, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text der Meldung ab, mit der dem Benutzer das Hochladen einer Beschreibungsdatei erklärt wird, oder legt diesen Text fest.</summary>
        <value>Eine Zeichenfolge, die Anweisungen für den Benutzer zum Hochladen einer Beschreibungsdatei enthält. Der Standardwert ist eine vom Webparts-Steuerelementsatz bereitgestellte kulturspezifische Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Eigenschaft stellt ein kurzen Satz oder einen Satz von Anweisungen für Benutzer auffordert, auf eine Schaltfläche zum Hochladen der Description-Datei klicken. Wenn Sie benutzerdefinierten Text für diese Eigenschaft oder zum Zuweisen der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> -Eigenschaft muss der Text machen deutlich, dass der Benutzer eine Beschreibungsdatei hochlädt. Der Text sollte nicht angenommen oder dazu führen, dass das Steuerelement selbst wird während des Uploads tatsächlich hochgeladen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Eigenschaft deklarativ und programmgesteuert. Für den vollständigen Code und zum Ausführen des Beispiels erforderlichen Schritte finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Übersicht über die Klasse.  
  
 Im folgenden Abschnitt des Codes, beachten Sie, dass die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Eigenschaftswert für das Steuerelement deklarativ festgelegt ist.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Abschnitt des Codes der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Eigenschaftswert programmgesteuert zugewiesen ist.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie auf die Seite in einem Browser laden, können Sie die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement, um auszuwählen **Katalogmodus** und der Seite in den Katalogmodus wechseln. Mit der Seite im Katalogmodus und der Description-Datei hochgeladen haben, beachten Sie die Textzeichenfolgen, die in der Benutzeroberfläche (UI) angezeigt, für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement. Wenn Sie auf die **Description-Datei hochladen** Schaltfläche der Text für einige der Eigenschaften in der Benutzeroberfläche geändert werden, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>