<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33d3df079e6df5b1f48d82e8c41afd8c6ce19b00" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77107550" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importiert eine Beschreibungsdatei für ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder ein anderes als <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement verwendetes ASP.NET-Serversteuerelement), sodass Benutzer das Steuerelement mit vorher festgelegten Einstellungen zu einer Webseite hinzufügen können. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement ermöglicht es Benutzern, eine Beschreibungsdatei zu importieren, die Einstellungen in einem <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement oder Server Steuerelement beschreibt, das ein Benutzer einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone hinzufügen möchte.  
  
 Nachdem ein Benutzer eine Beschreibungsdatei importiert hat, wird das <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, auf das in der Datei verwiesen wird, innerhalb des <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuer Elements angezeigt, und ein Benutzer kann das Steuerelement der Seite hinzufügen.  
  
 Die Beschreibungsdatei ist nicht mit der des Steuer Elements selbst identisch. Es handelt sich um eine XML-Datei, die mit endet. WebPart-Erweiterung und enthält Name/Wert-Paare, größtenteils Eigenschaftswerte, die den Zustand des Steuer Elements beschreiben. Die Beschreibungsdatei wird gemäß einem angegebenen XML-Format erstellt, wie im Thema [Webparts Steuerelement-Beschreibungsdateien](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)beschrieben.  
  
 Wie bei dem Steuerelement, auf das sich die Beschreibungsdatei bezieht, kann es entweder in eine Assembly kompiliert werden, oder es kann sich um ein Benutzer Steuerelement handeln, das in einer ASCX-Datei definiert ist. In beiden Fällen muss das Steuerelement, auf das in einer importierten Beschreibungsdatei verwiesen wird, auf dem Webserver vorhanden sein, der die Seite hostet, die versucht, das Steuerelement zu importieren. Die Beschreibungsdatei verweist auf den Steuerelement Namen und die Assembly (oder Datei), die das Steuerelement enthält, und die Beschreibungsdatei enthält Einstellungen, die die Eigenschaftswerte des Steuer Elements, die Darstellung und das Verhalten beeinflussen.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement ermöglicht Benutzern das Freigeben von Einstellungen für Steuerelemente. Ein komplexes Steuerelement kann über viele Eigenschaften und Einstellungen verfügen. Beispielsweise kann ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement in einer typischen Intranetsite innerhalb eines großen Unternehmens eine Reihe von Eigenschaften enthalten, die für die Benutzerumgebung spezifische Werte enthalten, wie z. b. Datenbankverbindungen, Abteilungs Informationen usw. Das Steuerelement kann auch eine Reihe von Eigenschaften enthalten, die sich auf seine Darstellung auswirken. Ein Benutzer könnte das Steuerelement auf einer bestimmten Website personalisieren und ordnungsgemäß arbeiten, eine Beschreibungsdatei für das Steuerelement exportieren und dann die Beschreibungsdatei für andere Benutzer freigeben, die die Datei importieren, um das vollständig konfigurierte Steuerelement einem anderen Intranet hinzuzufügen. Websites, die Sie personalisieren können. Solange die kompilierte Assembly oder die Benutzer Steuerelement Datei, die das Steuerelement enthält, auf dem Webserver vorhanden ist, der Ihre Website gehostet, können Benutzer das Steuerelement anderen Websites hinzufügen.  
  
 Der Mechanismus, mit dem Benutzer eine Beschreibungsdatei (und somit das zugehörige Server Steuerelement) in eine Webseite importieren, ist das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement, das ein Seiten Entwickler einer Webseite hinzufügen muss. Wenn ein Benutzer die Seite in den Katalog Anzeigemodus wechselt, wird das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement angezeigt, und der Benutzer kann dieses Steuerelement aufrufen, um zum zu navigieren. Webpart-Beschreibungsdatei, die dem Server Steuerelement entspricht, das Sie importieren möchten. Nach der Benutzeroberfläche und den Anweisungen, die vom <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement bereitgestellt werden, kann ein Benutzer das gewünschte Server Steuerelement der Webseite hinzufügen, wobei Darstellung und Eigenschaften in der importierten Beschreibungsdatei vollständig konfiguriert sind.  
  
 Bevor die Beschreibungsdatei eines <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuer Elements importiert werden kann, muss ein Benutzer zunächst die Datei auf der Grundlage eines vorhandenen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements erstellen (exportieren). Eine Beschreibungsdatei kann für ein Steuerelement exportiert werden, wenn die folgenden Bedingungen erfüllt sind:  
  
-   Das Steuerelement verfügt über Eigenschaften, die mit dem `Personalizable`-Attribut gekennzeichnet sind  
  
-   Die Datei "Web. config" hat den `enableExport`-Attribut Wert auf `true` für das `<webParts>`-Element festgelegt.  
  
-   Ein Entwickler legt den Wert der <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>-Eigenschaft des Steuer Elements auf einen anderen Wert als den Standardwert <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>fest, der den Export untersagt. Wenn der <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>-Eigenschafts Wert auf <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>festgelegt ist, wird jede Eigenschaft, die einen <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A>-Parameter mit einem `Personalizable`-Attribut enthält, nicht exportiert, wenn ein Benutzer eine Beschreibungsdatei exportiert. Dadurch können Entwickler von Steuerelementen verhindern, dass sensible Daten, z. b. Verbindungs Zeichenfolgen, in bestimmten Situationen exportiert werden.  
  
 Ein Benutzer kann ein Steuerelement exportieren, das für den Export aktiviert wurde, indem er auf das Export Verb klickt, das im Verbenmenü des-Steuer Elements angezeigt wird, und den Anweisungen zum Speichern eines-Steuer Elements folgt. Webpart-Beschreibungsdatei für das Steuerelement. Andere Benutzer können diese Datei anschließend importieren, um Ihre eigenen Instanzen des Steuer Elements zu konfigurieren.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse enthält mehrere Eigenschaften. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>-Eigenschaft enthält Text mit Anweisungen, die Benutzer beim Suchen nach der Beschreibungsdatei finden. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>-Eigenschaft enthält Text, der als Bezeichnung für das importierte Steuerelement dient, wie es innerhalb des <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuer Elements angezeigt wird. Der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> enthält Text, der angezeigt wird, wenn beim Importieren einer Steuerelement Beschreibung ein Fehler auftritt. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>-Eigenschaft überschreibt die Basis Eigenschaft, um einen Standard Titel für ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement zuzuweisen, wenn der Entwickler keinen Titel zuweist. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>-Eigenschaft enthält den Text für die Schaltfläche, auf die der Benutzer klickt, um die Beschreibungsdatei hochzuladen, und die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>-Eigenschaft enthält die Anweisungen für den Uploadvorgang.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse enthält auch mehrere eindeutige Methoden. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode ruft ein <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>-Objekt für jedes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement im Katalog ab, das es einem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement ermöglicht, Informationen zu den einzelnen Server Steuerelementen anzuzeigen, ohne eine Instanz davon erstellen zu müssen. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>-Methode ruft eine Instanz eines bestimmten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements auf Grundlage der Beschreibung ab, die an die-Methode weitergegeben wird.  
  
 Mit der Verwendung des <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuer Elements sind einige inhärente Risiken verbunden. Ein Beispiel ist die Möglichkeit, schädliche Daten in die Webanwendung zu importieren, indem Sie die zum Importieren verwendeten Beschreibungsdateien verwenden. Wenn ein Benutzer bösartigen Skriptcode als Wert einer Zeichen folgen Eigenschaft in der Beschreibungsdatei abgelegt hat, kann dieses Skript möglicherweise ausgeführt werden, wenn ein Benutzer die Beschreibungsdatei importiert und das referenzierte Server Steuerelement einer Webseite hinzufügt. Um das Risiko zu minimieren, dass Beschreibungsdateien mit schädlichen Daten importiert werden, sollten Server Steuerelemente, die über Zeichen folgen typisierte Eigenschaften verfügen, die Eigenschaften Daten immer codieren. Ein anderes Risiko besteht darin, Typen durch Beschreibungsdateien zu importieren (siehe [Webparts Steuerelement Beschreibungsdateien](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Ein böswilliger Benutzer könnte Anforderungen übermitteln, um viele Assemblys in die <xref:System.AppDomain>zu laden, was zu einer übermäßigen Menge an Arbeitsspeicher führt.  
  
 Um die Risiken im Zusammenhang mit dem Import zu vermeiden, können Sie die Funktion vollständig deaktivieren, indem Sie die Importfunktion oder das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement nicht verwenden. Sie können auch einschränken, welche Benutzer auf das Steuerelement zugreifen können. Dies können Sie Programm gesteuert mithilfe der Rollen Verwaltung durchführen (Weitere Informationen finden Sie unter [Verwalten der Autorisierung mit Rollen](https://docs.microsoft.com/previous-versions/aspnet/9ab2fxh0(v=vs.100))). Wenn z. b. die Seite geladen wird, können Sie überprüfen, ob ein Benutzer einer bestimmten Rolle gehört, z. b. die Administrator Rolle. Wenn der Benutzer in der Rolle ist, können Sie das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement der Seite für diesen Benutzerprogramm gesteuert hinzufügen. Sie können auch einen deklarativen Ansatz verwenden, um die Gruppe von Benutzern einzuschränken, die das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement verwenden können.  Auf der Webseite, die einen Katalog enthält, können Sie zwei <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelemente platzieren: eine für Benutzer, die importieren können, und eine für die Benutzer, die Sie nicht haben können. Die Zone für Benutzer, die importieren können, würde das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement enthalten. Die Zone selbst kann in einem <xref:System.Web.UI.WebControls.LoginView>-Steuerelement platziert werden, sodass Sie die Verwendung des Steuer Elements in der Zone auf die von Ihnen angegebenen authentifizierten Benutzer oder Rollen beschränken können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement deklarativ und Programm gesteuert auf einer Webseite verwendet wird. Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die ein <xref:System.Web.UI.WebControls.WebParts.CatalogZone>-Steuerelement und ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement enthält.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält.  
  
-   Eine Erläuterung, wie das Beispiel funktioniert, wenn Sie die Seite in einem Browser laden.  
  
 Der erste Teil dieses Code Beispiels ist das Benutzer Steuerelement, das es Benutzern ermöglicht, Anzeigemodi auf einer Webseite zu ändern. Fügen Sie den folgenden Quellcode in eine Datei ein, und nennen Sie Sie "displaymudemenucs. ascx" oder "displayjudemenuvb. ascx" (je nachdem, welche Sprache Sie verwenden). Ausführliche Informationen zu Anzeigemodi und eine Beschreibung des Quellcodes in diesem Steuerelement finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 Der zweite Teil des Code Beispiels ist die Webseite. Am oberen Rand der Seite befinden sich zwei `register` Direktiven, eine für das Benutzer Steuerelement und eine für die kompilierte Komponente, die die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält. Beachten Sie, dass die Seite über einen deklarativen Verweis auf das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement verfügt, das in der richtigen Hierarchie der deklarativen Elemente geschachtelt ist. Beachten Sie auch, dass mehrere Eigenschaftswerte deklarativ für das `<asp:importcatalogpart>` Element zugewiesen werden. Außerdem aktualisiert die `Button1_Click`-Methode eine Reihe von Eigenschafts Werten für das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement.  
  
 Im <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Steuerelement der Seite werden die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente deklariert. Das `<aspSample:userinfowebpart>`-Steuerelement verfügt über ein `exportmode="all"`-Attribut. Dieses Attribut ist erforderlich, damit Benutzer eine Beschreibungsdatei für das Steuerelement exportieren können. diese kann dann von anderen Benutzern importiert werden, die das Steuerelement mithilfe der Beschreibungsdatei importieren möchten.  
  
> [!NOTE]
>  Damit Benutzer einer Webparts Anwendung eine Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente exportieren können, müssen Sie die Exportfunktion in der-Webanwendung auch aktivieren, indem Sie dem `<webParts>`-Element (das ein untergeordnetes Element des `<system.web>`-Elements ist) in der Datei "Web. config" ein `enableExport="true"`-Attribut hinzufügen. Der Export ist standardmäßig deaktiviert. Wenn Sie den Export für Ihre Anwendung noch nicht aktiviert haben, bearbeiten Sie die Datei "Web. config", und führen Sie Sie jetzt aus.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 Der dritte Teil des Code Beispiels ist der Quellcode für die beiden <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente. Beachten Sie, dass einige Eigenschaften dieser Steuerelemente mit dem `WebBrowsable`-Attribut markiert sind. Dadurch kann das <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>-Steuerelement die Benutzeroberfläche (User Interface, UI) für einen Benutzer dynamisch generieren, um diese Eigenschaften zu bearbeiten, wenn sich die Steuerelemente im Bearbeitungsmodus befinden. Die Eigenschaften werden auch mit einem `WebDisplayName`-Attribut gekennzeichnet, um den Text der Bezeichnung anzugeben, die neben den einzelnen Steuerelementen in der Bearbeitungs Benutzeroberfläche angezeigt wird. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den App_Code Ordner der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird die dynamische Kompilierung verwendet. Eine exemplarische Vorgehensweise, die beide Kompilierungs Methoden veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 Auf das benutzerdefinierte Steuerelement mit dem Namen `TextDisplayWebPart` wird auf der Webseite mit einem `<aspSample:TextDisplayWebPart>`-Element verwiesen. Das andere Steuerelement, das als `UserInfoWebPart`bezeichnet wird, wird auch zunächst auf der Webseite deklariert. Sie werden es jedoch später entfernen, um die Möglichkeit zu veranschaulichen, eine Beschreibungsdatei für ein Steuerelement zu importieren.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Führen Sie nun das Codebeispiel aus. Laden Sie die Webseite in einem Browser. Der erste Schritt besteht darin, das `UserInfoWebPart` Steuerelement zu bearbeiten. Verwenden Sie das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **Bearbeiten** aus, um die Seite in den Bearbeitungsmodus zu wechseln. Klicken Sie im `UserInfoWebPart`-Steuerelement auf das Verben-Menü (den abwärts Pfeil in der Titelleiste), und klicken Sie dann auf **Bearbeiten**. Wenn die Bearbeitungs Benutzeroberfläche angezeigt wird, werden unter dem `UserInfoWebPart` Steuerelement mehrere Bearbeitungs Steuerelemente angezeigt, die Sie zum Bearbeiten der Feldwerte verwenden können. Bearbeiten Sie einige Felder, klicken Sie auf **OK**, und verwenden Sie dann die Dropdown Liste **Anzeigemodus** , um die Seite in den Durchsuchenmodus zurückzukehren.  
  
 Der zweite Schritt ist das Exportieren eines. Webpart-Beschreibungsdatei für das `UserInfoWebPart`-Steuerelement. Klicken Sie auf das Verbenmenü des benutzerdefinierten Steuer Elements (dargestellt durch den abwärts Pfeil in der Titelleiste), und klicken Sie auf **exportieren**. Befolgen Sie die Anweisungen zum Speichern einer. Webpart-Beschreibungsdatei für das Steuerelement. Schließen Sie nun die Webseite, und bearbeiten Sie die Seitenquelle in einem Editor. Löschen Sie das Deklarations Element `<aspSample:userinfowebpart>` Control, speichern Sie die Datei, und schließen Sie Sie. (Sie können diesen Schritt ausführen, um einen Benutzer zu simulieren, der noch nicht über das `UserInfoWebPart` Steuerelement verfügt, sodass Sie das Steuerelement auf die Seite importieren können.)  
  
 Laden Sie die Webseite erneut in einem Browser. Das `UserInfoWebPart` Steuerelement sollte nicht angezeigt werden, da es entfernt wurde. Verwenden Sie das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **catalog** aus, um die Seite in den Katalog Modus zu wechseln. Klicken Sie im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement auf die Schaltfläche **Durchsuchen** , und navigieren Sie zum. Von Ihnen erstellte WebPart-Datei, und klicken Sie dann auf die Schaltfläche **hochladen** . Ein Verweis auf das Steuerelement sollte mit einem Kontrollkästchen daneben angezeigt werden. Aktivieren Sie das Kontrollkästchen, und klicken Sie dann auf **Hinzufügen** , um das Steuerelement der Seite hinzuzufügen.  
  
 Klicken Sie in dieser Ansicht der Seite am unteren Rand der Seite auf die Schaltfläche **ImportCatalogPart aktualisieren** , um zu sehen, wie sich das programmgesteuerte Aktualisieren einer Reihe von Eigenschafts Werten im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement auswirkt. Nachdem Sie auf die Schaltfläche geklickt haben, beobachten Sie, wie die verschiedenen Eigenschaften in der Benutzeroberfläche geändert werden.  
  
 Klicken Sie abschließend auf **Schließen** , um den Katalog Modus zu beenden und die Seite in den Suchmodus zurückzukehren. Das `UserInfoWebPart` Steuerelement sollte nun auf der Seite angezeigt werden, die die Werte enthält, die es beim früheren exportieren enthielt.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Beschreibungsdateien für Webparts Steuerelemente</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A>-Konstruktor ist ein Standardwert. in der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse ist kein Konstruktor deklariert. Daher werden keine speziellen Aufgaben ausgeführt, wenn eine neue Instanz der-Klasse erstellt wird. Der-.NET Framework verwendet intern den Konstruktor, um eine Instanz der-Klasse zu erstellen.  
  
 Normalerweise müssen Sie den <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A>-Konstruktor nicht Programm gesteuert in Ihrem eigenen Code verwenden. Die Verwendung des Steuer Elements ist für Seiten Entwickler vorgesehen, die Sie einer Seite deklarativ zur Entwurfszeit hinzufügen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Textmeldung ab, die Benutzer auffordert, in das Verzeichnis einer Beschreibungsdatei zu wechseln, oder legt diese Textmeldung fest.</summary>
        <value>Eine Zeichenfolge, die den Text der Meldung enthält. Der Standardwert ist eine von .NET Framework bereitgestellte kulturspezifische Meldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>-Eigenschaft bietet Benutzern eine einfache Übersicht über die ersten Schritte, die Sie beim Hinzufügen eines importierten Steuer Elements ausführen müssen: Geben Sie den Speicherort einer Beschreibungsdatei an, indem Sie entweder einen Pfad eingeben oder die Datei durchsuchen. Ein typischer Grund für die Angabe eines benutzerdefinierten Werts für diese Eigenschaft ist, wenn Sie spezielle Anweisungen für Benutzer haben, z. b. eine bestimmte Netzwerkfreigabe, die Sie durchsuchen müssen, um eine Beschreibungsdatei zu suchen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>-Eigenschaft deklarativ und Programm gesteuert verwendet wird. Den vollständigen Code und die Anweisungen, die zum Ausführen des Beispiels erforderlich sind, finden Sie im Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse.  
  
 Beachten Sie im folgenden Code Abschnitt, dass der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>-Eigenschafts Wert deklarativ für das-Steuerelement festgelegt wird.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Code Abschnitt wird der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>-Eigenschafts Wert Programm gesteuert zugewiesen.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie die Seite in einem Browser laden, können Sie das Steuerelement **Anzeigemodus** -Dropdown Liste verwenden, um den **Katalog Modus** auszuwählen und die Seite in den Katalog Modus zu wechseln. Wenn die Seite im Katalog Modus und die Beschreibungsdatei hochgeladen ist, beachten Sie die verschiedenen Text Zeichenfolgen, die auf der Benutzeroberfläche für das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement angezeigt werden. Wenn Sie auf die Schaltfläche **Beschreibungsdatei hochladen** klicken, wird der Text für einige Eigenschaften in der Benutzeroberfläche geändert, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, welche Schaltfläche in der Benutzeroberfläche als Standardschaltfläche behandelt wird, die den Fokus erhält, wenn ein Formular gerendert wird, das die Schaltfläche enthält. Diese Eigenschaft ist nicht für den Aufruf aus Seitenentwicklercode vorgesehen.</summary>
        <value>Eine Zeichenfolge, die die ID des <see cref="T:System.Web.UI.WebControls.Button" /> enthält, der den Standardfokus in einem <see cref="T:System.Web.UI.WebControls.Panel" />-Steuerelement erhält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Code für diese Eigenschaft überschreibt die Basis Eigenschaft, die von der <xref:System.Web.UI.WebControls.Panel>-Klasse geerbt wurde, um die-Eigenschaft von Designern auszublenden und zu verhindern, dass Sie von Designs beeinflusst wird. Obwohl es öffentlich ist, wird diese Eigenschaft intern vom Webparts Steuerelement festgelegt, das für das Standard Rendering dieses Steuer Elements festgelegt wurde, und ist nicht für die Verwendung durch Seiten Entwickler vorgesehen.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung der Beschreibungen der verfügbaren <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente in einem Katalog zurück.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />, die eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> für jedes Steuerelement in einem Katalog enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode stellt eine Implementierung für die abstrakte Basis Methode bereit, die in der <xref:System.Web.UI.WebControls.WebParts.CatalogPart>-Klasse deklariert ist. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode gibt Beschreibungs Informationen für jedes Steuerelement in einem Katalog zurück. Beachten Sie, dass im Fall eines <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuer Elements jeweils nur ein Server Steuerelement im Katalog vorhanden sein kann, obwohl die-Methode funktioniert, wenn mehrere Steuerelemente vorhanden wären.  
  
 Ein <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>-Objekt ist ein Objekt, das grundlegende Informationen zu einem <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement enthält, einschließlich der ID, eines Objekt Verweises zum Steuerelement und der Werte einiger wichtiger Eigenschaften, die von der <xref:System.Web.UI.WebControls.WebParts.Part> Klasse geerbt werden, z. b. <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> und <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.  
  
 Durch die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode wird die Leistung verbessert. Wenn ein Katalog erstellt wird, benötigt er einige Informationen über jedes enthaltene Steuerelement, einschließlich eines Titels, einer Beschreibung, eines Symbols (sofern vorhanden) und einer ID. Anstatt eine Instanz jedes Steuer Elements zu erstellen, um diese Informationen abzurufen, ruft eine <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Zone, die einen Katalog erstellt, die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode auf, und der Aufruf gibt nur die Beschreibungs Informationen für das Steuerelement und nicht eine Instanz des Steuer Elements zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode auf einer Webseite verwendet wird. Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die ein <xref:System.Web.UI.WebControls.WebParts.CatalogZone>-Steuerelement und ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement enthält, zusammen mit Code, der die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode verwendet.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält.  
  
-   Eine Erläuterung, wie das Beispiel funktioniert, wenn Sie die Seite in einem Browser laden.  
  
 Der erste Teil dieses Code Beispiels ist das Benutzer Steuerelement, das es Benutzern ermöglicht, Anzeigemodi auf einer Webseite zu ändern. Fügen Sie den folgenden Quellcode in eine Datei ein, und nennen Sie Sie "displaymudemenucs. ascx" oder "displayjudemenuvb. ascx" (je nachdem, welche Sprache Sie verwenden). Ausführliche Informationen zu Anzeigemodi und eine Beschreibung des Quellcodes in diesem Steuerelement finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Der zweite Teil des Code Beispiels ist die Webseite. Am oberen Rand der Seite befinden sich zwei `register` Direktiven, eine für das Benutzer Steuerelement und eine für die kompilierte Komponente, die die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält. Beide Steuerelemente werden deklarativ im Markup der Seite referenziert. Beachten Sie, dass für die deklarativen Verweise auf die <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente (beide mit einem `aspSample` Präfix beginnen), dass jedem ein `exportMode="all"`-Attribut hinzugefügt wurde. Mit diesem Attribut können Sie einen exportieren. Webpart-Beschreibungsdatei für das-Steuerelement, das Sie in einem späteren Schritt verwenden, um das Steuerelement in eine Seite zu importieren.  
  
> [!NOTE]
>  Damit Benutzer einer Webparts Anwendung eine Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente exportieren können, müssen Sie die Exportfunktion in der-Webanwendung auch aktivieren, indem Sie dem `<webParts>`-Element (das ein untergeordnetes Element des `<system.web>`-Elements ist) in der Datei "Web. config" ein `enableExport="true"`-Attribut hinzufügen. Der Export ist standardmäßig deaktiviert. Wenn Sie den Export für Ihre Anwendung noch nicht aktiviert haben, bearbeiten Sie die Datei "Web. config", und führen Sie Sie jetzt aus.  
  
 Die Webseite verfügt auch über einen deklarativen Verweis auf das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement, das in der richtigen Hierarchie der deklarativen Elemente geschachtelt ist. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode wird im Code für die `Button1_Click`-Methode aufgerufen.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Der dritte Teil des Code Beispiels ist der Quellcode für die beiden <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den App_Code Ordner der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird die dynamische Kompilierung verwendet. Eine exemplarische Vorgehensweise, die beide Kompilierungs Methoden veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Führen Sie nun das Codebeispiel aus. Laden Sie die Webseite in einem Browser. Der erste Schritt ist Export a. Webpart-Beschreibungsdatei für jedes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (für die `TextDisplayWebPart` und für das `UserInfoWebPart`-Steuerelement). Klicken Sie für jedes Steuerelement auf das Verbenmenü des Steuer Elements (dargestellt durch den abwärts Pfeil in der Titelleiste), und klicken Sie auf **exportieren**. Befolgen Sie die Anweisungen zum Speichern einer. Webpart-Beschreibungsdatei für das Steuerelement. Nachdem Sie für jedes Steuerelement eine Beschreibungsdatei exportiert haben, schließen Sie die Webseite, und bearbeiten Sie die Seitenquelle in einem Editor. Löschen Sie die `<aspSample:userinfowebpart>` und die Deklarations Elemente des `<aspSample:textdisplaywebpart>` Steuer Elements, speichern Sie die Datei, und schließen Sie Sie. (Sie können diesen Schritt ausführen, um einen Benutzer zu simulieren, der noch nicht über diese Steuerelemente verfügt, sodass Sie die Steuerelemente auf die Seite importieren können.)  
  
 Laden Sie die Webseite erneut in einem Browser. Verwenden Sie das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **catalog** aus, um die Seite in den Katalog Modus zu wechseln. Klicken Sie im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement auf die Schaltfläche **Durchsuchen** , und navigieren Sie zum. Erstellte WebPart-Dateien, wählen Sie eine aus, und klicken Sie dann auf die Schaltfläche **hochladen** . Ein Verweis auf das Steuerelement sollte mit einem Kontrollkästchen daneben angezeigt werden. Aktivieren Sie das Kontrollkästchen, und klicken Sie dann auf **Hinzufügen** , um das Steuerelement der Seite hinzuzufügen. Wiederholen Sie diesen Vorgang für das andere Steuerelement.  
  
 Wenn Sie sich in dieser Ansicht der Seite befinden, klicken Sie am unteren Rand der Seite auf die Schaltfläche **Webpart-Beschreibung** aufrufen, um die Auswirkungen des programmgesteuerten Zugriffs auf das <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Objekt für die Steuerelement Beschreibung anzuzeigen, die derzeit im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement geladen ist. Die Methode, die für den Zugriff auf die Beschreibungs Details verwendet wird, die in der `Button1_Click`-Methode der Seitenquelle enthalten ist, ist die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode. Eine Bezeichnung unterhalb der Schaltfläche zeigt grundlegende Details zum Steuerelement an.  
  
 Nachdem das erste Steuerelement hinzugefügt wurde, wiederholen Sie den Vorgang, um der Seite das zweite Steuerelement hinzuzufügen. Klicken Sie abschließend auf **Schließen** , um den Katalog Modus zu beenden und die Seite in den Suchmodus zurückzukehren. Beide benutzerdefinierten Steuerelemente sollten nun auf der Seite angezeigt werden, die die Werte enthält, die Sie beim Exportieren der Beschreibungsdateien hatten.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />, die Details zum Steuerelement enthält.</param>
        <summary>Gibt auf der Grundlage der an die Methode übergebenen Werte in der Beschreibung einen Verweis auf ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zurück.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, dessen Beschreibung mit den Werten in <paramref name="description" /> übereinstimmt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>-Methode gibt einen Verweis auf ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement zurück, dessen Beschreibungs Details den Werten des <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>-Objekts entsprechen, das an die-Methode übermittelt wird In der Regel wird diese Methode in Verbindung mit der <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>-Methode verwendet, die verwendet wird, um die Beschreibungen der Steuerelemente im Katalog abzurufen. Einzelne <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente können dann nach Bedarf abgerufen oder bearbeitet werden, indem einzelne <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Objekte an die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>-Methode übergeben werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>-Methode auf einer Webseite verwendet wird. Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die ein <xref:System.Web.UI.WebControls.WebParts.CatalogZone>-Steuerelement und ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement enthält, zusammen mit Code, der die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>-Methode verwendet.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält.  
  
-   Eine Erläuterung, wie das Beispiel funktioniert, wenn Sie die Seite in einem Browser laden.  
  
 Der erste Teil dieses Code Beispiels ist das Benutzer Steuerelement, das es Benutzern ermöglicht, Anzeigemodi auf einer Webseite zu ändern. Fügen Sie den folgenden Quellcode in eine Datei ein, und nennen Sie Sie "displaymudemenucs. ascx" oder "displayjudemenuvb. ascx" (je nachdem, welche Sprache Sie verwenden). Ausführliche Informationen zu Anzeigemodi und eine Beschreibung des Quellcodes in diesem Steuerelement finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Der zweite Teil des Code Beispiels ist die Webseite. Am oberen Rand der Seite befinden sich zwei `register` Direktiven, eine für das Benutzer Steuerelement und eine für die kompilierte Komponente, die die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält. Beide Steuerelemente werden deklarativ im Markup der Seite referenziert. Beachten Sie, dass für die deklarativen Verweise auf die <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente (beide mit einem `aspSample` Präfix beginnen), dass jedem ein `exportMode="all"`-Attribut hinzugefügt wurde. Mit diesem Attribut können Sie einen exportieren. Webpart-Beschreibungsdatei für das-Steuerelement, das Sie in einem späteren Schritt verwenden, um das Steuerelement in eine Seite zu importieren.  
  
> [!NOTE]
>  Damit Benutzer einer Webparts Anwendung eine Beschreibungsdatei für <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente exportieren können, müssen Sie die Exportfunktion in der-Webanwendung auch aktivieren, indem Sie dem `<webParts>`-Element (das ein untergeordnetes Element des `<system.web>`-Elements ist) in der Datei "Web. config" ein `enableExport="true"`-Attribut hinzufügen. Der Export ist standardmäßig deaktiviert. Wenn Sie den Export für Ihre Anwendung noch nicht aktiviert haben, bearbeiten Sie die Datei "Web. config", und führen Sie Sie jetzt aus.  
  
 Die Webseite verfügt auch über einen deklarativen Verweis auf das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement, das in der richtigen Hierarchie der deklarativen Elemente geschachtelt ist. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>-Methode wird im Code für die `Button2_Click`-Methode aufgerufen.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Der dritte Teil des Code Beispiels ist der Quellcode für die beiden <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den App_Code Ordner der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird die dynamische Kompilierung verwendet. Eine exemplarische Vorgehensweise, die beide Kompilierungs Methoden veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Führen Sie nun das Codebeispiel aus. Laden Sie die Webseite in einem Browser. Der erste Schritt ist Export a. Webpart-Beschreibungsdatei für jedes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (für die `TextDisplayWebPart` und für das `UserInfoWebPart`-Steuerelement). Klicken Sie für jedes Steuerelement auf das Verbenmenü des Steuer Elements (dargestellt durch den abwärts Pfeil in der Titelleiste), und klicken Sie auf **exportieren**. Befolgen Sie die Anweisungen zum Speichern einer. Webpart-Beschreibungsdatei für das Steuerelement. Nachdem Sie für jedes Steuerelement eine Beschreibungsdatei exportiert haben, schließen Sie die Webseite, und bearbeiten Sie die Seitenquelle in einem Editor. Löschen Sie die `<aspSample:userinfowebpart>` und die Deklarations Elemente des `<aspSample:textdisplaywebpart>` Steuer Elements, speichern Sie die Datei, und schließen Sie Sie. (Sie können diesen Schritt ausführen, um einen Benutzer zu simulieren, der noch nicht über diese Steuerelemente verfügt, sodass Sie die Steuerelemente auf die Seite importieren können.)  
  
 Laden Sie die Webseite erneut in einem Browser. Verwenden Sie das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **catalog** aus, um die Seite in den Katalog Modus zu wechseln. Klicken Sie im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement auf die Schaltfläche **Durchsuchen** , und navigieren Sie zum. Erstellte WebPart-Dateien, wählen Sie eine aus, und klicken Sie dann auf die Schaltfläche **hochladen** . Ein Verweis auf das Steuerelement sollte mit einem Kontrollkästchen daneben angezeigt werden. Nachdem die Beschreibung des Steuer Elements in das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement hochgeladen wurde, klicken Sie unten auf der Seite auf die Schaltfläche **GetWebPart verwenden** . Dadurch wird die Auswirkung des Aufrufs der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>-Methode und die Übergabe an die Steuerelement Beschreibung veranschaulicht, die derzeit im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement geladen ist. Beachten Sie, dass das zugeordnete Server Steuerelement sofort der Webseite hinzugefügt wird, ohne dass der Benutzer auf die Schaltfläche **Hinzufügen** klicken muss. Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>-Methode, die in der `Button2_Click`-Methode der Seitenquelle aufgerufen wird, gibt das <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement zurück, das der aktuellen Beschreibung zugeordnet ist, die im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement geladen wird. Im nächsten Schritt wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>-Methode aufgerufen, und das <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement wird der Seite direkt hinzugefügt. Dadurch wird veranschaulicht, wie ein-Steuerelement ohne Benutzereingriff Programm gesteuert aus dem <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement hinzugefügt wird.  
  
 Nachdem das erste Steuerelement hinzugefügt wurde, wiederholen Sie den Vorgang, um der Seite das zweite Steuerelement hinzuzufügen. Klicken Sie abschließend auf **Schließen** , um den Katalog Modus zu beenden und die Seite in den Suchmodus zurückzukehren. Beide benutzerdefinierten Steuerelemente sollten nun auf der Seite angezeigt werden, die die Werte enthält, die Sie beim Exportieren der Beschreibungsdateien hatten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="description" /> ist kein verfügbarer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />-Wert.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Text ab oder legt Text fest, der nach dem Import einer Beschreibungsdatei angezeigt wird und der das importierte Steuerelement im Katalog der importierten Steuerelemente darstellt oder beschreibt.</summary>
        <value>Eine Zeichenfolge, die den Text der Bezeichnung enthält. Der Standardwert ist eine von .NET Framework bereitgestellte kulturspezifische Meldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>-Eigenschaft wird normalerweise verwendet, um eine kurze allgemeine Bezeichnung zu enthalten, die das im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement enthaltene Steuerelement beschreibt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>-Eigenschaft deklarativ und Programm gesteuert verwendet wird. Den vollständigen Code und die Anweisungen, die zum Ausführen des Beispiels erforderlich sind, finden Sie im Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse.  
  
 Beachten Sie im folgenden Code Abschnitt, dass der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>-Eigenschafts Wert deklarativ für das-Steuerelement festgelegt wird.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Code Abschnitt wird der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>-Eigenschafts Wert Programm gesteuert zugewiesen.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie die Seite in einem Browser laden, können Sie das Steuerelement **Anzeigemodus** -Dropdown Liste verwenden, um den **Katalog Modus** auszuwählen und die Seite in den Katalog Modus zu wechseln. Wenn die Seite im Katalog Modus und die Beschreibungsdatei hochgeladen ist, beachten Sie die verschiedenen Text Zeichenfolgen, die auf der Benutzeroberfläche für das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement angezeigt werden. Wenn Sie auf die Schaltfläche **Beschreibungsdatei hochladen** klicken, wird der Text für einige Eigenschaften in der Benutzeroberfläche geändert, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Fehlermeldung ab, die angezeigt wird, wenn während des Importvorgangs ein Fehler auftritt, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die den Text der Bezeichnung enthält. Der Standardwert ist eine von .NET Framework bereitgestellte kulturspezifische Meldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>-Eigenschaft ist nützlich für die Benachrichtigung eines Benutzers, wenn ein Problem oder Fehler auftritt, während die Seite versucht, eine Beschreibungsdatei zu importieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>-Eigenschaft deklarativ und Programm gesteuert verwendet wird. Den vollständigen Code und die Anweisungen, die zum Ausführen des Beispiels erforderlich sind, finden Sie im Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse.  
  
 Beachten Sie im folgenden Code Abschnitt, dass der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>-Eigenschafts Wert deklarativ für das-Steuerelement festgelegt wird.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Code Abschnitt wird der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>-Eigenschafts Wert Programm gesteuert zugewiesen.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie die Seite in einem Browser laden, können Sie das Steuerelement **Anzeigemodus** -Dropdown Liste verwenden, um den **Katalog Modus** auszuwählen und die Seite in den Katalog Modus zu wechseln. Wenn die Seite im Katalog Modus und die Beschreibungsdatei hochgeladen ist, beachten Sie die verschiedenen Text Zeichenfolgen, die auf der Benutzeroberfläche für das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement angezeigt werden. Wenn Sie auf die Schaltfläche **Beschreibungsdatei hochladen** klicken, wird der Text für einige Eigenschaften in der Benutzeroberfläche geändert, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Titel ab, der in der Titelleiste eines <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />-Steuerelements angezeigt wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die als Titel des Steuerelements verwendet wird. Der Standardwert ist ein vom Webparts-Steuerelementsatz bereitgestellter berechneter Steuerelementname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>-Eigenschafts Wert wird in der Titelleiste eines <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuer Elements angezeigt, wenn das Steuerelement im Katalog Modus sichtbar ist. Wenn das-Steuerelement auf einer Seite deklariert wird, können Sie einen Wert für die-Eigenschaft mit dem `Title`-Attribut festlegen. Wenn Sie keinen Wert für den Titel angeben, wird ein kulturspezifischer Standardwert verwendet, um die Art der Eigenschaften zu beschreiben, die von diesem Steuerelement bearbeitet werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>-Eigenschaft deklarativ und Programm gesteuert verwendet wird. Den vollständigen Code und die Anweisungen, die zum Ausführen des Beispiels erforderlich sind, finden Sie im Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse.  
  
 Beachten Sie im folgenden Code Abschnitt, dass der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>-Eigenschafts Wert deklarativ für das-Steuerelement festgelegt wird.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Code Abschnitt wird der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>-Eigenschafts Wert Programm gesteuert zugewiesen.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie die Seite in einem Browser laden, können Sie das Steuerelement **Anzeigemodus** -Dropdown Liste verwenden, um den **Katalog Modus** auszuwählen und die Seite in den Katalog Modus zu wechseln. Wenn die Seite im Katalog Modus und die Beschreibungsdatei hochgeladen ist, beachten Sie die verschiedenen Text Zeichenfolgen, die auf der Benutzeroberfläche für das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement angezeigt werden. Wenn Sie auf die Schaltfläche **Beschreibungsdatei hochladen** klicken, wird der Text für einige Eigenschaften in der Benutzeroberfläche geändert, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text für das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement ab, das das Hochladen einer Beschreibungsdatei startet, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die als Text für einen <see cref="T:System.Web.UI.WebControls.Button" /> verwendet wird. Der Standardwert ist eine vom Webparts-Steuerelementsatz bereitgestellte kulturspezifische Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>-Eigenschaft stellt den Text für das <xref:System.Web.UI.WebControls.Button> Steuerelement bereit, das den Uploadprozess initiiert. Wenn Sie dieser Eigenschaft benutzerdefinierten Text oder der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>-Eigenschaft zuweisen, sollte der Text deutlich machen, dass der Benutzer eine Beschreibungsdatei hochlädt. Der Text sollte nicht sagen, dass der Uploadvorgang tatsächlich das Steuerelement selbst hochlädt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>-Eigenschaft deklarativ und Programm gesteuert verwendet wird. Den vollständigen Code und die Anweisungen, die zum Ausführen des Beispiels erforderlich sind, finden Sie im Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse.  
  
 Beachten Sie im folgenden Code Abschnitt, dass der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>-Eigenschafts Wert deklarativ für das-Steuerelement festgelegt wird.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Code Abschnitt wird der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>-Eigenschafts Wert Programm gesteuert zugewiesen.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie die Seite in einem Browser laden, können Sie das Steuerelement **Anzeigemodus** -Dropdown Liste verwenden, um den **Katalog Modus** auszuwählen und die Seite in den Katalog Modus zu wechseln. Wenn die Seite im Katalog Modus und die Beschreibungsdatei hochgeladen ist, beachten Sie die verschiedenen Text Zeichenfolgen, die auf der Benutzeroberfläche für das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement angezeigt werden. Wenn Sie auf die Schaltfläche **Beschreibungsdatei hochladen** klicken, wird der Text für einige Eigenschaften in der Benutzeroberfläche geändert, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text der Meldung ab, mit der dem Benutzer das Hochladen einer Beschreibungsdatei erklärt wird, oder legt diesen Text fest.</summary>
        <value>Eine Zeichenfolge, die Anweisungen für den Benutzer zum Hochladen einer Beschreibungsdatei enthält. Der Standardwert ist eine vom Webparts-Steuerelementsatz bereitgestellte kulturspezifische Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>-Eigenschaft stellt einen kurzen Satz oder einen Satz von Anweisungen für Benutzer bereit und teilt Ihnen mit, auf eine Schaltfläche zum Hochladen der Beschreibungsdatei zu klicken. Wenn Sie dieser Eigenschaft benutzerdefinierten Text oder der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>-Eigenschaft zuweisen, sollte der Text deutlich machen, dass der Benutzer eine Beschreibungsdatei hochlädt. Der Text sollte nicht sagen, dass der Uploadvorgang tatsächlich das Steuerelement selbst hochlädt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>-Eigenschaft deklarativ und Programm gesteuert verwendet wird. Den vollständigen Code und die Anweisungen, die zum Ausführen des Beispiels erforderlich sind, finden Sie im Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Klasse.  
  
 Beachten Sie im folgenden Code Abschnitt, dass der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>-Eigenschafts Wert deklarativ für das-Steuerelement festgelegt wird.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 In diesem Code Abschnitt wird der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>-Eigenschafts Wert Programm gesteuert zugewiesen.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Wenn Sie die Seite in einem Browser laden, können Sie das Steuerelement **Anzeigemodus** -Dropdown Liste verwenden, um den **Katalog Modus** auszuwählen und die Seite in den Katalog Modus zu wechseln. Wenn die Seite im Katalog Modus und die Beschreibungsdatei hochgeladen ist, beachten Sie die verschiedenen Text Zeichenfolgen, die auf der Benutzeroberfläche für das <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement angezeigt werden. Wenn Sie auf die Schaltfläche **Beschreibungsdatei hochladen** klicken, wird der Text für einige Eigenschaften in der Benutzeroberfläche geändert, einschließlich des Texts für die <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>
