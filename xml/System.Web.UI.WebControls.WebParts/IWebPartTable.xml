<Type Name="IWebPartTable" FullName="System.Web.UI.WebControls.WebParts.IWebPartTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acaf2a3450e984f608d068e73dae44259d504aab" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51878365" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartTable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartTable" />
  <TypeSignature Language="F#" Value="type IWebPartTable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Anbieterschnittstelle für das Verbinden von zwei Serversteuerelementen mit einer ganzen Tabelle von Daten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle soll mit Webparts-Verbindungen verwendet werden. In einer Webparts-Verbindung zwei Serversteuerelemente in einem <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone Herstellen einer Verbindung und die Freigabe-Daten, mit einem Steuerelement als Consumer fungiert und das andere Steuerelement als Anbieter fungiert. Der Mechanismus zur Freigabe von Daten in einer Webparts-Verbindung ist eine Schnittstelleninstanz, die der Anbieter an den Consumer über eine Rückrufmethode bereitstellt. Um eine Verbindung herzustellen, müssen Consumer und Anbieter sowohl mit dem gleichen Schnittstellentyp arbeiten für die Freigabe von Daten. Wenn der Consumer den Schnittstellentyp, der vom Anbieter nicht erkennt, ist es weiterhin möglich, die Steuerelemente mithilfe eines Transformators verbunden (eine <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt), übersetzt die Schnittstelleninstanz, die vom Anbieter gesendet wird, in einen Typ, der Consumer erkennt. Weitere Informationen zu Verbindungen, finden Sie unter <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> und [Web Parts Verbindungen Overview](https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle ist eine Anbieterschnittstelle, die mit dem Webparts-Steuerelement, das als einer Standardschnittstelle zum Erstellen von Verbindungen, die basierend auf einer Tabelle enthalten. Sie können auch benutzerdefinierte Schnittstellen für die Verwendung mit Webparts-Verbindungen erstellen, aber in vielen Webanwendungen für datengesteuerte, es ist hilfreich, Verbindungen, die basierend auf ein gemeinsames Feld zu erstellen (Weitere Informationen finden Sie unter der <xref:System.Web.UI.WebControls.WebParts.IWebPartField> Schnittstelle), Zeile (Weitere Informationen finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> -Schnittstelle), oder eine Tabelle aus der Datenquelle. In einer typischen-Verbindung eine <xref:System.Web.UI.WebControls.WebParts.WebPart> fungiert steuern, wie ein Anbieter implementiert würde die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle, und stellen Sie eine Instanz der Schnittstelle für Kunden in eine spezielle Rückrufmethode. Beispielsweise der Anbieter implementiert möglicherweise eine <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle für eine Tabelle, die Finanzdaten enthält. Eine andere <xref:System.Web.UI.WebControls.WebParts.WebPart> fungiert steuern, wie ein Consumer eine spezielle Methode zum erhalten der Schnittstelleninstanz, konnte die Daten extrahieren und Rendern eines Diagramms zum Anzeigen der resultierenden Informationen definieren.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle verfügt über zwei verfügbar gemachten Member. Die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> Eigenschaft gibt die Schemainformationen über die Datentabelle, die in den gekapselt ist eine <xref:System.ComponentModel.PropertyDescriptorCollection> Objekt. Die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> Methode deklariert eine Methode, die eine Implementierung (z. B. einem Anbietersteuerelement) verwendet wird, um die Schnittstelleninstanz Tabellendaten abgerufen werden soll, wenn die Callback-Methode aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer statischen Verbindungs zwischen zwei Steuerelementen mithilfe der <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle. Im Codebeispiel besteht aus drei Teilen:  
  
-   Quellcode für zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die eine Verbindung mit bilden, kann die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> -Schnittstelle, ein Steuerelement fungiert als Anbieter und das andere als Consumer fungiert.  
  
-   Eine Webseite, die die Steuerelemente hostet, und die statische Verbindung im seitenpersistenten Format deklariert.  
  
-   Eine Beschreibung dessen, was geschieht, wenn der Beispielcode ausgeführt wird.  
  
 Der erste Teil des Codebeispiels wird der Quellcode für die beiden benutzerdefinierten Steuerelemente. Zunächst wird der Code für den Anbieter implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle. Im Beispiel wird der Einfachheit halber erstellt der Anbieter eine Tabelle mit Daten an, statt eine Verbindung mit einer Datenbank an. Die `GetConnectionInterface` Methode dient als Verbindungspunkt für den Anbieter, die Callback-Methode, die die Schnittstelleninstanz an die Consumer zurückgibt. Der Consumer ruft es die Schnittstelleninstanz vom Anbieter in der Methode, die mit dem Namen `SetConnectionInterface`, die markiert ist, mit einem `ConnectionConsumer` Attribut. Nach dem Abrufen der Instanz der Schnittstelle den Consumer ein, in der `OnPreRender` Methodenaufrufe, die Implementierung der <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> -Methode in der Anbieter auf, um die eigentlichen Daten abzurufen und auf der Seite zu schreiben.  
  
 Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierung. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuerelements](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 Der zweite Teil des Codebeispiels wird die Webseite, die die statische Verbindung und die Hosts die Steuerelemente deklariert. Am oberen Rand der Seite befindet sich eine `Register` -Direktive, die den Namespace des Quellcodes enthalten, die im Verzeichnis "App_Code" deklariert. Die Verbindung wird deklariert, mit einem `<asp:webpartconnection>` Element. In der benutzerdefinierten Consumer- und anbietersteuerelementen deklariert eine `<zonetemplate>` Element innerhalb einer `<asp:webpartzone>` -Element, das für diese Verbindung hergestellt werden muss (Unterverzeichnisstruktur müssen innerhalb einer Zone, die von erbt die <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Klasse).  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 Laden Sie die Seite in einem Browser. Das Consumer-Steuerelement zeigt die Daten aus der angegebenen Tabelle, die der Anbieter durch eine Instanz der verfügbar macht die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Übersicht über Webparts</related>
  </Docs>
  <Members>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTableData(class System.Web.UI.WebControls.WebParts.TableCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTableData (callback As TableCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTableData(System::Web::UI::WebControls::WebParts::TableCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetTableData : System.Web.UI.WebControls.WebParts.TableCallback -&gt; unit" Usage="iWebPartTable.GetTableData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.TableCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Ein <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" />-Delegat, der die Adresse einer Methode enthält, die die Daten empfängt.</param>
        <summary>Gibt die Daten für die Tabelle zurück, die von der Schnittstelle als Basis einer Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um die Tabelle-Datenwerte, die von der Schnittstelle übergebenen abzurufen. Der Anbieter implementiert diese Methode, und der Consumer ruft sie die zum Zeitpunkt der Consumer verarbeitet oder Rendern von Daten bereit ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Implementierung und Verwendung der <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> Methode. Das vollständige Beispiel wird gezeigt, in der Übersicht zur Klasse der <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle. Das Anbietersteuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> Methode, die Daten in der angegebenen Tabelle zurückzugeben. Ruft der Consumer-Steuerelement die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> -Methode in der die `OnPreRender` -Methode, damit der Wert der Daten auf die Seite geschrieben werden kann.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schemainformationen für eine Datentabelle ab, mit deren Hilfe von zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen Daten gemeinsam verwendet werden können.</summary>
        <value>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Daten beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft stellt Informationen bereit, auf die Daten in eine <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Instanz. Es gibt ein implizite Vertrag zwischen dem Schema verwiesen wird, indem die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> -Eigenschaft und die Daten in der Tabelle. Der Vertrag ist, die für die einzelnen <xref:System.ComponentModel.PropertyDescriptor> -Objekt in der <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> -Eigenschaft, die Sie aufrufen können <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> für ein Element in der Tabellendaten, die den Wert in einer Spalte oder eine Zeile der Tabelle zu erhalten.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Implementierung und Verwendung der <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> Eigenschaft. Das vollständige Beispiel wird gezeigt, in der Übersicht zur Klasse der <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Schnittstelle. Das Anbietersteuerelement implementiert die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> Eigenschaft. Klicken Sie dann der Consumer zu steuern, in dessen `RenderContents` -Methode, die Abfragen die <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> Eigenschaft, um Informationen zu der Tabelle abzurufen, wie sie Tabellendaten auf der Seite schreibt.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>