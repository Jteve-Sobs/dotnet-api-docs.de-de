<Type Name="WebPartDisplayMode" FullName="System.Web.UI.WebControls.WebParts.WebPartDisplayMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71473163757ef1835b019610c1624d818534a096" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39888718" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebPartDisplayMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPartDisplayMode extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebPartDisplayMode" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartDisplayMode abstract" />
  <TypeSignature Language="F#" Value="type WebPartDisplayMode = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Standardmenge von Eigenschaften für die verschiedenen Anzeigemodi, die eine Webpartsseite aufweisen kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Webparts-Seite kann mehrere verschiedene Anzeigemodi eingeben. In jeder Anzeigemodus bestimmte Elemente der Webparts-Benutzeroberfläche (UI) werden entweder ausgeblendet oder angezeigte werden, und bestimmte Arten von Änderungen durch den Benutzer zu einer Seite entweder aktiviert oder deaktiviert werden. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement enthält die Implementierung der Anzeigemodi, die in der Webparts-Steuerelement verfügbar sind, und verwaltet die Anzeigemodi für eine Seite.  
  
 Die folgende Tabelle enthält die Felder, die die verfügbaren Anzeigemodi darstellen.  
  
|Anzeigemodus|Beschreibung |  
|------------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|Zeigt von Webparts-Steuerelemente und Elemente der Benutzeroberfläche im normalen Modus, in dem Benutzer eine Seite anzeigen.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|Benutzeroberflächenelemente für die Zone angezeigt und ermöglicht es Benutzern, Webparts-Steuerelemente, um das Layout einer Seite ändern ziehen.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|Zeigt besondere Bearbeitung der UI-Elemente und bietet Endbenutzern die Möglichkeit, die Steuerelemente auf einer Seite bearbeiten.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|Zeigt die besonderen Katalog UI-Elemente und bietet Endbenutzern die Möglichkeit zum Hinzufügen und entfernen die Steuerelemente der Seite.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|Spezielle Verbindungen Elemente der Benutzeroberfläche angezeigt, und ermöglicht Endbenutzern, Webparts-Steuerelementen zu verbinden.|  
  
   
  
## Examples  
 Die folgenden Codebeispiele veranschaulichen die deklarative Verwendung des Anzeigemodus auf einer Webparts-Seite. Jede dieser Anzeigemodi, wie vom Webparts-Steuerelementsatz implementiert, ergibt sich aus der <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Klasse.  
  
 Dieses Codebeispiel besteht aus vier Teilen:  
  
-   Eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement.  
  
-   Eine Webseite mit einer Zone zum Hosten des benutzerdefinierten Steuerelements.  
  
-   Ein Benutzersteuerelement, das Benutzern ermöglicht, die Anzeigemodi auf der Webseite zu ändern.  
  
-   Eine Erklärung der Funktionsweise von der Seite in einem Browser.  
  
 Der erste Teil des Beispiels ist ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement `TextDisplayWebPart`. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Eine Demonstration der beiden Methoden der Kompilierung, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuerelements](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartDisplayMode_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts_WebPartDisplayMode_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/textdisplaywebpart.vb#9)]  
  
 Der zweite Teil des Codebeispiels wird eine Webseite, die ein standardmäßiges ASP <xref:System.Web.UI.WebControls.Calendar> -Steuerelement innerhalb einer `<asp:webpartzone>` Element, damit das Steuerelement umschlossen ist eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement und erhalten Sie grundlegende Funktionalität von Webparts zur Laufzeit. Die Seite verweist auch auf die `TextDisplayWebPart` -Steuerelement innerhalb einer `<asp:catalogzone>` -Element, das veranschaulicht, der Endbenutzer Fähigkeit zum Katalogmodus wechseln und Hinzufügen von Steuerelementen auf der Seite. Die Seite enthält auch eine `<asp:editorzone>` -Element, das Benutzern ermöglicht, die in enthaltenen Steuerelemente Bearbeiten der `<asp:webpartzone>` Wenn sich die Seite im Bearbeitungsmodus befindet. Am oberen Rand der Seite werden eine `register` -Direktive für das benutzerdefinierte Steuerelement und eine andere für das Benutzersteuerelement.  
  
 [!code-aspx-csharp[WebParts_WebPartDisplayMode_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/WebPartDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartDisplayMode_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/WebPartDisplayModevb.aspx#1)]  
  
 Der dritte Teil des Codebeispiels wird ein Benutzersteuerelement, das Benutzern ermöglicht, den Anzeigemodus auf einer Webseite geändert. Speichern Sie den Quellcode für dieses Steuerelement in einer Datei namens DisplayModeMenuCS.ascx oder DisplayModeMenuVB.ascx (je nach Sprache für das Codebeispiel verwendet werden), und platzieren Sie es im gleichen Verzeichnis wie die Webseite. Weitere Informationen zu Modi und eine Beschreibung des Quellcodes in diesem Steuerelement anzuzeigen, finden Sie unter dem Thema [Exemplarische Vorgehensweise: Ändern des Anzeigemodus auf einer Webparts-Seite](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartDisplayMode_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPartDisplayMode_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/displaymodemenuvb.ascx#5)]  
  
 Wenn Sie auf die Seite in einem Browser laden, können Sie die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement so wechseln Sie zu verschiedenen Anzeigemodi. Wählen Sie zum Bearbeiten von Steuerelementen **bearbeiten** im Dropdown-Listenfeld-Steuerelement. Um ein bestimmtes Steuerelement zu bearbeiten, machen Sie dessen Verbenmenü durch Klicken auf den Pfeil in der Titelleiste des Steuerelements, und klicken Sie dann auf **bearbeiten** im Verbmenü. Wenn ein Steuerelement im Bearbeitungsmodus befindet, können die Bearbeitung der Steuerelemente auf dieser Seite hinzugefügt Sie so ändern Sie die Darstellung und das Layout des Steuerelements bearbeitet. Wenn Sie fertig sind, wählen Sie **Durchsuchen** in die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement auf der Seite zu einer normalen Ansicht zurückzukehren. Wechseln Sie zum Hinzufügen von Steuerelementen auf der Seite in den Katalogmodus. Beachten Sie, dass Sie entweder mithilfe können der **Anzeigemodus** Dropdown-Listensteuerelement, oder klicken Sie auf die Schaltfläche am unteren Rand der Seite. Der Inlinecode für die `Button1_Click` Methode demonstriert, wie die Anzeigemodi programmgesteuert zu ändern. Während Sie im Katalogmodus befinden, können Sie die benutzerdefinierte hinzufügen `TextDisplayWebPart` Steuerelement auf der Seite.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Entwickler können eine Ableitung von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> Klasse zur Erstellung benutzerdefinierter Anzeigemodi. Zu einem benutzerdefinierten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> verfügbar, auf einer Webparts-Seite, außerdem müssten Sie für die Ableitung der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse, und überschreiben seine <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" /> Methode.</para>
    </block>
    <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPartDisplayMode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebPartDisplayMode(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.WebPartDisplayMode : string -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="new System.Web.UI.WebControls.WebParts.WebPartDisplayMode name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Anzeigemodus.</param>
        <summary>Initialisiert einen Wert für den Namen des Anzeigemodus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Objekt wird nicht erstellt werden, da die Klasse abstrakt ist. Zur Laufzeit die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> -Klasse wie Objekte von die Basisklasse zum Erstellen für jeden Anzeigemodus der Seite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Bei der Ableitung von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> -Klasse zum Erstellen eines benutzerdefinierten Anzeigemodus in der Klassendeklaration, Sie müssen den Basiskonstruktor aufrufen und eine Zeichenfolge, die mit dem Namen des benutzerdefinierten Anzeigemodus an die Klasse weitergeben.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AllowPageDesign">
      <MemberSignature Language="C#" Value="public virtual bool AllowPageDesign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPageDesign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowPageDesign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPageDesign { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPageDesign : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob Benutzer das Layout einer Webpartsseite ändern können, wenn sich die Seite in einem bestimmten Anzeigemodus befindet.</summary>
        <value>
          <see langword="true" />, wenn Benutzer das Seitenlayout ändern können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedWithToolZone">
      <MemberSignature Language="C#" Value="public virtual bool AssociatedWithToolZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssociatedWithToolZone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociatedWithToolZone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AssociatedWithToolZone { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedWithToolZone : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein bestimmter Anzeigemodus einer Klasse zugeordnet ist, die von der <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />-Klasse abgeleitet ist.</summary>
        <value>
          <see langword="true" />, wenn der Anzeigemodus einer <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />-Klasse zugeordnet ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Webparts-Seite einen Anzeigemodus eingibt, deren <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement interpretiert, um das bedeutet, dass eine zugeordnete Klasse abgeleitet der <xref:System.Web.UI.WebControls.WebParts.ToolZone> -Klasse, und diese zusätzlichen Elemente der Benutzeroberfläche (UI) angezeigt werden müssen. Z. B. wenn eine Seite den Bearbeitungsmodus wechselt, spezielle Zonen, die Elemente der Benutzeroberfläche für die Bearbeitung von Webparts-Steuerelemente enthalten auf der Seite angezeigt. Dieses Verhalten ist möglich, da die <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone%2A> Eigenschaftswert auf die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> Feld nastaven NA hodnotu `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Abgeleitete Klassen die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> Basisklasse zum Erstellen benutzerdefinierter Anzeigemodi muss überschreiben die <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone" /> Eigenschaft, um den Wert festzulegen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsEnabled (System.Web.UI.WebControls.WebParts.WebPartManager webPartManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled(class System.Web.UI.WebControls.WebParts.WebPartManager webPartManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEnabled(System::Web::UI::WebControls::WebParts::WebPartManager ^ webPartManager);" />
      <MemberSignature Language="F#" Value="abstract member IsEnabled : System.Web.UI.WebControls.WebParts.WebPartManager -&gt; bool&#xA;override this.IsEnabled : System.Web.UI.WebControls.WebParts.WebPartManager -&gt; bool" Usage="webPartDisplayMode.IsEnabled webPartManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartManager" Type="System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Parameters>
      <Docs>
        <param name="webPartManager">Die Instanz des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements auf der aktuellen Seite.</param>
        <summary>Ruft einen Wert ab, der angibt, ob Benutzer eine Seite personalisieren können, wenn sich die Seite in einem bestimmten Anzeigemodus befindet.</summary>
        <returns>
          <see langword="true" />, wenn Benutzer eine Seite personalisieren können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />. Wenn <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" /> jedoch auf <see langword="true" /> festgelegt und die Personalisierung für die Seite deaktiviert ist, lautet der Standardwert <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen eines Anzeigemodus ab.</summary>
        <value>Eine Zeichenfolge, die den Namen eines Anzeigemodus enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPersonalization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPersonalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPersonalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPersonalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPersonalization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresPersonalization : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für einen bestimmten Anzeigemodus die Personalisierung aktiviert sein muss.</summary>
        <value>Ein boolescher Wert, der angibt, ob die Personalisierung erforderlich ist. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHiddenWebParts">
      <MemberSignature Language="C#" Value="public virtual bool ShowHiddenWebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHiddenWebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShowHiddenWebParts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHiddenWebParts { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowHiddenWebParts : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Steuerelemente angezeigt werden sollen, deren <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</summary>
        <value>Ein boolescher Wert, der angibt, ob ausgeblendete Steuerelemente angezeigt werden sollen. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>