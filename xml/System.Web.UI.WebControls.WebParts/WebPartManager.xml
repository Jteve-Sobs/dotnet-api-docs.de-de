<Type Name="WebPartManager" FullName="System.Web.UI.WebControls.WebParts.WebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12a7c1ff38a277e42323274abbbbe463ee23012b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55382580" /></Metadata><TypeSignature Language="C#" Value="public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartManager extends System.Web.UI.Control implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartManager&#xA;Inherits Control&#xA;Implements INamingContainer, IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartManager : System::Web::UI::Control, System::Web::UI::INamingContainer, System::Web::UI::WebControls::WebParts::IPersonalizable" />
  <TypeSignature Language="F#" Value="type WebPartManager = class&#xA;    inherit Control&#xA;    interface INamingContainer&#xA;    interface IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IPersonalizable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ViewStateModeById</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als zentrale Klasse des Webparts-Steuerelementsatzes und verwaltet alle Webparts-Steuerelemente, -Funktionen und -Ereignisse, die auf einer Webseite auftreten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement dient als Hub oder Mittelpunkt eines Webparts-Anwendungen. Ist ein – und nur ein –<xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelementinstanz auf jeder Seite, die Webparts-Steuerelementen verwendet. Wie bei der meisten Aspekte des Webparts-Anwendungen, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement funktioniert nur mit authentifizierten Benutzern. Darüber hinaus ihre Funktionalität arbeitet fast ausschließlich mit Serversteuerelemente, die innerhalb der Webparts-Zonen, die befinden von erben die <xref:System.Web.UI.WebControls.WebParts.WebZone> Klasse. Serversteuerelemente, die auf einer Seite außerhalb dieser Zonen befinden sich haben, nur sehr wenig Webparts-Funktionen oder die Interaktion mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement.  
  
 Als Hub für Webparts-Funktionen auf einer Seite die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement führt die Arten von Aufgaben, die in der folgenden Tabelle beschrieben.  
  
|Aufgabenkategorie|Was bewirkt, dass das Steuerelement|  
|-------------------|---------------------------|  
|Nachverfolgen von Webparts-Steuerelemente|Behält den Überblick der viele verschiedenen Arten von Steuerelementen auf einer Seite, die Webparts-Funktionen, einschließlich bereitstellen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, Verbindungen, Zonen und andere.|  
|Hinzufügen und Entfernen von Webparts-Steuerelemente|Bietet Methoden zum Hinzufügen, löschen, und Schließen von <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente auf einer Seite.|  
|Verwalten von Verbindungen|Verbindungen zwischen Steuerelementen erstellt und überwacht die Verbindungen als auch die Prozesse des hinzufügen und entfernen sie.|  
|Personalisieren von Steuerelementen und Seiten|Ermöglicht es Benutzern, die Steuerelemente auf einer Seite an unterschiedliche Positionen verschieben, und startet die Ansichten, in denen Benutzer die Darstellung, Eigenschaften und Verhalten von Steuerelementen bearbeiten können. Verwaltet benutzerspezifische personalisierungseinstellungen auf jeder Seite ein.|  
|Beim Umschalten zwischen verschiedenen Seitenaufrufe|Wechselt zwischen verschiedenen spezieller Ansichten von der Seite, damit Benutzer bestimmte Aufgaben wie das Ändern des Seitenlayouts oder zum Bearbeiten von Steuerelementen ausführen können.|  
|Auslösen von Ereignissen der Webparts-Lebenszyklus|Definiert, löst Sie aus und ermöglicht es Entwicklern, behandeln Ereignisse des Lebenszyklus des Webparts-Steuerelemente, z. B. wenn Steuerelemente, verschoben, gelöscht oder verbundene hinzugefügt werden.|  
|Importieren und Exportieren von Steuerelementen|Exportiert die XML-Streams, der den Zustand der Eigenschaften des enthalten <xref:System.Web.UI.WebControls.WebParts.WebPart> steuert und ermöglicht das Importieren der Dateien zum Personalisieren von komplexe Steuerelemente in andere Webseiten oder Websites.|  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Klasse verfügt über einen großen Satz von Eigenschaften. Das sortierflag der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Rolle der nachverfolgung von anderen Steuerelementen, gibt es eine Reihe von Eigenschaften, die auf Sammlungen des Webparts-Steuerelemente oder andere spezielle Webparts-Objekte verweisen. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> Eigenschaften sind vom verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement zum Nachverfolgen und für andere Verwaltungsaufgaben.  
  
 Eine andere Gruppe von Eigenschaften enthält, anpassbare Warnungen, die in bestimmten Szenarien angewendet werden, die in einer Webparts-Anwendung auftreten. Dazu gehören die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>, und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> Eigenschaften.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse überschreibt einige Basis geerbten Eigenschaften, die von vielen Webserver-Steuerelemente verwendet werden. Dazu gehören die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> Eigenschaften.  
  
 Abschließend ist eine Gruppe von Eigenschaften für den Zugriff auf den aktuellen Zustand der Anwendung nützlich. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> Eigenschaft gibt an, die eine Seite im aktuellen Anzeigemodus. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> Eigenschaft angibt, ob ein Steuerelement zum Rendern von Client-seitige Skript, handelt es sich in Situationen relevant, in denen Benutzer möglicherweise Browsern mit unterschiedlichen Funktionen oder Skripterstellung deaktiviert. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Eigenschaft ist nützlich zum Verweisen auf eine Hilfsklasse, die die Aufrufe an eine Reihe von wichtigen Webparts-Methoden enthält, die für die Erweiterbarkeit verwendet werden. Durch das Ausblenden der Aufrufe an diese Methoden in einer separaten Klasse (die <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> Klasse), wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> des Klasse-API-wurde vereinfacht. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Eigenschaft bietet Zugriff auf die personalisierungsobjekte, die benutzereinstellungen für die Personalisierung speichern und diese Daten in einen dauerhaften Speicher beibehalten. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Eigenschaft gibt an, welche <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement auf einer Seite durch den Benutzer oder die Anwendung derzeit ausgewählt ist. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Eigenschaft gibt an, ob benutzerdefinierte Personalisierungsdaten für eine <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelements geändert hat.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement enthält fünf integrierte Anzeigemodi oder Sichten einer Webseite. Entwickler können diese Funktion, erweitern erstellen benutzerdefinierte Anzeigemodi durch Erweiterung Typen wie z. B. die <xref:System.Web.UI.WebControls.WebParts.WebZone> Klasse oder die <xref:System.Web.UI.WebControls.WebParts.ToolZone> Klasse. Benutzer können in die verschiedenen Anzeigemodi, eine Seite wechseln, vorausgesetzt, dass die richtige Art von Steuerelementen, die den angegebenen Anzeigemodus wechselt entsprechen, die auf einer Seite vorhanden sind.  
  
> [!NOTE]
>  Es ist möglich, diese Funktion zu erweitern, sodass Benutzer in einem benutzerdefinierten Anzeigemodus wechseln können, ohne eine entsprechende Zone auf der Seite. Allerdings ist das Standardverhalten, dass Anzeigemodi Zonen entsprechen.  
  
 Die standardmäßige Anzeigemodi dargestellt durch öffentliche Felder in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse. Die folgende Tabelle fasst zusammen, die Felder und die Anzeigemodi, die auf die sie verweisen. Der aktuellen Anzeigemodus einer Seite, wie bereits erwähnt, ist immer auf die verwiesen wird der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> Eigenschaft und den Satz von Anzeigemodi, die auf einer bestimmten Seite, erhalten die Art der Zonen, die auf der Seite vorhanden sind, möglich ist Bestandteil der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft.  
  
|Feld|Details zu Anzeigemodi|  
|-----------|--------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|Die Ansicht, normaler Benutzer einer Webseite. der standardmäßige und am häufigsten verwendeten Anzeigemodus befindet.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|Die Ansicht, in der Benutzer neu anordnen oder löschen die Steuerelemente, um das Seitenlayout ändern können.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|Die Ansicht, in der eine Bearbeitung Benutzeroberfläche (UI) angezeigt wird. Benutzer können bearbeiten, die Darstellung, Eigenschaften und Verhalten der Steuerelemente, die in den normalen Durchsuchen-Modus sichtbar sind.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|Die Ansicht in der ein Katalog-Benutzeroberfläche angezeigt wird. Benutzer können Steuerelemente aus der verfügbaren Steuerelemente-Katalogen zu einer Seite hinzufügen.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|Die Ansicht, in der eine Benutzeroberfläche für Verbindungen angezeigt wird. Benutzer können eine Verbindung herstellen, verwalten oder trennt die Verbindungen zwischen Steuerelementen.|  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement enthält auch eine Reihe von Ereignissen, die in den Lebenszyklus der Webparts-Seiten und Steuerelemente von entscheidender Bedeutung sind. Diese Ereignisse bieten präzise programmgesteuerte Kontrolle über das Verhalten des Webparts-Steuerelemente. Die meisten Methoden direkt betreffen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente (oder andere Server- bzw. Benutzersteuerelementen, die in befinden <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen, damit sie als fungieren können <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente). Allerdings gehören einige Ereignisse in den Zustand der Seite oder Verbindungen auf der Seite ein. In der folgende Tabelle sind die verfügbaren Ereignisse und Informationen von ihren Zweck.  
  
> [!NOTE]
>  Der Begriff "Steuerelement" in allen Fällen in der folgenden Tabelle bezieht sich auf eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement oder ein Serversteuerelement, die in einer Zone befindet und von umschlossen ist eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt zur Laufzeit.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|Tritt auf, unmittelbar vor dem Hinzufügen ein Steuerelements zu einer Seite, um sicherzustellen, dass sie autorisiert sind.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|Tritt auf, nachdem alle Verbindungen auf einer Seite aktiviert wurden.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|Tritt direkt vor den Prozess des Aktivierens alle Verbindungen auf einer Seite.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|Tritt auf, nachdem der aktuelle Anzeigemodus einer Seite geändert wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|Tritt auf, unmittelbar bevor der Anzeigemodus einer Seite ändern.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|Tritt auf, nachdem die Auswahl eines Steuerelements abgebrochen wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|Tritt auf, unmittelbar bevor der Aufheben der Auswahl eines Steuerelements.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|Tritt auf, nachdem ein Steuerelement zu einer Zone hinzugefügt wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|Tritt unmittelbar vor dem Hinzufügen eines Steuerelements zu einer Zone.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|Tritt auf, nachdem ein Steuerelement (von einer Seite entfernt) geschlossen wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|Tritt auf, unmittelbar bevor ein Steuerelement geschlossen.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|Tritt auf, nachdem eine Instanz von einem dynamischen Steuerelement (eine, die programmgesteuert erstellt oder aus einem Katalog hinzugefügt wurde) dauerhaft gelöscht wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|Tritt unmittelbar vor dem des Löschvorgangs für eines dynamischen Steuerelements.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|Tritt auf, nachdem ein Steuerelement innerhalb einer Zone oder in eine andere Zone verschoben wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|Tritt unmittelbar vor dem der Prozess der Verschiebung eines Steuerelements.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|Tritt auf, nachdem zwei Steuerelemente, die ausgewählt werden, für die Teilnahme an einer Verbindung die Verbindung hergestellt haben.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|Tritt unmittelbar vor dem der Prozess der verbindungsherstellung von zwei Steuerelementen.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|Tritt nach dem zwei verbundene Steuerelemente getrennt wurden.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|Tritt direkt vor den Prozess des Trennens von zwei Steuerelementen.|  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verfügt über zahlreiche Methoden zum Verwalten von Webparts-Seiten. Ein breites Spektrum an die Methoden, die hier nicht aufgeführt sind, deren Namen haben die Form auf, Methoden*EventName*. Diese Methoden in der Regel ihre zugeordnete Ereignis ausgelöst, und geben Sie das Ereignis mit einem Handler des Typs <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>. Die meisten dieser Methoden können von Entwicklern, die von erben überschrieben werden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse. Darüber hinaus können Entwickler von Seiten benutzerdefinierte Handler für die Ereignisse im Zusammenhang mit diesen Methoden bereitstellen. Z. B. im Fall von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Ereignis Seitenentwickler kann hinzufügen eine `OnWebPartAdded` -Attribut auf die `<asp:webpartmanager>` Element im Markup einer Webseite, und weisen Sie anschließend eine benutzerdefinierte Methode Namen für das Attribut benutzerdefinierte Behandlung für das Ereignis bereitzustellen. Das Attribut entspricht der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> -Methode, und dieses grundlegende Muster gilt für die meisten Webparts-Ereignisse und ihren zugeordneten Methoden für die Ereignisbehandlung.  
  
 Darüber hinaus die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verfügt über spezielle Methoden, um die Aufgabe der Verwaltung <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente (und Server- bzw. Benutzersteuerelementen als <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente). Dazu gehören das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.  
  
 Eine andere Gruppe von Methoden wird für Verbindungen spezialisiert. Dazu gehören Methoden wie z. B. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.  
  
 Schließlich einige <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Methoden Funktionen zur Personalisierung zu konzentrieren. Dies waren <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.  
  
 Weitere Informationen zu anderen <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Methoden, die über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> -Eigenschaft finden Sie in der Dokumentation für die <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die deklarative und die programmgesteuerte Verwendung von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden können, und ein `<asp:webpartmanager>` Element.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente und eine benutzerdefinierte Schnittstelle.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Das Steuerelement verfügt über ein Dropdown-Listenfeld-Steuerelement, das zeigt die möglichen Anzeigemodi auf einer Seite angegebenen Webparts-Steuerelemente, die auf der Seite vorhanden sind. In der Webseite für die in diesem Codebeispiel wird dieses Benutzersteuerelement deklariert wird, direkt unterhalb der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Element im Markup der Seite, und es gibt eine `Register` Direktive am oberen Rand der Webseite zur Registrierung des Steuerelements. Weitere Informationen zu Modi und eine Beschreibung des Quellcodes in diesem Steuerelement anzuzeigen, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/DisplayModeMenuVB.ascx#6)]  
  
 Das deklarative Markup für die Webseite enthält `Register` -Direktiven für das Benutzersteuerelement und die benutzerdefinierten Steuerelemente. Gibt es eine `<asp:webpartmanager>` -Element, ein `<asp:webpartzone>` Element, in die benutzerdefinierten Steuerelemente, und ein `<asp:connectionszone>` Element. Die Seite enthält außerdem einen Inlinecode, der Verbindung bezogene Ereignisse für behandelt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern; Sie sehen das Ergebnis dieses Codes, wie Sie eine Verbindung herstellen und Trennen von Steuerelementen.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Der dritte Teil des Beispiels wird der Quellcode für die Steuerelemente. Beachten Sie, dass eine Schnittstelle, die mit dem Namen `IZipCode`, und diese Schnittstelle wird implementiert, der `ZipCodeWebPart` Klasse. Diese Klasse verfügt über eine spezielle Rückrufmethode, die mit dem Namen `ProvideIZipCode` , das als Anbieter fungiert. Der andere Typ, der mit dem Namen `WeatherWebPart`, ist auch eine besondere Methode, die mit dem Namen implementiert `GetIZipCode`, wodurch das Steuerelement, das als Consumer von der anderer Steuerelemente fungiert.  
  
 Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird davon ausgegangen, dass Sie die Quelle in eine Assembly kompiliert haben und die `Register` Richtlinie auf der Webseite verweist auf den Assemblynamen. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/ZipCodeComponent.vb#2)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf die **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Connect** Verbinden-Modus zu wechseln. Connect-Modus verwendet die `<asp:connectionszone>` Element, um Verbindungen zwischen Steuerelementen erstellen können. Im Modus verbinden, klicken Sie auf den Pfeil nach unten, in der Titelleiste des Fensters der **Postleitzahl** steuern, um dessen Verbenmenü zu aktivieren, und klicken Sie dann auf **Connect**. Nachdem Sie die Benutzeroberfläche für Verbindungen angezeigt wird, klicken Sie auf die **erstellen Sie eine Verbindung mit einem Consumer** Link. Eine Zelle angezeigt wird, die ein Dropdown-Listenfeld-Steuerelement. Wählen Sie **Weather Control** im Dropdown-Liste, und klicken Sie dann auf **Connect** zum Herstellen die Verbindung der beiden Steuerelemente. Klicken Sie auf **schließen**, und verwenden Sie dann die **Anzeigemodus** Dropdown-Liste in den normalen Durchsuchen-Modus zurück. Sie können eine Postleitzahl eingeben, und die Consumer-Steuerelement mit dem eingegebenen Wert aktualisiert werden. Da die `ZipCode` mit gekennzeichnet wurde die `Personalizable` über Browsersitzungen-Attribut in den Quellcode, der Wert dieser Eigenschaft beibehalten wird, speichern daher den Wert von einem Benutzer eingegeben. Ein komplexere Consumersteuerelement konnte die Postleitzahl Informationen, Wetterdaten basierend auf dem Code und zu einem Benutzer anzuzeigen.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement erweitert werden soll. Da es handelt sich vom zentralen zum Webparts-Anwendungen, wenn Sie bestimmten Typs zu erweitern oder in der Webparts-Steuerelementsatz, in vielen Fällen steuern Sie möchten auch erweitern, muss die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse, da es wahrscheinlich eine Methode, die erforderlich ist ist, damit mindestens eine Eigenschaft  der benutzerdefinierte Typ Arbeit im Kontext einer Webparts-Anwendung. Referenzdokumentation für die Webparts (finden Sie unter <see cref="N:System.Web.UI.WebControls.WebParts" />), wenn erörtert, wie Sie die Erweiterung eines Webparts eingeben, häufig erwähnungen Was muss erfolgen, um das Erweitern der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse auch, oder sehen Sie, wie es in einem Codebeispiel.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.%23ctor%2A> Konstruktor initialisiert die mehrere wichtige Variablen ein, die die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Eine Zuweisung, die direkt auf alle Webparts-Seiten auswirkt, ist die Tatsache, die der Standard-Seite-Anzeigemodus festgelegt ist, auf die Durchsuchen-Modus (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateConnections">
      <MemberSignature Language="C#" Value="protected virtual void ActivateConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ActivateConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ActivateConnections ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ActivateConnections();" />
      <MemberSignature Language="F#" Value="abstract member ActivateConnections : unit -&gt; unit&#xA;override this.ActivateConnections : unit -&gt; unit" Usage="webPartManager.ActivateConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktiviert alle derzeit inaktiven Verbindungen auf einer Webseite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Methode wird aufgerufen, bei jeder Anforderung an eine Seite zum Aktivieren der vorhandener Verbindungen zwischen <xref:System.Web.UI.WebControls.WebParts.WebPart> und anderen Serversteuerelementen in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen. In einigen Fällen für die Instanz, wenn es liegt ein Konflikt bei den Verbindungen aktiviert wurde, wird diese Methode wiederum ruft die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Methode, um den problematischen Verbindung zu beenden. Bei der Trennung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis wird ausgelöst. Entwickler können dieses Ereignis normalerweise abbrechen, aber in die Groß-/Kleinschreibung, dies ein Konflikt zwischen den Verbindungen, es kann nicht abgebrochen werden, ist da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement muss den Konflikt zu lösen, um den Prozess des Aktivierens Verbindungen abzuschließen. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPart AddWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPart ^ AddWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="member this.AddWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.AddWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Der <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (bzw. das Server- oder Benutzersteuerelement), der einer Webseite hinzugefügt oder auf einer Seite geöffnet werden soll.</param>
        <param name="zone">Die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />, der <paramref name="webPart" /> hinzugefügt wird.</param>
        <param name="zoneIndex">Eine ganze Zahl, die die Ordinalposition darstellt, an der sich <paramref name="webPart" /> in <paramref name="zone" /> im Verhältnis zu anderen Steuerelementen in <paramref name="zone" /> befindet.</param>
        <summary>Stellt die programmgesteuerte Standardmethode zum Hinzufügen von <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen auf einer Webseite bereit.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, das der Seite hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> Methode wird verwendet, sowohl die hinzuzufügende neue dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente zu einer Seite, und um statische oder dynamische Steuerelemente, die zuvor auf einer Seite geschlossen wurden, erneut zu öffnen. Wenn die Methode aufgerufen wird, um ein neues Steuerelement hinzuzufügen, erstellt es tatsächlich eine Kopie des Steuerelements auf die verwiesen wird der `webPart` Parameter. Wird für die Kopie des Steuerelements eine neue ID generiert, damit Entwickler verweisen soll die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerung zurückgegeben wird, von der Methode, um den neuen ID-Wert zu erhalten. Wenn die Methode aufgerufen wird, um ein zuvor geschlossenen Steuerelement erneut zu öffnen, gibt es einen direkten Verweis auf das Steuerelement verweist die `webPart` Parameter.  
  
> [!IMPORTANT]
>  Verwenden Sie immer die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> -Methode anstelle der <xref:System.Web.UI.ControlCollection.Add%2A> -Methode der Auflistung von Steuerelementen, die auf die verwiesen wird durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=nameWithType> Eigenschaft verwenden, um das Hinzufügen <xref:System.Web.UI.WebControls.WebParts.WebPart> steuert Sie programmgesteuert auf der Seite, da die <xref:System.Web.UI.ControlCollection.Add%2A> Methode löst eine Ausnahme aus. Hinzufügen des Steuerelements, das nicht ist eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (also ein Serversteuerelement, das mit umschlossen wird eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement zur Laufzeit), sollten Sie zuerst Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> Methode zum Erstellen des Steuerelements, und rufen Sie dann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> Methode hinzufügen das Steuerelement. Eine Demonstration dieses Ansatzes finden Sie im Beispielabschnitt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> Methode, um ein Steuerelement programmgesteuert zu einer Seite hinzufügen. Im Markup der Seite enthält eine leere `<asp:webpartzone>` -Element, und ein `<asp:webpartmanager>` Element. Beim ersten die **Kalender hinzufügen** Schaltfläche geklickt wird, den Code im Ereignis Ereignishandler erstellt ein <xref:System.Web.UI.WebControls.Calendar> steuern, und fügt es einer Zone als ein <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> Methode.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="zone" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="zone" /> wird nicht in der Auflistung der Zonen des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements registriert.  
  
- oder - 
 <paramref name="webPart" /> befindet sich bereits in <paramref name="zone" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert von <paramref name="zoneIndex" /> beträgt weniger als 0 (null).</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeWebPart">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeWebPart As WebPartAuthorizationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventHandler ^ AuthorizeWebPart;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " Usage="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />-Methode aufgerufen wird, um zu bestimmen, ob einer Seite ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement hinzugefügt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignis tritt auf, wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement einer Seite hinzugefügt wird. Es gibt eine Reihe häufiger Szenarios, in denen ein Steuerelement zu einer Seite hinzugefügt werden kann. Eine vollständige Beschreibung dieser finden Sie im Abschnitt "Hinweise", für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Methode. Wenn ein Steuerelement hinzugefügt wird, muss überprüft werden, finden, ob die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> -Eigenschaft festgelegt wurde, und, wenn dies der Fall ist, gibt an, ob das Steuerelement ist autorisiert, auf der Seite hinzugefügt werden.  
  
 Entwickler können Erstellen von Ereignishandlern für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignis, um das Filtern für Steuerelemente bereitzustellen. Wenn eines Steuerelements <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftswert erfüllt nicht die Kriterien in den Ereignishandlercode, wird nicht das Steuerelement auf der Seite hinzugefügt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht die legen Sie eines benutzerdefinierten ereignishandlers für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> -Ereignis, das standardmäßig automatisch überschreibt <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Methode.  
  
 Der Code in die `mgr1_AuthorizeWebPart` Methode überprüft, ob die Steuerelemente auf der Seite den jeweiligen enthalten <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftswerte festzulegen, um `user` und gibt zurück, wenn dies der Fall ist, `true`, was bedeutet, dass sie autorisiert und zur Seite hinzugefügt werden. Dies setzt voraus, dass die Standardansatz besteht darin, Benutzer Steuerelemente mit einer Seite im Benutzerpersonalisierungsbereich anzeigen können. Beachten Sie jedoch, dass im Beispiel eines der Steuerelemente hat seine <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> -Eigenschaftswert festgelegt wird, um `admin`. Entwickler können diesen Filter für ein spezielles Steuerelement platzieren, die für den nur Administratoren finden Sie unter entwickelt wurde. Dieses Steuerelement fehl, die autorisierungsprüfung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignis und kann nicht angezeigt werden. Beachten Sie, dass Steuerelemente, die keine für die Eigenschaft festgelegt und angezeigt werden. Sie wird angenommen, dass nicht Teil des Filterszenario da ihre <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> -Eigenschaft nicht festgelegt wurde.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="AvailableTransformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableTransformers As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ AvailableTransformers { System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableTransformers : System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Objekten ab, die zum Erstellen von Webparts-Verbindungen zwischen Serversteuerelementen zur Verfügung stehen.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" />, die einen Satz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Objekten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> Methode, um die Sammlung zu erstellen. Standardmäßig wird die verfügbaren Transformatoren aus der Konfigurationsdatei gelesen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Übersicht über Webparts</related>
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartConnecting(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartConnecting(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartConnecting webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das Steuerelement, für das die Verbindung gebildet wird.</param>
        <summary>Startet den Prozess, mit dem zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente miteinander verbunden werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> Methode vorhanden ist, damit der Prozess zum Erstellen von Verbindungen zwischen Steuerelementen in mehreren Stufen, so erhalten Entwickler mehr Kontrolle über den Verbindungsprozess ausgeführt werden kann. Die Methode führt eine Reihe von anfängliche Überprüfungen, um sicherzustellen, dass `webPart` befindet sich in einem Zustand, in dem eine Verbindung legitim gebildet werden kann. Wenn `webPart` übergibt alle Überprüfungen, sie werden dann als das momentan ausgewählte Steuerelement festgelegt (finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Eigenschaft), und die verbindende Prozess kann fortgesetzt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der aktuelle Anzeigemodus auf der Seite lautet nicht <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="webPart" /> ist geschlossen.  
  
- oder - 
 <paramref name="webPart" /> gehört nicht der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung an.  
  
- oder -  
 <paramref name="webPart" /> ist identisch mit dem <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Entwickler, die zum Erweitern der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement möglicherweise für diese Methode in einer abgeleiteten Klasse außer Kraft setzen möchten. Eine bestünde Herangehensweise die Basismethode aufrufen, und klicken Sie dann Hinzufügen einer weiteren benutzerdefinierten Verarbeitung; oder möglicherweise möchten den Prozess gestartet wird, eine Verbindung zwischen Steuerelementen vollständig anpassen. Beispielsweise empfiehlt es sich um sicherzustellen, dass bestimmte Daten verfügbar sind, bevor Sie die Verbindung zu erstellen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartEditing(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartEditing(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartEditing webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das zu bearbeitende Steuerelement.</param>
        <summary>Startet den Prozess der Bearbeitung eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Methode vorhanden ist, damit der Prozess der Bearbeitung von Steuerelementen in mehreren Stufen, sodass Entwickler mehr Kontrolle über den Prozess ausgeführt werden kann. Die Methode führt eine Reihe von anfängliche Überprüfungen, um sicherzustellen, dass `webPart` befindet sich in einem Zustand, in denen sie bearbeitet werden kann. Wenn `webPart` übergibt alle Überprüfungen, sie werden dann als das momentan ausgewählte Steuerelement festgelegt (finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Eigenschaft), und der Bearbeitung fortfahren kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der aktuelle Anzeigemodus auf der Seite lautet nicht <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="webPart" /> ist geschlossen.  
  
- oder - 
 <paramref name="webPart" /> gehört nicht der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung an.  
  
- oder -  
 <paramref name="webPart" /> ist identisch mit dem <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Steuerelement.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrowseDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ BrowseDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrowseDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Standardanzeigemodus für Seiten dar, die Webparts-Steuerelemente enthalten. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Feld verweist auf eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> -Objekt, das erstellt und enthalten die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Da dies ein statisches Objekt ist, sehen Sie sich diese direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse ohne eine Instanz des Steuerelements.  
  
 Wenn eine Seite mit Webparts-zuerst geladen Steuerelemente, es befindet sich im <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (Durchsuchen-Modus) in der Standardeinstellung. Wenn Benutzer genauso wie in einer normalen Webseite einfach durchsuchen, bleibt die Seite im Durchsuchen-Modus. Benutzer Layout, Steuerelementen, Darstellung oder Verhalten einer Seite personalisieren können müssen sie die Seite wechseln, in einer von der speziellen über verfügbaren Anzeigemodi der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Arbeiten Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> programmgesteuert Feld. Der Code füllt eine Dropdown-Liste mit den unterstützten Anzeigemodi, die in diesem Fall durchsuchen und Entwurf sind. Beachten Sie, dass in der `Page_PreRender` -Methode, die dem Code wird überprüft, ob die aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>. Wenn dies der Fall ist, `Label1` werden angezeigt, und falls nicht, `Label1` ausgeblendet wird.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/CS/wpmgrBrowseDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/VB/wpmgrBrowseDisplayModevb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, können Sie im Durchsuchen-Modus wird standardmäßig ein. Beachten Sie, dass die Bezeichnung auf der Seite, die angibt, dass Sie im Durchsuchen-Modus befinden. Verwenden Sie das Dropdown-Listenfeld-Steuerelement, um die Seite in den Entwurfsmodus zu wechseln. Beachten Sie, dass aufgrund des Codes in der `Page_PreRender` -Methode, die Bezeichnung ist jetzt ausgeblendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Webparts-Seite-Anzeigemodus</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Prüft die <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente, die an einer Verbindung teilnehmen sollen, um zu bestimmen, ob diese verbunden werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Methode wird verwendet, um zu bestimmen, ob zwei <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente miteinander verbunden werden können. Die Methode dient in der Regel als eine bedingungsüberprüfung vor dem Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> Methode.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Methode prüft, eine Reihe von Kriterien, die erfüllt sein müssen, damit zwei Steuerelemente eine Verbindung bilden können. Die folgende Liste enthält die primären Kriterien zum Herstellen einer Verbindung. Die Methode gibt zurück, wenn alle genannten Kriterien (sowie einige zusätzlichen internen Bedingungen) erfüllt sind, `true`, was bedeutet, dass die Steuerelemente miteinander verbunden werden können:  
  
-   Der Anbieter und Consumer dürfen nicht `null`, und sie die enthalten sein müssen, in die Auflistung der Steuerelemente verweist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Eigenschaft.  
  
-   Anbieter und Consumer darf nicht das gleiche Steuerelement sein. Anders ausgedrückt: ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement kann keine Verbindung mit sich selbst.  
  
-   Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Objekte (Verbindungspunkte) für den Anbieter und Consumer nicht `null`.  
  
-   Der Anbieter und der Consumer können nicht geschlossen werden kann (weder Steuerelements <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> Eigenschaft möglich `true`).  
  
-   Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Eigenschaft Verbindungspunkt-Steuerelements muss dem Typ des Steuerelements Consumer und Anbieter entsprechen.  
  
-   Zeigt die Verbindung müssen beide aktiviert sein (ihre <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Methoden müssen beide zurückgeben `true`).  
  
-   Jeder Verbindungspunkt muss nicht versuchen, mehr Verbindungen als der angegebene Wert in einem eigenen bilden <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> Eigenschaft.  
  
-   Wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt (Transformator) für die Verbindung nicht kompatible Steuerelemente erforderlich ist, ist nicht möglich `null`. Wenn die Steuerelemente bereits kompatibel sind, ein Transformator muss jedoch sein `null`.  
  
-   Ein Transformator (sofern verwendet) muss verwiesen werden, der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A> Auflistung.  
  
-   Ein Transformator (sofern verwendet) muss es sich um Schnittstellen verfügen, die mit dem Anbieter und Consumer kompatibel sind, damit sie Daten zwischen den beiden Steuerelementen transformieren kann. Die sekundären Schnittstellen des Consumer und Anbieter müssen auch kompatibel sein.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Das Steuerelement, das <paramref name="consumer" /> Daten bereitstellt, wenn die Steuerelemente miteinander verbunden sind.</param>
        <param name="providerConnectionPoint">Ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, der es <paramref name="provider" /> ermöglicht, an einer Verbindung teilzunehmen.</param>
        <param name="consumer">Das Steuerelement, das Daten von <paramref name="provider" /> empfängt, wenn die Steuerelemente miteinander verbunden sind.</param>
        <param name="consumerConnectionPoint">Ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, der als Rückrufmethode fungiert, damit <paramref name="consumer" /> an einer Verbindung teilnehmen kann.</param>
        <summary>Prüft die <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente, die an einer Verbindung teilnehmen sollen, um zu bestimmen, ob diese verbunden werden können, falls das Consumer- und Anbietersteuerelement über kompatible Schnittstellen verfügen und kein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Objekt erforderlich ist.</summary>
        <returns>Ein boolescher Wert, der angibt, ob <paramref name="provider" /> und <paramref name="consumer" /> verbunden werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um eine Verbindung herstellen `provider` und `consumer` Wenn beide Steuerelemente kompatibel Verbindungspunkttypen verfügen, damit eine <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt ist nicht erforderlich. Möglicherweise möchten Sie diese Methode verwenden, um sicherzustellen, dass zwei Steuerelementen können, vor dem Aufruf verbunden werden <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> eine programmgesteuerte Verbindung zu erstellen.  
  
 Diese Überladung verwendet dieselbe Implementierung als die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> methodenüberladung, mit die einzige Ausnahme, dass diese Überladung einen Transformator nicht erforderlich ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Methode verwendet wird.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden können, eine `<asp:webpartmanager>` Element, und Code zur Verarbeitung von Ereignissen, die eine Verbindung unter Verwendung erstellt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Methode.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente und eine benutzerdefinierte Schnittstelle.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Das deklarative Markup für die Webseite enthält `Register` -Direktiven für das Benutzersteuerelement und die benutzerdefinierten Steuerelemente. Gibt es eine `<asp:webpartmanager>` -Element, ein `<asp:webpartzone>` Element, in die benutzerdefinierten Steuerelemente, und ein `<asp:connectionszone>` Element. Beachten Sie, dass in der `Page_Load` -Methode, die der Code überprüft, ob die Verbindung hergestellt werden kann, und wenn dies der Fall ist, definiert einen Anbieter, Consumer und ihrer jeweiligen Verbindungspunkte und fügt dann eine neue Verbindung, auf den Satz von statischen Verbindungen auf die verwiesen wird durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>Eigenschaft.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Der dritte Teil des Beispiels wird der Quellcode für die Steuerelemente. Sie enthält eine Schnittstelle und zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> steuert, eines als Anbieter und der andere als Consumer fungiert. Da sie die kompatiblen Verbindungspunkten aufweisen (beide erkennen die `IZipCode` Schnittstelle), ein Transformator ist nicht erforderlich, um die Verbindung herzustellen. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/ZipCodeComponent.vb#2)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf die **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Connect** Verbinden-Modus zu wechseln. Connect-Modus verwendet die `<asp:connectionszone>` Element, um Verbindungen zwischen Steuerelementen erstellen können. Im Modus verbinden, klicken Sie auf den Pfeil nach unten, in der Titelleiste des Fensters der **Postleitzahl** steuern, um dessen Verbenmenü zu aktivieren, und klicken Sie dann auf **Connect**. Nachdem die Verbindung-Benutzeroberfläche (UI) angezeigt wird, beachten Sie, dass eine Verbindung mit dem Code, der in enthaltenen bereits erstellt wurde die `Page_Load` Methode.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool&#xA;override this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Das Steuerelement, das <paramref name="consumer" /> Daten bereitstellt, wenn die Steuerelemente miteinander verbunden sind.</param>
        <param name="providerConnectionPoint">Ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, der als Rückrufmethode fungiert, damit <paramref name="provider" /> an einer Verbindung teilnehmen kann.</param>
        <param name="consumer">Das Steuerelement, das Daten von <paramref name="provider" /> empfängt, wenn die Steuerelemente miteinander verbunden sind.</param>
        <param name="consumerConnectionPoint">Ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, der als Rückrufmethode fungiert, damit <paramref name="consumer" /> an einer Verbindung teilnehmen kann.</param>
        <param name="transformer">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />, der eine Verbindung zwischen einem nicht kompatiblen <paramref name="provider" /> und <paramref name="consumer" /> ermöglicht.</param>
        <summary>Prüft die <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente, die an einer Verbindung teilnehmen sollen, um zu bestimmen, ob diese verbunden werden können, und erstellt mithilfe eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Objekts eine Verbindung zwischen einem nicht kompatiblen Consumer und Anbieter.</summary>
        <returns>Ein boolescher Wert, der angibt, ob <paramref name="provider" /> und <paramref name="consumer" /> eine Verbindung bilden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um eine Verbindung herstellen `provider` und `consumer` Wenn beide Steuerelemente inkompatible Verbindungspunkttypen verfügen, damit eine <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt ist erforderlich. Möglicherweise möchten Sie diese Methode verwenden, um sicherzustellen, dass zwei Steuerelementen können, vor dem Aufruf verbunden werden <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> eine programmgesteuerte Verbindung zu erstellen.  
  
 Diese Überladung verwendet dieselbe Implementierung als die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> methodenüberladung, mit die einzige Ausnahme, dass diese Überladung einen Transformator ist erforderlich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CatalogDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ CatalogDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable CatalogDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Anzeigemodus dar, in dem Serversteuerelemente aus einem Katalog von Steuerelementen einer Seite hinzugefügt werden. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> Feld verweist auf eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> -Objekt, das erstellt und enthalten die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Da dies ein statisches Objekt ist, sehen Sie sich diese direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse ohne eine Instanz des Steuerelements.  
  
 Benutzer möchten auf eine Seite, das Hinzufügen von Steuerelementen, wenn ein Katalog-Steuerelemente verfügbar ist, können sie die Seite wechseln <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> (Catalog-Modus), und die Katalog-Benutzeroberfläche (UI) wird angezeigt. Die Benutzeroberfläche für einen Katalog von Webparts erfolgt über eine <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone Steuerelement. Entwickler diese Zone auf der Seite zur Entwurfszeit hinzufügen, und Serversteuerelemente dann zur Zone hinzufügen, damit Benutzer ihre Seiten dieser Steuerelemente zur Laufzeit hinzugefügt werden. Nachdem der Entwickler diese Steuerelemente hinzugefügt, wird Katalogmodus einen unterstützten Anzeigemodus auf der Seite, da die erforderlichen Steuerelemente vorhanden sind, den Katalogmodus aktivieren.  
  
 Wenn ein Benutzer wechselt eine Seite, um die Error-Modus, der die Zone und alle Serversteuerelemente, die sie sichtbar hinzugefügt wurden, und die Benutzer können Steuerelemente auswählen, aus dem Katalog zur Seite hinzufügen oder entfernen Sie Steuerelemente auf der Seite. Nach dem die Steuerelemente auf der Seite hinzugefügt wurden, wird sie in den normalen Durchsuchen-Modus angezeigt werden, und die Seite wird aktualisiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Arbeiten Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> programmgesteuert Feld. Der Code füllt eine Dropdown-Liste mit unterstützten Anzeigemodi für die Seite, die in diesem Fall durchsuchen, Entwurf und Katalog sind. Der Katalogmodus ist verfügbar, da die `<asp:CatalogZone>` Element und seine untergeordneten Elemente auf der Webseite. Beachten Sie, dass in der `Page_PreRender` -Methode, die dem Code wird überprüft, ob die aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>. Wenn dies der Fall ist, `Label1` werden angezeigt, und falls nicht, `Label1` ausgeblendet wird.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/CS/wpmgrCatalogDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/VB/wpmgrCatalogDisplayModevb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, können Sie im Durchsuchen-Modus wird standardmäßig ein. Beachten Sie, dass die Bezeichnung auf der Seite ausgeblendet ist. Verwenden Sie das Dropdown-Listenfeld-Steuerelement, um die Seite in den Katalogmodus zu wechseln. Beachten Sie, dass aufgrund des Codes in der `Page_PreRender` -Methode, die die Bezeichnung ist jetzt sichtbar. Sie können wählen Sie das Steuerelement im Katalog und fügen sie Sie entweder von den beiden Zonen auf der Seite hinzu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Webparts-Seite-Anzeigemodus</related>
      </Docs>
    </Member>
    <Member MemberName="CheckRenderClientScript">
      <MemberSignature Language="C#" Value="protected virtual bool CheckRenderClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckRenderClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CheckRenderClientScript () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckRenderClientScript();" />
      <MemberSignature Language="F#" Value="abstract member CheckRenderClientScript : unit -&gt; bool&#xA;override this.CheckRenderClientScript : unit -&gt; bool" Usage="webPartManager.CheckRenderClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prüft die Funktionen des Browsers, von dem die Anforderung stammt, sowie den Wert der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />-Eigenschaft, um festzustellen, ob Clientskripts wiedergegeben werden sollen.</summary>
        <returns>Ein boolescher Wert, der angibt, ob Clientskripts wiedergegeben werden sollen.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CloseProviderWarning">
      <MemberSignature Language="C#" Value="public virtual string CloseProviderWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseProviderWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CloseProviderWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseProviderWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CloseProviderWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Warnung ab, die angezeigt wird, wenn ein Benutzer ein Steuerelement schließt, das als Anbieter für andere Steuerelemente in einer Verbindung fungiert, oder legt diese Warnung fest.</summary>
        <value>Eine Zeichenfolge, die die Warnmeldung enthält. Der Standardwert ist eine von .NET Framework bereitgestellte kulturspezifische Meldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Benutzer schließt eine <xref:System.Web.UI.WebControls.WebParts.WebPart> steuern, die normalerweise keine Meldung angezeigt wird. Weitere Informationen dazu, was es bedeutet, schließen Sie ein Steuerelement, finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> Methode.  
  
 Wenn ein Steuerelement auf ein anderes Steuerelement verbunden ist und als Anbieter von Daten für das andere Steuerelement fungiert, wird jedoch eine Standard-Warnmeldung angezeigt, wenn ein Benutzer versucht, die das Steuerelement zu schließen. Die Nachricht informiert Benutzer, dass es sich bei einem Anbietersteuerelement geschlossen werden soll, das bedeutet, die steuert, für diesen Anbieter verbunden wird, wie Kunden nicht mehr alle Daten verarbeitet hat. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> Eigenschaft ermöglicht Entwicklern, die Warnmeldung anzupassen, die dem Benutzer angezeigt wird.  
  
 Wenn ein Entwickler eine leere oder null-Zeichenfolge an dieser Eigenschaft zuweist, wird keine Warnhinweisfeld angezeigt, wenn ein Benutzer schließt eine <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement, das als Anbieter fungiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> Eigenschaft, um Benutzern eine benutzerdefinierte Warnung anzuzeigen.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente und eine benutzerdefinierte Schnittstelle.  
  
-   Eine Webseite, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die Verbindung hergestellt werden können und ein `<asp:webpartmanager>` Element.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der folgende Code enthält nur die Webseite Teil des Beispiels. Sie benötigen auch das benutzerdefinierte Steuerelement und der Quellcode für die benutzerdefinierten Steuerelemente, die oben genannten. Rufen Sie diese zwei Elemente aus dem Beispiel-Abschnitt, der die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse.  
  
 Der folgende Code der Webseite wird veranschaulicht, wie eine benutzerdefinierte Warnmeldung zum Zuweisen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> Eigenschaft im deklarativen Markup in der `<asp:webpartmanager>` Element.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf die **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Connect** Verbinden-Modus zu wechseln. Connect-Modus verwendet die `<asp:connectionszone>` Element, um Verbindungen zwischen Steuerelementen erstellen können. Im Modus verbinden, klicken Sie auf den Pfeil nach unten, in der Titelleiste des Fensters der **Postleitzahl** steuern, um dessen Verbenmenü zu aktivieren, und klicken Sie dann auf **Connect**. Nachdem die Verbindung-Benutzeroberfläche (UI) angezeigt wird, klicken Sie auf die **erstellen Sie eine Verbindung mit einem Consumer** Link. Eine Zelle angezeigt wird, die ein Dropdown-Listenfeld-Steuerelement. Wählen Sie **Weather Control** in der Dropdownliste aus, und klicken Sie auf auf **Connect** zum Herstellen die Verbindung der beiden Steuerelemente. Klicken Sie auf **schließen**, und verwenden Sie dann die **Anzeigemodus** Dropdown-Liste in den normalen Durchsuchen-Modus zurück. Klicken Sie abschließend auf das Menü für die Verben für die **Postleitzahl** steuern (Dies ist das Anbietersteuerelement in diesem Fall), und wählen Sie **schließen**. Die benutzerdefinierte Meldung, die Sie zugewiesen werden, um die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> Eigenschaft wird angezeigt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.CloseWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.CloseWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement, das in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> geschlossen wird.</param>
        <summary>Schließt ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, sodass es auf einer Webseite zwar nicht wiedergegeben wird, aber erneut geöffnet werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> -Methode entfernt einen <xref:System.Web.UI.WebControls.WebParts.WebPart> oder andere Server zu steuern, damit es nicht auf der Webseite gerendert wird, die ursprünglich enthalten war. Das Steuerelement geschlossene wurde eine <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Objekt, das gewährleistet einen Verweis auf das Steuerelement geschlossen, und macht es möglich, dass das Steuerelement auf der Seite wiederhergestellt werden. Ein geschlossenes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement immer noch angezeigt wird, in der Auflistung, die auf die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Eigenschaft.  
  
 Schließen eines Steuerelements unterscheidet sich von löschen. Geschlossenen Steuerelemente sind weiterhin verfügbar, die auf eine Seite wiederhergestellt werden, aber eine Instanz eines gelöschten wird dauerhaft gelöscht und kann nicht wiederhergestellt werden. Unabhängig davon, ob eine <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Serversteuerelement (deklariert in Markup einer Webseite) statisch oder dynamisch (die Seite entweder programmgesteuert oder durch einen Benutzer aus einem Webparts-Katalog hinzugefügt), kann es geschlossen und erneut geöffnet, auf einer Seite.  
  
 Benutzer können in der Regel schließen eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, indem Sie auf dessen Verbenmenü, und wählen das Schließen-Verb. Ein Steuerelement kann auch geschlossen werden, durch den direkten Aufruf der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> -Methode und übergeben sie einen Verweis auf `webPart`.  
  
 Auf einer Seite, in denen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente wurden geschlossen, wenn ein Entwickler deklariert eine `<asp:catalogzone>` -Element, und fügt Sie darin ein `<asp:pagecatalogpart>` Element, es bietet eine einfache Benutzeroberfläche (UI) für Benutzer zum Wiederherstellen von geschlossenen Steuerelemente zur Laufzeit. Benutzer können die Seite in Kataloganzeigemodus wechseln, und die geschlossenen Steuerelemente werden innerhalb des Katalogs der Seite angezeigt. Benutzer wählen Sie die geschlossenen Steuerelemente können, und fügen sie zurück zur Seite an einer beliebigen Position, in dem sie erhalten möchten, und klicken Sie dann die ausgewählten Steuerelemente auf der Seite wiederhergestellt und normal gerendert werden.  
  
 Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> -Methode aufgerufen wird, löst Sie mehrere Ereignisse: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> (wenn es mehrere Steuerelemente sind), und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> (wenn es sich um eine verbundene-Steuerelemente vorhanden sind). Entwickler können diese Ereignisse normalerweise abbrechen, aber in bestimmten Fällen ist es nicht möglich, sie abzubrechen. Weitere Informationen finden Sie in der Dokumentation für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignisse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>-Methode verwenden.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, den Anzeigemodus ändern.  
  
-   Eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement.  
  
-   Eine Webseite.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Codebeispiels wird die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Beispiel verwendet die Methode der dynamischen Kompilierung. Es gibt also keine `Assembly` -Attribut in der `Register` -Direktive für dieses Steuerelement am oberen Rand der Webseite. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/textdisplaywebpart.vb#3)]  
  
 Der dritte Teil des Codebeispiels wird die Webseite. Die Seite enthält eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone mit einer <`asp:pagecatalogpart>` -Element deklariert ist. Das ist was geschlossenen enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> steuern und Benutzern ermöglichen, die sie zur Seite hinzuzufügen. Die `Button1_Click` direkte Methodenaufrufe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> Methode zum Schließen des benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPart> zu steuern, auch wenn ein Benutzer auch das Steuerelement über das Verbenmenü schließen kann.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/closeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/closeWebPartVB.aspx#1)]  
  
 Laden Sie die Seite in einem Browser, schließen Sie die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, indem Sie auf das Verbenmenü (das Pfeilsymbol) im Header des Steuerelements klicken und auf **schließen**. Ändern Sie die Seite nun in Katalogmodus, dazu **Katalog** in die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement. Der Seitenkatalog wird mit dem geschlossenen-Steuerelement angezeigt. Wählen Sie das Kontrollkästchen neben dem Steuerelement geschlossen, klicken Sie auf **hinzufügen** auf der Seite hinzugefügt wird, und klicken Sie dann auf **schließen** in den Durchsuchen-Modus zurück. Das Steuerelement wird auf der Seite wiederhergestellt. Schließen Sie es erneut, dieses Mal durch Klicken auf die **WebPart schließen** Schaltfläche.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> ist nicht in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung enthalten.  
  
- oder - 
 <paramref name="webPart" /> ist ein freigegebenes Steuerelement und wurde bereits von einem anderen Benutzer geschlossen.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConnectDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ ConnectDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConnectDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Anzeigemodus dar, in dem eine spezielle Benutzeroberfläche dargestellt wird, in der Benutzer Verbindungen zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen verwalten. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Feld verweist auf eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> -Objekt, das erstellt und enthalten die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Da dies ein statisches Objekt ist, sehen Sie sich diese direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse ohne eine Instanz des Steuerelements.  
  
 Wenn Benutzer möchten, zum Verwalten von Verbindungen zwischen <xref:System.Web.UI.WebControls.WebParts.WebPart> auf einer Webseite gesteuert werden, wenn eine <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> Zone auf der Seite deklariert wurde, können sie die Seite in wechseln die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Modus. Der Verbindungsanzeigemodus zeigt eine spezielle Benutzeroberfläche zum Verwalten von Verbindungen, einschließlich die Möglichkeit, herstellen oder Trennen von Steuerelementen und Details der vorhandenen Verbindungen zu bearbeiten.  
  
 Wenn Sie Benutzern die Möglichkeit zum Verwalten von Verbindungen mit den vom Webparts-Steuerelementsatz bereitgestellte Benutzeroberfläche zur Verfügung stellen möchten, müssen Sie deklarieren eine `<asp:connectionszone>` Element im Markup einer Seite. Im Gegensatz zu den Elementen für die anderen Typen von <xref:System.Web.UI.WebControls.WebParts.WebZone> Zonen, Sie müssen keine anderen Tags innerhalb dieses Elements hinzufügen, Sie deklarieren Sie einfach das Element selbst.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Modus.  
  
 Im Codebeispiel besteht aus drei Teilen:  
  
-   Eine Quelldatei mit einer Schnittstelle und benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die eine Verbindung bilden können.  
  
-   Eine Webseite, bietet eine Benutzeroberfläche für Verbindungen, und veranschaulicht die Arbeit mit, der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Modus.  
  
-   Eine Erklärung der Vorgehensweise zum Ausführen des Beispiels.  
  
 Der erste Teil des Codebeispiels wird eine Quelldatei mit einer Schnittstelle und zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die entwickelt wurden, dass sie miteinander verbunden werden können. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die Methode der dynamischen Kompilierung. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ZipCodeComponent.vb#2)]  
  
 Der zweite Teil des Beispiels wird eine Webseite, die die benutzerdefinierten Steuerelemente hostet. Auf dem Server `<script>` Tags auf der Seite sind mehrere Methoden, mit denen eine Dropdown-Liste mit den auf der Seite verfügbaren Anzeigemodi aufgefüllt. Ein Benutzer kann diese aus der Dropdown-Liste so ändern Sie die Seite-Anzeigemodus auswählen. Eine der verfügbaren Anzeigemodi ist Verbindungsmodus, da ein `<asp:connectionszone>` Element im Markup der Seite deklariert wird. Beachten Sie, dass dieses Element keine untergeordneten Elemente enthält. vorhanden ist, nur um die Verwaltung von Datenbankverbindungen Benutzeroberfläche für Benutzer aktivieren.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Modus wird in diesem Beispiel an zwei Orten angezeigt. Zunächst in den `Page_Init` -Methode, der Verbindungsanzeigemodus der Dropdown-Liste mit den Anzeigemodi hinzugefügt wird, als der Code durchläuft die Auflistung, die auf die der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft. Zweitens wird die `Page_PreRender` Methode überprüft, ob den aktuelle Anzeigemodus auf der Seite, und wenn der aktuelle Modus ist <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>, wird eine Meldung angezeigt, eine <xref:System.Web.UI.WebControls.Label> Steuerelement.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ConnectDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ConnectDisplayModeVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, klicken Sie auf die Dropdown-Liste, und wählen **Connect** , die in den Verbindungsanzeigemodus wechseln. Beachten Sie, dass eine Meldung darüber, dass Sie, die die Seite im Anzeigemodus verbinden informiert. Klicken Sie nun das Verbenmenü (ein Pfeilsymbol) in der Titelleiste eines der <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, und klicken Sie dann auf **Connect** im Verbmenü. Klicken Sie nachdem die Verbindung, die Benutzeroberfläche angezeigt wird auf den Link, um eine Verbindung zu erstellen. Verwenden Sie die Dropdown-Liste in der Benutzeroberfläche, die angezeigt wird, wählen Sie das andere Steuerelement, das die Verbindung beteiligt, und klicken Sie auf die **Connect** Schaltfläche. Die Verbindung hergestellt wird. Klicken Sie auf die **schließen** Schaltfläche, und klicken Sie dann am oberen Rand der Seite die Dropdown Liste verwenden, um die Seite, um die Durchsuchen-Anzeigemodus zurückzugeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Webparts-Seite-Anzeigemodus</related>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ Connections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die Auflistung aller aktuellen Verbindungen auf einer Webseite ab.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, die einen Satz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />-Objekten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> Eigenschaft bietet eine Möglichkeit, den aktuellen Satz von Verbindungen auf einer Seite zugreifen. Die Auflistung an sich schreibgeschützt ist, und Entwickler, die eine bestimmte Verbindung aus der Auflistung bearbeiten möchten, sollten verwenden <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Methoden, z. B. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, deklarativ und programmatisch mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden können, und ein `<asp:webpartmanager>` Element.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente und eine benutzerdefinierte Schnittstelle.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der folgende Code enthält nur die Webseite Teil des Beispiels. Sie benötigen auch das benutzerdefinierte Steuerelement und der Quellcode für die benutzerdefinierten Steuerelemente, die oben genannten. Rufen Sie diese zwei Elemente aus dem Beispiel-Abschnitt, der die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse.  
  
 Der folgende Code der Webseite veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> -Eigenschaft programmgesteuert auf die Anzahl von aktuellen Verbindungen auf einer Seite abzurufen. Beachten Sie, dass die `<script>` markierungsabschnitt, den Code zum Behandeln von zwei Ereignissen für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern greift auf die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> Eigenschaft, um die Anzahl der zu erhalten.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf die **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Connect** Verbinden-Modus zu wechseln. Connect-Modus verwendet die `<asp:connectionszone>` Element, um Verbindungen zwischen Steuerelementen erstellen können. Im Modus verbinden, klicken Sie auf den Pfeil nach unten, in der Titelleiste des Fensters der **Postleitzahl** steuern, um dessen Verbenmenü zu aktivieren, und klicken Sie dann auf **Connect**. Nachdem die Verbindung-Benutzeroberfläche (UI) angezeigt wird, klicken Sie auf die **erstellen Sie eine Verbindung mit einem Consumer** Link. Eine Zelle angezeigt wird, die ein Dropdown-Listenfeld-Steuerelement. Wählen Sie **Weather Control** in der Dropdownliste aus, und klicken Sie auf auf **Connect** zum Herstellen die Verbindung der beiden Steuerelemente. Klicken Sie auf **schließen**, und verwenden Sie dann die **Anzeigemodus** Dropdown-Liste in den normalen Durchsuchen-Modus zurück. Beachten Sie, dass eine Bezeichnung jetzt die Anzahl der Verbindungen und die Anzahl der zeigt <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Wenn Sie nun zum Modus herstellen und trennen die beiden Steuerelemente bei der Rückkehr zum Durchsuchen-Modus zurück, Inhalt mit der Bezeichnung aktualisiert werden soll, und keine Verbindungen vorhanden sein sollte.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivated;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivated : EventHandler " Usage="member this.ConnectionsActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem nicht nur alle aktuellen Webparts-Verbindungen auf einer Seite verbunden wurden, sondern diese auch begonnen haben, Daten aktiv zwischen den an den einzelnen Verbindungen beteiligten Consumer- und Anbietersteuerelementen auszutauschen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In den Lebenszyklus von Verbindungen tritt dieses Ereignis auf, nachdem eine Seite der Ladevorgang abgeschlossen ist. Sie kommt auch nach der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> -Ereignis, das nur den Wert, der angibt, die <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Serversteuerelemente, die eine bestimmte Verbindung beteiligt erfolgreich verbunden haben. In einem Fall, wenn es mehrere Verbindungen auf einer Seite sind, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> Methode gibt an, dass alle gültigen Webparts-Verbindungen auf einer Seite jetzt aktiv und Daten gemeinsam nutzen können. Wissen, dass alle Verbindungen aktiv sind, können Entwickler führen Sie eine beliebige Anzahl von Aufgaben, einschließlich der Benachrichtigung der Benutzer, der den Status aller Verbindungen benachrichtigt Consumer-Steuerelementen zu verarbeiten und Anzeigen von Daten aus ihren Anbieter, und so weiter.  
  
 Dieses Ereignis zugeordnet ist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> -Methode, die das Ereignis auslöst und ermöglicht es Entwicklern, benutzerdefinierte Handler für das Ereignis zu erstellen.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis erstellen, durch das Hinzufügen der `OnConnectionsActivated` -Attribut auf die `<asp:webpartmanager>` Element auf der Seite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivating">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivating As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivating;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivating : EventHandler " Usage="member this.ConnectionsActivating : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während alle erstellten Webparts-Verbindungen auf einer Webseite aktiviert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In den Lebenszyklus von Verbindungen, dieses Ereignis tritt auf, wie eine Seite kurz vor dem Ausführen der Ladevorgang abgeschlossen wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Methode wird aufgerufen. Es unterscheidet sich von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Ereignis, das eine bestimmte Verbindung zwischen betrifft <xref:System.Web.UI.WebControls.WebParts.WebPart> oder andere Serversteuerelemente. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> Ereignis tritt auf, wenn alle möglichen Verbindungen auf einer Seite angeschlossen wurden und sind im Begriff, die aktiviert werden.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> Ereignis zugeordnet ist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> -Methode, die das Ereignis auslöst. Entwickler von Steuerelementen, die den Typ der Verbindungen, die eine Seite hinzugefügt werden können, erweitern möchten können außer Kraft setzen die geschützte <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Methode und weitere Typen von Verbindungen zu aktivieren.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis erstellen, durch das Hinzufügen der `OnConnectionsActivating` -Attribut auf die `<asp:webpartmanager>` Element auf der Seite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen (oder sonstigen Serversteuerelementen, die Verbindungen bilden können), die sich in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone befinden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> Methode bildet eine Verbindung zwischen zwei beliebigen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die Verbindung hergestellt werden können. Vor dem Aufrufen dieser Methode, um eine Verbindung herzustellen, Sie sollten auch zum Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> -Methode in einer bedingten stellen Sie sicher, dass die Steuerelemente die Anforderungen zum Herstellen einer Verbindung.  
  
> [!NOTE]
>  Es ist auch möglich, eine Verbindung zwischen zwei Serversteuerelementen zu erstellen, die nicht <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Im Allgemeinen die beiden Steuerelemente zu benutzerdefinierten Steuerelementen werden müssten (z. B. Steuerelemente, die von erben <xref:System.Web.UI.WebControls.WebControl> oder vorhandene ASP.NET-Serversteuerelemente), damit Sie die erforderlichen Member hinzufügen können. Die Steuerelemente müssen auch die unten angegebenen Anforderungen erfüllen.  
  
 Jede Art von Szenario mit einer Verbindung zwischen zwei Steuerelementen muss es sich um eine Verbindung herstellen können, werden die folgenden Anforderungen erfüllen:  
  
-   Jedes Steuerelement befindet sich in einem <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone (es muss nicht die gleiche Zone werden).  
  
-   Gemäß der Implementierung im Webparts-Steuerelementsatz implementiert das Anbietersteuerelement in einer Verbindung eine Schnittstelle als eine öffentliche Methode, die als Rückruf an den Anbieter fungiert, und verfügt über eine `ConnectionProvider` Metadaten-Attribut für die Methode zur Identifizierung einer Anbieter-Verbindung Zeigen Sie. Da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> Methode, ruft Anbieterverbindungspunkten virtuell ist, muss ein abgeleitetes <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement nicht notwendigerweise das gleiche Attribut für die Metadaten zu verwenden.  
  
-   Gemäß der Implementierung im Webparts-Steuerelementsatz Consumersteuerelement in einer Verbindung verfügt auch über eine spezielle Methode, die Ihnen ermöglicht, einen Verweis auf die Schnittstelle abzurufen, die in der Anbieter Callback-Methode verfügbar gemacht wird, und der Consumer hat eine `ConnectionConsumer` Metadatenattribut auf Zeigen Sie die Methode, die sie als einen Consumer-Verbindungspunkt zu identifizieren. Da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> Methode, ruft Consumerverbindungspunkten virtuell ist, muss ein abgeleitetes <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement nicht notwendigerweise das gleiche Attribut für die Metadaten zu verwenden.  
  
-   Die Rückrufmethoden müssen entweder kompatibel sein können, die der Consumer den Typ des verwenden kann Schnittstelle bereitgestellt wird, in die Callback-Methode des Anbieters (d. h., dass Consumer und Anbieter die Daten direkt freigeben können), oder der Entwickler muss ein <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> -Objekt Transformieren von Daten vom Anbieter in eine Form, die der Consumer verwenden können.  
  
    > [!IMPORTANT]
    >  Wenn Sie nicht über einen Transformator benötigen, verwenden Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> -methodenüberladung. Wenn Sie einen Transformator benötigen, verwenden Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> -methodenüberladung.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, das die Funktion erfüllt, Daten für ein anderes, mit ihm verbundenes Steuerelement bereitzustellen.</param>
        <param name="providerConnectionPoint">Eine Methode, die als Rückrufmethode für die Verbindung fungiert. Entsprechend der Implementierung im Webparts-Steuerelementsatz ist dies eine öffentliche Methode in <paramref name="provider" />, die mit einem <see langword="ConnectionProvider" />-Metadatenattribut gekennzeichnet ist.</param>
        <param name="consumer">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, das die Funktion erfüllt, Daten von <paramref name="provider" /> zu empfangen und dann zu verarbeiten oder anzuzeigen.</param>
        <param name="consumerConnectionPoint">Eine Methode, die eine Verbindung mit <paramref name="providerConnectionPoint" /> herstellt, um die Daten für die Verbindung zu empfangen. Entsprechend der Implementierung im Webparts-Steuerelementsatz ist dies eine öffentliche Methode in <paramref name="consumer" />, die mit einem <see langword="ConnectionConsumer" />-Metadatenattribut gekennzeichnet ist.</param>
        <summary>Erstellt nur mithilfe der Verweise auf die Steuerelemente und ihre angegebenen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Objekte eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />-Steuerelementen oder <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />-Steuerelementen.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> mit den Informationen zum Anbieter und Consumer, die für eine Verbindung benötigt werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung wird verwendet, um Steuerelemente zu verbinden, wenn die Verbindungspunkte ausreichend kompatibel sind, dass sie ohne eine Verbindung herstellen können eine <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt. Wenn diese Überladung der Methode aufgerufen wird, sie einfach den Aufruf an die andere überladene Version der Methode übergibt, und übergibt `null` für den Parameter, benötigt eine <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt.  
  
 Wenn Sie versuchen, zwei Steuerelemente programmgesteuert eine Verbindung herstellen, können Sie mithilfe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> -Methode in einer bedingten überprüfen Sie, ob die Steuerelemente direkt miteinander verbunden werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie diese Methode zu verwenden, um programmgesteuert eine Verbindung zu erstellen. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Aus diesem Beispiel benötigen Sie den Quellcode für das Benutzersteuerelement, das Ihnen ermöglicht, Anzeigemodi auf der Seite zu ändern, und der Quellcode für die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente.  
  
 Der Code für die Webseite, die die beiden hostet steuert folgt. Die Seite verwendet `Register` -Anweisungen am Anfang, um das Benutzersteuerelement und die benutzerdefinierten Steuerelemente zu deklarieren. Die benutzerdefinierten Steuerelemente klicken Sie dann auf die verwiesen wird deklarativ in einer `<asp:webpartzone>` Element. Der Code, behandelt der `Button1_Click` Methode erstellt eine Verbindung zwischen den Steuerelementen mithilfe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> Methode.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, klicken Sie auf die **Connect WebPart Controls** Schaltfläche, um die Verbindung zu erstellen. Sie können dann geben einige Daten in das Textfeld ein und klicken Sie auf die **Geben Sie die 5-stellige Postleitzahl** Schaltfläche, um zu veranschaulichen, dass die Steuerelemente miteinander verbunden sind, und die Daten in das erste Steuerelement eingegeben werden in der zweiten aktualisiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Auflistung der dynamischen Auflistungen des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements ist schreibgeschützt.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection&#xA;override this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, der die Funktion erfüllt, Daten für ein anderes, mit ihm verbundenes Steuerelement bereitzustellen.</param>
        <param name="providerConnectionPoint">Eine öffentliche Methode in <paramref name="provider" />, die mit einem <see langword="ConnectionProvider" />-Metadatenattribut gekennzeichnet ist und als Rückrufmethode für die Verbindung fungiert.</param>
        <param name="consumer">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, der die Funktion erfüllt, Daten von <paramref name="provider" /> oder <paramref name="transformer" /> zu empfangen und dann zu verarbeiten oder anzuzeigen.</param>
        <param name="consumerConnectionPoint">Eine öffentliche Methode in <paramref name="consumer" />, die mit einem <see langword="ConnectionConsumer" />-Metadatenattribut gekennzeichnet ist und eine Verbindung mit <paramref name="providerConnectionPoint" /> herstellt, um die Daten für die Verbindung zu empfangen.</param>
        <param name="transformer">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />, der eine Verbindung zwischen zwei Steuerelementen ermöglicht, indem er die Daten von <paramref name="provider" /> in ein Format konvertiert, das von <paramref name="consumer" /> verarbeitet werden kann.</param>
        <summary>Erstellt mithilfe der Verweise auf die Steuerelemente, ihre angegebenen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Objekte und ein <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />-Objekt eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />-Steuerelementen oder <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Steuerelementen.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, die die Informationen zum Anbieter, Consumer und Transformator enthält, die für eine Verbindung benötigt werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung wird verwendet, um Steuerelemente zu verbinden, wenn die Verbindungspunkte inkompatibel sind. Die Inkompatibilität tritt auf, wenn `consumer` implementiert eine andere Schnittstelle als `provider` als Verbindung erforderlich. Ein Transformator konvertiert die Daten in einen Typ, der von verstanden werden `consumer`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Verbindungen wurden bereits in <see cref="E:System.Web.UI.Control.PreRender" /> aktiviert.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung aller <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente, Serversteuerelemente oder Benutzersteuerelemente ab, die in <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zonen auf einer Webseite enthalten sind und vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwaltet werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.ControlCollection" />, die alle vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwalteten Steuerelemente enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> Eigenschaft verweist nicht auf die anderen Steuerelementen, die von referenziert werden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> zu steuern, wie z. B. die verschiedenen Zonensteuerelemente <xref:System.Web.UI.WebControls.WebParts.EditorPart> oder <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente und andere.  
  
 Diese Eigenschaft wird verwendet, vom Webparts-Steuerelementsatz, und klicken Sie in den meisten Fällen für Entwicklung, die es nicht aus Ihrem Code aufgerufen werden soll. Aus diesem Grund, obwohl die Eigenschaft öffentlich ist, wird es von IntelliSense ausgeblendet. Entwickler, die Zugriff auf die Auflistung der möchten <xref:System.Web.UI.WebControls.WebParts.WebPart> oder andere Serversteuerelemente, die von verwaltet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verwenden muss seine <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CopyWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart CopyWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ CopyWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.CopyWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das zu kopierende <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement.</param>
        <summary>Wird vom Webparts-Steuerelementsatz verwendet, um eine Kopie eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements oder Serversteuerelements anzulegen und diese dem Steuerelement auf einer Webseite hinzuzufügen.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, der einer Seite hinzugefügt werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> Methode direkt aus Ihrem Code. Diese Methode wird aufgerufen, intern von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement als Teil des Vorgangs zum Hinzufügen eines neuen dynamisches <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein Serversteuerelement auf einer Seite. Ein dynamisches Steuerelement zu einer Seite programmgesteuert oder über die Webparts-Benutzeroberfläche (UI), z. B. wurde von einem Benutzer mit dem Hinzufügen eines Steuerelements aus einem Katalog von Steuerelementen, statt ein statisches Steuerelement, das direkt im Markup einer Seite deklariert wird.  
  
> [!NOTE]
>  Die Methode kann in einer abgeleiteten Klasse überschrieben werden, wenn Entwickler die Methode zum Behandeln von zusätzlichen steuern das Kopieren von Szenarios aktiviert werden soll. Weitere Informationen finden Sie die Hinweise für Vererber Abschnitt.  
  
 Wenn ein neues dynamisches Steuerelement hinzugefügt wird, ist dies ein <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement, das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> Methode gibt eine neue Instanz des Steuerelements. Wenn das hinzugefügte Steuerelement eine andere Art von Steuerelement (z. B. ein Benutzersteuerelement, ein benutzerdefiniertes Steuerelement oder ein ASP.NET-Steuerelement) ist, das Steuerelement wird bereits wurden umschlossen mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt vom Webparts-Steuerelementsatz. Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> Methode gefundenen eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> -Steuerelement, gibt es eine neue Instanz der der <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelements durch eine neue Instanz des untergeordneten Steuerelements darin eingeschlossen.  
  
 Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> Methode erstellt eine neue Kopie eines Steuerelements zurückgegeben wird, auch die Werte aller Eigenschaften auf ihre Standardwerte zurückgesetzt. Beachten Sie, dass wenn Sie möchten die Werte von der personalisierbaren Eigenschaften beibehalten und diese in die neue Instanz des Steuerelements kopiert, rufen Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> -Methode. Der letzte Schritt ausgeführt, indem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> Methode besteht darin, rufen Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A> Methode, um eine neue ID für das Steuerelement abzurufen.  
  
> [!NOTE]
>  Da die Methode eine neue ID für eine kopierte Steuerelement erhält, dürfen Sie nicht verlassen zum Verweisen auf ein dynamisches Steuerelement, das einer Seite, nach seiner ursprünglichen-ID. hinzugefügt wird Stattdessen sollten Sie die neue Instanz des Steuerelements von der Methode zurückgegebenen verweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Die Methode wird als deklariert <see langword="virtual" /> , damit Entwickler vererben konnte die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse überschreiben Sie die Methode, und geben Sie für Weitere Szenarien, in dem sie Kopien von Steuerelementen erstellen konnte. Beispielsweise könnte die Methode optional als Eingabe ein Steuerelement erhalten, die in eine XML-Datei serialisiert wurde. Die Methode konnte Deserialisieren den XML-Code (falls vorhanden), und klicken Sie dann die Basismethode aufrufen, die vorhandenen Fälle zu behandeln und eine neue Instanz der zurückzugebenden eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Steuerelement.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAvailableTransformers">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAvailableTransformers () As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ CreateAvailableTransformers();" />
      <MemberSignature Language="F#" Value="abstract member CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection&#xA;override this.CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="webPartManager.CreateAvailableTransformers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen Satz von in der Konfigurationsdatei einer Website angegebenen Transformatoren und fügt sie der Auflistung der Transformatoren hinzu, auf die die <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />-Eigenschaft verweist.</summary>
        <returns>Die Auflistung der in der Konfigurationsdatei einer Website angegebenen Transformatoren.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Diese Methode kann überschrieben werden, um zusätzliche Transformatoren hinzuzufügen, die von der Anwendung verwendet werden können. Die Methode kann z. B. geschrieben werden, um eine Liste der verfügbaren Transformatoren von einem Webdienst abzurufen.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="webPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Auflistung aller Steuerelemente zurück, die vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement auf einer Webseite verwaltet werden. Diese Klasse kann nicht vererbt werden.</summary>
        <returns>Eine <see cref="T:System.Web.UI.ControlCollection" />, die alle mit dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwalteten Webparts-Steuerelemente enthält.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Da diese Methode geschützt und versiegelt ist, ist es sichtbar für Klassen, die von erben die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> -Klasse, aber es kann nicht überschrieben werden.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayModes">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDisplayModes () As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ CreateDisplayModes();" />
      <MemberSignature Language="F#" Value="abstract member CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&#xA;override this.CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="webPartManager.CreateDisplayModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt den Satz aller möglichen Anzeigemodi für eine Webparts-Anwendung.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, die alle unterstützten Anzeigemodi enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt die Liste aller möglichen Anzeigemodi, nicht nur die Anzeigemodi, die auf einer bestimmten Seite unterstützt. Weitere Informationen zu den unterstützten Anzeigemodi finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft.  
  
 Standardmäßig erstellt der Webparts-Steuerelementsatz den folgenden Satz von Anzeigemodi auf Webparts-Seiten verwendet werden:  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>  
  
 Entwickler können benutzerdefinierte Anzeigemodi erstellen, mit oder ohne zugehörige benutzerdefinierte von abgeleiteten Zonen der <xref:System.Web.UI.WebControls.WebParts.WebZone> oder <xref:System.Web.UI.WebControls.WebParts.ToolZone> Klassen. Um einen benutzerdefinierten Anzeigemodus zu erstellen, müssen Sie erben von der <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> -Klasse, und um den Anzeigemodus als unterstützten Modus auf einer Seite hinzuzufügen, müssen Sie erben von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse, und überschreiben die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> Methode.  
  
 Wenn Sie mithilfe von Anzeigemodi hinzufügen der <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A> -Methode, Sie sollten sie in der Reihenfolge hinzufügen, die sie in alle Steuerelemente der Benutzeroberfläche (UI) angezeigt werden sollen (z. B. eine <xref:System.Web.UI.WebControls.ListBox> Steuerelement), die Benutzern zur Verfügung stellen die möglichen Anzeigemodi auf einer Seite.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>-Methode verwenden.  
  
 Im Codebeispiel besteht aus fünf Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, die andere Steuerelemente hostet.  
  
-   Ein Benutzersteuerelement, das in befindet sich eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone auf der Webseite, und ermöglicht es Ihnen, eingeben und Anzeigen von Text in einer Bezeichnung.  
  
-   Eine Quellcodedatei, die zwei Steuerelemente enthält. Eine ist ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement, und die andere ist eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Objekt, das den Anzeigemodus des standardmäßig hinzugefügt.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente und eine benutzerdefinierte Schnittstelle.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Beispiels ist die Webseite. Es enthält zwei <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Steuerelemente, Benutzersteuerelemente, sowohl die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Beachten Sie, dass die `Register` -Anweisungen am Anfang der Seite auf die Benutzersteuerelemente und Namespace-URI für die kompilierten Steuerelemente verweisen.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/createDisplayModeCS.aspx#1)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/createDisplayModeVB.aspx#1)]  
  
 Der dritte Teil des Beispiels ist das Steuerelement zum eingeben und Anzeigen von Text. Er verwendet eine <xref:System.Web.UI.WebControls.MultiView> Steuerelement mehrere Ansichten der Benutzeroberfläche zu erstellen. Eine Ansicht wird angezeigt, mit der `Button1` Schaltfläche, das andere ohne. Beachten Sie, dass in der überschriebenen `OnPreRender` -Methode, der Code überprüft, um festzustellen, ob die Seite befindet sich derzeit in der benutzerdefinierten Anzeigemodus und, wenn dies der Fall ist, zeigt die erste Ansicht des Benutzersteuerelements, darunter die Schaltfläche. Wenn die Seite nicht in den benutzerdefinierten Anzeigemodus, z. B. ist wenn die Seite im Modus "Durchsuchen" oder "Entwurf" befindet, wird die Schaltfläche ausgeblendet.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/TextDisplaycs.ascx#2)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/TextDisplayvb.ascx#2)]  
  
 Das vierte Teil des Beispiels wird die Quelldatei für die beiden benutzerdefinierten Klassen. Beachten Sie, dass die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Klasse überschreibt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> -Methode und ruft zuerst die Basismethode, um die Standard-Anzeigemodi hinzufügen und fügt dann den benutzerdefinierten Anzeigemodus hinzu. Die benutzerdefinierte Klasse Anzeigemodus, `InLineEditDisplayMode`, erbt einfach <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, wird der Name des Anzeigemodus in den Konstruktor und überschreibt eine Reihe die grundlegenden Eigenschaften zu, um die Eigenschaften der benutzerdefinierten Anzeige herzustellen.  
  
 Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/CustomDisplayMode.cs#3)]
 [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/CustomDisplayMode.vb#3)]  
  
 Führen Sie im Codebeispiel wird geladen Sie die Seite in einem Browser werden. Beachten Sie, dass die Seite befindet sich derzeit im Durchsuchen-Modus, und keine Schaltfläche sichtbar ist. Mithilfe der **Anzeigemodus** Dropdown-Kontrolle, ändern Sie die Seite, um **Inlineanzeige bearbeiten** Modus, und nun die `Button1` Schaltfläche wird im unteren Benutzersteuerelement angezeigt. Fügen Sie Text hinzu, und klicken Sie auf die Schaltfläche, um das Steuerelement zu aktualisieren. Beachten Sie, dass die angezeigte Seite zurückgegeben wird, um den Durchsuchen-Modus, der von Ihnen eingegebene Text wird nun angezeigt, und die Schaltfläche wieder ausgeblendet werden, ist da die Seite nicht mehr in den benutzerdefinierten Anzeigemodus ist.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Exemplarische Vorgehensweise: Wechseln des Anzeigemodus auf einer Webparts-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicConnectionID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicConnectionID () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicConnectionID();" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicConnectionID : unit -&gt; string&#xA;override this.CreateDynamicConnectionID : unit -&gt; string" Usage="webPartManager.CreateDynamicConnectionID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen eindeutigen Wert ab, der als ID für eine dynamische Verbindung verwendet wird.</summary>
        <returns>Eine Zeichenfolge, die eine eindeutige ID für eine Verbindung enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> Methode generiert einen GUID-Wert, und konvertiert es in eine Zeichenfolge, die als eindeutige ID für eine Verbindung verwendet. Die Methode wird jedes Mal aufgerufen, wenn eine dynamische Verbindung erstellt wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können diese Methode in einer abgeleiteten überschreiben <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse so ändern Sie die Implementierung für Sie generiert eine eindeutige ID.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicWebPartID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicWebPartID (Type webPartType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicWebPartID(class System.Type webPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicWebPartID (webPartType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicWebPartID(Type ^ webPartType);" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicWebPartID : Type -&gt; string&#xA;override this.CreateDynamicWebPartID : Type -&gt; string" Usage="webPartManager.CreateDynamicWebPartID webPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="webPartType">Der <see cref="T:System.Type" /> des Steuerelements, für das eine ID generiert wird.</param>
        <summary>Generiert eine eindeutige ID für ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement.</summary>
        <returns>Eine Zeichenfolge mit der eindeutigen ID.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.UI.WebControls.WebParts.WebPart> einer Webseite hinzugefügt werden, da können statisch (d. h. das Steuerelement im Seitenmarkup deklariert wird) oder dynamisch (d. h., sie programmgesteuert hinzugefügt werden). In jedem Szenario, in denen die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement erstellt neue dynamische Steuerelemente auf der Seite hinzufügen, ruft diese Methode, um eine eindeutige ID zu generieren  
  
 Die Methode ist virtuell, damit Entwickler sie überschreiben können, wenn sie eine benutzerdefinierte Implementierung für das Generieren der ID bereitstellen möchten  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPartType" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateErrorWebPart (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String, errorMessage As String) As ErrorWebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::ErrorWebPart ^ CreateErrorWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart&#xA;override this.CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart" Usage="webPartManager.CreateErrorWebPart (originalID, originalTypeName, originalPath, genericWebPartID, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ErrorWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">Eine Zeichenfolge, die die ID des Steuerelements darstellt, bei dem der Fehler aufgetreten ist. Wenn <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> am Fehler beteiligt ist, entspricht die ID der ID von dessen untergeordneten Serversteuerelement.</param>
        <param name="originalTypeName">Eine Zeichenfolge, die den Namen des <see cref="T:System.Type" /> des Steuerelements darstellt, bei dem der Fehler aufgetreten ist. Wenn <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> am Fehler beteiligt ist, entspricht der Typname dem Typ von dessen untergeordneten Serversteuerelement.</param>
        <param name="originalPath">Eine Zeichenfolge, die den Pfad zu einem Benutzersteuerelement enthält, wenn ein <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> mit einem ungeordneten Benutzersteuerelement am Fehler beteiligt ist.</param>
        <param name="genericWebPartID">Eine Zeichenfolge, die die ID eines <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> zurückgibt, wenn dieser Steuerelementtyp am Fehler beim Laden oder Erstellen eines Steuerelements beteiligt war.</param>
        <param name="errorMessage">Eine Zeichenfolge, die die Fehlermeldung enthält, die auf der Seite angezeigt wird.</param>
        <summary>Erstellt ein spezielles Steuerelement, das auf eine Seite eingefügt wird und das für Endbenutzer angezeigt wird, wenn der Versuch fehlschlägt, ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zu laden oder zu erstellen.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />, der auf einer Seite anstelle eines Steuerelements eingefügt wird, bei dem ein Fehler beim Laden oder Erstellen aufgetreten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> Methode wird aufgerufen, wenn das Webparts-Steuerelement Satz Versuche zum Laden oder erstellen Sie eine Instanz eines dynamischen <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Serversteuerelement, und es aus irgendeinem Grund fehlschlägt. Die Methode erstellt eine <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> -Objekt, weist eine Fehlermeldung angezeigt, und gibt sie zurück. Die <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> -Steuerelement wird anstelle des Steuerelements, die nicht eingefügt werden soll, und die Fehlermeldung wird angezeigt, auf der Seite.  
  
 Sie können nicht Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> Methode direkt aus Ihrem Code. Sie können jedoch von erben die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Klasse und die Methode erweitern. Weitere Informationen finden Sie unter dem Abschnitt Hinweise für Vererber.  
  
 Endbenutzer können mit arbeiten ein <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> steuern in eine Seite ähnlich wie einem normalen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Um die Fehlermeldung zu entfernen, können sie das Steuerelement schließen, indem Sie auf das Schließen-Verb an diesem Punkt das Steuerelement hinzugefügt werden wird, eine <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Objekt wie jedes andere geschlossene Steuerelement. Wenn ein Benutzer löscht eine <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Steuerelement, das Serversteuerelement, das konnte nicht geladen werden, werden ebenfalls auf der Seite gelöscht.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sollten Sie die Informationen, die in zurückgegeben wird, Anpassen der <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> -Steuerelement, können Sie überschreiben die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" /> -Methode, die Basismethode aufrufen, an die Basismethode übergebenen Parameter unterschiedliche Werte zuweisen und dann die resultierende zurück<see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />Steuerelement. Angenommen, Sie nicht möchten, dass Endbenutzer finden Sie unter der <paramref name="originalPath" /> Wert (der den Pfad des virtuellen Verzeichnisses ein Benutzersteuerelement angezeigt), wenn Sie die Basismethode aufrufen kann, übergeben Sie eine leere Zeichenfolge ("") für diesen Parameter.  
  
Sie können auch das Verhalten der Anpassen der <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> steuern, selbst, indem Sie von ihm erben. Angenommen, Sie möchten möglicherweise außer Kraft setzen die <see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" /> oder <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" /> Eigenschaft.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePersonalization">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreatePersonalization () As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ CreatePersonalization();" />
      <MemberSignature Language="F#" Value="abstract member CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization&#xA;override this.CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="webPartManager.CreatePersonalization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Personalisierungsobjekt zurück, das die Personalisierungsdaten eines Benutzers für die aktuelle Webseite enthält.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />, die Personalisierungsdaten eines Benutzers enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A> Methode gibt ein Objekt enthalten und Verwalten von Einstellungen für ansichtspersonalisierung des Benutzers für die aktuelle Seite zurück. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verwaltet, dieses Objekt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320">Übersicht über Webserver Webparts-Personalisierung</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::GenericWebPart ^ CreateWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart&#xA;override this.CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.CreateWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Ein Serversteuerelement, das kein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement ist.</param>
        <summary>Umschließt ein Serversteuerelement, das kein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement ist, mit einem <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />-Objekt, sodass das Steuerelement über Webparts-Funktionen verfügt.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, der <paramref name="control" /> umschließt und damit dessen Verwendung als echtes <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement ermöglicht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> Methode ist der wichtigste Mechanismus zur Aktivierung des Serversteuerelemente, die nicht <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente für die auf die gleiche Funktionalität wie eine <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement, und somit zur vollständig Teilnahme an Webparts-Anwendungen. Mithilfe dieser Methode können Entwickler erheblich erweitern Sie die Anzahl der Serversteuerelemente, die sie in einer Webparts-Anwendung verwenden können, da nahezu jeder des Serversteuerelements--Typ Standardsteuerelemente von ASP.NET, Benutzersteuerelemente und benutzerdefinierte Steuerelemente – können verwendet werden.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verwendet diese Methode auch in anderen Szenarios zum Umschließen der Steuerelemente mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt. Wenn Benutzer hinzufügen Serversteuerelemente zu einer Seite mit der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> zu steuern, wenn das importierte Steuerelement keine <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> Methode wird aufgerufen. Auch, wenn Steuerelemente im seitenpersistenten Format in deklariert sind eine <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone auf einer Webseite, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> Methode wird aufgerufen, für alle Steuerelemente, die nicht <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente.  
  
 Wenn Sie ein Steuerelement programmgesteuert zu einer Zone hinzufügen, ein typischer Ansatz ist die Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> Methode, um das Steuerelement mit zu umschließen eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt aus, und rufen Sie dann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> Methode, um das Steuerelement hinzufügen, um die Auflistung aller <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente auf der Seite, die verweist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> Methode. In der `Button2_Click method`, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> aufgerufen, um das Umschließen einer <xref:System.Web.UI.WebControls.Calendar> steuern Sie mit eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt, bevor Sie sie zur Zone hinzufügen.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Diese Methode kann überschrieben werden, um eine abgeleitete verwenden <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> Klasse stattdessen der Basisklasse bereitgestellt, mit dem Webparts-Steuerelementsatz.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWarning">
      <MemberSignature Language="C#" Value="public virtual string DeleteWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte Warnmeldung ab oder legt diese fest, die angezeigt wird, wenn Endbenutzer ein Steuerelement löschen.</summary>
        <value>Eine Zeichenfolge, die den Text der Warnmeldung enthält. Der Standardwert ist eine lokalisierte Warnmeldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Benutzer löscht eine <xref:System.Web.UI.WebControls.WebParts.WebPart> steuern, die normalerweise eine Standard-Warnmeldung wird angezeigt. Sie warnt den Benutzer, wenn diese Instanz eines Steuerelements gelöscht wird, der Löschvorgang permanent ist. Gewährleistet Seitenentwickler die Benutzer eine Möglichkeit, eine neue Instanz des Steuerelements auf der Seite hinzufügen (z. B. einen Katalog <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, oder über eine programmgesteuerte Möglichkeit), aber die aktuelle Instanz eines Steuerelements, das gelöscht wird, wird dauerhaft entfernt. Falls gewünscht, enthält das Dialogfeld, die die Warnung angezeigt wird, eine Schaltfläche für den Benutzer, den Löschvorgang abzubrechen.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Eigenschaft ermöglicht Entwicklern, legen Sie die Warnmeldung, die dem Benutzer angezeigt wird.  
  
 Wenn ein Entwickler eine leere Zeichenfolge weist ("") Wert, der diese Eigenschaft, die keine Warnung Meldungsdialogfeld wird angezeigt, wenn ein Benutzer löscht eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Eigenschaft wird nicht angezeigt, im Fall von statischen <xref:System.Web.UI.WebControls.WebParts.WebPart> und Serversteuerelemente. Statische Steuerelemente sind Serversteuerelemente, die in deklariert sind eine <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone im Markup einer Webseite. Da solche Steuerelemente statisch sind, können nicht sie gelöscht werden, sodass die löschen-Warnmeldung in diesem Fall nicht angezeigt wird. Statische Steuerelemente können von einem Benutzer geschlossen werden, aber ein geschlossene Steuerelement wird hinzugefügt, dem Seitenkatalog, aus dem sie zurück zur Seite durch einen Benutzer hinzugefügt werden kann während ein gelöschten Steuerelements nicht wiederhergestellt werden kann.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Eigenschaft deklarativ und programmgesteuert.  
  
 Es gibt vier Teilen dem Codebeispiel:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, den Anzeigemodus ändern.  
  
-   Eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement.  
  
-   Eine Webseite.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Codebeispiels wird die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Beispiel verwendet die Methode der dynamischen Kompilierung. Es gibt also keine `Assembly` -Attribut in der `Register` -Direktive für dieses Steuerelement am oberen Rand der Webseite. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/textdisplaywebpart.vb#3)]  
  
 Der dritte Teil des Codebeispiels wird die Webseite. Die Seite enthält eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone mit dem benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement in der Zone, deklariert, so, dass ein Benutzer es auf der Seite zur Laufzeit hinzufügen kann. Beachten Sie, dass nur dynamische Steuerelemente (Steuerelemente, die programmgesteuert oder aus einem Katalog an, wie dieses zu einer Seite hinzugefügt werden), die von einer Seite gelöscht werden können. Statische Steuerelemente (Steuerelemente, die in deklariert sind eine <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone im Markup der Seite) können geschlossen, aber nie gelöscht. Die `<asp:webpartmanager>` -Element deklariert einen benutzerdefinierten Wert für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> -Eigenschaft mithilfe der `DeleteWarning` Attribut. Die `Button1_Click` -Methode weist einen anderen benutzerdefinierten Wert, der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> Eigenschaft.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/deleteWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/deleteWarningVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, müssen Sie fügen die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement auf der Seite. Mithilfe der **Anzeigemodus** Dropdown-Listenfeld-Steuerelement, Katalogmodus wählen. Wenn der Katalog angezeigt wird, wählen Sie das Kontrollkästchen neben dem benutzerdefinierten Steuerelement, klicken Sie auf **hinzufügen** auf der Seite hinzugefügt wird, und klicken Sie dann auf **schließen** in den Durchsuchen-Modus zurück. Nun, da das Steuerelement sichtbar ist, können Sie es löschen. Mithilfe der **Anzeigemodus** erneut zu steuern, schalten Sie die Seite im Entwurfsmodus (Sie können keine Steuerelemente löschen, während die Seite im Durchsuchen-Modus befindet). Klicken Sie auf das Verbenmenü (das Pfeilsymbol) im Header des der <xref:System.Web.UI.WebControls.WebParts.WebPart> steuern, und wählen Sie **löschen**. Die Warnung, die Sie festlegen, auf die `DeleteWarning` Attribut angezeigt wird. Klicken Sie auf **Abbrechen**. Klicken Sie nun auf die Schaltfläche **Änderung löschen Warnung**, welche Änderungen programmgesteuert den Wert der Eigenschaft. Wählen Sie im Menü Verben für das Steuerelement **löschen** erneut, und dieses Mal die anderen Warnmeldung angezeigt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.DeleteWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DeleteWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das zu löschende Serversteuerelement.</param>
        <summary>Löscht eine dynamische Instanz eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements unwiderruflich von einer Webseite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> -Methode dauerhaft entfernt das Steuerelement, dargestellt durch die `webPart` Parameter von einer Seite. Im Gegensatz zu einem geschlossenen Steuerelement, hinzugefügt wird und auf die <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> steuern und können hinzugefügt werden zurück zur Seite, eine Instanz eines gelöschten kann nie wieder zur Seite hinzugefügt werden.  
  
> [!NOTE]
>  Vom Webparts-Steuerelement implementierte festgelegt ist, wird die Möglichkeit, Benutzern, löschen eine dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement hängt von der Benutzer und dem Personalisierungsbereich, in dem das Steuerelement zu einer Seite hinzugefügt wurde. Wenn das Steuerelement wird hinzugefügt, wenn die Seite im freigegebenen Bereich wird, (durch einen Benutzer, der über Berechtigungen verfügt), kann dann das Steuerelement von einzelnen Benutzern gelöscht werden, wenn die Seite im Benutzerbereich befindet.  
  
 Nur dynamische Steuerelemente können gelöscht werden. Dynamische Steuerelemente werden programmgesteuert oder durch Hinzufügen von Steuerelementen aus einem Katalog Benutzer zu einer Seite hinzugefügt. Statische Steuerelemente werden zu einer Seite deklarativ im Markup oder Persistenz-Format hinzugefügt. Da die deklarative Tags im Markup permanent vorhanden sind, statische Steuerelemente können nicht gelöscht werden, aber geschlossen und erneut geöffnet werden können.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>-Methode verwenden. Beim ersten die **Kalender hinzufügen** Schaltfläche geklickt wird, den Code im Ereignis Ereignishandler erstellt ein <xref:System.Web.UI.WebControls.Calendar> steuern, und fügt es einer Zone als ein <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt. Da das Steuerelement programmgesteuert hinzugefügt wird, es ist ein dynamisches Steuerelement und aus diesem Grund kann gelöscht werden. Wenn ein Benutzer klickt auf die **Kalender löschen** Schaltfläche der Code stellt sicher, dass das Steuerelement vorhanden ist, und ihn dann durch Aufrufen löscht der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> Methode.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DesignDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DesignDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesignDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Anzeigemodus dar, in dem das Layout von Webseiten mit Webparts-Steuerelementen geändert wird. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> Feld verweist auf eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> -Objekt, das erstellt und enthalten die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Da dies ein statisches Objekt ist, sehen Sie sich diese direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse ohne eine Instanz des Steuerelements.  
  
 Wenn eine Seite mit Webparts-zuerst geladen Steuerelemente, es befindet sich im <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (Durchsuchen-Modus) in der Standardeinstellung. Wenn möchten, dass Benutzer das Layout der Seite zu ändern, indem Sie Steuerelemente in anderen Zonen oder innerhalb von Zonen zu verschieben, müssen sie zuerst wechseln, auf die Seite, um <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> (Entwurfsmodus). Im Entwurfsmodus befindet die Benutzeroberfläche (UI) für die verschiedenen Zonen wird angezeigt, und Benutzer können Steuerelemente ziehen, um das Layout zu ändern.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Arbeiten Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> programmgesteuert Feld. Der Code füllt eine Dropdown-Liste mit unterstützten Anzeigemodi für die Seite, die in diesem Fall durchsuchen und Entwurf sind. Beachten Sie, dass in der `Page_PreRender` -Methode, die dem Code wird überprüft, ob die aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>. Wenn dies der Fall ist, `Label1` werden angezeigt, und falls nicht, `Label1` ausgeblendet wird.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/CS/wpmgrDesignDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/VB/wpmgrDesignDisplayModevb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, können Sie im Durchsuchen-Modus wird standardmäßig ein. Beachten Sie, dass die Bezeichnung auf der Seite ausgeblendet ist. Verwenden Sie das Dropdown-Listenfeld-Steuerelement, um die Seite in den Entwurfsmodus zu wechseln. Beachten Sie, dass aufgrund des Codes in der `Page_PreRender` -Methode, die die Bezeichnung ist jetzt sichtbar.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Webparts-Seite-Anzeigemodus</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisconnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DisconnectWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DisconnectWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, dessen Verbindungen getrennt werden müssen.</param>
        <summary>Entfernt ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement, das geschlossen oder gelöscht wird, aus allen Verbindungen, an denen es beteiligt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Methode wird intern vom Webparts-Steuerelement festgelegt, wenn ein Steuerelement auf einer Seite geschlossen oder, die von einer Seite gelöscht aufgerufen. In diesem Fall wird die Methode aufgerufen, um entfernen Sie das Steuerelement aus allen Verbindungen, an denen sie als eine Consumer- oder Anbietersteuerelement beteiligt. Wenn das Steuerelement aus eine Verbindung entfernt wird, ruft diese Methode auch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> Beenden alle Verbindungen in der Methode `webPart` war kompliziert.  
  
 Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> aufgerufen wird, löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis. Normalerweise kann dieses Ereignis abgebrochen werden, jedoch in beiden Fällen es kann nicht abgebrochen werden. Ein Fall tritt auf, während der Anforderungen auf der Seite bei der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Methode wird aufgerufen. Liegt ein Konflikt zwischen vorhandene Verbindungen können die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Methode aufgerufen, um eine in Konflikt stehende Verbindungen, und klicken Sie in diesem Fall schließen die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis kann nicht abgebrochen werden, da der Konflikt aufgelöst werden muss.  
  
 Im anderen Fall tritt auf, wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Serversteuerelement, das derzeit verbunden ist geschlossen oder gelöscht wird. In diesem Fall aufgrund des Steuerelements wird von Seite entfernt wird die, muss die Verbindung auch aus diesem Grund beendet werden nicht zum Abbrechen kann der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis, um den Prozess beim Beenden einer Verbindung zu unterbrechen. Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode verwenden. Verwenden zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, die Webseite können Sie eine Verbindung zwischen den Steuerelementen auf eine Schaltfläche klicken, während eine andere Schaltfläche Trennen die Steuerelemente kann zu erstellen. Wenn Sie eines der Steuerelemente, schließen während die Seite im Durchsuchen-Modus und die Steuerelemente miteinander verbunden sind, eine Überschreibung von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Methode trennt das Steuerelement geschlossene, beendet die Verbindung und eine Meldung angezeigt.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement für Wechseln des Anzeigemodus.  
  
-   Eine Quelldatei, die mit einem benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente.  
  
-   Eine Webseite zum Hosten der Steuerelemente.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil ist die Datei mit dem Quellcode für die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden soll, sowie eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Beispiel verwendet die dynamische Kompilierung, sodass die `Register` Richtlinie, die diese Komponenten auf der Webseite verweist dementsprechend deklariert wird am oberen Rand der Webseite. Eine exemplarische Vorgehensweise, die Optionen zur Kompilierung veranschaulicht, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 Beachten Sie im Quellcode, das geerbte Steuerelement `MyWebPartManager` , überschreibt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Methode. Diese Methode überprüft jede Verbindung in einer Seite, um festzustellen, ob das Steuerelement, das geschlossen wird die Verbindung beteiligt ist und, wenn dies der Fall ist, ruft der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> Methode, um die Verbindung zu beenden. Dies ist identisch mit die grundlegende Implementierung der Methode in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Die überschriebene Methode passt klicken Sie dann die grundlegende Implementierung durch eine Meldung in die Seite geschrieben.  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Der dritte Teil des Codebeispiels wird die Webseite. Beachten Sie, dass im oberen Bereich, er enthält `Register` Anweisungen zum Registrieren das Benutzersteuerelement, und die dynamisch kompilierte Assembly mit der <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Die Seite enthält zwei primäre Methoden. Die `Button1_Click` Methode erstellt eine Verbindung zwischen den Steuerelementen, während die `Button2_Click` Methode trennt die Steuerelemente.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Nachdem Sie die Seite laden, klicken Sie auf die **Connect** Schaltfläche, um die Steuerelemente zu verbinden. Klicken Sie dann klicken Sie auf das im Verbenmenü in eines der Steuerelemente (auf den Pfeil nach unten im Header des Steuerelements), und wählen **schließen** im Verbenmenü. Wenn Sie versuchen, schließen Sie das Steuerelement, die überschriebene Methode wird aufgerufen, die Verbindung wird beendet und die Meldung geschrieben wird, auf der Seite. Wenn Sie die Seite, um das Steuerelement geschlossen wiederherstellen und mit anderen Optionen experimentieren, klicken zurücksetzen möchten die **Reset User State** Link zum Entfernen von Personalisierungsdaten, und die Seite mit den ursprünglichen Zustand wiederherzustellen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebParts">
      <MemberSignature Language="C#" Value="public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectWebParts(class System.Web.UI.WebControls.WebParts.WebPartConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisconnectWebParts (connection As WebPartConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectWebParts(System::Web::UI::WebControls::WebParts::WebPartConnection ^ connection);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit&#xA;override this.DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit" Usage="webPartManager.DisconnectWebParts connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, die die Verbindung zwischen Serversteuerelementen darstellt.</param>
        <summary>Führt den Prozess des Trennens von auf einer Webseite verbundenen Serversteuerelementen aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> -Methode führt den vollständigen Prozess beim Beenden einer Verbindung zwischen <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Serversteuerelemente, wenn Sie sie übergeben die `connection` Parameter.  
  
 Diese Methode wird verwendet, um Steuerelemente zu trennen, wenn man eine `<asp:connectionszone>` Element auf einer Webseite, um eine Benutzeroberfläche (UI) zum Verwalten von Verbindungen bereitzustellen. Wenn eine Seite in Verbindungsanzeigemodus (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>), eine aktuelle Verbindung vorhanden ist, und Benutzer können eine Schaltfläche, die aufruft, klicken Sie auf die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> Methode, um die Verbindung zu beenden.  
  
 Sie können auch aufrufen, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> Methode direkt aus Ihrem Code, wenn Sie Steuerelemente programmgesteuert und ohne hinzuzufügende trennen möchten eine `<asp:connectionszone>` Element zu einer Seite.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode verwenden. Verwenden zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, die Webseite können Sie eine Verbindung zwischen den Steuerelementen auf eine Schaltfläche klicken, während eine andere Schaltfläche Trennen die Steuerelemente kann zu erstellen.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement für Wechseln des Anzeigemodus.  
  
-   Eine Quelldatei, die mit einem benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente.  
  
-   Eine Webseite zum Hosten der Steuerelemente.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil ist eine Datei mit den Quellcode für die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden soll. Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Beispiel verwendet die dynamische Kompilierung, sodass die `Register` Richtlinie, die diese Komponenten auf der Webseite verweist dementsprechend deklariert wird am oberen Rand der Webseite. Eine exemplarische Vorgehensweise, die Optionen zur Kompilierung veranschaulicht, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Der dritte Teil des Codebeispiels wird die Webseite. Beachten Sie, dass im oberen Bereich, er enthält `Register` Anweisungen zum Registrieren das Benutzersteuerelement und die dynamisch kompilierte Assembly mit der <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Die Seite enthält zwei primäre Methoden. Die `Button1_Click` Methode erstellt eine Verbindung zwischen den Steuerelementen, und die `Button2_Click` Methode trennt die Steuerelemente.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Nachdem Sie die Seite geladen haben, können Sie klicken die **Connect** Schaltfläche, um die Steuerelemente zu verbinden. Wenn Sie in das Textfeld-Steuerelement Text eingeben, und klicken Sie dann auf die **EINGABETASTE** Schaltfläche der Text erscheint in der verbundenes Steuerelement (es wird nicht angezeigt, wenn die Steuerelemente getrennt wurden). Wenn Sie auf die **trennen** Schaltfläche, die Steuerelemente werden getrennt. Sie können den Status der Verbindung der Steuerelemente überprüfen, indem Sie mit der **Anzeigemodus** Dropdown-Listenfeld-Steuerelement auf die Seite in wechseln **Connect** Modus. Klicken Sie anschließend auf das Verbenmenü (dargestellt durch einen Pfeil) in der Titelleiste eines der Steuerelemente, und wählen die **Connect** Element. Die Benutzeroberfläche für Verbindungen wird angezeigt. Es ist verfügbar, da gibt es eine `<asp:connectionszone>` Element deklariert wird, auf der Seite. Auch können Sie eine Verbindung herstellen und trennen die Steuerelemente auf dieser Benutzeroberfläche.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connection" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="connection" /> ist weder in <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> noch in <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> enthalten.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> ist schreibgeschützt.  
  
- oder - 
 <paramref name="connection" /> wurde bereits von <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> getrennt.  
  
- oder - 
 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> ist schreibgeschützt.  
  
- oder - 
 <paramref name="connection" /> wurde bereits von <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> getrennt.</exception>
        <block subset="none" type="overrides"><para>Sie können außer Kraft setzen der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" /> Methode, wenn Sie die standardmäßige Implementierung für das Trennen der Verbindung ändern möchten <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Steuerelemente. Wenn Sie die Methode überschreiben und Sie einfach eine Implementierung der vorhandenen Methode hinzufügen möchten, können Sie die Basismethode vor dem Ausführen von Ihren eigenen Codes aufrufen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayMode As WebPartDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DisplayMode { System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ get(); void set(System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktiven Anzeigemodus für eine Webseite ab, die Webparts-Steuerelemente enthält, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />, der den Anzeigemodus einer Seite bestimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Seite mit Webparts-Steuerelemente ist immer in einem von mehreren möglichen Anzeigemodi. Weitere Informationen zu den Anzeigemodi finden Sie unter [Web Parts Page Display Modes](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4).  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse erstellt, die Anzeigemodi für eine Webseite. Verwenden die Basis <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> -Klasse, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement erstellt mehrere standardmäßige Anzeige, die für Seiten verwendet werden kann, die Webparts-Steuerelemente enthalten. Dieser standard Anzeigemodi in beschrieben werden die <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Übersicht über die Klasse.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verwaltet auch die Anzeigemodi für Seiten, die Webparts-Steuerelemente verwenden. Mithilfe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> -Eigenschaft, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement behält einen Verweis auf den aktuellen Anzeigemodus auf einer Seite. Sie können auch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> Eigenschaft, um eine Seite in verschiedenen Anzeigemodi zu wechseln. Ein Beispiel für das Ändern des Anzeigemodus auf einer Seite, die Webparts-Steuerelemente verwendet, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Im Rahmen der Verwaltung des Anzeigemodus der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement bietet auch Ereignisse und Ereignishandler, die im Zusammenhang mit Modi angezeigt, wie z. B. die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> Methode und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> Methode. Diese Methoden bieten einen Mechanismus zum Anpassen des Verhaltens einer Seite, und klicken Sie zum Hinzufügen von einem benutzerdefinierten Anzeigemodus.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die programmgesteuerte Verwendung von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> Eigenschaft. Nach dem Laden der Seite in einem Browser, können Sie die Schaltflächen am unteren Rand der Seite verwenden, um Anzeigemodi zu wechseln. Die Seite ist im Durchsuchen-Modus standardmäßig geladen wird. Wenn Sie in den Entwurfsmodus wechseln, können Sie die Serversteuerelemente aus einer Zone in eine andere ziehen oder ordnen Sie zwei Steuerelemente in einer Zone. Wenn Sie sich den Bearbeitungsmodus wechseln, können Sie das Verbenmenü im Header des entweder der Serversteuerelemente, wählen klicken **bearbeiten**, und bearbeiten Sie das Steuerelement mithilfe der bereitgestellten bearbeiten-Benutzeroberfläche (UI).  
  
> [!NOTE]
>  Umschalten zwischen Anzeigemodus in einer Webparts-Anwendung kommt sehr häufig vor, und empfiehlt es sich um eine konsistente und wiederverwendbare ermöglichen möchten, auf alle Seiten, die Webparts-Steuerelemente enthalten. Ein Beispiel für ein Benutzersteuerelement, Modi und die Änderungen angezeigt werden, die auf zahlreichen Seiten wiederverwendet werden kann, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/CS/wpmgrDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/VB/wpmgrDisplayModevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Objekt, das der Eigenschaft zugewiesen wird, lautet <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Objekt, das der Eigenschaft zugewiesen wird, entspricht keinem der unterstützten Anzeigemodi.  
  
- oder - 
Das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Objekt, das der Eigenschaft zugewiesen wird, ist deaktiviert.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Webparts-Seite-Anzeigemodus</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Exemplarische Vorgehensweise: Wechseln des Anzeigemodus auf einer Webparts-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanged As WebPartDisplayModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventHandler ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " Usage="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem sich der aktuelle Anzeigemodus auf einer Webparts-Seite geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anzeigemodi sind ein wesentlicher Bestandteil der Webparts-Anwendungen. Wenn Benutzer in einen anderen Anzeigemodus auf einer Webseite wechseln, wird die Seite häufig auf einer sehr unterschiedlichen Darstellung, abhängig vom Zweck der neue Anzeigemodus dauern. Nachdem Sie ein Anzeigemodus geändert hat, können Sie bestimmte Änderungen in der Benutzeroberfläche (UI), vornehmen möchten z. B. aus- oder Einblenden von einige Steuerelemente, Ändern der Darstellung der ausgewählten UI-Elemente, und so weiter.  
  
> [!NOTE]
>  Weitere Informationen zu Anzeigemodi finden Sie unter [Web Parts Page Display Modes](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Weitere Informationen zum Verwenden von Ereignissen finden Sie unter [Vorgehensweise: Verarbeiten von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanging As WebPartDisplayModeCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventHandler ^ DisplayModeChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " Usage="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Benutzer auf einer Webseite auf ein Verb klickt, das den Prozess des Umschaltens in einen anderen Anzeigemodus startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anzeigemodi sind ein wesentlicher Bestandteil der Webparts-Anwendungen. Wenn Benutzer in einen anderen Anzeigemodus auf einer Webseite wechseln, wird die Seite häufig auf einer sehr unterschiedlichen Darstellung, abhängig vom Zweck der neue Anzeigemodus dauern. Nachdem ein Benutzer, ein neuer Anzeigemodus ändern, indem Sie auf ein Verb initiiert, Sie möchten bestimmte Änderungen durch den Einsatz in der Benutzeroberfläche (UI), die <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> Eigenschaft, um zu bestimmen, wie der neue Anzeigemodus sein wird, und klicken Sie dann ändern verschiedener UI Elemente entsprechend. Eine gute Möglichkeit hierzu ist, überschreiben die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> Methode zum Anpassen der Benutzeroberfläche.  
  
> [!NOTE]
>  Weitere Informationen zu Anzeigemodi finden Sie unter [Web Parts Page Display Modes](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Weitere Informationen zum Verwenden von Ereignissen finden Sie unter [Vorgehensweise: Verarbeiten von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ DisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine schreibgeschützte Auflistung aller Anzeigemodi ab, die einem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, die den Satz der dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Steuerelement zugeordneten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Objekte enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> Eigenschaftsverweisen, die alle zugeordneten Anzeigemodi, im Unterschied zu den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> -Eigenschaft, die nur die Anzeigemodi, die verfügbar sind verweist (unterstützt), auf der aktuellen Seite.  
  
 Zwei der bereitgestellten Anzeigemodi, durchsuchen und -Entwurf werden immer auf einer Seite unterstützt. Die anderen drei Anzeigemodi, bearbeiten, Katalog und Verbindungen werden unterstützt, nur, wenn eine Seite mit den entsprechenden Typ der Zone, die für einen bestimmten Anzeigemodus Arbeit erforderlich ist. Wenn auf Ihrer Seite keine enthält z. B. ein <xref:System.Web.UI.WebControls.WebParts.EditorZone> Zone der Bearbeitungsanzeigemodus würde angezeigt, in der Auflistung, die auf der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> -Eigenschaft, jedoch nicht in der Auflistung, die auf angezeigt wird der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> Eigenschaft. Der Code verwendet diese Eigenschaft, um die Liste mit allen in der Webparts-Steuerelementsatz verfügbaren Anzeigemodi aufgefüllt, auch diejenigen, die auf der aktuellen Seite nicht unterstützt werden. In diesem Fall werden der Katalog- und -Modi werden nicht unterstützt, da Zonen nicht auf der Seite sind die entsprechenden erforderlichen.  
  
 Die anderen drei Anzeigemodi: Durchsuchen, Entwerfen und bearbeiten – werden auf der Seite unterstützt. Bearbeiten-Modus wird unterstützt, da die Seite enthält eine <xref:System.Web.UI.WebControls.WebParts.EditorZone> -Zone zu, während der durchsuchen und Entwurfsmodi immer unterstützt.  
  
 Laden Sie die Seite in einem Browser, können Sie das Dropdown-Listenfeld-Steuerelement verwenden, um die Seite Durchsuchen-Modus in den Entwurfsmodus zu wechseln und dann in den Bearbeitungsmodus. Im Bearbeitungsmodus befindet, können Sie auf das Dropdown-Verbenmenü in den Header von einem der Serversteuerelemente, und wählen **bearbeiten** Bearbeitung des Steuerelements. Beachten Sie, dass bei Auswahl von **Katalog** oder **Connect** eine Fehlerseite wird in der Dropdown-Liste generiert.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/CS/wpmgrDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/VB/wpmgrDisplayModesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Webparts-Seite-Anzeigemodus</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Exemplarische Vorgehensweise: Wechseln des Anzeigemodus auf einer Webparts-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="DynamicConnections">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DynamicConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ DynamicConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung aller dynamischen Verbindungen ab, die auf einer Webseite derzeit vorhanden sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, die Verweise auf alle dynamischen Verbindungen auf einer Seite enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamische sind Verbindungen, die im Gegensatz zu statisch programmgesteuert erstellt werden. Statische Verbindungen werden erstellt, indem Sie sie in das Markup der Web Forms-Seite zu deklarieren. Dynamische Verbindungen werden entweder programmgesteuert oder durch einen Benutzer, die das Erstellen einer Verbindung mit der Verbindungs-Benutzeroberfläche (UI) gebildet.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> -Auflistung, es ist jedoch schreibgeschützt, und sein Inhalt kann nicht geändert werden. bietet programmgesteuerten Zugriff auf jedes dynamische Verbindungsobjekt.  
  
> [!NOTE]
>  Allgemeiner Vorgänge wie z. B. eine Verbindung herstellen oder Trennen der Verbindung <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, Entwickler sollten die öffentlichen Methoden für verwenden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse, z. B. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, anstatt zu versuchen, eine direkte Verbindung zu ändern. Objekte in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> Auflistung.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="EditDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ EditDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Anzeigemodus dar, in dem Endbenutzer Serversteuerelemente bearbeiten können. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> Feld verweist auf eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> -Objekt, das erstellt und enthalten die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Da dies ein statisches Objekt ist, sehen Sie sich diese direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse ohne eine Instanz des Steuerelements.  
  
 Wenn eine Seite mit Webparts-zuerst geladen Steuerelemente, es befindet sich im <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (Durchsuchen-Modus) in der Standardeinstellung. Wenn Benutzer soll zu bearbeiten oder ein Serversteuerelement, müssen sie die Seite, um wechseln <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> (Bearbeitungsmodus). Zweitens müssen sie ein Steuerelement zu bearbeiten, indem Sie auf das Bearbeiten-Verb für das Verbenmenü im Header des gewünschten Steuerelements, auswählen. Nachdem das Steuerelement im Bearbeitungsmodus befindet, wird die Bearbeitung Benutzeroberfläche (UI) zum Bearbeiten des ausgewählten Steuerelements angezeigt.  
  
 Um den Bearbeitungsmodus auf einer Seite zu aktivieren, muss die Seite enthalten mindestens eine <xref:System.Web.UI.WebControls.WebParts.EditorZone> Zone, die eine oder mehrere der den bereitgestellten Bearbeitungsstil enthält Steuerelemente, z. B. die <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> Steuerelement oder benutzerdefinierte Steuerelemente.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Arbeiten Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> programmgesteuert Feld. Der Code füllt eine Dropdown-Liste mit den unterstützten Anzeigemodi für die Seite, die in diesem Fall durchsuchen, Entwerfen und bearbeiten. Zur Unterstützung der Bearbeitung einer `<asp:EditorZone>` Element ist, auf der Seite. Beachten Sie, dass in der `Page_PreRender` -Methode, die dem Code wird überprüft, ob die aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> -Eigenschaftensatz auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>. Wenn dies der Fall ist, `Label1` werden angezeigt, und falls nicht, `Label1` ausgeblendet wird.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/CS/wpmgrEditDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/VB/wpmgrEditDisplayModevb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, können Sie im Durchsuchen-Modus wird standardmäßig ein. Beachten Sie, dass die Bezeichnung auf der Seite ausgeblendet ist. Verwenden Sie das Dropdown-Listenfeld-Steuerelement, um die Seite, um den Bearbeitungsmodus zu wechseln. Beachten Sie, dass aufgrund des Codes in der `Page_PreRender` -Methode, die die Bezeichnung ist jetzt sichtbar. Klicken Sie auf die **bearbeiten** Verb im Verbmenü auf eines der Steuerelemente, um dieses Steuerelement bearbeitet werden kann.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Webparts-Seite-Anzeigemodus</related>
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public virtual bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt ihn fest, der bestimmt, ob auf einer Webseite mit einem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement clientseitige Skripts aktiviert sind.</summary>
        <value>Ein boolescher Wert, der angibt, ob auf der Seite Clientskripts ausgeführt werden können. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> Eigenschaft bietet eine Möglichkeit für Entwickler zum Deaktivieren von Clientskripts. Sie sollten aus Sicherheitsgründen von Clientskripts deaktivieren oder um sicherzustellen, dass alle Benutzer eine Seite eine vergleichbare benutzerfreundlichkeit hat, selbst wenn sie andere Browser verwenden.  
  
 Sie können durch Hinzufügen von Clientskripts deaktivieren eine `EnableClientScript` -Attribut auf die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Element auf einer Webseite, wie die folgende Codezeile deklarativen Code:  
  
 `<asp:webpartmanager id="manager" runat="server"`  
  
 `EnableClientScript="false" />`  
  
 Darüber hinaus können Entwickler diese Eigenschaft eliminieren, indem Sie erben von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Klasse und Festlegen der standardmäßigen Wert `false`.  
  
 Der Webparts-Steuerelementsatz verwendet Clientskripts ausgeführt werden, um einige der Client-Benutzeroberfläche (UI) und Personalisierungsfeatures zu ermöglichen. Wenn Sie Client deaktivieren Skripterstellung, Webparts, Steuerelemente weiterhin funktionieren, aber einige Features sind deaktiviert. Die Möglichkeit, ziehen Steuerelemente in anderen Zonen ist deaktiviert, und die Möglichkeit, die Verben in einem Dropdown-Verbenmenü in der Titelleiste eines Steuerelements zu rendern, (die Verben werden stattdessen in der Titelleiste des Steuerelements als Links angezeigt).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, dass die Verwendung von Designs auf einer Webseite aktiviert ist.</summary>
        <value>Ein boolescher Wert, der angibt, ob Designs aktiviert sind. <see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement überschreibt die <xref:System.Web.UI.Control.EnableTheming%2A> Eigenschaft, um sicherzustellen, dass der Wert immer zurückgegeben `true`. Dies geschieht, da die Webparts-Steuerelementsatz die Verwendung von Designs erfordert, um die Webparts zu rendern steuert, die untergeordnete Steuerelemente von werden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement, und dass die Benutzeroberfläche (UI) einer Webseite zu bilden. Z. B. Designs werden verwendet, um die verschiedenen Zonen zu rendern, und die Steuerelemente in den Zonen, einschließlich der verschiedenen Typen von Teilsteuerelementen (Steuerelemente, die von erben die <xref:System.Web.UI.WebControls.WebParts.Part> Klasse), Steuerelemente, Serversteuerelemente für ASP.NET und benutzerdefinierten Server -Steuerelemente.  
  
 Obwohl die überschriebene <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A> Eigenschaft wird als eine Lese-/Schreibzugriff-Eigenschaft in Übereinstimmung mit der base-Eigenschaft implementiert, die Eigenschaft kann nicht festgelegt werden, da standardmäßig immer einen Wert zurückgeben müssen `true`. Wenn Sie versuchen, legen Sie die Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, den Eigenschaftswert festzulegen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartConnecting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartConnecting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartConnecting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartConnecting();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartConnecting : unit -&gt; unit&#xA;override this.EndWebPartConnecting : unit -&gt; unit" Usage="webPartManager.EndWebPartConnecting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den Prozess ab, mit dem eine Verbindung zwischen einem <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement und einem anderen Steuerelement erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> -Methode schließt den Prozess der verbindungsherstellung ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement zu einem anderen Steuerelement. Dies ist das Gegenstück zu der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> Methode.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> Methode stellt sicher, dass die Personalisierungsobjekt verweist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Eigenschaft ist die ist erforderlich, da zum Erstellen einer Verbindung selbst ein Typ, der Personalisierung wird geändert. Die Methode stellt dann sicher, dass die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Objekt ist kein `null`, und ruft schließlich den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Steuerelement, auf das die <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Eigenschaft verweist, ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Entwickler, die zum Erweitern der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement möglicherweise für diese Methode in einer abgeleiteten Klasse außer Kraft setzen möchten. Eine Herangehensweise bestünde die Basismethode aufrufen, und klicken Sie dann Hinzufügen einer weiteren benutzerdefinierten Verarbeitung, oder Sie vollständig benutzerdefiniert anpassen, den gesamten Prozess eine Verbindung zwischen Steuerelementen abschließen möchten.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartEditing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartEditing();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartEditing : unit -&gt; unit&#xA;override this.EndWebPartEditing : unit -&gt; unit" Usage="webPartManager.EndWebPartEditing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den Prozess der Bearbeitung eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> Methode beendet den Prozess der Bearbeitung einer <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Dies ist das Gegenstück zu der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Methode.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> Methode stellt sicher, dass die Personalisierungsobjekt verweist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Eigenschaft änderbar ist, das ist erforderlich, da die Bearbeitung eines Steuerelements ein Prozess ist, die geändert werden kann. Die Methode stellt dann sicher, dass die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Objekt ist kein `null`, sodass das derzeit ausgewählte <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement geändert werden kann, und ruft schließlich den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Steuerelement, auf das die <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Eigenschaft verweist, ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Entwickler, die zum Erweitern der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement möglicherweise für diese Methode in einer abgeleiteten Klasse außer Kraft setzen möchten. Eine Herangehensweise bestünde die Basismethode aufrufen, und klicken Sie dann Hinzufügen einer weiteren benutzerdefinierten Verarbeitung, oder den gesamten Prozess der Abschluss der Bearbeitung eines Steuerelements vollständig anpassen möchten. Sie können z. B. in die Überschreibungsmethode, zuerst die Basismethode aufrufen und die dann Hinzufügen von Code, der bestimmt, welche Änderungen vorgenommen wurden und zeigt die Liste der Änderungen an den Endbenutzer als Bestätigung.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ExportSensitiveDataWarning">
      <MemberSignature Language="C#" Value="public virtual string ExportSensitiveDataWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExportSensitiveDataWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportSensitiveDataWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExportSensitiveDataWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExportSensitiveDataWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text einer Warnmeldung ab, die angezeigt wird, wenn versucht wird, vertrauliche Zustandsdaten aus einem <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zu exportieren, oder legt diesen Text fest.</summary>
        <value>Eine Zeichenfolge, die die Warnmeldung enthält. Die Standardmeldung ist ein von .NET Framework bereitgestellter kulturspezifischer Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Benutzer versucht, vertrauliche Zustandsdaten aus Exportieren einer <xref:System.Web.UI.WebControls.WebParts.WebPart> steuern, wenn die exportierte Daten stammen aus einem Element, das im Quellcode als sensibel markiert wurde, wird eine Warnmeldung angezeigt, für den Benutzer in einem Meldungsfeld an, die sie auffordert, die sensible Daten exportiert werden und eine Möglichkeit zum Abbrechen des Exports. Entwickler können einen bestimmten Member-Daten als sensibel markieren, durch Festlegen der `isSensitive` Parameter der `[Personalizable]` Attribut `true` für das Element. Weitere Informationen zu diesem Attribut und der Parameter finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> Klasse.  
  
> [!IMPORTANT]
>  Wenn Sie das Exportfeature von Webparts verwenden, konnte möglicherweise sensible Daten für nicht autorisierte Benutzer exportiert werden. Weitere Informationen zum Schutz vor dieser Bedrohung finden Sie unter [Webparts-Seiten Sichern](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 Die standardmeldung angezeigt, wenn Benutzer versuchen, zu exportieren. Doch durch Zuweisen eines Werts zu den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> -Eigenschaft, können Sie eine benutzerdefinierte Warnmeldung angeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die deklarative Verwendung des der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> Eigenschaft.  
  
 Der Code für die folgende Webseite verwendet eine <xref:System.Web.UI.WebControls.BulletedList> steuern und platziert sie in einer Zone. Das Steuerelement umbrochen mit einer <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement zur Laufzeit, bei dem die "true" fungieren kann <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Die das Steuerelement exportierbar ein `ExportMode` -Attribut hinzugefügt, die `<asp:bulletedlist>` Element, und den Wert des Attributs auf festgelegt ist <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, was bedeutet, dass diese sowohl sensiblen als auch nicht sensible Daten exportiert werden kann. Beachten Sie außerdem, dass in der `<asp:webpartmanager>` -Element, das `ExportSensitiveDataWarning` Attribut ein benutzerdefinierten Wert zugewiesen wird.  
  
 Beachten Sie, dass für das Codebeispiel funktioniert, gibt es eine Einstellung, die Sie hinzufügen müssen, in der Datei "Web.config" So aktivieren Sie die Webparts-Description-Dateien exportieren. Stellen Sie sicher, dass Sie eine Web.config-Datei im gleichen Verzeichnis wie die Webseite für dieses Codebeispiel verfügen. In der `<system.web>` Abschnitt, stellen Sie sicher, dass eine `<webParts>` -Element mit einer `enableExport` -Attributsatz auf `true`, wie im folgenden Markup.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/CS/wpmgrExportSensitiveWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/VB/wpmgrExportSensitiveWarningVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, klicken Sie auf das Verbenmenü (dargestellt durch einen Pfeil nach unten), in der Titelleiste des Steuerelements, die die Links enthält. Wählen Sie in das Verbenmenü **exportieren**, und beachten Sie, die ein Meldungsfeld mit der benutzerdefinierten Warnung angezeigt wird. Wenn Sie den Export fortsetzen möchten, klicken Sie auf **OK**, sodass Sie eine lokale Kopie eine XML-Beschreibungsdatei mit allen Daten über das Steuerelement zu speichern.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ExportWebPart">
      <MemberSignature Language="C#" Value="public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit&#xA;override this.ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit" Usage="webPartManager.ExportWebPart (webPart, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="webPart">Das Steuerelement, dessen Daten exportiert werden.</param>
        <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />, der die exportierten Daten von <paramref name="webPart" /> in eine XML-Beschreibungsdatei schreibt.</param>
        <summary>Erstellt eine XML-Beschreibungsdatei, die Zustands- und Eigenschaftendaten für ein Serversteuerelement enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> -Methode assembliert verschiedene Zustands- und Eigenschaftendaten aus `webPart` in eine XML-Datei. Die Daten enthalten Informationen über das Steuerelement selbst, einschließlich der Assembly, Daten und die Daten. Der Benutzer, der den Export initiiert kann die XML-Datei auf dem Datenträger auf dem lokalen Computer oder im Netzwerk speichern. Andere Benutzer können dann die Description-Datei auf einer anderen Seite oder Website importieren und wenden Sie Zustands- und Eigenschaftendaten auf eine andere Instanz von `webPart`. Dies bietet einen schnellen und komfortablen Mechanismus für Benutzer freigeben und Wiederverwenden von ihren Einstellungen auf Steuerelemente, und es bietet auch Entwicklern eine Möglichkeit zum steuern das Aussehen und Verhalten der exportierten und importierten Steuerelemente.  
  
 Eigenschaften für `webPart` werden standardmäßig nicht exportiert. Um den Export einer Eigenschaft zu aktivieren, müssen Sie markieren Sie sie mit der `[Personalizable]` Attribut im Quellcode. Sie können optional auch markieren, eine exportierbare Eigenschaft enthält vertrauliche Daten durch Festlegen der `isSensitive` Parameter der `[Personalizable]` Attribut `true`. In der Standardeinstellung `isSensitive` ist `false`. Entwickler können den Parameter festlegen, um `true` um anzugeben, dass die Daten vertraulich sind.  
  
 So aktivieren Sie `webPart` für den Export, ein Entwickler legt diesen fest seine <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Eigenschaftswert, der entweder <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All> (zu dem alle personalisierbare und vertrauliche Eigenschaften gehört), oder <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, dem exportiert alles mit Ausnahme von vertraulichen Eigenschaften .  
  
> [!IMPORTANT]
>  Benutzern, die zum Exportieren von Daten von Steuerelementen, und klicken Sie zum Importieren von Daten in anderen Steuerelementen ermöglicht, ist einige Sicherheitsrisiken verbunden. Entwickler sollten den Ansatz, der weiter oben erläuterten, zum Schutz sensibler Daten verwenden, und wenn sie das Risiko der Offenlegung von Daten vollständig zu vermeiden möchten, sollten sie Export nicht aktivieren, auf `webPart` überhaupt. Ausführliche Informationen zu Sicherheitsproblemen Webparts, finden Sie unter [Webparts-Seiten Sichern](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="writer" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> ist nicht in der Auflistung von Steuerelementen enthalten, auf die in <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> verwiesen wird.  
  
- oder - 
Die <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />-Eigenschaft von <paramref name="webPart" /> ist auf den Wert <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" /> festgelegt. Dies bedeutet, dass der Export für <paramref name="webPart" /> deaktiviert ist.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Absichern von Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="webPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überschrieben, um zu verhindern, dass der Fokus auf das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement gesetzt wird, weil dieses keine Benutzeroberfläche besitzt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Focus%2A> Methode überschreibt die <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> -Methode, und löst eine Ausnahme aus, wenn ein Aufrufer die Methode aufruft. Da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement über keine Benutzeroberfläche verfügt und nicht für Benutzer sichtbar ist, kann es niemals zulassen, den Fokus auf sich selbst festgelegt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ein Aufrufer versucht, die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />-Methode aufzurufen, was bei einem Steuerelement ohne Benutzeroberfläche nicht unterstützt wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConsumerConnectionPointCollection ^ GetConsumerConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&#xA;override this.GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" Usage="webPartManager.GetConsumerConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein Serversteuerelement, das als Consumer in einer Verbindung fungiert.</param>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />-Objekten ab, die als Verbindungspunkte von einem Serversteuerelement verwendet werden können, das als Consumer in einer Webparts-Verbindung fungiert.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" />, die alle Verbindungspunkte im Consumer enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Immer eine Webparts-Verbindung umfasst genau zwei Steuerelemente fungiert als Anbieter von Daten, die andere als die Consumer der Daten fungiert. Jedes Steuerelement muss es sich um eine oder mehrere Methoden verfügen, die als Verbindungspunkte definiert sind. Im Fall von einem Consumer-Steuerelement, Verbindungspunkte sind <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekte. Abrufen der Consumerverbindungspunkten ist ein notwendiger Schritt im Erstellen einer Webparts-Verbindung.  
  
 Ein Consumer müssen immer mindestens ein Verbindungspunkt, um eine Verbindung herstellen zu können. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> Methode überprüft, ein Consumer-Steuerelement, und ruft eine Auflistung aller Verbindungspunkte ab. Wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement hat keine Verbindungspunkte, die Methode eine leere Auflistung zurück.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>-Methode verwenden.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden können, und ein `<asp:webpartmanager>` Element.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente und eine benutzerdefinierte Schnittstelle.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie im Thema [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Das deklarative Markup für die Webseite enthält `Register` -Direktiven für das Benutzersteuerelement und die benutzerdefinierten Steuerelemente. Gibt es eine `<asp:webpartmanager>` -Element, ein `<asp:webpartzone>` Element, in die benutzerdefinierten Steuerelemente, und ein `<asp:connectionszone>` Element. Beachten Sie, dass in der `Page_Load` -Methode, der Code überprüft, ob eine Verbindung ist bereits vorhanden und, falls nicht, einen Anbieter, Consumer und ihre entsprechenden Verbindungspunkten definiert und fügt dann eine neue Verbindung, auf den Satz von statischen Verbindungen auf die verwiesen wird durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Eigenschaft. Beachten Sie, dass die <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> -Objekt, das abgerufen wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> Methode übergeben, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Methode, um zu bestimmen, ob eine Verbindung zwischen den beiden Steuerelementen erstellt werden kann.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Der dritte Teil des Beispiels wird der Quellcode für die Steuerelemente. Sie können diesen Code sowie Anweisungen für die kompilieren, im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse.  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf die **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Connect** Verbinden-Modus zu wechseln. Connect-Modus verwendet die `<asp:connectionszone>` Element, um Verbindungen zwischen Steuerelementen erstellen können. Im Modus verbinden, klicken Sie auf den Pfeil nach unten, in der Titelleiste des Fensters der **Postleitzahl** steuern, um dessen Verbenmenü zu aktivieren, und klicken Sie dann auf **Connect**. Nachdem die Verbindung-Benutzeroberfläche (UI) angezeigt wird, beachten Sie, dass eine Verbindung mit dem Code, der in enthaltenen bereits erstellt wurde die `Page_Load` Methode. Wenn Sie in einer späteren Browsersitzung zu dieser Seite zurückkehren, wird diese statischen Verbindung bereits eingerichtet und muss nicht jedes Mal neu erstellt werden, die die Seite geladen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentWebPartManager">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::WebParts::WebPartManager ^ GetCurrentWebPartManager(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrentWebPartManager : System.Web.UI.Page -&gt; System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Die Webseite, die eine Instanz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> enthält.</param>
        <summary>Ruft einen Verweis auf die aktuelle Instanz des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements auf einer Seite ab.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, der auf die aktuelle Instanz des Steuerelements auf einer Seite verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> Methode ist nützlich in Kontexten, in dem Sie einen Verweis auf die aktuelle abrufen möchten <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Ist ein häufiges Szenario hierfür ist, wenn Sie ein benutzerdefiniertes Steuerelement schreiben, die während der Entwicklung wissen, welche die ID des kann nicht die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement auf der Seite werden.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> Methode ist statisch, damit Sie sie aufrufen können, direkt und ohne eine Instanz von einem <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement.  
  
 Einige Steuerelemente im Webparts-Steuerelementsatz, z. B. <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, verfügen über eine <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> -Eigenschaft, die einen Verweis auf die aktuelle abrufen kann <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Daher sollte bei der Arbeit mit solche Steuerelemente Sie diese Eigenschaft verwenden, einen Verweis abzurufen.  
  
 Wenn die Codierung in einem Kontext, in denen Sie, die ID des wissen, der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern, wie z. B. das Schreiben von Code Inline innerhalb einer Webseite, ist es, einfachste und am effizientesten, verweisen direkt mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerung mithilfe seiner ID  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>-Methode verwenden. Das Beispiel besteht aus zwei Teilen: ein benutzerdefiniertes Steuerelement, und eine Webseite, die das Steuerelement hostet.  
  
 Die benutzerdefinierte <xref:System.Web.UI.WebControls.Label> -Steuerelement verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> Methode zum Abrufen der ID des der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement auf der aktuellen Seite und dann die-ID.  
  
 [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/MyManagerIDLabel.cs#2)]
 [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/MyManagerIDLabel.vb#2)]  
  
 Das folgende Codebeispiel stellt die Webseite, die das Steuerelement im hostet eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/getCurrentWPManagerCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/getcurrentWPManagervb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser laden, beachten Sie, dass die ID des aktuellen <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelements angezeigt wird, in der benutzerdefinierten <xref:System.Web.UI.WebControls.Label> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTitle">
      <MemberSignature Language="C#" Value="protected internal virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetDisplayTitle(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetDisplayTitle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string&#xA;override this.GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetDisplayTitle webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das Steuerelement, für das die Methode den Wert von <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> zurückgibt.</param>
        <summary>Ruft eine Zeichenfolge ab, die den Wert für die <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />-Eigenschaft eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements enthält.</summary>
        <returns>Eine Zeichenfolge, die den berechneten Wert von <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> für <paramref name="webPart" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft den berechneten Wert der <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> -Eigenschaft für `webPart`. Wenn Entwickler nicht weisen Sie einen Wert an die <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> Eigenschaft eine <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement, das diese Methode erzeugt des Wert, der als Titel angezeigt. Der berechnete Wert für unbenannte Steuerelemente besteht aus einer Zahl in eine Zeichenfolge, die mit der Anzahl, der angibt, die Sequenznummer des Steuerelements in der aktuellen Zone angefügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> ist nicht in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung enthalten.</exception>
        <block subset="none" type="overrides"><para>Diese Methode kann überschrieben werden, um Informationen zur Berechnung der Standardtitel Anzeige zu ändern.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetExportUrl">
      <MemberSignature Language="C#" Value="public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetExportUrl(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetExportUrl(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.GetExportUrl : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetExportUrl webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Der <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, der exportiert wird.</param>
        <summary>Ruft den relativen virtuellen Pfad und die Abfragezeichenfolge ab, die bei dem Versuch, ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zu exportieren, Teil der Anforderung sind.</summary>
        <returns>Eine Zeichenfolge, die den relativen virtuellen Pfad und die Abfragezeichenfolge enthält, die zusammen die Anforderung zum Exportieren eines Steuerelements bilden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> Methode ist ein relativer virtueller Pfad an den Rand der Seite mit dem Steuerelement sowie den Wert der angefügten Abfragezeichenfolge, die die Anforderung zum Exportieren der bildet, die an den Server gesendet. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> Methode die Zeichenfolge codiert, bevor Sie die Anfrage übermittelt werden, um Schutz vor Angriffen von böswilligen Skripts zulässt.  
  
> [!NOTE]
>  Weitere Informationen zum Sichern von Webparts-Anwendungen finden Sie unter [Webparts-Seiten Sichern](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="GetGenericWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::GenericWebPart ^ GetGenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetGenericWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.GetGenericWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Ein Serversteuerelement, das sich in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> befindet und zur Laufzeit als untergeordnetes Steuerelement eines <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> umschlossen wird.</param>
        <summary>Ruft einen Verweis auf die Instanz des <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />-Steuerelements ab, die ein Serversteuerelement enthält.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, der <paramref name="control" /> als untergeordnetes Steuerelement umschließt. Die Methode gibt <see langword="null" /> zurück, wenn <paramref name="control" /> nicht in einem <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> enthalten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Allgemeinen stehen zwei Kategorien von Steuerelementen, die Entwickler in platzieren <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen zur Teilnahme an Webparts-Anwendungen: <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, die von erben die <xref:System.Web.UI.WebControls.WebParts.WebPart> Basisklasse und andere Steuerelemente der standard sein kann ASP.NET-Steuerelemente, benutzerdefinierte Steuerelemente oder Benutzersteuerelemente. Wenn eines dieser Steuerelemente wird in platziert eine <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone, nimmt es die Funktionalität von einem <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement verfügt über diese Funktion, die andere Arten von Serversteuerelementen jedoch nicht. So aktivieren Sie die anderen Serversteuerelementen als fungieren <xref:System.Web.UI.WebControls.WebParts.WebPart> steuert, wann sie platziert werden, in eine <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone umschließt ASP.NET mit einer <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement. Da die <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement erbt direkt von der <xref:System.Web.UI.WebControls.WebParts.WebPart> -Klasse bietet seine untergeordneten Steuerelemente mit "true" Webparts-Features.  
  
 Seitenentwickler sollten häufig zur Laufzeit zum Abrufen eines Verweises auf die <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement, das eines der Steuerelemente in einer Zone enthält. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> Methode können sie zum Abrufen eines Verweises auf die <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> Methode. Das Codebeispiel enthält eine <xref:System.Web.UI.WebControls.Calendar> Steuerelement deklariert werden, in einem <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone. Die `Button1_Click` Methode gibt zuerst die ID des der <xref:System.Web.UI.WebControls.Calendar> Steuerelement, das eine Bezeichnung und verwendet dann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> Methode zum Abrufen eines Verweises auf die <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> -Steuerelement, das den Kalender umschließt. Die ID des der <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> -Steuerelement und die ID des untergeordneten Steuerelements (d.h. die <xref:System.Web.UI.WebControls.Calendar> Steuerelement), werden beide in eine zweite Bezeichnung ausgegeben.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/CS/getGenericWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/VB/getGenericWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ProviderConnectionPointCollection ^ GetProviderConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&#xA;override this.GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" Usage="webPartManager.GetProviderConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein Serversteuerelement, das als Anbieter in einer Verbindung fungiert.</param>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />-Objekten ab, die als Verbindungspunkte von einem Serversteuerelement verwendet werden können, das als Anbieter in einer Webparts-Verbindung fungiert.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" />, die alle Verbindungspunkte im Anbieter enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Immer eine Webparts-Verbindung umfasst genau zwei Steuerelemente fungiert als Anbieter von Daten, die andere als die Consumer der Daten fungiert. Jedes Steuerelement muss es sich um eine oder mehrere Methoden verfügen, die als Verbindungspunkte definiert sind. Im Fall von einem Anbietersteuerelement Verbindungspunkte sind <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> Objekte.  
  
 Ein Anbieter benötigen immer mindestens ein Verbindungspunkt, um eine Verbindung herstellen zu können. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> Methode einem Anbietersteuerelement überprüft und ruft eine Auflistung aller Verbindungspunkte ab. Abrufen der Anbieterverbindungspunkten ist ein notwendiger Schritt im Erstellen einer Webparts-Verbindung.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>-Methode verwenden.  
  
 Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Webseite, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden können, und ein `<asp:webpartmanager>` Element.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente und eine benutzerdefinierte Schnittstelle.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Das deklarative Markup für die Webseite enthält `Register` -Direktiven für das Benutzersteuerelement und die benutzerdefinierten Steuerelemente. Gibt es eine `<asp:webpartmanager>` -Element, ein `<asp:webpartzone>` Element, in die benutzerdefinierten Steuerelemente, und ein `<asp:connectionszone>` Element. Beachten Sie, dass in der `Page_Load` -Methode, der Code überprüft, ob eine Verbindung ist bereits vorhanden und, falls nicht, einen Anbieter, Consumer und ihre entsprechenden Verbindungspunkten definiert und fügt dann eine neue Verbindung, auf den Satz von statischen Verbindungen auf die verwiesen wird durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Eigenschaft. Beachten Sie, dass die <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> -Objekt, das abgerufen wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> Methode übergeben, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> Methode, um zu bestimmen, ob eine Verbindung zwischen den beiden Steuerelementen erstellt werden kann.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Der dritte Teil des Beispiels wird der Quellcode für die Steuerelemente. Sie können diesen Code sowie Anweisungen für die kompilieren, im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse.  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf die **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Connect** Verbinden-Modus zu wechseln. Connect-Modus verwendet die `<asp:connectionszone>` Element, um Verbindungen zwischen Steuerelementen erstellen können. Im Modus verbinden, klicken Sie auf den Pfeil nach unten, in der Titelleiste des Fensters der **Postleitzahl** steuern, um dessen Verbenmenü zu aktivieren, und klicken Sie dann auf **Connect**. Nachdem die Verbindung-Benutzeroberfläche (UI) angezeigt wird, beachten Sie, dass eine Verbindung mit dem Code, der in enthaltenen bereits erstellt wurde die `Page_Load` Methode. Wenn Sie in einer späteren Browsersitzung zu dieser Seite zurückkehren, wird diese statischen Verbindung bereits eingerichtet und muss nicht jedes Mal neu erstellt werden, die die Seite geladen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="ImportWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart ImportWebPart(class System.Xml.XmlReader reader, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportWebPart (reader As XmlReader, ByRef errorMessage As String) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ ImportWebPart(System::Xml::XmlReader ^ reader, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member ImportWebPart : System.Xml.XmlReader *  -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.ImportWebPart : System.Xml.XmlReader *  -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.ImportWebPart (reader, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">Ein <see cref="T:System.Xml.XmlReader" />, der die Zustands- und Eigenschaftendaten aus der zu importierenden XML-Beschreibungsdatei liest.</param>
        <param name="errorMessage">Ein <see cref="T:System.String" />, der angezeigt wird, wenn während des Imports ein Fehler auftritt.</param>
        <summary>Importiert eine XML-Beschreibungsdatei, die Zustands- und Eigenschaftendaten für ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement enthält, und wendet die Daten auf das Steuerelement an.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder ein Serversteuerelement, das mit einem <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> umschlossen ist und daher als <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> behandelt wird), auf das in der importierten XML-Beschreibungsdatei verwiesen wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> Methode importiert eine XML-Beschreibungsdatei, die erstellt wurde die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> -Methode für ein Serversteuerelement. Es ist nicht das tatsächliche Steuerelement, das importiert wird, aber nur der Description-Datei, die Zustands- und Eigenschaftendaten Daten über das Steuerelement enthält. Das Steuerelement und die Assembly, auf die in der Description-Datei müssen bereits auf dem Server verfügbar sein, in denen ein Benutzer versucht, die Description-Datei zu importieren.  
  
 Um den Import eines Steuerelements zu aktivieren, muss ein Entwickler Hinzufügen einer <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Steuerelement auf der Seite, in dem Import aktiviert wird. Innerhalb der Zone ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement muss hinzugefügt werden. Dieses Steuerelement stellt ein Dialogfeld, mit der Benutzer zum Durchsuchen und die, die zu importierende Beschreibungsdatei zu finden.  
  
 Nachdem ein Benutzer sucht nach einer Beschreibungsdatei enthält und mit dem Import, wird die Description-Datei gelesen, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> Methode. Wenn keine Fehler vorliegen, und wenn die Assembly und das Steuerelement gefunden werden, das Serversteuerelement, auf den Katalog in hinzugefügt wird der <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> -Steuerelement, und die verschiedenen-Eigenschaft und Status Daten, die in der Description-Datei angegeben, die auf das Steuerelement angewendet werden. Der Benutzer kann dann wählen Sie das Steuerelement und fügen Sie es auf der Seite hinzu.  
  
> [!IMPORTANT]
>  Wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> -Methode, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> Methode hat einige Potenzial für Sicherheitsrisiken. Da sie das Importieren von Daten in einer Website umfasst, könnte ein böswilliger Benutzer versuchen, zum Einfügen von fehlerhaften Daten oder sogar Serverskript-Code in der Description-Datei, die importiert werden. Die ungültigen Daten könnten dann angezeigt, auf einer Seite oder in einer Datenbank oder das eingefügte Skript kann ausgeführt werden. Eine Übersicht über die potenziellen Risiken hinsichtlich des Imports der Description-Dateien verwendet wird und wie diese Risiken zu vermeiden, finden Sie unter [Webparts-Seiten Sichern](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.EndOfStreamException"><paramref name="reader" /> konnte die Datei nicht lesen.  
  
- oder - 
 <paramref name="reader" /> hätte eine Importfehlermeldung anzeigen müssen, fand aber in der Datei keine entsprechende Meldung.  
  
- oder - 
 <paramref name="reader" /> hat das Ende der Datei erreicht, ohne das XML-Element gefunden zu haben, das die exportierten Daten enthält.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Absichern von Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Internals">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Internals As WebPartManagerInternals" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ Internals { System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Internals : System.Web.UI.WebControls.WebParts.WebPartManagerInternals" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManagerInternals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />-Klasse ab, die verwendet wird, um einen Satz von Methoden zu kombinieren und aufzuteilen, die eigentlich in der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse implementiert sind, aber vor allem für Steuerelemententwickler nützlich sind.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />-Objekt, über das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> auf die verschiedenen Methoden verweisen kann, die in <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" /> aufgeteilt wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> -Eigenschaft verfügbar macht, die APIs aufrufen, in einen Satz von <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Methoden, die größtenteils Erweiterbarkeit verwendet werden.  
  
 Die entworfene Möglichkeit, diese internen Methoden zu verwenden ist, für den Zugriff darauf über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Eigenschaft. Da die Eigenschaft geschützt ist, können nur darauf zugreifen, und rufen Sie die Methoden innerhalb einer Instanz von der <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> Klasse durch Erben von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse.  
  
> [!NOTE]
>  Diese Eigenschaft wird von IntelliSense in ausgeblendet [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]. Allerdings in einer abgeleiteten <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Klasse, Sie können weiterhin auf die Eigenschaft und die verschiedenen Member zugreifen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAuthorized">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob einer Seite ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein anderes Serversteuerelement hinzugefügt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Flexibilität der Webparts-Features gehört die Möglichkeit, Webseiten zur Laufzeit Steuerelemente hinzugefügt. Es gibt eine Reihe von häufigen Szenarios, in dem ein Serversteuerelement (erfolgen kann eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement, ein benutzerdefiniertes Steuerelement, ein Steuerelement oder ein ASP.NET-Steuerelement) hinzugefügt werden können.  
  
 In den folgenden häufigen Szenarien, die Webparts-Steuerelement-Set-Versuche, Serversteuerelemente zu einer Seite hinzuzufügen und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> aufgerufen, um sie zu autorisieren:  
  
-   Wenn ein Serversteuerelement hinzugefügt wird, die Deklaration im Markup einer Webseite in einem <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone.  
  
-   Wenn ein Serversteuerelement programmgesteuert eine Zone hinzugefügt wird.  
  
-   Wenn ein Benutzer ein Serversteuerelements in einem Webparts-Katalog von Steuerelementen importiert.  
  
-   Wenn ein vorhandenes wird Serversteuerelement aus dem Datenspeicher für die Personalisierung geladen.  
  
-   Wenn ein Serversteuerelement hinzugefügt wird, um eine <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Steuerelement in einem Katalog-Steuerelemente verfügbar zu machen.  
  
 In jedem Szenario, in dem Steuerelemente hinzugefügt werden, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Methode wird aufgerufen, um sicherzustellen, dass alle Autorisierungskriterien erfüllt sind, um ein Steuerelement hinzugefügt werden kann. Wenn ein Steuerelement autorisiert ist, wird sie normalerweise hinzugefügt, wie es der Fall wäre, wenn es keine Filterszenario wurde. Wenn ein Steuerelement nicht autorisiert ist, kann die Webparts-Steuerelementsatz auf verschiedene Weise je nach Kontext reagieren. Die Steuerelementsatz kann ohne Meldung fehl, ein nicht autorisierter Bestandteil hinzufügen (sofern es nicht erforderlich ist, den Benutzer zu informieren), können sie eine Fehlermeldung angezeigt oder sie können eine Instanz des Hinzufügen der <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> Klasse als Platzhalter. Diese Platzhalterobjekt ist nicht auf der Seite sichtbar, aber Sie werden in den Quellcode der Seite, um anzugeben, dass ein nicht autorisierter Steuerelement ausgeschlossen wurde.  
  
 Die Determinante der gibt an, ob ein Steuerelement autorisiert ist, ist der Autorisierungsfilter. Ein Autorisierungsfilter ist ein Feature in der Webparts-Steuerelementsatz, mit der Entwickler einer Seite alle Steuerelemente, ausgeschlossen werden sollen, die die angegebenen Kriterien nicht erfüllen.  
  
 Um Filterszenario erstellen zu können, müssen Entwickler zwei Dinge tun. Zunächst müssen sie einen String-Wert (der Wert kann beliebige sein), zum Zuweisen der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaft der einzelnen <xref:System.Web.UI.WebControls.WebParts.WebPart> Kontrolle, die sie verwenden möchten. Sie können diese Eigenschaft für andere Typen von Serversteuerelementen, die nicht auch einen Wert zuweisen <xref:System.Web.UI.WebControls.WebParts.WebPart> gesteuert wird, da sie in abgelegt werden <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen, die solche Steuerelemente werden von umschlossen eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> -Steuerelement zur Laufzeit und dieses Steuerelement erbt die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaft.  
  
 Der zweite erforderliche Schritt zum Erstellen von Filterszenario ist entweder Überschreibung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> -Methode, oder erstellen einen Ereignishandler für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignis. Bei diesen Methoden kann Entwickler überprüfen die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> -Eigenschaft, und wenn der Wert gibt an, dass das Steuerelement nicht autorisiert werden soll, dass der Entwickler die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Methode gibt einen Wert von `false`.  
  
> [!NOTE]
>  Codebeispiele und eine Beschreibung der So richten Sie eine benutzerdefinierte Filterung mithilfe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> -Methode finden Sie unter den Themen für die Überladungen der Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthorized(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthorized(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.IsAuthorized : System.Web.UI.WebControls.WebParts.WebPart -&gt; bool" Usage="webPartManager.IsAuthorized webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein anderes Serversteuerelement, dessen Autorisierung geprüft wird.</param>
        <summary>Führt die ersten Schritte des Prozesses aus, mit dem bestimmt wird, ob für das Steuerelement eine Autorisierung vorhanden ist und es einer Seite hinzugefügt werden darf.</summary>
        <returns>Ein boolescher Wert, der angibt, ob <paramref name="webPart" /> einer Seite hinzugefügt werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Methode ist die erste Methode aufgerufen wird, durch die Webparts-Steuerelement, das zum Überprüfen der Autorisierung für eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Er akzeptiert `webPart` als Parameter verwendet, und startet einen Prozess, der letztlich bestimmt, ob das Steuerelement zu einer Seite hinzugefügt wird. Rufen Sie diese Methode aus dem Code direkt fest, wenn Sie benötigen, um zu bestimmen, ob ein bestimmtes Steuerelement autorisiert ist.  
  
 Diese Methode führt die anfängliche Aufgaben bestimmt, ob das Steuerelement erbt die <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse oder ist eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> steuern und, wenn dies der Fall ist, welchen Typ von untergeordneten Steuerelementen es enthält. Um die Autorisierung abzuschließen, ruft der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Methode überladen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> -Methode aus dem Code, um zu bestimmen, ob ein Steuerelement autorisiert ist, eine Seite hinzugefügt werden.  
  
 Im Codebeispiel besteht aus drei Teilen:  
  
-   Eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement, überschreibt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Methode.  
  
-   Eine Webseite, die einen Filter für erstellt eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement.  
  
-   Eine Erklärung, wie im Codebeispiel ausgeführt werden soll.  
  
 Dieses Codebeispiel verwendet einen benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement, überschreibt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Überladung der Methode, um die benutzerdefinierte Behandlung von bereitzustellen der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaft. Dieses Steuerelement prüft einen Eigenschaftswert von `admin` und, wenn der Wert vorhanden ist, autorisiert das Steuerelement. Wenn ein Steuerelement auf einen anderen Wert aufweist, wird keine Autorisierung. Steuerelemente ohne den Wert der Eigenschaft sind ebenfalls berechtigt, da sie nicht als Teil der Filterszenario Filterszenario.  
  
 Für dieses Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierungsmethode. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Der zweite Teil des Codebeispiels erstellt einen Filter, der ein Steuerelement ausgeschlossen werden kann. Die folgende Webseite enthält drei Serversteuerelemente von ASP.NET in ein `<asp:webpartzone>` Element. Beachten Sie, die die erste und zweite-Steuerelemente haben ihre <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaften, die auf unterschiedliche Werte festzulegen, und die dritte weist keine Eigenschaft. Dieser Autorisierungswert kann zur Laufzeit überprüft werden, und das Steuerelement kann auf der Seite hinzugefügt werden, wenn der Filter durch den Entwickler festgelegten Kriterien übereinstimmt. Beachten Sie auch, dass in der `Page_Load` -Methode, die der Code Ruft die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> Methode, um zu bestimmen, ob jedes Steuerelement autorisiert ist, und daher wird jedes Steuerelement die <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Eigenschaft.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Beachten Sie, dass für das Codebeispiel funktioniert, Sie eine Einstellung in der Datei "Web.config" So aktivieren Sie die Webparts-Description-Dateien exportieren hinzufügen müssen. Stellen Sie sicher, dass Sie eine Web.config-Datei im gleichen Verzeichnis wie die Webseite für dieses Codebeispiel verfügen. In der `<system.web>` Abschnitt, stellen Sie sicher, dass eine `<webParts>` -Element mit einer `enableExport` -Attributsatz auf `true`, wie im folgenden Markup.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Laden Sie die Seite in einem Browser, beachten Sie, dass das erste Steuerelement angezeigt wird, da es den Kriterien in der überschriebenen Methode entspricht. Das zweite Steuerelement ist nicht auf der Seite hinzugefügt, da er vom Filter ausgeschlossen ist. Die dritte Steuerelement wird ebenfalls hinzugefügt, da es keine seine <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftensatz. Beachten Sie, dass wenn Sie das Verben-Menüsymbol in der Titelleiste der beiden Steuerelemente klicken, beide können exportiert werden, weil der jeweiligen <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Eigenschaftswerte zugewiesen wurden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Diese Methode wird direkt aus Ihrem Code aufgerufen. Wenn Sie mehr programmgesteuerte Kontrolle über den Autorisierungsprozess erlangen möchten, können Sie überschreiben die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" /> Methode überladen.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAuthorized(class System.Type type, string path, string authorizationFilter, bool isShared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAuthorized(Type ^ type, System::String ^ path, System::String ^ authorizationFilter, bool isShared);" />
      <MemberSignature Language="F#" Value="abstract member IsAuthorized : Type * string * string * bool -&gt; bool&#xA;override this.IsAuthorized : Type * string * string * bool -&gt; bool" Usage="webPartManager.IsAuthorized (type, path, authorizationFilter, isShared)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="authorizationFilter" Type="System.String" />
        <Parameter Name="isShared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Der <see cref="T:System.Type" /> des Steuerelements, das auf die entsprechende Autorisierung überprüft wird.</param>
        <param name="path">Der relative Anwendungspfad zur Quelldatei des Steuerelements, das autorisiert wird, sofern das Steuerelement ein Benutzersteuerelement ist.</param>
        <param name="authorizationFilter">Der <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />-Eigenschaft des <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements wird ein beliebiger Zeichenfolgenwert zugewiesen, der verwendet wird, um zu prüfen, ob für ein Steuerelement eine Autorisierung vorhanden ist und es einer Seite hinzugefügt werden darf.</param>
        <param name="isShared">Gibt an, ob das zur Autorisierung überprüfte Steuerelement freigegeben ist, d. h., ob es für alle Benutzer einer Anwendung sichtbar ist und ob dessen <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />-Eigenschaftswert auf <see langword="true" /> festgelegt ist.</param>
        <summary>Führt die letzten Schritte des Prozesses aus, mit dem bestimmt wird, ob für das Steuerelement eine Autorisierung vorhanden ist und es einer Seite hinzugefügt werden darf.</summary>
        <returns>Ein boolescher Wert, der angibt, ob für ein Steuerelement eine Autorisierung vorhanden ist und es einer Seite hinzugefügt werden darf.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Überladungsmethode führt die letzten Schritte, um festzustellen, ob ein Steuerelement autorisiert ist, eine Seite hinzugefügt werden. Die Methode wird sichergestellt, dass `type` ist ein gültiger Typ, und dass `path` hat einen Wert aus, nur dann, wenn das überprüfte Steuerelement ein Benutzersteuerelement ist. Anschließend ruft Sie die wichtigsten <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> -Methode, die löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignis.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Methode, um zu bestimmen, ob ein Steuerelement autorisiert ist, eine Seite hinzugefügt werden.  
  
 Der erste Schritt ist zum Erstellen von Filtern, die ein Steuerelement ausgeschlossen werden können. Die folgende Webseite enthält drei Serversteuerelemente von ASP.NET in ein `<asp:webpartzone>` Element. Beachten Sie, die die erste und zweite-Steuerelemente haben ihre <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaften, die auf unterschiedliche Werte festzulegen, und die dritte weist keine Eigenschaft. Dieser Autorisierungswert kann zur Laufzeit überprüft werden, und das Steuerelement kann auf der Seite hinzugefügt werden, wenn der Filter durch den Entwickler festgelegten Kriterien übereinstimmt.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Der zweite Schritt ist, überschreiben die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> -Methode, und erstellen Sie benutzerdefinierte Behandlung für Autorisierungsfilter. Beachten Sie, dass der Code zunächst prüft, ob die Eigenschaft einen Wert verfügt, damit alle, die steuern weist keinen der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaft automatisch hinzugefügt werden. Wenn ein Steuerelement einen Filter verfügt, gibt der Code `true` nur, wenn Sie der Filterwert entspricht `admin`. Dieses Beispiel veranschaulicht einen einfachen Mechanismus, mit denen Sie zum Anzeigen bestimmter Steuerelemente für bestimmte Benutzer, abhängig von ihrer Rolle. Während ein vollständiges Beispiel, das mithilfe von Rollen in diesem Thema nicht eingegangen ist, können Sie die gleiche Logik als die überschriebene Methode in diesem Codebeispiel verwenden, außer dass Sie überprüfen können, ob der aktuelle Benutzer in einer Rolle, die die Autorisierung Filterwert entspricht , und klicken Sie dann das Steuerelement nur für diesen Benutzer hinzuzufügen. Dadurch würden Sie zum Erstellen von Seiten, in dem einige Benutzer sehen alle Steuerelemente und andere Benutzer sehen nur die ausgewählten Steuerelemente. Dies ist wie die Logik, die der Filter überprüft aussehen könnte, wenn Sie Rollen verwendet:  
  
```vb  
If Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  
  return True  
Else  
  return False  
End If  
```  
  
```csharp  
if(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  
    return true;  
else  
    return false;  
```  
  
 Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierungsmethode. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Laden Sie die Seite in einem Browser, beachten Sie, dass das erste Steuerelement angezeigt wird, da es den Kriterien in der überschriebenen Methode entspricht. Das zweite Steuerelement wird nicht auf der Seite hinzugefügt werden, da der Filterwert ausgeschlossen wird. Das dritte Steuerelement hinzugefügt wird, da es keine seine <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftensatz. Wenn Sie den Wert der Eigenschaft, auf das zweite Steuerelement entsprechen, der das erste Steuerelement ändern, und klicken Sie dann die Seite erneut ausführen, wird das zweite Steuerelement ebenfalls hinzugefügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="type" /> ist ein Benutzersteuerelement, und <paramref name="path" /> ist entweder <see langword="null" /> oder eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="type" /> ist kein Benutzersteuerelement, und <paramref name="path" /> ist ein Wert zugewiesen.</exception>
        <block subset="none" type="overrides"><para>Diese Methode kann überschrieben werden, durch Erben von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse, wenn Sie zusätzliche Behandlung beim Prüfen der Autorisierung bereitstellen möchten. Möglicherweise möchten Sie die Methode für bestimmte Werte Einchecken überschreiben, um die <paramref name="authorizationFilter" /> Parameter, und basierend auf dem Wert, einen booleschen Wert, der bestimmt, ob das Steuerelement zu einer Seite hinzugefügt werden, werden zurückgegeben.  
  
Für Seitenentwickler, die auch für Autorisierungsfilter überprüfen und geben Sie die benutzerdefinierte Behandlung möchten, besteht die Option zum Ausführen dieser Inline in einer ASPX-Seite oder in einer CodeBehind-Datei, ohne alle Klassen erben. Sie können deklarieren, einen alternativen Ereignishandler auf der Seite für die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> Methode der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement. Weitere Informationen und ein Beispiel finden Sie unter den <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> Methode.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="IsCustomPersonalizationStateDirty">
      <MemberSignature Language="C#" Value="protected virtual bool IsCustomPersonalizationStateDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsCustomPersonalizationStateDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsCustomPersonalizationStateDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPersonalizationStateDirty : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Personalisierungsänderungen vorgenommen wurden, die Personalisierungsdetails auf der Seitenebene betreffen, die durch das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement gesteuert werden.</summary>
        <value>Ein boolescher Wert, der angibt, ob Personalisierungsänderungen vorgenommen wurden. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> Eigenschaft intern an, ob die Daten auf Seitenebene Personalisierung zu verfolgen, die er verwaltet geändert hat. Die Personalisierungsdaten geändert werden soll, wenn Benutzer verschiedene Personalisierung Aktionen auf Seitenebene, z. B. hinzufügen oder Entfernen von ausführen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die eine Verbindung herstellen oder Trennen von Steuerelementen, Ändern des Layouts einer Seite verschieben, Steuerelemente und andere Aktionen.  
  
> [!NOTE]
>  Benutzer können auch die Anpassung an die Steuerungsebene, d. sie personalisierungsänderungen an ein bestimmtes Steuerelement vornehmen h., ausführen und die Änderungen betreffen nur das Steuerelement. Ein Beispiel würde das Steuerelement bearbeiten und ändern den Titeltext oder die Hintergrundfarbe. Steuerungsebene Personalisierung wirkt sich nicht auf der Seitenebene Personalisierungsdaten nachverfolgt werden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement, daher wird der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> Eigenschaftswert wird nicht geändert, um `true` Wenn Steuerungsebene Personalisierung auftritt.  
  
 Obwohl die Methode geschützt ist und nicht werden, direkt von einem Aufrufer zugegriffen kann, den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> -Eigenschaft zugegriffen werden kann, direkt vom Aufrufer und wird der Wert dieser Eigenschaft zurückgegeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsDirty" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetDirty" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="webPartManager.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Enthält die gespeicherten Zustandsdaten, die geladen werden sollen.</param>
        <summary>Lädt Daten zum Steuerelementzustand, die bei einer vorherigen Seitenanforderung gespeichert wurden und bei einer nachfolgenden Anforderung wiederhergestellt werden müssen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A> Methode ist hilfreich für die Wiederherstellung von Daten, die nach dem Zurücksenden einer Seite beibehalten werden soll, auch wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> ist kein gültiger <see cref="P:System.Web.UI.PageStatePersister.ControlState" />.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.LoadCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, das die zu ladenden Zustandsdaten enthält.</param>
        <summary>Speichert die benutzerdefinierten Personalisierungsdaten, die zur späteren Verwendung im Initialisierungsprozess von den Personalisierungsobjekten an das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement übergeben wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> Methode bietet die gespeicherten Zustandsdaten in Form einer <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Objekt. Diese Daten werden schließlich zum Laden von Personalisierungsdaten in die Webparts-Steuerelemente und andere Initialisierungsaufgaben ausführen verwendet.  
  
> [!NOTE]
>  Diese Methode wird aufgerufen, indem eine Sequenz von Methoden, die beginnt, wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A> Methode fordert zunächst die zugeordnete <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Personalisierungsdaten zu verwendendes Objekt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement.  
  
 Sie können nicht direkt aus Ihrem Code diese Methode aufrufen. Sie allerdings direkt aufrufen können, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A> -Methode, die wiederum ruft die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> -Methode und gibt die Personalisierungsdaten.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können außer Kraft setzen der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> -Methode in einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="MediumPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MediumPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MediumPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MediumPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MediumPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MediumPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Security.PermissionSet" />-Objekt ab, das nur die <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />-Berechtigung und die <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />-Berechtigung gewährt.</summary>
        <value>Ein <see cref="T:System.Security.PermissionSet" />-Objekt, das nur die <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />-Berechtigung und die <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />-Berechtigung gewährt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.PermissionSet> -Objekt, das von dieser Eigenschaft zurückgegeben wird während des Imports für die Deserialisierung des Typs verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimalPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MinimalPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MinimalPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MinimalPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimalPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Security.PermissionSet" />-Objekt ab, das nur die <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />-Berechtigung und die <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />-Berechtigung gewährt.</summary>
        <value>Ruft ein <see cref="T:System.Security.PermissionSet" />-Objekt ab, das nur die <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />-Berechtigung und die <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />-Berechtigung gewährt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.PermissionSet> von dieser Eigenschaft zurückgegebenen Objekts wird verwendet, während des Imports für alles außer der Deserialisierung zu geben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWebPart">
      <MemberSignature Language="C#" Value="public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="abstract member MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit&#xA;override this.MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit" Usage="webPartManager.MoveWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Der <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> oder ein anderes Serversteuerelement, das verschoben wird.</param>
        <param name="zone">Die Ziel-<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />, in die <paramref name="webPart" /> verschoben wird.</param>
        <param name="zoneIndex">Eine ganze Zahl, die den Index von <paramref name="webPart" /> im Verhältnis zu anderen Steuerelementen innerhalb von <paramref name="zone" /> angibt.</param>
        <summary>Verschiebt ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein Serversteuerelement aus einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone in eine andere Zone oder an eine neue Position innerhalb derselben Zone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> -Methode verschieben `webPart` an einem neuen Speicherort in der gleichen Zone oder in einer anderen Zone. Sie können diese Methode aufrufen, direkt aus dem Code, und wird auch aufgerufen, wenn ein Benutzer ein Steuerelement an eine neue Position in der Webparts-Benutzeroberfläche (UI) mithilfe der verschiedenen Optionen bewegt.  
  
 Eine Reihe von Bedingungen muss erfüllt sein, damit `webPart` verschoben werden kann, und die meisten dieser von Elementen, die im Abschnitt "Ausnahmen" dieses Themas aufgeführten angegeben werden. Wenn `webPart` wurde nicht innerhalb einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone zunächst kann nicht in einer Zone verschoben werden.  
  
 Nachdem Sie die Bedingungen erfüllt sind, tritt die folgende Sequenz von Aktionen zum Verschieben `webPart`:  
  
1.  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>-Ereignis aus.  
  
2.  `webPart` wird in der aktuellen Zone (falls erforderlich), entfernt und der neuen Zone oder eine neue Position innerhalb der aktuellen Zone hinzugefügt.  
  
3.  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>-Ereignis aus.  
  
4.  Die `zoneIndex` von jedem <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement in die Ursprung und Ziel-Zonen verschobenen Steuerelements entsprechend zurückgesetzt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> Methode direkt aus dem Code zum Verschieben einer <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement aus einer Zone in eine andere.  
  
 Im Codebeispiel besteht aus drei Teilen:  
  
-   Ein Benutzersteuerelement für Wechseln des Anzeigemodus.  
  
-   Eine Webseite zum Hosten der Steuerelemente.  
  
-   Eine Erklärung, wie im Codebeispiel ausgeführt werden soll.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu den Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Beispiels ist eine Webseite, die zwei Zonen, von denen jede zwei Serversteuerelementen enthält. Wenn ein Benutzer klickt der **Move WebPart** Schaltfläche auf der Seite, die den Code in die `Button1_Click` Methode wird ein Steuerelement aus der ersten Zone zu einer neuen Position in der zweiten Zone verschoben. Beachten Sie, die der Code zuerst aufrufen muss die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> Methode zum Abrufen der <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> -Objekt, wrappt der `list1` Steuerelement. Dies ist erforderlich, da der erste Parameter der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> Methode erfordert eine <xref:System.Web.UI.WebControls.WebParts.WebPart> zu steuern, während `list1` ist ein ASP.NET-Serversteuerelement.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/CS/MoveWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/VB/MoveWebPartVB.aspx#1)]  
  
 Nachdem die Seite geladen wird, klicken Sie auf die **Move WebPart** Schaltfläche aus, und notieren, die das Steuerelement, die Links enthält, in die mittlere Position in der zweiten Zone verschoben. Diese Bewegung des Steuerelements erfolgt programmgesteuert durch Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> Methode. Sie können auch die **Anzeigemodus** Dropdown-Listenfeld-Steuerelement, um die Seite in den Entwurfsmodus, und klicken Sie im Entwurfsmodus wechseln können Sie die Steuerelemente in anderen Zonen oder an andere Positionen innerhalb derselben Zone ziehen. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> Methode wird auch aufgerufen, indem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement behandelt diese vom Benutzer initiierte verschoben wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> ist in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements nicht enthalten.  
  
- oder - 
 <paramref name="zone" /> ist in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />-Auflistung des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements nicht enthalten.  
  
- oder - 
Die Zone, auf die die <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" />-Eigenschaft des <paramref name="webPart" />-Steuerelements verweist, lautet <see langword="null" />. Dies bedeutet, dass <paramref name="webPart" /> derzeit in keiner Zone enthalten ist.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> oder <paramref name="zone" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="zoneIndex" /> ist kleiner als Null.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizeWebPart(class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizeWebPart (e As WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizeWebPart(System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit&#xA;override this.OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit" Usage="webPartManager.OnAuthorizeWebPart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />-Ereignis aus und ruft, falls vorhanden, einen Handler für das Ereignis auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Methode, wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement überprüft wird für die Autorisierung auf einer Seite hinzugefügt werden. Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> aufgerufen wird, löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> -Ereignis, und wenn eine Handlermethode für das Ereignis vorhanden ist, ruft den Handler.  
  
 Den Prozess der Autorisierung <xref:System.Web.UI.WebControls.WebParts.WebPart> Controls ist ein wichtiges Feature des Webparts. Jede <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein Serversteuerelement, das einer Zone von hinzugefügt wird, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement durchlaufen eines Autorisierungsprozesses zu bestimmen, ob das Steuerelement hinzugefügt werden kann. Standardmäßig bietet die Webparts-Steuerelementsatz keine Filterkriterien, um zu verhindern, dass die Steuerelemente, die mit einer Zone hinzugefügt wird. Jedoch die Steuerelemente stellen die Mechanismen für Entwickler zum Erstellen von eigenen Filterkriterien erforderlich. Mit diesen Mechanismen, können Sie benutzerdefinierte vorkommender Filterszenarios erstellen. Sie können z. B. einen Filter erstellen, wenn ein Benutzer Mitglied in einer Administratorrolle ist, bestimmte Steuerelemente würde zu einer Zone beim Rendern der Seite hinzugefügt werden, und wenn der Benutzer einer Benutzerrolle ist, die Steuerelemente nicht hinzugefügt werden.  
  
 Sind die Mechanismen für die Filtersteuerelemente während des Autorisierungsprozesses der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaft <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Methoden, und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignis auf der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement.  
  
 Um Filterszenario erstellen zu können, sind im Wesentlichen zwei Aufgaben. Weisen Sie Sie zunächst Zeichenfolgen, die die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaft der einzelnen <xref:System.Web.UI.WebControls.WebParts.WebPart> Kontrolle, die Sie filtern möchten. Diese Zeichenfolgenwerte können beliebig sein, aber sie sollten die Kriterien, die, denen Sie filtern möchten, enthalten. Z. B. Falls ein bestimmtes Steuerelement gewünscht nur ein Zone, wenn einen Administrator hinzugefügt werden, für die Benutzer die Seite angezeigt und dann können Sie einen Zeichenfolgenwert der zuweisen `admin` der Eigenschaft. Sie können dann verwenden Sie die Rollen-Funktion von ASP.NET und alle Benutzer Ihrer Website zu verschiedenen Rollen wie z. B. Administratoren, Manager und Benutzer hinzufügen. Beim Laden einer Seite ist der würde überprüfen, welche Rolle ein Benutzer in enthalten ist, vergleichen Sie ihn mit dem Wert des Autorisierungsfilter auf einem Steuerelement, das überprüft wird, und wenn (zum Beispiel) der Benutzer Mitglied in einer Administratorrolle ist aus, und Sie mussten des Steuerelements festlegen <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Wert `admin`, kann das Steuerelement hinzugefügt werden.  
  
 Der zweite Schritt beim Erstellen eines Filterszenarios wird zum Schreiben von Code zum Überprüfen der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftswerte auf <xref:System.Web.UI.WebControls.WebParts.WebPart> steuert und zu bestimmen, ob jedes Steuerelement autorisiert ist, bevor sie der Zone hinzugefügt wird. Es gibt zwei Optionen für diesen Filter Code platzieren. Die erste Option ist die bevorzugte Option für Entwickler von Seiten. Sie können eine Methode zum Behandeln von erstellen die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignis direkt in der Webseite Serverskript-Code oder in einer Codetrennungsdatei. Ordnen Sie die Methode mit dem Ereignis, durch das Hinzufügen der `OnAuthorizeWebPart` -Attribut auf das Tag für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> auf der Seite zu steuern, wie im folgenden Markup Beispielcode gezeigt.  
  
```  
<asp:webpartmanager id="manager1" runat="server"   
   OnAuthorizeWebPart="manager1_AuthorizeWebPart" />  
```  
  
 Die benutzerdefinierte Methode verfügt, Sie lediglich überprüfen jeder <xref:System.Web.UI.WebControls.WebParts.WebPart> steuern Sie die Filterkriterien, und klicken Sie dann basierend auf den Ergebnissen, einen booleschen Wert, weisen Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> Eigenschaft der <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> Objekt, um anzugeben, ob die <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente werden können hinzugefügt. Der Code im Beispiel wird veranschaulicht, wie zu diesem Zweck wird.  
  
 Die zweite Option für den Filtercode platzieren, wo ist das erben die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse, und überschreiben Sie eine Methode, um die Filterkriterien zu überprüfen. Die beiden Methoden, die Sie überschreiben können, zu diesem Zweck die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> Methode oder der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Methode. Aber beide Methoden funktionieren würde, in den meisten Fällen ist es besser, überschreiben die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> -Methode, weil er größere programmgesteuerte Kontrolle über den gesamten Autorisierungsprozess, wohingegen enthält die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Methode ist nur eine bestimmte Aufgabe , dies ist das Ereignis und die Überprüfung nach einem Handler ausgelöst werden soll. Für ein Codebeispiel für einen benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Klasse, überschreibt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> -Methode finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> Überladung der Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie einen benutzerdefinierter Ereignishandler für die festzulegende der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignis, damit der Ereignishandler benutzerdefinierten Filtercode für bereitstellen, kann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Methode. In diesem Beispiel wäre eine typische Möglichkeit für Entwickler einer Seite Geben Sie einen Filter Szenario und Autorisierung von <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente auf einer Seite hinzugefügt werden.  
  
 Auf der Webseite, beachten Sie, dass die `<asp:webpartmanager>` Element verfügt über die `OnAuthorizeWebPart` Attribut mit dem Namen des ereignishandlers zugewiesen ist. Die Methode überprüft, ob die Steuerelemente auf der Seite den jeweiligen enthalten <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftswerte festzulegen, um `admin` und gibt zurück, wenn dies der Fall ist, `true`, was bedeutet, dass sie autorisiert und zur Seite hinzugefügt werden.  
  
> [!NOTE]
>  Beachten Sie, die steuert, die keinen Wert zugewiesen ist, die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaft werden ebenfalls hinzugefügt, da sie nicht als Teil eines Filterszenarios angenommen werden. Dies wäre eine gängige Methode in einem Szenario mit Filtern: Einige Steuerelemente werden gefiltert und andere nicht, da davon ausgegangen, wird werden für alle Benutzer verfügbar sein sollen.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 Da das Einrichten der Benutzer in Rollen würde den Rahmen dieses Themas ist, wird in diesem Codebeispiel wird nicht Benutzerrollen in die Filterung überprüft. Das Szenario der Filtersteuerelemente anhand von Benutzerrollen ist jedoch wahrscheinlich eine der häufigsten Verwendungszwecke dieses Features filtern. Wenn Ihnen Rollen auf Ihrer Website, und Überprüfen von Benutzerrollen in dieser Methode, um Steuerelemente zu filtern möchten, ähnelt die Methode den folgenden Codeblock (und nicht die einfachere Lösung, in dem vorherigen Beispiel, das Rollen nicht verwendet werden soll).  
  
```vb  
Protected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  
  As Object, ByVal e As WebPartAuthorizationEventArgs)  
  
  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  
    If Roles.IsUserInRole(Page.User.Identity.Name, _  
      e.AuthorizationFilter) Then  
  
      e.IsAuthorized = True  
    Else  
      e.IsAuthorized = False  
    End If  
  End If  
  
End Sub  
```  
  
```csharp  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivated : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivated : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />-Ereignis aus, das anzeigt, dass eine Seite und ihre Steuerelemente geladen sind und dass die Verbindungen auf der Seite aktiviert wurden, um mit dem Austausch von Daten zu beginnen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> Ereignis aus, nachdem eine Seite mit den Ladevorgang abgeschlossen ist. Die Methode bietet eine Möglichkeit, einen Ereignishandler für das Ereignis hinzuzufügen.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis hinzufügen, durch das Hinzufügen einer `OnConnectionsActivated` -Attribut auf die `<asp:webpartmanager>` Element in einer Seite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können außer Kraft setzen der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" /> -Methode in einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivating">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivating (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivating(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivating (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivating(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivating : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivating : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />-Ereignis aus, das anzeigt, dass eine Seite und ihre Steuerelemente geladen wurden und dass mit dem Aktivieren von Verbindungen begonnen werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> -Ereignis, das Entwickler einen Mechanismus zum programmgesteuerten Anpassen des Prozesses Aktivieren von Verbindungen bietet.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis hinzufügen, durch das Hinzufügen einer `OnConnectionsActivating` -Attribut auf die `<asp:webpartmanager>` Element in einer Seite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können außer Kraft setzen der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" /> -Methode in einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />-Objekt, das Ereignisdaten enthält, die einem geänderten Anzeigemodus zugeordnet sind.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />-Ereignis aus, um anzuzeigen, dass das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement auf einer Webseite den Prozess des Umschaltens von einem Anzeigemodus in einen anderen abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> Methode in der Basisklasse löst lediglich zu bilden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> Ereignis.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können außer Kraft setzen der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> Methode. Z. B. nach einer Änderung des Anzeigemodus, Sie können an der Darstellung der Benutzeroberfläche (UI), ändern möchten je nach der Anzeige im Modus ist Bestandteil der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.OldDisplayMode" /> Eigenschaft. Oder Sie können bestimmte Inhalte ausblenden oder Anzeigen eines bestimmten Steuerelements.  
  
Wenn Sie die Methode überschreiben, müssen Sie normalerweise die Basismethode als letzten Schritt der überschriebenen Methode aufrufen, damit Ihr benutzerdefinierte Code zuerst ausgeführt, und das Ereignis zuletzt ausgelöst, der angibt, dass die Änderung abgeschlossen ist.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanging(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanging (e As WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanging(System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das Ereignisdaten enthält, die einem sich ändernden Anzeigemodus zugeordnet sind.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />-Ereignis aus, um anzuzeigen, dass das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement auf einer Webseite gerade von einem Anzeigemodus in einen anderen umgeschaltet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> Methode in der Basisklasse löst lediglich zu bilden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> Ereignis.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können außer Kraft setzen der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" /> Methode. Z. B. wenn ein Anzeigemodus geändert werden, Sie möchten überprüfen, wie der neue Anzeigemodus sein wird (mithilfe der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode" /> Eigenschaft), und ändern Sie etwas in der Benutzeroberfläche (UI), basierend auf wie der neue Anzeigemodus sein wird. Wenn Sie einen benutzerdefinierten Anzeigemodus haben, empfiehlt es sich um bestimmte Steuerelemente sichtbar zu machen, wenn Sie der benutzerdefinierte Modus der neue Anzeigemodus werden soll.  
  
Wenn Sie diese Methode überschreiben, sollten Sie die Basismethode normalerweise als erster Schritt der überschriebenen Methode aufrufen, so, dass das Ereignis ausgelöst wird, um anzugeben, dass ein Anzeigemodus gestartet wird, um zu ändern. Anschließend kann Ihren benutzerdefinierte Code Änderungen in der Benutzeroberfläche (UI) vornehmen, bevor der neue Anzeigemodus tatsächlich angezeigt wird.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus, das das erste Ereignis im Lebenszyklus des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> Methode ruft die Basis-Methode, die löst die <xref:System.Web.UI.Control.Init> -Ereignis für das Steuerelement, und klicken Sie dann die führt einige vorbereitenden Schritte, z. B. sicherstellen, dass es nur eine Instanz des ist der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> auf einer Seite zu steuern und Laden von Personalisierungsdaten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist ein weiteres <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement auf der Seite vorhanden.</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="webPartManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus, das unmittelbar vor der Wiedergabe eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements auf einer Webseite eintritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender%2A> Methode ruft die Basis-Methode, die löst die <xref:System.Web.UI.Control.PreRender> -Ereignis für das Steuerelement, und klicken Sie dann Register mehrere Clientskripts, die auf den Seiten erforderlich sind, die Webparts enthalten steuert.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanged(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanged (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanged(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />-Ereignis aus, das eintritt, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement entweder neu ausgewählt wurde oder seine Auswahl aufgehoben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> -Ereignis, das in der Regel ein Punkt in der Zeit ist, in denen ein Entwickler möchte möglicherweise, um das Erscheinungsbild der Benutzeroberfläche (UI). Beispielsweise, wenn ein neues <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement aktiviert ist, Webparts-Steuerelements ändert sich das Rendering des neu ausgewählten Steuerelements. Nach Auswahl des Steuerelements deaktiviert ist, wird das Rendering normal zurückgegeben.  
  
 Nachdem ein Benutzer einen bestimmten ausgewählt <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement für die Bearbeitung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Methode wird aufgerufen. Wenn der Benutzer abgeschlossen ist, das Steuerelement bearbeiten, und, mit dem Ergebnis schließt, dass die Auswahl des Steuerelements gelöscht wird, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> -Methode erneut aufgerufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Es gibt mehrere Möglichkeiten, die im Zusammenhang mit der <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> Ereignis, um es Entwicklern ermöglichen, das Rendering anpassen, das auftritt, nachdem das ausgewählte Steuerelement geändert wurde. In deklarativem Code in der <see langword="&lt;asp:webpartmanager&gt;" /> Element legen fest, dass die <see langword="OnSelectedWebPartChanged" /> Attribut, und weisen Sie den Namen einer benutzerdefinierten Methode zu. In der benutzerdefinierten Methode können Sie das Rendering der ausgewählten Steuerelemente ändern, wenn das Ereignis eintritt. Eine weitere Möglichkeit ist das erben die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse und überschreiben Sie die Methode. Als dritte Möglichkeit ist die Anpassung auf der Ebene der Zone. Beispielsweise können Sie von erben die <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> Klasse, und überschreiben seine <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> Methode, um das Rendering von Steuerelementen, die aktiviert und deaktiviert werden, während der Bearbeitung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanging(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanging (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanging(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />-Ereignis aus, das während des Prozesses eintritt, bei dem das derzeit ausgewählte <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> -Ereignis, das während der Änderung wird <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement ausgewählt ist.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verwendet diese Methode, und das zugeordnete Ereignis, um bieten die Möglichkeit, einen Prozess abzubrechen, in dem das ausgewählte Steuerelement geändert wird. Z. B. die Methode aufgerufen wird, innerhalb der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> -Methode, und auch in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> Methode, um die Möglichkeit, den Prozess abzubrechen. Wenn ein Benutzer das Verb "Abbrechen" für ein Steuerelement, das bearbeitet wird klickt, das Steuerelement nicht mehr ausgewählt ist und alle Änderungen werden nicht gespeichert, da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Methode ermöglicht die Bearbeitung Änderungen abzubrechen.  
  
> [!NOTE]
>  Die Methode wird auf ähnliche Weise aufgerufen, während die Methoden, die starten und beenden den Prozess der verbindungsherstellung ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement auf ein anderes Steuerelement, um diesen Prozess abbrechen zu aktivieren.  
  
 Seitenentwickler können erstellen ein benutzerdefiniertes Handlers für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Ereignis durch das Hinzufügen der `OnSelectedWebPartChanging` -Attribut auf die `<asp:webpartmanager>` Element im deklarativen Seitenmarkup und dem Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="webPartManager.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ereignisdaten, die dem Löschvorgang des Steuerelements zugeordnet sind.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Unload" />-Basisereignis aus und löscht die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Instanz von einer Webseite.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdded(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdded (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdded(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />-Ereignis aus, das eintritt, nachdem einer Seite ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement hinzugefügt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> Methode wird aufgerufen, während des Vorgangs des Hinzufügens einer <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (oder sonstiges Serversteuerelement, das hinzugefügt wird, eine <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone) zu einer Seite.  
  
 Seitenentwickler können erstellen ein benutzerdefiniertes Handlers für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Ereignis durch das Hinzufügen der `OnWebPartAdded` -Attribut auf die <`asp:webpartmanager>` Element, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdding">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdding(class System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdding (e As WebPartAddingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdding(System::Web::UI::WebControls::WebParts::WebPartAddingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit&#xA;override this.OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />-Ereignis aus, das eintritt, während einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Zone ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Steuerelement (oder ein Server- bzw. Benutzersteuerelement) hinzugefügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> Ereignis, um anzugeben, dass ein Steuerelement gerade hinzugefügt wird. Außerdem bietet die Methode die Option zum Abbrechen des Prozess des hinzufügen. Wenn das Steuerelement erfolgreich hinzugefügt wurde, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Ereignis folgt.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das zugeordnete Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartAdding` -Attribut auf die `<asp:webpartmanager>` Element auf einer Webseite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler von abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen können überschreiben, die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" /> Methode, um die Ereignisbehandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosed(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosed (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosed(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />-Ereignis aus, um anzuzeigen, dass ein Steuerelement von einer Seite entfernt worden ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Ereignis gibt an, dass eine <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement (oder andere Server- bzw. Benutzersteuerelement) auf einer Seite erfolgreich geschlossen wurde.  
  
 Zum Schließen einer <xref:System.Web.UI.WebControls.WebParts.WebPart> Kontrolle bedeutet leider oft von einer Seite, damit es nicht wiedergegeben und auch an einen speziellen platzieren gedrückt halten Objekts mit dem Namen Seitenkatalog entfernen. Einem Seitenkatalog, das entspricht dem <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> steuern, verwaltet Verweise auf geschlossene <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente für jede Seite. Wenn eine <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> -Steuerelement wird auf einer Seite deklariert eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone, Benutzer können in den Kataloganzeigemodus schalten und Hinzufügen zur Seite alle Steuerelemente, die zuvor geschlossen wurden.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> Methode bietet eine Möglichkeit für Entwickler zum Erstellen eines benutzerdefinierten Handlers für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Ereignis. Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis hinzufügen, durch das Hinzufügen einer `OnWebPartClosed` -Attribut auf die `<asp:webpartmanager>` Element in einer Seite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen. Eine nützliche Aufgabe, die ein Entwickler in dieser Methode durchführen kann ist einen Platzhalter anstelle der geschlossenen Steuerelements anzuzeigen, die zusammen mit einer QuickInfo, die Benutzer darüber zu informieren, würde das Steuerelement zurück zur Seite hinzufügen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosing(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosing (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosing(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />-Ereignis aus, das eintritt, während ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein Serversteuerelement von einer Seite entfernt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Ereignis, das angibt, dass ein Steuerelement gerade geschlossen oder von einer Seite entfernt. Die Methode bietet auch die Möglichkeit, den schließen-Prozess abzubrechen. Wenn das Steuerelement auf der Seite erfolgreich entfernt wurde die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Ereignis folgt.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das zugeordnete Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartClosinging` -Attribut auf die `<asp:webpartmanager>` Element auf einer Webseite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler von abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen können überschreiben, die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> Methode, um die Ereignisbehandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleted(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleted (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleted(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />-Ereignis aus, das eintritt, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement unwiderruflich von einer Seite gelöscht wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> Methode wird aufgerufen, während des Löschvorgangs für ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (oder sonstiges Serversteuerelement, das hinzugefügt wird, eine <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone) von einer Seite.  
  
 Seitenentwickler können erstellen ein benutzerdefiniertes Handlers für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> Ereignis durch das Hinzufügen der `OnWebPartDeleted` -Attribut auf die <`asp:webpartmanager>` Element, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleting(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleting (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleting(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />-Ereignis aus, das anzeigt, dass gerade ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder ein Server- bzw. Benutzersteuerelement in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone) gelöscht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nur dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente können gelöscht werden, und wenn ein Steuerelement gelöscht wird, die Instanz des Steuerelements wird dauerhaft aus einer Seite entfernt und kann nicht wiederhergestellt werden. Dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelemente werden programmgesteuert hinzugefügt werden, oder aus einem Katalog von Webparts im Gegensatz zu statischen Steuerelementen, werden im Markup einer Webseite.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> Ereignis, um anzugeben, dass ein Steuerelement aus der Zone dauerhaft gelöscht wird. Die Methode bietet auch die Möglichkeit, den Löschvorgang abzubrechen. Wenn das Steuerelement erfolgreich, auf der Seite gelöscht wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> Ereignis folgt.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das zugeordnete Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartDeleting` -Attribut auf die `<asp:webpartmanager>` Element auf einer Webseite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler von abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen können überschreiben, die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" /> Methode, um die Ereignisbehandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoved(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoved (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoved(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />-Ereignis aus, das eintritt, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement an eine andere Position auf einer Seite verschoben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> Ereignis am Ende der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> -Methode, die stellt sicher, dass der Prozess der Verschiebung eines Steuerelements abgeschlossen ist, bevor Sie in der ereignismeldung wird der Handler ausgeführt code.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> Ereignis wird ausgelöst, wenn ein Steuerelement ist in der aktuellen Zone oder einer anderen Zone verschoben, und es spielt keine Rolle, ob die Verschiebung programmgesteuert oder durch einen Benutzer, die Sie das Steuerelement ziehen durchgeführt wird.  
  
 Seitenentwickler können erstellen ein benutzerdefiniertes Handlers für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> Ereignis durch das Hinzufügen der `OnWebPartMoved` -Attribut auf die <`asp:webpartmanager>` Element, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoving(class System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoving (e As WebPartMovingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoving(System::Web::UI::WebControls::WebParts::WebPartMovingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit&#xA;override this.OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />-Ereignis aus, das anzeigt, dass gerade ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein Server- bzw. Benutzersteuerelement in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Ereignis, das eintritt, wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPart> oder sonstiges Serversteuerelement in der Zone oder in eine andere Zone verschoben wird. Die Methode bietet auch die Möglichkeit, den Prozess des verschieben abzubrechen. Wenn die Verschiebung erfolgreich abgeschlossen wird, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> Ereignis folgt.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das zugeordnete Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartMoving` -Attribut auf die `<asp:webpartmanager>` Element auf einer Webseite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler von abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen können überschreiben, die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" /> Methode, um die Ereignisbehandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />-Ereignis aus, das auftritt, nachdem eine Verbindung zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> Methode löst das entsprechende Ereignis am Ende der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> -Methode, die stellt sicher, dass die erforderlichen Schritte zum Verbinden von zwei Steuerelementen abgeschlossen werden, bevor der Code im Ereignishandler ausgeführt wird.  
  
 Die Methode ermöglicht die programmgesteuerte Kontrolle über den Prozess der Erstellung von Verbindungen und das zugeordnete Ereignis ist, einen komfortablen Zugriffspunkt, aktualisieren Sie die Benutzeroberfläche (UI) oder einem Benutzer benachrichtigen, dass eine Verbindung hergestellt wurde.  
  
 Seitenentwickler können erstellen ein benutzerdefiniertes Handlers für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> Ereignis durch das Hinzufügen der `OnWebPartsConnected` -Attribut auf die <`asp:webpartmanager>` Element, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />-Ereignis aus, das eintritt, während eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen oder Server- bzw. Benutzersteuerelementen in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> -Ereignis, das tritt auf, wenn zwei Steuerelemente zum Herstellen einer Verbindung versuchen. Die Methode bietet die Möglichkeit, den Verbindungsversuch abzubrechen. Wenn die Verbindung erfolgreich ist, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> Ereignis folgt.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das zugeordnete Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartsConnecting` -Attribut auf die `<asp:webpartmanager>` Element auf einer Webseite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler von abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen können überschreiben, die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> Methode, um die Ereignisbehandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />-Ereignis aus, das auftritt, nachdem eine Verbindung zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen getrennt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> Methode löst das entsprechende Ereignis am Ende der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> -Methode, die den Prozess des Trennens einer Verbindung zwischen zwei Steuerelementen ausführt.  
  
 Die Methode ermöglicht die programmgesteuerte Kontrolle über den Prozess der beim Beenden einer Verbindung, damit Entwickler die Benutzer darüber informieren können, nehmen Sie Änderungen an der Benutzeroberfläche (UI) oder andere Änderungen an der Anwendung vorzunehmen.  
  
 Seitenentwickler können erstellen ein benutzerdefiniertes Handlers für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> Ereignis durch das Hinzufügen der `OnWebPartsDisconnected` -Attribut auf die <`asp:webpartmanager>` Element, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />-Ereignis aus, das anzeigt, dass gerade eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen oder Server- bzw. Benutzersteuerelementen in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone beendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> -Methode löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> -Ereignis, das tritt auf, wenn zwei Steuerelemente eine Verbindung beenden. Die Methode bietet die Möglichkeit zum Trennen der Verbindung wird abgebrochen. Wenn die Verbindung wurde erfolgreich entfernt wird, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> Ereignis folgt.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das zugeordnete Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartsDisconnecting` -Attribut auf die `<asp:webpartmanager>` Element auf einer Webseite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler von abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen können überschreiben, die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" /> Methode, um die Ereignisbehandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Personalization">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Personalization As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ Personalization { System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Personalization : System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf ein Objekt ab, das Personalisierungsdaten für eine Webseite enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />, die Personalisierungsdaten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Eigenschaft bietet eine Möglichkeit, den Zugriff auf die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Objekt, das einer Seite über zugeordnet ist. die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Diese Eigenschaft verwenden, können Sie die verschiedenen Member des Objekts Personalisierung zugreifen. Beispielsweise können Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> Methode Personalisierungsbereich aus der Seite wechseln freigegeben werden soll, auf den Benutzerbereich (oder umgekehrt). Sie können den aktuellen Personalisierungsbereich der Seite auch herausfinden, ob die Personalisierung auch auf der Seite aktiviert ist, welcher Anbieter für die Personalisierungsdaten usw. verwendet wird.  
  
 Beachten Sie, die die Daten verweist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> -Eigenschaft ist nur die auf Seitenebene Personalisierungsdaten, die vom nachverfolgt werden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Steuerelementspezifische Personalisierungsdaten, z. B. die Werte von personalisierbarer Eigenschaften <xref:System.Web.UI.WebControls.WebParts.WebPart> steuert, ist nicht Teil der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Eigenschaft.  
  
> [!NOTE]
>  Weitere Informationen zu den Webparts-Personalisierung, finden Sie unter [Web Parts Personalization Overview](https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Eigenschaft programmgesteuert.  
  
 Die folgende Webseite können Benutzer in den Bearbeitungsmodus wechseln, um bestimmte Aspekte der Bearbeiten der <xref:System.Web.UI.WebControls.Calendar> Steuerelement. Die **ein-/ausschalten Bereich** Schaltfläche Schaltet die Seite für Benutzer oder freigegebenen Personalisierungsbereich. Die **Bearbeitungsmodus** und **Durchsuchen-Modus** Schaltflächen schalten Sie die Seite in den entsprechenden Anzeigemodus. Beachten Sie, dass in der `<script>` markieren Sie im Abschnitt der Datei zwei Methoden, die Behandlung von Ereignissen verwenden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Eigenschaft, um nützliche Member von das zugrunde liegende Objekt zuzugreifen. Insbesondere verwenden Sie diese Methoden die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> Methode und die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> Eigenschaft des Objekts, der Zugriff erfolgt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Eigenschaft.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Personalization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/CS/wpmgrPersonalizationCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Personalization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/VB/wpmgrPersonalizationVB.aspx#1)]  
  
 Das Codebeispiel ausführen müssen Sie auch mindestens einen Benutzer personalisieren von Seiten im freigegebenen Bereich aktivieren. Fügen Sie einen Eintrag in der Datei "Web.config" der `<system.web>` Abschnitt sieht das folgende Markup.  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow  
        users="[Replace the text and brackets with a user name or   
           group.]"  
        roles="admin"   
        verbs="enterSharedScope"  />  
    </authorization>  
  </personalization>  
</webParts>   
```  
  
 Nachdem Sie die Seite in einem Browser laden, klicken Sie auf die **ein-/ausschalten Bereich** Schaltfläche, und beachten Sie, die die Seite jetzt besagt der Bereich wird freigegeben. Klicken Sie auf **Bearbeitungsmodus** um den Anzeigemodus ändern, klicken Sie auf das im Verbenmenü des sichtbaren Steuerelements, und wählen **bearbeiten** aus dem Menü. Beachten Sie, dass die Benutzeroberfläche (UI) für beide Steuerelemente bearbeiten wird angezeigt. Klicken Sie nun auf **Durchsuchen-Modus** zurückzugebenden in den normalen Durchsuchen. Wenn die Seite angezeigt wird, es befindet sich im freigegebenen Bereich, klicken Sie auf **ein-/ausschalten Bereich** erneut aus, um sicherzustellen, dass die Seite im Benutzerbereich. Als Nächstes führen Sie die gleichen Schritte zum Bearbeiten Sie des Steuerelements erneut, aber beachten, dass jetzt in der Benutzeroberfläche zum Bearbeiten der <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> Steuerelement nicht angezeigt. Dieses Steuerelement funktioniert nur, wenn die Seite im freigegebenen Personalisierungsbereich ist der Grund ist.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320">Übersicht über Webserver Webparts-Personalisierung</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScript">
      <MemberSignature Language="C#" Value="protected virtual void RegisterClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterClientScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterClientScript();" />
      <MemberSignature Language="F#" Value="abstract member RegisterClientScript : unit -&gt; unit&#xA;override this.RegisterClientScript : unit -&gt; unit" Usage="webPartManager.RegisterClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ermöglicht dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement die Ausgabe von clientseitigen Skripts, die für verschiedene Personalisierungsfeatures verwendet werden, z. B. zum Ziehen von <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen auf einer Webseite.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den an die Seite zu schreibenden Inhalt des Steuerelements empfängt.</param>
        <summary>Überschrieben, um zu verhindern, dass das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement Inhalt wiedergibt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="webPartManager.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert Zustandsdaten für das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement, sodass die Daten bei einer späteren Anforderung an die Webseite, die das Steuerelement enthält, wiederhergestellt werden können.</summary>
        <returns>Ein <see cref="T:System.Object" />, das die gespeicherten Zustandsdaten des Steuerelements enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A> Methode speichert Zustandsdaten für Eigenschaften, die gesamten Seitenpostbacks beibehalten werden soll, auch wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.SaveCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, das die zu ladenden Zustandsdaten enthält.</param>
        <summary>Speichert benutzerdefinierte Personalisierungszustandsdaten, die vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwaltet werden, sodass diese Daten bei jedem erneuten Laden der Seite neu geladen werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A> Methode ist wichtig, gerade Personalisierung, da aktiviert personalisierte Einstellungen für zukünftige Browsersitzungen gespeichert werden und die Zugriffe auf eine Seite. Die Methode speichert benutzerdefinierte Personalisierungszustandsdaten, enthält Elemente wie z. B. Folgendes: dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Serversteuerelemente, die einer Seite hinzugefügt oder aus einer Seite, Steuerelemente, die auf einer Seite verschoben wurden und dynamischen Verbindungen, die gelöscht wurden erstellt oder gelöscht wurde.  
  
 Sie können nicht direkt aus Ihrem Code diese Methode aufrufen. Sie können jedoch Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> -Methode, die wiederum ruft diese Methode zum Speichern von Personalisierungsdaten.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können diese Methode in einer abgeleiteten überschreiben <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse, um den Prozess der ergebnisspeicherung Personalisierungsdaten anzupassen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedWebPart As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ SelectedWebPart { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder sonstiges Serversteuerelement ab, das derzeit zur Bearbeitung oder zum Erstellen einer Verbindung mit einem anderen Steuerelement ausgewählt ist.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, das derzeit zur Bearbeitung oder zum Erstellen einer Verbindung ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Eigenschaft gibt einen Verweis auf eine <xref:System.Web.UI.WebControls.WebParts.WebPart> oder sonstiges Serversteuerelement, das derzeit zur Bearbeitung oder zum Herstellen einer Verbindung mit einem anderen Steuerelement ausgewählt ist.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement bietet mehrere nützliche Methoden und Ereignisse für die Behandlung des Prozess der Auswahl eines Steuerelements. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Ereignis tritt auf, unmittelbar auf ein Steuerelement ausgewählt ist, aber bevor Änderungen vorgenommen werden. Um Aktionen durchzuführen, für das Steuerelement, wenn diese Option ausgewählt ist, überschreiben die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Methode. Beispielsweise empfiehlt es sich um das Erscheinungsbild eines Steuerelements, die ausgewählt ist, aber noch nicht geändert wurde, visuell hervorgehoben, welches Steuerelement ausgewählt ist.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Ereignis tritt auf, unmittelbar nach dem Abschluss des ausgewählten Steuerelements geändert wurde. Um Aktionen durchzuführen, für das Steuerelement nach der Änderung ist, überschreiben die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanged As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ SelectedWebPartChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem auf einer Webseite die Auswahl eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements aufgehoben und auf ein anderes Steuerelement übertragen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis kann verwendet werden, in Verbindung mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Methode, um die Benutzeroberfläche (UI) des ausgewählten Steuerelements zu ändern. Z. B., wenn der Benutzer die Seite in den Entwurfsmodus wechselt (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>), und wählt dann einen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement mit der Absicht an, in eine neue Position ziehen, es ist üblich, die das Rendern des ausgewählten Steuerelements, z. B. zu ändern, indem Sie die Änderung der Farben der Rahmen oder Hintergrund, während Sie diese Option ausgewählt ist.  
  
> [!NOTE]
>  Weitere Informationen zum Verwenden von Ereignissen finden Sie unter [Vorgehensweise: Verarbeiten von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanging As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ SelectedWebPartChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt während des Prozesses ein, mit dem das auf der Webseite derzeit ausgewählte <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis kann verwendet werden, in Verbindung mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Methode. Seitenentwickler können in ihrem Code einen Ereignishandler erstellen, durch das Hinzufügen der `OnSelectedWebPartChanging` -Attribut auf die `<asp:webpartmanager>` Element in einer Seite sowie dem Wert des Attributs auf den Namen einer benutzerdefinierten Methode festlegen, die das Ereignis behandelt.  
  
 Dieses Ereignis wird während der Prozess beginnt oder beendet eine Verbindung zwischen Steuerelementen und beim Starten und Beenden einer Bearbeitung eines Steuerelements ausgelöst. Weitere Informationen finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Methode.  
  
 Normalerweise, wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Ereignis wird ausgelöst, als direktes Ergebnis einer Benutzeraktion, die das ausgewählte Steuerelement zu ändern, die das Ereignis abgebrochen werden kann. Es ist jedoch ein Szenario, in dem das Ereignis nicht abgebrochen werden kann. Wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement gelöscht wird, die <xref:System.Web.UI.WebControls.WebParts.WebPart> müssen alle darin enthaltenen Steuerelemente geschlossen werden, da Sie sonst verwaist werden. In diesem Fall die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern, schließt die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, nicht der Benutzer, und sie müssen bestimmen, welches Steuerelement derzeit ausgewählt ist und Zeitpunkt zum Ändern der Auswahl ohne jede Möglichkeit einer Unterbrechung, damit den Prozess der Bereinigung abgeschlossen werden kann alle Steuerelemente. Aus diesem Grund standardmäßig die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Methode kann nicht in diesem Szenario nicht abgebrochen werden. Ein verwandtes Ereignis, das abgebrochen werden kann, finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberSignature Language="F#" Value="member this.SetPersonalizationDirty : unit -&gt; unit" Usage="webPartManager.SetPersonalizationDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt ein Flag fest, das angibt, dass benutzerdefinierte Personalisierungsdaten für das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement geändert wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> Methode legt ein Flag, das letztendlich bewirkt, die Personalisierungskomponenten in der Webparts-Steuerelement festlegen dass, um die aktualisierten Personalisierungsdaten zu speichern. Weitere Informationen zu den Szenarien, die Änderungen an der Personalisierungsdaten, die vom nachverfolgt verursachen, können die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern, finden Sie unter der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> Methode nicht direkt aus Ihrem Code aufgerufen werden, und kann nicht überschrieben werden, da er intern vom Webparts-Steuerelement als Teil der Webparts-Personalisierung-Funktion verwendet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Die Methode kann aufgerufen werden durch eine abgeleitete <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse. Dies wäre nützlich, wenn die Personalisierung anpassen Komponenten eines Webparts-Steuerelements festgelegt und müssen daher den Prozess Festlegen von Flags für Personalisierungsdaten steuern möchten.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedWebPart">
      <MemberSignature Language="C#" Value="protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSelectedWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSelectedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.SetSelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.SetSelectedWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement, das ausgewählt wurde.</param>
        <summary>Legt den Wert der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Eigenschaft auf das derzeit ausgewählte <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> Methode wird aufgerufen, während die Prozesse, die beginnen oder enden des Steuerelements angegeben wird, durch Bearbeiten der `webPart` Parameter sowie die beginnen oder enden eine Verbindung mit `webPart`.  
  
 Am Anfang der Prozesse bearbeiten und die Verbindungszeichenfolge `webPart` ist das Steuerelement, das bearbeitet werden, oder geben Sie eine Verbindung ausgewählt wurde.  
  
 Am Ende der Prozesse bearbeiten und die Verbindungszeichenfolge `null` übergeben wird, um die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> -Methode, die Ergebnisse in das momentan ausgewählte Steuerelement nicht mehr ausgewählt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine leere Zeichenfolge ("") ab oder liegt diese fest, sodass keine Skin auf das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement angewendet werden kann.</summary>
        <value>Eine leere Zeichenfolge, die verhindert, dass dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement eine Skin zugewiesen wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> Eigenschaft überschreibt die geerbte <xref:System.Web.UI.Control.SkinID%2A?displayProperty=nameWithType> Eigenschaft, um zu verhindern, dass die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement, das ein Steuerelement Designs nicht sichtbar ist. Die Implementierung der Eigenschaft verhindert, dass eine Skin für einen Zuweisung durch Rückgabe immer eine leere Zeichenfolge aus der `get` -Accessor und immer eine Ausnahme auszulösen, wenn versucht wird, einen Wert festzulegen, der `set` Accessor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, den Eigenschaftswert festzulegen.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die Auflistung aller als statische Verbindungen definierten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />-Objekte auf einer Webseite ab.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, die alle statischen Verbindungen auf der Seite enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Eigenschaft wird verwendet, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement zum Nachverfolgen und verwalten alle statische Verbindungen auf einer Seite. Eine statische Verbindung, im Gegensatz zu einer dynamischen Verbindung muss sich nicht auf einer Seite hinzugefügt werden jedes Mal, wenn die Seite gerendert wird.  
  
 Die Auflistung, die auf diese Eigenschaft enthält alle statischen Verbindungen, die auf der Seite vorhanden sind, ob sie programmgesteuert erstellt oder angegeben werden ein `<asp:webpartconnection>` Element im Markup der Seite.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die programmgesteuerte Verwendung von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Eigenschaft.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, das Ihnen ermöglicht, das Ändern des Anzeigemodus auf einer Webparts-Seite.  
  
-   Eine Quellcodedatei, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente und eine benutzerdefinierte Schnittstelle.  
  
-   Eine Webseite, die zwei benutzerdefinierte enthält <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden können, und ein `<asp:webpartmanager>` Element.  
  
-   Eine Erläuterung der Funktionsweise des Beispiels in einem Browser.  
  
 Der folgende Code enthält nur die Webseite Teil des Beispiels. Sie müssen auch die ersten beiden Teile des Beispiels: das benutzerdefinierte Steuerelement und den Quellcode für die benutzerdefinierte Steuerelemente und die Schnittstelle aus dem Abschnitt Beispiel erhalten die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Dieses Thema erläutert auch die Optionen zum Kompilieren der <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente.  
  
 Der dritte Teil des Codebeispiels wird die Webseite. Das deklarative Markup für die Seite enthält `Register` -Direktiven für das Benutzersteuerelement und die benutzerdefinierten Steuerelemente. Gibt es eine `<asp:webpartmanager>` -Element, ein `<asp:webpartzone>` Element, in die benutzerdefinierten Steuerelemente, und ein `<asp:connectionszone>` Element. Beachten Sie, dass in der `Page_Load` -Methode, der Code überprüft, ob eine Verbindung ist bereits vorhanden und, falls nicht, einen Anbieter, Consumer und ihre entsprechenden Verbindungspunkten definiert und fügt dann eine neue Verbindung, auf den Satz von statischen Verbindungen auf die verwiesen wird durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Eigenschaft.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf die **Anzeigemodus** Dropdown-Listenfeld-Steuerelements, und wählen **Connect** Verbinden-Modus zu wechseln. Connect-Modus verwendet die `<asp:connectionszone>` Element, um Verbindungen zwischen Steuerelementen erstellen können. Im Modus verbinden, klicken Sie auf den Pfeil nach unten, in der Titelleiste des Fensters der **Postleitzahl** steuern, um dessen Verbenmenü zu aktivieren, und klicken Sie dann auf **Connect**. Nachdem die Verbindung-Benutzeroberfläche (UI) angezeigt wird, beachten Sie, dass eine Verbindung mit dem Code, der in enthaltenen bereits erstellt wurde die `Page_Load` Methode. Wenn Sie in einer späteren Browsersitzung zu dieser Seite zurückkehren, wird diese statischen Verbindung bereits eingerichtet und muss nicht jedes Mal neu erstellt werden, die die Seite geladen wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="SupportedDisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedDisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ SupportedDisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedDisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine schreibgeschützte Auflistung aller Anzeigemodi ab, die auf einer bestimmten Webseite verfügbar sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, die den Satz der auf einer bestimmten Webseite verfügbaren <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Objekte enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft enthält nur die Anzeigemodi, die tatsächlich verfügbar sind, auf einer Seite, erhält die Arten von Zonensteuerelemente, die auf der Seite vorhanden sind.  
  
> [!NOTE]
>  Anzeigemodi können deaktiviert werden, und wenn ein Anzeigemodus deaktiviert ist, wird er nicht hinzugefügt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> -Auflistung, selbst wenn der entsprechende Typ der Zone, die diese Anzeigemodus unterstützt auf der Seite vorhanden ist.  
  
 Durchsuchen-Modus und im Entwurfsmodus werden immer unterstützt. Die Anzeigemodi, die unterschiedlich sind, können sind die Bearbeitung, Katalog, und verbinden Sie die Modi. Jede dieser Anzeigemodi bezieht sich auf einen bestimmten Typ von <xref:System.Web.UI.WebControls.WebParts.ToolZone> Steuerelement. Es ist das Vorhandensein dieser spezielle Zonentyp auf einer Webseite, die einen bestimmten Anzeigemodus die Auflistung, die auf hinzuzufügende bewirkt, dass die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft. Wenn eine Webseite enthält beispielsweise eine <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone keine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> -Zone zu, und klicken Sie dann der Bearbeitungsmodus für die Anzeige einer der unterstützten Modi auf dieser Seite ist, aber der Katalog-Anzeigemodus wird nicht unterstützt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft unterscheidet sich von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> -Eigenschaft, die verweist auf eine Auflistung aller Anzeigemodi, die mit dem aktuellen verfügbar sind, <xref:System.Web.UI.WebControls.WebParts.WebPartManager> zu steuern, auch solche, die auf eine bestimmte Seite nicht unterstützt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Eigenschaft. Der Code verwendet diese Eigenschaft zum Auffüllen der Liste mit nur den Anzeigemodi, die in der aktuellen Webseite verfügbar.  
  
 Es gibt drei Anzeigemodi unterstützt auf dieser Seite: Durchsuchen, Entwerfen und zu bearbeiten. Die ersten beiden sind immer verfügbar, und der Bearbeitungsmodus ist in diesem Codebeispiel wird verfügbar, da die Seite enthält eine <xref:System.Web.UI.WebControls.WebParts.EditorZone> Steuerelement. Der Katalog und Modi nicht angezeigt werden, da die entsprechenden Zonen nicht auf dieser Seite sind.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/CS/wpmgrSuppDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/VB/wpmgrSuppDisplayModesvb.aspx#1)]  
  
 Laden Sie die Seite in einem Browser, können Sie das Dropdown-Listenfeld-Steuerelement verwenden, um die Seite Durchsuchen-Modus in den Entwurfsmodus zu wechseln und dann in den Bearbeitungsmodus. Im Bearbeitungsmodus befindet, können Sie auf das Dropdown-Verbenmenü in den Header von einem der Serversteuerelemente, und wählen **bearbeiten** Bearbeitung des Steuerelements.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Webparts-Seite-Anzeigemodus</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsDirty As Boolean Implements IPersonalizable.IsDirty" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::WebParts::IPersonalizable::IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob mit dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwaltete benutzerdefinierte Personalisierungszustandsdaten auf einer Webseite geändert wurden.</summary>
        <value>Ein boolescher Wert, der angibt, ob die Personalisierungszustandsdaten geändert wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Eigenschaft bietet eine Möglichkeit für Aufrufer, um zu bestimmen, ob die Personalisierung Daten angeben, die von verwaltet wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelements geändert hat. Wenn Benutzer personalisieren auf Seitenebene Details, z. B. durch Ändern des Seitenlayouts, erstellen oder Löschen von Verbindungen und hinzufügen oder Löschen von Steuerelementen, die Personalisierungsdaten verwaltet, indem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelements ändert. Dies ist eine Pass-Through-Methode, die für Aufrufer den Wert der geschützten gibt <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> -Eigenschaft, die von Aufrufern nicht direkt zugegriffen werden kann.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Eigenschaft gibt nicht an, ob personalisierbaren Eigenschaftswerte oder einzelne Eigenschaften, die die Darstellung der einzelnen beeinflussen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente wurden geändert. Personalisierung der Steuerungsebene wird für jedes Steuerelement einzeln nachverfolgt. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Eigenschaft gibt nur an, ob Personalisierungsdaten, die auf Seitenebene und, indem verwaltet wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelements geändert hat.  
  
 Die folgende Liste enthält einige gängige der Personalisierung, das würde dazu führen, dass die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> Eigenschaft einen Wert, der zurückgegeben `true`, um anzugeben, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement hat die Personalisierungsdaten geändert:  
  
-   Schließen eine statische <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement (oder Server- bzw. Benutzersteuerelement) auf einer Seite.  
  
-   Wiederherstellen ein geschlossenes statischen <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement aus einem Seitenkatalog zurück zu einer Seite.  
  
-   Verschieben Sie jedes Steuerelement, in der Zone oder einer anderen Zone.  
  
-   Hinzufügen eines Steuerelements aus einem Katalog von <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Serversteuerelemente oder ein Steuerelement programmgesteuert hinzufügen.  
  
-   Erstellen eine Verbindung zwischen zwei <xref:System.Web.UI.WebControls.WebParts.WebPart> steuert, entweder programmgesteuert oder mithilfe der Verbindungs-Benutzeroberfläche (UI).  
  
-   Löschen eine Verbindung zwischen zwei <xref:System.Web.UI.WebControls.WebParts.WebPart> steuert, entweder programmgesteuert oder über die Benutzeroberfläche für Verbindungen.  
  
 Zum Wert dieser Eigenschaft zugreifen zu können, müssen Sie eine Umwandlung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelementinstanz, die <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> -Schnittstelle; klicken Sie dann lesen können Sie die <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> -Eigenschaftswert.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht eine einfache Verwendung von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> -Eigenschaft, um einige allgemeine Seite Personalisierung anzugeben, Instanzen, aufgrund derer eine <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Personalisierungsdaten für des Steuerelements zu ändern.  
  
 Im Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzersteuerelement, mit dem Sie den Anzeigemodus auf einer Seite zu ändern, die Webparts-Steuerelemente enthält.  
  
-   Eine Quelldatei mit dem Code für zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die Verbindung hergestellt werden können, und einer Schnittstelle.  
  
-   Eine Webseite, die alle Steuerelemente hostet.  
  
-   Eine Erklärung der Funktionsweise der im Codebeispiels.  
  
 Der erste Teil des Codebeispiels wird das Benutzersteuerelement zum Wechseln des Anzeigemodus. Sie können den Quellcode für das Benutzersteuerelement im Abschnitt "Beispiel" der Abrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Übersicht über die Klasse. Weitere Informationen zu Anzeigemodi und wie das Benutzersteuerelement ordnungsgemäß funktioniert, finden Sie unter [Exemplarische Vorgehensweise: Webparts-Seite wechseln des Anzeigemodus auf einer Webseite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Beispiels wird die Quelldatei mit den benutzerdefinierten Steuerelementen und der Schnittstelle. Beachten Sie, dass die `IZipCode` -Schnittstelle macht eine Methode, und diese Methode als implementiert wird, in der benutzerdefinierten `ZipCodeWebPart` -Steuerelement dient als eine Rückrufmethode, aktivieren Sie `ZipCodeWebPart` , die in einem Szenario mit einer Verbindung als Anbieter fungiert. Das andere Steuerelement `WeatherWebPart`, fungiert als Consumer in einer Verbindung zu steuern, indem bereitgestellte Schnittstelle nutzen `ZipCodeWebPart`. In einer echten Anwendung `WeatherWebPart` konnte eine personalisierte Postleitzahl des Anbieters nutzen, und geben Sie dann die grafische Wetterinformationen für Benutzer.  
  
 Das Codebeispiel ausführen müssen Sie diesen Quellcode kompilieren. Sie können explizit kompilieren und die resultierende Assembly im Bin-Ordner der Website oder im globalen Assemblycache ablegen. Alternativ können Sie den Quellcode im Ordner "App_Code" Ihrer Website, ablegen, wo er zur Laufzeit dynamisch kompiliert wird. Dieses Codebeispiel verwendet die dynamische Kompilierung; Beachten Sie daher, dass die `Register` Richtlinie für diese Komponente am oberen Rand der Webseite enthält nur `TagPrefix` und `Namespace` Attribute, ohne eine `Assembly` Attribut. Eine exemplarische Vorgehensweise, die zeigt, wie kompiliert wird, finden Sie unter [Exemplarische Vorgehensweise: Entwickeln und verwenden ein benutzerdefinierten Webserver-Steuerelement](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/ZipCodeComponent.vb#2)]  
  
 Der dritte Teil des Codebeispiels wird die Webseite. Beachten Sie, dass es zwei enthält <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zonen, wobei das erste Element, das die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Es gibt auch eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone, die einen Standard enthält <xref:System.Web.UI.WebControls.Calendar> -Steuerelement, das Benutzer zur Seite hinzufügen können. Die `<asp:connectionszone>` -Element stellt eine Benutzeroberfläche für Benutzer zum Herstellen von Verbindungen zwischen Steuerelementen für Verbindungen bereit. In der `Page_PreRender` -Methode, um festzustellen, ob die Personalisierungsdaten geändert wurden und wenn dies der Fall ist, prüft, aktualisiert den Text von `Label1`.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/wpmgrIsDirtyCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/wpmgrIsDirtyVB.aspx#1)]  
  
 Laden Sie die Seite in einem Browser, versuchen Sie, erstellen einige der Szenarien aufgeführt, die im Abschnitt "Hinweise" dieses Themas, die die Personalisierungsdaten geändert wird. Wie Sie verschiedene Änderungen vornehmen, wenn eine Änderung eines der Szenarien Personalisierung von nachverfolgten umfasst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> zu steuern, den Text des der `Label1` -Steuerelements angezeigt wird, um anzugeben, dass Personalisierungsdaten geändert wurden. Sie haben unter anderem folgende Möglichkeiten:  
  
-   Erstellen Sie eine Verbindung zwischen Steuerelementen durch Klicken auf die **Connect WebPart Controls** Schaltfläche.  
  
-   Verwenden der **Anzeigemodus** Dropdown-Listenfeld-Steuerelement auf die Seite in den Katalogmodus wechseln und fügen Sie der **Kalender** Steuerelement mit dem zweiten <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone.  
  
-   Änderung wieder die Seite auf die Durchsuchen-Modus, klicken Sie auf das Verbenmenü (dargestellt mit einem Pfeil in der Titelleiste) für die **Kalender** steuern, und wählen Sie **schließen** schließen und zum Seitenkatalog hinzufügen.  
  
-   Die Seite Katalogmodus zurückzukehren, und fügen die **Kalender** die Steuerung wieder an die Seite.  
  
-   Verwenden der **Anzeigemodus** steuern, um die Seite in den Entwurfsmodus zu wechseln, und ändern Sie das Layout der Steuerelemente durch Ziehen eine oder mehrere von ihnen in einer anderen Zone oder an eine andere Position in der gleichen Zone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Load">
      <MemberSignature Language="C#" Value="void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Load (state As PersonalizationDictionary) Implements IPersonalizable.Load" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Load;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, das die zu ladenden Zustandsdaten enthält.</param>
        <summary>Gibt zuvor gespeicherte benutzerdefinierte Personalisierungszustandsdaten zurück, die in das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement geladen werden müssen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist eine Implementierung der <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=nameWithType> -Methode, die eine Möglichkeit bietet, für die Webparts-Steuerelement für direkt den Zugriff auf die geschützte festgelegt <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=nameWithType> Methode. Wenn diese Methode aufgerufen wird, speichert er die benutzerdefinierten Personalisierungsdaten, die von verwaltet werden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement und die zuvor im dauerhaften Datenspeicher für die spätere Verwendung im Initialisierungsprozess gespeichert wurden.  
  
> [!NOTE]
>  In den meisten Fällen muss Seiten- und Steuerelementausgabe Entwicklercode nicht zum Aufrufen dieser Methode, da er vom Webparts-Steuerelement als Mechanismus zum Abrufen von Personalisierungsdaten in erster Linie verwendet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ein Szenario, in dem Entwickler diese Methode verwenden, wird, wenn sie ein benutzerdefiniertes Personalisierung Framework anstelle der zu verwendende entwickeln vom Webparts-Steuerelementsatz bereitgestellt. In solchen Fällen können Entwickler erben von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse, und überschreiben die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> Methode, um eine benutzerdefinierte Implementierung der zurückzugeben eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> Objekt. Die benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> Objekt würde die Implementierung von Aufrufen der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> -Methode an die richtige Zeit zum Laden von benutzerdefinierten Personalisierungsdaten.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Save">
      <MemberSignature Language="C#" Value="void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Save (state As PersonalizationDictionary) Implements IPersonalizable.Save" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Save;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, das die zu speichernden Zustandsdaten enthält.</param>
        <summary>Speichert benutzerdefinierte Personalisierungszustandsdaten, die vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwaltet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> Methode ist eine Implementierung der <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=nameWithType> -Methode, die eine Möglichkeit bietet, für die Webparts-Steuerelement für direkt den Zugriff auf die geschützte festgelegt <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=nameWithType> Methode. Wenn diese Methode aufgerufen wird, speichert alle personalisierte Daten, die von verwaltet werden die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement im dauerhaften Datenspeicher, die für eine Webparts-Anwendung konfiguriert.  
  
> [!NOTE]
>  In den meisten Fällen muss Seiten- und Steuerelementausgabe Entwicklercode nicht zum Aufrufen dieser Methode, da er vom Webparts-Steuerelement als Mechanismus zum Speichern von Personalisierungsdaten in erster Linie verwendet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ein Szenario, in der Entwickler, mit dieser Methode arbeiten würde, wird vom Webparts-Steuerelementsatz, wenn sie ein benutzerdefiniertes Personalisierung Framework anstelle der zu verwendende entwickeln bereitgestellt werden. In solchen Fällen können Entwickler erben von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse, und überschreiben die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> Methode, um eine benutzerdefinierte Implementierung der zurückzugeben eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> Objekt. Die benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> Objekt würde die Implementierung von Aufrufen der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" /> Methode zum geeigneten Zeitpunkt die benutzerdefinierten Personalisierungsdaten gespeichert.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webPartManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wendet Personalisierungszustandsdaten auf das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement an und ruft die Basismethode auf, um die Nachverfolgung von Änderungen an Ansichtszustandsdaten für das Steuerelement zu aktivieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Änderungen an den Ansichtszustand Daten befinden sich in einem <xref:System.Web.UI.StateBag> Objekt aus, und kann über des Steuerelements zugegriffen werden <xref:System.Web.UI.Control.ViewState%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dessen Hilfe untergeordnete Steuerelemente sichtbar sein können.</summary>
        <value>Ein boolescher Wert, der angibt, ob ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement und dessen untergeordnete Steuerelemente sichtbar sind. <see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement überschreibt die <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> Wert zurückzugebende Eigenschaft `true` für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> Eigenschaft. Obwohl der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> -Steuerelement selbst ist nicht sichtbar ist, der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> -Eigenschaft muss festgelegt werden, um `true` , damit alle untergeordneten Steuerelemente standardmäßig sichtbar sind.  
  
 Wenn Sie versuchen, den Wert festlegen die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> -Eigenschaft wird immer ein Fehler generiert, da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement wurde das Verhalten des Basis außer Kraft, und verhindert, dass die Eigenschaft einen Wert zuweist.  
  
 Diese Eigenschaft kann nicht in visuellen Designern gebunden werden, aber Sie kann zur Laufzeit gebunden werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.BindableAttribute>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, der Eigenschaft einen Wert zuzuordnen.</exception>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdded As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartAdded;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder sonstiges Serversteuerelement einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone hinzugefügt wurde, um anzuzeigen, dass das Steuerelement erfolgreich hinzugefügt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Ereignis eignet sich für den, der angibt, dass ein dynamisches Steuerelement (ein Steuerelement programmgesteuert hinzugefügt und im Gegensatz zu den in einem Seitenmarkup deklariert wird) zu einer Zone wurde erfolgreich hinzugefügt wurde. In Verbindung mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> Methode die, das Ereignis bietet Entwicklern eine Möglichkeit zum Aktualisieren der Benutzeroberfläche (UI) oder die Benutzer darüber zu benachrichtigen, dass ein Steuerelement erfolgreich hinzugefügt wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdding">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdding As WebPartAddingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAddingEventHandler ^ WebPartAdding;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " Usage="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Zone ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Steuerelement oder ein anderes Serversteuerelement hinzugefügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> Ereignis wird ausgelöst, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> Methode nach dem Hinzufügen eines Steuerelements zu einer Zone begonnen hat. Dieses Ereignis bietet die Möglichkeit, den Prozess abzubrechen, bevor er abgeschlossen ist. Wenn der Prozess des Hinzufügens erfolgreich ist, wird dieses Ereignis gefolgt von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Ereignis.  
  
 Seitenentwickler können benutzerdefinierte Handler für das Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartAdding` -Attribut auf die `<asp:webpartmanager>` Element in einer Seite, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosed As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartClosed;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder Server- bzw. Benutzersteuerelement) von einer Seite entfernt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Ereignis weist darauf hin, dass ein Steuerelement von einem Benutzer oder programmgesteuert erfolgreich geschlossen wurde. Zum Schließen einer <xref:System.Web.UI.WebControls.WebParts.WebPart> Kontrolle bedeutet leider oft von einer Seite, damit es nicht wiedergegeben und auch an einen speziellen platzieren gedrückt halten Objekts mit dem Namen Seitenkatalog entfernen. Einem Seitenkatalog, das entspricht dem <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> steuern, verwaltet Verweise auf geschlossene <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente für jede Seite. Wenn eine <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> -Steuerelement wird auf einer Seite deklariert eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone können Benutzer in Kataloganzeigemodus auf einer Seite wechseln und hinzufügen zurück zu einer Seite alle Steuerelemente, die zuvor geschlossen wurden.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Ereignis zugeordnet ist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> -Methode, die das Ereignis auslöst und stellt einen Handler dafür bereit.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis hinzufügen, durch das Hinzufügen einer `OnWebPartClosed` -Attribut auf die `<asp:webpartmanager>` Element in einer Seite, und klicken Sie dann einen Namen für die benutzerdefinierte Methode dem Attribut zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosing As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartClosing;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder ein Server- bzw. Benutzersteuerelement) von einer Seite entfernt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Ereignis wird ausgelöst, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> Methode bei der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement ist ein Steuerelement. Wenn das Entfernen des Steuerelements erfolgreich ist, wird dieses Ereignis gefolgt von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Ereignis.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartClosed` -Attribut auf die <`asp:webpartmanager>` Element in einer Seite, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 Normalerweise, wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Ereignis wird ausgelöst, als direktes Ergebnis einer Benutzer-schließen eine <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement, das Ereignis abgebrochen werden kann. Es ist jedoch ein Szenario, in dem das Ereignis nicht abgebrochen werden kann. Wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement gelöscht wird, die <xref:System.Web.UI.WebControls.WebParts.WebPart> müssen alle darin enthaltenen Steuerelemente geschlossen werden, da Sie sonst verwaist werden. In diesem Fall die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern, schließt die <xref:System.Web.UI.WebControls.WebParts.WebPart> gesteuert wird, nicht für den Benutzer. Und wann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement ist beim Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> Methode zum Schließen jedes Steuerelement und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> -Ereignis ausgelöst wird, die das Ereignis nicht (entwurfsbedingt) abgebrochen, da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> muss zum Abschließen der Aufgabe der Bereinigung alle den Steuerelementen der Zone.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleted As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartDeleted;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder sonstiges Serversteuerelement aus einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone gelöscht wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> Ereignis eignet sich für Sie gibt an, dass ein dynamisches Steuerelement (ein Steuerelement programmgesteuert hinzugefügt und im Gegensatz zu den in einem Seitenmarkup deklariert wird) aus einer Zone wurde erfolgreich gelöscht wurde. In Verbindung mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> Methode die, das Ereignis bietet Entwicklern eine Möglichkeit zum Aktualisieren der Benutzeroberfläche (UI) oder die Benutzer darüber zu benachrichtigen, dass ein Steuerelement erfolgreich gelöscht wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleting As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartDeleting;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während eine Instanz eines dynamischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements oder eines anderen Serversteuerelements dauerhaft aus einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone gelöscht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> Ereignis wird ausgelöst, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> Methode, die während des Löschvorgangs für eines dynamischen Steuerelements (eine, die programmgesteuert oder durch einen Benutzer über die Benutzeroberfläche von Webparts hinzugefügt wurde). Das Ereignis bietet die Möglichkeit, den Prozess abzubrechen, bevor er abgeschlossen ist. Wenn der Löschvorgang erfolgreich abgeschlossen wurde, wird dieses Ereignis gefolgt von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> Ereignis.  
  
 Seitenentwickler können benutzerdefinierte Handler für das Ereignis bereitstellen, durch das Hinzufügen der `OnWebPartDeleting` -Attribut auf die `<asp:webpartmanager>` Element in einer Seite, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartMoved">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoved As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartMoved;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement an eine andere Position auf einer Webseite verschoben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis gilt sowohl für statisch (deklariert in das Markup einer Webseite) als auch für dynamische Steuerelemente. Es zugeordnet ist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Methode. Da das Ereignis ausgelöst wird, nachdem eine Verschiebung abgeschlossen ist, können Entwickler einen Ereignishandler, um eine Benachrichtigung für Benutzer, eine Validierung oder einige andere Aktionen bereitzustellen enthalten. Um einen Ereignishandler hinzuzufügen, fügen Sie eine `OnWebPartMoved` -Attribut auf die `<asp:webpartmanager>` Element in einer Seite, und weisen Sie den Namen einer benutzerdefinierten Methode für das Attribut.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartMoving">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoving As WebPartMovingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartMovingEventHandler ^ WebPartMoving;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " Usage="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während ein in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Zone enthaltenes <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Steuerelement oder ein anderes Serversteuerelement verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Ereignis wird ausgelöst, wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPart> oder sonstiges Serversteuerelement in der eigenen oder in eine andere Zone verschoben wird. Dies kann auftreten, wenn ein Benutzer ein Steuerelement zieht, und bei programmgesteuerten verschieben.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Ereignis wird ausgelöst, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> -Methode sowie eine Möglichkeit, den Prozess des verschieben abzubrechen, bevor er abgeschlossen ist. Wenn der Verschiebevorgang abgeschlossen ist, und das Steuerelement in einer neuen Position platziert wird, dieses Ereignis von gefolgt wird der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> Ereignis.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis erstellen, durch das Hinzufügen der `OnWebPartMoving` -Attribut auf die `<asp:webpartmanager>` Element, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebParts As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartCollection ^ WebParts { System::Web::UI::WebControls::WebParts::WebPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebParts : System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf alle vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement auf einer Webseite nachverfolgten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelemente ab.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" />, die Verweise auf einen Satz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Eigenschaft wird verwendet, indem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement alle nachverfolgen <xref:System.Web.UI.WebControls.WebParts.WebPart> in enthaltenen Steuerelemente <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen auf der Seite. Auch wenn die Auflistung schreibgeschützt ist, können Sie einzelne zugreifen <xref:System.Web.UI.WebControls.WebParts.WebPart> programmgesteuert über die Sammlung, und stellen Änderungen steuert.  
  
> [!NOTE]
>  Es ist möglich, dass eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement platziert wird, auf einer Seite außerhalb von eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone, die Ergebnisse im Steuerelement nicht nachverfolgt werden, indem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern oder auf die verwiesen wird der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Auflistung. Es ist jedoch wenig Sinn, verwenden eine <xref:System.Web.UI.WebControls.WebParts.WebPart> außerhalb einer Zone zu steuern, da es dann Webparts-Funktionen verliert und als ein normaler Serversteuerelement fungiert.  
  
 Jede Art von Steuerelement, das in einer Zone ab, ob eine benutzerdefinierte platziert werden kann <xref:System.Web.UI.WebControls.WebParts.WebPart> -Steuerelement, ein ASP.NET-Standardsteuerelement, ein Benutzersteuerelement oder ein benutzerdefiniertes Serversteuerelement, wird als eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement zur Laufzeit. Wenn ein Steuerelement, das nicht ist eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement befindet sich einer <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone, die zur Laufzeit ASP.NET dient als Wrapper für das Steuerelement mit einer <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt, sodass das Steuerelement "true" fungieren kann <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Aus diesem Grund mithilfe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> -Eigenschaft, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement kann jeden Typ des Steuerelements, unabhängig davon, ob es abgeleitet Nachverfolgen der <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> -Eigenschaft programmgesteuert auf Access einzelne <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente. Beachten Sie, dass im deklarativen Markup für die Webseite, in der `<asp:webpartzone>` -Elements werden zwei standard ASP.NET-Serversteuerelemente. Obwohl diese erben nicht von der <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse, da sie in einer Zone sie sind mit umbrochen eine <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> -Objekt zur Laufzeit und somit aufgenommen, in der Auflistung, die auf die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Eigenschaft. Sie können auch benutzerdefinierte hinzufügen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, Benutzersteuerelemente oder benutzerdefinierten Server steuert, in dieser Zone, und sie würde die gleiche Weise verarbeitet werden.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_WebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/CS/wpmgrWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_WebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/VB/wpmgrWebPartsVB.aspx#1)]  
  
 Beachten Sie, dass für das Codebeispiel funktioniert, Sie eine Einstellung in der Datei "Web.config" So aktivieren Sie die Webparts-Description-Dateien exportieren hinzufügen müssen. Stellen Sie sicher, dass Sie eine Web.config-Datei im gleichen Verzeichnis wie die Webseite für dieses Codebeispiel verfügen. In der `<system.web>` Abschnitt, stellen Sie sicher, dass eine `<webParts>` -Element mit einer `enableExport` -Attributsatz auf `true`, wie im folgenden Markup.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Laden Sie die Seite in einem Browser ein, wenn Sie auf die **WebPart Count** Schaltfläche der Code verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Eigenschaft, um die Anzahl der Steuerelemente in der Auflistung zurückzugeben. Wenn Sie auf die **Kalendertitels ausblenden** Schaltfläche, den Code der Kalender geändert, sodass er nur mit einem Rahmen und ohne Titel wiedergegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsConnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem eine bestimmte Verbindung zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen (bzw. Server- oder Benutzersteuerelementen) erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> Ereignis zugeordnet ist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> Methode. Das Ereignis ist hilfreich, da nach dem Sie wissen, dass eine Verbindung hergestellt wurde, Sie möchten möglicherweise informiert den Benutzer über die Tatsache aus, oder ändern sich sogar die Benutzeroberfläche (UI) der Seite. Beispielsweise empfiehlt es sich um eine Grafik, die eine erfolgreiche Verbindung zwischen zwei Steuerelementen vorschlägt, anzeigen oder eine kurze Meldung anzeigen und ändern Sie dann die Seite-Anzeigemodus sichern, Durchsuchen-Modus.  
  
 Seitenentwickler können mit diesem Ereignis ein benutzerdefinierten ereignishandlers zuordnen, durch das Hinzufügen der `OnWebPartsConnected` -Attribut auf die `<asp:webpartmanager>` Element auf der Seite, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsConnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während eine Verbindung zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen (oder in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone platzierten Server- bzw. Benutzersteuerelementen) erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Ereignis wird ausgelöst, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> -Methode, und signalisiert, dass die Verbindung begonnen hat (z. B. ein Benutzer verfügt über ein Steuerelement ausgewählt und auf eine Connect-Verb geklickt), aber noch nicht abgeschlossen ist. Das Ereignis bietet die Möglichkeit, eine Verbindung abzubrechen, bevor er abgeschlossen ist. Wenn die Verbindung erfolgreich hergestellt wurde, wird dieses Ereignis gefolgt von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> Ereignis.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis hinzufügen, durch das Hinzufügen der `OnWebPartsConnecting` -Attribut auf die `<asp:webpartmanager>` Element, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsDisconnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen oder Serversteuerelementen beendet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> Ereignis zugeordnet ist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> Methode. Das Ereignis ist hilfreich, da nach dem Sie wissen, dass eine Verbindung beendet wird, Sie möchten die Benutzer darüber informieren, einige Cleanup-Aktionen ausführen, im Code oder andere Änderungen vornehmen, in der Benutzeroberfläche (UI).  
  
 Seitenentwickler können mit diesem Ereignis ein benutzerdefinierten ereignishandlers zuordnen, durch das Hinzufügen der `OnWebPartsDisConnected` -Attribut auf die `<asp:webpartmanager>` Element auf der Seite, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsDisconnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während die Verbindung zwischen zuvor verbundenen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen oder Serversteuerelementen beendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis wird ausgelöst, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> -Methode, und signalisiert die Tatsache, dass ein Benutzer ein Trennen-Verb geklickt hat oder die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> andernfalls Methode aufgerufen wurde. Das Ereignis bietet die Möglichkeit zum Abbrechen eine Verbindung beendet, bevor er abgeschlossen ist. Wenn die Verbindung erfolgreich beendet wird, wird dieses Ereignis gefolgt von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> Ereignis.  
  
 Seitenentwickler können einen benutzerdefinierten Handler für das Ereignis hinzufügen, durch das Hinzufügen der `OnWebPartsDisconnecting` -Attribut auf die `<asp:webpartmanager>` Element, und das Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 Normalerweise, wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis wird ausgelöst, als direktes Ergebnis der Aktion eines Benutzers, der eine Verbindung beendet wird, kann das Ereignis abgebrochen werden. Es gibt jedoch mehrere Szenarios, in denen das Ereignis nicht abgebrochen werden kann. Das erste Szenario ist, wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPartZone> -Steuerelement gelöscht wird, die <xref:System.Web.UI.WebControls.WebParts.WebPart> müssen alle darin enthaltenen Steuerelemente geschlossen werden, da Sie sonst verwaist werden. In diesem Fall die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> steuern, schließt die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, nicht der Benutzer, und es zudem muss können Sie die Verbindungen aller verbundenen Steuerelemente ohne jede Möglichkeit einer Unterbrechung zu beenden, damit den Prozess für das Bereinigen von, und schließen abgeschlossen werden kann alle Steuerelemente. Aus diesem Grund standardmäßig die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Methode kann nicht in diesem Szenario nicht abgebrochen werden. Ein verwandtes Ereignis, das abgebrochen werden kann, finden Sie unter den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Ereignis.  
  
 Das zweite Szenario, in dem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis nicht abgebrochen ist, wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> aufgerufen ("this" aufgerufen, während jede Anforderung an eine Seite, z. B.), und es ist eine Art von Konflikt in der vorhandenen Verbindungen auf einer Seite. Z. B. ein Benutzer vielleicht Steuerelement y, X-Steuerelement herstellt, aber ein freigegebener Benutzer verbindet Steuerelement X, Z zu steuern und X-Steuerelement ist noch nicht zulässig, um mehrere Verbindungen zu bilden. In diesem Fall der einzelnen Benutzer Einstellungen für die Verbindung Vorrang, und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement löst den Konflikt durch Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> -Methode und Trennen der Verbindung zwischen x- und z für den angegebenen Benutzer. Da diese Trennung der Verbindung für die Auflösung des Konflikts, Entwurf ist die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis nicht abgebrochen werden in diesem Szenario.  
  
 Das dritte Szenario, in dem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Methode kann nicht abgebrochen werden ist, wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Serversteuerelement, das derzeit verbunden ist, wird entweder gelöscht oder geschlossen. Da das Steuerelement auf jeden Fall auf der Seite entfernt werden soll, ist eine logische Notwendigkeit beim Entfernen der Verbindung. Aus diesem Grund, wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement ruft die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> -Methode, die wiederum löst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis es beabsichtigt ist keine Möglichkeit zum Abbrechen des Ereignisses.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Webparts-Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Zones">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zones As WebPartZoneCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ Zones { System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zones : System.Web.UI.WebControls.WebParts.WebPartZoneCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf eine Auflistung aller <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zonen auf einer Webseite ab.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" />, die auf einen Satz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zonen verweist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> Eigenschaft wird verwendet, durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement zum Nachverfolgen der <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen auf einer Webseite. Beachten Sie, dass die Eigenschaft nicht alle Arten von Zonen verwiesen wird. Es verweist auf die nur von abgeleiteten Zonen der <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Klasse, einschließlich <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zonen.  
  
 Auch wenn die Auflistung, die auf die verwiesen wird durch die Eigenschaft schreibgeschützt ist, können Sie es verwenden, den Zugriff auf die einzelnen Objekte in der Auflistung und programmgesteuert mit ihnen arbeiten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> -Eigenschaft programmgesteuert auf Access einzelne <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Steuerelemente einer zone. Beachten Sie, dass im deklarativen Markup für die Webseite, es zwei gibt `<asp:webpartzone>` Elemente, die jeweils ein Serversteuerelement. In der `<script>` Abschnitt der Seite, der Code verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> Eigenschaft, um die einzelnen Zonen die Zone IDs auflisten und dann ändern die Farbe des Hintergrunds auf der zweiten Zone zuzugreifen.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Zones#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/CS/wpmgrzonescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Zones#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/VB/wpmgrzonesvb.aspx#1)]  
  
 Beachten Sie, dass für das Codebeispiel funktioniert, Sie eine Einstellung in der Datei "Web.config" So aktivieren Sie die Webparts-Description-Dateien exportieren hinzufügen müssen. Stellen Sie sicher, dass Sie eine Web.config-Datei im gleichen Verzeichnis wie die Webseite für dieses Codebeispiel verfügen. In der `<system.web>` Abschnitt, stellen Sie sicher, dass eine `<webParts>` -Element mit einer `enableExport` -Attributsatz auf `true`, wie im folgenden Markup.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Laden Sie die Seite in einem Browser ein, wenn Sie auf die **List Zone IDs** Schaltfläche der Code verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> Eigenschaft, die IDs aller Zonen in der Auflistung. Wenn Sie auf die **Change Zone BackColor** Schaltfläche, der Code ändert die Hintergrundfarbe der zweiten Zone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>