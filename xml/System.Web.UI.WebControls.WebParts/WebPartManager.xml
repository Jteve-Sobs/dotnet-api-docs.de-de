<Type Name="WebPartManager" FullName="System.Web.UI.WebControls.WebParts.WebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c703891c7a4ebdf7f78b5a40a7746c8ac071f701" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73391016" /></Metadata><TypeSignature Language="C#" Value="public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartManager extends System.Web.UI.Control implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartManager&#xA;Inherits Control&#xA;Implements INamingContainer, IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartManager : System::Web::UI::Control, System::Web::UI::INamingContainer, System::Web::UI::WebControls::WebParts::IPersonalizable" />
  <TypeSignature Language="F#" Value="type WebPartManager = class&#xA;    inherit Control&#xA;    interface INamingContainer&#xA;    interface IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IPersonalizable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ViewStateModeById</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als zentrale Klasse des Webparts-Steuerelementsatzes und verwaltet alle Webparts-Steuerelemente, -Funktionen und -Ereignisse, die auf einer Webseite auftreten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement fungiert als Hub oder Steuerungszentrum einer Webparts Anwendung. Auf jeder Seite, die Webparts-Steuerelemente verwendet, muss nur eine<xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement Instanz vorhanden sein. Wie bei den meisten Aspekten Webparts Anwendungen funktioniert das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement nur mit authentifizierten Benutzern. Außerdem funktioniert seine Funktionalität fast vollständig mit Server Steuerelementen, die sich in Webparts Zonen befinden, die von der <xref:System.Web.UI.WebControls.WebParts.WebZone>-Klasse erben. Server Steuerelemente, die sich auf einer Seite außerhalb dieser Zonen befinden, können nur sehr wenig Webparts Funktionalität oder Interaktion mit dem <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement aufweisen.  
  
 Als Hub für Webparts Funktionen auf einer Seite führt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement die Arten von Aufgaben aus, die in der folgenden Tabelle beschrieben werden.  
  
|Aufgaben Kategorie|Funktionsweise des Steuer Elements|  
|-------------------|---------------------------|  
|Überwachungs Webparts Steuerelemente|Verfolgt viele verschiedene Arten von Steuerelementen auf einer Seite, die Webparts Features bereitstellen, einschließlich <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen, Verbindungen, Zonen und anderen.|  
|Hinzufügen und Entfernen von Webparts Steuerelementen|Stellt die Methoden zum Hinzufügen, löschen und Schließen von <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen auf einer Seite bereit.|  
|Verwalten von Verbindungen|Erstellt Verbindungen zwischen Steuerelementen und überwacht die Verbindungen sowie die Prozesse zum Hinzufügen und Entfernen der Verbindungen.|  
|Personalisieren von Steuerelementen und Seiten|Ermöglicht Benutzern das Verschieben von Steuerelementen an verschiedene Positionen auf einer Seite und das Starten der Ansichten, in denen Benutzer die Darstellung, Eigenschaften und das Verhalten von Steuerelementen bearbeiten können. Verwaltet benutzerspezifische Personalisierungs Einstellungen auf jeder Seite.|  
|Umschalten zwischen verschiedenen Seitenansichten|Schaltet eine Seite zwischen verschiedenen spezialisierten Ansichten der Seite um, sodass Benutzer bestimmte Aufgaben ausführen können, z. b. das Ändern des Seitenlayouts oder das Bearbeiten von Steuerelementen.|  
|Wecken von Webparts Lebenszyklus Ereignissen|Definiert, löst und ermöglicht Entwicklern das Verarbeiten von Lebenszyklus Ereignissen von Webparts Steuerelementen, z. b. beim Hinzufügen, verschieben, verbinden oder Löschen von Steuerelementen.|  
|Aktivieren von Import und Export von Steuerelementen|Exportiert XML-Streams, die den Zustand der Eigenschaften von <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen enthalten, und ermöglicht es Benutzern, die Dateien für die Personalisierung von komplexen Steuerelementen auf anderen Seiten oder Websites zu importieren.|  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse verfügt über einen großen Satz von Eigenschaften. In Übereinstimmung mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Rolle der Nachverfolgung anderer Steuerelemente verfügt sie über eine Reihe von Eigenschaften, die auf Auflistungen von Webparts Steuerelementen oder andere spezielle Webparts Objekte verweisen. Die Eigenschaften "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>", "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>", "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>", "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>", "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>", "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>", "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>" und "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>" sind alle Sammlungen, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement für die Überwachung  
  
 Eine andere Gruppe von Eigenschaften enthält anpassbare Warnungen, die in bestimmten Szenarien auftreten, die in einer Webparts Anwendung auftreten. Dies schließt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> Eigenschaften ein.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse überschreibt einige ihrer geerbten Basis Eigenschaften, die von vielen Webserver-Steuerelementen verwendet werden. Dazu gehören die Eigenschaften <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>.  
  
 Zum Schluss gibt es eine Gruppe von Eigenschaften, die für den Zugriff auf den aktuellen Zustand der Anwendung nützlich sind. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft gibt den aktuellen Anzeigemodus an, in dem sich eine Seite befindet. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>-Eigenschaft gibt an, ob ein Steuerelement Client seitiges Skript renderbar ist, was in Situationen, in denen Benutzer über Browser mit unterschiedlichen Funktionen verfügen oder die Skripterstellung deaktiviert haben, relevant ist. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>-Eigenschaft ist nützlich für Verweise auf eine Hilfsprogrammklasse, die die Aufrufe an eine Reihe wichtiger Webparts Methoden enthält, die für Erweiterbarkeits Fälle verwendet werden. Wenn Sie die Aufrufe dieser Methoden in einer separaten Klasse (der <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>-Klasse) ausblenden, wird die eigene API der <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse vereinfacht. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft ermöglicht den Zugriff auf die Personalisierungs Objekte, in denen die Personalisierungs Einstellungen der Benutzer gespeichert werden und die Daten dauerhaft im permanenten Speicher gespeichert werden. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>-Eigenschaft gibt an, welches <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement auf einer Seite aktuell vom Benutzer oder der Anwendung ausgewählt wird. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>-Eigenschaft gibt an, ob sich benutzerdefinierte Personalisierungs Daten in einem <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement geändert haben.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement enthält fünf integrierte Anzeigemodi oder Ansichten einer Webseite. Entwickler können diese Funktion erweitern und benutzerdefinierte Anzeigemodi erstellen, indem Sie Typen wie die <xref:System.Web.UI.WebControls.WebParts.WebZone>-Klasse oder die <xref:System.Web.UI.WebControls.WebParts.ToolZone>-Klasse erweitern. Benutzer können eine Seite in die verschiedenen Anzeigemodi wechseln, vorausgesetzt, dass die richtige Art von Steuerelementen, die einem bestimmten Anzeigemodus entsprechen, auf einer Seite vorhanden ist.  
  
> [!NOTE]
>  Diese Funktion kann erweitert werden, sodass Benutzer in einen benutzerdefinierten Anzeigemodus wechseln können, ohne dass eine entsprechende Zone auf der Seite vorhanden ist. Das Standardverhalten ist jedoch, dass Anzeigemodi Zonen entsprechen.  
  
 Die Standard Anzeigemodi werden durch öffentliche Felder in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse dargestellt. In der folgenden Tabelle werden die Felder und die Anzeigemodi zusammengefasst, auf die Sie verweisen. Auf den aktuellen Anzeigemodus einer Seite, wie oben erwähnt, wird immer in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft verwiesen, und die Gruppe der Anzeigemodi, die auf einer bestimmten Seite möglich ist, wenn die Art der auf der Seite vorhandenen Zonen enthalten ist, ist in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft enthalten.  
  
|Feld|Details zum Anzeigemodus|  
|-----------|--------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|Die normale Benutzeransicht einer Webseite. der standardmäßige und häufigste Anzeigemodus.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|Die Ansicht, in der Benutzer Steuerelemente neu anordnen oder löschen können, um das Seitenlayout zu ändern.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|Die Ansicht, in der eine Bearbeitungs Benutzeroberfläche (UI) sichtbar wird. Benutzer können die Darstellung, die Eigenschaften und das Verhalten der Steuerelemente bearbeiten, die im normalen Suchmodus sichtbar sind.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|Die Ansicht, in der die Benutzeroberfläche des Katalogs sichtbar wird. Benutzer können einer Seite Steuerelemente aus Katalogen verfügbarer Steuerelemente hinzufügen.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|Die Ansicht, in der eine Verbindungs Benutzeroberfläche sichtbar wird. Benutzer können Verbindungen zwischen Steuerelementen verbinden, verwalten oder trennen.|  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement enthält auch eine Reihe von Ereignissen, die im Lebenszyklus von Webparts Seiten und Steuerelementen wichtig sind. Diese Ereignisse ermöglichen eine präzise programmgesteuerte Steuerung des Verhaltens von Webparts Steuerelementen. Die meisten Methoden beziehen sich direkt auf <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente (oder andere Server-oder Benutzer Steuerelemente, die in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen platziert werden, damit Sie sich als <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente Verhalten können). Einige Ereignisse beziehen sich jedoch auf den Zustand der Seite oder der Verbindungen auf der Seite. In der folgenden Tabelle sind die verfügbaren Ereignisse aufgeführt und ihre Zwecke zusammengefasst.  
  
> [!NOTE]
>  In allen Fällen in der folgenden Tabelle bezieht sich das Wort "Steuerelement" auf ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement oder ein beliebiges Server Steuerelement, das sich in einer Zone befindet und zur Laufzeit mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt umschließt.  
  
|event|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|Tritt unmittelbar vor dem Hinzufügen eines Steuer Elements zu einer Seite auf, um zu überprüfen, ob es autorisiert ist.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|Tritt auf, nachdem alle Verbindungen auf einer Seite aktiviert wurden.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|Tritt unmittelbar vor dem Aktivieren aller Verbindungen auf einer Seite auf.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|Tritt ein, nachdem sich der aktuelle Anzeigemodus einer Seite geändert hat.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|Tritt unmittelbar vor dem Ändern des Anzeigemodus einer Seite auf.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|Tritt ein, nachdem die Auswahl eines-Steuer Elements abgebrochen wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|Tritt unmittelbar vor dem Abbruch der Auswahl eines-Steuer Elements auf.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|Tritt ein, nachdem ein Steuerelement einer Zone hinzugefügt wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|Tritt unmittelbar vor dem Hinzufügen eines-Steuer Elements zu einer Zone auf.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|Tritt ein, nachdem ein-Steuerelement geschlossen wurde (aus einer Seite entfernt).|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|Tritt unmittelbar vor dem Schließen eines-Steuer Elements auf.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|Tritt auf, nachdem eine Instanz eines dynamischen-Steuer Elements (eines, das Programm gesteuert erstellt oder aus einem Katalog hinzugefügt wurde) dauerhaft gelöscht wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|Tritt unmittelbar vor dem Löschvorgang für ein dynamisches Steuerelement auf.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|Tritt ein, nachdem ein Steuerelement innerhalb seiner Zone oder in eine andere Zone verschoben wurde.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|Tritt unmittelbar vor dem Verschieben eines-Steuer Elements auf.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|Tritt auf, nachdem die Verbindung von zwei Steuerelementen hergestellt wurde, die für die Teilnahme an einer Verbindung ausgewählt wurden|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|Tritt unmittelbar vor dem Verbinden von zwei-Steuerelementen auf.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|Tritt auf, nachdem zwei verbundene Steuerelemente getrennt wurden.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|Tritt unmittelbar vor dem Trennen der Verbindung von zwei-Steuerelementen auf.|  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verfügt über zahlreiche Methoden zum Verwalten von Webparts Seiten. Eine große Anzahl von Methoden, die hier nicht aufgelistet sind, sind Methoden, deren Namen das Format on*EventName*haben. Diese Methoden geben in der Regel das zugehörige Ereignis aus und stellen dem Ereignis einen Handler des Typs <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>bereit. Die meisten dieser Methoden können von Entwicklern überschrieben werden, die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse erben. Außerdem können Seiten Entwickler benutzerdefinierte Handler für die Ereignisse bereitstellen, die mit diesen Methoden verknüpft sind. Beispielsweise könnte ein Seiten Entwickler im Fall des <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Ereignisses dem `<asp:webpartmanager>`-Element im Markup einer Webseite ein `OnWebPartAdded`-Attribut hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen, um die benutzerdefinierte Behandlung für das Ereignis bereitzustellen. Das-Attribut entspricht der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>-Methode, und dieses grundlegende Muster der Ereignis Behandlung funktioniert für die meisten Webparts Ereignisse und die zugehörigen Methoden.  
  
 Außerdem verfügt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement über Methoden, die speziell für die Verwaltung von <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen (und Server-oder Benutzer Steuerelemente, die als <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente verwendet werden) gelten. Zu diesen Methoden gehören <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.  
  
 Ein anderer Satz von Methoden ist speziell auf Verbindungen spezialisiert. Dies schließt Methoden wie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>ein.  
  
 Zum Schluss konzentrieren sich einige <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Methoden auf Personalisierungsfunktionen. Dies waren <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.  
  
 Weitere Informationen zu anderen <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Methoden, auf die über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>-Eigenschaft zugegriffen werden kann, finden Sie in der Dokumentation für die <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>-Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird sowohl die deklarative als auch die programmgesteuerte Verwendung des <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuer Elements veranschaulicht.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden können, sowie ein `<asp:webpartmanager>` Element.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und eine benutzerdefinierte-Schnittstelle enthält.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Das Benutzer Steuerelement verfügt über ein Dropdown Listen-Steuerelement, das die möglichen Anzeigemodi auf einer Seite anzeigt, wenn die Webparts-Steuerelemente auf der Seite vorhanden sind. Auf der Webseite für dieses Codebeispiel wird dieses Benutzer Steuerelement direkt unterhalb des <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Elements im Markup der Seite deklariert, und es gibt eine `Register` Direktive am oberen Rand der Webseite, um das Steuerelement zu registrieren. Ausführliche Informationen zu Anzeigemodi und eine Beschreibung des Quellcodes in diesem Steuerelement finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/DisplayModeMenuVB.ascx#6)]  
  
 Das deklarative Markup für die Webseite enthält `Register` Anweisungen für das Benutzer Steuerelement und die benutzerdefinierten Steuerelemente. Es gibt ein `<asp:webpartmanager>`-Element, ein `<asp:webpartzone>`-Element, das die benutzerdefinierten Steuerelemente enthalten soll, und ein `<asp:connectionszone>`-Element. Die Seite enthält auch einen Inline Code, der verbindungsbezogene Ereignisse für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement behandelt. Sie können die Auswirkung dieses Codes sehen, wenn Sie die Steuerelemente verbinden und die Verbindung trennen.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Der dritte Teil des Beispiels ist der Quellcode für die Steuerelemente. Beachten Sie, dass es eine Schnittstelle mit dem Namen `IZipCode`gibt, und diese Schnittstelle wird in der `ZipCodeWebPart`-Klasse implementiert. Diese Klasse verfügt über eine spezielle Rückruf Methode mit dem Namen `ProvideIZipCode`, die als Anbieter fungiert. Der andere Typ mit dem Namen `WeatherWebPart`wird ebenfalls mit einer speziellen Methode namens `GetIZipCode`implementiert, mit der das Steuerelement als Consumer des anderen Steuer Elements fungieren kann.  
  
 Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird davon ausgegangen, dass Sie die Quelle in eine Assembly kompiliert haben, und die `Register`-Direktive in der Webseite verweist auf den Assemblynamen. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/ZipCodeComponent.vb#2)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **verbinden** aus, um die Seite in den Verbindungs Modus zu wechseln. Der Verbindungs Modus verwendet das `<asp:connectionszone>`-Element, um das Erstellen von Verbindungen zwischen-Steuerelementen zu ermöglichen. Klicken Sie im Verbindungs Modus in der Titelleiste des **ZIP-Code** -Steuer Elements auf den abwärts Pfeil, um das zugehörige Verbenmenü zu aktivieren, und klicken Sie dann auf **verbinden**. Nachdem die Benutzeroberfläche der Verbindung angezeigt wird, klicken Sie auf den Link **Verbindung mit einem Consumer herstellen** . Eine Zelle mit einem Dropdown Listen-Steuerelement wird angezeigt. Wählen Sie in der Dropdown Liste die Option **Wetter Steuerung** aus, und klicken Sie dann auf **verbinden** , um die Verbindung der beiden Steuerelemente abzuschließen. Klicken Sie auf **Schließen**, und verwenden Sie dann die Dropdown Liste **Anzeigemodus** , um die Seite in den normalen Durchsuchenmodus zurückzukehren. Sie können eine Postleitzahl eingeben, und das Consumer-Steuerelement wird mit dem von Ihnen eingegebenen Wert aktualisiert. Da die `ZipCode`-Eigenschaft mit dem `Personalizable`-Attribut im Quellcode gekennzeichnet wurde, wird dieser Eigenschafts Wert über Browsersitzungen hinweg beibehalten, wodurch der von einem Benutzer eingegebene Wert gespeichert wird. Ein anspruchsvolleres Consumersteuerelement könnte die Postleitzahl übernehmen, Wetterinformationen basierend auf dem Code suchen und für einen Benutzer anzeigen.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement ist so konzipiert, dass es erweitert wird. Da es für Webparts Anwendungen so wichtig ist, dass Sie einen bestimmten Typ oder ein Steuerelement in der Webparts Steuerelement Gruppe erweitern möchten, müssen Sie in vielen Fällen auch die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse erweitern, da Sie wahrscheinlich über eine Eigenschaft oder eine Methode verfügen, die erforderlich ist, um Ihre der benutzerdefinierte Typ funktioniert im Kontext einer Webparts-Anwendung. Die Webparts Referenz Dokumentation (siehe <see cref="N:System.Web.UI.WebControls.WebParts" />), bei der Erörterung der Erweiterung eines Webparts Typs, beschreibt häufig, was durchgeführt werden muss, um die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse zu erweitern, oder zeigt, wie es in einem Codebeispiel erweitert wird.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.%23ctor%2A>-Konstruktor initialisiert mehrere wichtige Variablen, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwendet werden. Eine Zuweisung, die sich direkt auf alle Webparts Seiten auswirkt, ist die Tatsache, dass der Standardseiten Anzeigemodus auf den Durchsuchenmodus (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>) festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateConnections">
      <MemberSignature Language="C#" Value="protected virtual void ActivateConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ActivateConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ActivateConnections ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ActivateConnections();" />
      <MemberSignature Language="F#" Value="abstract member ActivateConnections : unit -&gt; unit&#xA;override this.ActivateConnections : unit -&gt; unit" Usage="webPartManager.ActivateConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktiviert alle derzeit inaktiven Verbindungen auf einer Webseite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>-Methode wird für jede Anforderung an eine Seite aufgerufen, um vorhandene Verbindungen zwischen <xref:System.Web.UI.WebControls.WebParts.WebPart> und anderen Server Steuerelementen, die sich in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen befinden, zu aktivieren. In einigen Fällen, beispielsweise wenn ein Konflikt in den aktivierten Verbindungen vorliegt, ruft diese Methode wiederum die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode auf, um die problematische Verbindung zu beenden. Während der Trennung der Verbindung wird das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis ausgelöst. Normalerweise können Entwickler dieses Ereignis abbrechen. wenn dies jedoch ein Konflikt zwischen den Verbindungen ist, kann es nicht abgebrochen werden, da das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement den Konflikt auflösen muss, um den Vorgang zum Aktivieren von Verbindungen abzuschließen. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPart AddWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPart ^ AddWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="member this.AddWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.AddWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Der <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (bzw. das Server- oder Benutzersteuerelement), der einer Webseite hinzugefügt oder auf einer Seite geöffnet werden soll.</param>
        <param name="zone">Die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />, der <paramref name="webPart" /> hinzugefügt wird.</param>
        <param name="zoneIndex">Eine ganze Zahl, die die Ordinalposition darstellt, an der sich <paramref name="webPart" /> in <paramref name="zone" /> im Verhältnis zu anderen Steuerelementen in <paramref name="zone" /> befindet.</param>
        <summary>Stellt die programmgesteuerte Standardmethode zum Hinzufügen von <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen auf einer Webseite bereit.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, das der Seite hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>-Methode wird sowohl zum Hinzufügen neuer dynamischer <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente zu einer Seite als auch zum erneuten Öffnen statischer oder dynamischer Steuerelemente verwendet, die zuvor auf einer Seite geschlossen wurden. Wenn die-Methode aufgerufen wird, um ein neues Steuerelement hinzuzufügen, erstellt sie tatsächlich eine Kopie des Steuer Elements, auf das im `webPart`-Parameter verwiesen wird. Für die Kopie des Steuer Elements wird eine neue ID generiert, daher sollten Entwickler auf das <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement verweisen, das von der-Methode zurückgegeben wurde, um den neuen ID-Wert zu erhalten. Wenn die-Methode aufgerufen wird, um ein zuvor geschlossenes Steuerelement erneut zu öffnen, gibt Sie einen direkten Verweis auf das Steuerelement zurück, auf das der `webPart`-Parameter verweist  
  
> [!IMPORTANT]
>  Sie sollten immer die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>-Methode verwenden, anstatt die <xref:System.Web.UI.ControlCollection.Add%2A>-Methode der Auflistung von Steuerelementen, auf die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=nameWithType>-Eigenschaft verwiesen wird, <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente Programm gesteuert zur Seite hinzuzufügen, da bei Verwendung der <xref:System.Web.UI.ControlCollection.Add%2A>-Methode eine Ausnahme ausgelöst wird. Wenn Sie ein Steuerelement hinzufügen möchten, das kein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement ist (d. h. ein Server Steuerelement, das zur Laufzeit mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Steuerelement umschließt), sollten Sie zunächst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>-Methode zum Erstellen des Steuer Elements und dann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>-Methode zum Hinzufügen des Steuerelement. Eine Demonstration dieses Ansatzes finden Sie im Abschnitt "Beispiel".  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>-Methode zum programmgesteuerten Hinzufügen eines Server Steuer Elements zu einer Seite veranschaulicht. Das Seiten Markup enthält ein leeres `<asp:webpartzone>`-Element und ein `<asp:webpartmanager>`-Element. Beim ersten Klicken auf die Schaltfläche **Kalender hinzufügen** erstellt der Code im-Ereignishandler ein <xref:System.Web.UI.WebControls.Calendar>-Steuerelement und fügt es einer Zone als <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Objekt hinzu, wobei die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>-Methode aufgerufen wird.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="zone" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="zone" /> wird nicht in der Auflistung der Zonen des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements registriert.  
  
- oder - 
 <paramref name="webPart" /> befindet sich bereits in <paramref name="zone" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert von <paramref name="zoneIndex" /> beträgt weniger als 0 (null).</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeWebPart">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeWebPart As WebPartAuthorizationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventHandler ^ AuthorizeWebPart;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " Usage="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />-Methode aufgerufen wird, um zu bestimmen, ob einer Seite ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement hinzugefügt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>-Ereignis tritt auf, wenn eine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement einer Seite hinzugefügt wird. Es gibt eine Reihe allgemeiner Szenarios, in denen ein Steuerelement einer Seite hinzugefügt werden kann. Eine vollständige Beschreibung dieser Informationen finden Sie im Abschnitt "Hinweise" für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode. Wenn ein Steuerelement hinzugefügt wird, muss es geprüft werden, um festzustellen, ob seine <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft festgelegt wurde, und wenn dies der Fall ist, ob das Steuerelement autorisiert ist, der Seite hinzugefügt zu werden.  
  
 Entwickler können Ereignishandler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>-Ereignis erstellen, um Filter für Steuerelemente bereitzustellen. Wenn der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschafts Wert eines Steuer Elements die Kriterien im Ereignishandlercode nicht erfüllt, wird das Steuerelement nicht der Seite hinzugefügt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein benutzerdefinierter Ereignishandler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>-Ereignis festgelegt wird, das automatisch die Standard <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> Methode überschreibt.  
  
 Der Code in der `mgr1_AuthorizeWebPart`-Methode überprüft, ob für die Steuerelemente auf der Seite die entsprechenden <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftswerte auf `user` festgelegt sind. wenn dies der Fall ist, wird `true`zurückgegeben, was bedeutet, dass Sie autorisiert und der Seite hinzugefügt werden. Dabei wird davon ausgegangen, dass der Standardansatz das Anzeigen von Steuerelementen mit einer Seite im Benutzer Personalisierungs Bereich gestattet. Beachten Sie jedoch, dass im Beispiel für eines der Steuerelemente der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschafts Wert auf `admin`festgelegt ist. Entwickler könnten diesen Filter auf einem spezialisierten Steuerelement platzieren, das nur für Administratoren vorgesehen ist. Dieses Steuerelement schlägt bei der Autorisierungs Überprüfung während des <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignisses fehl und wird nicht angezeigt. Beachten Sie, dass Steuerelemente, für die die-Eigenschaft nicht festgelegt ist, ebenfalls angezeigt werden. Es wird davon ausgegangen, dass Sie nicht Teil eines Filter Szenarios sind, da ihre <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaften nicht festgelegt sind.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="AvailableTransformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableTransformers As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ AvailableTransformers { System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableTransformers : System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Objekten ab, die zum Erstellen von Webparts-Verbindungen zwischen Serversteuerelementen zur Verfügung stehen.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" />, die einen Satz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Objekten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>-Methode, um die Auflistung zu erstellen. Standardmäßig liest Sie die verfügbaren Transformatoren aus der Anwendungs Konfigurationsdatei.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Übersicht über Webparts Verbindungen</related>
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartConnecting(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartConnecting(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartConnecting webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das Steuerelement, für das die Verbindung gebildet wird.</param>
        <summary>Startet den Prozess, mit dem zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente miteinander verbunden werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>-Methode ist vorhanden, sodass der Prozess zum bilden von Verbindungen zwischen Steuerelementen in unterschiedlichen Phasen durchgeführt werden kann, wodurch Entwickler mehr Kontrolle über den Verbindungsprozess erhalten. Die Methode führt eine Reihe von anfänglichen Überprüfungen aus, um sicherzustellen, dass sich `webPart` in einem Zustand befindet, in dem eine Verbindung rechtmäßig gebildet werden kann. Wenn `webPart` alle Überprüfungen übergibt, wird es als aktuell ausgewähltes Steuerelement festgelegt (siehe <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>-Eigenschaft), und der Verbindungsprozess kann fortgesetzt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der aktuelle Anzeigemodus auf der Seite lautet nicht <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="webPart" /> ist geschlossen.  
  
- oder - 
 <paramref name="webPart" /> gehört nicht der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung an.  
  
- oder - 
 <paramref name="webPart" /> ist identisch mit dem <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Entwickler, die das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement erweitern müssen, können diese Methode in einer abgeleiteten Klasse überschreiben. Ein Ansatz besteht darin, die Basis Methode aufzurufen und dann einige zusätzliche benutzerdefinierte Behandlung hinzuzufügen. oder Sie möchten den Vorgang zum Starten einer Verbindung zwischen Steuerelementen vollständig anpassen. Beispielsweise können Sie überprüfen, ob bestimmte Daten verfügbar sind, bevor Sie die Verbindung herstellen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartEditing(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartEditing(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartEditing webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das zu bearbeitende Steuerelement.</param>
        <summary>Startet den Prozess der Bearbeitung eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>-Methode ist vorhanden, sodass der Prozess der Bearbeitung von Steuerelementen in unterschiedlichen Phasen durchgeführt werden kann, wodurch Entwickler mehr Kontrolle über den Prozess erhalten. Die Methode führt eine Reihe von anfänglichen Überprüfungen aus, um sicherzustellen, dass sich `webPart` in einem Zustand befindet, in dem Sie bearbeitet werden kann. Wenn `webPart` alle Überprüfungen übergibt, wird es als aktuell ausgewähltes Steuerelement festgelegt (siehe <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>-Eigenschaft), und der Bearbeitungsprozess kann fortgesetzt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der aktuelle Anzeigemodus auf der Seite lautet nicht <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />.</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="webPart" /> ist geschlossen.  
  
- oder - 
 <paramref name="webPart" /> gehört nicht der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung an.  
  
- oder - 
 <paramref name="webPart" /> ist identisch mit dem <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Steuerelement.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrowseDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ BrowseDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrowseDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Standardanzeigemodus für Seiten dar, die Webparts-Steuerelemente enthalten. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Feld verweist auf ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Objekt, das im <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement erstellt und enthalten ist. Da es sich hierbei um ein statisches Objekt handelt, können Sie direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse darauf verweisen, ohne dass eine Instanz des Steuer Elements benötigt wird.  
  
 Wenn eine Seite, die Webparts steuert, zuerst geladen wird, befindet Sie sich standardmäßig in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (Durchsuchen-Modus). Wenn Benutzer einfach wie auf einer normalen Webseite navigieren, verbleibt die Seite im Durchsuchenmodus. Wenn Benutzer das Layout, die Steuerelemente, die Darstellung oder das Verhalten einer Seite personalisieren möchten, müssen Sie die Seite in einen der spezialisierten Anzeigemodi wechseln, die über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft verfügbar sind.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das programmgesteuerte arbeiten mit dem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>-Feld veranschaulicht. Der Code füllt eine Dropdown Liste mit den unterstützten Anzeigemodi auf, die in diesem Fall durchsuchen und entwerfen unterstützt werden. Beachten Sie, dass der Code in der `Page_PreRender`-Methode überprüft, ob die aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>festgelegt ist. Wenn dies der Fall ist, wird `Label1` sichtbar, und andernfalls wird `Label1` ausgeblendet.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/CS/wpmgrBrowseDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/VB/wpmgrBrowseDisplayModevb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, befinden Sie sich standardmäßig im Durchsuchen-Modus. Beachten Sie die Bezeichnung auf der Seite, die angibt, dass Sie sich im Durchsuchenmodus befinden Verwenden Sie das Dropdown Listen-Steuerelement, um die Seite in den Entwurfs Modus zu wechseln. Beachten Sie, dass die Bezeichnung aufgrund des Codes in der `Page_PreRender`-Methode jetzt ausgeblendet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Anzeigemodi der Webparts Seite</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Prüft die <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente, die an einer Verbindung teilnehmen sollen, um zu bestimmen, ob diese verbunden werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>-Methode wird verwendet, um zu bestimmen, ob zwei <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente verbunden werden können. Die-Methode wird in der Regel vor dem Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>-Methode als bedingte Prüfung verwendet.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>-Methode überprüft eine Reihe von Kriterien, die erfüllt sein müssen, damit zwei Steuerelemente eine Verbindung herstellen können. In der folgenden Liste sind die Hauptkriterien für das Herstellen einer Verbindung zusammengefasst. Wenn alle diese Kriterien (zuzüglich einiger zusätzlicher interner Bedingungen) erfüllt sind, gibt die Methode `true`zurück, was bedeutet, dass die Steuerelemente verbunden werden können:  
  
-   Die Anbieter-und Consumersteuerelemente können nicht `null`werden und müssen in der Auflistung von Steuerelementen enthalten sein, auf die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft verwiesen wird.  
  
-   Der Anbieter und der Consumer dürfen nicht dasselbe Steuerelement sein. Anders ausgedrückt: ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement kann nicht mit sich selbst verbunden werden.  
  
-   Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>-Objekte (Verbindungspunkte) für den Anbieter und den Consumer können nicht `null`werden.  
  
-   Der Anbieter und der Consumer können nicht geschlossen werden (die <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> Eigenschaft eines Steuer Elements kann `true`sein).  
  
-   Die <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>-Eigenschaft des Verbindungspunkt-Steuer Elements muss mit dem Typ des Steuer Elements von Consumer und Provider identisch sein.  
  
-   Die Verbindungspunkte müssen beide aktiviert sein (Ihre <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Methoden müssen `true`zurückgeben).  
  
-   Jeder Verbindungspunkt darf nicht versuchen, mehr Verbindungen zu bilden, als in seiner eigenen <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>-Eigenschaft angegeben ist.  
  
-   Wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt (Transformator) zum Herstellen einer Verbindung mit nicht kompatiblen Steuerelementen erforderlich ist, kann es nicht `null`werden. Wenn die Steuerelemente jedoch bereits kompatibel sind, muss der Transformator `null`werden.  
  
-   Auf den Transformator muss in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A> Auflistung verwiesen werden.  
  
-   Der Transformator (sofern verwendet) muss über Schnittstellen verfügen, die mit dem Anbieter und dem Consumer kompatibel sind, damit Daten zwischen den beiden Steuerelementen transformiert werden können. Die sekundären Schnittstellen des Consumers und des Anbieters müssen ebenfalls kompatibel sein.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Das Steuerelement, das <paramref name="consumer" /> Daten bereitstellt, wenn die Steuerelemente miteinander verbunden sind.</param>
        <param name="providerConnectionPoint">Ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, der es <paramref name="provider" /> ermöglicht, an einer Verbindung teilzunehmen.</param>
        <param name="consumer">Das Steuerelement, das Daten von <paramref name="provider" /> empfängt, wenn die Steuerelemente miteinander verbunden sind.</param>
        <param name="consumerConnectionPoint">Ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, der als Rückrufmethode fungiert, damit <paramref name="consumer" /> an einer Verbindung teilnehmen kann.</param>
        <summary>Prüft die <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente, die an einer Verbindung teilnehmen sollen, um zu bestimmen, ob diese verbunden werden können, falls das Consumer- und Anbietersteuerelement über kompatible Schnittstellen verfügen und kein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Objekt erforderlich ist.</summary>
        <returns>Ein boolescher Wert, der angibt, ob <paramref name="provider" /> und <paramref name="consumer" /> verbunden werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um `provider` und `consumer` zu verbinden, wenn beide Steuerelemente kompatible Verbindungspunkt Typen aufweisen, sodass ein <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt nicht benötigt wird. Sie können diese Methode verwenden, um zu überprüfen, ob zwei Steuerelemente verbunden werden können, bevor Sie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> aufrufen, um eine programmgesteuerte Verbindung zu erstellen.  
  
 Diese Überladung verwendet die gleiche Implementierung wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>-Methoden Überladung, mit der einzigen Ausnahme, dass diese Überladung keinen Transformator erfordert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Methode veranschaulicht.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden können, ein `<asp:webpartmanager>` Element und einige Ereignis Behandlungs Codes, die eine Verbindung mithilfe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>-Methode erstellen.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und eine benutzerdefinierte-Schnittstelle enthält.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Das deklarative Markup für die Webseite enthält `Register` Anweisungen für das Benutzer Steuerelement und die benutzerdefinierten Steuerelemente. Es gibt ein `<asp:webpartmanager>`-Element, ein `<asp:webpartzone>`-Element, das die benutzerdefinierten Steuerelemente enthalten soll, und ein `<asp:connectionszone>`-Element. Beachten Sie, dass der Code in der `Page_Load`-Methode überprüft, ob die Verbindung hergestellt werden kann. wenn dies der Fall ist, werden ein Anbieter, ein Consumer und die entsprechenden Verbindungspunkte definiert. Anschließend wird eine neue Verbindung mit dem Satz statischer Verbindungen hinzugefügt, auf die von verwiesen wird <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Property.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Der dritte Teil des Beispiels ist der Quellcode für die Steuerelemente. Sie enthält eine Schnittstelle und zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, von denen eine als Anbieter fungiert, und die andere als Consumer. Da Sie über kompatible Verbindungspunkte verfügen (beide erkennen die `IZipCode`-Schnittstelle), ist ein Transformator nicht erforderlich, um die Verbindung herzustellen. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/ZipCodeComponent.vb#2)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **verbinden** aus, um die Seite in den Verbindungs Modus zu wechseln. Der Verbindungs Modus verwendet das `<asp:connectionszone>`-Element, um das Erstellen von Verbindungen zwischen-Steuerelementen zu ermöglichen. Klicken Sie im Verbindungs Modus in der Titelleiste des **ZIP-Code** -Steuer Elements auf den abwärts Pfeil, um das zugehörige Verbenmenü zu aktivieren, und klicken Sie dann auf **verbinden**. Nachdem die Benutzeroberfläche der Verbindung angezeigt wird, beachten Sie, dass bereits eine Verbindung mit dem Code erstellt wurde, der in der `Page_Load`-Methode enthalten ist.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool&#xA;override this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Das Steuerelement, das <paramref name="consumer" /> Daten bereitstellt, wenn die Steuerelemente miteinander verbunden sind.</param>
        <param name="providerConnectionPoint">Ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, der als Rückrufmethode fungiert, damit <paramref name="provider" /> an einer Verbindung teilnehmen kann.</param>
        <param name="consumer">Das Steuerelement, das Daten von <paramref name="provider" /> empfängt, wenn die Steuerelemente miteinander verbunden sind.</param>
        <param name="consumerConnectionPoint">Ein <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, der als Rückrufmethode fungiert, damit <paramref name="consumer" /> an einer Verbindung teilnehmen kann.</param>
        <param name="transformer">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />, der eine Verbindung zwischen einem nicht kompatiblen <paramref name="provider" /> und <paramref name="consumer" /> ermöglicht.</param>
        <summary>Prüft die <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente, die an einer Verbindung teilnehmen sollen, um zu bestimmen, ob diese verbunden werden können, und erstellt mithilfe eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Objekts eine Verbindung zwischen einem nicht kompatiblen Consumer und Anbieter.</summary>
        <returns>Ein boolescher Wert, der angibt, ob <paramref name="provider" /> und <paramref name="consumer" /> eine Verbindung bilden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um `provider` und `consumer` zu verbinden, wenn beide Steuerelemente nicht kompatible Verbindungspunkt Typen aufweisen, sodass ein <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt erforderlich ist. Sie können diese Methode verwenden, um zu überprüfen, ob zwei Steuerelemente verbunden werden können, bevor Sie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> aufrufen, um eine programmgesteuerte Verbindung zu erstellen.  
  
 Diese Überladung verwendet die gleiche Implementierung wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>-Methoden Überladung, mit der einzigen Ausnahme, dass diese Überladung einen Transformator erfordert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CatalogDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ CatalogDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable CatalogDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Anzeigemodus dar, in dem Serversteuerelemente aus einem Katalog von Steuerelementen einer Seite hinzugefügt werden. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> Feld verweist auf ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Objekt, das im <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement erstellt und enthalten ist. Da es sich hierbei um ein statisches Objekt handelt, können Sie direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse darauf verweisen, ohne dass eine Instanz des Steuer Elements benötigt wird.  
  
 Wenn Benutzer Steuerelemente zu einer Seite hinzufügen möchten, können Sie, wenn ein Katalog mit Server Steuerelementen verfügbar ist, die Seite auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> (Katalog Modus) umstellen, und die Benutzeroberfläche des Katalogs wird angezeigt. Die Benutzeroberfläche für einen Webparts Katalog wird von einem <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Zone-Steuerelement bereitgestellt. Entwickler fügen diese Zone zur Entwurfszeit zur Seite hinzu und fügen der Zone dann Server Steuerelemente hinzu, sodass Benutzer diese Steuerelemente zur Laufzeit Ihren Seiten hinzufügen können. Nachdem der Entwickler diese Steuerelemente hinzugefügt hat, wird der Katalog Modus zu einem unterstützten Anzeigemodus auf der Seite, da die erforderlichen Steuerelemente vorhanden sind, um den Katalog Modus zu aktivieren.  
  
 Wenn ein Benutzer eine Seite in den Katalog Modus wechselt, werden die Zone und alle hinzugefügten Server Steuerelemente sichtbar, und der Benutzer kann Steuerelemente aus dem Katalog auswählen, die der Seite hinzugefügt werden sollen, oder Steuerelemente von der Seite entfernen. Nachdem die Steuerelemente der Seite hinzugefügt wurden, werden Sie im normalen Durchsuchen-Modus angezeigt, und die Seite wird aktualisiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das programmgesteuerte arbeiten mit dem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>-Feld veranschaulicht. Der Code füllt eine Dropdown Liste mit den unterstützten Anzeigemodi für die Seite auf, die in diesem Fall Browse, Design und Catalog sind. Der Katalog Modus ist aufgrund des `<asp:CatalogZone>`-Elements und seiner untergeordneten Elemente auf der Webseite verfügbar. Beachten Sie, dass der Code in der `Page_PreRender`-Methode überprüft, ob die aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>festgelegt ist. Wenn dies der Fall ist, wird `Label1` sichtbar, und andernfalls wird `Label1` ausgeblendet.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/CS/wpmgrCatalogDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/VB/wpmgrCatalogDisplayModevb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, befinden Sie sich standardmäßig im Durchsuchen-Modus. Beachten Sie, dass die Bezeichnung auf der Seite ausgeblendet ist. Verwenden Sie das Dropdown Listen-Steuerelement, um die Seite in den Katalog Modus zu wechseln. Beachten Sie, dass die Bezeichnung aufgrund des Codes in der `Page_PreRender`-Methode jetzt sichtbar ist. Sie können das Steuerelement im Katalog auswählen und es einer der beiden Zonen auf der Seite hinzufügen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Anzeigemodi der Webparts Seite</related>
      </Docs>
    </Member>
    <Member MemberName="CheckRenderClientScript">
      <MemberSignature Language="C#" Value="protected virtual bool CheckRenderClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckRenderClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CheckRenderClientScript () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckRenderClientScript();" />
      <MemberSignature Language="F#" Value="abstract member CheckRenderClientScript : unit -&gt; bool&#xA;override this.CheckRenderClientScript : unit -&gt; bool" Usage="webPartManager.CheckRenderClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prüft die Funktionen des Browsers, von dem die Anforderung stammt, sowie den Wert der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />-Eigenschaft, um festzustellen, ob Clientskripts wiedergegeben werden sollen.</summary>
        <returns>Ein boolescher Wert, der angibt, ob Clientskripts wiedergegeben werden sollen.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CloseProviderWarning">
      <MemberSignature Language="C#" Value="public virtual string CloseProviderWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseProviderWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CloseProviderWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseProviderWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CloseProviderWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Warnung ab, die angezeigt wird, wenn ein Benutzer ein Steuerelement schließt, das als Anbieter für andere Steuerelemente in einer Verbindung fungiert, oder legt diese Warnung fest.</summary>
        <value>Eine Zeichenfolge, die die Warnmeldung enthält. Der Standardwert ist eine von .NET Framework bereitgestellte kulturspezifische Meldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Benutzer ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement schließt, wird normalerweise keine Meldung angezeigt. Weitere Informationen zum Schließen eines Steuer Elements finden Sie in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>-Methode.  
  
 Wenn ein Steuerelement jedoch mit einem anderen Steuerelement verbunden ist und als Datenanbieter für das andere Steuerelement fungiert, wird eine Standard Warnmeldung angezeigt, wenn ein Benutzer versucht, das Steuerelement zu schließen. Die Meldung teilt den Benutzern mit, dass ein Anbieter Steuerelement bald geschlossen wird. das bedeutet, dass Steuerelemente, die mit diesem Anbieter verbunden sind, als Consumer keine Daten mehr verarbeiten können. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>-Eigenschaft ermöglicht Entwicklern das Anpassen der Warnmeldung, die dem Benutzer angezeigt wird.  
  
 Wenn dieser Eigenschaft ein Seiten Entwickler einen leeren oder NULL-Zeichen folgen Wert zuweist, wird kein Warn Meldungs Feld angezeigt, wenn ein Benutzer ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement schließt, das ein Anbieter ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>-Eigenschaft verwendet wird, um Benutzern eine benutzerdefinierte Warnung anzuzeigen.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und eine benutzerdefinierte-Schnittstelle enthält.  
  
-   Eine Webseite, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden können, sowie ein `<asp:webpartmanager>` Element.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der folgende Code enthält nur den Webseiten Teil des Beispiels. Außerdem benötigen Sie das benutzerdefinierte Benutzer Steuerelement und den Quellcode für die oben erwähnten benutzerdefinierten Steuerelemente. Rufen Sie diese beiden Elemente aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse ab.  
  
 Der folgende Webseiten Code veranschaulicht, wie der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>-Eigenschaft in deklarativem Markup im `<asp:webpartmanager>`-Element eine benutzerdefinierte Warnmeldung zugewiesen wird.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **verbinden** aus, um die Seite in den Verbindungs Modus zu wechseln. Der Verbindungs Modus verwendet das `<asp:connectionszone>`-Element, um das Erstellen von Verbindungen zwischen-Steuerelementen zu ermöglichen. Klicken Sie im Verbindungs Modus in der Titelleiste des **ZIP-Code** -Steuer Elements auf den abwärts Pfeil, um das zugehörige Verbenmenü zu aktivieren, und klicken Sie dann auf **verbinden**. Nachdem die Benutzeroberfläche für Verbindungen angezeigt wird, klicken Sie auf den Link **Verbindung mit einem Consumer herstellen** . Eine Zelle mit einem Dropdown Listen-Steuerelement wird angezeigt. Wählen Sie in der Dropdown Liste die Option **Wetter Steuerung** aus, und klicken Sie auf **verbinden** , um die Verbindung der beiden Steuerelemente abzuschließen. Klicken Sie auf **Schließen**, und verwenden Sie dann die Dropdown Liste **Anzeigemodus** , um die Seite in den normalen Durchsuchenmodus zurückzukehren. Klicken Sie abschließend auf das Verbenmenü für das **Postleitzahl** -Steuerelement (in diesem Fall das Anbieter Steuerelement), und wählen Sie **Schließen**aus. Die benutzerdefinierte Meldung, die Sie der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>-Eigenschaft zugewiesen haben, wird angezeigt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.CloseWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.CloseWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement, das in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> geschlossen wird.</param>
        <summary>Schließt ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, sodass es auf einer Webseite zwar nicht wiedergegeben wird, aber erneut geöffnet werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>-Methode entfernt ein <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein anderes Server Steuerelement, sodass es nicht auf der Webseite gerendert wird, die es ursprünglich enthielt. Das geschlossene Steuerelement wird einem <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>-Objekt hinzugefügt, das einen Verweis auf das geschlossene Steuerelement verwaltet und es ermöglicht, dass das Steuerelement auf der Seite wieder hergestellt werden kann. Ein geschlossenes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement wird weiterhin in der Auflistung angezeigt, auf die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft verwiesen wird.  
  
 Das Schließen eines Steuer Elements unterscheidet sich vom löschen. Geschlossene Steuerelemente können weiterhin auf einer Seite wieder hergestellt werden, aber eine gelöschte Steuerelement Instanz wird dauerhaft entfernt und kann nicht wieder hergestellt werden. Unabhängig davon, ob ein <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein Server Steuerelement statisch (im Markup einer Seite deklariert) oder dynamisch (von der Seite Programm gesteuert oder durch einen Benutzer aus einem Webparts Katalog hinzugefügt) ist, kann es geschlossen und auf einer Seite erneut geöffnet werden.  
  
 Normalerweise können Benutzer ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement schließen, indem Sie auf das zugehörige Verbenmenü klicken und das schließende Verb auswählen. Ein Steuerelement kann auch geschlossen werden, indem der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>-Methode direkt aufgerufen und ein Verweis auf `webPart`übergeben wird.  
  
 Wenn ein Entwickler auf einer Seite, auf der <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente geschlossen wurden, ein `<asp:catalogzone>`-Element deklariert und darin ein `<asp:pagecatalogpart>`-Element hinzufügt, stellt es eine einfache Benutzeroberfläche bereit, mit der Benutzer geschlossene Steuerelemente zur Laufzeit auf der Seite wiederherstellen können. Benutzer können die Seite in den Katalog Anzeigemodus wechseln, und die geschlossenen Steuerelemente werden innerhalb des Seiten Katalogs angezeigt. Benutzer können geschlossene Steuerelemente auswählen und Sie an der gewünschten Position wieder der Seite hinzufügen. die ausgewählten Steuerelemente werden dann auf der Seite wieder hergestellt und in normaler Form gerendert.  
  
 Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>-Methode aufgerufen wird, werden mehrere Ereignisse ausgelöst: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> (wenn mehrere Steuerelemente vorhanden sind) und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> (sofern verbundene Steuerelemente vorhanden sind). Normalerweise können Entwickler diese Ereignisse abbrechen, in bestimmten Fällen ist es jedoch nicht möglich, Sie abzubrechen. Weitere Informationen finden Sie in der Dokumentation für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>-, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>-und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignisse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>-Methode verwenden.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, mit dem Sie die Seiten Anzeigemodi ändern können.  
  
-   Ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement.  
  
-   Eine Webseite.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Code Beispiels ist das benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Beispiel wird der Ansatz der dynamischen Kompilierung verwendet. Daher gibt es in der `Register`-Direktive für dieses Steuerelement am oberen Rand der Webseite kein `Assembly` Attribut. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/textdisplaywebpart.vb#3)]  
  
 Der dritte Teil des Code Beispiels ist die Webseite. Die Seite enthält eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone, in der ein `<asp:pagecatalogpart>`-Element deklariert ist. Das schließt das geschlossene <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement ein und ermöglicht es Benutzern, es wieder der Seite hinzuzufügen. Die `Button1_Click`-Methode ruft direkt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>-Methode auf, um das benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement zu schließen, obwohl ein Benutzer das Steuerelement auch über das Verbenmenü schließen kann.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/closeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/closeWebPartVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, schließen Sie das benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, indem Sie in der Kopfzeile des-Steuer Elements auf das Verbenmenü (Pfeilsymbol) klicken und dann auf **Schließen**klicken. Ändern Sie nun die Seite in den Katalog Modus, indem Sie im Dropdown Listen-Steuerelement **Anzeigemodus** den **Katalog** auswählen. Der Seiten Katalog wird mit dem geschlossenen Steuerelement angezeigt. Aktivieren Sie das Kontrollkästchen neben dem geschlossenen Steuerelement, klicken Sie auf **Hinzufügen** , um es der Seite hinzuzufügen, und klicken Sie dann auf **Schließen** , um die Seite in den Suchmodus zurückzukehren. Das-Steuerelement wird auf der Seite wieder hergestellt. Schließen Sie Sie nun erneut, indem Sie auf die Schaltfläche **Webpart schließen** klicken.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> ist nicht in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung enthalten.  
  
- oder - 
 <paramref name="webPart" /> ist ein freigegebenes Steuerelement und wurde bereits von einem anderen Benutzer geschlossen.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConnectDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ ConnectDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConnectDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Anzeigemodus dar, in dem eine spezielle Benutzeroberfläche dargestellt wird, in der Benutzer Verbindungen zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen verwalten. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Feld verweist auf ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Objekt, das im <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement erstellt und enthalten ist. Da es sich hierbei um ein statisches Objekt handelt, können Sie direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse darauf verweisen, ohne dass eine Instanz des Steuer Elements benötigt wird.  
  
 Wenn Benutzer Verbindungen zwischen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen auf einer Webseite verwalten möchten und eine <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> Zone auf der Seite deklariert wurde, können Sie die Seite in den <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Modus wechseln. Der Verbindungsanzeige Modus zeigt eine spezielle Benutzeroberfläche zum Verwalten von Verbindungen an, einschließlich der Möglichkeit zum Verbinden oder Trennen von Steuerelementen und zum Bearbeiten der Details vorhandener Verbindungen.  
  
 Wenn Sie Benutzern die Möglichkeit geben möchten, Verbindungen mit der vom Webparts Steuersatz bereitgestellten Benutzeroberfläche zu verwalten, müssen Sie ein `<asp:connectionszone>` Element im Markup einer Seite deklarieren. Anders als die Elemente für die anderen Typen von <xref:System.Web.UI.WebControls.WebParts.WebZone> Zonen müssen Sie in diesem Element keine weiteren Tags hinzufügen. Sie deklarieren das-Element einfach allein.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>-Modus veranschaulicht.  
  
 Das Codebeispiel besteht aus drei Teilen:  
  
-   Eine Quelldatei, die eine Schnittstelle und benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die eine Verbindung bilden können.  
  
-   Eine Webseite, die eine Verbindungs Benutzeroberfläche bereitstellt und die Arbeit mit dem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> Modus veranschaulicht.  
  
-   Eine Erläuterung der Art und Weise, wie das Beispiel ausgeführt wird.  
  
 Der erste Teil des Code Beispiels ist eine Quelldatei, die eine Schnittstelle und zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die so entworfen wurden, dass Sie verbunden werden können. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird der Ansatz für die dynamische Kompilierung verwendet. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ZipCodeComponent.vb#2)]  
  
 Der zweite Teil des Beispiels ist eine Webseite, die die benutzerdefinierten Steuerelemente hostet. Im Server `<script>` Tags auf der Seite mehrere Methoden zum Auffüllen einer Dropdown Liste mit den Anzeigemodi, die auf der Seite verfügbar sind. Ein Benutzer kann diese in der Dropdown Liste auswählen, um den Anzeigemodus der Seite zu ändern. Einer der verfügbaren Anzeigemodi ist der Verbindungsanzeige Modus, weil ein `<asp:connectionszone>` Element im Markup der Seite deklariert wird. Beachten Sie, dass dieses Element keine anderen untergeordneten Elemente enthält. Es ist nur vorhanden, um die Benutzeroberfläche für die Verbindungs Verwaltung für Benutzer zu aktivieren.  
  
 Der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>-Modus wird in diesem Beispiel an zwei Stellen angezeigt. Zuerst wird in der `Page_Init`-Methode der Verbindungsanzeige Modus der Dropdown Liste mit den Anzeigemodi hinzugefügt, da der Code die Auflistung durchläuft, auf die in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft verwiesen wird. Zweitens überprüft die `Page_PreRender`-Methode den aktuellen Anzeigemodus auf der Seite, und wenn der aktuelle Modus <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>ist, wird eine Meldung in einem <xref:System.Web.UI.WebControls.Label>-Steuerelement angezeigt.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ConnectDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ConnectDisplayModeVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, klicken Sie auf die Dropdown Liste, und wählen Sie **verbinden** aus, um die Seite in den Verbindungsanzeige Modus zu wechseln. Beachten Sie, dass eine Meldung angezeigt wird, die Sie darüber informiert, dass sich die Seite im Verbindungsanzeige Modus befindet. Klicken Sie nun in der Titelleiste eines der <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente auf das Verbenmenü (ein Pfeilsymbol), und klicken Sie dann im Verbenmenü auf **verbinden** . Nachdem die Benutzeroberfläche der Verbindung angezeigt wird, klicken Sie auf den Link, um eine Verbindung herzustellen. Verwenden Sie die Dropdown Liste in der angezeigten Verbindungs Benutzeroberfläche, wählen Sie das andere Steuerelement aus, das an der Verbindung teilnimmt, und klicken Sie dann auf die Schaltfläche **verbinden** . Die Verbindung wird hergestellt. Klicken Sie auf die Schaltfläche **Schließen** , und verwenden Sie dann die Dropdown Liste am oberen Rand der Seite, um die Seite zum Durchsuchen des Anzeigemodus zurückzukehren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Anzeigemodi der Webparts Seite</related>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ Connections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die Auflistung aller aktuellen Verbindungen auf einer Webseite ab.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, die einen Satz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />-Objekten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>-Eigenschaft bietet eine Möglichkeit, auf die aktuelle Gruppe von Verbindungen auf einer Seite zuzugreifen. Die Sammlung selbst ist schreibgeschützt, und Entwickler, die eine bestimmte Verbindung aus der Sammlung bearbeiten möchten, sollten <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Methoden wie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die deklarative und programmgesteuerte Verwendung des <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuer Elements veranschaulicht.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden können, sowie ein `<asp:webpartmanager>` Element.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und eine benutzerdefinierte-Schnittstelle enthält.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der folgende Code enthält nur den Webseiten Teil des Beispiels. Außerdem benötigen Sie das benutzerdefinierte Benutzer Steuerelement und den Quellcode für die oben erwähnten benutzerdefinierten Steuerelemente. Rufen Sie diese beiden Elemente aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse ab.  
  
 Der folgende Webseiten Code veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>-Eigenschaft Programm gesteuert verwenden, um die Anzahl der aktuellen Verbindungen auf einer Seite zu erhalten. Beachten Sie, dass im `<script>` Tag-Abschnitt der Code, der zwei Ereignisse für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement behandelt, auf die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>-Eigenschaft zugreift, um die Anzahl abzurufen.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **verbinden** aus, um die Seite in den Verbindungs Modus zu wechseln. Der Verbindungs Modus verwendet das `<asp:connectionszone>`-Element, um das Erstellen von Verbindungen zwischen-Steuerelementen zu ermöglichen. Klicken Sie im Verbindungs Modus in der Titelleiste des **ZIP-Code** -Steuer Elements auf den abwärts Pfeil, um das zugehörige Verbenmenü zu aktivieren, und klicken Sie dann auf **verbinden**. Nachdem die Benutzeroberfläche für Verbindungen angezeigt wird, klicken Sie auf den Link **Verbindung mit einem Consumer herstellen** . Eine Zelle mit einem Dropdown Listen-Steuerelement wird angezeigt. Wählen Sie in der Dropdown Liste die Option **Wetter Steuerung** aus, und klicken Sie auf **verbinden** , um die Verbindung der beiden Steuerelemente abzuschließen. Klicken Sie auf **Schließen**, und verwenden Sie dann die Dropdown Liste **Anzeigemodus** , um die Seite in den normalen Durchsuchenmodus zurückzukehren. Beachten Sie, dass eine Bezeichnung nun die Anzahl der Verbindungen und die Anzahl von <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen anzeigt. Wenn Sie nun zum Verbindungs Modus zurückkehren und die beiden Steuerelemente trennen, sollte der Inhalt der Bezeichnung aktualisiert werden, wenn Sie zum Durchsuchen-Modus zurückkehren und keine Verbindungen mehr vorhanden sein sollten.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivated;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivated : EventHandler " Usage="member this.ConnectionsActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem nicht nur alle aktuellen Webparts-Verbindungen auf einer Seite verbunden wurden, sondern diese auch begonnen haben, Daten aktiv zwischen den an den einzelnen Verbindungen beteiligten Consumer- und Anbietersteuerelementen auszutauschen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Lebenszyklus von Verbindungen tritt dieses Ereignis auf, nachdem eine Seite den Ladevorgang abgeschlossen hat. Sie tritt auch nach dem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>-Ereignis auf, das nur angibt, dass die <xref:System.Web.UI.WebControls.WebParts.WebPart>-oder Server Steuerelemente, die an einer bestimmten Verbindung beteiligt sind, erfolgreich verbunden wurden. Wenn auf einer Seite mehrere Verbindungen vorhanden sind, gibt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> Methode an, dass alle gültigen Webparts Verbindungen auf einer Seite nun aktiv sind und Daten freigeben können. Wenn Sie wissen, dass alle Verbindungen aktiv sind, können Entwickler beliebig viele Aufgaben ausführen, einschließlich der Benachrichtigung der Benutzer über den Status aller Verbindungen, das Benachrichtigen von Consumersteuerelementen zum Verarbeiten und Anzeigen von Daten von ihren Anbietern usw.  
  
 Dieses Ereignis ist mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>-Methode verknüpft, die das-Ereignis auslöst und es Entwicklern ermöglicht, benutzerdefinierte Handler für das-Ereignis zu erstellen.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis erstellen, indem Sie das `OnConnectionsActivated`-Attribut zum `<asp:webpartmanager>`-Element auf der Seite hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivating">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivating As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivating;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivating : EventHandler " Usage="member this.ConnectionsActivating : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während alle erstellten Webparts-Verbindungen auf einer Webseite aktiviert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Lebenszyklus von Verbindungen tritt dieses Ereignis auf, wenn eine Seite den Ladevorgang abgeschlossen hat, kurz bevor die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>-Methode aufgerufen wird. Sie unterscheidet sich vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Ereignis, das eine bestimmte Verbindung zwischen <xref:System.Web.UI.WebControls.WebParts.WebPart> oder anderen Server Steuerelementen einschließt. Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> Ereignis tritt auf, wenn alle möglichen Verbindungen auf einer Seite verbunden sind und im Begriff sind, aktiviert zu werden.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>-Ereignis ist mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>-Methode verknüpft, die das-Ereignis auslöst. Steuern von Entwicklern, die den Typ der Verbindungen erweitern möchten, die einer Seite hinzugefügt werden können, können die geschützte <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>-Methode außer Kraft setzen und zusätzliche Verbindungstypen aktivieren.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis erstellen, indem Sie das `OnConnectionsActivating`-Attribut zum `<asp:webpartmanager>`-Element auf der Seite hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen (oder sonstigen Serversteuerelementen, die Verbindungen bilden können), die sich in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone befinden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>-Methode bildet eine Verbindung zwischen zwei <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen, die verbunden werden können. Bevor Sie diese Methode aufrufen, um eine Verbindung zu erstellen, können Sie auch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>-Methode in einer bedingten Prüfung aufrufen, um sicherzustellen, dass die Steuerelemente die Anforderungen zum Herstellen einer Verbindung erfüllen.  
  
> [!NOTE]
>  Es ist auch möglich, eine Verbindung zwischen zwei Server Steuerelementen zu erstellen, die keine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente sind. Im Allgemeinen müssen die beiden Steuerelemente benutzerdefinierte Server Steuerelemente sein (z. b. Steuerelemente, die von <xref:System.Web.UI.WebControls.WebControl> oder vorhandenen ASP.NET-Server Steuerelementen erben), sodass Sie die erforderlichen Member hinzufügen können. Die Steuerelemente müssten auch die unten angegebenen Anforderungen erfüllen.  
  
 Alle Arten von Verbindungs Szenarien zwischen zwei-Steuerelementen müssen die folgenden Anforderungen erfüllen, um eine Verbindung herstellen zu können:  
  
-   Jedes Steuerelement befindet sich in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone (es muss sich nicht um dieselbe Zone handeln).  
  
-   Wie im Webparts Steuerelement festgelegt, implementiert das Anbieter Steuerelement in einer Verbindung eine-Schnittstelle als öffentliche Methode, die als Rückruf für den Anbieter fungiert, und verfügt über ein `ConnectionProvider` Metadata-Attribut für die-Methode, um es als Anbieter Verbindungspunkt zu identifizieren. Da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> Methode, die Anbieter Verbindungspunkte abruft, virtuell ist, muss ein abgeleitetes <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement nicht unbedingt dasselbe Metadatenattribut verwenden.  
  
-   Wie im Webparts Steuerelement festgelegt, verfügt das Consumer-Steuerelement in einer Verbindung auch über eine spezielle Methode, die es ermöglicht, einen Verweis auf die Schnittstelle zu erhalten, die in der Rückruf Methode des Anbieters verfügbar gemacht wird, und der Consumer verfügt über ein `ConnectionConsumer` Metadata-Attribut im Methode, die als Consumerverbindungspunkt identifiziert werden soll. Da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> Methode, die Consumerverbindungspunkte abruft, virtuell ist, muss ein abgeleitetes <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement nicht unbedingt dasselbe Metadatenattribut verwenden.  
  
-   Die Rückruf Methoden müssen entweder kompatibel sein, damit der Consumer den Typ der Schnittstelle verwenden kann, die in der Rückruf Methode des Anbieters angegeben ist (d. h. der Consumer und der Anbieter können Daten direkt freigeben), oder der Entwickler muss ein <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekt für die Transformation verwenden. die Daten vom Anbieter in einem vom Consumer zu verwendenden Formular.  
  
    > [!IMPORTANT]
    >  Wenn Sie keinen Transformator benötigen, verwenden Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>-Methoden Überladung. Wenn Sie einen Transformator benötigen, verwenden Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>-Methoden Überladung.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, das die Funktion erfüllt, Daten für ein anderes, mit ihm verbundenes Steuerelement bereitzustellen.</param>
        <param name="providerConnectionPoint">Eine Methode, die als Rückrufmethode für die Verbindung fungiert. Entsprechend der Implementierung im Webparts-Steuerelementsatz ist dies eine öffentliche Methode in <paramref name="provider" />, die mit einem <see langword="ConnectionProvider" />-Metadatenattribut gekennzeichnet ist.</param>
        <param name="consumer">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, das die Funktion erfüllt, Daten von <paramref name="provider" /> zu empfangen und dann zu verarbeiten oder anzuzeigen.</param>
        <param name="consumerConnectionPoint">Eine Methode, die eine Verbindung mit <paramref name="providerConnectionPoint" /> herstellt, um die Daten für die Verbindung zu empfangen. Entsprechend der Implementierung im Webparts-Steuerelementsatz ist dies eine öffentliche Methode in <paramref name="consumer" />, die mit einem <see langword="ConnectionConsumer" />-Metadatenattribut gekennzeichnet ist.</param>
        <summary>Erstellt nur mithilfe der Verweise auf die Steuerelemente und ihre angegebenen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Objekte eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />-Steuerelementen oder <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />-Steuerelementen.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> mit den Informationen zum Anbieter und Consumer, die für eine Verbindung benötigt werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung wird verwendet, um Steuerelemente zu verbinden, wenn ihre Verbindungspunkte ausreichend kompatibel sind, sodass Sie ohne Verwendung eines <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Objekts eine Verbindung herstellen können. Wenn diese Überladung der-Methode aufgerufen wird, übergibt Sie einfach den Aufruf an die andere überladene Version der-Methode und übergibt `null` für den Parameter, der ein <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>-Objekt erfordert.  
  
 Wenn Sie versuchen, zwei-Steuerelemente Programm gesteuert zu verbinden, können Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>-Methode in einer bedingten Überprüfung verwenden, um zu bestimmen, ob die Steuerelemente direkt verbunden werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Methode zum programmgesteuerten Erstellen einer Verbindung verwendet wird. Den vollständigen Code, der zum Ausführen des Beispiels erforderlich ist, finden Sie im Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse. Aus diesem Beispiel benötigen Sie den Quellcode für das Benutzer Steuerelement, mit dem Sie die Anzeigemodi auf der Seite und den Quellcode für die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente ändern können.  
  
 Der Code für die Webseite, die die beiden-Steuerelemente hostet, folgt. Die Seite verwendet `Register`-Direktiven oben, um das Benutzer Steuerelement und die benutzerdefinierten Steuerelemente zu deklarieren. Auf die benutzerdefinierten Steuerelemente wird dann deklarativ innerhalb eines `<asp:webpartzone>` Elements verwiesen. Der Code, der die `Button1_Click`-Methode behandelt, erstellt mithilfe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>-Methode eine Verbindung zwischen den-Steuerelementen.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, klicken Sie auf die Schaltfläche **WebPart-Steuerelemente verbinden** , um die Verbindung zu bilden. Anschließend können Sie einige Daten in das Textfeld eingeben und auf die Schaltfläche **5-stellige Postleitzahl eingeben** klicken, um zu veranschaulichen, dass die Steuerelemente miteinander verbunden sind und dass die im ersten Steuerelement eingegebenen Daten in der zweiten aktualisiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Auflistung der dynamischen Auflistungen des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements ist schreibgeschützt.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection&#xA;override this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, der die Funktion erfüllt, Daten für ein anderes, mit ihm verbundenes Steuerelement bereitzustellen.</param>
        <param name="providerConnectionPoint">Eine öffentliche Methode in <paramref name="provider" />, die mit einem <see langword="ConnectionProvider" />-Metadatenattribut gekennzeichnet ist und als Rückrufmethode für die Verbindung fungiert.</param>
        <param name="consumer">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, der die Funktion erfüllt, Daten von <paramref name="provider" /> oder <paramref name="transformer" /> zu empfangen und dann zu verarbeiten oder anzuzeigen.</param>
        <param name="consumerConnectionPoint">Eine öffentliche Methode in <paramref name="consumer" />, die mit einem <see langword="ConnectionConsumer" />-Metadatenattribut gekennzeichnet ist und eine Verbindung mit <paramref name="providerConnectionPoint" /> herstellt, um die Daten für die Verbindung zu empfangen.</param>
        <param name="transformer">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />, der eine Verbindung zwischen zwei Steuerelementen ermöglicht, indem er die Daten von <paramref name="provider" /> in ein Format konvertiert, das von <paramref name="consumer" /> verarbeitet werden kann.</param>
        <summary>Erstellt mithilfe der Verweise auf die Steuerelemente, ihre angegebenen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Objekte und ein <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />-Objekt eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />-Steuerelementen oder <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />-Steuerelementen.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, die die Informationen zum Anbieter, Consumer und Transformator enthält, die für eine Verbindung benötigt werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung wird verwendet, um Steuerelemente zu verbinden, wenn ihre Verbindungspunkte inkompatibel sind. Die Inkompatibilität tritt auf, wenn `consumer` eine andere Schnittstelle als `provider` als Verbindungspunkt implementiert. Der Transformator konvertiert die Daten in einen Typ, der von `consumer`interpretiert werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Verbindungen wurden bereits in <see cref="E:System.Web.UI.Control.PreRender" /> aktiviert.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung aller <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelemente, Serversteuerelemente oder Benutzersteuerelemente ab, die in <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zonen auf einer Webseite enthalten sind und vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwaltet werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.ControlCollection" />, die alle vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwalteten Steuerelemente enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>-Eigenschaft verweist nicht auf die anderen Steuerelemente, auf die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwiesen wird, z. b. die verschiedenen Zonen Steuerelemente, <xref:System.Web.UI.WebControls.WebParts.EditorPart> oder <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Steuerelemente und andere.  
  
 Diese Eigenschaft wird vom Webparts Steuersatz verwendet, und in den meisten Entwicklungssituationen ist Sie nicht für den Aufruf aus dem Code vorgesehen. Aus diesem Grund wird die-Eigenschaft zwar öffentlich, aber aus IntelliSense ausgeblendet. Entwickler, die auf die Auflistung von <xref:System.Web.UI.WebControls.WebParts.WebPart> oder anderen Server Steuerelementen zugreifen möchten, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwaltet werden, sollten deren <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CopyWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart CopyWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ CopyWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.CopyWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das zu kopierende <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement.</param>
        <summary>Wird vom Webparts-Steuerelementsatz verwendet, um eine Kopie eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements oder Serversteuerelements anzulegen und diese dem Steuerelement auf einer Webseite hinzuzufügen.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, der einer Seite hinzugefügt werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>-Methode kann nicht direkt aus dem Code aufgerufen werden. Diese Methode wird intern vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement aufgerufen, wenn eine neue dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein neues Server Steuerelement einer Seite hinzugefügt wird. Ein dynamisches Steuerelement wird einer Seite Programm gesteuert oder über die Webparts-Benutzeroberfläche (UI) hinzugefügt, z. b. durch einen Benutzer, der ein Steuerelement aus einem Katalog von Steuerelementen hinzufügt, anstatt durch ein statisches Steuerelement, das direkt im Markup einer Seite deklariert wird.  
  
> [!NOTE]
>  Die-Methode kann in einer abgeleiteten Klasse überschrieben werden, wenn Entwickler die-Methode aktivieren möchten, um zusätzliche Steuerelemente zum Kopieren von Steuerelementen zu verarbeiten. Weitere Informationen finden Sie im Abschnitt "Hinweise zu Vererbung".  
  
 Wenn ein neues dynamisches Steuerelement hinzugefügt wird, wenn es sich um ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement handelt, gibt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>-Methode eine neue Instanz des Steuer Elements zurück. Wenn das hinzugefügte Steuerelement ein anderer Typ von Server Steuerelement ist (z. b. ein Benutzer Steuerelement, ein benutzerdefiniertes Steuerelement oder ein ASP.NET-Steuerelement), wurde das Steuerelement bereits durch den Webparts Steuerelement Satz mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt umschließt. Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>-Methode ein <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement erkennt, gibt Sie eine neue Instanz des <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Steuer Elements mit einer neuen Instanz des darin enthaltenen untergeordneten Steuer Elements zurück.  
  
 Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>-Methode eine neue Kopie eines Steuer Elements erstellt, das zurückgegeben werden soll, setzt Sie auch die Werte aller Eigenschaften auf ihre Standardwerte zurück. Beachten Sie Folgendes: Wenn Sie die Werte der personalisierbaren Eigenschaften beibehalten und in die neue Steuerelement Instanz kopieren möchten, sollten Sie auch die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>-Methode aufzurufen. Der letzte Schritt, der durch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>-Methode ausgeführt wird, besteht darin, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>-Methode aufzurufen, um eine neue ID für das Steuerelement abzurufen.  
  
> [!NOTE]
>  Da die Methode eine neue ID für ein kopiertes Steuerelement erhält, sollten Sie sich nicht darauf verlassen, dass Sie auf ein dynamisches Steuerelement verweisen, das einer Seite mit der ursprünglichen ID hinzugefügt wird. Stattdessen sollten Sie auf die neue Instanz des Steuer Elements verweisen, das von der-Methode zurückgegeben wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Die-Methode wird als <see langword="virtual" /> deklariert, damit Entwickler von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse erben, die-Methode überschreiben und zusätzliche Szenarios bereitstellen können, in denen Sie Kopien von Steuerelementen erstellen könnte. Beispielsweise kann die-Methode optional als Eingabe ein Steuerelement empfangen, das in eine XML-Datei serialisiert wurde. Die-Methode kann den XML-Code (falls vorhanden) deserialisieren und dann die Basis Methode zum Verarbeiten der vorhandenen Fälle und zum Zurückgeben einer neuen Instanz eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Steuer Elements aufruft.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAvailableTransformers">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAvailableTransformers () As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ CreateAvailableTransformers();" />
      <MemberSignature Language="F#" Value="abstract member CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection&#xA;override this.CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="webPartManager.CreateAvailableTransformers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen Satz von in der Konfigurationsdatei einer Website angegebenen Transformatoren und fügt sie der Auflistung der Transformatoren hinzu, auf die die <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />-Eigenschaft verweist.</summary>
        <returns>Die Auflistung der in der Konfigurationsdatei einer Website angegebenen Transformatoren.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Diese Methode kann überschrieben werden, um zusätzliche Transformatoren hinzuzufügen, die von der Anwendung verwendet werden können. Beispielsweise könnte die-Methode geschrieben werden, um eine Liste der verfügbaren Transformatoren von einem Webdienst abzurufen.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="webPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Auflistung aller Steuerelemente zurück, die vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement auf einer Webseite verwaltet werden. Diese Klasse kann nicht vererbt werden.</summary>
        <returns>Eine <see cref="T:System.Web.UI.ControlCollection" />, die alle mit dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwalteten Webparts-Steuerelemente enthält.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Da diese Methode geschützt und versiegelt ist, ist Sie für Klassen sichtbar, die von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse erben, Sie kann jedoch nicht überschrieben werden.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayModes">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDisplayModes () As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ CreateDisplayModes();" />
      <MemberSignature Language="F#" Value="abstract member CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&#xA;override this.CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="webPartManager.CreateDisplayModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt den Satz aller möglichen Anzeigemodi für eine Webparts-Anwendung.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, die alle unterstützten Anzeigemodi enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode wird die Liste aller möglichen Anzeigemodi erstellt, nicht nur die Anzeigemodi, die auf einer bestimmten Seite unterstützt werden. Weitere Informationen zu den unterstützten Anzeigemodi finden Sie in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft.  
  
 Standardmäßig erstellt der Webparts Steuerelement Satz die folgenden Anzeigemodi, die auf Webparts Seiten verwendet werden sollen:  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>  
  
 Entwickler können benutzerdefinierte Anzeigemodi erstellen, entweder mit oder ohne zugehörige benutzerdefinierte Zonen, die von den Klassen <xref:System.Web.UI.WebControls.WebParts.WebZone> oder <xref:System.Web.UI.WebControls.WebParts.ToolZone> abgeleitet werden. Zum Erstellen eines benutzerdefinierten Anzeigemodus müssen Sie von der <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>-Klasse erben und den Anzeigemodus auf einer Seite als unterstützten Modus hinzufügen. Sie müssen von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse erben und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>-Methode überschreiben.  
  
 Wenn Sie mit der <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>-Methode Anzeigemodi hinzufügen, sollten Sie diese in der Reihenfolge hinzufügen, in der Sie in beliebigen Steuerelementen der Benutzeroberfläche (z. b. einem <xref:System.Web.UI.WebControls.ListBox> Steuerelement) angezeigt werden, die Benutzern die möglichen Anzeigemodi auf einer Seite bereitstellen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>-Methode verwenden.  
  
 Das Codebeispiel besteht aus fünf Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die die anderen-Steuerelemente hostet.  
  
-   Ein Benutzer Steuerelement, das sich in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone auf der Webseite befindet und es Ihnen ermöglicht, Text in eine Bezeichnung einzugeben und anzuzeigen.  
  
-   Eine Quell Code Datei, die zwei-Steuerelemente enthält. Eine ist ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement, und die andere ist ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Objekt, das dem Standard Anzeigemodus der Seite hinzugefügt wird.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und eine benutzerdefinierte-Schnittstelle enthält.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Beispiels ist die Webseite. Sie enthält zwei <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Steuerelemente, sowohl Benutzer Steuerelemente als auch das benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement. Beachten Sie die `Register` Direktiven am oberen Rand der Seite, um auf die Benutzer Steuerelemente und den Namespace für die kompilierten Steuerelemente zu verweisen.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/createDisplayModeCS.aspx#1)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/createDisplayModeVB.aspx#1)]  
  
 Der dritte Teil des Beispiels ist das Benutzer Steuerelement zum eingeben und Anzeigen von Text. Es verwendet ein <xref:System.Web.UI.WebControls.MultiView>-Steuerelement, um mehrere Ansichten der Benutzeroberfläche zu erstellen. Eine Ansicht wird mit der Schaltfläche `Button1` angezeigt, die andere ohne. Beachten Sie, dass der Code im überschriebenen `OnPreRender` Methode prüft, ob sich die Seite derzeit im benutzerdefinierten Anzeigemodus befindet, und zeigt, wenn dies der Fall ist, die erste Ansicht des Benutzer Steuer Elements an, das die Schaltfläche enthält. Wenn sich die Seite nicht im benutzerdefinierten Anzeigemodus befindet, z. b. wenn sich die Seite im Durchsuchen-oder Entwurfs Modus befindet, wird die Schaltfläche ausgeblendet.  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/TextDisplaycs.ascx#2)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/TextDisplayvb.ascx#2)]  
  
 Der vierte Teil des Beispiels ist die Quelldatei für die beiden benutzerdefinierten Klassen. Beachten Sie, dass die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>-Methode überschreibt und zuerst die-Basis Methode aufruft, um alle Standard Anzeigemodi hinzuzufügen, und dann den benutzerdefinierten Anzeigemodus hinzufügt. Die benutzerdefinierte anzeigemodusklasse (`InLineEditDisplayMode`) erbt einfach von <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, legt den Namen des Anzeigemodus im Konstruktor fest und überschreibt eine Reihe von Basis Eigenschaften, um die Merkmale der benutzerdefinierten Anzeige festzulegen.  
  
 Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/CustomDisplayMode.cs#3)]
 [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/CustomDisplayMode.vb#3)]  
  
 Um das Codebeispiel auszuführen, laden Sie die Seite in einem Browser. Beachten Sie, dass sich die Seite derzeit im Durchsuchenmodus befindet und keine Schaltfläche sichtbar ist. Ändern Sie die Seite mithilfe des Dropdown Listen-Steuer Elements **Anzeigemodus** in den **Inline Bearbeitungs Anzeige** Modus, und beachten Sie, dass jetzt die Schaltfläche `Button1` im unteren Benutzer Steuerelement sichtbar ist. Fügen Sie Text hinzu, und klicken Sie auf die Schaltfläche zum Aktualisieren des Steuer Elements. Beachten Sie, dass die Seiten Anzeige in den Durchsuchenmodus zurückkehrt, der eingegebene Text jetzt angezeigt wird und die Schaltfläche erneut ausgeblendet wird, da sich die Seite nicht mehr im benutzerdefinierten Anzeigemodus befindet.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Exemplarische Vorgehensweise: Ändern der Anzeigemodi auf einer Webparts Seite</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicConnectionID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicConnectionID () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicConnectionID();" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicConnectionID : unit -&gt; string&#xA;override this.CreateDynamicConnectionID : unit -&gt; string" Usage="webPartManager.CreateDynamicConnectionID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen eindeutigen Wert ab, der als ID für eine dynamische Verbindung verwendet wird.</summary>
        <returns>Eine Zeichenfolge, die eine eindeutige ID für eine Verbindung enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A>-Methode generiert einen GUID-Wert und konvertiert ihn in eine Zeichenfolge, um als eindeutige ID für eine Verbindung zu fungieren. Die-Methode wird jedes Mal aufgerufen, wenn eine dynamische Verbindung erstellt wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können diese Methode in einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse überschreiben, um die Implementierung zum Erstellen einer eindeutigen ID zu ändern.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicWebPartID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicWebPartID (Type webPartType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicWebPartID(class System.Type webPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicWebPartID (webPartType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicWebPartID(Type ^ webPartType);" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicWebPartID : Type -&gt; string&#xA;override this.CreateDynamicWebPartID : Type -&gt; string" Usage="webPartManager.CreateDynamicWebPartID webPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="webPartType">Der <see cref="T:System.Type" /> des Steuerelements, für das eine ID generiert wird.</param>
        <summary>Generiert eine eindeutige ID für ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement.</summary>
        <returns>Eine Zeichenfolge mit der eindeutigen ID.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente zu einer Webseite hinzugefügt werden, können Sie statisch (d. h. das Steuerelement wird im Seiten Markup deklariert) oder dynamisch sein (d.h., Sie werden Programm gesteuert hinzugefügt). In jedem Szenario, in dem das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement neue dynamische Steuerelemente erstellt, die der Seite hinzugefügt werden sollen, wird diese Methode aufgerufen, um eine eindeutige ID zu generieren.  
  
 Die-Methode ist virtuell, sodass Entwickler Sie überschreiben können, wenn Sie eine benutzerdefinierte Implementierung zum Erstellen der ID bereitstellen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPartType" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateErrorWebPart (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String, errorMessage As String) As ErrorWebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::ErrorWebPart ^ CreateErrorWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart&#xA;override this.CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart" Usage="webPartManager.CreateErrorWebPart (originalID, originalTypeName, originalPath, genericWebPartID, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ErrorWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">Eine Zeichenfolge, die die ID des Steuerelements darstellt, bei dem der Fehler aufgetreten ist. Wenn <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> am Fehler beteiligt ist, entspricht die ID der ID von dessen untergeordneten Serversteuerelement.</param>
        <param name="originalTypeName">Eine Zeichenfolge, die den Namen des <see cref="T:System.Type" /> des Steuerelements darstellt, bei dem der Fehler aufgetreten ist. Wenn <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> am Fehler beteiligt ist, entspricht der Typname dem Typ von dessen untergeordneten Serversteuerelement.</param>
        <param name="originalPath">Eine Zeichenfolge, die den Pfad zu einem Benutzersteuerelement enthält, wenn ein <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> mit einem ungeordneten Benutzersteuerelement am Fehler beteiligt ist.</param>
        <param name="genericWebPartID">Eine Zeichenfolge, die die ID eines <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> zurückgibt, wenn dieser Steuerelementtyp am Fehler beim Laden oder Erstellen eines Steuerelements beteiligt war.</param>
        <param name="errorMessage">Eine Zeichenfolge, die die Fehlermeldung enthält, die auf der Seite angezeigt wird.</param>
        <summary>Erstellt ein spezielles Steuerelement, das auf eine Seite eingefügt wird und das für Endbenutzer angezeigt wird, wenn der Versuch fehlschlägt, ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zu laden oder zu erstellen.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />, der auf einer Seite anstelle eines Steuerelements eingefügt wird, bei dem ein Fehler beim Laden oder Erstellen aufgetreten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A>-Methode wird aufgerufen, wenn der Webparts Steuersatz versucht, eine Instanz einer dynamischen <xref:System.Web.UI.WebControls.WebParts.WebPart> oder eines Server Steuer Elements zu laden oder zu erstellen, und es aus irgendeinem Grund fehlschlägt. Die-Methode erstellt ein <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Objekt, weist dieser eine Fehlermeldung zu und gibt Sie zurück. Das <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Steuerelement wird anstelle des fehlgeschlagenen-Steuer Elements eingefügt, und die zugehörige Fehlermeldung wird auf der Seite angezeigt.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A>-Methode kann nicht direkt aus dem Code aufgerufen werden. Sie können jedoch von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse erben und die-Methode erweitern. Weitere Informationen finden Sie im Abschnitt Hinweise für Vererbung.  
  
 Endbenutzer können mit einem <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>-Steuerelement auf einer Seite arbeiten, ähnlich wie ein normales <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement. Um die Fehlermeldung zu entfernen, können Sie das Steuerelement schließen, indem Sie auf das Schließen-Verb klicken. zu diesem Zeitpunkt wird das Steuerelement wie jedes andere geschlossene Steuerelement zu einem <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Objekt hinzugefügt. Wenn ein Endbenutzer ein <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Steuerelement löscht, wird auch das Server Steuerelement, das nicht geladen werden konnte, von der Seite gelöscht.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die im <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> Steuerelement zurückgegebenen Informationen anpassen möchten, können Sie die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />-Methode überschreiben, die Basis Methode aufzurufen, den an die Basis Methode übergebenen Parametern andere Werte zuweisen und dann das resultierende <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> Steuerelement zurückgeben. Wenn Sie z. b. nicht möchten, dass Endbenutzer den <paramref name="originalPath" /> Wert sehen (der den Pfad des virtuellen Verzeichnisses eines Benutzer Steuer Elements anzeigt), können Sie beim Aufrufen der Basis Methode eine leere Zeichenfolge ("") für diesen Parameter übergeben.  
  
Sie können das Verhalten des <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> Steuer Elements auch anpassen, indem Sie von ihm erben. Beispielsweise können Sie die <see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />-oder <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />-Eigenschaft überschreiben.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePersonalization">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreatePersonalization () As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ CreatePersonalization();" />
      <MemberSignature Language="F#" Value="abstract member CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization&#xA;override this.CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="webPartManager.CreatePersonalization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Personalisierungsobjekt zurück, das die Personalisierungsdaten eines Benutzers für die aktuelle Webseite enthält.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />, die Personalisierungsdaten eines Benutzers enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>-Methode gibt ein-Objekt zurück, das die Personalisierungs Einstellungen des Benutzers für die aktuelle Seite enthält und verwaltet. Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwaltet dieses-Objekt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Übersicht über die Webparts Personalisierung</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::GenericWebPart ^ CreateWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart&#xA;override this.CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.CreateWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Ein Serversteuerelement, das kein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement ist.</param>
        <summary>Umschließt ein Serversteuerelement, das kein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement ist, mit einem <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />-Objekt, sodass das Steuerelement über Webparts-Funktionen verfügt.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, der <paramref name="control" /> umschließt und damit dessen Verwendung als echtes <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement ermöglicht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>-Methode ist der Hauptmechanismus zum Aktivieren von Server Steuerelementen, die nicht <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen sind, die gleiche Funktionalität wie ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement verwenden und somit vollständig an Webparts Anwendungen teilnehmen können. Mit dieser Methode erweitern Entwickler erheblich die Anzahl der Server Steuerelemente, die Sie in einer Webparts Anwendung verwenden können, da praktisch jeder Typ von Server Steuerelementen (standardmäßige ASP.NET-Steuerelemente, Benutzer Steuerelemente und benutzerdefinierte Steuerelemente) verwendet werden kann.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwendet diese Methode auch in zwei anderen Szenarien, um Server Steuerelemente mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Objekt zu wrappen. Wenn Benutzer mithilfe des <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuer Elements Server Steuerelemente zu einer Seite hinzufügen, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>-Methode aufgerufen, wenn es sich beim importierten Steuerelement nicht um ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement handelt. Wenn Server Steuerelemente im Persistenzformat innerhalb einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone auf einer Webseite deklariert werden, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>-Methode auch für alle Steuerelemente aufgerufen, die keine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente sind.  
  
 Wenn Sie einer Zone ein Server Steuerelement Programm gesteuert hinzufügen, empfiehlt es sich, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>-Methode zu verwenden, um das Steuerelement mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt zu wrappen, und dann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>-Methode aufzurufen, um das Steuerelement der Auflistung aller <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente auf der Seite hinzuzufügen. , auf die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft verwiesen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>-Methode veranschaulicht. Im `Button2_Click method`wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>-Methode aufgerufen, um ein <xref:System.Web.UI.WebControls.Calendar> Steuerelement mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt zu wrappen, bevor es der Zone hinzugefügt wird.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Diese Methode kann überschrieben werden, um eine abgeleitete <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> Klasse anstelle der Basisklasse zu verwenden, die mit dem Webparts Steuerelement Satz bereitgestellt wird.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWarning">
      <MemberSignature Language="C#" Value="public virtual string DeleteWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte Warnmeldung ab oder legt diese fest, die angezeigt wird, wenn Endbenutzer ein Steuerelement löschen.</summary>
        <value>Eine Zeichenfolge, die den Text der Warnmeldung enthält. Der Standardwert ist eine lokalisierte Warnmeldung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Benutzer ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement löscht, wird normalerweise eine Standard Warnmeldung angezeigt. Der Benutzer wird gewarnt, dass der Löschvorgang permanent ist, wenn diese Instanz eines Steuer Elements gelöscht wird. Der Seiten Entwickler kann Benutzern eine Möglichkeit bieten, der Seite eine neue Instanz des Steuer Elements hinzuzufügen (z. b. über einen Katalog von <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen oder über programmgesteuerte Mittel), aber die aktuelle Instanz eines gelöschten Steuer Elements wird dauerhaft entfernt. Das Dialogfeld, in dem die Warnung angezeigt wird, enthält eine Schaltfläche, mit der der Benutzer den Löschvorgang ggf. Abbrechen kann.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>-Eigenschaft ermöglicht es Entwicklern, die Warnmeldung festzulegen, die dem Benutzer angezeigt wird.  
  
 Wenn diese Eigenschaft von einem Seiten Entwickler eine leere Zeichenfolge ("") zugewiesen wird, wird das Dialogfeld "Warnmeldung" nicht angezeigt, wenn ein Benutzer ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement löscht.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>-Eigenschaft wird im Fall von statischen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen und Server Steuerelementen nicht angezeigt. Statische Steuerelemente sind Server Steuerelemente, die in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone im Markup einer Webseite deklariert werden. Da solche Steuerelemente statisch sind, können Sie nicht gelöscht werden. Daher wird in diesem Fall nie die Warnmeldung "Löschen" angezeigt. Statische Steuerelemente können von einem Benutzer geschlossen werden, aber dem Seiten Katalog wird ein geschlossenes Steuerelement hinzugefügt, von dem das Steuerelement der Seite wieder von einem Benutzer hinzugefügt werden kann, während ein gelöschtes Steuerelement nicht wieder hergestellt werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die deklarative und programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>-Eigenschaft veranschaulicht.  
  
 Das Codebeispiel enthält vier Komponenten:  
  
-   Ein Benutzer Steuerelement, mit dem Sie die Seiten Anzeigemodi ändern können.  
  
-   Ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement.  
  
-   Eine Webseite.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Code Beispiels ist das benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Beispiel wird der Ansatz der dynamischen Kompilierung verwendet. Daher gibt es in der `Register`-Direktive für dieses Steuerelement am oberen Rand der Webseite kein `Assembly` Attribut. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/textdisplaywebpart.vb#3)]  
  
 Der dritte Teil des Code Beispiels ist die Webseite. Die Seite enthält eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone, in der das benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement in der Zone deklariert ist, sodass ein Benutzer es zur Laufzeit zur Seite hinzufügen kann. Beachten Sie, dass nur dynamische Steuerelemente (Steuerelemente, die einer Seite Programm gesteuert oder aus einem Katalog wie dieser hinzugefügt werden) von einer Seite gelöscht werden können. Statische Steuerelemente (Steuerelemente, die in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone im Markup einer Seite deklariert sind) können geschlossen, aber nie gelöscht werden. Das `<asp:webpartmanager>`-Element deklariert einen benutzerdefinierten Wert für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>-Eigenschaft mithilfe des `DeleteWarning`-Attributs. Die `Button1_Click`-Methode weist der Eigenschaft <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> einen weiteren benutzerdefinierten Wert zu.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/deleteWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/deleteWarningVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, müssen Sie der Seite das <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement hinzufügen. Wählen Sie im Dropdown-Listen Steuerelement **Anzeigemodus** den Katalog Modus aus. Wenn der Katalog angezeigt wird, aktivieren Sie das Kontrollkästchen neben dem benutzerdefinierten Steuerelement, klicken Sie auf **Hinzufügen** , um es der Seite hinzuzufügen, und klicken Sie dann auf **Schließen** , um die Seite in den Durchsuchenmodus Nun, da das Steuerelement sichtbar ist, können Sie es löschen. Wenn Sie die **Anzeigemodus** -Steuerelement erneut verwenden, wechseln Sie zur Seite in den Entwurfs Modus Klicken Sie in der Kopfzeile des <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements auf das Verbenmenü (das Pfeilsymbol), und wählen Sie **Löschen**aus. Die Warnung, die Sie für das `DeleteWarning`-Attribut festlegen, wird angezeigt. Klicken Sie auf **Abbrechen**. Klicken Sie nun auf die Schaltfläche mit der Bezeichnung **Delete DELETE Warning**, wodurch der Eigenschafts Wert Programm gesteuert geändert wird. Wählen Sie im Verbenmenü des Steuer Elements erneut **Löschen** aus. Beachten Sie, dass dieses Mal die andere Warnmeldung angezeigt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.DeleteWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DeleteWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das zu löschende Serversteuerelement.</param>
        <summary>Löscht eine dynamische Instanz eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements unwiderruflich von einer Webseite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>-Methode entfernt permanent das Steuerelement, das durch den `webPart`-Parameter dargestellt wird, von einer Seite. Anders als bei einem geschlossenen Steuerelement, das dem <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>-Steuerelement hinzugefügt und wieder der Seite hinzugefügt werden kann, kann der Seite nie eine gelöschte Steuerelement Instanz hinzugefügt werden.  
  
> [!NOTE]
>  Wie vom Webparts Steuersatz implementiert, hängt die Möglichkeit für Benutzer, ein dynamisches <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement zu löschen, von dem Benutzer und dem Personalisierungs Bereich ab, in dem das Steuerelement einer Seite hinzugefügt wurde. Wenn das Steuerelement hinzugefügt wird, wenn sich die Seite im freigegebenen Gültigkeitsbereich befindet (durch einen Benutzer mit Berechtigungen), kann das Steuerelement nicht von einzelnen Benutzern gelöscht werden, wenn sich die Seite im Benutzerbereich befindet.  
  
 Es können nur dynamische Steuerelemente gelöscht werden. Dynamische Steuerelemente werden einer Seite Programm gesteuert oder von Benutzern hinzugefügt, die Steuerelemente aus einem Katalog hinzufügen. Statische Steuerelemente werden einer Seite deklarativ im Markup-oder Persistenzformat hinzugefügt. Da die deklarativen Tags dauerhaft im Markup vorhanden sind, können statische Steuerelemente nie gelöscht werden, Sie können jedoch geschlossen und wieder geöffnet werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>-Methode verwenden. Beim ersten Klicken auf die Schaltfläche **Kalender hinzufügen** erstellt der Code im-Ereignishandler ein <xref:System.Web.UI.WebControls.Calendar>-Steuerelement und fügt es einer Zone als <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Objekt hinzu. Da das Steuerelement Programm gesteuert hinzugefügt wird, ist es ein dynamisches Steuerelement und kann daher gelöscht werden. Wenn ein Benutzer auf die Schaltfläche **Kalender löschen** klickt, stellt der Code sicher, dass das Steuerelement vorhanden ist, und löscht es durch Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>-Methode.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="DesignDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DesignDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesignDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Anzeigemodus dar, in dem das Layout von Webseiten mit Webparts-Steuerelementen geändert wird. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> Feld verweist auf ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Objekt, das im <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement erstellt und enthalten ist. Da es sich hierbei um ein statisches Objekt handelt, können Sie direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse darauf verweisen, ohne dass eine Instanz des Steuer Elements benötigt wird.  
  
 Wenn eine Seite, die Webparts steuert, zuerst geladen wird, befindet Sie sich standardmäßig in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (Durchsuchen-Modus). Wenn Benutzer das Layout der Seite ändern möchten, indem Sie Steuerelemente in verschiedene Zonen oder innerhalb der aktuellen Zonen verschieben, müssen Sie zuerst die Seite auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> (Entwurfs Modus) umstellen. Im Entwurfs Modus wird die Benutzeroberfläche für die verschiedenen Zonen angezeigt, und Benutzer können dann Steuerelemente ziehen, um das Layout zu ändern.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das programmgesteuerte arbeiten mit dem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>-Feld veranschaulicht. Der Code füllt eine Dropdown Liste mit den unterstützten Anzeigemodi für die Seite auf, in diesem Fall durchsuchen und entwerfen. Beachten Sie, dass der Code in der `Page_PreRender`-Methode überprüft, ob die aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>festgelegt ist. Wenn dies der Fall ist, wird `Label1` sichtbar, und andernfalls wird `Label1` ausgeblendet.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/CS/wpmgrDesignDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/VB/wpmgrDesignDisplayModevb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, befinden Sie sich standardmäßig im Durchsuchen-Modus. Beachten Sie, dass die Bezeichnung auf der Seite ausgeblendet ist. Verwenden Sie das Dropdown Listen-Steuerelement, um die Seite in den Entwurfs Modus zu wechseln. Beachten Sie, dass die Bezeichnung aufgrund des Codes in der `Page_PreRender`-Methode jetzt sichtbar ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Anzeigemodi der Webparts Seite</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisconnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DisconnectWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DisconnectWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, dessen Verbindungen getrennt werden müssen.</param>
        <summary>Entfernt ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement, das geschlossen oder gelöscht wird, aus allen Verbindungen, an denen es beteiligt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode wird intern durch den Webparts Steuerelement Satz aufgerufen, wenn ein Steuerelement entweder auf einer Seite geschlossen oder von einer Seite gelöscht wird. In einem solchen Szenario wird die-Methode aufgerufen, um das Steuerelement aus allen Verbindungen zu entfernen, an denen es als Consumer oder Anbieter beteiligt ist. Wenn das Steuerelement aus einer Verbindung entfernt wird, ruft diese Methode auch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode auf, um alle Verbindungen zu beenden, in denen `webPart` beteiligt war.  
  
 Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode aufgerufen wird, löst Sie das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis aus. Normalerweise kann dieses Ereignis abgebrochen werden, aber in zwei Fällen kann es nicht abgebrochen werden. Ein Fall tritt bei Anforderungen auf die Seite auf, wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>-Methode aufgerufen wird. Liegt ein Konflikt zwischen vorhandenen Verbindungen vor, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode aufgerufen, um eine der miteinander in Konflikt stehenden Verbindungen zu schließen. in diesem Fall kann das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis nicht abgebrochen werden, da der Konflikt aufgelöst werden muss.  
  
 Der andere Fall tritt auf, wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein Server Steuerelement, das derzeit verbunden ist, entweder geschlossen oder gelöscht wird. Da in diesem Fall das Steuerelement von der Seite entfernt wird, muss auch die Verbindung beendet werden. Daher ist es nicht möglich, das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis abzubrechen, um den Prozess der Beendigung einer Verbindung zu unterbrechen. Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode verwenden. Mithilfe von zwei benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen können Sie mithilfe der Webseite eine Verbindung zwischen den Steuerelementen erstellen, indem Sie auf eine Schaltfläche klicken, während eine andere Schaltfläche Ihnen ermöglicht, die Steuerelemente zu trennen. Wenn Sie eines der Steuerelemente schließen, während sich die Seite im Durchsuchenmodus befindet und die Steuerelemente miteinander verbunden sind, trennt eine außer Kraft setzung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Methode das geschlossene Steuerelement, beendet die Verbindung und zeigt eine Meldung an.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement zum Ändern der Anzeigemodi.  
  
-   Eine Quelldatei, die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält.  
  
-   Eine Webseite zum Hosten der Steuerelemente.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil ist die Datei, die den Quellcode für die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden, und ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Beispiel wird die dynamische Kompilierung verwendet, sodass die `Register`-Direktive, die auf diese Komponenten auf der Webseite verweist, im oberen Bereich der Webseite entsprechend deklariert wird. Eine exemplarische Vorgehensweise, die Kompilierungsoptionen veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 Beachten Sie im Quellcode das geerbte Steuerelement `MyWebPartManager`, das die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode überschreibt. Mit dieser Methode wird jede Verbindung auf einer Seite überprüft, um festzustellen, ob das geschlossene Steuerelement an der Verbindung teilnimmt. wenn dies der Fall ist, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode aufgerufen, um die Verbindung zu beenden. Dies ist mit der Basis Implementierung der-Methode im <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement identisch. Die überschriebene Methode passt dann die Basis Implementierung an, indem eine Meldung auf die Seite geschrieben wird.  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Der dritte Teil des Code Beispiels ist die Webseite. Beachten Sie, dass es im oberen Bereich `Register` Anweisungen zum Registrieren des Benutzer Steuer Elements und die dynamisch kompilierte Assembly mit den <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen enthält. Die Seite verfügt über zwei primäre Methoden. Die `Button1_Click`-Methode erstellt eine Verbindung zwischen den-Steuerelementen, während die-Methode `Button2_Click`-Methode die-Steuerelemente trennt.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Nachdem Sie die Seite geladen haben, klicken Sie auf die Schaltfläche **verbinden** , um die Steuerelemente zu verbinden. Klicken Sie dann in einem der Steuerelemente auf das Verbenmenü (den abwärts Pfeil in der Kopfzeile des-Steuer Elements), und wählen Sie im Verbenmenü die Option **Schließen** aus. Wenn Sie versuchen, das Steuerelement zu schließen, wird die überschriebene-Methode aufgerufen, die Verbindung wird beendet, und die Meldung wird auf die Seite geschrieben. Wenn Sie die Seite zurücksetzen möchten, um das geschlossene Steuerelement wiederherzustellen und mit anderen Optionen zu experimentieren, klicken Sie auf den Link **Benutzer Zustand zurücksetzen** , um Personalisierungs Daten zu entfernen und den ursprünglichen Zustand der Seite wiederherzustellen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebParts">
      <MemberSignature Language="C#" Value="public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectWebParts(class System.Web.UI.WebControls.WebParts.WebPartConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisconnectWebParts (connection As WebPartConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectWebParts(System::Web::UI::WebControls::WebParts::WebPartConnection ^ connection);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit&#xA;override this.DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit" Usage="webPartManager.DisconnectWebParts connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />, die die Verbindung zwischen Serversteuerelementen darstellt.</param>
        <summary>Führt den Prozess des Trennens von auf einer Webseite verbundenen Serversteuerelementen aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode führt den gesamten Prozess zum Beenden einer Verbindung zwischen <xref:System.Web.UI.WebControls.WebParts.WebPart>-oder Server Steuerelementen aus, wenn Sie den `connection`-Parameter übergeben.  
  
 Diese Methode wird verwendet, um Steuerelemente zu trennen, wenn Sie ein `<asp:connectionszone>` Element in einer Webseite platzieren, um eine Benutzeroberfläche für die Verwaltung von Verbindungen bereitzustellen. Wenn sich eine Seite im Verbindungsanzeige Modus (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>) befindet und eine aktuelle Verbindung vorhanden ist, können Benutzer auf eine Schaltfläche klicken, mit der die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode aufgerufen wird, um die Verbindung zu beenden.  
  
 Sie können die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode auch direkt aus dem Code aufrufen, wenn Sie Steuerelemente Programm gesteuert trennen möchten, ohne ein `<asp:connectionszone>` Element zu einer Seite hinzufügen zu müssen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode verwenden. Mithilfe von zwei benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen können Sie mithilfe der Webseite eine Verbindung zwischen den Steuerelementen erstellen, indem Sie auf eine Schaltfläche klicken, während eine andere Schaltfläche Ihnen ermöglicht, die Steuerelemente zu trennen.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement zum Ändern der Anzeigemodi.  
  
-   Eine Quelldatei, die benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält.  
  
-   Eine Webseite zum Hosten der Steuerelemente.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil ist eine Datei mit dem Quellcode für die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die verbunden werden. Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Beispiel wird die dynamische Kompilierung verwendet, sodass die `Register`-Direktive, die auf diese Komponenten auf der Webseite verweist, im oberen Bereich der Webseite entsprechend deklariert wird. Eine exemplarische Vorgehensweise, die Kompilierungsoptionen veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 Der dritte Teil des Code Beispiels ist die Webseite. Beachten Sie, dass es im oberen Bereich `Register`-Direktiven enthält, um das Benutzer Steuerelement und die dynamisch kompilierte Assembly mit den <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen zu registrieren. Die Seite verfügt über zwei primäre Methoden. Die `Button1_Click`-Methode erstellt eine Verbindung zwischen den-Steuerelementen, und die `Button2_Click`-Methode trennt die-Steuerelemente.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 Nachdem Sie die Seite geladen haben, können Sie auf die Schaltfläche **verbinden** klicken, um die Steuerelemente zu verbinden. Wenn Sie Text in das Textfeld-Steuerelement eingeben und dann auf die **Eingabe** Taste klicken, wird der Text im verbundenen Steuerelement angezeigt (es wird nicht angezeigt, wenn die Steuerelemente getrennt wurden). Wenn Sie auf die Schaltfläche " **trennen** " klicken, werden die Steuerelemente getrennt. Sie können den Verbindungsstatus der Steuerelemente mithilfe des Dropdown Listen-Steuer Elements **Anzeigemodus** überprüfen, um die Seite in den **Verbindungs** Modus zu wechseln. Klicken Sie anschließend auf der Titelleiste eines der Steuerelemente auf das Verbenmenü (dargestellt durch einen Pfeil), und wählen Sie das Element **verbinden** aus. Die Benutzeroberfläche der Verbindung wird angezeigt. Es ist verfügbar, weil ein `<asp:connectionszone>` Element auf der Seite deklariert wurde. Sie können die Steuerelemente auch über diese Benutzeroberfläche verbinden und die Verbindung trennen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connection" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="connection" /> ist weder in <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> noch in <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> enthalten.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> ist schreibgeschützt.  
  
- oder - 
 <paramref name="connection" /> wurde bereits von <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> getrennt.  
  
- oder - 
 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> ist schreibgeschützt.  
  
- oder - 
 <paramref name="connection" /> wurde bereits von <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> getrennt.</exception>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />-Methode überschreiben, wenn Sie die Standard Implementierung zum Trennen der Verbindung <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Steuerelementen ändern möchten. Wenn Sie die-Methode überschreiben und der vorhandenen-Methode nur eine Implementierung hinzufügen möchten, können Sie die Basis Methode vor der Ausführung ihres eigenen Codes abrufen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayMode As WebPartDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DisplayMode { System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ get(); void set(System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktiven Anzeigemodus für eine Webseite ab, die Webparts-Steuerelemente enthält, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />, der den Anzeigemodus einer Seite bestimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Seite, die Webparts Steuerelemente enthält, ist immer in einem von mehreren möglichen Anzeigemodi. Weitere Informationen zu Anzeigemodi finden Sie unter [Webparts Seiten Anzeigemodi](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4).  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse erstellt die Anzeigemodi für eine Webseite. Mithilfe der Basis <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Klasse erstellt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement mehrere standardanzeigemodusobjekte, die auf Seiten verwendet werden können, die Webparts Steuerelemente enthalten. Diese Standard Anzeigemodi werden in der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>-Klasse beschrieben.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verwaltet auch die Anzeigemodi für Seiten, die Webparts Steuerelemente verwenden. Mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft behält das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement einen Verweis auf den aktuellen Anzeigemodus auf einer Seite bei. Sie können auch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft verwenden, um eine Seite in verschiedene Anzeigemodi zu wechseln. Ein Beispiel für das Ändern der Anzeigemodi auf einer Seite, die Webparts Steuerelemente verwendet, finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Im Rahmen der Verwaltung des Anzeigemodus stellt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement auch Ereignisse und Ereignishandler bereit, die sich auf Anzeigemodi beziehen, wie z. b. die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>-Methode und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>-Methode. Diese Methoden bieten einen Mechanismus zum Anpassen des Verhaltens einer Seite und sogar zum Hinzufügen eines benutzerdefinierten Anzeigemodus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft veranschaulicht. Nachdem Sie die Seite in einem Browser geladen haben, können Sie die Schaltflächen im unteren Bereich der Seite verwenden, um die Anzeigemodi zu wechseln. Die Seite befindet sich standardmäßig im Durchsuchenmodus, wenn Sie geladen wird. Wenn Sie in den Entwurfs Modus wechseln, können Sie die Server Steuerelemente aus einer Zone in eine andere verschieben oder zwei Steuerelemente innerhalb einer Zone anordnen. Wenn Sie in den Bearbeitungsmodus wechseln, können Sie in der Kopfzeile eines der Server Steuerelemente auf das Verben-Menü klicken, **Bearbeiten**auswählen und das Steuerelement mithilfe der bereitgestellten Bearbeitungs Benutzeroberfläche (UI) bearbeiten.  
  
> [!NOTE]
>  Der Wechsel zwischen Anzeigemodi in einer Webparts Anwendung ist sehr üblich, und Sie möchten möglicherweise eine konsistente, wiederverwendbare Möglichkeit bereitstellen, um dies auf allen Seiten zu erreichen, die Webparts Steuerelemente enthalten. Ein Beispiel für ein Benutzer Steuerelement, das die Anzeigemodi ändert und auf vielen Seiten wieder verwendet werden kann, finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/CS/wpmgrDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/VB/wpmgrDisplayModevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Objekt, das der Eigenschaft zugewiesen wird, lautet <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Objekt, das der Eigenschaft zugewiesen wird, entspricht keinem der unterstützten Anzeigemodi.  
  
- oder - 
Das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Objekt, das der Eigenschaft zugewiesen wird, ist deaktiviert.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Anzeigemodi der Webparts Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Exemplarische Vorgehensweise: Ändern der Anzeigemodi auf einer Webparts Seite</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanged As WebPartDisplayModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventHandler ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " Usage="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem sich der aktuelle Anzeigemodus auf einer Webparts-Seite geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anzeigemodi sind ein wesentlicher Bestandteil von Webparts Anwendungen. Wenn Benutzer auf einer Webseite zu einem anderen Anzeigemodus wechseln, nimmt die Seite in Abhängigkeit vom Zweck des neuen Anzeigemodus häufig eine ganz andere Darstellung an. Nachdem sich ein Anzeigemodus geändert hat, möchten Sie möglicherweise bestimmte Änderungen an der Benutzeroberfläche vornehmen (z. b. das Ausblenden oder Anzeigen bestimmter Steuerelemente, das Ändern der Darstellung ausgewählter Benutzeroberflächen Elemente usw.).  
  
> [!NOTE]
>  Weitere Informationen zu Anzeigemodi finden Sie unter [Webparts Seiten Anzeigemodi](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Weitere Informationen zum Verarbeiten von Ereignissen finden Sie unter Gewusst [wie: Verarbeiten von Ereignissen in einer Web Forms Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanging As WebPartDisplayModeCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventHandler ^ DisplayModeChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " Usage="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Benutzer auf einer Webseite auf ein Verb klickt, das den Prozess des Umschaltens in einen anderen Anzeigemodus startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anzeigemodi sind ein wesentlicher Bestandteil von Webparts Anwendungen. Wenn Benutzer auf einer Webseite zu einem anderen Anzeigemodus wechseln, nimmt die Seite in Abhängigkeit vom Zweck des neuen Anzeigemodus häufig eine ganz andere Darstellung an. Nachdem ein Benutzer den Vorgang zum Wechseln in einen neuen Anzeigemodus durch Klicken auf ein Verb initiiert hat, möchten Sie möglicherweise bestimmte Änderungen an der Benutzeroberfläche (UI) vornehmen, indem Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>-Eigenschaft verwenden, um den neuen Anzeigemodus zu bestimmen und dann die verschiedenen Benutzeroberflächen Elemente a zu ändern. ccor. Eine sinnvolle Methode hierfür ist das Überschreiben der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>-Methode, um die Benutzeroberfläche anzupassen.  
  
> [!NOTE]
>  Weitere Informationen zu Anzeigemodi finden Sie unter [Webparts Seiten Anzeigemodi](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). Weitere Informationen zum Verarbeiten von Ereignissen finden Sie unter Gewusst [wie: Verarbeiten von Ereignissen in einer Web Forms Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ DisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine schreibgeschützte Auflistung aller Anzeigemodi ab, die einem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, die den Satz der dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Steuerelement zugeordneten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Objekte enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>-Eigenschaft verweist im Gegensatz zur <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft, die nur auf die auf der aktuellen Seite verfügbaren Anzeigemodi verweist (unterstützt), auf alle zugeordneten Anzeigemodi.  
  
 Zwei der angegebenen Anzeigemodi, durchsuchen und entwerfen, werden auf einer Seite immer unterstützt. Die anderen drei Anzeigemodi "Bearbeiten", "Katalog" und "Verbindungen" werden nur unterstützt, wenn eine Seite den entsprechenden Zonentyp hat, der für einen bestimmten Anzeigemodus erforderlich ist. Wenn die Seite z. b. keine <xref:System.Web.UI.WebControls.WebParts.EditorZone> Zone enthält, wird der Bearbeitungs Anzeigemodus in der Auflistung angezeigt, auf die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>-Eigenschaft verwiesen wird, die jedoch nicht in der Auflistung angezeigt wird, auf die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft verwiesen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>-Eigenschaft veranschaulicht. Der Code verwendet diese Eigenschaft zum Auffüllen der Liste mit allen Anzeigemodi, die im Webparts Steuerelement festgelegt sind, auch solche, die auf der aktuellen Seite nicht unterstützt werden. In diesem Fall werden die Katalog-und Verbindungsanzeige Modi nicht unterstützt, da sich die entsprechenden erforderlichen Zonen nicht auf der Seite befinden.  
  
 Die anderen drei Anzeigemodi (Durchsuchen, entwerfen und bearbeiten) werden auf der Seite unterstützt. Der Bearbeitungsmodus wird unterstützt, da die Seite eine <xref:System.Web.UI.WebControls.WebParts.EditorZone> Zone enthält, während die Such-und Entwurfs Modi immer unterstützt werden.  
  
 Nachdem Sie die Seite in einem Browser geladen haben, können Sie das Dropdown Listen-Steuerelement verwenden, um die Seite vom Durchsuchen-Modus in den Entwurfs Modus zu wechseln, und dann in den Bearbeitungsmodus. Im Bearbeitungsmodus können Sie in der Kopfzeile eines der Server Steuerelemente auf das Dropdown-Verbenmenü klicken und **Bearbeiten** auswählen, um das Steuerelement zu bearbeiten. Beachten Sie Folgendes: Wenn Sie in der Dropdown Liste **catalog** oder **Connect** auswählen, wird eine Fehlerseite generiert.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/CS/wpmgrDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/VB/wpmgrDisplayModesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Anzeigemodi der Webparts Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Exemplarische Vorgehensweise: Ändern der Anzeigemodi auf einer Webparts Seite</related>
      </Docs>
    </Member>
    <Member MemberName="DynamicConnections">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DynamicConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ DynamicConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung aller dynamischen Verbindungen ab, die auf einer Webseite derzeit vorhanden sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, die Verweise auf alle dynamischen Verbindungen auf einer Seite enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamische Verbindungen sind Verbindungen, die Programm gesteuert erstellt werden, im Gegensatz zu statisch. Statische Verbindungen werden erstellt, indem Sie im Markup einer Web Forms Seite deklariert werden. Dynamische Verbindungen werden entweder Programm gesteuert oder von einem Benutzer erstellt, der über die Benutzeroberfläche für Verbindungen eine Verbindung erstellt.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>-Auflistung ist schreibgeschützt, und Sie können ihren Inhalt nicht ändern, bietet programmgesteuerten Zugriff auf die einzelnen dynamischen Verbindungs Objekte.  
  
> [!NOTE]
>  Um allgemeine Vorgänge wie das Herstellen von Verbindungen oder das Trennen von <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen auszuführen, sollten Entwickler die öffentlichen Methoden für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse verwenden, wie z. b. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, anstatt zu versuchen, die Verbindungs Objekte direkt im <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> zu ändern. Ausstellung.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="EditDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ EditDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Anzeigemodus dar, in dem Endbenutzer Serversteuerelemente bearbeiten können. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> Feld verweist auf ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Objekt, das im <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement erstellt und enthalten ist. Da es sich hierbei um ein statisches Objekt handelt, können Sie direkt über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse darauf verweisen, ohne dass eine Instanz des Steuer Elements benötigt wird.  
  
 Wenn eine Seite, die Webparts steuert, zuerst geladen wird, befindet Sie sich standardmäßig in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (Durchsuchen-Modus). Wenn Benutzer ein Server Steuerelement bearbeiten oder ändern möchten, müssen Sie zuerst die Seite auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> (Bearbeitungsmodus) umstellen. Zweitens müssen Sie ein bestimmtes Server Steuerelement auswählen, das bearbeitet werden soll, indem Sie im Header dieses Steuer Elements im Verbenmenü auf das Bearbeitungs Verb klicken. Wenn sich das Steuerelement im Bearbeitungsmodus befindet, wird die Bearbeitungs Benutzeroberfläche (UI) zum Bearbeiten des ausgewählten Steuer Elements angezeigt.  
  
 Um den Bearbeitungsmodus auf einer Seite zu aktivieren, muss die Seite mindestens eine <xref:System.Web.UI.WebControls.WebParts.EditorZone> Zone enthalten, die mindestens ein bereitgestelltes Bearbeitungs Steuerelement enthält, z. b. das <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> Steuerelement oder benutzerdefinierte Bearbeitungs Steuerelemente.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das programmgesteuerte arbeiten mit dem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>-Feld veranschaulicht. Der Code füllt eine Dropdown Liste mit den unterstützten Anzeigemodi für die Seite auf, die in diesem Fall "Durchsuchen", "Entwerfen" und "Bearbeiten" sind. Um die Bearbeitung zu unterstützen, befindet sich ein `<asp:EditorZone>` Element auf der Seite. Beachten Sie, dass der Code in der `Page_PreRender`-Methode überprüft, ob die aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>-Eigenschaft auf <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>festgelegt ist. Wenn dies der Fall ist, wird `Label1` sichtbar, und andernfalls wird `Label1` ausgeblendet.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/CS/wpmgrEditDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/VB/wpmgrEditDisplayModevb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, befinden Sie sich standardmäßig im Durchsuchen-Modus. Beachten Sie, dass die Bezeichnung auf der Seite ausgeblendet ist. Verwenden Sie das Dropdown Listen-Steuerelement, um die Seite in den Bearbeitungsmodus zu wechseln. Beachten Sie, dass die Bezeichnung aufgrund des Codes in der `Page_PreRender`-Methode jetzt sichtbar ist. Klicken Sie im Verbenmenü für eines der-Steuerelemente auf das **Bearbeitungs** Verb, um die Bearbeitung des jeweiligen Steuer Elements zu aktivieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Anzeigemodi der Webparts Seite</related>
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public virtual bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt ihn fest, der bestimmt, ob auf einer Webseite mit einem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement clientseitige Skripts aktiviert sind.</summary>
        <value>Ein boolescher Wert, der angibt, ob auf der Seite Clientskripts ausgeführt werden können. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>-Eigenschaft bietet Entwicklern die Möglichkeit, Client Skripts zu deaktivieren. Möglicherweise möchten Sie die Client Skripterstellung aus Sicherheitsgründen deaktivieren oder sicherstellen, dass alle Benutzer einer Seite eine ähnliche Benutzer Darstellung haben, auch wenn Sie andere Browser verwenden.  
  
 Sie können die Client Skripterstellung deaktivieren, indem Sie ein `EnableClientScript`-Attribut zum <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Element auf einer Webseite hinzufügen, wie in der folgenden Zeile des deklarativen Codes:  
  
 `<asp:webpartmanager id="manager" runat="server"`  
  
 `EnableClientScript="false" />`  
  
 Entwickler können diese Eigenschaft auch eliminieren, indem Sie von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse erben und den Standardwert auf `false`festlegen.  
  
 Der Webparts Steuerelement Satz verwendet Client Skripts, um einige der Client Benutzeroberflächen-und Personalisierungs Features bereitzustellen. Wenn Sie die Client Skripterstellung deaktivieren, sind Webparts Steuerelemente weiterhin funktionsfähig, einige Features sind jedoch deaktiviert. Die Möglichkeit zum Ziehen von Steuerelementen in verschiedene Zonen ist deaktiviert, und die Möglichkeit, Verben in einem Dropdown-Verbenmenü in der Titelleiste eines Steuer Elements zu Rendering (die Verben werden stattdessen als Links in der Titelleiste des Steuer Elements angezeigt).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, dass die Verwendung von Designs auf einer Webseite aktiviert ist.</summary>
        <value>Ein boolescher Wert, der angibt, ob Designs aktiviert sind. <see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement überschreibt die Basis <xref:System.Web.UI.Control.EnableTheming%2A>-Eigenschaft, um sicherzustellen, dass immer der Wert `true`zurückgegeben wird. Dies geschieht, da der Webparts-Steuerelement Satz die Verwendung von Designs erfordert, um die Webparts Steuerelemente zu erzeugen, die untergeordnete Steuerelemente des <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuer Elements sind, und die die Benutzeroberfläche (UI) einer Webseite bilden. Beispielsweise werden Designs zum Rendering der verschiedenen Zonen und der Steuerelemente in den Zonen verwendet, einschließlich der verschiedenen Typen von Teil Steuerelementen (Steuerelemente, die von der <xref:System.Web.UI.WebControls.WebParts.Part>-Klasse erben), Benutzer Steuerelementen, ASP.NET-Server Steuerelementen und benutzerdefinierten Server Steuerelementen.  
  
 Obwohl die überschriebene <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A> Eigenschaft in Übereinstimmung mit ihrer Basis Eigenschaft als Lese-/Schreibeigenschaft implementiert ist, können Sie die-Eigenschaft nicht festlegen, da Sie vom Design her immer den Wert `true`zurückgeben muss. Wenn Sie versuchen, die-Eigenschaft festzulegen, wird eine <xref:System.NotSupportedException> Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, den Eigenschaftswert festzulegen.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartConnecting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartConnecting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartConnecting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartConnecting();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartConnecting : unit -&gt; unit&#xA;override this.EndWebPartConnecting : unit -&gt; unit" Usage="webPartManager.EndWebPartConnecting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den Prozess ab, mit dem eine Verbindung zwischen einem <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement und einem anderen Steuerelement erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>-Methode schließt den Prozess der Verbindung eines <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements mit einem anderen Steuerelement ab. Dies ist das Gegenstück zur <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>-Methode.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>-Methode stellt sicher, dass das Personalisierungs Objekt, auf das von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft verwiesen wird, geändert werden kann. Dies ist erforderlich, da das bilden einer Verbindung selbst ein personalisierungstyp ist. Die-Methode stellt dann sicher, dass das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Objekt nicht `null`ist, und ruft schließlich die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Steuerelement, auf das die <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Eigenschaft verweist, ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Entwickler, die das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement erweitern müssen, können diese Methode in einer abgeleiteten Klasse überschreiben. Ein Ansatz besteht darin, die Basis Methode aufzurufen und dann einige zusätzliche benutzerdefinierte Behandlung hinzuzufügen, oder Sie möchten den gesamten Vorgang zum Abschließen einer Verbindung zwischen Steuerelementen vollständig anpassen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartEditing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartEditing();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartEditing : unit -&gt; unit&#xA;override this.EndWebPartEditing : unit -&gt; unit" Usage="webPartManager.EndWebPartEditing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den Prozess der Bearbeitung eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>-Methode schließt den Prozess der Bearbeitung eines <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements ab. Dies ist das Gegenstück zur <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>-Methode.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>-Methode stellt sicher, dass das Personalisierungs Objekt, auf das von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft verwiesen wird, geändert werden kann. Dies ist erforderlich, da die Bearbeitung eines Steuer Elements ein Prozess ist, der Personalisierungs Änderungen Die-Methode stellt dann sicher, dass das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Objekt nicht `null`ist, sodass das aktuell ausgewählte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement geändert werden kann, und schließlich wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>-Methode aufgerufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Steuerelement, auf das die <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Eigenschaft verweist, ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Entwickler, die das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuerelement erweitern müssen, können diese Methode in einer abgeleiteten Klasse überschreiben. Ein Ansatz besteht darin, die Basis Methode aufzurufen und dann einige zusätzliche benutzerdefinierte Behandlung hinzuzufügen, oder Sie möchten den gesamten Prozess der vollständigen Bearbeitung eines Steuer Elements vollständig anpassen. Beispielsweise könnten Sie in der Überschreibungs Methode zuerst die Basis Methode und dann Code hinzufügen, der bestimmt, welche Bearbeitungs Änderungen vorgenommen wurden, und die Liste der Änderungen, die an den Endbenutzer zurückgegeben werden, als Bestätigung anzeigen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ExportSensitiveDataWarning">
      <MemberSignature Language="C#" Value="public virtual string ExportSensitiveDataWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExportSensitiveDataWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportSensitiveDataWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExportSensitiveDataWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExportSensitiveDataWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text einer Warnmeldung ab, die angezeigt wird, wenn versucht wird, vertrauliche Zustandsdaten aus einem <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zu exportieren, oder legt diesen Text fest.</summary>
        <value>Eine Zeichenfolge, die die Warnmeldung enthält. Die Standardmeldung ist ein von .NET Framework bereitgestellter kulturspezifischer Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Benutzer versucht, sensible Zustandsdaten aus einem <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement zu exportieren, wird eine Warnmeldung für den Benutzer in einem Meldungs Feld angezeigt, wenn eine der exportierten Daten von einem Member stammt, der im Quellcode als vertraulich gekennzeichnet wurde. , um Ihnen mitzuteilen, dass sensible Daten exportiert werden, und die Möglichkeit, den Export abzubrechen. Entwickler können die Daten eines bestimmten Members als sensibel kennzeichnen, indem Sie den `isSensitive`-Parameter des `[Personalizable]`-Attributs auf `true` für den Member festlegen. Weitere Informationen zu diesem Attribut und Parameter finden Sie in der <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>-Klasse.  
  
> [!IMPORTANT]
>  Wenn Sie die Exportfunktion von Webparts verwenden, können vertrauliche Daten möglicherweise in nicht autorisierte Benutzer exportiert werden. Weitere Informationen zum Schutz vor dieser Bedrohung finden Sie unter [Sichern von Webparts Seiten](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 Die Standardmeldung wird immer dann angezeigt, wenn Benutzer versuchen, zu exportieren. Wenn Sie jedoch der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>-Eigenschaft einen Wert zuweisen, können Sie eine benutzerdefinierte Warnmeldung bereitstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die deklarative Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>-Eigenschaft veranschaulicht.  
  
 Der Code für die folgende Webseite verwendet ein Standard <xref:System.Web.UI.WebControls.BulletedList>-Steuerelement und platziert es in einer-Zone. Das Steuerelement wird zur Laufzeit mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Steuerelement umschließt, sodass es als echtes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement fungieren kann. Um das Steuerelement exportierbar zu machen, wird dem `<asp:bulletedlist>`-Element ein `ExportMode`-Attribut hinzugefügt, und der-Attribut Wert wird auf <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>festgelegt, was bedeutet, dass sensible und nicht sensible Daten exportiert werden können. Beachten Sie auch, dass dem `ExportSensitiveDataWarning`-Attribut im `<asp:webpartmanager>`-Element ein benutzerdefinierter Wert zugewiesen wird.  
  
 Beachten Sie, dass Sie zum Funktionieren des Code Beispiels eine Einstellung hinzufügen müssen, die Sie in der Datei "Web. config" hinzufügen müssen, um das Exportieren Webparts Beschreibungsdateien zu ermöglichen Stellen Sie sicher, dass Sie über eine Web. config-Datei im gleichen Verzeichnis wie die Webseite für dieses Codebeispiel verfügen. Stellen Sie im `<system.web>` Abschnitt sicher, dass ein `<webParts>`-Element vorhanden ist, bei dem ein `enableExport`-Attribut auf `true`festgelegt ist, wie im folgenden Markup.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/CS/wpmgrExportSensitiveWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/VB/wpmgrExportSensitiveWarningVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, klicken Sie auf das Verbenmenü (dargestellt durch einen abwärts Pfeil) in der Titelleiste des Steuer Elements, das die Links enthält. Wählen Sie im Verbenmenü die Option **exportieren**aus, und beachten Sie, dass ein Meldungs Feld mit der benutzerdefinierten Warnung angezeigt wird. Wenn Sie den Export fortsetzen möchten, klicken Sie auf **OK**, damit Sie eine lokale Kopie einer XML-Beschreibungsdatei mit allen Daten über das Steuerelement speichern können.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ExportWebPart">
      <MemberSignature Language="C#" Value="public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit&#xA;override this.ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit" Usage="webPartManager.ExportWebPart (webPart, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="webPart">Das Steuerelement, dessen Daten exportiert werden.</param>
        <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />, der die exportierten Daten von <paramref name="webPart" /> in eine XML-Beschreibungsdatei schreibt.</param>
        <summary>Erstellt eine XML-Beschreibungsdatei, die Zustands- und Eigenschaftendaten für ein Serversteuerelement enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>-Methode assembliert verschiedene Zustands-und Eigenschaften Daten aus `webPart` in eine XML-Datei. Die Daten enthalten Informationen über das Steuerelement selbst, einschließlich Assembly, Zustandsdaten und Eigenschafts Daten. Der Benutzer, der den Export initiiert, kann die XML-Datei auf dem lokalen Computer oder im Netzwerk auf dem Datenträger speichern. Andere Benutzer können dann die Beschreibungsdatei auf eine andere Seite oder Website importieren und die Zustands-und Eigenschafts Daten auf eine andere Instanz von `webPart`anwenden. Dies bietet einen schnellen und einfachen Mechanismus, mit dem Benutzer Ihre Einstellungen auf Server Steuerelementen freigeben und wieder verwenden können. Außerdem bietet Sie Entwicklern die Möglichkeit, das Aussehen und Verhalten von exportierten und importierten Steuerelementen zu steuern.  
  
 Eigenschaften auf `webPart` werden standardmäßig nicht exportiert. Um den Export einer Eigenschaft zu aktivieren, müssen Sie Sie mit dem `[Personalizable]`-Attribut im Quellcode markieren. Sie können optional auch eine exportierbare Eigenschaft als enthaltende sensible Daten markieren, indem Sie den `isSensitive`-Parameter des `[Personalizable]`-Attributs auf `true`festlegen. Standardmäßig ist `isSensitive` `false`. Entwickler können den-Parameter auf `true` festlegen, um anzugeben, dass die Daten sensibel sind.  
  
 Um zu ermöglichen, `webPart` exportiert werden kann, legt ein Entwickler seinen <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>-Eigenschafts Wert entweder auf <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All> (der alle personalisierbaren und sensiblen Eigenschaften enthält) oder auf <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>fest, wodurch alles außer den sensiblen Eigenschaften exportiert wird.  
  
> [!IMPORTANT]
>  Wenn Sie Benutzern das Exportieren von Daten aus Steuerelementen und das Importieren von Daten in andere Steuerelemente gestatten, sind einige Sicherheitsrisiken verbunden. Entwickler sollten den oben beschriebenen Ansatz verwenden, um sensible Daten zu schützen. Wenn Sie das Risiko vermeiden möchten, Daten vollständig verfügbar zu machen, sollten Sie den Export nicht auf `webPart` aktivieren. Ausführliche Informationen zu Sicherheitsproblemen Webparts finden Sie unter [Sichern von Webparts Seiten](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="writer" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> ist nicht in der Auflistung von Steuerelementen enthalten, auf die in <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> verwiesen wird.  
  
- oder - 
Die <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />-Eigenschaft von <paramref name="webPart" /> ist auf den Wert <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" /> festgelegt. Dies bedeutet, dass der Export für <paramref name="webPart" /> deaktiviert ist.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Sichern von Webparts Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="webPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überschrieben, um zu verhindern, dass der Fokus auf das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement gesetzt wird, weil dieses keine Benutzeroberfläche besitzt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Focus%2A>-Methode überschreibt die Basis <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> Methode und löst eine Ausnahme aus, wenn ein Aufrufer die-Methode aufruft. Da das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement über keine Benutzeroberfläche verfügt und für Benutzer nie sichtbar ist, kann es niemals zulassen, dass der Fokus auf sich selbst festgelegt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ein Aufrufer versucht, die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />-Methode aufzurufen, was bei einem Steuerelement ohne Benutzeroberfläche nicht unterstützt wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConsumerConnectionPointCollection ^ GetConsumerConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&#xA;override this.GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" Usage="webPartManager.GetConsumerConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein Serversteuerelement, das als Consumer in einer Verbindung fungiert.</param>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />-Objekten ab, die als Verbindungspunkte von einem Serversteuerelement verwendet werden können, das als Consumer in einer Webparts-Verbindung fungiert.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" />, die alle Verbindungspunkte im Consumer enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Webparts Verbindung umfasst immer genau zwei Steuerelemente, von denen eine als Datenanbieter fungiert, der andere als der Consumer der Daten. Jedes Steuerelement muss über eine oder mehrere Methoden verfügen, die als Verbindungspunkte definiert sind. Bei einem Consumersteuerelement sind die Verbindungspunkte <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Objekte. Das Abrufen der Consumerverbindungspunkte ist ein erforderlicher Schritt beim bilden einer Webparts Verbindung.  
  
 Ein Consumer muss immer über mindestens einen Verbindungspunkt verfügen, um eine Verbindung herstellen zu können. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>-Methode überprüft ein Consumer-Steuerelement und ruft eine Auflistung aller zugehörigen Verbindungspunkte ab. Wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement keine Verbindungspunkte aufweist, gibt die Methode eine leere Auflistung zurück.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>-Methode verwenden.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden können, sowie ein `<asp:webpartmanager>` Element.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und eine benutzerdefinierte-Schnittstelle enthält.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie im Thema Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Das deklarative Markup für die Webseite enthält `Register` Anweisungen für das Benutzer Steuerelement und die benutzerdefinierten Steuerelemente. Es gibt ein `<asp:webpartmanager>`-Element, ein `<asp:webpartzone>`-Element, das die benutzerdefinierten Steuerelemente enthalten soll, und ein `<asp:connectionszone>`-Element. Beachten Sie, dass der Code in der `Page_Load`-Methode prüft, ob bereits eine Verbindung vorhanden ist, und, falls nicht, einen Anbieter, einen Consumer und die entsprechenden Verbindungspunkte definiert. Anschließend wird eine neue Verbindung mit dem Satz statischer Verbindungen hinzugefügt, auf die von verwiesen wird @no__t _1_-Eigenschaft.<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Beachten Sie, dass das <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> Objekt, das mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>-Methode abgerufen wird, dann an die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>-Methode weitergegeben wird, um zu bestimmen, ob eine Verbindung zwischen den beiden Steuerelementen erstellt werden kann.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Der dritte Teil des Beispiels ist der Quellcode für die Steuerelemente. Sie können diesen Code und die Anweisungen für die Kompilierung abrufen, indem Sie den Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse entnehmen.  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **verbinden** aus, um die Seite in den Verbindungs Modus zu wechseln. Der Verbindungs Modus verwendet das `<asp:connectionszone>`-Element, um das Erstellen von Verbindungen zwischen-Steuerelementen zu ermöglichen. Klicken Sie im Verbindungs Modus in der Titelleiste des **ZIP-Code** -Steuer Elements auf den abwärts Pfeil, um das zugehörige Verbenmenü zu aktivieren, und klicken Sie dann auf **verbinden**. Nachdem die Benutzeroberfläche der Verbindung angezeigt wird, beachten Sie, dass bereits eine Verbindung mit dem Code erstellt wurde, der in der `Page_Load`-Methode enthalten ist. Wenn Sie in einer späteren Browsersitzung zu dieser Seite zurückkehren, wird diese statische Verbindung bereits hergestellt und muss nicht jedes Mal neu erstellt werden, wenn die Seite geladen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentWebPartManager">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::WebParts::WebPartManager ^ GetCurrentWebPartManager(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrentWebPartManager : System.Web.UI.Page -&gt; System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Die Webseite, die eine Instanz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> enthält.</param>
        <summary>Ruft einen Verweis auf die aktuelle Instanz des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements auf einer Seite ab.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, der auf die aktuelle Instanz des Steuerelements auf einer Seite verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>-Methode ist in Kontexten nützlich, in denen Sie einen Verweis auf das aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement abrufen möchten. Dies tritt häufig auf, wenn Sie ein benutzerdefiniertes Steuerelement schreiben, das während der Entwicklung nicht weiß, was die ID des <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuer Elements auf der Seite sein wird.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>-Methode ist statisch, sodass Sie Sie direkt abrufen können, ohne dass eine Instanz eines <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuer Elements benötigt wird.  
  
 Einige Steuerelemente im Webparts Steuerelement festgelegt, z. b. <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, verfügen über eine <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>-Eigenschaft, die einen Verweis auf das aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement abrufen kann. Daher sollten Sie beim Arbeiten mit solchen Steuerelementen diese Eigenschaft verwenden, um einen Verweis abzurufen.  
  
 Wenn Sie in einem Kontext programmieren, in dem Sie die ID des <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuer Elements kennen (z. b. das Inline Schreiben von Code in einer Webseite), ist es am einfachsten und effizientesten, mithilfe seiner ID direkt auf das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement zu verweisen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>-Methode verwenden. Das Beispiel besteht aus zwei Teilen: einem benutzerdefinierten Server Steuerelement und einer Webseite, die das-Steuerelement hostet.  
  
 Das benutzerdefinierte <xref:System.Web.UI.WebControls.Label> Steuerelement verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>-Methode, um die ID des <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuer Elements auf der aktuellen Seite abzurufen, und zeigt dann die ID an.  
  
 [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/MyManagerIDLabel.cs#2)]
 [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/MyManagerIDLabel.vb#2)]  
  
 Im folgenden Codebeispiel wird die Webseite bereitstellt, die das-Steuerelement in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone hostet.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/getCurrentWPManagerCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/getcurrentWPManagervb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, beachten Sie, dass die ID des aktuellen <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuer Elements innerhalb des benutzerdefinierten <xref:System.Web.UI.WebControls.Label> Steuer Elements angezeigt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTitle">
      <MemberSignature Language="C#" Value="protected internal virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetDisplayTitle(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetDisplayTitle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string&#xA;override this.GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetDisplayTitle webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Das Steuerelement, für das die Methode den Wert von <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> zurückgibt.</param>
        <summary>Ruft eine Zeichenfolge ab, die den Wert für die <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />-Eigenschaft eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements enthält.</summary>
        <returns>Eine Zeichenfolge, die den berechneten Wert von <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> für <paramref name="webPart" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft den berechneten Wert der <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>-Eigenschaft für `webPart`ab. Wenn Entwickler der <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>-Eigenschaft eines <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements keinen Wert zuweisen, erzeugt diese Methode den Wert, der als Titel angezeigt werden soll. Der berechnete Wert für unbenannte Steuerelemente besteht aus einer Zahl, die an eine Zeichenfolge angefügt wird, wobei die Zahl die Sequenz eines Steuer Elements in der aktuellen Zone angibt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> ist nicht in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung enthalten.</exception>
        <block subset="none" type="overrides"><para>Diese Methode kann überschrieben werden, um die Berechnung des Standard anzeigen Titels zu ändern.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetExportUrl">
      <MemberSignature Language="C#" Value="public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetExportUrl(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetExportUrl(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.GetExportUrl : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetExportUrl webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Der <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, der exportiert wird.</param>
        <summary>Ruft den relativen virtuellen Pfad und die Abfragezeichenfolge ab, die bei dem Versuch, ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement zu exportieren, Teil der Anforderung sind.</summary>
        <returns>Eine Zeichenfolge, die den relativen virtuellen Pfad und die Abfragezeichenfolge enthält, die zusammen die Anforderung zum Exportieren eines Steuerelements bilden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A>-Methode zurückgegebene Wert ist ein relativer virtueller Pfad zum Server Speicherort der Seite, die das Steuerelement enthält, zuzüglich des angefügten Abfrage Zeichen folgen Werts, der die an den Server gesendete Export Anforderung bildet. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A>-Methode codiert die Zeichenfolge, bevor die Anforderung übermittelt werden kann, um Angriffe durch böswillige Skripts zu schützen.  
  
> [!NOTE]
>  Weitere Informationen zum Sichern von Webparts Anwendungen finden Sie unter [Sichern von Webparts Seiten](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetGenericWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::GenericWebPart ^ GetGenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetGenericWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.GetGenericWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Ein Serversteuerelement, das sich in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> befindet und zur Laufzeit als untergeordnetes Steuerelement eines <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> umschlossen wird.</param>
        <summary>Ruft einen Verweis auf die Instanz des <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />-Steuerelements ab, die ein Serversteuerelement enthält.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, der <paramref name="control" /> als untergeordnetes Steuerelement umschließt. Die Methode gibt <see langword="null" /> zurück, wenn <paramref name="control" /> nicht in einem <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> enthalten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Allgemeinen gibt es zwei Kategorien von Steuerelementen, die Entwickler in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen platzieren, um an Webparts Anwendungen teilzunehmen: <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente, die von der <xref:System.Web.UI.WebControls.WebParts.WebPart>-Basisklasse erben, und andere Server Steuerelemente, die ASP.NET-Standard Steuerelemente sein können. , benutzerdefinierte Steuerelemente oder Benutzer Steuerelemente. Wenn eine dieser Steuerelemente in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone platziert wird, übernimmt Sie die Funktionalität eines <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements. Ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement verfügt über diese Funktionalität, aber die anderen Arten von Server Steuerelementen nicht. Damit die anderen Server Steuerelemente als <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente fungieren können, wenn Sie in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone platziert werden, umschließt ASP.net diese mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Steuerelement. Da das <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Steuerelement direkt von der <xref:System.Web.UI.WebControls.WebParts.WebPart>-Klasse erbt, stellt es seine untergeordneten Steuerelemente mit echten Webparts-Funktionen bereit.  
  
 Häufig können Seiten Entwickler zur Laufzeit einen Verweis auf das <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement erhalten, das eines der Server Steuerelemente in einer Zone enthält. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>-Methode ermöglicht es Ihnen, einen Verweis auf das <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement abzurufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>-Methode veranschaulicht. Das Codebeispiel enthält ein in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone deklariertes <xref:System.Web.UI.WebControls.Calendar>-Steuerelement. Die `Button1_Click`-Methode druckt zuerst die ID des <xref:System.Web.UI.WebControls.Calendar> Steuer Elements in eine Bezeichnung und verwendet dann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>-Methode, um einen Verweis auf das <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement abzurufen, das den Kalender umschließt. Die ID des <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Steuer Elements und die ID des untergeordneten Steuer Elements (das <xref:System.Web.UI.WebControls.Calendar> Steuerelement ist) werden jeweils in einer zweiten Bezeichnung ausgegeben.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/CS/getGenericWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/VB/getGenericWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ProviderConnectionPointCollection ^ GetProviderConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&#xA;override this.GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" Usage="webPartManager.GetProviderConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein Serversteuerelement, das als Anbieter in einer Verbindung fungiert.</param>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />-Objekten ab, die als Verbindungspunkte von einem Serversteuerelement verwendet werden können, das als Anbieter in einer Webparts-Verbindung fungiert.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" />, die alle Verbindungspunkte im Anbieter enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Webparts Verbindung umfasst immer genau zwei Steuerelemente, von denen eine als Datenanbieter fungiert, der andere als der Consumer der Daten. Jedes Steuerelement muss über eine oder mehrere Methoden verfügen, die als Verbindungspunkte definiert sind. Bei einem Anbieter Steuerelement sind die Verbindungspunkte <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> Objekte.  
  
 Ein Anbieter muss immer über mindestens einen Verbindungspunkt verfügen, um eine Verbindung herstellen zu können. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>-Methode überprüft ein Anbieter Steuerelement und ruft eine Auflistung aller zugehörigen Verbindungspunkte ab. Das Abrufen der Anbieter Verbindungspunkte ist ein erforderlicher Schritt beim bilden einer Webparts Verbindung.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>-Methode verwenden.  
  
 Das Beispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Webseite, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden können, sowie ein `<asp:webpartmanager>` Element.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und eine benutzerdefinierte-Schnittstelle enthält.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Das deklarative Markup für die Webseite enthält `Register` Anweisungen für das Benutzer Steuerelement und die benutzerdefinierten Steuerelemente. Es gibt ein `<asp:webpartmanager>`-Element, ein `<asp:webpartzone>`-Element, das die benutzerdefinierten Steuerelemente enthalten soll, und ein `<asp:connectionszone>`-Element. Beachten Sie, dass der Code in der `Page_Load`-Methode prüft, ob bereits eine Verbindung vorhanden ist, und, falls nicht, einen Anbieter, einen Consumer und die entsprechenden Verbindungspunkte definiert. Anschließend wird eine neue Verbindung mit dem Satz statischer Verbindungen hinzugefügt, auf die von verwiesen wird @no__t _1_-Eigenschaft.<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> Beachten Sie, dass das <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> Objekt, das mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>-Methode abgerufen wird, dann an die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>-Methode weitergegeben wird, um zu bestimmen, ob eine Verbindung zwischen den beiden Steuerelementen erstellt werden kann.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Der dritte Teil des Beispiels ist der Quellcode für die Steuerelemente. Sie können diesen Code und die Anweisungen für die Kompilierung abrufen, indem Sie den Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse entnehmen.  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **verbinden** aus, um die Seite in den Verbindungs Modus zu wechseln. Der Verbindungs Modus verwendet das `<asp:connectionszone>`-Element, um das Erstellen von Verbindungen zwischen-Steuerelementen zu ermöglichen. Klicken Sie im Verbindungs Modus in der Titelleiste des **ZIP-Code** -Steuer Elements auf den abwärts Pfeil, um das zugehörige Verbenmenü zu aktivieren, und klicken Sie dann auf **verbinden**. Nachdem die Benutzeroberfläche der Verbindung angezeigt wird, beachten Sie, dass bereits eine Verbindung mit dem Code erstellt wurde, der in der `Page_Load`-Methode enthalten ist. Wenn Sie in einer späteren Browsersitzung zu dieser Seite zurückkehren, wird diese statische Verbindung bereits hergestellt und muss nicht jedes Mal neu erstellt werden, wenn die Seite geladen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ImportWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart ImportWebPart(class System.Xml.XmlReader reader, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportWebPart (reader As XmlReader, ByRef errorMessage As String) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ ImportWebPart(System::Xml::XmlReader ^ reader, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member ImportWebPart : System.Xml.XmlReader * string -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.ImportWebPart : System.Xml.XmlReader * string -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.ImportWebPart (reader, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">Ein <see cref="T:System.Xml.XmlReader" />, der die Zustands- und Eigenschaftendaten aus der zu importierenden XML-Beschreibungsdatei liest.</param>
        <param name="errorMessage">Ein <see cref="T:System.String" />, der angezeigt wird, wenn während des Imports ein Fehler auftritt.</param>
        <summary>Importiert eine XML-Beschreibungsdatei, die Zustands- und Eigenschaftendaten für ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement enthält, und wendet die Daten auf das Steuerelement an.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder ein Serversteuerelement, das mit einem <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> umschlossen ist und daher als <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> behandelt wird), auf das in der importierten XML-Beschreibungsdatei verwiesen wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>-Methode importiert eine XML-Beschreibungsdatei, die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>-Methode für ein Server Steuerelement erstellt wurde. Dabei handelt es sich nicht um das eigentliche Server Steuerelement, das importiert wird, sondern nur die Beschreibungsdatei, die Zustands-und Eigenschaften Daten zum Steuerelement enthält. Das in der Beschreibungsdatei referenzierte Steuerelement und die Assembly müssen bereits auf dem Server verfügbar sein, auf dem ein Benutzer versucht, die Beschreibungsdatei zu importieren.  
  
 Um das Importieren eines Steuer Elements zu ermöglichen, muss ein Entwickler auf der Seite, auf der der Import aktiviert wird, ein <xref:System.Web.UI.WebControls.WebParts.CatalogZone>-Steuerelement hinzufügen. Innerhalb der Zone muss ein <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>-Steuerelement hinzugefügt werden. Dieses Steuerelement stellt ein Datei Dialogfeld bereit, in dem Benutzer die zu importierende Beschreibungsdatei durchsuchen und suchen können.  
  
 Wenn ein Benutzer eine Beschreibungsdatei findet und den Import startet, wird die Beschreibungsdatei von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>-Methode gelesen. Wenn keine Fehler vorliegen und die Assembly und das Steuerelement gefunden werden, wird das Server Steuerelement dem Katalog im <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Steuerelement hinzugefügt, und die verschiedenen in der Beschreibungsdatei angegebenen Eigenschaften-und Zustandsdaten werden auf das Steuerelement angewendet. Der Benutzer kann dann das Steuerelement auswählen und es der Seite hinzufügen.  
  
> [!IMPORTANT]
>  Wie bei der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>-Methode hat die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>-Methode ein gewisses Potenzial an Sicherheitsrisiken. Da Daten in eine Website importiert werden müssen, könnte ein böswilliger Benutzer versuchen, ungültige Daten oder sogar Skriptcode in die zu importierende Beschreibungsdatei einzufügen. Anschließend können die ungültigen Daten auf einer Seite oder in einer Datenbank angezeigt werden, oder das eingefügte Skript kann ausgeführt werden. Eine Übersicht über die potenziellen Risiken im Zusammenhang mit dem Importieren von Beschreibungsdateien und Möglichkeiten, diese Risiken zu vermeiden, finden Sie unter [Sichern von Webparts Seiten](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.EndOfStreamException"><paramref name="reader" /> konnte die Datei nicht lesen.  
  
- oder - 
 <paramref name="reader" /> hätte eine Importfehlermeldung anzeigen müssen, fand aber in der Datei keine entsprechende Meldung.  
  
- oder - 
 <paramref name="reader" /> hat das Ende der Datei erreicht, ohne das XML-Element gefunden zu haben, das die exportierten Daten enthält.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">Sichern von Webparts Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Internals">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Internals As WebPartManagerInternals" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ Internals { System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Internals : System.Web.UI.WebControls.WebParts.WebPartManagerInternals" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManagerInternals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />-Klasse ab, die verwendet wird, um einen Satz von Methoden zu kombinieren und aufzuteilen, die eigentlich in der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse implementiert sind, aber vor allem für Steuerelemententwickler nützlich sind.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />-Objekt, über das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> auf die verschiedenen Methoden verweisen kann, die in <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" /> aufgeteilt wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>-Eigenschaft macht die APIs verfügbar, die eine Reihe von <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Methoden aufzurufen, die größtenteils in Erweiterbarkeits Fällen verwendet werden.  
  
 Die entworfene Methode, diese internen Methoden zu verwenden, besteht darin, über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>-Eigenschaft auf diese zuzugreifen. Da die-Eigenschaft geschützt ist, können Sie nur darauf zugreifen und die Methoden innerhalb einer Instanz der <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>-Klasse aufrufen, indem Sie von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse erben.  
  
> [!NOTE]
>  Diese Eigenschaft wird in [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]aus IntelliSense ausgeblendet. In einer abgeleiteten <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Klasse können Sie jedoch weiterhin auf die-Eigenschaft und ihre verschiedenen Member zugreifen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAuthorized">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob einer Seite ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein anderes Serversteuerelement hinzugefügt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Teil der Flexibilität des Webparts Features ist die Möglichkeit, Webseiten zur Laufzeit Server Steuerelemente hinzuzufügen. Es gibt eine Reihe allgemeiner Szenarios, in denen ein Server Steuerelement, das ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, ein benutzerdefiniertes Server Steuerelement, ein Benutzer Steuerelement oder ein ASP.NET-Steuerelement sein kann, hinzugefügt werden kann.  
  
 In den folgenden gängigen Szenarien versucht das Webparts Steuersatz, Server Steuerelemente zu einer Seite hinzuzufügen, und die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode wird aufgerufen, um Sie zu autorisieren:  
  
-   Wenn ein Server Steuerelement hinzugefügt wird, indem es im Markup einer Webseite innerhalb einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone deklariert wird.  
  
-   Wenn ein Server Steuerelement einer Zone Programm gesteuert hinzugefügt wird.  
  
-   Wenn ein Benutzer ein Server Steuerelement in einen Webparts Katalog von Steuerelementen importiert.  
  
-   Wenn ein vorhandenes Server Steuerelement aus dem Personalisierungs Datenspeicher geladen wird.  
  
-   Wenn ein Server Steuerelement zu einem <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>-Steuerelement hinzugefügt wird, um es in einem Katalog von Server Steuerelementen verfügbar zu machen.  
  
 In jedem Szenario, in dem Steuerelemente hinzugefügt werden, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode aufgerufen, um sicherzustellen, dass alle Autorisierungs Kriterien erfüllt sind, damit ein Steuerelement hinzugefügt werden kann. Wenn ein Steuerelement autorisiert ist, wird es normal hinzugefügt, wie es bei keinem Filter Szenario der Fall wäre. Wenn ein Steuerelement nicht autorisiert ist, kann der Webparts Steuerelement Satz abhängig vom Kontext auf verschiedene Weise reagieren. Der Steuersatz kann im Hintergrund einen nicht autorisierten Teil nicht hinzufügen (wenn keine Notwendigkeit besteht, den Benutzer zu informieren), kann eine Fehlermeldung angezeigt werden, oder er kann eine Instanz der <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> Klasse als Platzhalter hinzufügen. Dieses Platzhalter Objekt ist auf der Seite nicht sichtbar, aber im Quellcode der Seite, um anzugeben, dass ein nicht autorisiertes Steuerelement ausgeschlossen wurde.  
  
 Die Determinante, ob ein Steuerelement autorisiert ist, ist der Autorisierungs Filter. Ein Autorisierungs Filter ist ein Feature im Webparts Steuerelement, das es Entwicklern ermöglicht, alle Steuerelemente, die die angegebenen Kriterien nicht erfüllen, von einer Seite auszuschließen.  
  
 Zum Erstellen eines Filter Szenarios müssen Entwickler zwei Dinge tun. Zuerst müssen Sie einen Zeichen folgen Wert (der Wert kann willkürlich sein) der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft der einzelnen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente zuweisen, die im Szenario verwendet werden sollen. Sie können dieser Eigenschaft auch für andere Typen von Server Steuerelementen, die keine <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente sind, einen Wert zuweisen, denn wenn Sie in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen platziert werden, werden diese Steuerelemente zur Laufzeit mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement umschließt, und dieses Steuerelement erbt das <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Property.  
  
 Der zweite erforderliche Schritt zum Erstellen eines Filter Szenarios besteht darin, entweder die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>-Methode zu überschreiben oder einen Ereignishandler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>-Ereignis zu erstellen. In diesen Methoden kann ein Entwickler die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft überprüfen. wenn der Wert angibt, dass das Steuerelement nicht autorisiert werden soll, stellt der Entwickler sicher, dass die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Methode den Wert `false`zurückgibt.  
  
> [!NOTE]
>  Codebeispiele und eine Beschreibung der Einrichtung eines angepassten Filter Szenarios mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode finden Sie in den Themen zu den über Ladungen der-Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthorized(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthorized(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.IsAuthorized : System.Web.UI.WebControls.WebParts.WebPart -&gt; bool" Usage="webPartManager.IsAuthorized webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein anderes Serversteuerelement, dessen Autorisierung geprüft wird.</param>
        <summary>Führt die ersten Schritte des Prozesses aus, mit dem bestimmt wird, ob für das Steuerelement eine Autorisierung vorhanden ist und es einer Seite hinzugefügt werden darf.</summary>
        <returns>Ein boolescher Wert, der angibt, ob <paramref name="webPart" /> einer Seite hinzugefügt werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode ist die anfängliche Methode, die vom Webparts-Steuerelement aufgerufen wird, um die Autorisierung für ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement zu prüfen Er akzeptiert `webPart` als Parameter und startet einen Prozess, der letztendlich bestimmt, ob das Steuerelement einer Seite hinzugefügt wird. Sie können diese Methode direkt aus dem Code heraus abrufen, wenn Sie bestimmen müssen, ob ein bestimmtes Steuerelement autorisiert ist.  
  
 Diese Methode führt die anfänglichen Aufgaben aus, um zu bestimmen, ob das Steuerelement von der <xref:System.Web.UI.WebControls.WebParts.WebPart> Klasse erbt oder ob es sich um ein <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Steuerelement handelt, und wenn dies der Fall ist, welcher Typ des untergeordneten Steuer Elements Zum Abschließen der Autorisierungs Aufgabe wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Überladungs Methode aufgerufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29>-Methode aus dem Code aufgerufen wird, um zu bestimmen, ob ein Steuerelement autorisiert ist, einer Seite hinzugefügt zu werden.  
  
 Das Codebeispiel besteht aus drei Teilen:  
  
-   Ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement, das die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode überschreibt.  
  
-   Eine Webseite, die einen Filter für ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement erstellt.  
  
-   Eine Erläuterung der Art und Weise, wie das Codebeispiel ausgeführt wird.  
  
 In diesem Codebeispiel wird ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verwendet, das die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Überladungs Methode überschreibt, um die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft zu verarbeiten. Dieses Steuerelement überprüft den Eigenschafts Wert `admin` und autorisiert das Steuerelement, wenn der Wert vorhanden ist. Wenn ein Steuerelement einen anderen Wert aufweist, ist es nicht autorisiert. Steuerelemente ohne den-Eigenschafts Wert werden ebenfalls autorisiert, da Sie vermutlich nicht Teil des Filter Szenarios sind.  
  
 Damit dieses Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird die dynamische Kompilierungs Methode verwendet. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Im zweiten Teil des Code Beispiels wird ein Filter erstellt, der ein Steuerelement potenziell ausschließen kann. Die folgende Webseite enthält drei ASP.NET-Server Steuerelemente in einem `<asp:webpartzone>`-Element. Beachten Sie, dass für das erste und das zweite Steuerelement die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaften auf unterschiedliche Werte festgelegt sind und die dritte die-Eigenschaft nicht zuweist. Dieser Autorisierungs Wert kann zur Laufzeit geprüft werden, und das Steuerelement kann der Seite hinzugefügt werden, wenn der Filter mit den Kriterien übereinstimmt, die vom Entwickler festgelegt wurden. Beachten Sie auch, dass der Code in der `Page_Load`-Methode die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29>-Methode aufruft, um zu bestimmen, ob die einzelnen Steuerelemente autorisiert sind. wenn dies der Fall ist, wird die <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>-Eigenschaft jedes Steuer Elements festgelegt.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Beachten Sie, dass Sie, damit das Codebeispiel funktioniert, eine Einstellung in der Datei "Web. config" hinzufügen müssen, um das Exportieren Webparts Beschreibungsdateien zu ermöglichen. Stellen Sie sicher, dass Sie über eine Web. config-Datei im gleichen Verzeichnis wie die Webseite für dieses Codebeispiel verfügen. Stellen Sie im `<system.web>` Abschnitt sicher, dass ein `<webParts>`-Element vorhanden ist, bei dem ein `enableExport`-Attribut auf `true`festgelegt ist, wie im folgenden Markup.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Nachdem Sie die Seite in einem Browser geladen haben, beachten Sie, dass das erste Steuerelement angezeigt wird, da es mit den Kriterien in der überschriebenen-Methode übereinstimmt. Das zweite Steuerelement wird der Seite nicht hinzugefügt, da es vom Filter ausgeschlossen wird. Das dritte Steuerelement wird ebenfalls hinzugefügt, da die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft nicht festgelegt ist. Beachten Sie, dass Sie, wenn Sie auf das verbenmenüsymbol in der Titelleiste eines der beiden Steuerelemente klicken, beide exportieren können, da ihre jeweiligen <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> Eigenschaftswerte zugewiesen wurden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> ist <see langword="null" />.</exception>
        <block subset="none" type="usage"><para>Diese Methode wird direkt aus dem Code aufgerufen. Wenn Sie eine bessere programmgesteuerte Kontrolle über den Autorisierungs Prozess erhalten möchten, können Sie die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" /> Überladungs Methode überschreiben.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAuthorized(class System.Type type, string path, string authorizationFilter, bool isShared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAuthorized(Type ^ type, System::String ^ path, System::String ^ authorizationFilter, bool isShared);" />
      <MemberSignature Language="F#" Value="abstract member IsAuthorized : Type * string * string * bool -&gt; bool&#xA;override this.IsAuthorized : Type * string * string * bool -&gt; bool" Usage="webPartManager.IsAuthorized (type, path, authorizationFilter, isShared)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="authorizationFilter" Type="System.String" />
        <Parameter Name="isShared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Der <see cref="T:System.Type" /> des Steuerelements, das auf die entsprechende Autorisierung überprüft wird.</param>
        <param name="path">Der relative Anwendungspfad zur Quelldatei des Steuerelements, das autorisiert wird, sofern das Steuerelement ein Benutzersteuerelement ist.</param>
        <param name="authorizationFilter">Der <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />-Eigenschaft des <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements wird ein beliebiger Zeichenfolgenwert zugewiesen, der verwendet wird, um zu prüfen, ob für ein Steuerelement eine Autorisierung vorhanden ist und es einer Seite hinzugefügt werden darf.</param>
        <param name="isShared">Gibt an, ob das zur Autorisierung überprüfte Steuerelement freigegeben ist, d. h., ob es für alle Benutzer einer Anwendung sichtbar ist und ob dessen <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />-Eigenschaftswert auf <see langword="true" /> festgelegt ist.</param>
        <summary>Führt die letzten Schritte des Prozesses aus, mit dem bestimmt wird, ob für das Steuerelement eine Autorisierung vorhanden ist und es einer Seite hinzugefügt werden darf.</summary>
        <returns>Ein boolescher Wert, der angibt, ob für ein Steuerelement eine Autorisierung vorhanden ist und es einer Seite hinzugefügt werden darf.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Überladungs Methode führt die abschließenden Schritte aus, um zu bestimmen, ob ein Steuerelement autorisiert ist, einer Seite hinzugefügt zu werden. Die-Methode stellt sicher, dass `type` ein gültiger-Typ ist und dass `path` nur dann einen Wert aufweist, wenn das zu überprüfende Steuerelement ein Benutzer Steuerelement ist. Anschließend wird die Critical <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>-Methode aufgerufen, die das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>-Ereignis auslöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode überschrieben wird, um zu bestimmen, ob ein Steuerelement autorisiert ist, einer Seite hinzugefügt zu werden.  
  
 Der erste Schritt besteht darin, einen Filter zu erstellen, der ein Steuerelement potenziell ausschließen kann. Die folgende Webseite enthält drei ASP.NET-Server Steuerelemente in einem `<asp:webpartzone>`-Element. Beachten Sie, dass für das erste und das zweite Steuerelement die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaften auf unterschiedliche Werte festgelegt sind und die dritte die-Eigenschaft nicht zuweist. Dieser Autorisierungs Wert kann zur Laufzeit geprüft werden, und das Steuerelement kann der Seite hinzugefügt werden, wenn der Filter mit den Kriterien übereinstimmt, die vom Entwickler festgelegt wurden.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 Der zweite Schritt besteht darin, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>-Methode zu überschreiben und benutzerdefinierte Behandlung für Autorisierungs Filter zu erstellen. Beachten Sie, dass der Code zuerst überprüft, ob die Eigenschaft über einen Wert verfügt, sodass alle Steuerelemente, die die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft nicht zuweisen, automatisch hinzugefügt werden. Wenn ein Steuerelement über einen Filter verfügt, gibt der Code `true` nur dann zurück, wenn der Filter Wert gleich `admin`ist. Dies veranschaulicht einen einfachen Mechanismus, den Sie verwenden können, um bestimmte Steuerelemente abhängig von ihrer Rolle für bestimmte Benutzer anzuzeigen. Obwohl ein vollständiges Beispiel mit Rollen über den Rahmen dieses Themas hinausgeht, können Sie die gleiche Logik wie die überschriebene Methode in diesem Codebeispiel verwenden, mit der Ausnahme, dass Sie überprüfen können, ob der aktuelle Benutzer eine Rolle hat, die mit dem Autorisierungs Filter Wert übereinstimmt. , und fügen Sie dann das Steuerelement nur für diesen Benutzer hinzu. Auf diese Weise können Sie Seiten erstellen, bei denen einigen Benutzern alle Steuerelemente angezeigt werden, und anderen Benutzern werden nur ausgewählte Steuerelemente angezeigt. Auf diese Weise kann die Logik, mit der der Filter überprüft wird, aussehen, wenn Sie Rollen verwendet haben:  
  
```vb  
If Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  
  return True  
Else  
  return False  
End If  
```  
  
```csharp  
if(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  
    return true;  
else  
    return false;  
```  
  
 Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird die dynamische Kompilierungs Methode verwendet. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, beachten Sie, dass das erste Steuerelement angezeigt wird, da es mit den Kriterien in der überschriebenen-Methode übereinstimmt. Das zweite Steuerelement wird der Seite nicht hinzugefügt, da der Filter Wert ausgeschlossen wird. Das dritte Steuerelement wird hinzugefügt, da dessen <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft nicht festgelegt ist. Wenn Sie den Eigenschafts Wert für das zweite Steuerelement ändern, sodass er mit dem des ersten Steuer Elements identisch ist, und dann die Seite erneut ausführen, wird das zweite Steuerelement ebenfalls hinzugefügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="type" /> ist ein Benutzersteuerelement, und <paramref name="path" /> ist entweder <see langword="null" /> oder eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="type" /> ist kein Benutzersteuerelement, und <paramref name="path" /> ist ein Wert zugewiesen.</exception>
        <block subset="none" type="overrides"><para>Diese Methode kann überschrieben werden, indem Sie von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse erbt, wenn Sie beim Überprüfen der Autorisierung zusätzliche Behandlung bereitstellen möchten. Möglicherweise möchten Sie die-Methode überschreiben, um bestimmte Werte im <paramref name="authorizationFilter" />-Parameter zu überprüfen. basierend auf dem-Wert geben Sie einen booleschen Wert zurück, der bestimmt, ob das Steuerelement einer Seite hinzugefügt wird.  
  
Für Seiten Entwickler, die auch nach Autorisierungs Filtern suchen und benutzerdefinierte Behandlung bereitstellen möchten, gibt es eine Option, um dies Inline auf einer ASPX-Seite oder in einer Code Behind-Datei durchführen zu können, ohne von Klassen erben zu müssen. Sie können einen alternativen Ereignishandler auf der Seite für die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />-Methode des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Steuer Elements deklarieren. Weitere Informationen und ein Beispiel finden Sie in der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />-Methode.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="IsCustomPersonalizationStateDirty">
      <MemberSignature Language="C#" Value="protected virtual bool IsCustomPersonalizationStateDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsCustomPersonalizationStateDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsCustomPersonalizationStateDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPersonalizationStateDirty : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Personalisierungsänderungen vorgenommen wurden, die Personalisierungsdetails auf der Seitenebene betreffen, die durch das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement gesteuert werden.</summary>
        <value>Ein boolescher Wert, der angibt, ob Personalisierungsänderungen vorgenommen wurden. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>-Eigenschaft intern, um zu verfolgen, ob sich die von ihm verwalteten Personalisierungs Daten auf Seitenebene geändert haben. Die Personalisierungs Daten ändern sich, wenn Benutzer verschiedene Personalisierungs Aktionen auf Seitenebene durchführen, z. b. das Hinzufügen oder Entfernen von <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen, das Verbinden oder Trennen von Steuerelementen, das Ändern des Seitenlayouts durch Verschieben von Steuerelementen und anderen Aktionen.  
  
> [!NOTE]
>  Benutzer können die Personalisierung auch auf der Steuerelement Ebene durchführen. Dies bedeutet, dass Sie Personalisierungs Änderungen an einem bestimmten Steuerelement vornehmen und die Änderungen nur dieses Steuerelement betreffen. Ein Beispiel wäre, das Steuerelement zu bearbeiten und den Titeltext oder seine Hintergrundfarbe zu ändern. Die Personalisierung auf Steuerelement Ebene wirkt sich nicht auf die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verfolgten Personalisierungs Daten auf Seitenebene aus, sodass der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>-Eigenschafts Wert nicht in `true` geändert wird, wenn die Personalisierung auf Steuerungsebene erfolgt.  
  
 Obwohl die-Methode geschützt ist und nicht direkt von einem Aufrufer darauf zugegriffen werden kann, kann auf die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>-Eigenschaft direkt von Aufrufern zugegriffen werden, und der Wert dieser Eigenschaft wird zurückgegeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsDirty" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetDirty" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="webPartManager.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Enthält die gespeicherten Zustandsdaten, die geladen werden sollen.</param>
        <summary>Lädt Daten zum Steuerelementzustand, die bei einer vorherigen Seitenanforderung gespeichert wurden und bei einer nachfolgenden Anforderung wiederhergestellt werden müssen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>-Methode ist hilfreich beim Wiederherstellen von Eigenschaften Daten, die über Postbacks einer Seite beibehalten werden sollen, selbst wenn die Eigenschaft <xref:System.Web.UI.Control.EnableViewState%2A> auf `false`festgelegt ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> ist kein gültiger <see cref="P:System.Web.UI.PageStatePersister.ControlState" />.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.LoadCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, das die zu ladenden Zustandsdaten enthält.</param>
        <summary>Speichert die benutzerdefinierten Personalisierungsdaten, die zur späteren Verwendung im Initialisierungsprozess von den Personalisierungsobjekten an das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement übergeben wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A>-Methode stellt gespeicherte Zustandsdaten in Form eines <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Objekts bereit. Diese Daten werden schließlich zum Laden von Personalisierungs Daten in die Webparts-Steuerelemente und zum Ausführen weiterer Initialisierungs Aufgaben verwendet.  
  
> [!NOTE]
>  Diese Methode wird von einer Sequenz von Methoden aufgerufen, die beginnt, wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>-Methode anfänglich das zugeordnete <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Objekt anfordert, Personalisierungs Daten für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement bereitzustellen.  
  
 Diese Methode kann nicht direkt aus dem Code aufgerufen werden. Sie können jedoch direkt die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>-Methode aufrufen, die selbst die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A>-Methode aufruft und die Personalisierungs Daten zurückgibt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />-Methode in einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse überschreiben.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="MediumPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MediumPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MediumPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MediumPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MediumPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MediumPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Security.PermissionSet" />-Objekt ab, das nur die <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />-Berechtigung und die <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />-Berechtigung gewährt.</summary>
        <value>Ein <see cref="T:System.Security.PermissionSet" />-Objekt, das nur die <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />-Berechtigung und die <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />-Berechtigung gewährt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Security.PermissionSet> Objekt, das von dieser Eigenschaft zurückgegeben wird, wird während des Imports für die typdeserialisierung verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimalPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MinimalPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MinimalPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MinimalPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimalPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Security.PermissionSet" />-Objekt ab, das nur die <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />-Berechtigung und die <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />-Berechtigung gewährt.</summary>
        <value>Ruft ein <see cref="T:System.Security.PermissionSet" />-Objekt ab, das nur die <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />-Berechtigung und die <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />-Berechtigung gewährt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Security.PermissionSet> Objekt, das von dieser Eigenschaft zurückgegeben wird, wird während des Imports für alles außer der typdeserialisierung verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWebPart">
      <MemberSignature Language="C#" Value="public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="abstract member MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit&#xA;override this.MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit" Usage="webPartManager.MoveWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Der <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> oder ein anderes Serversteuerelement, das verschoben wird.</param>
        <param name="zone">Die Ziel-<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />, in die <paramref name="webPart" /> verschoben wird.</param>
        <param name="zoneIndex">Eine ganze Zahl, die den Index von <paramref name="webPart" /> im Verhältnis zu anderen Steuerelementen innerhalb von <paramref name="zone" /> angibt.</param>
        <summary>Verschiebt ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein Serversteuerelement aus einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone in eine andere Zone oder an eine neue Position innerhalb derselben Zone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwendet die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>-Methode, um `webPart` an einen neuen Speicherort in derselben Zone oder in einer anderen Zone zu verschieben. Sie können diese Methode direkt aus dem Code aufrufen, und Sie wird auch aufgerufen, wenn ein Benutzer ein Steuerelement mithilfe verschiedener Optionen in der Webparts-Benutzeroberfläche (UI) an eine neue Position verschiebt.  
  
 Eine Reihe von Bedingungen müssen erfüllt sein, bevor `webPart` verschoben werden können, und die meisten sind durch Elemente angegeben, die im Abschnitt "Ausnahmen" dieses Themas aufgelistet sind. Wenn `webPart` nicht in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone enthalten war, die mit beginnt, kann Sie nicht in eine Zone verschoben werden.  
  
 Nachdem die Bedingungen erfüllt sind, wird die folgende Sequenz von Aktionen ausgeführt, um `webPart`zu verschieben:  
  
1.  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>-Ereignis aus.  
  
2.  `webPart` wird aus der aktuellen Zone entfernt (falls erforderlich) und der neuen Zone oder neuen Position in der aktuellen Zone hinzugefügt.  
  
3.  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>-Ereignis aus.  
  
4.  Die `zoneIndex` jedes <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuer Elements in der Ursprungs-und der Zielzone werden zurückgesetzt, um das verschoderte Steuerelement widerzuspiegeln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>-Methode direkt aus dem Code aufgerufen wird, um ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement aus einer Zone in eine andere zu verschieben.  
  
 Das Codebeispiel besteht aus drei Teilen:  
  
-   Ein Benutzer Steuerelement zum Ändern der Anzeigemodi.  
  
-   Eine Webseite zum Hosten der Steuerelemente.  
  
-   Eine Erläuterung der Art und Weise, wie das Codebeispiel ausgeführt wird.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Weitere Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Beispiels ist eine Webseite, die zwei Zonen enthält, die jeweils zwei Server Steuerelemente enthalten. Wenn ein Benutzer auf die Schaltfläche **Webpart verschieben** auf der Seite klickt, verschiebt der Code in der `Button1_Click`-Methode ein Steuerelement von der ersten Zone an eine neue Position in der zweiten Zone. Beachten Sie, dass der Code First die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>-Methode aufrufen muss, um das <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt abzurufen, das das `list1` Steuerelement umschließt. Dies ist erforderlich, da der erste Parameter der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>-Methode ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement erfordert, während `list1` ein ASP.NET-Server Steuerelement ist.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/CS/MoveWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/VB/MoveWebPartVB.aspx#1)]  
  
 Nachdem die Seite geladen wurde, klicken Sie auf die Schaltfläche **Webpart verschieben** , und beachten Sie, dass das Steuerelement, das die Links enthält, an die mittlere Position in der zweiten Zone verschoben wird. Diese Bewegung des Steuer Elements wird Programm gesteuert durch Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>-Methode erreicht. Sie können auch das Dropdown Listen-Steuerelement **Anzeigemodus** verwenden, um die Seite in den Entwurfs Modus zu wechseln, und Sie können die Steuerelemente im Entwurfs Modus in verschiedene Zonen oder verschiedene Positionen innerhalb Ihrer Zonen ziehen. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>-Methode wird auch vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement aufgerufen, um solche vom Benutzer initiierten Verschiebungen zu verarbeiten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> ist in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />-Auflistung des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements nicht enthalten.  
  
- oder - 
 <paramref name="zone" /> ist in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />-Auflistung des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements nicht enthalten.  
  
- oder - 
Die Zone, auf die die <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" />-Eigenschaft des <paramref name="webPart" />-Steuerelements verweist, lautet <see langword="null" />. Dies bedeutet, dass <paramref name="webPart" /> derzeit in keiner Zone enthalten ist.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> oder <paramref name="zone" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="zoneIndex" /> ist kleiner als Null.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizeWebPart(class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizeWebPart (e As WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizeWebPart(System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit&#xA;override this.OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit" Usage="webPartManager.OnAuthorizeWebPart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />-Ereignis aus und ruft, falls vorhanden, einen Handler für das Ereignis auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>-Methode wird von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode aufgerufen, wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement auf die Autorisierung geprüft wird, die einer Seite hinzugefügt werden soll. Wenn die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>-Methode aufgerufen wird, löst Sie das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>-Ereignis aus, und wenn eine Handlermethode für das-Ereignis vorhanden ist, ruft Sie den-Handler auf.  
  
 Der Prozess der Autorisierungs <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente ist ein wichtiges Webparts Feature. Jedes <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Server Steuerelement, das einer Zone durch das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement hinzugefügt wird, durchläuft einen Autorisierungs Prozess, um zu bestimmen, ob das Steuerelement hinzugefügt werden kann Standardmäßig stellt der Webparts-Steuerelement Satz keine Filterkriterien bereit, um zu verhindern, dass Steuerelemente einer Zone hinzugefügt werden. Der Steuersatz bietet jedoch die Mechanismen, die für Entwickler erforderlich sind, um Ihre eigenen Filterkriterien zu erstellen. Mit diesen Mechanismen können Sie benutzerdefinierte Filter Szenarios erstellen. Sie könnten z. b. einen Filter erstellen, damit, wenn ein Benutzer in einer Administrator Rolle ist, bestimmte Steuerelemente einer Zone hinzugefügt werden, wenn die Seite gerendert wird, und wenn sich der Benutzer in einer Benutzerrolle befindet, werden diese Steuerelemente nicht hinzugefügt.  
  
 Die Mechanismen zum Filtern von Steuerelementen während des Autorisierungs Prozesses sind die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft auf <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-und <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>-Methoden sowie das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>-Ereignis auf dem <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement.  
  
 Zum Erstellen eines Filter Szenarios gibt es im Wesentlichen zwei Aufgaben. Zuerst weisen Sie der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft der einzelnen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die Sie filtern möchten, Zeichen folgen zu. Diese Zeichen folgen Werte können beliebig sein, aber Sie sollten die Kriterien enthalten, nach denen Sie filtern möchten. Wenn Sie z. b. möchten, dass ein bestimmtes Steuerelement nur einer Zone hinzugefügt wird, wenn ein Administrator Benutzer die Seite zeigt, können Sie der Eigenschaft einen Zeichen folgen Wert von `admin` zuweisen. Anschließend können Sie die Funktion "ASP.NET Rollen" verwenden und alle Benutzer Ihrer Website verschiedenen Rollen wie "Administrator", "Manager" und "Benutzer" hinzufügen. Wenn eine Seite geladen wird, überprüft der Filter Code, welche Rolle ein Benutzer hat, vergleicht sie mit dem Autorisierungs Filter Wert für ein Steuerelement, das überprüft wird, und wenn (z. b.) der Benutzer in einer Administrator Rolle ist und Sie den <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Wert des Steuer Elements auf festlegen `admin`kann das Steuerelement hinzugefügt werden.  
  
 Der zweite Schritt beim Erstellen eines Filter Szenarios ist das Schreiben von Code, um die <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftswerte auf <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen zu überprüfen und zu bestimmen, ob die einzelnen Steuerelemente autorisiert sind, bevor Sie der Zone hinzugefügt werden. Es gibt zwei Möglichkeiten, um diesen Filterungs Code zu platzieren. Die erste Option ist die bevorzugte Option für Seiten Entwickler. Sie können eine Methode zum Behandeln des <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Ereignisses direkt im Skriptcode des Webseiten Servers oder in einer Code Trennungs Datei erstellen. Ordnen Sie die Methode dem Ereignis zu, indem Sie das `OnAuthorizeWebPart`-Attribut zum-Tag für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement auf der Seite hinzufügen, wie im folgenden Beispiel Markup Code gezeigt.  
  
```  
<asp:webpartmanager id="manager1" runat="server"   
   OnAuthorizeWebPart="manager1_AuthorizeWebPart" />  
```  
  
 Die gesamte benutzerdefinierte Methode muss jedes <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement auf die Filterkriterien überprüfen und dann basierend auf den Ergebnissen einen booleschen Wert für die <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>-Objekts zuweisen, um anzugeben, ob das <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement hinzugefügt werden kann. Der Code im Beispiel Abschnitt veranschaulicht, wie dies zu tun ist.  
  
 Die zweite Möglichkeit zum Platzieren des Filter Codes besteht darin, von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse zu erben und eine-Methode zu überschreiben, um die Filterkriterien zu überprüfen. Die folgenden beiden Methoden können Sie überschreiben, indem Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType>-Methode oder die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>-Methode verwenden. Obwohl jede Methode funktionieren würde, empfiehlt es sich in den meisten Fällen, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode zu überschreiben, da Sie eine umfassendere Kontrolle über den gesamten Autorisierungs Prozess bietet, während die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>-Methode nur eine bestimmte Aufgabe durchführt. Rufen Sie das-Ereignis auf, und suchen Sie nach einem Handler. Ein Codebeispiel für eine benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse, die die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>-Methode überschreibt, finden Sie in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType>-Überladung der-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein benutzerdefinierter Ereignishandler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>-Ereignis festgelegt wird, damit der Handler benutzerdefinierten Filter Code für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>-Methode bereitstellen kann. Dieses Beispiel ist eine typische Methode, mit der ein Seiten Entwickler ein Filter Szenario und die Autorisierung von <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelementen bereitstellen kann, die zu einer Seite hinzugefügt werden sollen.  
  
 Beachten Sie auf der Webseite, dass das `<asp:webpartmanager>`-Element über das `OnAuthorizeWebPart`-Attribut mit dem Namen des ihm zugewiesenen Ereignis Handlers verfügt. Die-Methode überprüft, ob für die Steuerelemente auf der Seite die entsprechenden <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Eigenschaftswerte auf `admin` festgelegt sind. wenn dies der Fall ist, wird `true`zurückgegeben, was bedeutet, dass Sie autorisiert und der Seite hinzugefügt werden.  
  
> [!NOTE]
>  Beachten Sie, dass Steuerelemente, denen kein Wert zugewiesen ist, der <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>-Eigenschaft zugewiesen ist, ebenfalls hinzugefügt werden, da davon ausgegangen wird, dass Sie nicht Teil eines Filter Szenarios sind. Dies wäre eine gängige Vorgehensweise bei einem Filter Szenario: einige Steuerelemente würden gefiltert werden, andere hingegen nicht, da Sie vermutlich für alle Benutzer verfügbar sind.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 Da das Einrichten von Benutzern in Rollen den Rahmen dieses Themas sprengen würde, überprüft dieses Codebeispiel nicht die Benutzer Rollen in der Filterung. Allerdings ist das Szenario der Filterung von Steuerelementen gemäß Benutzer Rollen wahrscheinlich einer der gängigsten Verwendungsmöglichkeiten dieses Filter Features. Wenn Sie überrollen auf Ihrer Website verfügen und Benutzer Rollen in dieser Methode überprüfen möchten, um Steuerelemente zu filtern, ähnelt die Methode dem folgenden Codeblock (im Gegensatz zum einfacheren Ansatz im vorangehenden Codebeispiel, in dem keine Rollen verwendet werden).  
  
```vb  
Protected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  
  As Object, ByVal e As WebPartAuthorizationEventArgs)  
  
  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  
    If Roles.IsUserInRole(Page.User.Identity.Name, _  
      e.AuthorizationFilter) Then  
  
      e.IsAuthorized = True  
    Else  
      e.IsAuthorized = False  
    End If  
  End If  
  
End Sub  
```  
  
```csharp  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivated : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivated : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />-Ereignis aus, das anzeigt, dass eine Seite und ihre Steuerelemente geladen sind und dass die Verbindungen auf der Seite aktiviert wurden, um mit dem Austausch von Daten zu beginnen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>-Ereignis aus, nachdem eine Seite den Ladevorgang abgeschlossen hat. Die-Methode bietet eine Möglichkeit, einen Handler für das-Ereignis hinzuzufügen.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis hinzufügen, indem Sie dem `<asp:webpartmanager>`-Element einer Seite ein `OnConnectionsActivated`-Attribut hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />-Methode in einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse überschreiben.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivating">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivating (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivating(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivating (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivating(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivating : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivating : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />-Ereignis aus, das anzeigt, dass eine Seite und ihre Steuerelemente geladen wurden und dass mit dem Aktivieren von Verbindungen begonnen werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>-Ereignis aus, das Entwicklern einen Mechanismus zur programmgesteuerten Anpassung des Vorgangs zum Aktivieren von Verbindungen ermöglicht.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis hinzufügen, indem Sie dem `<asp:webpartmanager>`-Element einer Seite ein `OnConnectionsActivating`-Attribut hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />-Methode in einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse überschreiben.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />-Objekt, das Ereignisdaten enthält, die einem geänderten Anzeigemodus zugeordnet sind.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />-Ereignis aus, um anzuzeigen, dass das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement auf einer Webseite den Prozess des Umschaltens von einem Anzeigemodus in einen anderen abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>-Methode im Basis Formular löst einfach das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>-Ereignis aus.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />-Methode überschreiben. Beispielsweise können Sie nach einer Änderung des Anzeigemodus etwas in der Darstellung der Benutzeroberfläche (UI) ändern, je nachdem, welcher Anzeigemodus in der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.OldDisplayMode" />-Eigenschaft enthalten ist. Möglicherweise möchten Sie auch bestimmte Inhalte ausblenden oder ein bestimmtes Steuerelement anzeigen.  
  
Wenn Sie die-Methode überschreiben, sollten Sie normalerweise die Basis Methode als letzten Schritt der überschriebenen-Methode aufzurufen, sodass der benutzerdefinierte Code zuerst ausgeführt wird und das-Ereignis zuletzt ausgelöst wird. Dies deutet darauf hin, dass die Modusänderung beendet ist.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanging(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanging (e As WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanging(System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das Ereignisdaten enthält, die einem sich ändernden Anzeigemodus zugeordnet sind.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />-Ereignis aus, um anzuzeigen, dass das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement auf einer Webseite gerade von einem Anzeigemodus in einen anderen umgeschaltet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>-Methode im Basis Formular löst einfach das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>-Ereignis aus.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />-Methode überschreiben. Wenn sich beispielsweise der Anzeigemodus ändert, können Sie den neuen Anzeigemodus überprüfen (mithilfe der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode" />-Eigenschaft) und in der Benutzeroberfläche (UI) etwas ändern, je nachdem, was der neue Anzeigemodus sein wird. Wenn Sie einen benutzerdefinierten Anzeigemodus hatten, können Sie bestimmte Steuerelemente sichtbar machen, wenn der benutzerdefinierte Modus der neue Anzeigemodus ist.  
  
Wenn Sie diese Methode überschreiben, sollten Sie normalerweise die-Basis Methode als ersten Schritt der überschriebenen-Methode aufrufen, damit das-Ereignis ausgelöst wird, um anzugeben, dass der Anzeigemodus geändert wird. Anschließend kann der benutzerdefinierte Codeänderungen an der Benutzeroberfläche vornehmen, bevor der neue Anzeigemodus tatsächlich angezeigt wird.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus, das das erste Ereignis im Lebenszyklus des <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A>-Methode ruft die Basis Methode auf, die das <xref:System.Web.UI.Control.Init>-Ereignis für das-Steuerelement auslöst, und führt dann mehrere Vorbereitungsschritte aus, wie z. b. sicherzustellen, dass es nur eine Instanz des <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuer Elements auf einer Seite gibt und Personalisierungs Daten geladen werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist ein weiteres <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement auf der Seite vorhanden.</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="webPartManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus, das unmittelbar vor der Wiedergabe eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelements auf einer Webseite eintritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender%2A>-Methode ruft die Basis Methode auf, die das <xref:System.Web.UI.Control.PreRender>-Ereignis für das-Steuerelement auslöst, und registriert dann mehrere Client Skripts, die auf Seiten benötigt werden, die Webparts-Steuerelemente enthalten.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanged(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanged (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanged(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />-Ereignis aus, das eintritt, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement entweder neu ausgewählt wurde oder seine Auswahl aufgehoben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>-Ereignis aus, bei dem es sich in der Regel um einen Zeitpunkt handelt, in dem ein Entwickler das Aussehen der Benutzeroberfläche (UI) ändern möchte. Wenn z. b. ein neues <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement ausgewählt ist, ändert das Webparts Steuerelement das Rendering des neu ausgewählten Steuer Elements. Nachdem die Auswahl eines Steuer Elements gelöscht wurde, wird das Rendering an den normalen Wert zurückgegeben.  
  
 Nachdem ein Benutzer ein bestimmtes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement für die Bearbeitung ausgewählt hat, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>-Methode aufgerufen. Wenn der Benutzer die Bearbeitung des Steuer Elements abgeschlossen und ihn schließt, wobei das Ergebnis, dass die Auswahl des Steuer Elements deaktiviert ist, wird die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>-Methode erneut aufgerufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Es gibt mehrere Optionen, die sich auf das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> Ereignis beziehen, damit Entwickler das Rendering anpassen können, das nach dem Ändern des ausgewählten Steuer Elements auftritt. In deklarativem Code können Sie im <see langword="&lt;asp:webpartmanager&gt;" />-Element das <see langword="OnSelectedWebPartChanged" />-Attribut festlegen und ihm den Namen einer benutzerdefinierten Methode zuweisen. In der benutzerdefinierten Methode können Sie das Rendering der ausgewählten Steuerelemente ändern, wenn das Ereignis eintritt. Eine andere Möglichkeit besteht darin, von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse zu erben und die-Methode zu überschreiben. Eine dritte Möglichkeit ist das Anpassen des Renderings auf Zonenebene. Beispielsweise können Sie von der <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />-Klasse erben und deren <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />-Methode überschreiben, um das Rendering von Steuerelementen anzupassen, die während des Bearbeitungsvorgangs ausgewählt und gelöscht wurden.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanging(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanging (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanging(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />-Ereignis aus, das während des Prozesses eintritt, bei dem das derzeit ausgewählte <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>-Ereignis aus, das auftritt, wenn Sie das derzeit ausgewählte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement ändern.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwendet diese Methode und das zugehörige-Ereignis, um die Möglichkeit zu bieten, einen Prozess abzubrechen, in dem sich das ausgewählte Steuerelement ändert. Beispielsweise wird die-Methode innerhalb der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>-Methode und auch innerhalb der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>-Methode aufgerufen, um eine Möglichkeit bereitzustellen, den Prozess abzubrechen. Wenn ein Benutzer auf das Cancel-Verb in einem Steuerelement klickt, das bearbeitet wird, ist das Steuerelement nicht mehr ausgewählt, und alle Bearbeitungs Änderungen werden nicht gespeichert, da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>-Methode es ermöglicht, die Bearbeitungs Änderungen abzubrechen.  
  
> [!NOTE]
>  Die-Methode wird auf ähnliche Weise während der Methoden aufgerufen, die den Prozess der Verbindung eines <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuer Elements mit einem anderen Steuerelement starten und beenden, um das Abbrechen des Vorgangs zu ermöglichen.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Ereignis erstellen, indem Sie das `OnSelectedWebPartChanging`-Attribut dem `<asp:webpartmanager>`-Element in deklarativem Seiten Markup hinzufügen und dem-Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="webPartManager.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ereignisdaten, die dem Löschvorgang des Steuerelements zugeordnet sind.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Unload" />-Basisereignis aus und löscht die <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Instanz von einer Webseite.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdded(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdded (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdded(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />-Ereignis aus, das eintritt, nachdem einer Seite ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement hinzugefügt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>-Methode wird aufgerufen, während ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (oder ein anderes Server Steuerelement, das einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone hinzugefügt wird) einer Seite hinzugefügt wird.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>-Ereignis erstellen, indem Sie das `OnWebPartAdded`-Attribut dem `<asp:webpartmanager>`-Element hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdding">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdding(class System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdding (e As WebPartAddingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdding(System::Web::UI::WebControls::WebParts::WebPartAddingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit&#xA;override this.OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />-Ereignis aus, das eintritt, während einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Zone ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Steuerelement (oder ein Server- bzw. Benutzersteuerelement) hinzugefügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>-Ereignis aus, um anzugeben, dass gerade ein Steuerelement hinzugefügt wird. Die-Methode bietet auch die Option, den hinzugefügten Prozess abzubrechen. Wenn das Steuerelement erfolgreich hinzugefügt wurde, folgt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>-Ereignis.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das zugehörige Ereignis bereitstellen, indem Sie das `OnWebPartAdding`-Attribut zum `<asp:webpartmanager>`-Element auf einer Webseite hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler, die abgeleitete <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen erstellen, können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />-Methode überschreiben, um die Ereignis Behandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosed(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosed (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosed(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />-Ereignis aus, um anzuzeigen, dass ein Steuerelement von einer Seite entfernt worden ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>-Ereignis aus, um anzugeben, dass ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement (oder ein anderes Server-oder Benutzer Steuerelement) auf einer Seite erfolgreich geschlossen wurde.  
  
 Um ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement zu schließen, bedeutet dies, dass es von einer Seite entfernt werden soll, sodass es nicht gerendert wird, und es auch in einem speziellen Objekt mit dem Namen Page Catalog ablegen soll. Ein Seiten Katalog, der dem <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>-Steuerelement entspricht, verwaltet Verweise auf geschlossene <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente für jede Seite. Wenn ein <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>-Steuerelement auf einer Seite innerhalb einer <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone deklariert ist, können Benutzer die Seite in den Katalog Anzeigemodus wechseln und der Seite alle zuvor geschlossenen Steuerelemente wieder hinzufügen.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>-Methode bietet Entwicklern die Möglichkeit, einen benutzerdefinierten Handler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>-Ereignis zu erstellen. Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis hinzufügen, indem Sie dem `<asp:webpartmanager>`-Element einer Seite ein `OnWebPartClosed`-Attribut hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen. Eine nützliche Aufgabe, die ein Entwickler in dieser Methode ausführen könnte, besteht darin, einen Platzhalter anstelle des geschlossenen Steuer Elements anzuzeigen, vollständig mit einer QuickInfo, die Benutzer darüber informiert, wie das Steuerelement wieder der Seite hinzugefügt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosing(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosing (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosing(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />-Ereignis aus, das eintritt, während ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein Serversteuerelement von einer Seite entfernt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>-Ereignis aus, um anzugeben, dass ein Steuerelement gerade geschlossen oder von einer Seite entfernt wird. Die-Methode bietet auch die Option, den schließenden Prozess abzubrechen. Wenn das Steuerelement erfolgreich von der Seite entfernt wird, folgt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>-Ereignis.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das zugehörige Ereignis bereitstellen, indem Sie das `OnWebPartClosing`-Attribut zum `<asp:webpartmanager>`-Element auf einer Webseite hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler, die abgeleitete <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen erstellen, können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />-Methode überschreiben, um die Ereignis Behandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleted(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleted (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleted(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />-Ereignis aus, das eintritt, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement unwiderruflich von einer Seite gelöscht wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>-Methode wird aufgerufen, wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement (oder ein anderes Server Steuerelement, das einer <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zone hinzugefügt wird) von einer Seite gelöscht wird.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>-Ereignis erstellen, indem Sie das `OnWebPartDeleted`-Attribut dem `<asp:webpartmanager>`-Element hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleting(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleting (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleting(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />-Ereignis aus, das anzeigt, dass gerade ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder ein Server- bzw. Benutzersteuerelement in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone) gelöscht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nur dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente können gelöscht werden, und wenn ein Steuerelement gelöscht wird, wird die Steuerelement Instanz dauerhaft von einer Seite entfernt und kann nicht wieder hergestellt werden. Dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente sind solche, die Programm gesteuert oder aus einem Webparts Katalog hinzugefügt werden, im Gegensatz zu statischen Steuerelementen, die im Markup einer Webseite deklariert werden.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>-Ereignis aus, um anzugeben, dass ein Steuerelement dauerhaft aus seiner Zone gelöscht wird. Die-Methode bietet auch die Möglichkeit, den Löschvorgang abzubrechen. Wenn das Steuerelement erfolgreich von der Seite gelöscht wird, folgt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>-Ereignis.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das zugehörige Ereignis bereitstellen, indem Sie das `OnWebPartDeleting`-Attribut zum `<asp:webpartmanager>`-Element auf einer Webseite hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler, die abgeleitete <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen erstellen, können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />-Methode überschreiben, um die Ereignis Behandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoved(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoved (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoved(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />-Ereignis aus, das eintritt, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement an eine andere Position auf einer Seite verschoben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>-Ereignis am Ende der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>-Methode aus, wodurch sichergestellt wird, dass der Prozess zum Verschieben eines Steuer Elements abgeschlossen ist, bevor Code im-Ereignishandler ausgeführt wird.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>-Ereignis wird ausgelöst, wenn ein-Steuerelement in der aktuellen Zone oder in eine andere Zone verschoben wird. dabei spielt es keine Rolle, ob die Bewegung Programm gesteuert oder durch einen Benutzer, der das Steuerelement zieht, durchgeführt wird.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>-Ereignis erstellen, indem Sie das `OnWebPartMoved`-Attribut dem `<asp:webpartmanager>`-Element hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoving(class System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoving (e As WebPartMovingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoving(System::Web::UI::WebControls::WebParts::WebPartMovingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit&#xA;override this.OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />-Ereignis aus, das anzeigt, dass gerade ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder ein Server- bzw. Benutzersteuerelement in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>-Ereignis aus, das auftritt, wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein anderes Server Steuerelement innerhalb seiner Zone oder in eine andere Zone verschoben wird. Die-Methode bietet auch die Möglichkeit, den Verschiebungs Prozess abzubrechen. Wenn der Verschiebe Vorgang erfolgreich abgeschlossen wurde, folgt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>-Ereignis.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das zugehörige Ereignis bereitstellen, indem Sie das `OnWebPartMoving`-Attribut zum `<asp:webpartmanager>`-Element auf einer Webseite hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler, die abgeleitete <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen erstellen, können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />-Methode überschreiben, um die Ereignis Behandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />-Ereignis aus, das auftritt, nachdem eine Verbindung zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>-Methode löst das zugehörige-Ereignis am Ende der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>-Methode aus, wodurch sichergestellt wird, dass die zum Verbinden von zwei-Steuerelementen erforderlichen Schritte abgeschlossen sind, bevor Code im-Ereignishandler ausgeführt wird.  
  
 Die-Methode bietet programmgesteuerte Kontrolle über den Prozess der Verbindungs Erstellung, und das zugehörige Ereignis ist ein bequemer Punkt, an dem die Benutzeroberfläche aktualisiert oder ein Benutzer benachrichtigt wird, dass eine Verbindung hergestellt wurde.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>-Ereignis erstellen, indem Sie das `OnWebPartsConnected`-Attribut dem `<asp:webpartmanager>`-Element hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />-Ereignis aus, das eintritt, während eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen oder Server- bzw. Benutzersteuerelementen in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>-Ereignis aus, das auftritt, wenn zwei-Steuerelemente versuchen, eine Verbindung herzustellen. Die-Methode bietet die Möglichkeit, den Verbindungsversuch abzubrechen. Wenn die Verbindung erfolgreich ist, folgt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>-Ereignis.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das zugehörige Ereignis bereitstellen, indem Sie das `OnWebPartsConnecting`-Attribut zum `<asp:webpartmanager>`-Element auf einer Webseite hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler, die abgeleitete <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen erstellen, können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />-Methode überschreiben, um die Ereignis Behandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />-Ereignis aus, das auftritt, nachdem eine Verbindung zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen getrennt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>-Methode löst das zugehörige-Ereignis am Ende der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode aus, die den Prozess der Beendigung einer Verbindung zwischen zwei Steuerelementen ausführt.  
  
 Die-Methode bietet programmgesteuerte Kontrolle über das Beenden einer Verbindung, damit Entwickler den Benutzer informieren, Änderungen an der Benutzeroberfläche vornehmen oder andere Änderungen an der Anwendung vornehmen können.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>-Ereignis erstellen, indem Sie das `OnWebPartsDisconnected`-Attribut dem `<asp:webpartmanager>`-Element hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />-Ereignis aus, das anzeigt, dass gerade eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen oder Server- bzw. Benutzersteuerelementen in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone beendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>-Methode löst das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis aus, das auftritt, wenn zwei-Steuerelemente eine Verbindung beenden. Die-Methode bietet die Möglichkeit, den Prozess der Verbindungs Trennung abzubrechen. Wenn die Verbindung erfolgreich entfernt wurde, folgt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>-Ereignis.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das zugehörige Ereignis bereitstellen, indem Sie das `OnWebPartsDisconnecting`-Attribut zum `<asp:webpartmanager>`-Element auf einer Webseite hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler, die abgeleitete <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klassen erstellen, können die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />-Methode überschreiben, um die Ereignis Behandlung anzupassen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Personalization">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Personalization As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ Personalization { System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Personalization : System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf ein Objekt ab, das Personalisierungsdaten für eine Webseite enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />, die Personalisierungsdaten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft bietet eine Möglichkeit, auf das <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Objekt zuzugreifen, das einer Seite über das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement zugeordnet ist. Mit dieser Eigenschaft können Sie auf die verschiedenen Member des Personalisierungs Objekts zugreifen. Beispielsweise können Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>-Methode verwenden, um den Personalisierungs Bereich der Seite von "freigegeben" auf "Benutzerbereich" zu wechseln, oder umgekehrt. Sie können auch den aktuellen Personalisierungs Bereich der Seite herausfinden, unabhängig davon, ob die Personalisierung auch auf der Seite aktiviert ist, welcher Anbieter für die Personalisierungs Daten verwendet wird und vieles mehr.  
  
 Beachten Sie, dass die Daten, auf die die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft verweist, nur die Personalisierungs Daten auf Seitenebene sind, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement nachverfolgt werden. Steuerelement spezifische Personalisierungs Daten, z. b. die Werte personalisierbarer Eigenschaften für <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, sind nicht Teil der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft.  
  
> [!NOTE]
>  Weitere Informationen zur Webparts Personalisierung finden Sie unter [Übersicht über die Webparts Personalisierung](https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft Programm gesteuert verwendet wird.  
  
 Auf der folgenden Webseite kann ein Benutzer in den Bearbeitungsmodus wechseln, um bestimmte Aspekte des <xref:System.Web.UI.WebControls.Calendar> Steuer Elements zu bearbeiten. Die Schaltfläche **Bereich** umschalten schaltet die Seite in den Benutzer-oder freigegebenen Personalisierungs Bereich. Im **Bearbeitungsmodus** und in den Schaltflächen zum **Durchsuchen** des Modus wechselt die Seite jeweils in den entsprechenden Anzeigemodus. Beachten Sie, dass im `<script>` Tag-Abschnitt der Datei zwei der Methoden, die Ereignisse behandeln, die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft verwenden, um auf nützliche Member des zugrunde liegenden Objekts zuzugreifen. Insbesondere verwenden diese Methoden die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>-Methode und die <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>-Eigenschaft für das Objekt, auf das über die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>-Eigenschaft zugegriffen wird.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Personalization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/CS/wpmgrPersonalizationCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Personalization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/VB/wpmgrPersonalizationVB.aspx#1)]  
  
 Damit das Codebeispiel ausgeführt werden kann, müssen Sie auch Benutzern oder Benutzern das Personalisieren von Seiten im freigegebenen Gültigkeitsbereich ermöglichen. Fügen Sie der Datei "Web. config" im Abschnitt "`<system.web>`" einen Eintrag hinzu, der wie das folgende Markup aussieht.  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow  
        users="[Replace the text and brackets with a user name or   
           group.]"  
        roles="admin"   
        verbs="enterSharedScope"  />  
    </authorization>  
  </personalization>  
</webParts>   
```  
  
 Nachdem Sie die Seite in einem Browser geladen haben, klicken Sie auf die Schaltfläche **Bereich** umschalten, und beachten Sie, dass auf der Seite nun der Bereich freigegeben ist. Klicken Sie auf den **Bearbeitungsmodus** , um den Anzeigemodus zu ändern, klicken Sie auf das geblendete Steuerelement, und wählen Sie im Menü die Option **Bearbeiten** aus. Beachten Sie, dass die Benutzeroberfläche für beide Bearbeitungs Steuerelemente angezeigt wird. Klicken Sie jetzt auf **Durchsuchen** , um zum normalen Browser zurückzukehren. Wenn die Seite besagt, dass Sie sich im freigegebenen Bereich befindet, klicken Sie erneut auf **Bereich** umschalten, um sicherzustellen, dass die Seite im Benutzerbereich ist. Führen Sie als nächstes die gleichen Schritte aus, um das Steuerelement erneut zu bearbeiten, aber beachten Sie, dass das <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> Steuerelement jetzt in der Bearbeitungs Benutzeroberfläche nicht angezeigt wird. Dies liegt daran, dass dieses Steuerelement nur funktioniert, wenn sich die Seite im freigegebenen Personalisierungs Bereich befindet.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Übersicht über die Webparts Personalisierung</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScript">
      <MemberSignature Language="C#" Value="protected virtual void RegisterClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterClientScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterClientScript();" />
      <MemberSignature Language="F#" Value="abstract member RegisterClientScript : unit -&gt; unit&#xA;override this.RegisterClientScript : unit -&gt; unit" Usage="webPartManager.RegisterClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ermöglicht dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement die Ausgabe von clientseitigen Skripts, die für verschiedene Personalisierungsfeatures verwendet werden, z. B. zum Ziehen von <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen auf einer Webseite.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den an die Seite zu schreibenden Inhalt des Steuerelements empfängt.</param>
        <summary>Überschrieben, um zu verhindern, dass das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement Inhalt wiedergibt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="webPartManager.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert Zustandsdaten für das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement, sodass die Daten bei einer späteren Anforderung an die Webseite, die das Steuerelement enthält, wiederhergestellt werden können.</summary>
        <returns>Ein <see cref="T:System.Object" />, das die gespeicherten Zustandsdaten des Steuerelements enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>-Methode speichert Zustandsdaten für Eigenschaften, die über Seiten Postbacks beibehalten werden sollen, auch wenn die <xref:System.Web.UI.Control.EnableViewState%2A>-Eigenschaft auf `false`festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.SaveCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, das die zu ladenden Zustandsdaten enthält.</param>
        <summary>Speichert benutzerdefinierte Personalisierungszustandsdaten, die vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwaltet werden, sodass diese Daten bei jedem erneuten Laden der Seite neu geladen werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>-Methode ist im personalisierungsprozess wichtig, da Sie personalisierte Benutzereinstellungen für zukünftige Browsersitzungen und Besuche auf einer Seite speichern kann. Die-Methode speichert benutzerdefinierte Personalisierungs Zustandsdaten, die Elemente wie die folgenden enthalten: dynamische <xref:System.Web.UI.WebControls.WebParts.WebPart> oder Server Steuerelemente, die zu einer Seite hinzugefügt oder von einer Seite gelöscht wurden. Steuerelemente, die auf einer Seite verschoben wurden. und dynamische Verbindungen, die erstellt oder gelöscht wurden.  
  
 Diese Methode kann nicht direkt aus dem Code aufgerufen werden. Sie können jedoch die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>-Methode aufrufen, die selbst diese Methode aufruft, um Personalisierungs Daten zu speichern.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Entwickler können diese Methode in einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse außer Kraft setzen, um den Prozess der Speicherung von Personalisierungs Daten anzupassen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedWebPart As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ SelectedWebPart { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder sonstiges Serversteuerelement ab, das derzeit zur Bearbeitung oder zum Erstellen einer Verbindung mit einem anderen Steuerelement ausgewählt ist.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement, das derzeit zur Bearbeitung oder zum Erstellen einer Verbindung ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>-Eigenschaft gibt einen Verweis auf ein <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein anderes Server Steuerelement zurück, das derzeit zur Bearbeitung ausgewählt ist, oder zum Erstellen einer Verbindung mit einem anderen Steuerelement.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement bietet verschiedene nützliche Methoden und Ereignisse für die Handhabung des Vorgangs zum Auswählen eines Steuer Elements. Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>-Ereignis tritt auf, nachdem ein Steuerelement ausgewählt wurde, jedoch bevor Änderungen vorgenommen werden. Überschreiben Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>-Methode, um einige Aktionen für das Steuerelement nach der Auswahl auszuführen. Beispielsweise möchten Sie möglicherweise die Darstellung eines Steuer Elements ändern, das zwar ausgewählt, aber noch nicht geändert wurde, um visuell zu verdeutlichen, welches Steuerelement ausgewählt ist.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>-Ereignis tritt auf, wenn das ausgewählte Steuerelement geändert wurde. Überschreiben Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>-Methode, um einige Aktionen für das Steuerelement auszuführen, nachdem es geändert wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanged As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ SelectedWebPartChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem auf einer Webseite die Auswahl eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements aufgehoben und auf ein anderes Steuerelement übertragen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis kann zusammen mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>-Methode verwendet werden, um die Benutzeroberfläche eines ausgewählten Steuer Elements zu ändern. Wenn der Benutzer z. b. die Seite in den Entwurfs Modus wechselt (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>) und dann ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement auswählt, das an eine neue Position gezogen werden soll, ist es üblich, das Rendering des ausgewählten Steuer Elements zu ändern, z. b. durch Ändern der Farbe seines Rahmens oder BA. ckground, während es ausgewählt wird.  
  
> [!NOTE]
>  Weitere Informationen zum Verarbeiten von Ereignissen finden Sie unter Gewusst [wie: Verarbeiten von Ereignissen in einer Web Forms Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanging As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ SelectedWebPartChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt während des Prozesses ein, mit dem das auf der Webseite derzeit ausgewählte <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis kann in Verbindung mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>-Methode verwendet werden. Seiten Entwickler können einen Ereignishandler in Ihrem Code erstellen, indem Sie das `OnSelectedWebPartChanging`-Attribut zum `<asp:webpartmanager>`-Element in einer Seite hinzufügen und den Wert des-Attributs auf den Namen einer benutzerdefinierten Methode festlegen, die das-Ereignis behandelt.  
  
 Dieses Ereignis wird beim Starten oder Beenden einer Verbindung zwischen-Steuerelementen und beim Starten und Beenden einer Bearbeitung eines-Steuer Elements ausgelöst. Weitere Informationen finden Sie in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>-Methode.  
  
 Normalerweise kann das Ereignis abgebrochen werden, wenn das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Ereignis als direktes Ergebnis einer Benutzeraktion ausgelöst wird, die das ausgewählte Steuerelement ändert. Es gibt jedoch ein Szenario, in dem das Ereignis nicht abgebrochen werden kann. Wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Steuerelement gelöscht wird, müssen die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die darin enthalten sind, alle geschlossen werden, da Sie andernfalls verwaist sind. In diesem Fall schließt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement die <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und nicht den Benutzer, und es muss bestimmen, welches Steuerelement derzeit ausgewählt ist, und wann die Auswahl geändert werden soll, ohne dass eine Unterbrechung möglich ist, damit das Bereinigen der Steuerelemente. Daher kann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Methode in diesem Szenario nicht abgebrochen werden. Ein zugehöriges Ereignis, das abgebrochen werden kann, finden Sie unter <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>-Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberSignature Language="F#" Value="member this.SetPersonalizationDirty : unit -&gt; unit" Usage="webPartManager.SetPersonalizationDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt ein Flag fest, das angibt, dass benutzerdefinierte Personalisierungsdaten für das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement geändert wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>-Methode legt ein Flag fest, das letztendlich bewirkt, dass die Personalisierungs Komponenten im Webparts Steuerelement festgelegt werden, um die aktualisierten Personalisierungs Daten zu speichern. Weitere Informationen zu den Szenarien, die Änderungen an den Personalisierungs Daten verursachen können, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verfolgt werden, finden Sie in der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>-Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>-Methode kann nicht direkt aus dem Code aufgerufen werden und kann nicht überschrieben werden, da Sie intern von der Webparts Steuerelement Gruppe als Teil des Webparts Personalisierungs Features verwendet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Die-Methode kann von einer abgeleiteten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> Klasse aufgerufen werden. Dies wäre nützlich, wenn Sie die Personalisierungs Komponenten des Webparts Steuerelement Satzes anpassen möchten und somit den Vorgang zum Festlegen von Flags für Personalisierungs Daten steuern müssen.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedWebPart">
      <MemberSignature Language="C#" Value="protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSelectedWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSelectedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.SetSelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.SetSelectedWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement, das ausgewählt wurde.</param>
        <summary>Legt den Wert der <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />-Eigenschaft auf das derzeit ausgewählte <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A>-Methode wird während der Prozesse aufgerufen, die die Bearbeitung des Steuer Elements starten oder beenden, das durch den `webPart`-Parameter angegeben wird, und diejenigen, die eine Verbindung mit `webPart`starten oder beenden.  
  
 Am Anfang der Bearbeitungs-und Verbindungs Prozesse ist `webPart` das Steuerelement, das für die Bearbeitung ausgewählt wurde, oder die Eingabe einer Verbindung.  
  
 Am Ende der Bearbeitungs-und Verbindungs Prozesse wird `null` an die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A>-Methode weitergegeben, was dazu führt, dass das aktuell ausgewählte Steuerelement nicht mehr ausgewählt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine leere Zeichenfolge ("") ab oder liegt diese fest, sodass keine Skin auf das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement angewendet werden kann.</summary>
        <value>Eine leere Zeichenfolge, die verhindert, dass dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement eine Skin zugewiesen wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>-Eigenschaft überschreibt die geerbte <xref:System.Web.UI.Control.SkinID%2A?displayProperty=nameWithType>-Eigenschaft, um zu verhindern, dass das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement, das ein unsichtbares Steuerelement ist, mit Skins Durch die Implementierung der-Eigenschaft wird verhindert, dass ein Skin zugewiesen wird, indem immer eine leere Zeichenfolge aus dem `get`-Accessor zurückgegeben wird, und es wird immer eine Ausnahme ausgelöst, wenn versucht wird, einen Wert im `set` Accessor festzulegen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, den Eigenschaftswert festzulegen.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die Auflistung aller als statische Verbindungen definierten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />-Objekte auf einer Webseite ab.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />, die alle statischen Verbindungen auf der Seite enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>-Eigenschaft wird vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwendet, um alle statischen Verbindungen auf einer Seite zu verfolgen und zu verwalten. Eine statische Verbindung muss im Gegensatz zu einer dynamischen Verbindung nicht jedes Mal, wenn die Seite gerendert wird, zu einer Seite hinzugefügt werden.  
  
 Die Auflistung, auf die von dieser Eigenschaft verwiesen wird, enthält alle statischen Verbindungen, die auf der Seite vorhanden sind, unabhängig davon, ob Sie Programm gesteuert erstellt oder mit einem `<asp:webpartconnection>`-Element im Markup der Seite angegeben werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>-Eigenschaft veranschaulicht.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Webparts Seite zu ändern.  
  
-   Eine Quell Code Datei, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und eine benutzerdefinierte-Schnittstelle enthält.  
  
-   Eine Webseite, die zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden können, sowie ein `<asp:webpartmanager>` Element.  
  
-   Eine Erläuterung, wie das Beispiel in einem Browser funktioniert.  
  
 Der folgende Code enthält nur den Webseiten Teil des Beispiels. Sie müssen auch die ersten beiden Teile des Beispiels (das benutzerdefinierte Benutzer Steuerelement und den Quellcode für die benutzerdefinierten Steuerelemente und die Schnittstelle) abrufen, und zwar aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse. In diesem Thema werden auch die Optionen zum Kompilieren der <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente erläutert.  
  
 Der dritte Teil des Code Beispiels ist die Webseite. Das deklarative Markup für die Seite enthält `Register` Anweisungen für das Benutzer Steuerelement und die benutzerdefinierten Steuerelemente. Es gibt ein `<asp:webpartmanager>`-Element, ein `<asp:webpartzone>`-Element, das die benutzerdefinierten Steuerelemente enthalten soll, und ein `<asp:connectionszone>`-Element. Beachten Sie, dass der Code in der `Page_Load`-Methode prüft, ob bereits eine Verbindung vorhanden ist, und, falls nicht, einen Anbieter, einen Consumer und die entsprechenden Verbindungspunkte definiert. Anschließend wird eine neue Verbindung mit dem Satz statischer Verbindungen hinzugefügt, auf die von verwiesen wird @no__t _1_-Eigenschaft.<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 Nachdem Sie die Webseite in einem Browser geladen haben, klicken Sie auf das Dropdown Listen-Steuerelement **Anzeigemodus** , und wählen Sie **verbinden** aus, um die Seite in den Verbindungs Modus zu wechseln. Der Verbindungs Modus verwendet das `<asp:connectionszone>`-Element, um das Erstellen von Verbindungen zwischen-Steuerelementen zu ermöglichen. Klicken Sie im Verbindungs Modus in der Titelleiste des **ZIP-Code** -Steuer Elements auf den abwärts Pfeil, um das zugehörige Verbenmenü zu aktivieren, und klicken Sie dann auf **verbinden**. Nachdem die Benutzeroberfläche der Verbindung angezeigt wird, beachten Sie, dass bereits eine Verbindung mit dem Code erstellt wurde, der in der `Page_Load`-Methode enthalten ist. Wenn Sie in einer späteren Browsersitzung zu dieser Seite zurückkehren, wird diese statische Verbindung bereits hergestellt und muss nicht jedes Mal neu erstellt werden, wenn die Seite geladen wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SupportedDisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedDisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ SupportedDisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedDisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine schreibgeschützte Auflistung aller Anzeigemodi ab, die auf einer bestimmten Webseite verfügbar sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />, die den Satz der auf einer bestimmten Webseite verfügbaren <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />-Objekte enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft enthält nur die Anzeigemodi, die auf einer Seite tatsächlich verfügbar sind, wenn die Arten von Zonen Steuerelementen auf der Seite vorhanden sind.  
  
> [!NOTE]
>  Anzeigemodi können deaktiviert werden, und wenn ein Anzeigemodus deaktiviert ist, wird er der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> Auflistung nicht hinzugefügt, auch wenn der entsprechende Zonentyp, der diesen Anzeigemodus unterstützt, auf der Seite vorhanden ist.  
  
 Der Durchsuchenmodus und der Entwurfs Modus werden immer unterstützt. Die Anzeigemodi, die variieren können, sind die Modi "Bearbeiten", "Katalog" und "verbinden". Jeder dieser Anzeigemodi ist einem bestimmten Typ von <xref:System.Web.UI.WebControls.WebParts.ToolZone> Steuerelement zugeordnet. Es ist das vorhanden sein dieser speziell typisierten Zone auf einer Webseite, die bewirkt, dass der Auflistung, auf die die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft verweist, ein bestimmter Anzeigemodus hinzugefügt wird. Wenn eine Webseite z. b. eine <xref:System.Web.UI.WebControls.WebParts.EditorZone> Zone, aber keine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone enthält, ist der Bearbeitungs Anzeigemodus einer der unterstützten Modi auf dieser Seite, aber der Anzeigemodus des Katalogs wird nicht unterstützt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft unterscheidet sich von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>-Eigenschaft, die auf eine Auflistung verweist, die alle Anzeigemodi enthält, die für das aktuelle <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verfügbar sind, auch solche, die nicht auf einer bestimmten Seite unterstützt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>-Eigenschaft veranschaulicht. Der Code verwendet diese Eigenschaft, um die Liste nur mit den Anzeigemodi aufzufüllen, die auf der aktuellen Webseite verfügbar sind.  
  
 Auf dieser Seite werden drei Anzeigemodi unterstützt: Durchsuchen, entwerfen und bearbeiten. Die ersten beiden sind immer verfügbar, und der Bearbeitungsmodus ist in diesem Codebeispiel verfügbar, da die Seite ein <xref:System.Web.UI.WebControls.WebParts.EditorZone> Steuerelement enthält. Die Katalog-und Verbindungsanzeige Modi werden nicht angezeigt, da sich die entsprechenden Zonen nicht auf dieser Seite befinden.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/CS/wpmgrSuppDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/VB/wpmgrSuppDisplayModesvb.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, können Sie das Dropdown Listen-Steuerelement verwenden, um die Seite vom Durchsuchen-Modus in den Entwurfs Modus zu wechseln, und dann in den Bearbeitungsmodus. Im Bearbeitungsmodus können Sie in der Kopfzeile eines der Server Steuerelemente auf das Dropdown-Verbenmenü klicken und **Bearbeiten** auswählen, um das Steuerelement zu bearbeiten.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Anzeigemodi der Webparts Seite</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsDirty As Boolean Implements IPersonalizable.IsDirty" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::WebParts::IPersonalizable::IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob mit dem <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwaltete benutzerdefinierte Personalisierungszustandsdaten auf einer Webseite geändert wurden.</summary>
        <value>Ein boolescher Wert, der angibt, ob die Personalisierungszustandsdaten geändert wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>-Eigenschaft können Aufrufer ermitteln, ob die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwalteten Personalisierungs Zustandsdaten geändert wurden. Wenn Benutzer Details auf Seitenebene personalisieren, z. b. durch Ändern des Seitenlayouts, erstellen oder Löschen von Verbindungen und hinzufügen oder Löschen von Steuerelementen, ändern sich die Personalisierungs Daten, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwaltet werden. Dabei handelt es sich um eine Pass-Through-Methode, die an Aufrufer den Wert der geschützten <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> Eigenschaft zurückgibt, auf die Aufrufer nicht direkt zugreifen können.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>-Eigenschaft gibt nicht an, ob personalisierbare Eigenschaftswerte oder einzelne Eigenschaften, die sich auf die Darstellung einzelner <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente auswirken, geändert wurden. Die Personalisierung der Steuerelement Ebene wird für jedes Steuerelement einzeln nachverfolgt. Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>-Eigenschaft gibt nur an, ob Personalisierungs Daten, die sich auf der Seitenebene befinden und vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwaltet werden, geändert wurden.  
  
 In der folgenden Liste werden einige gängige Instanzen der Personalisierung beschrieben, die bewirken, dass die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>-Eigenschaft den Wert `true`zurückgibt, der angibt, dass das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement über einige geänderte Personalisierungs Daten verfügt:  
  
-   Schließen eines statischen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements (oder eines Servers oder eines Benutzer Steuer Elements) auf einer Seite.  
  
-   Wiederherstellen eines geschlossenen statischen <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuer Elements aus einem Seiten Katalog zurück auf eine Seite.  
  
-   Verschieben eines beliebigen Steuer Elements innerhalb seiner Zone oder in eine andere Zone.  
  
-   Hinzufügen eines Steuer Elements aus einem Katalog von <xref:System.Web.UI.WebControls.WebParts.WebPart>-oder Server-Steuerelementen oder Programm gesteuertes Hinzufügen eines-Steuer Elements.  
  
-   Erstellen einer Verbindung zwischen zwei <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen, entweder Programm gesteuert oder über die Benutzeroberfläche der Verbindung (UI).  
  
-   Löschen einer Verbindung zwischen zwei <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelementen, entweder Programm gesteuert oder über die Benutzeroberfläche der Verbindung.  
  
 Um auf diesen Eigenschafts Wert zuzugreifen, müssen Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement Instanz in die <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>-Schnittstelle umwandeln. Anschließend können Sie den <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>-Eigenschafts Wert lesen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht eine einfache Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>-Eigenschaft, um einige allgemeine Seiten Personalisierungs Instanzen anzugeben, die bewirken, dass die Personalisierungs Daten eines <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuer Elements geändert werden.  
  
 Das Codebeispiel besteht aus vier Teilen:  
  
-   Ein Benutzer Steuerelement, das es Ihnen ermöglicht, Anzeigemodi auf einer Seite zu ändern, die Webparts Steuerelemente enthält.  
  
-   Eine Quelldatei, die den Code für zwei benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente enthält, die verbunden werden können, und eine-Schnittstelle.  
  
-   Eine Webseite, die alle-Steuerelemente hostet.  
  
-   Eine Erläuterung der Funktionsweise des Code Beispiels.  
  
 Der erste Teil des Code Beispiels ist das Benutzer Steuerelement zum Ändern der Anzeigemodi. Sie können den Quellcode für das Benutzer Steuerelement aus dem Beispiel Abschnitt der Übersicht über <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Klasse abrufen. Informationen zu Anzeigemodi und zur Funktionsweise des Benutzer Steuer Elements finden Sie unter Exemplarische Vorgehensweise [: Ändern der Anzeigemodi auf einer Webparts Seite](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 Der zweite Teil des Beispiels ist die Quelldatei mit den benutzerdefinierten Steuerelementen und der-Schnittstelle. Beachten Sie, dass die `IZipCode`-Schnittstelle eine Methode verfügbar macht und dass diese Methode, wie Sie im benutzerdefinierten `ZipCodeWebPart`-Steuerelement implementiert ist, als Rückruf Methode fungiert, damit `ZipCodeWebPart` in einem Verbindungs Szenario als Anbieter fungieren kann. Das andere Steuerelement, `WeatherWebPart`, fungiert als Consumersteuerelement in einer Verbindung. Sie kann die von `ZipCodeWebPart`bereitgestellte Schnittstelle nutzen. In einer realen Anwendung können `WeatherWebPart` einen personalisierten Postleitzahl vom Anbieter nutzen und dann den Benutzern grafische Wetterinformationen bereitstellen.  
  
 Damit das Codebeispiel ausgeführt werden kann, müssen Sie diesen Quellcode kompilieren. Sie können Sie explizit kompilieren und die resultierende Assembly in den bin-Ordner der Website oder in den globalen Assemblycache einfügen. Alternativ dazu können Sie den Quellcode in den Ordner "App_Code" der Website einfügen, wo er zur Laufzeit dynamisch kompiliert wird. In diesem Codebeispiel wird die dynamische Kompilierung verwendet. Beachten Sie daher, dass die `Register`-Direktive für diese Komponente am oberen Rand der Webseite nur `TagPrefix`-und `Namespace` Attribute enthält, ohne ein `Assembly`-Attribut. Eine exemplarische Vorgehensweise, die das Kompilieren von veranschaulicht, finden Sie unter Exemplarische Vorgehensweise [: entwickeln und Verwenden eines benutzerdefinierten Webserver-Steuer](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)Elements.  
  
 [!code-csharp[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/ZipCodeComponent.vb#2)]  
  
 Der dritte Teil des Code Beispiels ist die Webseite. Beachten Sie, dass es zwei <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zonen enthält, wobei der erste die beiden benutzerdefinierten <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente enthält. Es gibt auch eine <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone, die ein Standardmäßiges <xref:System.Web.UI.WebControls.Calendar> Steuerelement enthält, das Benutzer der Seite hinzufügen können. Das `<asp:connectionszone>`-Element stellt eine Verbindungs Benutzeroberfläche bereit, mit der Benutzer Verbindungen zwischen Steuerelementen herstellen können. Beachten Sie in der `Page_PreRender`-Methode, dass überprüft wird, ob die Personalisierungs Daten geändert wurden, und aktualisiert in diesem Fall den Text `Label1`.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/wpmgrIsDirtyCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/wpmgrIsDirtyVB.aspx#1)]  
  
 Nachdem Sie die Seite in einem Browser geladen haben, versuchen Sie, einige der im Abschnitt "Hinweise" in diesem Thema aufgeführten Szenarios zu erstellen, mit denen die Personalisierungs Daten geändert werden. Wenn Sie verschiedene Änderungen vornehmen und eine Änderung eine der Personalisierungs Szenarios umfasst, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verfolgt werden, wird der Text des `Label1` Steuer Elements angezeigt, um anzugeben, dass sich die Personalisierungs Daten geändert haben. Sie haben unter anderem folgende Möglichkeiten:  
  
-   Erstellen Sie durch Klicken auf die Schaltfläche **WebPart-Steuerelemente verbinden** eine Verbindung zwischen Steuerelementen.  
  
-   Verwenden Sie das Dropdown Listen-Steuerelement **Anzeigemodus** , um die Seite in den Katalog Modus zu wechseln, und fügen Sie das **My Calendar** -Steuerelement der zweiten <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone hinzu.  
  
-   Wechseln Sie zurück in den Durchsuchenmodus, und klicken Sie auf das Verbenmenü (mit einem Pfeilsymbol in der Titelleiste) für das Steuerelement **My Calendar** , und wählen Sie **Schließen** aus, um es zu schließen und dem Seiten Katalog hinzuzufügen.  
  
-   Geben Sie die Seite in den Katalog Modus zurück, und fügen Sie das **My-Kalender** Steuerelement wieder zur Seite hinzu.  
  
-   Verwenden Sie das Steuerelement **Anzeigemodus** , um die Seite in den Entwurfs Modus zu wechseln, und ordnen Sie das Layout der Steuerelemente neu an, indem Sie mindestens ein Element in eine andere Zone oder an eine andere Position in derselben Zone ziehen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Load">
      <MemberSignature Language="C#" Value="void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Load (state As PersonalizationDictionary) Implements IPersonalizable.Load" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Load;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, das die zu ladenden Zustandsdaten enthält.</param>
        <summary>Gibt zuvor gespeicherte benutzerdefinierte Personalisierungszustandsdaten zurück, die in das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement geladen werden müssen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei dieser Methode handelt es sich um eine Implementierung der <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=nameWithType>-Methode, mit der das Webparts Steuerelement einen direkten Zugriff auf die geschützte <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=nameWithType>-Methode ermöglicht. Wenn diese Methode aufgerufen wird, werden die benutzerdefinierten personalisierten Daten gespeichert, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwaltet werden, und die vorher im permanenten Datenspeicher für die spätere Verwendung im Initialisierungs Prozess gespeichert wurden.  
  
> [!NOTE]
>  In den meisten Fällen muss der Code für die Seiten-und Steuerungs Entwickler diese Methode nicht aufrufen, da Sie hauptsächlich vom Webparts-Steuerelement als Mechanismus zum Abrufen von Personalisierungs Daten verwendet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ein Szenario, in dem Entwickler diese Methode verwenden würden, besteht darin, dass Sie ein benutzerdefiniertes Personalisierungs Framework entwickeln, das anstelle des vom Webparts Steuersatz bereitgestellten-Steuer Elements verwendet wird. In solchen Fällen könnten Entwickler von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse erben und die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />-Methode überschreiben, um eine benutzerdefinierte Implementierung eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />-Objekts zurückzugeben. Das benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> Objekt ruft die Implementierung der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />-Methode zum richtigen Zeitpunkt auf, um benutzerdefinierte Personalisierungs Daten zu laden.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Save">
      <MemberSignature Language="C#" Value="void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Save (state As PersonalizationDictionary) Implements IPersonalizable.Save" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Save;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />, das die zu speichernden Zustandsdaten enthält.</param>
        <summary>Speichert benutzerdefinierte Personalisierungszustandsdaten, die vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement verwaltet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>-Methode handelt es sich um eine Implementierung der <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=nameWithType>-Methode, die es ermöglicht, dass das Webparts-Steuerelement direkt auf die geschützte <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=nameWithType>-Methode zugreifen kann. Wenn diese Methode aufgerufen wird, speichert Sie alle personalisierten Daten, die vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwaltet werden, in dem permanenten Datenspeicher, der für eine Webparts Anwendung konfiguriert ist.  
  
> [!NOTE]
>  In den meisten Fällen muss der Code für die Seiten-und Steuerungs Entwickler diese Methode nicht aufzurufen, da Sie hauptsächlich vom Webparts Steuerelement als Mechanismus zum Speichern von Personalisierungs Daten verwendet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ein Szenario, in dem Entwickler mit dieser Methode arbeiten würden, ist, wenn Sie ein benutzerdefiniertes Personalisierungs Framework entwickeln, das anstelle des vom Webparts Steuerelement festgelegten verwendet werden soll. In solchen Fällen könnten Entwickler von der <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Klasse erben und die <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />-Methode überschreiben, um eine benutzerdefinierte Implementierung eines <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />-Objekts zurückzugeben. Das benutzerdefinierte <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />-Objekt ruft die-Implementierung der <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />-Methode zum richtigen Zeitpunkt auf, um die benutzerdefinierten Personalisierungs Daten zu speichern.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webPartManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wendet Personalisierungszustandsdaten auf das <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement an und ruft die Basismethode auf, um die Nachverfolgung von Änderungen an Ansichtszustandsdaten für das Steuerelement zu aktivieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Änderungen an den Ansichts Zustandsdaten werden in einem <xref:System.Web.UI.StateBag> Objekt gespeichert, und der Zugriff darauf erfolgt über die <xref:System.Web.UI.Control.ViewState%2A>-Eigenschaft des Steuer Elements.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dessen Hilfe untergeordnete Steuerelemente sichtbar sein können.</summary>
        <value>Ein boolescher Wert, der angibt, ob ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelement und dessen untergeordnete Steuerelemente sichtbar sind. <see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement überschreibt die Eigenschaft Basis <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType>, sodass für die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> Eigenschaft immer der Wert `true` zurückgegeben wird. Obwohl das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement selbst nicht sichtbar ist, muss die Eigenschaft <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> auf `true` festgelegt werden, damit alle untergeordneten Steuerelemente standardmäßig sichtbar sind.  
  
 Wenn Sie versuchen, den Wert der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>-Eigenschaft festzulegen, wird immer ein Fehler generiert, da das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement das Verhalten der Basis Eigenschaft überschrieben hat und das Zuweisen eines beliebigen Werts zur-Eigenschaft verhindert.  
  
 Diese Eigenschaft kann nicht in visuellen Designern gebunden werden, kann jedoch zur Laufzeit gebunden werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.BindableAttribute>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, der Eigenschaft einen Wert zuzuordnen.</exception>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdded As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartAdded;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder sonstiges Serversteuerelement einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone hinzugefügt wurde, um anzuzeigen, dass das Steuerelement erfolgreich hinzugefügt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>-Ereignis ist hilfreich, um anzugeben, dass ein dynamisches Steuerelement (ein-Steuerelement, das Programm gesteuert hinzugefügt wurde und nicht im Seiten Markup deklariert wurde) erfolgreich einer Zone hinzugefügt wurde. In Verbindung mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>-Methode bietet das-Ereignis Entwicklern die Möglichkeit, die Benutzeroberfläche zu aktualisieren oder Benutzer darauf aufmerksam zu benachrichtigen, dass ein Steuerelement erfolgreich hinzugefügt wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdding">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdding As WebPartAddingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAddingEventHandler ^ WebPartAdding;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " Usage="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Zone ein dynamisches <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Steuerelement oder ein anderes Serversteuerelement hinzugefügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> Ereignis wird von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>-Methode ausgelöst, nachdem das Hinzufügen eines Steuer Elements zu einer Zone begonnen hat. Dieses Ereignis bietet die Möglichkeit, den Prozess abzubrechen, bevor er beendet wird. Wenn der hinzu fügvorgang erfolgreich ist, folgt auf dieses Ereignis das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>-Ereignis.  
  
 Seiten Entwickler können benutzerdefinierte Handler für das Ereignis bereitstellen, indem Sie das `OnWebPartAdding`-Attribut zum `<asp:webpartmanager>`-Element auf einer Seite hinzufügen und dem Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosed As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartClosed;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder Server- bzw. Benutzersteuerelement) von einer Seite entfernt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ereignis <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> gibt an, dass ein Steuerelement erfolgreich geschlossen wurde, entweder durch einen Benutzer oder Programm gesteuert. Um ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement zu schließen, bedeutet dies, dass es von einer Seite entfernt werden soll, sodass es nicht gerendert wird, und es auch in einem speziellen Objekt mit dem Namen Page Catalog ablegen soll. Ein Seiten Katalog, der dem <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>-Steuerelement entspricht, verwaltet Verweise auf geschlossene <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente für jede Seite. Wenn ein <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>-Steuerelement auf einer Seite innerhalb einer <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Zone deklariert ist, können Benutzer eine Seite in den Katalog Anzeigemodus wechseln und einer Seite alle zuvor geschlossenen Steuerelemente wieder hinzufügen.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>-Ereignis ist mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>-Methode verknüpft, die das-Ereignis auslöst und einen Handler dafür bereitstellt.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis hinzufügen, indem Sie dem `<asp:webpartmanager>`-Element einer Seite ein `OnWebPartClosed`-Attribut hinzufügen und dann dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosing As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartClosing;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement (oder ein Server- bzw. Benutzersteuerelement) von einer Seite entfernt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>-Ereignis wird von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>-Methode ausgelöst, wenn das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement gerade ein-Steuerelement schließt. Wenn das Entfernen des Steuer Elements erfolgreich ist, folgt auf dieses Ereignis das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>-Ereignis.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das Ereignis bereitstellen, indem Sie das `OnWebPartClosed`-Attribut zum `<asp:webpartmanager>`-Element auf einer Seite hinzufügen und dem Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 Normalerweise kann das Ereignis abgebrochen werden, wenn das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Ereignis als direktes Ergebnis eines Benutzers ausgelöst wird, der ein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement schließt. Es gibt jedoch ein Szenario, in dem das Ereignis nicht abgebrochen werden kann. Wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Steuerelement gelöscht wird, müssen die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, die darin enthalten sind, alle geschlossen werden, da Sie andernfalls verwaist sind. In diesem Fall schließt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement die <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, nicht den Benutzer. Wenn das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement gerade die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> Methode zum Schließen der einzelnen Steuerelemente aufruft und das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>-Ereignis ausgelöst wird, kann das Ereignis nicht abgebrochen werden (Entwurfs bedingt), da die <xref:System.Web.UI.WebControls.WebParts.WebPartManager> die Aufgabe der Bereinigung aller Steuerelemente der Zone abschließen muss.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleted As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartDeleted;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder sonstiges Serversteuerelement aus einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone gelöscht wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> Ereignis ist hilfreich, um anzugeben, dass ein dynamisches Steuerelement (ein Steuerelement, das Programm gesteuert hinzugefügt wurde und nicht im Seiten Markup deklariert wurde) erfolgreich aus einer Zone gelöscht wurde. In Verbindung mit der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>-Methode bietet das-Ereignis Entwicklern die Möglichkeit, die Benutzeroberfläche zu aktualisieren oder Benutzer darauf aufmerksam zu benachrichtigen, dass ein Steuerelement erfolgreich gelöscht wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleting As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartDeleting;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während eine Instanz eines dynamischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelements oder eines anderen Serversteuerelements dauerhaft aus einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone gelöscht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>-Ereignis wird von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>-Methode ausgelöst, während ein dynamisches Steuerelement gelöscht wird (eines, das Programm gesteuert oder von einem Benutzer über die Webparts-Benutzeroberfläche hinzugefügt wurde). Das Ereignis bietet die Möglichkeit, den Prozess abzubrechen, bevor er abgeschlossen ist. Wenn der Löschvorgang erfolgreich abgeschlossen wurde, folgt das Ereignis <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>.  
  
 Seiten Entwickler können benutzerdefinierte Handler für das Ereignis bereitstellen, indem Sie das `OnWebPartDeleting`-Attribut zum `<asp:webpartmanager>`-Element auf einer Seite hinzufügen und dem Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartMoved">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoved As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartMoved;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement oder Serversteuerelement an eine andere Position auf einer Webseite verschoben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis gilt sowohl für statische (im Markup einer Webseite deklarierte) als auch für dynamische Steuerelemente. Sie ist der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>-Methode zugeordnet. Da das-Ereignis ausgelöst wird, nachdem ein Verschiebe Vorgang durchgeführt wurde, können Entwickler einen Ereignishandler einschließen, um Benutzern eine Benachrichtigung, eine bestimmte Validierung oder andere Aktionen bereitzustellen. Um einen Ereignishandler hinzuzufügen, können Sie ein `OnWebPartMoved`-Attribut zum `<asp:webpartmanager>`-Element in einer Seite hinzufügen und dem Attribut den Namen einer benutzerdefinierten Methode zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartMoving">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoving As WebPartMovingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartMovingEventHandler ^ WebPartMoving;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " Usage="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während ein in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Zone enthaltenes <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Steuerelement oder ein anderes Serversteuerelement verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>-Ereignis wird ausgelöst, wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPart> oder ein anderes Server Steuerelement innerhalb seiner eigenen Zone oder in eine andere Zone verschoben wird. Dies kann der Fall sein, wenn ein Benutzer ein Steuerelement zieht und wenn eine programmgesteuerte Verschiebung stattfindet.  
  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Ereignis wird von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>-Methode ausgelöst und bietet die Möglichkeit, den Verschiebungs Prozess abzubrechen, bevor er beendet wird. Wenn der Verschiebe Vorgang abgeschlossen ist und das Steuerelement an einer neuen Position positioniert ist, wird auf dieses Ereignis das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>-Ereignis folgt.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis erstellen, indem Sie das `OnWebPartMoving`-Attribut zum `<asp:webpartmanager>`-Element hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebParts As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartCollection ^ WebParts { System::Web::UI::WebControls::WebParts::WebPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebParts : System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf alle vom <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelement auf einer Webseite nachverfolgten <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />-Steuerelemente ab.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" />, die Verweise auf einen Satz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft wird vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwendet, um alle <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente zu verfolgen, die in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen auf der Seite enthalten sind. Obwohl die-Auflistung schreibgeschützt ist, können Sie auf einzelne <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente über die-Auflistung zugreifen und diese Programm gesteuert ändern.  
  
> [!NOTE]
>  Es ist möglich, dass ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement auf einer Seite außerhalb einer <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone platziert wird, was dazu führt, dass das Steuerelement nicht vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement verfolgt wird oder in seiner <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> Auflistung darauf verwiesen wird. Es gibt jedoch kaum einen Grund, ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelement außerhalb einer Zone zu verwenden, da es seine Webparts Funktionalität verliert und als normales Server Steuerelement fungiert.  
  
 Jeder Typ von Steuerelement, der in einer Zone platziert werden kann, unabhängig davon, ob ein benutzerdefiniertes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement, ein ASP.NET-Standard Steuerelement, ein Benutzer Steuerelement oder ein benutzerdefiniertes Server Steuerelement vorhanden ist, kann zur Laufzeit als <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement behandelt werden Wenn ein Steuerelement, das kein <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement ist, in einer <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zone platziert wird, umschließt es zur Laufzeit ASP.NET das Steuerelement mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>-Objekt, sodass sich das Steuerelement als echtes <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelement Verhalten kann. Daher kann das <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Steuerelement mithilfe der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft jeden beliebigen Typ von Server Steuerelement verfolgen, unabhängig davon, ob es von der <xref:System.Web.UI.WebControls.WebParts.WebPart>-Klasse abgeleitet ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die programmgesteuerte Verwendung der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft für den Zugriff auf einzelne <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente veranschaulicht. Beachten Sie, dass im deklarativen Markup für die Webseite innerhalb des `<asp:webpartzone>`-Elements zwei standardmäßige ASP.NET-Server Steuerelemente vorhanden sind. Obwohl diese nicht von der <xref:System.Web.UI.WebControls.WebParts.WebPart>-Klasse erben, da Sie sich in einer Zone befinden, werden Sie zur Laufzeit mit einem <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Objekt umschließt und sind daher in der Auflistung enthalten, auf die von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft verwiesen wird. Sie können auch benutzerdefinierte <xref:System.Web.UI.WebControls.WebParts.WebPart> Steuerelemente, Benutzer Steuerelemente oder benutzerdefinierte Server Steuerelemente in dieser Zone hinzufügen, die auf die gleiche Weise behandelt werden.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_WebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/CS/wpmgrWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_WebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/VB/wpmgrWebPartsVB.aspx#1)]  
  
 Beachten Sie, dass Sie, damit das Codebeispiel funktioniert, eine Einstellung in der Datei "Web. config" hinzufügen müssen, um das Exportieren Webparts Beschreibungsdateien zu ermöglichen. Stellen Sie sicher, dass Sie über eine Web. config-Datei im gleichen Verzeichnis wie die Webseite für dieses Codebeispiel verfügen. Stellen Sie im `<system.web>` Abschnitt sicher, dass ein `<webParts>`-Element vorhanden ist, bei dem ein `enableExport`-Attribut auf `true`festgelegt ist, wie im folgenden Markup.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Wenn Sie nach dem Laden der Seite in einen Browser auf die Schaltfläche **Webpart-Anzahl** klicken, verwendet der Code die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>-Eigenschaft, um die Anzahl der Steuerelemente in der Auflistung zurückzugeben. Wenn Sie auf die Schaltfläche **Kalender Titel ausblenden** klicken, ändert der Code den Kalender so, dass er nur mit einem Rahmen und nicht mit einem Titel gerendert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsConnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem eine bestimmte Verbindung zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen (bzw. Server- oder Benutzersteuerelementen) erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>-Ereignis ist der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>-Methode zugeordnet. Das Ereignis ist hilfreich, da Sie nach dem wissen, dass eine Verbindung hergestellt wurde, den Benutzer über den Fakt informieren oder sogar die Benutzeroberfläche (UI) der Seite ändern möchten. Angenommen, Sie möchten ein grafisches Bild anzeigen, das eine erfolgreiche Verbindung zwischen zwei Steuerelementen vorschlägt, oder Sie können eine kurze Nachricht anzeigen und dann den Seiten Anzeigemodus wieder in den Durchsuchenmodus ändern.  
  
 Seiten Entwickler können diesem Ereignis einen benutzerdefinierten Ereignishandler zuordnen, indem Sie das `OnWebPartsConnected`-Attribut zum `<asp:webpartmanager>`-Element auf der Seite hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsConnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während eine Verbindung zwischen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen (oder in einer <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zone platzierten Server- bzw. Benutzersteuerelementen) erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Ereignis wird von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>-Methode ausgelöst und signalisiert, dass der Verbindungsprozess begonnen hat (z. b. Wenn ein Benutzer ein-Steuerelement ausgewählt und auf ein Connect-Verb geklickt hat), aber noch nicht abgeschlossen ist. Das Ereignis bietet die Möglichkeit, eine Verbindung abzubrechen, bevor Sie beendet wird. Wenn die Verbindung erfolgreich hergestellt wurde, folgt das Ereignis <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis hinzufügen, indem Sie das `OnWebPartsConnecting`-Attribut zum `<asp:webpartmanager>`-Element hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsDisconnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem eine Verbindung zwischen zwei <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen oder Serversteuerelementen beendet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>-Ereignis ist der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>-Methode zugeordnet. Das Ereignis ist hilfreich, wenn Sie wissen, dass eine Verbindung beendet wurde, dass Sie den Benutzer informieren, einige Bereinigungs Aktionen im Code ausführen oder andere Änderungen an der Benutzeroberfläche vornehmen möchten.  
  
 Seiten Entwickler können diesem Ereignis einen benutzerdefinierten Ereignishandler zuordnen, indem Sie das `OnWebPartsDisConnected`-Attribut zum `<asp:webpartmanager>`-Element auf der Seite hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsDisconnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, während die Verbindung zwischen zuvor verbundenen <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />-Steuerelementen oder Serversteuerelementen beendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis wird von der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>-Methode ausgelöst und signalisiert, dass ein Benutzer auf ein Disconnect-Verb geklickt hat, oder dass die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>-Methode anderweitig aufgerufen wurde. Das Ereignis bietet die Möglichkeit, den Prozess der Beendigung einer Verbindung abzubrechen, bevor Sie fertiggestellt wird. Wenn die Verbindung erfolgreich beendet wurde, wird auf dieses Ereignis das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>-Ereignis folgt.  
  
 Seiten Entwickler können einen benutzerdefinierten Handler für das-Ereignis hinzufügen, indem Sie das `OnWebPartsDisconnecting`-Attribut zum `<asp:webpartmanager>`-Element hinzufügen und dem-Attribut einen benutzerdefinierten Methodennamen zuweisen.  
  
 Normalerweise kann das Ereignis abgebrochen werden, wenn das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis als direktes Ergebnis einer Benutzeraktion ausgelöst wird, die eine Verbindung beendet. Es gibt jedoch mehrere Szenarios, in denen das Ereignis nicht abgebrochen werden kann. Das erste Szenario besteht darin, dass die <xref:System.Web.UI.WebControls.WebParts.WebPart> darin enthaltenen Steuerelemente alle geschlossen werden müssen, wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Steuerelement gelöscht wird, andernfalls wären Sie verwaist. In diesem Fall schließt das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement die <xref:System.Web.UI.WebControls.WebParts.WebPart>-Steuerelemente und nicht den Benutzer, und es muss auch in der Lage sein, die Verbindungen von verbundenen Steuerelementen ohne jegliche Unterbrechung zu beenden, damit der Vorgang zum Bereinigen und Schließen aller Steuerelemente. Daher kann die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Methode in diesem Szenario nicht abgebrochen werden. Ein zugehöriges Ereignis, das abgebrochen werden kann, finden Sie unter <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>-Ereignis.  
  
 Das zweite Szenario, in dem das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Ereignis nicht abgebrochen werden kann, ist die Methode, mit der die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>-Methode aufgerufen wird (z. b. bei jeder Anforderung an eine Seite), und es gibt eine Art Konflikt in den vorhandenen Verbindungen auf einer Seite. Beispielsweise ist es möglich, dass ein Benutzer das Steuerelement x mit dem Steuerelement y verbindet, aber ein gemeinsam genutzter Benutzer verbindet Control x mit Control z In diesem Fall haben die Einstellungen der einzelnen Benutzer für die Verbindung Vorrang, und das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement löst den Konflikt durch Aufrufen der <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode und Beenden der Verbindung zwischen x und z für den jeweiligen Benutzer. Da diese Trennung für die Lösung des Konflikts von entscheidender Bedeutung ist, kann das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis in diesem Szenario nicht abgebrochen werden.  
  
 Das dritte Szenario, in dem die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Methode nicht abgebrochen werden kann, ist, wenn ein <xref:System.Web.UI.WebControls.WebParts.WebPart>-oder Server Steuerelement, das derzeit verbunden ist, entweder gelöscht oder geschlossen wird. Da das Steuerelement definitiv von der Seite entfernt wird, ist es eine logische Notwendigkeit, seine Verbindung zu entfernen. Wenn das <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>-Methode aufruft, die wiederum das <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>-Ereignis auslöst, besteht die Möglichkeit, dass das Ereignis nicht abgebrochen werden kann.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Webparts-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Zones">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zones As WebPartZoneCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ Zones { System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zones : System.Web.UI.WebControls.WebParts.WebPartZoneCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf eine Auflistung aller <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zonen auf einer Webseite ab.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" />, die auf einen Satz von <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />-Zonen verweist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>-Eigenschaft wird vom <xref:System.Web.UI.WebControls.WebParts.WebPartManager>-Steuerelement verwendet, um die <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen auf einer Webseite zu verfolgen. Beachten Sie, dass die-Eigenschaft nicht auf alle Zonen Typen verweist. Er verweist nur auf Zonen, die von der <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>-Klasse abgeleitet werden, einschließlich <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Zonen.  
  
 Obwohl die Auflistung, auf die von der-Eigenschaft verwiesen wird, schreibgeschützt ist, können Sie Sie verwenden, um auf die einzelnen Objekte in der Auflistung zuzugreifen und Sie Programm gesteuert zu bearbeiten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>-Eigenschaft Programm gesteuert verwenden, um auf einzelne <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Zonen-Steuerelemente zuzugreifen. Beachten Sie, dass im deklarativen Markup für die Webseite zwei `<asp:webpartzone>` Elemente vorhanden sind, die jeweils ein Server Steuerelement enthalten. Im `<script>` Abschnitt der Seite verwendet der Code die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>-Eigenschaft für den Zugriff auf die einzelnen Zonen, das Auflisten aller Zonen-IDs und das anschließende Ändern der Hintergrundfarbe in der zweiten Zone.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Zones#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/CS/wpmgrzonescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Zones#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/VB/wpmgrzonesvb.aspx#1)]  
  
 Beachten Sie, dass Sie, damit das Codebeispiel funktioniert, eine Einstellung in der Datei "Web. config" hinzufügen müssen, um das Exportieren Webparts Beschreibungsdateien zu ermöglichen. Stellen Sie sicher, dass Sie über eine Web. config-Datei im gleichen Verzeichnis wie die Webseite für dieses Codebeispiel verfügen. Stellen Sie im `<system.web>` Abschnitt sicher, dass ein `<webParts>`-Element vorhanden ist, bei dem ein `enableExport`-Attribut auf `true`festgelegt ist, wie im folgenden Markup.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Wenn Sie nach dem Laden der Seite in einen Browser auf die Schaltfläche **Zonen-IDs auflisten** klicken, verwendet der Code die <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>-Eigenschaft, um die IDs aller Zonen in der Sammlung aufzulisten. Wenn Sie auf die Schaltfläche **BackColor der Änderungs Zone** klicken, ändert der Code die Hintergrundfarbe der zweiten Zone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
