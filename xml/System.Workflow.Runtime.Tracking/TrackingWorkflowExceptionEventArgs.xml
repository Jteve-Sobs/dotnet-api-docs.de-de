<Type Name="TrackingWorkflowExceptionEventArgs" FullName="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="52617aa641ee54b4345bab3f8ce535d5d2709e91" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37487032" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TrackingWorkflowExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingWorkflowExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type TrackingWorkflowExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enthält Daten, die einer Ausnahme zugeordnet sind, die während der Ausführung einer Workflowinstanz auftritt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Wenn während der Ausführung einer Workflowinstanz eine Ausnahme auftritt und ein <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, das einer Workflowinstanz zugeordnet ist, einen <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> einschließt, der für eine <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Exception?displayProperty=nameWithType> konfiguriert ist, dann legt die Laufzeitverfolgungsinfrastruktur <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> auf eine <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>in dem <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> fest, der an den Überwachungsdienst gesendet wird.  
  
> [!NOTE]
>  <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> wird nur von der Laufzeitverfolgungsinfrastruktur verwendet, um Informationen in einem <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> zu übergeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Methode mit der Bezeichnung `WriteExceptionEventArgs` veranschaulicht, die <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> erfasst. Mit dem Code wird überprüft, ob die <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A>-Eigenschaft `null` (`Nothing` in Visual Basic) ist.  
  
 Wenn nicht, schreibt der Code die Meldung, die der <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A>-Eigenschaft zugeordnet ist, in die Konsole . Darüber hinaus konvertiert der Code den Wert der <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A>-Eigenschaft in eine Zeichenfolge und schreibt sie in die Konsole.  
  
 Dieses Codebeispiel stammt aus dem EventArgs Tracking SDK-Beispiel in der Datei Program.cs. Weitere Informationen finden Sie unter [EventArgs-Überwachungsbeispiel](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContextGuid">
      <MemberSignature Language="C#" Value="public Guid ContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContextGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextGuid : Guid" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Kontext-ID der zugeordneten Aktivität ab.</summary>
        <value>
          <see cref="T:System.Guid" /> mit der Kontext-ID von <see cref="T:System.Workflow.ComponentModel.Activity" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentActivityPath">
      <MemberSignature Language="C#" Value="public string CurrentActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentActivityPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentActivityPath : string" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> der Aktivität ab, die die Ausnahme gerade auslöst.</summary>
        <value>
          <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> der Aktivität, die die Ausnahme gerade auslöst.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmen werden in der Aktivitätenkette des Ausnahmehandler weitergegeben. Ein Ausnahmehandler löst eine Ausnahme möglicherweise erneut aus. Wenn ein Ausnahmehandler eine Ausnahme erneut auslöst, wird ein neues Ausnahmeverfolgungsereignis mit einem neuen <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> für die Laufzeitverfolgungsinfrastruktur ausgelöst. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath%2A> verweist auf die Aktivität, die die Ausnahme gerade auslöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Exception" /> ab, die gerade von der Workflowinstanz ausgelöst wird.</summary>
        <value>Die Ausnahme, die gerade von der Workflowinstanz ausgelöst wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird eine Methode mit der Bezeichnung `WriteExceptionEventArgs` veranschaulicht, die <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> erfasst. Mit dem Code wird überprüft, ob die <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A>-Eigenschaft `null` (`Nothing` in Visual Basic) ist. Wenn nicht, schreibt der Code die Meldung, die der <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A>-Eigenschaft zugeordnet ist, in die Konsole . Wenn Exception `null` ist (`Nothing`), konvertiert der Code den Wert der <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A>-Eigenschaft in eine Zeichenfolge und schreibt sie in die Konsole.  
  
 Dieses Codebeispiel stammt aus dem EventArgs Tracking SDK-Beispiel in der Datei Program.cs. Weitere Informationen finden Sie unter [EventArgs-Überwachungsbeispiel](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalActivityPath">
      <MemberSignature Language="C#" Value="public string OriginalActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalActivityPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalActivityPath : string" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> der Aktivität ab, die ursprünglich die Ausnahme ausgelöst hat.</summary>
        <value>
          <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> der Aktivität, die ursprünglich die Ausnahme ausgelöst hat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmen werden in der Aktivitätenkette des Ausnahmehandler weitergegeben. Ein Ausnahmehandler löst eine Ausnahme möglicherweise erneut aus. Wenn ein Ausnahmehandler eine Ausnahme erneut auslöst, wird ein neues Ausnahmeverfolgungsereignis mit einem neuen <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> für die Laufzeitverfolgungsinfrastruktur ausgelöst. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> verweist auf die Aktivität, die die Ausnahme ursprünglich ausgelöst hat.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Methode mit der Bezeichnung `WriteExceptionEventArgs` veranschaulicht, die <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> erfasst. Mit dem Code wird überprüft, ob die <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A>-Eigenschaft `null` (`Nothing` in Visual Basic) ist. Wenn nicht, schreibt der Code die Meldung, die der <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A>-Eigenschaft zugeordnet ist, in die Konsole . Wenn <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> `null` (`Nothing`) ist, konvertiert der Code den Wert der <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A>-Eigenschaft in eine Zeichenfolge und schreibt sie in die Konsole.  
  
 Dieses Codebeispiel stammt aus dem EventArgs Tracking SDK-Beispiel in der Datei Program.cs. Weitere Informationen finden Sie unter [EventArgs-Überwachungsbeispiel](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContextGuid">
      <MemberSignature Language="C#" Value="public Guid ParentContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ParentContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ParentContextGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentContextGuid : Guid" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Kontext-ID der übergeordneten Aktivität ab.</summary>
        <value>
          <see cref="T:System.Guid" /> mit der Kontext-ID der übergeordneten <see cref="T:System.Workflow.ComponentModel.Activity" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>