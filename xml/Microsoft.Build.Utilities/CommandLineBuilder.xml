<Type Name="CommandLineBuilder" FullName="Microsoft.Build.Utilities.CommandLineBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6120a4c154138c73795b279e908074772ad3d8ef" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86709256" /></Metadata><TypeSignature Language="C#" Value="public class CommandLineBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandLineBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.CommandLineBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandLineBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineBuilder" />
  <TypeSignature Language="F#" Value="type CommandLineBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b2802-101">(1) stellen Sie sicher, dass Werte, die Bindestriche enthalten, in Anführungszeichen eingeschlossen werden (RC zumindest erfordert dies) (2) versehen Sie alle eingebetteten Anführungszeichen.</span><span class="sxs-lookup"><span data-stu-id="b2802-101">(1) Make sure values containing hyphens are quoted (RC at least requires this) (2) Escape any embedded quotes.</span></span> <span data-ttu-id="b2802-102">--Literale doppelte Anführungszeichen sollten in der Form nicht "" geschrieben werden: umgekehrte Schrägstriche, die \" unmittelbar vor dem doppelten von doppelten Anführungszeichen fallen.</span><span class="sxs-lookup"><span data-stu-id="b2802-102">-- Literal double quotes should be written in the form \" not "" -- Backslashes falling just before doublequotes must be doubled.</span></span>
<span data-ttu-id="b2802-103">--Literale doppelte Anführungszeichen können nur in Paaren vorkommen (Sie können ein einzelnes literales doppeltes Anführungszeichen nicht übergeben)--funktionale doppelte Anführungszeichen (z. b. zur Handhabung von Leerzeichen) werden am besten in Switches wie/dname = Value um den Namen und den Wert herum gesetzt.</span><span class="sxs-lookup"><span data-stu-id="b2802-103">-- Literal double quotes can only occur in pairs (you cannot pass a single literal double quote) -- Functional double quotes (for example to handle spaces) are best put around both name and value in switches like /Dname=value.</span></span></summary>
    <remarks><span data-ttu-id="b2802-104">Im folgenden finden Sie einige Experimente mit Experimenten, die den/D-Schalter mit dem cl-und RC-Präprozessor verwenden.</span><span class="sxs-lookup"><span data-stu-id="b2802-104">Below are some quoting experiments, using the /D switch with the CL and RC preprocessor.</span></span>
<span data-ttu-id="b2802-105">Der/D-Schalter ist ein wenig komplizierter als die meisten Switches, da er ein Name-Wert-Paar hat.</span><span class="sxs-lookup"><span data-stu-id="b2802-105">The /D switch is a little more tricky than most switches, because it has a name=value pair.</span></span>
<span data-ttu-id="b2802-106">In der folgenden Tabelle ist dargestellt, was der Präprozessor tatsächlich einbettet, wenn der Switch in der ersten Spalte übermittelt wird:</span><span class="sxs-lookup"><span data-stu-id="b2802-106">The table below contains what the preprocessor actually embeds when passed the switch in the first column:</span></span> 
<span data-ttu-id="b2802-107">Cl über Cmd Line cl via Response file rc/DFOO = "a" a</span><span class="sxs-lookup"><span data-stu-id="b2802-107">CL via cmd line         CL via response file       RC /DFOO="A"                A                   A</span></span>   
                 <span data-ttu-id="b2802-108">/D "foo =" a "" a a/DFOO = a a</span><span class="sxs-lookup"><span data-stu-id="b2802-108">/D"FOO="A""              A                   A                       A /DFOO=A                  A                   A</span></span>   
                 <span data-ttu-id="b2802-109">/D "foo = a" a</span><span class="sxs-lookup"><span data-stu-id="b2802-109">/D"FOO=A"                A                   A</span></span>   
                 <span data-ttu-id="b2802-110">/DFOO = "" a "a" a</span><span class="sxs-lookup"><span data-stu-id="b2802-110">/DFOO=""A""              A                   A                       A</span></span> 
<span data-ttu-id="b2802-111">/DFOO = a "a" \" \"             "a"/DFOO = "" "a" "", a "Broken" a "/D" foo = \" a "" a "a" \" /D "foo =" "a" "" ".</span><span class="sxs-lookup"><span data-stu-id="b2802-111">/DFOO=\"A\"             "A"                                         "A" /DFOO="""A"""           "A"                broken                   "A" /D"FOO=\"A\""           "A"                                         "A" /D"FOO=""A"""           "A"                                         "A"</span></span> 
<span data-ttu-id="b2802-112">/DFOO = "a b" a b a b/D "foo = a b" a b a b</span><span class="sxs-lookup"><span data-stu-id="b2802-112">/DFOO="A B"             A B                 A B /D"FOO=A B"             A B                 A B</span></span> 
<span data-ttu-id="b2802-113">/D "foo =" a B "" beschädigt</span><span class="sxs-lookup"><span data-stu-id="b2802-113">/D"FOO="A B""          broken</span></span>      
                 <span data-ttu-id="b2802-114">/DFOO = \" a B \"          beschädigt</span><span class="sxs-lookup"><span data-stu-id="b2802-114">/DFOO=\"A B\"          broken</span></span>      
                 <span data-ttu-id="b2802-115">/D "foo = a b" a b "a b" a b " \" \" /D" foo = "" a b "" "" a b "beschädigt</span><span class="sxs-lookup"><span data-stu-id="b2802-115">/D"FOO=\"A B\""        "A B"               "A B"                   "A B" /D"FOO=""A B"""        "A B"               broken                  broken</span></span> 
<span data-ttu-id="b2802-116">Aus meinen Experimenten (nur mit cl und RC) scheint es, dass--Literale doppelte Anführungszeichen am zuverlässigsten in der Form "" geschrieben werden, d \" ... umgekehrte Schrägstriche, die unmittelbar vor doppelten Anführungszeichen fallen.</span><span class="sxs-lookup"><span data-stu-id="b2802-116">From my experiments (with CL and RC only) it seems that -- Literal double quotes are most reliably written in the form \" not "" -- Backslashes falling just before doublequotes must be doubled.</span></span>
<span data-ttu-id="b2802-117">--Werte mit literalen doppelten Anführungszeichen müssen in Anführungszeichen eingeschlossen werden</span><span class="sxs-lookup"><span data-stu-id="b2802-117">-- Values containing literal double quotes must be quoted.</span></span>
<span data-ttu-id="b2802-118">--Literale doppelte Anführungszeichen können nur paarweise vorkommen (Sie können ein einzelnes literales doppeltes Anführungszeichen nicht übergeben)--bei/dname = Value-Stil Schaltern sind funktionale doppelte Anführungszeichen (z. b. zur Handhabung von Leerzeichen) am besten um den Namen und den Wert beschränkt (anders ausgedrückt: diese Arten von Schaltern benötigen keine besondere Behandlung für die Zeichen "=").</span><span class="sxs-lookup"><span data-stu-id="b2802-118">-- Literal double quotes can only occur in pairs (you cannot pass a single literal double quote) -- For /Dname=value style switches, functional double quotes (for example to handle spaces) are best put around both name and value (in other words, these kinds of switches don't need special treatment for their '=' signs).</span></span>
<span data-ttu-id="b2802-119">--Werte, die Bindestriche enthalten, müssen in Anführungszeichen eingeschlossen werden. RC erfordert dies, und CL hat keinen Sinn.</span><span class="sxs-lookup"><span data-stu-id="b2802-119">-- Values containing hyphens should be quoted; RC requires this, and CL does not mind.</span></span></remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2802-120">Konstruktor</span><span class="sxs-lookup"><span data-stu-id="b2802-120">Constructor</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2802-121">Standardkonstruktor</span><span class="sxs-lookup"><span data-stu-id="b2802-121">Default constructor</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2802-122">Im folgenden Beispiel wird eine erstellt <xref:Microsoft.Build.Utilities.ToolTask> , die [Ilasm.exe (Il-Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler)ausführt.</span><span class="sxs-lookup"><span data-stu-id="b2802-122">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="b2802-123">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder> <xref:Microsoft.Build.Utilities.ToolLocationHelper> -,-und- <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die zum Ausführen der Aufgabe benötigten Informationen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b2802-123">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder (bool quoteHyphensOnCommandLine);" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool quoteHyphensOnCommandLine) cil managed" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (quoteHyphensOnCommandLine As Boolean)" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder(bool quoteHyphensOnCommandLine);" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CommandLineBuilder : bool -&gt; Microsoft.Build.Utilities.CommandLineBuilder" Usage="new Microsoft.Build.Utilities.CommandLineBuilder quoteHyphensOnCommandLine" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="quoteHyphensOnCommandLine" Type="System.Boolean" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="quoteHyphensOnCommandLine"><span data-ttu-id="b2802-124">Bei true müssen Bindestriche in Anführungszeichen gesetzt werden.</span><span class="sxs-lookup"><span data-stu-id="b2802-124">If true, hyphens should be quoted.</span></span></param>
        <summary><span data-ttu-id="b2802-125">Standardkonstruktor</span><span class="sxs-lookup"><span data-stu-id="b2802-125">Default constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder (bool quoteHyphensOnCommandLine, bool useNewLineSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool quoteHyphensOnCommandLine, bool useNewLineSeparator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (quoteHyphensOnCommandLine As Boolean, useNewLineSeparator As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder(bool quoteHyphensOnCommandLine, bool useNewLineSeparator);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CommandLineBuilder : bool * bool -&gt; Microsoft.Build.Utilities.CommandLineBuilder" Usage="new Microsoft.Build.Utilities.CommandLineBuilder (quoteHyphensOnCommandLine, useNewLineSeparator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="quoteHyphensOnCommandLine" Type="System.Boolean" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
        <Parameter Name="useNewLineSeparator" Type="System.Boolean" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore" />
      </Parameters>
      <Docs>
        <param name="quoteHyphensOnCommandLine">To be added.</param>
        <param name="useNewLineSeparator">To be added.</param>
        <summary><span data-ttu-id="b2802-126">Standardkonstruktor</span><span class="sxs-lookup"><span data-stu-id="b2802-126">Default constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNameIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2802-127">Fügt an die Befehlszeile den durch den Parameter dargestellten Dateinamen an, und fügt bei Bedarf Anführungszeichen ein.</span><span class="sxs-lookup"><span data-stu-id="b2802-127">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2802-128">Im folgenden Beispiel wird eine erstellt <xref:Microsoft.Build.Utilities.ToolTask> , die [Ilasm.exe (Il-Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler)ausführt.</span><span class="sxs-lookup"><span data-stu-id="b2802-128">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="b2802-129">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder> <xref:Microsoft.Build.Utilities.ToolLocationHelper> -,-und- <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die zum Ausführen der Aufgabe benötigten Informationen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b2802-129">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (Microsoft.Build.Framework.ITaskItem fileItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(class Microsoft.Build.Framework.ITaskItem fileItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileItem As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(Microsoft::Build::Framework::ITaskItem ^ fileItem);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItem" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="fileItem"><span data-ttu-id="b2802-130">Dateiname, der angefügt werden soll. Wenn dieser NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-130">File name to append, if it's null this method has no effect</span></span></param>
        <summary><span data-ttu-id="b2802-131">Fügt ggf. einen Dateinamen an, der ihn angibt.</span><span class="sxs-lookup"><span data-stu-id="b2802-131">Appends a file name quoting it if necessary.</span></span>
<span data-ttu-id="b2802-132">Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Dateinamen.</span><span class="sxs-lookup"><span data-stu-id="b2802-132">This method appends a space to the command line (if it's not currently empty) before the file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-133">Diese Methode fügt eine Aufgaben Element Spezifikation an die Befehlszeile an und umgibt die Aufgaben Element Spezifikation bei Bedarf mit Anführungszeichen.</span><span class="sxs-lookup"><span data-stu-id="b2802-133">This method appends the command line with a task item specification, and surrounds task item specification with quotations marks as necessary.</span></span>  
  
 <span data-ttu-id="b2802-134">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor der Aufgaben Element Spezifikation auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-134">If the command line is not empty, then this method also appends the command line with a space, before the task item specification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-135">Im folgenden Beispiel wird eine erstellt <xref:Microsoft.Build.Utilities.ToolTask> , die [Ilasm.exe (Il-Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler)ausführt.</span><span class="sxs-lookup"><span data-stu-id="b2802-135">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="b2802-136">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder> <xref:Microsoft.Build.Utilities.ToolLocationHelper> -,-und- <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die zum Ausführen der Aufgabe benötigten Informationen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b2802-136">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-137">Anzeigen der Version der Zeichen folgen Überladung</span><span class="sxs-lookup"><span data-stu-id="b2802-137">See the string overload version</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b2802-138">Dateiname, der angefügt werden soll. Wenn dieser NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-138">File name to append, if it's null this method has no effect</span></span></param>
        <summary><span data-ttu-id="b2802-139">Fügt ggf. einen Dateinamen an, der ihn angibt.</span><span class="sxs-lookup"><span data-stu-id="b2802-139">Appends a file name quoting it if necessary.</span></span>
<span data-ttu-id="b2802-140">Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Dateinamen.</span><span class="sxs-lookup"><span data-stu-id="b2802-140">This method appends a space to the command line (if it's not currently empty) before the file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-141">Diese Methode fügt einen Dateinamen an die Befehlszeile an und schließt den Dateinamen nach Bedarf in Anführungszeichen ein.</span><span class="sxs-lookup"><span data-stu-id="b2802-141">This method appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="b2802-142">Wenn das erste Zeichen des Datei namens ein Bindestrich ist, `.\` wird am Anfang des Datei namens hinzugefügt, um ihn von einem Switch zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="b2802-142">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="b2802-143">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile auch ein Leerzeichen vor dem Dateinamen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-143">If the command line is not empty, then this method also appends the command line with a space, before the file name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-144">`AppendFileNameIfNotNull("-StrangeFileName.cs")` ergibt `.\-StrangeFileName.cs` .</span><span class="sxs-lookup"><span data-stu-id="b2802-144">`AppendFileNameIfNotNull("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-145">Appenddateinameiedateienotnull ("-StrangeFileName.cs") = &gt; ". \- StrangeFileName.cs "</span><span class="sxs-lookup"><span data-stu-id="b2802-145">AppendFileNameIfNotNull("-StrangeFileName.cs") =&gt; ".\-StrangeFileName.cs"</span></span></example>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNamesIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2802-146">Fügt eine Liste von Dateinamen an die Befehlszeile an und fügt Anführungszeichen ein, sofern erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b2802-146">Appends the command line with a list of file names, inserting quotation marks if necessary.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(class Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileItems As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ fileItems, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileItems, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItems" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileItems"><span data-ttu-id="b2802-147">Anzufügende Aufgaben Elemente, wenn NULL diese Methode keine Auswirkung hat</span><span class="sxs-lookup"><span data-stu-id="b2802-147">Task items to append, if null this method has no effect</span></span></param>
        <param name="delimiter"><span data-ttu-id="b2802-148">Trennzeichen, das zwischen Elementen in der Befehlszeile eingefügt werden soll</span><span class="sxs-lookup"><span data-stu-id="b2802-148">Delimiter to put between items in the command line</span></span></param>
        <summary><span data-ttu-id="b2802-149">Fügt ein Array von ITaskItem-Spezifikationen als Dateinamen an, wobei Sie ggf. durch ein Trennzeichen getrennt werden.</span><span class="sxs-lookup"><span data-stu-id="b2802-149">Appends array of ITaskItem specs as file names, quoting them if necessary, delimited by a delimiter.</span></span>
<span data-ttu-id="b2802-150">Diese Methode fügt der Befehlszeile ein Leerzeichen (sofern es nicht leer ist) vor den Dateinamen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-150">This method appends a space to the command line (if it's not currently empty) before the file names.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-151">Diese Methode fügt die Befehlszeile mit Dateinamen an und umgibt die Dateinamen in Anführungszeichen, wenn dies erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="b2802-151">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="b2802-152">Die Dateinamen werden durch das angegebene Trennzeichen getrennt.</span><span class="sxs-lookup"><span data-stu-id="b2802-152">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="b2802-153">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile auch ein Leerzeichen vor den Dateinamen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-153">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-154">Siehe Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A> .</span><span class="sxs-lookup"><span data-stu-id="b2802-154">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-155">Anzeigen der Überladungs Version der Zeichenfolge []</span><span class="sxs-lookup"><span data-stu-id="b2802-155">See the string[] overload version</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (string[] fileNames, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(string[] fileNames, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileNames As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;System::String ^&gt; ^ fileNames, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : string[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileNames, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileNames"><span data-ttu-id="b2802-156">Anzufügende Dateinamen, wenn der Wert NULL ist, hat diese Methode keine Auswirkung</span><span class="sxs-lookup"><span data-stu-id="b2802-156">File names to append, if it's null this method has no effect</span></span></param>
        <param name="delimiter"><span data-ttu-id="b2802-157">Das Trennzeichen zwischen Dateinamen.</span><span class="sxs-lookup"><span data-stu-id="b2802-157">The delimiter between file names</span></span></param>
        <summary><span data-ttu-id="b2802-158">Fügt ein Array von Dateinamen Zeichenfolgen an, wobei diese bei Bedarf durch ein Trennzeichen getrennt werden.</span><span class="sxs-lookup"><span data-stu-id="b2802-158">Appends array of file name strings, quoting them if necessary, delimited by a delimiter.</span></span>
<span data-ttu-id="b2802-159">Diese Methode fügt der Befehlszeile ein Leerzeichen (sofern es nicht leer ist) vor den Dateinamen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-159">This method appends a space to the command line (if it's not currently empty) before the file names.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-160">Diese Methode fügt die Befehlszeile mit Dateinamen an und umgibt die Dateinamen in Anführungszeichen, wenn dies erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="b2802-160">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="b2802-161">Die Dateinamen werden durch das angegebene Trennzeichen getrennt.</span><span class="sxs-lookup"><span data-stu-id="b2802-161">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="b2802-162">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile auch ein Leerzeichen vor den Dateinamen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-162">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-163">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` ergibt `Alpha.cs,Beta.cs` .</span><span class="sxs-lookup"><span data-stu-id="b2802-163">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` yields `Alpha.cs,Beta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-164">Appendfilename amesiatnotnull (New String [] {"alpha.cs", "Beta.cs"}, ",") = &gt; "alpha. cs, Beta. cs"</span><span class="sxs-lookup"><span data-stu-id="b2802-164">AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",") =&gt; "Alpha.cs,Beta.cs"</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendFileNameWithQuoting (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendFileNameWithQuoting(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendFileNameWithQuoting (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendFileNameWithQuoting(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameWithQuoting fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b2802-165">Der anzufügende Dateiname.</span><span class="sxs-lookup"><span data-stu-id="b2802-165">The file name to append</span></span></param>
        <summary><span data-ttu-id="b2802-166">Fügt einen Dateinamen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-166">Appends a file name.</span></span> <span data-ttu-id="b2802-167">Anführungszeichen werden hinzugefügt, wenn Sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="b2802-167">Quotes are added if they are needed.</span></span> <span data-ttu-id="b2802-168">, Wenn das erste Zeichen des Datei namens ein Bindestrich ist, ". \" wird vorangestellt, um zu vermeiden, dass der Dateiname mit einem Switch verwirrend ist. diese Methode fügt vor der Ausführung kein Leerzeichen an die Befehlszeile an.</span><span class="sxs-lookup"><span data-stu-id="b2802-168">If the first character of the file name is a dash, ".\" is prepended to avoid confusing the file name with a switch This method does not append a space to the command line before executing.</span></span></summary>
        <remarks><span data-ttu-id="b2802-169">In Zukunft kann diese Funktion "Text" fixieren, um Literale eingebettete Anführungszeichen zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="b2802-169">In the future, this function may fixup 'text' to handle literal embedded quotes.</span></span></remarks>
        <example><span data-ttu-id="b2802-170">Appenddateinamewithzitat ("-StrangeFileName.cs") = &gt; ". \- StrangeFileName.cs "</span><span class="sxs-lookup"><span data-stu-id="b2802-170">AppendFileNameWithQuoting("-StrangeFileName.cs") =&gt; ".\-StrangeFileName.cs"</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendQuotedTextToBuffer">
      <MemberSignature Language="C#" Value="protected void AppendQuotedTextToBuffer (System.Text.StringBuilder buffer, string unquotedTextToAppend);" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendQuotedTextToBuffer(class System.Text.StringBuilder buffer, string unquotedTextToAppend) cil managed" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendQuotedTextToBuffer (buffer As StringBuilder, unquotedTextToAppend As String)" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendQuotedTextToBuffer(System::Text::StringBuilder ^ buffer, System::String ^ unquotedTextToAppend);" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AppendQuotedTextToBuffer : System.Text.StringBuilder * string -&gt; unit" Usage="commandLineBuilder.AppendQuotedTextToBuffer (buffer, unquotedTextToAppend)" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="unquotedTextToAppend" Type="System.String" Index="1" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer" />
        <param name="unquotedTextToAppend" />
        <summary><span data-ttu-id="b2802-171">Fügt bestimmten Text bei Bedarf nach dem ersten Zitieren zum Puffer hinzu.</span><span class="sxs-lookup"><span data-stu-id="b2802-171">Appends given text to the buffer after first quoting the text if necessary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSpaceIfNotEmpty">
      <MemberSignature Language="C#" Value="protected void AppendSpaceIfNotEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendSpaceIfNotEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendSpaceIfNotEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendSpaceIfNotEmpty();" />
      <MemberSignature Language="F#" Value="member this.AppendSpaceIfNotEmpty : unit -&gt; unit" Usage="commandLineBuilder.AppendSpaceIfNotEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2802-172">Fügen Sie der angegebenen Zeichenfolge ein Leerzeichen oder eine neue Zeile hinzu, wenn Sie nicht leer ist.</span><span class="sxs-lookup"><span data-stu-id="b2802-172">Add a space or newline to the specified string if and only if it's not empty.</span></span></summary>
        <remarks><span data-ttu-id="b2802-173">Dabei handelt es sich um eine ziemlich undeutliche Methode, die nur geerbte Klassen zur Verfügung steht.</span><span class="sxs-lookup"><span data-stu-id="b2802-173">This is a pretty obscure method and so it's only available to inherited classes.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitch">
      <MemberSignature Language="C#" Value="public void AppendSwitch (string switchName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitch(string switchName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitch (switchName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitch(System::String ^ switchName);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitch : string -&gt; unit" Usage="commandLineBuilder.AppendSwitch switchName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-174">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-174">The switch to append to the command line, may not be null</span></span></param>
        <summary><span data-ttu-id="b2802-175">Fügt einen Befehls Zeilenschalter an, der über keinen separaten Wert verfügt, ohne Anführungs-Werte zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="b2802-175">Appends a command-line switch that has no separate value, without any quoting.</span></span>
<span data-ttu-id="b2802-176">Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Switch.</span><span class="sxs-lookup"><span data-stu-id="b2802-176">This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-177">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-177">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-178">Im folgenden Beispiel wird eine erstellt <xref:Microsoft.Build.Utilities.ToolTask> , die [Ilasm.exe (Il-Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler)ausführt.</span><span class="sxs-lookup"><span data-stu-id="b2802-178">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="b2802-179">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder> <xref:Microsoft.Build.Utilities.ToolLocationHelper> -,-und- <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die zum Ausführen der Aufgabe benötigten Informationen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b2802-179">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-180">Appendswitch ("/utf8output") = &gt; "/utf8output"</span><span class="sxs-lookup"><span data-stu-id="b2802-180">AppendSwitch("/utf8output") =&gt; "/utf8output"</span></span></example>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2802-181">Fügt einen Schalter an die Befehlszeile an.</span><span class="sxs-lookup"><span data-stu-id="b2802-181">Appends the command line with a switch.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-182">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-182">The switch to append to the command line, may not be null</span></span></param>
        <param name="parameter"><span data-ttu-id="b2802-183">Wechseln Sie ggf. in Anführungszeichen.</span><span class="sxs-lookup"><span data-stu-id="b2802-183">Switch parameter to append, quoted if necessary.</span></span> <span data-ttu-id="b2802-184">Wenn der Wert NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-184">If null, this method has no effect.</span></span></param>
        <summary><span data-ttu-id="b2802-185">Anfügen eines Schalters [Überladung] Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Switch.</span><span class="sxs-lookup"><span data-stu-id="b2802-185">Append a switch [overload] This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-186">Diese Methode kapselt einzelne Dateinamen in Anführungszeichen, wenn erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b2802-186">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="b2802-187">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-187">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-188">Siehe Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A> .</span><span class="sxs-lookup"><span data-stu-id="b2802-188">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-189">Anzeigen der Version der Zeichen folgen Überladung</span><span class="sxs-lookup"><span data-stu-id="b2802-189">See the string overload version</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-190">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-190">The switch to append to the command line, may not be null</span></span></param>
        <param name="parameter"><span data-ttu-id="b2802-191">Wechseln Sie ggf. in Anführungszeichen.</span><span class="sxs-lookup"><span data-stu-id="b2802-191">Switch parameter to append, quoted if necessary.</span></span> <span data-ttu-id="b2802-192">Wenn der Wert NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-192">If null, this method has no effect.</span></span></param>
        <summary><span data-ttu-id="b2802-193">Fügt einen Befehls Zeilenschalter an, der einen einzelnen Zeichen folgen Parameter annimmt und ggf. den-Parameter angibt.</span><span class="sxs-lookup"><span data-stu-id="b2802-193">Appends a command-line switch that takes a single string parameter, quoting the parameter if necessary.</span></span>
<span data-ttu-id="b2802-194">Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Switch.</span><span class="sxs-lookup"><span data-stu-id="b2802-194">This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-195">Diese Methode kapselt einzelne Dateinamen in Anführungszeichen, wenn erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b2802-195">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="b2802-196">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-196">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-197">`AppendSwitchIfNotNull("/source:", "File Name.cs")` ergibt `/source:\"File Name.cs\"` .</span><span class="sxs-lookup"><span data-stu-id="b2802-197">`AppendSwitchIfNotNull("/source:", "File Name.cs")` yields `/source:\"File Name.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-198">Appendswitchif notNull ("/Source:", "File Name.cs") = &gt; "/Source: \" File Name.cs \" "</span><span class="sxs-lookup"><span data-stu-id="b2802-198">AppendSwitchIfNotNull("/source:", "File Name.cs") =&gt; "/source:\"File Name.cs\""</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-199">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-199">The switch to append to the command line, may not be null</span></span></param>
        <param name="parameters"><span data-ttu-id="b2802-200">Wechseln Sie ggf. zu angewendeende Parameter.</span><span class="sxs-lookup"><span data-stu-id="b2802-200">Switch parameters to append, quoted if necessary.</span></span> <span data-ttu-id="b2802-201">Wenn der Wert NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-201">If null, this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="b2802-202">Das Trennzeichen, das zwischen einzelnen Parametern eingefügt werden soll, darf nicht NULL sein (möglicherweise leer).</span><span class="sxs-lookup"><span data-stu-id="b2802-202">Delimiter to put between individual parameters, may not be null (may be empty)</span></span></param>
        <summary><span data-ttu-id="b2802-203">Fügt einen Befehls Zeilenschalter an, der einen ITaskItem []-Parameter annimmt, und fügt die einzelnen Dateinamen bei Bedarf in doppelte Anführungszeichen ein.</span><span class="sxs-lookup"><span data-stu-id="b2802-203">Appends a command-line switch that takes a ITaskItem[] parameter, and add double-quotes around the individual filenames if necessary.</span></span>
<span data-ttu-id="b2802-204">Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Switch.</span><span class="sxs-lookup"><span data-stu-id="b2802-204">This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-205">Diese Methode kapselt einzelne Dateinamen in Anführungszeichen, wenn erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b2802-205">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="b2802-206">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-206">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-207">Siehe Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A> .</span><span class="sxs-lookup"><span data-stu-id="b2802-207">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-208">Anzeigen der Überladungs Version der Zeichenfolge []</span><span class="sxs-lookup"><span data-stu-id="b2802-208">See the string[] overload version</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-209">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-209">The switch to append to the command line, may not be null</span></span></param>
        <param name="parameters"><span data-ttu-id="b2802-210">Wechseln Sie ggf. zu angewendeende Parameter.</span><span class="sxs-lookup"><span data-stu-id="b2802-210">Switch parameters to append, quoted if necessary.</span></span> <span data-ttu-id="b2802-211">Wenn der Wert NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-211">If null, this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="b2802-212">Das Trennzeichen, das zwischen einzelnen Parametern eingefügt werden soll, darf nicht NULL sein (möglicherweise leer).</span><span class="sxs-lookup"><span data-stu-id="b2802-212">Delimiter to put between individual parameters, may not be null (may be empty)</span></span></param>
        <summary><span data-ttu-id="b2802-213">Fügt einen Befehls Zeilenschalter an, der einen String []-Parameter annimmt, und fügt die einzelnen Dateinamen bei Bedarf in doppelte Anführungszeichen ein.</span><span class="sxs-lookup"><span data-stu-id="b2802-213">Appends a command-line switch that takes a string[] parameter, and add double-quotes around the individual filenames if necessary.</span></span>
<span data-ttu-id="b2802-214">Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Switch.</span><span class="sxs-lookup"><span data-stu-id="b2802-214">This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-215">Diese Methode kapselt einzelne Dateinamen in Anführungszeichen, wenn erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b2802-215">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="b2802-216">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-216">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-217">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` ergibt `/sources:Alpha.cs;\"Be ta.cs\"` .</span><span class="sxs-lookup"><span data-stu-id="b2802-217">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;\"Be ta.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-218">Appendswitchif notNull ("/Sources:", New String [] {"alpha.cs", "Be ta.cs"}, ";") = &gt; "/Sources: alpha. cs; \" Ta.cs lauten \" "</span><span class="sxs-lookup"><span data-stu-id="b2802-218">AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";") =&gt; "/sources:Alpha.cs;\"Be ta.cs\""</span></span></example>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchUnquotedIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2802-219">Fügt einen Schalter an die Befehlszeile an, ohne die Schalterparameter mit Anführungszeichen zu kapseln.</span><span class="sxs-lookup"><span data-stu-id="b2802-219">Appends the command line with a switch, without attempting to encapsulate the switch parameters with quotation marks.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-220">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-220">The switch to append to the command line, may not be null</span></span></param>
        <param name="parameter"><span data-ttu-id="b2802-221">Switch-Parameter zum Anfügen, nicht in Anführungszeichen eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="b2802-221">Switch parameter to append, not quoted.</span></span> <span data-ttu-id="b2802-222">Wenn der Wert NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-222">If null, this method has no effect.</span></span></param>
        <summary><span data-ttu-id="b2802-223">Fügt den literalparameter an, ohne zu versuchen, anzugeben.</span><span class="sxs-lookup"><span data-stu-id="b2802-223">Appends the literal parameter without trying to quote.</span></span>
<span data-ttu-id="b2802-224">Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Switch.</span><span class="sxs-lookup"><span data-stu-id="b2802-224">This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-225">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-225">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-226">Siehe Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A> .</span><span class="sxs-lookup"><span data-stu-id="b2802-226">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-227">Anzeigen der Version der Zeichen folgen Überladung</span><span class="sxs-lookup"><span data-stu-id="b2802-227">See the string overload version</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-228">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-228">The switch to append to the command line, may not be null</span></span></param>
        <param name="parameter"><span data-ttu-id="b2802-229">Switch-Parameter zum Anfügen, nicht in Anführungszeichen eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="b2802-229">Switch parameter to append, not quoted.</span></span> <span data-ttu-id="b2802-230">Wenn der Wert NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-230">If null, this method has no effect.</span></span></param>
        <summary><span data-ttu-id="b2802-231">Fügt den literalparameter an, ohne zu versuchen, anzugeben.</span><span class="sxs-lookup"><span data-stu-id="b2802-231">Appends the literal parameter without trying to quote.</span></span>
<span data-ttu-id="b2802-232">Diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Switch.</span><span class="sxs-lookup"><span data-stu-id="b2802-232">This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-233">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-233">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-234">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` ergibt `/source:File Name.cs` .</span><span class="sxs-lookup"><span data-stu-id="b2802-234">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` yields `/source:File Name.cs`.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-235">Appendswitchunquotedif notNull ("/Source:", "File Name.cs") = &gt; "/Source: File Name.cs"</span><span class="sxs-lookup"><span data-stu-id="b2802-235">AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs") =&gt; "/source:File Name.cs"</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-236">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-236">The switch to append to the command line, may not be null</span></span></param>
        <param name="parameters"><span data-ttu-id="b2802-237">Parameter zum Anfügen und nicht in Anführungszeichen wechseln.</span><span class="sxs-lookup"><span data-stu-id="b2802-237">Switch parameters to append, not quoted.</span></span> <span data-ttu-id="b2802-238">Wenn der Wert NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-238">If null, this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="b2802-239">Das Trennzeichen, das zwischen einzelnen Parametern eingefügt werden soll, darf nicht NULL sein (möglicherweise leer).</span><span class="sxs-lookup"><span data-stu-id="b2802-239">Delimiter to put between individual parameters, may not be null (may be empty)</span></span></param>
        <summary><span data-ttu-id="b2802-240">Fügt einen Befehls Zeilenschalter an, der einen ITaskItem []-Parameter annimmt, ohne die einzelnen Parameter anzugeben. diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist).</span><span class="sxs-lookup"><span data-stu-id="b2802-240">Appends a command-line switch that takes a ITaskItem[] parameter, not quoting the individual parameters This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-241">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-241">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-242">Siehe Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A> .</span><span class="sxs-lookup"><span data-stu-id="b2802-242">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-243">Anzeigen der Überladungs Version der Zeichenfolge []</span><span class="sxs-lookup"><span data-stu-id="b2802-243">See the string[] overload version</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-244">Der Schalter, der an die Befehlszeile angefügt werden soll, darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="b2802-244">The switch to append to the command line, may not be null</span></span></param>
        <param name="parameters"><span data-ttu-id="b2802-245">Parameter zum Anfügen und nicht in Anführungszeichen wechseln.</span><span class="sxs-lookup"><span data-stu-id="b2802-245">Switch parameters to append, not quoted.</span></span> <span data-ttu-id="b2802-246">Wenn der Wert NULL ist, hat diese Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="b2802-246">If null, this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="b2802-247">Das Trennzeichen, das zwischen einzelnen Parametern eingefügt werden soll, darf nicht NULL sein (möglicherweise leer).</span><span class="sxs-lookup"><span data-stu-id="b2802-247">Delimiter to put between individual parameters, may not be null (may be empty)</span></span></param>
        <summary><span data-ttu-id="b2802-248">Fügt einen Befehls Zeilenschalter an, der einen String []-Parameter annimmt, ohne die einzelnen Parameter anzugeben. diese Methode fügt ein Leerzeichen an die Befehlszeile an (sofern Sie nicht leer ist) vor dem Switch.</span><span class="sxs-lookup"><span data-stu-id="b2802-248">Appends a command-line switch that takes a string[] parameter, not quoting the individual parameters This method appends a space to the command line (if it's not currently empty) before the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-249">Wenn die Befehlszeile nicht leer ist, fügt diese Methode der Befehlszeile vor dem Switch auch ein Leerzeichen an.</span><span class="sxs-lookup"><span data-stu-id="b2802-249">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2802-250">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` ergibt `/sources:Alpha.cs;Be ta.cs` .</span><span class="sxs-lookup"><span data-stu-id="b2802-250">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;Be ta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
        <example><span data-ttu-id="b2802-251">Appendswitchunquotedif notNull ("/Sources:", New String [] {"alpha.cs", "Be ta.cs"}, ";") = &gt; "/Sources: alpha. cs; Ta.cs lauten "</span><span class="sxs-lookup"><span data-stu-id="b2802-251">AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";") =&gt; "/sources:Alpha.cs;Be ta.cs"</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendTextUnquoted">
      <MemberSignature Language="C#" Value="public void AppendTextUnquoted (string textToAppend);" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextUnquoted(string textToAppend) cil managed" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextUnquoted (textToAppend As String)" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextUnquoted(System::String ^ textToAppend);" FrameworkAlternate="msbuild-15;msbuild-15-netcore;msbuild-16;msbuild-16-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AppendTextUnquoted : string -&gt; unit" Usage="commandLineBuilder.AppendTextUnquoted textToAppend" />
      <MemberSignature Language="C#" Value="protected void AppendTextUnquoted (string textToAppend);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendTextUnquoted(string textToAppend) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendTextUnquoted (textToAppend As String)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendTextUnquoted(System::String ^ textToAppend);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend"><span data-ttu-id="b2802-252">Die anzufügende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="b2802-252">The string to append</span></span></param>
        <summary><span data-ttu-id="b2802-253">Fügt eine Zeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="b2802-253">Appends a string.</span></span> <span data-ttu-id="b2802-254">Es werden keine Anführungszeichen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="b2802-254">No quotes are added.</span></span>
<span data-ttu-id="b2802-255">Diese Methode fügt vor der Ausführung kein Leerzeichen an die Befehlszeile an.</span><span class="sxs-lookup"><span data-stu-id="b2802-255">This method does not append a space to the command line before executing.</span></span></summary>
        <remarks><span data-ttu-id="b2802-256">In Zukunft kann diese Funktion "texttoappend" fixieren, um Literale eingebettete Anführungszeichen zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="b2802-256">In the future, this function may fixup 'textToAppend' to handle literal embedded quotes.</span></span></remarks>
        <example><span data-ttu-id="b2802-257">Appendtextunnotierten ( @"Folder name\filename.cs" ) = &gt; "Ordnername \\ filename.cs"</span><span class="sxs-lookup"><span data-stu-id="b2802-257">AppendTextUnquoted(@"Folder name\filename.cs") =&gt; "Folder name\\filename.cs"</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendTextWithQuoting (string textToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendTextWithQuoting(string textToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendTextWithQuoting (textToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendTextWithQuoting(System::String ^ textToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendTextWithQuoting textToAppend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend"><span data-ttu-id="b2802-258">Die anzufügende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="b2802-258">The string to append</span></span></param>
        <summary><span data-ttu-id="b2802-259">Fügt eine Zeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="b2802-259">Appends a string.</span></span> <span data-ttu-id="b2802-260">Anführungszeichen werden hinzugefügt, wenn Sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="b2802-260">Quotes are added if they are needed.</span></span>
<span data-ttu-id="b2802-261">Diese Methode fügt vor der Ausführung kein Leerzeichen an die Befehlszeile an.</span><span class="sxs-lookup"><span data-stu-id="b2802-261">This method does not append a space to the command line before executing.</span></span></summary>
        <remarks><span data-ttu-id="b2802-262">Schützt alle doppelten Anführungszeichen in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="b2802-262">Escapes any double quotes in the string.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="protected System.Text.StringBuilder CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder CommandLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CommandLine As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Text::StringBuilder ^ CommandLine { System::Text::StringBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : System.Text.StringBuilder" Usage="Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2802-263">Ruft die private StringBuilder-Instanz für erbende Klassen ab.</span><span class="sxs-lookup"><span data-stu-id="b2802-263">Retrieves the private StringBuilder instance for inheriting classes</span></span></summary>
        <value><span data-ttu-id="b2802-264">Ein <see cref="T:System.Text.StringBuilder" /> für erbende Klassen.</span><span class="sxs-lookup"><span data-stu-id="b2802-264">A <see cref="T:System.Text.StringBuilder" /> for inheriting classes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQuotingRequired">
      <MemberSignature Language="C#" Value="protected virtual bool IsQuotingRequired (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsQuotingRequired(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsQuotingRequired (parameter As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsQuotingRequired(System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member IsQuotingRequired : string -&gt; bool&#xA;override this.IsQuotingRequired : string -&gt; bool" Usage="commandLineBuilder.IsQuotingRequired parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="b2802-265">die Zeichenfolge, die auf Zeichen überprüft wird, die Anführungszeichen erfordern</span><span class="sxs-lookup"><span data-stu-id="b2802-265">the string to examine for characters that require quoting</span></span></param>
        <summary><span data-ttu-id="b2802-266">Überprüft den angegebenen Switch-Parameter, um festzustellen, ob er in Anführungszeichen gesetzt werden muss.</span><span class="sxs-lookup"><span data-stu-id="b2802-266">Checks the given switch parameter to see if it must/can be quoted.</span></span></summary>
        <returns><span data-ttu-id="b2802-267">true, wenn der Parameter in Anführungszeichen eingeschlossen werden soll.</span><span class="sxs-lookup"><span data-stu-id="b2802-267">true, if parameter should be quoted</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2802-268">Gibt die Länge des aktuellen Befehls zurück.</span><span class="sxs-lookup"><span data-stu-id="b2802-268">Returns the length of the current command</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="commandLineBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2802-269">Gibt die Befehlszeile als Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="b2802-269">Return the command-line as a string.</span></span></summary>
        <returns />
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2802-270">Im folgenden Beispiel wird eine erstellt <xref:Microsoft.Build.Utilities.ToolTask> , die [Ilasm.exe (Il-Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler)ausführt.</span><span class="sxs-lookup"><span data-stu-id="b2802-270">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="b2802-271">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder> <xref:Microsoft.Build.Utilities.ToolLocationHelper> -,-und- <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die zum Ausführen der Aufgabe benötigten Informationen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b2802-271">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 <span data-ttu-id="b2802-272">msbuild_ToolTask Nr. 1</span><span class="sxs-lookup"><span data-stu-id="b2802-272">msbuild_ToolTask#1</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyThrowNoEmbeddedDoubleQuotes">
      <MemberSignature Language="C#" Value="protected virtual void VerifyThrowNoEmbeddedDoubleQuotes (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VerifyThrowNoEmbeddedDoubleQuotes(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VerifyThrowNoEmbeddedDoubleQuotes (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void VerifyThrowNoEmbeddedDoubleQuotes(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit&#xA;override this.VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit" Usage="commandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="b2802-273">SwitchName für Fehlermeldung</span><span class="sxs-lookup"><span data-stu-id="b2802-273">Switch name for error message</span></span></param>
        <param name="parameter"><span data-ttu-id="b2802-274">Zu überprüfenden Parameter wechseln</span><span class="sxs-lookup"><span data-stu-id="b2802-274">Switch parameter to scan</span></span></param>
        <summary><span data-ttu-id="b2802-275">Wird ausgelöst, wenn der Parameter ein doppeltes Anführungszeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="b2802-275">Throws if the parameter has a double-quote in it.</span></span> <span data-ttu-id="b2802-276">Dies wird verwendet, um die Parameter Injektion zu verhindern.</span><span class="sxs-lookup"><span data-stu-id="b2802-276">This is used to prevent parameter injection.</span></span> <span data-ttu-id="b2802-277">Es ist virtuell, sodass Tools diese Methode überschreiben können, wenn in Dateinamen Anführungszeichen mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b2802-277">It's virtual so that tools can override this method if they want to have quotes escaped in filenames</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2802-278"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> ist eine virtuelle Methode, damit Ihre Anwendungen diese Methode überschreiben können, wenn Sie in Dateinamen mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b2802-278"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> is a virtual method so that your applications can override this method if you want to allow double-quotes escaped in filenames.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
