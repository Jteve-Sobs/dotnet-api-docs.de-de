<Type Name="CommandLineBuilder" FullName="Microsoft.Build.Utilities.CommandLineBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a603b956f755b3371675eb89333aa6cb85bff1fc" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39980638" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommandLineBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandLineBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.CommandLineBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandLineBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineBuilder" />
  <TypeSignature Language="F#" Value="type CommandLineBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9d154-101">Umfasst Hilfsprogrammmethoden zum Erstellen einer Befehlszeile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d154-101">Comprises utility methods for constructing a command line.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d154-102">Das folgende Beispiel erstellt eine <xref:Microsoft.Build.Utilities.ToolTask> ausführungsläufen [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="9d154-102">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="9d154-103">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, und <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die erforderlichen Informationen zum Ausführen der Aufgabe zu generieren.</span><span class="sxs-lookup"><span data-stu-id="9d154-103">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d154-104">Konstruktor</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-104">Constructor</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d154-105">Initialisiert eine neue Instanz der <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d154-106">Das folgende Beispiel erstellt eine <xref:Microsoft.Build.Utilities.ToolTask> ausführungsläufen [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="9d154-106">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="9d154-107">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, und <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die erforderlichen Informationen zum Ausführen der Aufgabe zu generieren.</span><span class="sxs-lookup"><span data-stu-id="9d154-107">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder (bool quoteHyphensOnCommandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool quoteHyphensOnCommandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (quoteHyphensOnCommandLine As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder(bool quoteHyphensOnCommandLine);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CommandLineBuilder : bool -&gt; Microsoft.Build.Utilities.CommandLineBuilder" Usage="new Microsoft.Build.Utilities.CommandLineBuilder quoteHyphensOnCommandLine" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="quoteHyphensOnCommandLine" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="quoteHyphensOnCommandLine">
          <span data-ttu-id="9d154-108">Bei true müssen Bindestriche in Anführungszeichen gesetzt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-108">If true, hyphens should be quoted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-109">Standardkonstruktor</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-109">Default constructor</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNameIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d154-110">Fügt an die Befehlszeile den durch den Parameter dargestellten Dateinamen an, und fügt bei Bedarf Anführungszeichen ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-110">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d154-111">Das folgende Beispiel erstellt eine <xref:Microsoft.Build.Utilities.ToolTask> ausführungsläufen [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="9d154-111">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="9d154-112">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, und <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die erforderlichen Informationen zum Ausführen der Aufgabe zu generieren.</span><span class="sxs-lookup"><span data-stu-id="9d154-112">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (Microsoft.Build.Framework.ITaskItem fileItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(class Microsoft.Build.Framework.ITaskItem fileItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileItem As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(Microsoft::Build::Framework::ITaskItem ^ fileItem);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItem" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="fileItem">
          <span data-ttu-id="9d154-113">Die Aufgabenelementspezifikation, die an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-113">The task item specification to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-114">Wenn diese <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-114">If it is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-115">Fügt den Dateinamen des angegebenen <see cref="T:Microsoft.Build.Framework.ITaskItem" />-Objekts an die Befehlszeile an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-115">Appends the command line with the file name of the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-116">Diese Methode fügt an die Befehlszeile mit der eine Aufgabenelementspezifikation und Aufgabenelementspezifikation in Anführungszeichen ein, nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="9d154-116">This method appends the command line with a task item specification, and surrounds task item specification with quotations marks as necessary.</span></span>  
  
 <span data-ttu-id="9d154-117">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie die Aufgabenelementspezifikation.</span><span class="sxs-lookup"><span data-stu-id="9d154-117">If the command line is not empty, then this method also appends the command line with a space, before the task item specification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-118">Das folgende Beispiel erstellt eine <xref:Microsoft.Build.Utilities.ToolTask> ausführungsläufen [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="9d154-118">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="9d154-119">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, und <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die erforderlichen Informationen zum Ausführen der Aufgabe zu generieren.</span><span class="sxs-lookup"><span data-stu-id="9d154-119">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="9d154-120">Der anzufügende Dateiname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-120">The file name to append.</span>
          </span>
          <span data-ttu-id="9d154-121">Wenn diese <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-121">If it is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-122">Fügt an die Befehlszeile den durch den Parameter dargestellten Dateinamen an, und fügt bei Bedarf Anführungszeichen ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-122">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-123">Diese Methode fügt an die Befehlszeile mit einem Dateinamen, und schließt den Dateinamen in Anführungszeichen ein, nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="9d154-123">This method appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="9d154-124">Wenn das erste Zeichen des Dateinamens einen Gedankenstrich, dann ist `.\` hinzugefügt wird, auf den Anfang der Datei von einem Switch zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="9d154-124">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="9d154-125">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, vor dem Dateinamen.</span><span class="sxs-lookup"><span data-stu-id="9d154-125">If the command line is not empty, then this method also appends the command line with a space, before the file name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-126">`AppendFileNameIfNotNull("-StrangeFileName.cs")` ergibt `.\-StrangeFileName.cs`.</span><span class="sxs-lookup"><span data-stu-id="9d154-126">`AppendFileNameIfNotNull("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNamesIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d154-127">Fügt eine Liste von Dateinamen an die Befehlszeile an und fügt Anführungszeichen ein, sofern erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-127">Appends the command line with a list of file names, inserting quotation marks if necessary.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(class Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileItems As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ fileItems, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileItems, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItems" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileItems">
          <span data-ttu-id="9d154-128">Die Aufgabenelementspezifikationen, die angefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-128">The task item specifications to append.</span>
          </span>
          <span data-ttu-id="9d154-129">Wenn das Array gleich <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-129">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="9d154-130">Das Trennzeichen, das in der Befehlszeile zwischen Aufgabenelementspezifikationen eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-130">The delimiter to put between task item specifications in the command line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-131">Fügt die Liste der Dateinamen, die im angegebenen <see cref="T:Microsoft.Build.Framework.ITaskItem" />-Array enthalten sind, an die Befehlszeile an, wobei die Namen durch das angegebene Trennzeichen voneinander getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-131">Appends the command line with the list of file names in the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> array, separated by the specified delimiter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-132">Diese Methode fügt an die Befehlszeile mit dem Dateinamen und schließt die Dateinamen in Anführungszeichen ein, nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="9d154-132">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="9d154-133">Die Dateinamen werden durch das angegebene Trennzeichen getrennt.</span><span class="sxs-lookup"><span data-stu-id="9d154-133">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="9d154-134">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Dateinamen.</span><span class="sxs-lookup"><span data-stu-id="9d154-134">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-135">Siehe das Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d154-135">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (string[] fileNames, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(string[] fileNames, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileNames As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;System::String ^&gt; ^ fileNames, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : string[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileNames, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileNames">
          <span data-ttu-id="9d154-136">Die anzufügenden Dateinamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-136">The file names to append.</span>
          </span>
          <span data-ttu-id="9d154-137">Wenn das Array gleich <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-137">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="9d154-138">Das Trennzeichen, das in der Befehlszeile zwischen Dateinamen eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-138">The delimiter to put between file names in the command line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-139">Fügt die Liste der Dateinamen, die im angegebenen <see langword="string" />-Array enthalten sind, an die Befehlszeile an, wobei die Namen durch das angegebene Trennzeichen voneinander getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-139">Appends the command line with the list of file names in the specified <see langword="string" /> array, separated by the specified delimiter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-140">Diese Methode fügt an die Befehlszeile mit dem Dateinamen und schließt die Dateinamen in Anführungszeichen ein, nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="9d154-140">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="9d154-141">Die Dateinamen werden durch das angegebene Trennzeichen getrennt.</span><span class="sxs-lookup"><span data-stu-id="9d154-141">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="9d154-142">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Dateinamen.</span><span class="sxs-lookup"><span data-stu-id="9d154-142">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-143">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` ergibt `Alpha.cs,Beta.cs`.</span><span class="sxs-lookup"><span data-stu-id="9d154-143">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` yields `Alpha.cs,Beta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendFileNameWithQuoting (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendFileNameWithQuoting(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendFileNameWithQuoting (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendFileNameWithQuoting(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameWithQuoting fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="9d154-144">Der anzufügende Dateiname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-144">The file name to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-145">Fügt einen Dateinamen an die Befehlszeile an und schließt den Dateinamen in Anführungszeichen ein, sofern erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-145">Appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-146">Wenn das erste Zeichen des Dateinamens einen Gedankenstrich, dann ist `.\` hinzugefügt wird, auf den Anfang der Datei von einem Switch zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="9d154-146">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="9d154-147">Diese Methode fügt der Befehlszeile aus mit einem Leerzeichen, nicht vor der Ausführung.</span><span class="sxs-lookup"><span data-stu-id="9d154-147">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-148">`AppendFileNameWithQuoting("-StrangeFileName.cs")` ergibt `.\-StrangeFileName.cs`.</span><span class="sxs-lookup"><span data-stu-id="9d154-148">`AppendFileNameWithQuoting("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendQuotedTextToBuffer">
      <MemberSignature Language="C#" Value="protected void AppendQuotedTextToBuffer (System.Text.StringBuilder buffer, string unquotedTextToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendQuotedTextToBuffer(class System.Text.StringBuilder buffer, string unquotedTextToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendQuotedTextToBuffer (buffer As StringBuilder, unquotedTextToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendQuotedTextToBuffer(System::Text::StringBuilder ^ buffer, System::String ^ unquotedTextToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendQuotedTextToBuffer : System.Text.StringBuilder * string -&gt; unit" Usage="commandLineBuilder.AppendQuotedTextToBuffer (buffer, unquotedTextToAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Text.StringBuilder" />
        <Parameter Name="unquotedTextToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9d154-149">Der Puffer, an den der Text angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-149">The buffer to append to.</span>
          </span>
        </param>
        <param name="unquotedTextToAppend">
          <span data-ttu-id="9d154-150">Der zu zitierende Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-150">The text to be quoted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-151">Fügt bestimmten Text bei Bedarf nach dem ersten Zitieren zum Puffer hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-151">Appends given text to the buffer after first quoting the text if necessary.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSpaceIfNotEmpty">
      <MemberSignature Language="C#" Value="protected void AppendSpaceIfNotEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendSpaceIfNotEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendSpaceIfNotEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendSpaceIfNotEmpty();" />
      <MemberSignature Language="F#" Value="member this.AppendSpaceIfNotEmpty : unit -&gt; unit" Usage="commandLineBuilder.AppendSpaceIfNotEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d154-152">Fügt ein Leerzeichen zur angegebenen Zeichenfolge hinzu, vorausgesetzt die Zeichenfolge ist nicht leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-152">Adds a space to the specified string, given the string is not empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-153">Diese Methode ist nur in der geerbten Klassen zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="9d154-153">This method is only available to inherited classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitch">
      <MemberSignature Language="C#" Value="public void AppendSwitch (string switchName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitch(string switchName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitch (switchName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitch(System::String ^ switchName);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitch : string -&gt; unit" Usage="commandLineBuilder.AppendSwitch switchName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-154">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-154">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-155">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-155">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-156">Fügt der Befehlszeile den angegebenen Schalter an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-156">Appends the command line with the specified switch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-157">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-157">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-158">Das folgende Beispiel erstellt eine <xref:Microsoft.Build.Utilities.ToolTask> ausführungsläufen [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="9d154-158">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="9d154-159">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, und <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die erforderlichen Informationen zum Ausführen der Aufgabe zu generieren.</span><span class="sxs-lookup"><span data-stu-id="9d154-159">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d154-160">Fügt einen Schalter an die Befehlszeile an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-160">Appends the command line with a switch.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-161">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-161">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-162">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-162">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="9d154-163">Der Schalterparameter, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-163">The switch parameter to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-164">Anführungszeichen werden bei Bedarf hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-164">Quotation marks will be added as necessary.</span>
          </span>
          <span data-ttu-id="9d154-165">Wenn dieser Wert <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-165">If this value is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-166">Fügt einen Schalter an die Befehlszeile an, der eine Aufgabenelementspezifikation verwendet, die als einzelner Zeichenfolgenparameter fungiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-166">Appends the command line with a switch that takes a task item specification that acts a single string parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-167">Diese Methode kapselt, einzelne Dateinamen in Anführungszeichen ein, nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="9d154-167">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="9d154-168">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-168">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-169">Siehe das Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d154-169">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-170">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-170">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-171">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-171">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="9d154-172">Der Schalterparameter, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-172">The switch parameter to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-173">Anführungszeichen werden bei Bedarf hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-173">Quotation marks will be added as necessary.</span>
          </span>
          <span data-ttu-id="9d154-174">Wenn dieser Wert <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-174">If this value is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-175">Fügt eine Schalter an die Befehlszeile an, der einen einzigen Zeichenfolgenparameter akzeptiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-175">Appends the command line with a switch that takes a single string parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-176">Diese Methode kapselt, einzelne Dateinamen in Anführungszeichen ein, nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="9d154-176">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="9d154-177">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-177">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-178">`AppendSwitchIfNotNull("/source:", "File Name.cs")` ergibt `/source:\"File Name.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="9d154-178">`AppendSwitchIfNotNull("/source:", "File Name.cs")` yields `/source:\"File Name.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-179">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-179">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-180">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-180">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="9d154-181">Ein Array von Schalterparametern, die der Befehlszeile angefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-181">An array of switch parameters to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-182">Anführungszeichen werden bei Bedarf hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-182">Quotation marks will be added as necessary.</span>
          </span>
          <span data-ttu-id="9d154-183">Wenn das Array gleich <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-183">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="9d154-184">Das Trennzeichen, das die einzelnen Parameter voneinander trennt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-184">The delimiter that separates individual parameters.</span>
          </span>
          <span data-ttu-id="9d154-185">Dieser Wert darf leer, nicht jedoch <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-185">This value can be empty, but it cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-186">Fügt einen Schalter an die Befehlszeile an, der ein Array von Aufgabenelementspezifikation verwendet, die als Zeichenfolgenparameter fungieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-186">Appends the command line with a switch that takes an array of task item specifications that act as string parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-187">Diese Methode kapselt, einzelne Dateinamen in Anführungszeichen ein, nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="9d154-187">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="9d154-188">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-188">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-189">Siehe das Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d154-189">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-190">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-190">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-191">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-191">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="9d154-192">Ein Array von Schalterparametern, die der Befehlszeile angefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-192">An array of switch parameters to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-193">Anführungszeichen werden bei Bedarf hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-193">Quotation marks will be added as necessary.</span>
          </span>
          <span data-ttu-id="9d154-194">Wenn das Array gleich <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-194">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="9d154-195">Das Trennzeichen, das die einzelnen Parameter voneinander trennt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-195">The delimiter that separates individual parameters.</span>
          </span>
          <span data-ttu-id="9d154-196">Dieser Wert darf leer, nicht jedoch <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-196">This value can be empty, but it cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-197">Fügt der Befehlszeile einen Schalter an, der ein Zeichenfolgenarray akzeptiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-197">Appends the command line with a switch that takes an array of string parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-198">Diese Methode kapselt, einzelne Dateinamen in Anführungszeichen ein, nach Bedarf.</span><span class="sxs-lookup"><span data-stu-id="9d154-198">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="9d154-199">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-199">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-200">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` ergibt `/sources:Alpha.cs;\"Be ta.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="9d154-200">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;\"Be ta.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchUnquotedIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d154-201">Fügt einen Schalter an die Befehlszeile an, ohne die Schalterparameter mit Anführungszeichen zu kapseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-201">Appends the command line with a switch, without attempting to encapsulate the switch parameters with quotation marks.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-202">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-202">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-203">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-203">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="9d154-204">Der Schalterparameter, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-204">The switch parameter to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-205">Es werden keine Anführungszeichen hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-205">Quotation marks will not be added.</span>
          </span>
          <span data-ttu-id="9d154-206">Wenn dieser Wert <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-206">If this value is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-207">Fügt an die Befehlszeile einen Schalter an, der eine Aufgabenelementspezifikation als einen einzelnen Zeichenfolgenparameter akzeptiert. Dabei wird nicht versucht, den Schalterparameter mit Anführungszeichen zu kapseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-207">Appends the command line with a switch that takes a task item specification as a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-208">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-208">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-209">Siehe das Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d154-209">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-210">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-210">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-211">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-211">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="9d154-212">Der Schalterparameter, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-212">The switch parameter to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-213">Es werden keine Anführungszeichen hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-213">Quotation marks will not be added.</span>
          </span>
          <span data-ttu-id="9d154-214">Wenn dieser Wert <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-214">If this value is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-215">Fügt an die Befehlszeile einen Schalter an, der einen einzelnen Zeichenfolgenparameter akzeptiert. Dabei wird nicht versucht, den Schalterparameter mit Anführungszeichen zu kapseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-215">Appends the command line with a switch that takes a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-216">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-216">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-217">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` ergibt `/source:File Name.cs`.</span><span class="sxs-lookup"><span data-stu-id="9d154-217">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` yields `/source:File Name.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-218">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-218">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-219">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-219">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="9d154-220">Ein Array von Schalterparametern, die an die Befehlszeile angefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-220">An array of switch parameters to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-221">Es werden keine Anführungszeichen hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-221">Quotation marks will not be added.</span>
          </span>
          <span data-ttu-id="9d154-222">Wenn das Array gleich <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-222">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="9d154-223">Das Trennzeichen, das die einzelnen Parameter voneinander trennt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-223">The delimiter that separates individual parameters.</span>
          </span>
          <span data-ttu-id="9d154-224">Dieser Wert darf leer, nicht jedoch <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-224">This value can be empty, but it cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-225">Fügt an die Befehlszeile einen Schalter an, der ein Array von Aufgabenelementspezifikationen enthält, die als Zeichenfolgenparameter fungieren. Dabei wird nicht versucht, die Parameter mit Anführungszeichen zu kapseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-225">Appends the command line with a switch that takes an array of task item specifications that act as string parameters, without attempting to encapsulate them with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-226">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-226">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-227">Siehe das Beispiel in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d154-227">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-228">Der Name des Schalters, der an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-228">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-229">Dieser Wert darf nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-229">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="9d154-230">Ein Array von Schalterparametern, die an die Befehlszeile angefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-230">An array of switch parameters to append to the command line.</span>
          </span>
          <span data-ttu-id="9d154-231">Es werden keine Anführungszeichen hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-231">Quotation marks will not be added.</span>
          </span>
          <span data-ttu-id="9d154-232">Wenn das Array gleich <see langword="null" /> ist, hat diese Methode keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-232">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="9d154-233">Das Trennzeichen, das die einzelnen Parameter voneinander trennt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-233">The delimiter that separates individual parameters.</span>
          </span>
          <span data-ttu-id="9d154-234">Dieser Wert darf leer, nicht jedoch <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-234">This value can be empty, but it cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-235">Fügt an die Befehlszeile einen Schalter an, der ein Array von Zeichenfolgenparametern akzeptiert. Dabei wird nicht versucht, die Schalterparameter mit Anführungszeichen zu kapseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-235">Appends the command line with a switch that takes an array of string parameters, without attempting to encapsulate switch parameters with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-236">Wenn die Befehlszeile nicht leer ist, fügt diese Methode auch die Befehlszeile mit einem Leerzeichen, bevor Sie den Switch.</span><span class="sxs-lookup"><span data-stu-id="9d154-236">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-237">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` ergibt `/sources:Alpha.cs;Be ta.cs`.</span><span class="sxs-lookup"><span data-stu-id="9d154-237">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;Be ta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextUnquoted">
      <MemberSignature Language="C#" Value="public void AppendTextUnquoted (string textToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextUnquoted(string textToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextUnquoted (textToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextUnquoted(System::String ^ textToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendTextUnquoted : string -&gt; unit" Usage="commandLineBuilder.AppendTextUnquoted textToAppend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend">
          <span data-ttu-id="9d154-238">Die Zeichenfolge, die an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-238">The string to append to the command line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-239">Fügt eine Zeichenfolge an die Befehlszeile an, ohne zu versuchen, die Zeichenfolge in Anführungszeichen einzuschließen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-239">Appends the command line with string, without attempting to encapsulate the string with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-240">Diese Methode fügt der Befehlszeile aus mit einem Leerzeichen, nicht vor der Ausführung.</span><span class="sxs-lookup"><span data-stu-id="9d154-240">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-241">`AppendTextUnquoted(@"Folder name\filename.cs")` ergibt `Folder name\\filename.cs`.</span><span class="sxs-lookup"><span data-stu-id="9d154-241">`AppendTextUnquoted(@"Folder name\filename.cs")` yields `Folder name\\filename.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendTextWithQuoting (string textToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendTextWithQuoting(string textToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendTextWithQuoting (textToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendTextWithQuoting(System::String ^ textToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendTextWithQuoting textToAppend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend">
          <span data-ttu-id="9d154-242">Die Zeichenfolge, die an die Befehlszeile angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-242">The string to append to the command line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-243">Fügt eine Zeichenfolge an die Befehlszeile an und schließt die Zeichenfolge in Anführungszeichen ein, sofern erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-243">Appends the command line with string, and surrounds the string with quotations marks as necessary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-244">Diese Methode fügt der Befehlszeile aus mit einem Leerzeichen, nicht vor der Ausführung.</span><span class="sxs-lookup"><span data-stu-id="9d154-244">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d154-245">`AppendTextWithQuoting(@"Folder name\filename.cs")` ergibt `\"Folder name\\filename.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="9d154-245">`AppendTextWithQuoting(@"Folder name\filename.cs")` yields `\"Folder name\\filename.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="protected System.Text.StringBuilder CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder CommandLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CommandLine As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Text::StringBuilder ^ CommandLine { System::Text::StringBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : System.Text.StringBuilder" Usage="Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d154-246">Ruft die <see cref="T:System.Text.StringBuilder" />-Instanz ab, die die Befehlszeile für erbende Klassen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-246">Gets the <see cref="T:System.Text.StringBuilder" /> instance representing the command line for inheriting classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d154-247">Ein <see cref="T:System.Text.StringBuilder" /> für erbende Klassen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-247">A <see cref="T:System.Text.StringBuilder" /> for inheriting classes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQuotingRequired">
      <MemberSignature Language="C#" Value="protected virtual bool IsQuotingRequired (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsQuotingRequired(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsQuotingRequired (parameter As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsQuotingRequired(System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member IsQuotingRequired : string -&gt; bool&#xA;override this.IsQuotingRequired : string -&gt; bool" Usage="commandLineBuilder.IsQuotingRequired parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="9d154-248">Die Zeichenfolge, die auf Zeichen überprüft wird, die Anführungszeichen erfordern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-248">The string to examine for characters that require quotation marks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-249">Bestimmt, ob der angegebene Zeichenfolgenparameter in Anführungszeichen eingeschlossen werden muss, da er Leerzeichen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-249">Determines whether the specified string parameter should be surrounded with quotation marks because it contains white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d154-250">
            <see langword="true" />, wenn der Schalterparameter in Anführungszeichen eingeschlossen werden muss, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-250">
              <see langword="true" />, if the switch parameter should be surrounded with quotation marks; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d154-251">Stellt die Länge der Befehlszeile dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-251">Represents the length of the command line.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="commandLineBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d154-252">Gibt die Befehlszeile als Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-252">Returns the command line as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d154-253">Ein <see cref="T:System.String" />, der die Befehlszeile darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-253">A <see cref="T:System.String" /> that represents the command line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d154-254">Das folgende Beispiel erstellt eine <xref:Microsoft.Build.Utilities.ToolTask> ausführungsläufen [Ilasm.exe (IL-Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="9d154-254">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="9d154-255">Die <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, und <xref:Microsoft.Build.Utilities.TaskLoggingHelper> Klassen werden verwendet, um die erforderlichen Informationen zum Ausführen der Aufgabe zu generieren.</span><span class="sxs-lookup"><span data-stu-id="9d154-255">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 <span data-ttu-id="9d154-256">msbuild_ToolTask#1</span><span class="sxs-lookup"><span data-stu-id="9d154-256">msbuild_ToolTask#1</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyThrowNoEmbeddedDoubleQuotes">
      <MemberSignature Language="C#" Value="protected virtual void VerifyThrowNoEmbeddedDoubleQuotes (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VerifyThrowNoEmbeddedDoubleQuotes(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VerifyThrowNoEmbeddedDoubleQuotes (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void VerifyThrowNoEmbeddedDoubleQuotes(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit&#xA;override this.VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit" Usage="commandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="9d154-257">Eine Zeichenfolge, die den Parameternamen für die Fehlermeldung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-257">A string representing the switch name for the error message.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="9d154-258">Eine Zeichenfolge, die den Parameter darstellt, der auf doppelte Anführungszeichen durchsucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-258">A string representing the switch parameter to scan for double-quotes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d154-259">Gibt einen Fehler zurück, wenn der Befehlszeilenparameter ein doppeltes Anführungszeichen (") enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-259">Returns an error if the command line parameter contains a double-quote (") character.</span>
          </span>
          <span data-ttu-id="9d154-260">Da doppelte Anführungszeichen in Befehlszeilenparametern ungültig sind, lassen sich durch diese Methode Parametereinschleusungsangriffe verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d154-260">Because double quotes are illegal in command line parameters, this method helps prevent parameter injection attacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d154-261"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> ist eine virtuelle Methode, sodass Ihre Anwendungen diese Methode überschreiben können, wenn Sie zulassen, doppelte Anführungszeichen mit Escapezeichen versehen, in Dateinamen möchten.</span><span class="sxs-lookup"><span data-stu-id="9d154-261"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> is a virtual method so that your applications can override this method if you want to allow double-quotes escaped in filenames.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>