<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c037fb8f480f5c1333bda7055a455b07d7bee02a" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86341928" /></Metadata><TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fcd8d-101">Dies ist eine Multiplexing-Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-101">This is a multiplexing logger.</span></span> <span data-ttu-id="fcd8d-102">Der Zweck dieser Protokollierung besteht darin, die Registrierung und Registrierung mehrerer Protokollierungen während des Builds zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-102">The purpose of this logger is to allow the registration and deregistration of multiple loggers during the build.</span></span> <span data-ttu-id="fcd8d-103">Dies dient zur Unterstützung des VS-IDE-Szenarios, in dem Protokollierungen für die Buildanforderung jedes Projekt Systems registriert und deren Registrierung aufgehoben werden.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-103">This is to support the VS IDE scenario where loggers are registered and unregistered for each project system's build request.</span></span> <span data-ttu-id="fcd8d-104">Dies bedeutet, dass ein physischer Build mehrere logische Builds aufweisen kann, die jeweils über einen eigenen Satz von Protokollierungen verfügen.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-104">This means one physical build may have multiple logical builds each with their own set of loggers.</span></span> 
            
<span data-ttu-id="fcd8d-105">Der Mux-Logger registriert sich selbst beim Build-Manager als reguläre zentrale/l-Protokollierungs Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-105">The Mux logger will register itself with the build manager as a regular central /l style logger.</span></span> <span data-ttu-id="fcd8d-106">Er ist verantwortlich für den Empfang von Nachrichten vom Build-Manager und die Weiterleitung an die richtige Protokollierung basierend auf dem logischen Build, von dem die Nachricht stammt.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-106">It will be responsible for receiving messages from the build manager and route them to the correct logger based on the logical build the message came from.</span></span>
            
<span data-ttu-id="fcd8d-107">Anforderungen: 1) die Multiplexing-Protokollierung wird am Anfang des buildbuilds alle Protokollierungen registriert, die registriert wurden, bevor der Build-Manager tatsächlich gestartet wurde. das Ereignis "Build Started" wird zur gleichen Zeit wie bei der Mux-Protokollierung protokolliert. alle Protokollierungen, die nach dem Start des Build-Managers registriert wurden, erhalten ein synthesiertes Build Started-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-107">Requirements: 1) Multiplexing logger will be registered at the beginning of the build manager's Begin build Any loggers registered before the build manager actually started building will get the build started event at the same time as the MUX logger Any loggers registered after the build manager starts the build will get a synthesised build started event.</span></span> <span data-ttu-id="fcd8d-108">Das Ereignis kann nicht zwischengespeichert werden, da der Zeitstempel des Build Started-Ereignisses bestimmt wird, wenn das Ereignis erstellt wird. das Zwischenspeichern des Ereignisses würde zu falschen Buildzeiten in den Protokollierungen, die für die MUX registriert sind.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-108">The event cannot be cached because the timestamp of the build started event is determined when the event is created, caching the event would give incorrect build times in the loggers registered to the MUX.</span></span>
                    
<span data-ttu-id="fcd8d-109">2) die MUX-Protokollierung wird vom Build-Manager initialisiert.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-109">2) The MUX logger will be initialized by the build manager.</span></span>
<span data-ttu-id="fcd8d-110">Die MUX überwacht alle Ereignisse auf der Ereignis Quelle vom Build-Manager und leitet Ereignisse ordnungsgemäß an die registrierten Protokollierungen weiter.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-110">The mux will listen to all events on the event source from the build manager and will route events correctly to the registered loggers.</span></span>
                
<span data-ttu-id="fcd8d-111">3) der Mux-Logger wird heruntergefahren, wenn der Build abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-111">3) The MUX logger will be shutdown when the build is finished in end build .</span></span> <span data-ttu-id="fcd8d-112">Zu diesem Zeitpunkt wird die Registrierung aller an ihn angefügten Protokollierungen aufgehoben.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-112">At this time it will un-register any loggers attached to it.</span></span>
                
<span data-ttu-id="fcd8d-113">4) die MUX-Protokollierung protokolliert das Buildereignis-Ereignis, wenn das Projekt fertiggestellt wird, das für das erste Projekt gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-113">4) The MUX logger will log the build finished event when the project finished event for the first project started event is seen for each logger.</span></span>
               
<span data-ttu-id="fcd8d-114">Registrieren von Protokollierungen:</span><span class="sxs-lookup"><span data-stu-id="fcd8d-114">Registering Loggers:</span></span> 
<span data-ttu-id="fcd8d-115">Die Multiplexing-Protokollierung funktioniert wie folgt: eine Protokollierung wird mit einer Übermittlungs-ID an die MUX-Register Protokollierungs Methode übergeben, die zum Weiterleiten einer Nachricht an die korrekte Protokollierung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-115">The multiplexing logger will function in the following way: A logger will be passed to the MUX Register logger method with a submission ID which will be used to route a the message to the correct logger.</span></span>
<span data-ttu-id="fcd8d-116">Es wird eine neue Ereignis Quelle erstellt, sodass die über gegebene Protokollierung bei dieser Ereignis Quelle registriert werden kann, wenn das Build Started-Ereignis bereits protokolliert wurde. die MUX-Protokollierung erstellt dann ein neues BUILDSTARTEDEVENT und sendet diese an die Ereignis Quelle.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-116">A new event source will be created so that the logger passed in can be registered to that event source If the build started event has already been logged the MUX logger will create a new BuildStartedEvent and send that to the event source.</span></span>
                
<span data-ttu-id="fcd8d-117">Unregisterloggers: Wenn eine buildübermittlung abgeschlossen ist, wird die unregisterloggers-Methode mit der Übermittlungs-ID aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-117">UnregisterLoggers: When a build submission is completed the UnregisterLoggers method will be called with the submission ID.</span></span>
<span data-ttu-id="fcd8d-118">An diesem Punkt suchen wir den Erfolgsstatus des Projekts "abgeschlossene Ereignisse" für die Übermittlungs-ID und protokollieren ein Ereignis zum Abschluss des Builds in der Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-118">At this point we will look up the success state of the project finished event for the submission ID and log a build finished event to the logger.</span></span>
<span data-ttu-id="fcd8d-119">Die Ereignis Quelle wird bereinigt.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-119">The event source will be cleaned up.</span></span>  <span data-ttu-id="fcd8d-120">Dies ist möglicherweise interessant, da die Aufhebung der Registrierung von einem anderen Thread als dem, der die Protokollierung durchführt, stammt.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-120">This may be interesting because the unregister will come from a thread other than what is doing the logging.</span></span>
<span data-ttu-id="fcd8d-121">Dies kann ein Synchronisierungs Problem verursachen, wenn die Aufhebung der Registrierung aufgerufen wird, während Ereignisse protokolliert werden.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-121">This may create a Synchronization issue, if unregister is called while events are being logged.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd8d-122">Die `MuxLogger` Funktionen sind in der Regel wie folgt:</span><span class="sxs-lookup"><span data-stu-id="fcd8d-122">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="fcd8d-123">Der `MuxLogger` wird am Anfang des buildbuilds von Build Manager registriert.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-123">The `MuxLogger` is registered at the beginning of the build manager's Begin build.</span></span>  
  
     <span data-ttu-id="fcd8d-124">Alle Protokollierungen, die vor dem BuildManager registriert werden, starten das Build-Started-Ereignis zur gleichen Zeit wie die `MuxLogger` .</span><span class="sxs-lookup"><span data-stu-id="fcd8d-124">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="fcd8d-125">Alle Protokollierungen, die nach dem BuildManager registriert werden, starten den Build und erhalten ein Ereignis, das von einem Build gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-125">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="fcd8d-126">Das Ereignis kann nicht zwischengespeichert werden, da der Zeitstempel des Build-Started-Ereignisses bestimmt wird, wenn das Ereignis erstellt wird, und das Zwischenspeichern des Ereignisses würde zu falschen Buildzeiten in den Protokollierungen, die für registriert sind `MuxLogger` .</span><span class="sxs-lookup"><span data-stu-id="fcd8d-126">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="fcd8d-127">Der `MuxLogger` wird vom Build-Manager initialisiert.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-127">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="fcd8d-128">Der überwacht `MuxLogger` alle Ereignisse in der Ereignis Quelle vom Build-Manager und leitet Ereignisse ordnungsgemäß an die registrierten Protokollierungen weiter.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-128">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="fcd8d-129">Das `MuxLogger` wird heruntergefahren, wenn der Build abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-129">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="fcd8d-130">Zu diesem Zeitpunkt wird die Registrierung aller an ihn angefügten Protokollierungen aufgehoben.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-130">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="fcd8d-131">Das `MuxLogger` protokolliert das Build-abgeschlossene Ereignis, wenn für jede Protokollierung das Projekt fertiggestellte Ereignis für das erste Project-Started-Ereignis angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-131">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="fcd8d-132">Die `MuxLogger` Protokollierung wird wie folgt registriert:</span><span class="sxs-lookup"><span data-stu-id="fcd8d-132">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="fcd8d-133">Die Protokollierung wird `MuxLogger.RegisterLogger` mit einer Übermittlungs-ID an die-Methode übergeben, die zum Weiterleiten einer Nachricht an die Protokollierung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-133">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="fcd8d-134">Der `MuxLogger` registriert die Protokollierung bei der `MuxLogger` Ereignis Quelle.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-134">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="fcd8d-135">Wenn das Build-Started-Ereignis bereits protokolliert wurde, `MuxLogger` erstellt das ein neues Build-Started-Ereignis und sendet es an die Ereignis Quelle der Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-135">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger's event source.</span></span>  
  
 <span data-ttu-id="fcd8d-136">Die `MuxLogger` Registrierung der Protokollierung wird auf folgende Weise aufgehoben:</span><span class="sxs-lookup"><span data-stu-id="fcd8d-136">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="fcd8d-137">Wenn eine buildübermittlung abgeschlossen ist, `MuxLogger.UnregisterLogger` wird die-Methode mit der Übermittlungs-ID für die Protokollierung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-137">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="fcd8d-138">Der `MuxLogger` sucht den Erfolgsstatus des Projekts, das abgeschlossen wurde, für die Übermittlungs-ID und protokolliert ein Build-abgeschlossene Ereignis für die Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-138">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="fcd8d-139">Bereinigt `MuxLogger` die Ereignis Quelle.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-139">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="fcd8d-140">Beachten Sie, dass die Aufhebung der Registrierung von einem anderen Thread als dem Protokollierungs Thread stammt und ein Synchronisierungs Problem auftreten kann, wenn die Aufhebung der Registrierung aufgerufen wird, während Ereignisse protokolliert werden.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-140">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcd8d-141">Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-141">Constructor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeEvaluationMetaprojects">
      <MemberSignature Language="C#" Value="public bool IncludeEvaluationMetaprojects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeEvaluationMetaprojects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeEvaluationMetaprojects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeEvaluationMetaprojects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeEvaluationMetaprojects : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd8d-142">Sollen Auswertungsereignisse generierte Metaprojekte einschließen?</span><span class="sxs-lookup"><span data-stu-id="fcd8d-142">Should evaluation events include generated metaprojects?</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeEvaluationProfiles">
      <MemberSignature Language="C#" Value="public bool IncludeEvaluationProfiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeEvaluationProfiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeEvaluationProfiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeEvaluationProfiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeEvaluationProfiles : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd8d-143">Sollen Auswertungsereignisse Informationen zur Profilerstellung enthalten?</span><span class="sxs-lookup"><span data-stu-id="fcd8d-143">Should evaluation events include profiling information?</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTaskInputs">
      <MemberSignature Language="C#" Value="public bool IncludeTaskInputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTaskInputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTaskInputs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeTaskInputs { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeTaskInputs : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd8d-144">Sollen Taskereignisse Taskeingaben einschließen?</span><span class="sxs-lookup"><span data-stu-id="fcd8d-144">Should task events include task inputs?</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fcd8d-145">Initialisiert die <see langword="MuxLogger" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-145">Initializes the <see langword="MuxLogger" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="fcd8d-146">Die Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-146">The event source.</span></span></param>
        <summary><span data-ttu-id="fcd8d-147">Initialisiert die Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-147">Initialize the logger.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="fcd8d-148">Die Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-148">The event source.</span></span></param>
        <param name="maxNodeCount"><span data-ttu-id="fcd8d-149">Die maximale Anzahl von Knoten.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-149">The maximum number of nodes.</span></span></param>
        <summary><span data-ttu-id="fcd8d-150">Initialisiert die Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-150">Initialize the logger.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd8d-151">Erforderlich für iloggerinterface</span><span class="sxs-lookup"><span data-stu-id="fcd8d-151">Required for the ILoggerInterface</span></span></summary>
        <value><span data-ttu-id="fcd8d-152">Das Parameter Attribut.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-152">The Parameters attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="fcd8d-153">Die Übermittlungs-ID der Protokollierung, die registriert wird.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-153">The submission ID of the logger being registered.</span></span></param>
        <param name="logger"><span data-ttu-id="fcd8d-154">Die zu registrierende Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-154">The logger to register.</span></span></param>
        <summary><span data-ttu-id="fcd8d-155">Diese Methode registriert eine Protokollierung für die MUX-Protokollierung und gibt dann ein Build Started-Ereignis aus, wenn das Build Started-Ereignis bereits protokolliert wurde.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-155">This method will register a logger on the MUX logger and then raise a build started event if the build started event has already been logged</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcd8d-156">Herunterfahren der Mux-Protokollierung und Löschen eines beliebigen Zustands</span><span class="sxs-lookup"><span data-stu-id="fcd8d-156">Shutdown the mux logger and clear out any state</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="fcd8d-157">Die Übermittlungs-ID der zu entfernenden Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-157">The submission ID of the logger to be removed.</span></span></param>
        <summary><span data-ttu-id="fcd8d-158">Hebt die Registrierung aller Protokollierungen für eine angegebene Übermittlungs-ID auf.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-158">Unregisters all the loggers for a given submission id.</span></span></summary>
        <returns><span data-ttu-id="fcd8d-159"><see langword="true" />, wenn die Methode die Protokollierung erfolgreich entfernt hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-159"><see langword="true" /> if the method is successful in removing the logger; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcd8d-160">Erforderlich für die ILogger-Schnittstelle</span><span class="sxs-lookup"><span data-stu-id="fcd8d-160">Required for ILogger interface</span></span></summary>
        <value><span data-ttu-id="fcd8d-161">Das verbosity-Attribut.</span><span class="sxs-lookup"><span data-stu-id="fcd8d-161">The Verbosity attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
