<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e34519610d0990efa2cce607f5089d6850005cd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30337254" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2aad3-101">Stellt eine Multiplexingprotokollierung dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2aad3-101">Represents a multiplexing logger.</span>
      </span>
      <span data-ttu-id="2aad3-102">Der Zweck dieser Protokollierung ist, mehrere Protokollierungen während des Builds zu registrieren bzw. deren Registrierung aufzuheben.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2aad3-102">The purpose of this logger is to register and unregister multiple loggers during the build.</span>
      </span>
      <span data-ttu-id="2aad3-103">Unterstützt das Visual Studio-IDE-Szenario, in dem Protokollierungsmodule für jede Anforderung von Projektsystem-Builds registriert und für die Registrierungen aufgehoben werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2aad3-103">Supports the Visual Studio IDE scenario in which loggers are registered and unregistered for each project system’s build request.</span>
      </span>
      <span data-ttu-id="2aad3-104">Ein physischer Build kann mehrere logische Builds haben, jeder mit einem eigenen Satz von Protokollierungen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2aad3-104">One physical build can have multiple logical builds, each with its own set of loggers.</span>
      </span>
      <span data-ttu-id="2aad3-105">Der <see langword="MuxLogger" /> registriert sich mit dem Build-Manager als reguläre zentrale/l- Formatprotokollierung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2aad3-105">The <see langword="MuxLogger" /> registers itself with the build manager as a regular central /l style logger.</span>
      </span>
      <span data-ttu-id="2aad3-106">Es empfängt Nachrichten vom Build-Manager und leitet sie zur richtigen Protokollierung weiter, auf Grundlage des logischen Builds, von dem die Meldung stammt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2aad3-106">It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2aad3-107">Die `MuxLogger` im Allgemeinen funktioniert wie folgt:</span><span class="sxs-lookup"><span data-stu-id="2aad3-107">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="2aad3-108">Die `MuxLogger` am Anfang der Build-Manager Begin Build registriert ist.</span><span class="sxs-lookup"><span data-stu-id="2aad3-108">The `MuxLogger` is registered at the beginning of the build manager’s Begin build.</span></span>  
  
     <span data-ttu-id="2aad3-109">Alle Protokollierungen, die vor der Build-Manager zu dem Buildvorgang registriert rufen Sie das Ereignis gestarteten Buildvorgangs zur gleichen Zeit wie die `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="2aad3-109">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="2aad3-110">Alle Protokollierungen registriert, nachdem der Build-Manager den Build gestartet rufen Sie eine künstliche gestarteten Buildvorgangs-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="2aad3-110">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="2aad3-111">Das Ereignis kann nicht zwischengespeichert werden, da der Zeitstempel des Ereignisses gestarteten Buildvorgangs bestimmt wird, wenn das Ereignis erstellt wurde und Zwischenspeichern des Ereignisses in die Protokollierungen registriert falsche Buildzeiten geben die `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="2aad3-111">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="2aad3-112">Die `MuxLogger` wird initialisiert, indem die Build-Manager</span><span class="sxs-lookup"><span data-stu-id="2aad3-112">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="2aad3-113">Die `MuxLogger` überwacht alle Ereignisse für die Ereignisquelle aus dem Build-Manager, und leitet Ereignisse ordnungsgemäß in der registrierten Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="2aad3-113">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="2aad3-114">Die `MuxLogger` Herunterfahren ist, wenn der Build in End-Build abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="2aad3-114">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="2aad3-115">Zu diesem Zeitpunkt hebt die Registrierung es alle Protokollierungen angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="2aad3-115">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="2aad3-116">Die `MuxLogger` protokolliert der Buildvorgang abgeschlossen-Ereignis, wenn das Projekt abgeschlossen-Ereignis für das erste Projekt gestartet hat-Ereignis für jede Protokollierung angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="2aad3-116">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="2aad3-117">Die `MuxLogger` registriert Protokollierungen auf folgende Weise:</span><span class="sxs-lookup"><span data-stu-id="2aad3-117">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="2aad3-118">Die Protokollierung wird zum Übergeben der `MuxLogger.RegisterLogger` Methode mit einer Übermittlung-ID, die zum Weiterleiten einer Nachricht an diese Protokollierung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="2aad3-118">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="2aad3-119">Die `MuxLogger` registriert die Protokollierung der `MuxLogger` Ereignisquelle verwendet wurden.</span><span class="sxs-lookup"><span data-stu-id="2aad3-119">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="2aad3-120">Wenn das Ereignis gestarteten Buildvorgangs bereits angemeldet wurde, die `MuxLogger` erstellt ein neues Build gestartet-Ereignis und sendet sie an der Protokollierung Ereignisquelle verwendet wurden.</span><span class="sxs-lookup"><span data-stu-id="2aad3-120">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger’s event source.</span></span>  
  
 <span data-ttu-id="2aad3-121">Die `MuxLogger` hebt die Registrierung Protokollierungen auf folgende Weise:</span><span class="sxs-lookup"><span data-stu-id="2aad3-121">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="2aad3-122">Wenn eine Buildübermittlung abgeschlossen ist, die `MuxLogger.UnregisterLogger` -Methode aufgerufen wird und die Übermittlung-ID für die Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="2aad3-122">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="2aad3-123">Die `MuxLogger` sucht den Erfolgsstatus des Ereignisses Projekt & ndash; beendet für die Übermittlung-ID und protokolliert ein Ereignis Build & ndash; beendet die Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="2aad3-123">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="2aad3-124">Die `MuxLogger` bereinigt die Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="2aad3-124">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="2aad3-125">Beachten Sie, dass die Aufhebung der Registrierung ergibt sich aus einem anderen Thread als dem Protokollierungsthread und ein Problem bei der Synchronisierung kann auftreten, wenn Unregister aufgerufen wird, während Ereignisse protokolliert werden.</span><span class="sxs-lookup"><span data-stu-id="2aad3-125">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2aad3-126">Erstellt eine neue Instanz der Multiplexingprotokollierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-126">Creates a new instance of the multiplexing logger.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2aad3-127">Initialisiert die <see langword="MuxLogger" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-127">Initializes the <see langword="MuxLogger" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="2aad3-128">Die Ereignisquelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-128">The event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2aad3-129">Initialisieren Sie die <see langword="MuxLogger" />-Instanz mit der angegebenen Ereignisquelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-129">Initialize the <see langword="MuxLogger" /> instance with the specified event source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="2aad3-130">Die Ereignisquelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-130">The event source.</span>
          </span>
        </param>
        <param name="maxNodeCount">
          <span data-ttu-id="2aad3-131">Die maximale Anzahl von Knoten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-131">The maximum number of nodes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2aad3-132">Initialisieren Sie die <see langword="MuxLogger" />-Instanz mit der angegebenen Ereignisquelle und der angegebenen maximalen Anzahl von Knoten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-132">Initialize the <see langword="MuxLogger" /> instance with the specified event source and specified maximum number of nodes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2aad3-133">Ermittelt und bestimmt die Parameterattribute, die die <see langword="ILogger" />-Schnittstelle benötigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-133">Gets and sets the Parameters attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2aad3-134">Gibt das Parameter-Attribut zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-134">Returns the Parameters attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="2aad3-135">Die Übermittlungs-ID der Protokollierung, die registriert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-135">The submission ID of the logger being registered.</span>
          </span>
        </param>
        <param name="logger">
          <span data-ttu-id="2aad3-136">Die zu registrierende Protokollierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-136">The logger to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2aad3-137">Registriert eine Protokollierung beim <see langword="MuxLogger" /> und löst ein Build-gestartetes Ereignis aus, wenn das Build-gestartete Ereignis bereits protokolliert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-137">Registers a logger on the <see langword="MuxLogger" /> and raises a build-started event if the build-started event has already been logged.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2aad3-138">Schließt <see langword="MuxLogger" /> und löscht jeden Zustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-138">Shuts down the <see langword="MuxLogger" /> and clears out any state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="2aad3-139">Die Übermittlungs-ID der zu entfernenden Protokollierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-139">The submission ID of the logger to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2aad3-140">Entfernt die angegebene Protokollierung aus dem MuxLogger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-140">Removes the specified logger from the MuxLogger.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2aad3-141">Gibt <see langword="true" /> zurück, wenn die Methode erfolgreich ist, die Protokollierung zu entfernen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-141">Returns <see langword="true" /> if the method is successful in removing the logger, otherwise, returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2aad3-142">Ermittelt und bestimmt die Ausführlichkeitsattribute, die die <see langword="ILogger" />-Schnittstelle benötigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-142">Gets and sets the Verbosity attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2aad3-143">Gibt den Wert des Verbosity-Attributs zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2aad3-143">Returns the Verbosity attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>