<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0c1bac8025c518b15c3a4195610e83185d7213e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70558651" /></Metadata><TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dbe1f-101">Stellt eine Multiplexingprotokollierung dar.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-101">Represents a multiplexing logger.</span></span> <span data-ttu-id="dbe1f-102">Der Zweck dieser Protokollierung ist, mehrere Protokollierungen während des Builds zu registrieren bzw. deren Registrierung aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-102">The purpose of this logger is to register and unregister multiple loggers during the build.</span></span> <span data-ttu-id="dbe1f-103">Unterstützt das Visual Studio-IDE-Szenario, in dem Protokollierungsmodule für jede Anforderung von Projektsystem-Builds registriert und für die Registrierungen aufgehoben werden.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-103">Supports the Visual Studio IDE scenario in which loggers are registered and unregistered for each project system's build request.</span></span> <span data-ttu-id="dbe1f-104">Ein physischer Build kann mehrere logische Builds haben, jeder mit einem eigenen Satz von Protokollierungen.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-104">One physical build can have multiple logical builds, each with its own set of loggers.</span></span>  
  
<span data-ttu-id="dbe1f-105">Der <see langword="MuxLogger" /> registriert sich mit dem Build-Manager als reguläre zentrale/l- Formatprotokollierung.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-105">The <see langword="MuxLogger" /> registers itself with the build manager as a regular central /l style logger.</span></span> <span data-ttu-id="dbe1f-106">Es empfängt Nachrichten vom Build-Manager und leitet sie zur richtigen Protokollierung weiter, auf Grundlage des logischen Builds, von dem die Meldung stammt.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-106">It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbe1f-107">Die `MuxLogger` Funktionen sind in der Regel wie folgt:</span><span class="sxs-lookup"><span data-stu-id="dbe1f-107">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="dbe1f-108">Der `MuxLogger` wird am Anfang des buildbuilds von Build Manager registriert.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-108">The `MuxLogger` is registered at the beginning of the build manager's Begin build.</span></span>  
  
     <span data-ttu-id="dbe1f-109">Alle Protokollierungen, die vor dem BuildManager registriert werden, starten das Build-Started-Ereignis zur gleichen Zeit `MuxLogger`wie die.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-109">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="dbe1f-110">Alle Protokollierungen, die nach dem BuildManager registriert werden, starten den Build und erhalten ein Ereignis, das von einem Build gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-110">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="dbe1f-111">Das Ereignis kann nicht zwischengespeichert werden, da der Zeitstempel des Build-Started-Ereignisses bestimmt wird, wenn das Ereignis erstellt wird, und das Zwischenspeichern des Ereignisses würde zu falschen Buildzeiten `MuxLogger`in den Protokollierungen, die für registriert sind.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-111">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="dbe1f-112">Der `MuxLogger` wird vom Build-Manager initialisiert.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-112">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="dbe1f-113">Der `MuxLogger` überwacht alle Ereignisse in der Ereignis Quelle vom Build-Manager und leitet Ereignisse ordnungsgemäß an die registrierten Protokollierungen weiter.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-113">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="dbe1f-114">Das `MuxLogger` wird heruntergefahren, wenn der Build abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-114">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="dbe1f-115">Zu diesem Zeitpunkt wird die Registrierung aller an ihn angefügten Protokollierungen aufgehoben.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-115">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="dbe1f-116">Das `MuxLogger` protokolliert das Build-abgeschlossene Ereignis, wenn für jede Protokollierung das Projekt fertiggestellte Ereignis für das erste Project-Started-Ereignis angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-116">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="dbe1f-117">Die `MuxLogger` Protokollierung wird wie folgt registriert:</span><span class="sxs-lookup"><span data-stu-id="dbe1f-117">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="dbe1f-118">Die Protokollierung wird mit einer `MuxLogger.RegisterLogger` Übermittlungs-ID an die-Methode übergeben, die zum Weiterleiten einer Nachricht an die Protokollierung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-118">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="dbe1f-119">Der `MuxLogger` registriert die Protokollierung bei `MuxLogger` der Ereignis Quelle.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-119">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="dbe1f-120">Wenn das Build-Started-Ereignis bereits protokolliert wurde, erstellt `MuxLogger` das ein neues Build-Started-Ereignis und sendet es an die Ereignis Quelle der Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-120">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger's event source.</span></span>  
  
 <span data-ttu-id="dbe1f-121">Die `MuxLogger` Registrierung der Protokollierung wird auf folgende Weise aufgehoben:</span><span class="sxs-lookup"><span data-stu-id="dbe1f-121">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="dbe1f-122">Wenn eine buildübermittlung abgeschlossen ist, `MuxLogger.UnregisterLogger` wird die-Methode mit der Übermittlungs-ID für die Protokollierung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-122">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="dbe1f-123">Der `MuxLogger` sucht den Erfolgsstatus des Projekts, das abgeschlossen wurde, für die Übermittlungs-ID und protokolliert ein Build-abgeschlossene Ereignis für die Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-123">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="dbe1f-124">`MuxLogger` Bereinigt die Ereignis Quelle.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-124">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="dbe1f-125">Beachten Sie, dass die Aufhebung der Registrierung von einem anderen Thread als dem Protokollierungs Thread stammt und ein Synchronisierungs Problem auftreten kann, wenn die Aufhebung der Registrierung aufgerufen wird, während Ereignisse protokolliert werden.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-125">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dbe1f-126">Erstellt eine neue Instanz der Multiplexingprotokollierung.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-126">Creates a new instance of the multiplexing logger.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dbe1f-127">Initialisiert die <see langword="MuxLogger" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-127">Initializes the <see langword="MuxLogger" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="dbe1f-128">Die Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-128">The event source.</span></span></param>
        <summary><span data-ttu-id="dbe1f-129">Initialisieren Sie die <see langword="MuxLogger" />-Instanz mit der angegebenen Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-129">Initialize the <see langword="MuxLogger" /> instance with the specified event source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="dbe1f-130">Die Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-130">The event source.</span></span></param>
        <param name="maxNodeCount"><span data-ttu-id="dbe1f-131">Die maximale Anzahl von Knoten.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-131">The maximum number of nodes.</span></span></param>
        <summary><span data-ttu-id="dbe1f-132">Initialisieren Sie die <see langword="MuxLogger" />-Instanz mit der angegebenen Ereignisquelle und der angegebenen maximalen Anzahl von Knoten.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-132">Initialize the <see langword="MuxLogger" /> instance with the specified event source and specified maximum number of nodes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbe1f-133">Ruft die Parameters-Attribute ab, die die <see langword="ILogger" />-Schnittstelle benötigt, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-133">Gets or sets the Parameters attribute, required by the <see langword="ILogger" /> interface.</span></span></summary>
        <value><span data-ttu-id="dbe1f-134">Das Parameter Attribut.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-134">The Parameters attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="dbe1f-135">Die Übermittlungs-ID der Protokollierung, die registriert wird.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-135">The submission ID of the logger being registered.</span></span></param>
        <param name="logger"><span data-ttu-id="dbe1f-136">Die zu registrierende Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-136">The logger to register.</span></span></param>
        <summary><span data-ttu-id="dbe1f-137">Registriert eine Protokollierung beim <see langword="MuxLogger" /> und löst ein Build-gestartetes Ereignis aus, wenn das Build-gestartete Ereignis bereits protokolliert wurde.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-137">Registers a logger on the <see langword="MuxLogger" /> and raises a build-started event if the build-started event has already been logged.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dbe1f-138">Schließt <see langword="MuxLogger" /> und löscht jeden Zustand.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-138">Shuts down the <see langword="MuxLogger" /> and clears out any state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="dbe1f-139">Die Übermittlungs-ID der zu entfernenden Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-139">The submission ID of the logger to be removed.</span></span></param>
        <summary><span data-ttu-id="dbe1f-140">Entfernt die angegebene Protokollierung aus dem MuxLogger.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-140">Removes the specified logger from the MuxLogger.</span></span></summary>
        <returns><span data-ttu-id="dbe1f-141"><see langword="true" />, wenn die Methode die Protokollierung erfolgreich entfernt hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-141"><see langword="true" /> if the method is successful in removing the logger; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbe1f-142">Ruft die Verbosity-Attribute ab, die die <see langword="ILogger" />-Schnittstelle benötigt, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-142">Gets or sets the Verbosity attribute, required by the <see langword="ILogger" /> interface.</span></span></summary>
        <value><span data-ttu-id="dbe1f-143">Das verbosity-Attribut.</span><span class="sxs-lookup"><span data-stu-id="dbe1f-143">The Verbosity attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
