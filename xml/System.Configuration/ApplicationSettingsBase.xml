<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f92df9abd51ae5a140ab4fdbc45a440e00927463" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75144983" /></Metadata><TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fungiert als Basisklasse für das Ableiten konkreter Wrapperklassen, um das Anwendungseinstellungsfeature in Windows Forms-Anwendungen zu implementieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> fügt der <xref:System.Configuration.SettingsBase>-Klasse die folgenden Funktionen hinzu, die von webbasierten Anwendungen verwendet werden:  
  
-   Die Fähigkeit, Attribute für eine abgeleitete Wrapper Klasse für Einstellungen zu erkennen. <xref:System.Configuration.ApplicationSettingsBase> unterstützt das deklarative Modell, das für Wrapper Klasseneigenschaften verwendet wird, wie später beschrieben.  
  
-   <xref:System.Configuration.ApplicationSettingsBase.Save%2A>-und <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> Methoden höherer Ebene.  
  
-   Zusätzliche Validierungs Ereignisse, die Sie behandeln können, um die Richtigkeit einzelner Einstellungen sicherzustellen.  
  
 Wenn Sie in der Architektur der Anwendungseinstellungen auf eine Gruppe von Einstellungs Eigenschaften zugreifen möchten, müssen Sie eine konkrete Wrapper Klasse von <xref:System.Configuration.ApplicationSettingsBase>ableiten. Die Wrapper Klasse passt <xref:System.Configuration.ApplicationSettingsBase> auf folgende Weise an:  
  
-   Für jede Einstellungs Eigenschaft, auf die zugegriffen werden soll, wird der Wrapper Klasse eine entsprechende stark typisierte öffentliche Eigenschaft hinzugefügt. Diese Eigenschaft verfügt über `get`-und `set` Accessoren für Lese-/Schreib-Anwendungseinstellungen, aber nur einen `get`-Accessor für schreibgeschützte Einstellungen.  
  
-   Eingebundene Attribute müssen auf die öffentlichen Eigenschaften der Wrapper Klasse angewendet werden, um die Merkmale der Einstellungs Eigenschaft anzugeben, z. b. der Bereich der Einstellung (Anwendung oder Benutzer), ob die Einstellung Roaming unterstützen soll, der Standardwert für das Einstellung, der zu verwendende Einstellungs Anbieter usw. Jede Eigenschaft ist erforderlich, um Ihren Bereich mithilfe von <xref:System.Configuration.ApplicationScopedSettingAttribute> oder <xref:System.Configuration.UserScopedSettingAttribute>anzugeben. Anwendungsspezifische Einstellungen sind schreibgeschützt, wenn die Standard <xref:System.Configuration.LocalFileSettingsProvider> verwendet wird.  
  
 Die <xref:System.Configuration.ApplicationSettingsBase>-Klasse verwendet Reflektion, um diese Attribute zur Laufzeit zu erkennen. Die meisten dieser Informationen werden an die Einstellungs Anbieter Schicht weitergeleitet, die für die Speicherung, das Persistenzformat usw. zuständig ist.  
  
 Wenn eine Anwendung über mehrere Wrapper Klassen für Einstellungen verfügt, definiert jede Klasse eine *Einstellungs Gruppe*. Jede Gruppe verfügt über die folgenden Eigenschaften:  
  
-   Eine Gruppe kann eine beliebige Anzahl oder einen beliebigen Typ von Eigenschafts Einstellungen enthalten.  
  
-   Wenn der Gruppenname nicht explizit durch das Dekorieren der Wrapper Klasse mit einem <xref:System.Configuration.SettingsGroupNameAttribute>festgelegt wird, wird automatisch ein Name generiert.  
  
 Standardmäßig verwenden alle Client basierten Anwendungen die <xref:System.Configuration.LocalFileSettingsProvider>, um Speicher bereitzustellen. Wenn ein alternativer Einstellungs Anbieter gewünscht ist, muss die Wrapper Klasse bzw.-Eigenschaft mit einem entsprechenden <xref:System.Configuration.SettingsProviderAttribute>versehen werden.  
  
 Weitere Informationen zum Verwenden von Anwendungseinstellungen finden Sie unter [Anwendungseinstellungen für Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von Anwendungseinstellungen, um die folgenden Attribute des Haupt Formulars beizubehalten: Speicherort, Größe, Hintergrundfarbe und Titelleisten Text. Alle diese Attribute werden als Eigenschaften der einzelnen Anwendungseinstellungen in der `FormSettings`-Klasse persistent gespeichert, mit dem Namen `FormLocation`, `FormSize`, `FormBackColor` bzw. `FormText`. Mit Ausnahme von `FormText` und `Size` werden Daten an die zugehörigen Formular Eigenschaften gebunden, und es wird ein Standard Einstellungs Wert mit <xref:System.Configuration.DefaultSettingValueAttribute>angewendet.  
  
 Das Formular enthält vier untergeordnete Steuerelemente, die die folgenden Namen und Funktionen aufweisen:  
  
-   Eine Schaltfläche mit dem Namen `btnBackColor`, die verwendet wird, um das Dialogfeld **Farbe** allgemein anzuzeigen  
  
-   Eine Schaltfläche mit dem Namen `btnReload`, mit der die Anwendungseinstellungen <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> werden.  
  
-   Eine Schaltfläche mit dem Namen `btnReset`, mit der die Anwendungseinstellungen <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> werden.  
  
-   Ein Textfeld mit dem Namen `tbStatus`, das verwendet wird, um Statusinformationen zum Programm anzuzeigen.  
  
 Beachten Sie, dass nach jeder Ausführung der Anwendung ein zusätzliches Zeit Zeichen an den Titeltext des Formulars angehängt wird.  
  
 Dieses Codebeispiel erfordert ein Formular mit einer <xref:System.Windows.Forms.ColorDialog>-Klasse mit dem Namen `colorDialog1`und ein <xref:System.Windows.Forms.StatusStrip>-Steuerelement mit einer <xref:System.Windows.Forms.ToolStripStatusLabel> mit dem Namen `tbStatus`. Außerdem sind drei <xref:System.Windows.Forms.Button> Objekte mit den Namen `btnReload`, `btnReset`und `btnBackColor`erforderlich.  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/64090a34-8556-4904-8ea0-20efe9f8c886">Anwendungseinstellungen für Windows Forms</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Configuration.ApplicationSettingsBase" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Configuration.ApplicationSettingsBase" />-Klasse mit ihrem Standardzustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Parameter lose Konstruktor wurde so konzipiert, dass er unter der Annahme funktioniert, dass der Klasse der aktuellen Einstellungs Wrapper keine Komponente zugeordnet ist, die von <xref:System.Configuration.ApplicationSettingsBase>abgeleitet ist.  
  
 Wenn eine Instanz einer Wrapper Klasse erstellt wird, führt der geerbte Code automatisch die folgenden Aktionen aus:  
  
1.  Reflektieren der-Klasse.  
  
2.  Für jede Eigenschaft im Wrapper, der mit `[UserScopedSettingAttribute]` oder `[ApplicationScopedSettingAttribute]`gekennzeichnet ist, wird ein entsprechender <xref:System.Configuration.SettingsProperty> erstellt.  
  
3.  Für jede <xref:System.Configuration.SettingsProperty> werden einige der Eigenschaften auf Grundlage anderer Attribute festgelegt, die optional in den Eigenschaften des Wrappers vorhanden sind, wie z. b. der Standardwert oder der Einstellungs Anbieter.  
  
4.  Alle anderen Attribute werden einfach in einen Attribut Behälter eingefügt, die <xref:System.Configuration.SettingsProperty.Attributes%2A>-Eigenschaft der <xref:System.Configuration.SettingsProperty>-Klasse.  
  
5.  Alle <xref:System.Configuration.SettingsProperty> Objekte werden einer <xref:System.Configuration.SettingsPropertyCollection> hinzugefügt, die durch die <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>-Eigenschaft der <xref:System.Configuration.ApplicationSettingsBase>-Klasse dargestellt wird. Diese Auflistung wird dann an die <xref:System.Configuration.SettingsBase.Initialize%2A>-Methode weitergeleitet.  
  
 Wie bereits zuvor erwähnt, funktioniert <xref:System.Configuration.ApplicationSettingsBase> nativ mit mehreren Eigenschafts Attributen, insbesondere die folgenden: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>und <xref:System.Configuration.SettingsSerializeAsAttribute>. Alle anderen Einstellungs Attribute werden einfach an den entsprechenden zugrunde liegenden Anbieter übermittelt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">Die Komponente, die als Besitzer des Anwendungseinstellungsobjekts fungiert.</param>
        <summary>Initialisiert mithilfe der angegebenen Besitzerkomponente eine Instanz der <see cref="T:System.Configuration.ApplicationSettingsBase" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor entspricht dem <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>-Konstruktor, der den Aufruf verwendet:  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 Informationen zur Verwendung der Reflektion während der Instanziierung einer Wrapper Klasse finden Sie im Standard-<xref:System.Configuration.ApplicationSettingsBase.%23ctor>-Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">Ein <see cref="T:System.String" />, der separate Instanzen der Wrapperklasse eindeutig identifiziert.</param>
        <summary>Initialisiert mithilfe des angegebenen Einstellungsschlüssels eine Instanz der <see cref="T:System.Configuration.ApplicationSettingsBase" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>-Eigenschaft mit dem Wert des `settingsKey`-Parameters. Diese Eigenschaft ist nützlich, wenn verschiedene Instanzen der Wrapper Klasse Settings in derselben Anwendungsdomäne eindeutig sind.  
  
 Informationen zur Verwendung der Reflektion während der Instanziierung einer Wrapper Klasse finden Sie im Standard-<xref:System.Configuration.ApplicationSettingsBase.%23ctor>-Konstruktor.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Die Komponente, die als Besitzer des Anwendungseinstellungsobjekts fungiert.</param>
        <param name="settingsKey">Ein <see cref="T:System.String" />, der separate Instanzen der Wrapperklasse eindeutig identifiziert.</param>
        <summary>Initialisiert mithilfe der angegebenen Besitzerkomponente und des Einstellungsschlüssels eine Instanz der <see cref="T:System.Configuration.ApplicationSettingsBase" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das vom `owner`-Parameter angegebene <xref:System.ComponentModel.IComponent> Objekt fungiert als Besitzer der aktuellen Instanz dieser Anwendungs Einstellungs Klasse. Während der Initialisierung der Einstellungs Wrapper Klasse, die von <xref:System.Configuration.ApplicationSettingsBase>abgeleitet wurde, wird die Website des Besitzers nach einem <xref:System.Configuration.ISettingsProviderService>abgefragt. Wenn eine solche Eigenschaft vorhanden ist, wird Sie im Gegensatz zum Anbieter für Native Einstellungen für alle Eigenschaften der Wrapper Klasse verwendet, wie vom <xref:System.Configuration.SettingsProviderAttribute>angegeben.  
  
 Dieser Konstruktor initialisiert die <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>-Eigenschaft mit dem Wert des `settingsKey`-Parameters. Diese Eigenschaft ist nützlich, wenn verschiedene Instanzen der Wrapper Klasse in derselben Anwendungsdomäne eindeutig unterschieden werden.  
  
 Informationen zur Verwendung der Reflektion während der Instanziierung einer Wrapper Klasse finden Sie im Standard-<xref:System.Configuration.ApplicationSettingsBase.%23ctor>-Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den der Einstellungsgruppe zugeordneten Anwendungseinstellungskontext ab.</summary>
        <value>Ein der Einstellungsgruppe zugeordneter <see cref="T:System.Configuration.SettingsContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeder Einstellungs Wrapper Klasse, die von <xref:System.Configuration.ApplicationSettingsBase> abgeleitet ist, ist ein Kontext zugeordnet. Der Kontext wird an den Einstellungs Anbieter für jede Eigenschaft übermittelt, um zu bestimmen, wie die-Eigenschaft verwendet wird. Der Kontext fungiert daher als Hinweis, um dem Einstellungs Anbieter zu helfen, zu bestimmen, wie die zugeordneten Anwendungs Einstellungs Werte am besten persistent gespeichert werden.  
  
 Im Gegensatz dazu ermöglicht die <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>-Eigenschaft dem Einstellungs Anbieter das unterscheiden mehrerer Instanzen derselben Wrapper Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Ein <see cref="T:System.String" />, der den Namen der Einstellungseigenschaft enthält, deren Wert zurückgegeben werden soll.</param>
        <summary>Gibt den Wert der benannten Einstellungseigenschaft für die vorherige Version derselben Anwendung zurück.</summary>
        <returns>Ein <see cref="T:System.Object" /> mit dem Wert der angegebenen <see cref="T:System.Configuration.SettingsProperty" />, sofern gefunden; andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>-Methode wird häufig in Verbindung mit der <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>-Methode verwendet, wenn Anwendungseinstellungen während der Installation einer neuen Version einer Anwendung migriert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Die Eigenschaft ist nicht vorhanden. Die Eigenschaftenanzahl ist 0 (null) oder die Eigenschaft kann nicht im Datenspeicher gefunden werden.</exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Ein <see cref="T:System.String" />, der den Namen der aufzurufenden Eigenschaft enthält.</param>
        <summary>Ruft den Wert der angegebenen Anwendungseinstellungseigenschaft ab oder legt diesen fest.</summary>
        <value>Wenn gefunden, der Wert der genannten Einstellungseigenschaft; andernfalls, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ApplicationSettingsBase.Item%2A>-Eigenschaft, auch Indexer genannt, wird routinemäßig in der von <xref:System.Configuration.ApplicationSettingsBase>abgeleiteten Wrapper Klasse für Einstellungen verwendet. <xref:System.Configuration.ApplicationSettingsBase.Item%2A> bindet die Public-Eigenschaft der Wrapper Klasse an die entsprechende Settings-Eigenschaft.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Item%2A> löst abhängig vom ausgeführten Vorgang mehrere Ereignisse aus:  
  
-   Wenn eine Eigenschaft zum ersten mal abgerufen wird, wird das <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>-Ereignis ausgelöst.  
  
-   Wenn eine Eigenschaft festgelegt wird, wird das <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>-Ereignis ausgelöst. Wenn das Ereignis vom Handler nicht abgebrochen wird, wird der-Eigenschafts Wert festgelegt, und das <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>-Ereignis wird ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Es gibt keine dem aktuellen Wrapper zugeordnete Eigenschaften, oder die angegebene Eigenschaft konnte nicht gefunden werden.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Es wurde versucht, eine schreibgeschützte Eigenschaft festzulegen.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Der angegebene Wert ist von einem Typ, der mit der Einstellungseigenschaft während einer Set-Operation nicht kompatibel ist.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Die Konfigurationsdatei konnte nicht analysiert werden.</exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.Configuration.SettingChangingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.Configuration.SettingsLoadedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.ComponentModel.CancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der Einstellungseigenschaften im Wrapper ab.</summary>
        <value>Eine <see cref="T:System.Configuration.SettingsPropertyCollection" />, die alle im aktuellen Wrapper verwendeten <see cref="T:System.Configuration.SettingsProperty" />-Objekte enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `get`-Accessor der <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>-Eigenschaft reflektiert die Metadaten der Einstellungs Wrapper Klasse, die von <xref:System.Configuration.ApplicationSettingsBase>abgeleitet ist, um den Satz verfügbarer Anwendungs Einstellungs Eigenschaften dynamisch zu bestimmen.  
  
 Die <xref:System.Configuration.ApplicationSettingsBase> Klasse erkennt System intern bestimmte Merkmale einer Anwendungs Einstellung, z. b. den Namen, den Eigenschaftentyp, den Einstellungs Anbieter, den Standardwert, den schreibgeschützten Status und eine serialisierungseinstellung. Diese Eigenschaften werden als Eigenschaften in der <xref:System.Configuration.SettingsProperty>-Klasse gespiegelt. Alle anderen Attribute der Settings-Eigenschaft werden nur an den zugehörigen Einstellungs Anbieter übermittelt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Der zugeordnete Einstellungsanbieter konnte nicht gefunden werden, oder seine Instanziierung schlug fehl.</exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem der Wert einer Anwendungseinstellungseigenschaft geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>-Ereignis wird ausgelöst, wenn eine Settings-Eigenschaft durch den `set`-Accessor der <xref:System.Configuration.ApplicationSettingsBase.Item%2A>-Methode geändert wird, oder für jede Eigenschaft, die wieder hergestellt wird, wenn der <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>-oder <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> Methoden aufgerufen wird.  
  
 Für diese Klasse ist kein entsprechendes `PropertyChanging` Ereignis vorhanden. Lesen Sie stattdessen das <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>-Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Eigenschaftswerten ab.</summary>
        <value>Eine <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> von Eigenschaftswerten.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der vom Wrapper verwendeten Anwendungseinstellungsanbieter ab.</summary>
        <value>Eine <see cref="T:System.Configuration.SettingsProviderCollection" />, die alle <see cref="T:System.Configuration.SettingsProvider" />-Objekte enthält, die von den Einstellungseigenschaften des aktuellen Einstellungswrappers verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Configuration.SettingsProviderAttribute> bestimmt, welcher Einstellungs Anbieter von einer Wrapper Klasse für Einstellungen oder einer einzelnen Einstellungs Eigenschaft verwendet wird. Wenn dieses Attribut nicht angegeben wird, verwendet eine Client Anwendung die <xref:System.Configuration.LocalFileSettingsProvider>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die Werte der Anwendungseinstellungseigenschaft aus dem permanenten Speicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>-Methode löscht die aktuell zwischengespeicherten Eigenschaftswerte und bewirkt, dass diese Werte aus dem permanenten Speicher neu geladen werden, wenn auf Sie zugegriffen wird. Diese Methode führt die folgenden Aktionen aus:  
  
-   Dadurch werden die aktuell zwischengespeicherten Eigenschaften gelöscht, indem die durch die <xref:System.Configuration.SettingsBase.PropertyValues%2A>-Eigenschaft dargestellte Auflistung gelöscht wird.  
  
-   Es löst das <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>-Ereignis für jedes Element der <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> Auflistung aus.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> steht im Gegensatz zu <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> darin, dass die erste den letzten Satz gespeicherter Anwendungs Einstellungs Werte lädt, während letztere die gespeicherten Standardwerte laden wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> Methode gezeigt, die im Text des <xref:System.Windows.Forms.Control.Click>-Ereignis Handlers für eine Schaltfläche mit dem Namen `btnReload`aufgerufen wird. Aufgrund dieses Aufrufes werden die aktuell gespeicherten Werte für die Anwendungseinstellungen in die entsprechenden Eigenschaften erneut geladen. Das vollständige Codebeispiel finden Sie in der Übersicht über <xref:System.Configuration.ApplicationSettingsBase>-Klasse.  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt die beibehaltenen Anwendungseinstellungswerte mit den entsprechenden Standardeigenschaften wieder her.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>-Methode überschreibt die Eigenschaften der benutzerspezifischen Einstellungen, indem der aktuell beibehaltene Wert der einzelnen Anwendungseinstellungen wieder hergestellt wird. Diese Methode führt die folgenden Aktionen aus:  
  
-   Sie ruft die <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType>-Methode für jeden Einstellungs Anbieter auf, der diese optionale Methode unterstützt.  
  
-   Sie ruft die <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>-Methode auf, um die Aktualisierung der Einstellungs Eigenschaftswerte zu erzwingen.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> steht im Gegensatz zu <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> darin, dass die erste den letzten Satz gespeicherter Anwendungs Einstellungs Werte lädt, während letztere die gespeicherten Standardwerte laden wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> Methode gezeigt, die im Text des <xref:System.Windows.Forms.Control.Click>-Ereignis Handlers für eine Schaltfläche mit dem Namen `btnReset`aufgerufen wird. Aufgrund dieses Aufrufes werden die gespeicherten Standardwerte für die Anwendungseinstellungen in die entsprechenden Eigenschaften erneut geladen. Das vollständige Codebeispiel finden Sie in der Übersicht über <xref:System.Configuration.ApplicationSettingsBase>-Klasse.  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Die Konfigurationsdatei konnte nicht analysiert werden.</exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die aktuellen Werte der Anwendungseinstellungseigenschaften.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ApplicationSettingsBase.Save%2A>-Methode schreibt den aktuellen Wert jeder Einstellungs Eigenschaft in den zugeordneten Datenspeicher. Diese Methode ruft für jede Eigenschaft die <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>-Methode für den zugeordneten Einstellungs Anbieter auf.  
  
 Diese Methode unterscheidet sich von der Implementierung der Basisklasse darin, dass Sie das <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>-Ereignis auslöst, bevor die Werte geschrieben werden.  
  
 Wenn die einzigen Einstellungen auf Anwendungsebene festgelegt sind, hat <xref:System.Configuration.ApplicationSettingsBase.Save%2A> keine Auswirkung und gibt keinen Fehler zurück, wenn Sie mit dem Standard <xref:System.Configuration.LocalFileSettingsProvider>aufgerufen werden. <xref:System.Configuration.LocalFileSettingsProvider> speichert nur benutzerspezifische Einstellungen.  
  
> [!IMPORTANT]
>  Es gibt keine entsprechende Load-Methode, da die Werte von Anwendungseinstellungen während der Initialisierung der Wrapper Klasse automatisch geladen werden. Im Gegensatz dazu werden diese Werte nicht automatisch gespeichert, wenn eine Anwendung beendet wird. Daher müssen Sie explizit die <xref:System.Configuration.ApplicationSettingsBase.Save%2A>-Methode aufzurufen, um die aktuellen Werte der Anwendungseinstellungen beizubehalten. Dies erfolgt in der Regel im <xref:System.Windows.Forms.Form.Closing>-Ereignishandler der primären oder enthaltenden <xref:System.Windows.Forms.Form>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Configuration.ApplicationSettingsBase.Save%2A> Methode gezeigt, die vom <xref:System.Windows.Forms.Form.Closing>-Ereignishandler für das primäre Formular aufgerufen wird. Diese Methode fügt auch der Settings-Eigenschaft, die mit der <xref:System.Windows.Forms.Control.Text%2A>-Eigenschaft des Formulars verknüpft ist, einen zusätzlichen Zeitraum an.  
  
 Das vollständige Codebeispiel finden Sie in der Übersicht über <xref:System.Configuration.ApplicationSettingsBase>-Klasse.  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor der Wert einer Anwendungseinstellungseigenschaft geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>-Ereignis tritt auf, bevor die Eigenschaft Wert der Anwendungs Einstellung über die <xref:System.Configuration.ApplicationSettingsBase.Item%2A>-Methode geändert wird. Dieses Ereignis wird nicht ausgelöst, wenn die Methoden <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> oder <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> aufgerufen werden. <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> können über die <xref:System.Configuration.SettingChangingEventArgs> Ereignisdaten Klasse abgebrochen werden.  
  
 Normalerweise verwenden Sie das <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>-Ereignis, um die sofortige Überprüfung einer einzelnen Einstellungs Eigenschaft zu verarbeiten. Weitere Informationen zur Validierung finden Sie unter Gewusst wie: Überprüfen von [Anwendungseinstellungen](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).  
  
 Für diese Klasse ist kein entsprechendes `SettingChanged` Ereignis vorhanden. Lesen Sie stattdessen das <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>-Ereignis.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt den <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> Ereignishandler für ein Objekt vom Typ `FormSettings`, bei dem es sich um eine Wrapper Klasse handelt, die von <xref:System.Configuration.ApplicationSettingsBase>abgeleitet ist. Der Handler zeigt die Ereignis Informationen in einem Textfeld mit dem Namen `tbStatus`an. Das vollständige Codebeispiel finden Sie in der Übersicht über <xref:System.Configuration.ApplicationSettingsBase>-Klasse.  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/9f145ada-4267-436a-aa4c-c4dcffd0afb7">Gewusst wie: Überprüfen von Anwendungseinstellungen</related>
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Einstellungsschlüssel für die Anwendungseinstellungsgruppe ab oder legt ihn fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Einstellungsschlüssel für die aktuelle Einstellungsgruppe enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>-Eigenschaft wird bereitgestellt, um den Client Code und insbesondere den Einstellungs Anbieter zu ermöglichen, die Unterscheidung zwischen mehreren Instanzen derselben Anwendungs Einstellungs Klasse zu unterscheiden.  
  
 Wenn die Wrapper Klasse Settings nicht mit dem Singleton-Muster entworfen wurde, können mehrere Instanzen derselben Anwendungs Einstellungs Klasse in einer einzelnen Anwendung vorhanden sein. Der Wert <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> muss entsprechend der Art und Weise festgelegt werden, wie die Eigenschaftswerte freigegeben werden sollen.  
  
-   Wenn die Einstellungs Eigenschaften des Wrappers für alle Instanzen des Wrappers in derselben Anwendung freigegeben werden sollen, sollten <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> in allen Instanzen denselben Wert haben. Dies ist das Standardverhalten der <xref:System.Configuration.ApplicationSettingsBase>-Klasse.  
  
-   Wenn die Einstellungs Eigenschaften des Wrappers pro Instanz erfolgen sollen, sollten <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> für jede Instanz einen eindeutigen Wert haben. Mit der <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>-Version des-Konstruktors können Sie <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> mit einer eindeutigen Zeichenfolge initialisieren.  
  
 Im Gegensatz dazu stellt die <xref:System.Configuration.ApplicationSettingsBase.Context%2A>-Eigenschaft Hinweise für den Einstellungs Anbieter bereit, um die Speicherung von Werten auf effiziente und ordnungsgemäße Weise zu ermöglichen.  
  
 Die <xref:System.Configuration.SettingChangingEventArgs>-Klasse enthält eine ähnliche <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> Eigenschaft, die zur Identifizierung der Quelle des <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> Ereignisses beiträgt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem die Anwendungseinstellungen vom Speicher abgerufen worden sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> Ereignis tritt erst auf, nachdem der anfängliche `get` Zugriff auf die erste Konfigurations Eigenschaft verwendet wurde, in der Regel über die <xref:System.Configuration.ApplicationSettingsBase.Item%2A>-Methode. Bei nachfolgenden Zugriffen werden Werte für die lokal zwischengespeicherte Settings-Eigenschaft verwendet. Die Methoden <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> und <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> löschen alle zwischengespeicherten Werte, sodass dieses Ereignis beim nachfolgenden Eigenschaften Zugriff erneut ausgelöst wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor Werte im Datenspeicher gespeichert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> Ereignis wird von der <xref:System.Configuration.ApplicationSettingsBase.Save%2A>-Methode ausgelöst, bevor die Eigenschaften der Anwendungseinstellungen in Ihrem zugeordneten Datenspeicher gespeichert werden. Der zugehörige Ereignishandler kann dieses Ereignis abbrechen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt den <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> Ereignishandler für ein Objekt vom Typ `FormSettings`, bei dem es sich um eine Wrapper Klasse handelt, die von <xref:System.Configuration.ApplicationSettingsBase>abgeleitet ist. Der Handler fragt den Benutzer ab, um die aktuellen Eigenschaftswerte der Anwendungseinstellungen zu speichern. Das vollständige Codebeispiel finden Sie in der Übersicht über <xref:System.Configuration.ApplicationSettingsBase>-Klasse.  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert Anwendungseinstellungen, um eine aktuellere Installation der Anwendung wiederzugeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>-Methode führt zwei Aktionen aus, um einen reibungslosen Übergang zu einer neuen Version einer Anwendung sicherzustellen:  
  
-   Er benachrichtigt alle entsprechenden Einstellungs Anbieter über das vorhanden sein der aktualisierten Anwendung über einen aufzurufenden <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> Methode, vorausgesetzt, Sie haben die <xref:System.Configuration.IApplicationSettingsProvider>-Schnittstelle implementiert. Diese Aktion wird nicht ausgeführt, wenn die Wrapper Klasse für Einstellungen mit <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>gekennzeichnet ist.  
  
-   Die Werte für alle Anwendungseinstellungen werden erneut geladen.  
  
 Sie können das Standardverhalten von <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> außer Kraft setzen, um benutzerdefiniertes Upgrade oder Zusammenführungs Verhalten zu implementieren. Verwenden Sie die <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>-Methode, um einzelne Werte für eine Einstellung für die vorherige Version der Anwendung abzurufen. Beispiele für benutzerdefiniertes Upgradeverhalten sind:  
  
-   Verwenden neuer Richtlinien Standardwerte, die einen oder mehrere der vorherigen benutzerdefinierten Werte oder die vorherigen Standardwerte überschreiben.  
  
-   Besondere Übersetzung von alten Werten, die mit neueren Bereichen, einer anderen Einstellungs Eigenschaften Gruppe usw. kompatibel sein sollen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Die Konfigurationsdatei konnte nicht analysiert werden.</exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>
