<Type Name="AppSettingsReader" FullName="System.Configuration.AppSettingsReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6f42fcff78c16ba23ccf407fcd9d84e90e98ff2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30376894" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AppSettingsReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppSettingsReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.AppSettingsReader" />
  <TypeSignature Language="VB.NET" Value="Public Class AppSettingsReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppSettingsReader" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="089dc-101">Stellt eine Methode für das Lesen von Werten eines bestimmten Typs aus der Konfiguration bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="089dc-101">Provides a method for reading values of a particular type from the configuration.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="089dc-102">Das folgende Beispiel erstellt eine Konfigurationsdatei mit den `<appSettings>` Abschnitt zugewiesen und dann verwendet der <xref:System.Configuration.AppSettingsReader> , lesen die Einstellungen, die gerade generiert wurde.</span><span class="sxs-lookup"><span data-stu-id="089dc-102">The following example creates a configuration file that contains the `<appSettings>` section, and then uses the <xref:System.Configuration.AppSettingsReader> to read the settings just generated.</span></span>  
  
```  
using System;  
using System.Configuration;  
  
class Program  
{  
    static void Main(string[] args)  
    {  
        var reader = new AppSettingsReader();  
  
        var stringSetting = reader.GetValue("String setting", typeof(string));  
        Console.WriteLine("String setting: " + stringSetting);  
  
        var dateTimeSetting = reader.GetValue("DateTime setting", typeof(DateTime));  
        Console.WriteLine("DateTime setting: " + dateTimeSetting);  
  
        try  
        {  
            var missingSetting = reader.GetValue("Int setting", typeof(Int32));  
        }  
        catch (InvalidOperationException e)  
        {  
            Console.WriteLine("Missing key error: " + e.Message);  
        }  
  
        Console.WriteLine("Press any key to continue");  
        Console.ReadKey();  
    }  
}  
```  
  
 <span data-ttu-id="089dc-103">Im folgende Beispiel wird veranschaulicht, eine Konfigurationsdatei, die im vorherigen Beispiel verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="089dc-103">The following example demonstrates a configuration file used by the previous example.</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
    <appSettings>  
        <add key="String setting" value="String retrieved from App.Config"/>  
        <add key="Date setting" value="Thursday, December 01, 2005 12:53:56 PM"/>  
    </appSettings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.AppSettingsSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppSettingsReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.AppSettingsReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppSettingsReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="089dc-104">Initialisiert eine neue Instanz der <see cref="T:System.Configuration.AppSettingsReader" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-104">Initializes a new instance of the <see cref="T:System.Configuration.AppSettingsReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="089dc-105">Das folgende Beispiel erstellt eine Konfigurationsdatei mit den `<appSettings>` Abschnitt zugewiesen und dann verwendet der <xref:System.Configuration.AppSettingsReader> , lesen die Einstellungen, die gerade generiert wurde.</span><span class="sxs-lookup"><span data-stu-id="089dc-105">The following example creates a configuration file that contains the `<appSettings>` section, and then uses the <xref:System.Configuration.AppSettingsReader> to read the settings just generated.</span></span>  
  
```  
using System;  
using System.Configuration;  
  
class Program  
{  
    static void Main(string[] args)  
    {  
        var reader = new AppSettingsReader();  
  
        var stringSetting = reader.GetValue("String setting", typeof(string));  
        Console.WriteLine("String setting: " + stringSetting);  
  
        var dateTimeSetting = reader.GetValue("DateTime setting", typeof(DateTime));  
        Console.WriteLine("DateTime setting: " + dateTimeSetting);  
  
        try  
        {  
            var missingSetting = reader.GetValue("Int setting", typeof(Int32));  
        }  
        catch (InvalidOperationException e)  
        {  
            Console.WriteLine("Missing key error: " + e.Message);  
        }  
  
        Console.WriteLine("Press any key to continue");  
        Console.ReadKey();  
    }  
}  
```  
  
 <span data-ttu-id="089dc-106">Im folgende Beispiel wird veranschaulicht, eine Konfigurationsdatei, die im vorherigen Beispiel verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="089dc-106">The following example demonstrates a configuration file used by the previous example.</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
    <appSettings>  
        <add key="String setting" value="String retrieved from App.Config"/>  
        <add key="Date setting" value="Thursday, December 01, 2005 12:53:56 PM"/>  
    </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string key, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string key, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ key, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="089dc-107">Der Schlüssel, für den der Wert abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-107">The key for which to get the value.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="089dc-108">Der Typ des zurückzugebenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-108">The type of the object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="089dc-109">Ruft den Wert für einen angegebenen Schlüssel aus der <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" />-Eigenschaft ab und gibt ein Objekt des angegebenen Typs mit dem Wert aus der Konfiguration zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-109">Gets the value for a specified key from the <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> property and returns an object of the specified type containing the value from the configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="089dc-110">Der Wert des angegebenen Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-110">The value of the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="089dc-111">Das folgende Beispiel zeigt, wie Sie die <xref:System.Configuration.AppSettingsReader.GetValue%2A> Methode zum Abrufen des Werts für jeden Schlüssel in der `<appSettings>` Abschnitt der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="089dc-111">The following example shows how to use the <xref:System.Configuration.AppSettingsReader.GetValue%2A> method to retrieve the value for each key in the `<appSettings>` section of the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.AppSettingsReader#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.AppSettingsReader/CS/AppSettingsReader.cs#2)]
 [!code-vb[System.Configuration.AppSettingsReader#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.AppSettingsReader/VB/AppSettingsReader.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="089dc-112">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-112">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="089dc-113">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-113">\- or -</span>
          </span>
          <span data-ttu-id="089dc-114">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-114">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="089dc-115">Der <paramref name="key" /> ist im <see langword="&lt;appSettings&gt;" />-Konfigurationsabschnitt nicht vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-115">
              <paramref name="key" /> does not exist in the <see langword="&lt;appSettings&gt;" /> configuration section.</span>
          </span>
          <span data-ttu-id="089dc-116">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-116">\- or -</span>
          </span>
          <span data-ttu-id="089dc-117">Der Wert für <paramref name="key" /> im <see langword="&lt;appSettings&gt;" />-Konfigurationsabschnitt weist nicht den Typ <paramref name="type" /> auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="089dc-117">The value in the <see langword="&lt;appSettings&gt;" /> configuration section for <paramref name="key" /> is not of type <paramref name="type" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
      </Docs>
    </Member>
  </Members>
</Type>