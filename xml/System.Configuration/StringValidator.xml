<Type Name="StringValidator" FullName="System.Configuration.StringValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6e218f5b5c8434702d19fd67375dfb168e04f2d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37685714" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.StringValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type StringValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80211-101">Provides validation of a string.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80211-101">Provides validation of a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80211-102">Die <xref:System.Configuration.StringValidator> Klasse wird verwendet, um sicherzustellen, dass eine Zeichenfolge die bestimmte Kriterien erfüllen.</span><span class="sxs-lookup"><span data-stu-id="80211-102">The <xref:System.Configuration.StringValidator> class is used to ensure that a string meets specific criteria.</span></span> <span data-ttu-id="80211-103">Die Kriterien für die Überprüfung wird hergestellt, wenn eine Instanz der <xref:System.Configuration.StringValidator> -Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="80211-103">The criteria for validation is established when an instance of the <xref:System.Configuration.StringValidator> class is created.</span></span> <span data-ttu-id="80211-104">Es gibt drei Konstruktorüberladungen für die <xref:System.Configuration.StringValidator> Klasse.</span><span class="sxs-lookup"><span data-stu-id="80211-104">There are three constructor overloads for the <xref:System.Configuration.StringValidator> class.</span></span> <span data-ttu-id="80211-105">Die <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> Konstruktor mit einem Parameter wird überprüft, ob die akzeptable Mindestlänge der Zeichenfolge überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="80211-105">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> constructor with one parameter verifies the minimum acceptable length of the string being validated.</span></span> <span data-ttu-id="80211-106">Die <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Konstruktor mit zwei Parametern wird sichergestellt, dass der überprüfte Zeichenfolge einen minimalen und einer maximalen Länge entspricht.</span><span class="sxs-lookup"><span data-stu-id="80211-106">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length.</span></span> <span data-ttu-id="80211-107">Die <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> Konstruktor mit drei Parametern überprüft wird, sowohl Werte die minimale und die maximale Länge der Zeichenfolge überprüft wird, sowie, ob der bestimmte Zeichen vorhanden ist, in der Zeichenfolge, die validiert sind.</span><span class="sxs-lookup"><span data-stu-id="80211-107">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.</span></span>  
  
 <span data-ttu-id="80211-108">Die <xref:System.Configuration.StringValidator.CanValidate%2A> Methode bestimmt, ob der Objekttyp validiert wird mit dem erwarteten Typ übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="80211-108">The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="80211-109">Der zu prüfenden Objekts als Parameter übergeben wird die <xref:System.Configuration.StringValidator.Validate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="80211-109">The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80211-110">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Configuration.StringValidator> Typ.</span><span class="sxs-lookup"><span data-stu-id="80211-110">The following example demonstrates how to use the <xref:System.Configuration.StringValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#1)]
 [!code-vb[System.Configuration.StringValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.StringValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80211-111">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-111">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator minLength" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength">
          <span data-ttu-id="80211-112">An integer that specifies the minimum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-112">An integer that specifies the minimum length of the string value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80211-113">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-113">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80211-114">Die <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor überprüft die akzeptable Mindestlänge der Zeichenfolge überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="80211-114">The <xref:System.Configuration.StringValidator.%23ctor%2A> constructor verifies the minimum acceptable length of the string being validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength">
          <span data-ttu-id="80211-115">An integer that specifies the minimum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-115">An integer that specifies the minimum length of the string value.</span>
          </span>
        </param>
        <param name="maxLength">
          <span data-ttu-id="80211-116">An integer that specifies the maximum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-116">An integer that specifies the maximum length of the string value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80211-117">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-117">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80211-118">Dies <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor stellt sicher, dass der überprüfte Zeichenfolge einen minimalen und einer maximalen Länge entspricht.</span><span class="sxs-lookup"><span data-stu-id="80211-118">This <xref:System.Configuration.StringValidator.%23ctor%2A> constructor ensures that the string being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength, string invalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength, string invalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer, invalidCharacters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength, System::String ^ invalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int * string -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength, invalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
        <Parameter Name="invalidCharacters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="minLength">
          <span data-ttu-id="80211-119">An integer that specifies the minimum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-119">An integer that specifies the minimum length of the string value.</span>
          </span>
        </param>
        <param name="maxLength">
          <span data-ttu-id="80211-120">An integer that specifies the maximum length of the string value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-120">An integer that specifies the maximum length of the string value.</span>
          </span>
        </param>
        <param name="invalidCharacters">
          <span data-ttu-id="80211-121">A string that represents invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-121">A string that represents invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80211-122">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-122">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80211-123">Dies <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor stellt sicher, dass die Zeichenfolge, die validiert einen minimalen und einer maximalen Länge entspricht, und stellt zudem sicher, dass bestimmte Zeichen in der Zeichenfolge ausgeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="80211-123">This <xref:System.Configuration.StringValidator.%23ctor%2A> constructor ensures that the string being validated adheres to both a minimum and a maximum length, and also ensures that specific characters are excluded in the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80211-124">Im folgenden Beispiel wird veranschaulicht, wie dies <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="80211-124">The following example demonstrates how to use this <xref:System.Configuration.StringValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="80211-125">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Configuration.StringValidator> Klasse.</span><span class="sxs-lookup"><span data-stu-id="80211-125">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#2)]
 [!code-vb[System.Configuration.StringValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="stringValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="80211-126">The object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-126">The object type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80211-127">Determines whether an object can be validated based on type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-127">Determines whether an object can be validated based on type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80211-128">
            <see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-128">
              <see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80211-129">Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.StringValidator.CanValidate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="80211-129">The following example demonstrates how to use the <xref:System.Configuration.StringValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="80211-130">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Configuration.StringValidator> Klasse.</span><span class="sxs-lookup"><span data-stu-id="80211-130">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#3)]
 [!code-vb[System.Configuration.StringValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="stringValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="80211-131">The object value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-131">The object value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80211-132">Determines whether the value of an object is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-132">Determines whether the value of an object is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80211-133">Die <xref:System.Configuration.StringValidator> -Klasse enthält die erforderlichen Kriterien für ein Zeichenfolgenobjekt zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="80211-133">The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object.</span></span> <span data-ttu-id="80211-134">Die Kriterien werden festgelegt, wenn eine Instanz der <xref:System.Configuration.StringValidator> -Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="80211-134">The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created.</span></span> <span data-ttu-id="80211-135">Das zu validierende Objekt als Parameter übergeben wird die <xref:System.Configuration.StringValidator.Validate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="80211-135">The object to validate is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80211-136">Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.StringValidator.Validate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="80211-136">The following example demonstrates how to use the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span> <span data-ttu-id="80211-137">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Configuration.StringValidator> Klasse.</span><span class="sxs-lookup"><span data-stu-id="80211-137">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#4)]
 [!code-vb[System.Configuration.StringValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80211-138">
            <paramref name="value" /> is less than <paramref name="minValue" /> or greater than <paramref name="maxValue" /> as defined in the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-138">
              <paramref name="value" /> is less than <paramref name="minValue" /> or greater than <paramref name="maxValue" /> as defined in the constructor.</span>
          </span>
          <span data-ttu-id="80211-139">\- or -  <paramref name="value" /> contains invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80211-139">\- or -  <paramref name="value" /> contains invalid characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>