<Type Name="StringValidator" FullName="System.Configuration.StringValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6aed90442c65c6746765274c9ec6315a2811a086" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70581001" /></Metadata><TypeSignature Language="C#" Value="public class StringValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.StringValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type StringValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d4d2-101">Stellt die Validierung einer Zeichenfolge bereit.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-101">Provides validation of a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d4d2-102">Die <xref:System.Configuration.StringValidator> -Klasse wird verwendet, um sicherzustellen, dass eine Zeichenfolge bestimmte Kriterien erfüllt.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-102">The <xref:System.Configuration.StringValidator> class is used to ensure that a string meets specific criteria.</span></span> <span data-ttu-id="8d4d2-103">Die Kriterien für die Validierung werden festgelegt, wenn eine <xref:System.Configuration.StringValidator> Instanz der-Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-103">The criteria for validation is established when an instance of the <xref:System.Configuration.StringValidator> class is created.</span></span> <span data-ttu-id="8d4d2-104">Es gibt drei Konstruktorüberladungen für die <xref:System.Configuration.StringValidator> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-104">There are three constructor overloads for the <xref:System.Configuration.StringValidator> class.</span></span> <span data-ttu-id="8d4d2-105">Der <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> Konstruktor mit einem Parameter überprüft die minimal zulässige Länge der Zeichenfolge, die überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-105">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> constructor with one parameter verifies the minimum acceptable length of the string being validated.</span></span> <span data-ttu-id="8d4d2-106">Der <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Konstruktor mit zwei Parametern stellt sicher, dass die überprüfte Zeichenfolge sowohl der minimalen als auch der maximalen Länge entspricht.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-106">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length.</span></span> <span data-ttu-id="8d4d2-107">Der <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> Konstruktor mit drei Parametern prüft sowohl den minimalen als auch den maximalen Längen Wert der zu überprüfenden Zeichenfolge und ob bestimmte Zeichen in der zu validierenden Zeichenfolge vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-107">The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.</span></span>  
  
 <span data-ttu-id="8d4d2-108">Die <xref:System.Configuration.StringValidator.CanValidate%2A> -Methode bestimmt, ob der überprüfte Objekttyp mit dem erwarteten Typ übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-108">The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="8d4d2-109">Das Objekt, das überprüft wird, wird als Parameter der <xref:System.Configuration.StringValidator.Validate%2A> -Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-109">The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d4d2-110">Im folgenden Beispiel wird veranschaulicht, wie der <xref:System.Configuration.StringValidator> -Typ verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-110">The following example demonstrates how to use the <xref:System.Configuration.StringValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#1)]
 [!code-vb[System.Configuration.StringValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.StringValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d4d2-111">Initialisiert eine neue Instanz der <see cref="T:System.Configuration.StringValidator" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-111">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator minLength" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength"><span data-ttu-id="8d4d2-112">Eine ganze Zahl, die die Mindestlänge des Zeichenfolgenwerts angibt.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-112">An integer that specifies the minimum length of the string value.</span></span></param>
        <summary><span data-ttu-id="8d4d2-113">Initialisiert auf Grundlage eines angegebenen Parameters eine neue Instanz der <see cref="T:System.Configuration.StringValidator" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-113">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d4d2-114">Der <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor überprüft die minimal zulässige Länge der Zeichenfolge, die überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-114">The <xref:System.Configuration.StringValidator.%23ctor%2A> constructor verifies the minimum acceptable length of the string being validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength"><span data-ttu-id="8d4d2-115">Eine ganze Zahl, die die Mindestlänge des Zeichenfolgenwerts angibt.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-115">An integer that specifies the minimum length of the string value.</span></span></param>
        <param name="maxLength"><span data-ttu-id="8d4d2-116">Eine ganze Zahl, die die Höchstlänge des Zeichenfolgenwerts angibt.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-116">An integer that specifies the maximum length of the string value.</span></span></param>
        <summary><span data-ttu-id="8d4d2-117">Initialisiert auf Grundlage von angegebenen Parametern eine neue Instanz der <see cref="T:System.Configuration.StringValidator" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-117">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d4d2-118">Dieser <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor stellt sicher, dass die überprüfte Zeichenfolge sowohl der minimalen als auch der maximalen Länge entspricht.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-118">This <xref:System.Configuration.StringValidator.%23ctor%2A> constructor ensures that the string being verified adheres to both a minimum and a maximum length.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength, string invalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength, string invalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer, invalidCharacters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength, System::String ^ invalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int * string -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength, invalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
        <Parameter Name="invalidCharacters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="minLength"><span data-ttu-id="8d4d2-119">Eine ganze Zahl, die die Mindestlänge des Zeichenfolgenwerts angibt.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-119">An integer that specifies the minimum length of the string value.</span></span></param>
        <param name="maxLength"><span data-ttu-id="8d4d2-120">Eine ganze Zahl, die die Höchstlänge des Zeichenfolgenwerts angibt.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-120">An integer that specifies the maximum length of the string value.</span></span></param>
        <param name="invalidCharacters"><span data-ttu-id="8d4d2-121">Eine Zeichenfolge, die ungültige Zeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-121">A string that represents invalid characters.</span></span></param>
        <summary><span data-ttu-id="8d4d2-122">Initialisiert auf Grundlage von angegebenen Parametern eine neue Instanz der <see cref="T:System.Configuration.StringValidator" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-122">Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d4d2-123">Dieser <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor stellt sicher, dass die zu validierende Zeichenfolge sowohl einer minimalen als auch einer maximalen Länge entspricht, und stellt außerdem sicher, dass bestimmte Zeichen in der Zeichenfolge ausgeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-123">This <xref:System.Configuration.StringValidator.%23ctor%2A> constructor ensures that the string being validated adheres to both a minimum and a maximum length, and also ensures that specific characters are excluded in the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d4d2-124">Im folgenden Beispiel wird veranschaulicht, wie dieser <xref:System.Configuration.StringValidator.%23ctor%2A> Konstruktor verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-124">The following example demonstrates how to use this <xref:System.Configuration.StringValidator.%23ctor%2A> constructor.</span></span> <span data-ttu-id="8d4d2-125">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Configuration.StringValidator> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-125">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#2)]
 [!code-vb[System.Configuration.StringValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="stringValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8d4d2-126">Der Objekttyp.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-126">The object type.</span></span></param>
        <summary><span data-ttu-id="8d4d2-127">Bestimmt, ob ein Objekt auf Grundlage des Typs validiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-127">Determines whether an object can be validated based on type.</span></span></summary>
        <returns><span data-ttu-id="8d4d2-128"><see langword="true" />, wenn der <paramref name="type" />-Parameter einer Zeichenfolge entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-128"><see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d4d2-129">Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.StringValidator.CanValidate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-129">The following example demonstrates how to use the <xref:System.Configuration.StringValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="8d4d2-130">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Configuration.StringValidator> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-130">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#3)]
 [!code-vb[System.Configuration.StringValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="stringValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8d4d2-131">Der Objektwert.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-131">The object value.</span></span></param>
        <summary><span data-ttu-id="8d4d2-132">Bestimmt, ob der Wert eines Objekts gültig ist.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-132">Determines whether the value of an object is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d4d2-133">Die <xref:System.Configuration.StringValidator> -Klasse enthält die Kriterien, die zum Validieren eines String-Objekts erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-133">The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object.</span></span> <span data-ttu-id="8d4d2-134">Die Kriterien werden festgelegt, wenn eine Instanz <xref:System.Configuration.StringValidator> der-Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-134">The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created.</span></span> <span data-ttu-id="8d4d2-135">Das zu überprüfende Objekt wird als Parameter der <xref:System.Configuration.StringValidator.Validate%2A> -Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-135">The object to validate is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d4d2-136">Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.StringValidator.Validate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-136">The following example demonstrates how to use the <xref:System.Configuration.StringValidator.Validate%2A> method.</span></span> <span data-ttu-id="8d4d2-137">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Configuration.StringValidator> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-137">This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.StringValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#4)]
 [!code-vb[System.Configuration.StringValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d4d2-138"><paramref name="value" /> ist kleiner als <paramref name="minValue" /> oder größer als <paramref name="maxValue" /> gemäß der Definition im Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-138"><paramref name="value" /> is less than <paramref name="minValue" /> or greater than <paramref name="maxValue" /> as defined in the constructor.</span></span>  
  
<span data-ttu-id="8d4d2-139">- oder -</span><span class="sxs-lookup"><span data-stu-id="8d4d2-139">-or-</span></span> 
 <span data-ttu-id="8d4d2-140"><paramref name="value" /> enthält ungültige Zeichen.</span><span class="sxs-lookup"><span data-stu-id="8d4d2-140"><paramref name="value" /> contains invalid characters.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
