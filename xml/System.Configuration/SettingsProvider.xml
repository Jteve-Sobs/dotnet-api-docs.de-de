<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1351a3f7fc992a3e2d52714283ed55067c5b4267" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86732003" /></Metadata><TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fungiert als Basisklasse zum Ableiten benutzerdefinierter Einstellungsanbieter in der Anwendungseinstellungsarchitektur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Einstellungs Anbieter definiert den Mechanismus zum Speichern von Konfigurationsdaten, die in der Architektur der Anwendungseinstellungen verwendet werden. Die .NET Framework enthält einen einzelnen Standard Einstellungs Anbieter, <xref:System.Configuration.LocalFileSettingsProvider> , der Konfigurationsdaten im lokalen Dateisystem speichert. Sie können jedoch auch alternative Speicher Mechanismen erstellen, indem Sie von der abstrakten- <xref:System.Configuration.SettingsProvider> Klasse ableiten. Der Anbieter, den eine Wrapper Klasse verwendet, wird bestimmt, indem die Wrapper Klasse mit dem versehen wird <xref:System.Configuration.SettingsProviderAttribute> . Wenn dieses Attribut nicht angegeben wird, wird der Standardwert, <xref:System.Configuration.LocalFileSettingsProvider> , verwendet.  
  
 Wenn Sie einen benutzerdefinierten Einstellungs Anbieter erstellen, müssen Sie mindestens Implementierungen für die drei Methoden dieser Klasse bereitstellen: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> , <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> und <xref:System.Configuration.SettingsProvider.ApplicationName%2A> .  
  
 Bei Client Anwendungen können Sie einem benutzerdefinierten Anbieter eine standardisiertere Funktionalität hinzufügen, indem Sie auch die- <xref:System.Configuration.IApplicationSettingsProvider> Schnittstelle implementieren. Diese Schnittstelle spiegelt die in der-Klasse gefundenen Methoden <xref:System.Configuration.ApplicationSettingsBase> wider, die hauptsächlich Versions Unterstützung ermöglicht.  
  
 In der Regel sollten Sie Einstellungs Anbieter so entwerfen, dass Sie eine einzelne Instanz aufweisen, um Speicherressourcen Konflikte zu vermeiden. Anbieter sollten auch Thread sicher sein, da Sie gleichzeitig von mehreren Wrapper Instanzen in einer einzelnen Anwendungsdomäne oder von mehreren Anwendungen in verschiedenen Domänen aufgerufen werden können.  
  
 Ein Einstellungs Anbieter muss mindestens drei Attribute erkennen: <xref:System.Configuration.ApplicationScopedSettingAttribute> , <xref:System.Configuration.UserScopedSettingAttribute> und <xref:System.Configuration.DefaultSettingValueAttribute> . Eine vollständige Liste der Attribute, die auf Anwendungseinstellungen angewendet werden können, finden Sie unter [Attribute für Anwendungseinstellungen](/dotnet/framework/winforms/advanced/application-settings-attributes). Ein benutzerdefinierter Einstellungs Anbieter sollte auf folgende Weise auf Einstellungs Eigenschaften angewendete Attribute auflösen:  
  
1.  Wenn der Anbieter die vom Attribut implizierte Anforderung erfüllen kann, sollte dies natürlich der Fall sein.  
  
2.  Wenn der Anbieter die Anforderung nicht erfüllen kann, sollte er im Hintergrund ignoriert werden.  
  
3.  , Wenn zwei oder mehr Eigenschaften einen Konflikt verursachen. zum Beispiel eine-Eigenschaft, die sowohl mit <xref:System.Configuration.ApplicationScopedSettingAttribute> als auch mit versehen wird <xref:System.Configuration.UserScopedSettingAttribute> . der Anbieter sollte eine auslösen <xref:System.Configuration.ConfigurationException> .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
    <related type="Article" href="/dotnet/framework/winforms/advanced/application-settings-architecture">Architektur der Anwendungseinstellungen</related>
    <related type="Article" href="/dotnet/framework/winforms/advanced/application-settings-attributes">Attribute für Anwendungseinstellungen</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Configuration.SettingsProvider" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist dieser standardmäßige geschützte Konstruktor für diese abstrakte Klasse. Anbieter für abgeleitete benutzerdefinierte Einstellungen müssen keinen expliziten Konstruktor bereitstellen, da die <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> Methode in der Regel die gesamte Initialisierung durchführt.  
  
 Client Code instanziiert einen Einstellungs Anbieter in der Regel nicht direkt. Verwenden Sie stattdessen die folgende Prozedur, um einen Einstellungs Anbieter für eine bestimmte Einstellungs Eigenschaft zu finden:  
  
1.  Ruft die- <xref:System.ComponentModel.Component.GetService%2A> Methode für die aktuelle-oder-Methode auf <xref:System.ComponentModel.Component> <xref:System.ComponentModel.ISite> , um einen Verweis auf die aktuelle zurückzugeben <xref:System.Configuration.ISettingsProviderService> .  
  
2.  Ruft die- <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> Methode der ab <xref:System.Configuration.ISettingsProviderService> , die im ersten Schritt abgerufen wird, um den Einstellungs Anbieter zurückzugeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der aktuell ausgeführten Anwendung ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" /> -Wert, der den verkürzten Namen der Anwendung enthält, der keinen vollständigen Pfad oder keine Erweiterung enthält, z. b. <c>SimpleAppSettings</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.SettingsProvider.ApplicationName%2A> -Eigenschaft und die-Eigenschaft <xref:System.Configuration.Provider.ProviderBase.Name%2A> helfen, ähnlich benannte Einstellungs Eigenschaften in verschiedenen Anwendungen eindeutig zu machen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</param>
        <param name="collection">Eine <see cref="T:System.Configuration.SettingsPropertyCollection" />, die die Einstellungseigenschaftengruppe enthält, deren Werte abgerufen werden sollen.</param>
        <summary>Gibt die Auflistung der Einstellungseigenschaftswerte für die angegebene Anwendungsinstanz und Einstellungseigenschaftengruppe zurück.</summary>
        <returns>Eine <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, die Werte für die angegebene Einstellungseigenschaftengruppe enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> Methode muss implementiert werden, um spezielle Einstellungen zu verarbeiten, die mit markiert <xref:System.Configuration.SpecialSettingAttribute> sind, und die Anwendungs-und Benutzereinstellungen abzustimmen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</param>
        <param name="collection">Eine <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, die die Gruppe der festzulegenden Eigenschafteneinstellungen darstellt.</param>
        <summary>Legt die Werte der angegebenen Gruppe von Eigenschafteneinstellungen fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> enthält die- <xref:System.Configuration.ApplicationSettingsBase.Save%2A> Methode, die aufgerufen wird, um die Werte aller Einstellungs Eigenschaften beizubehalten. Diese Methode listet alle Einstellungs Anbieter auf, die Ihren Einstellungs Eigenschaften zugeordnet sind, und ruft die- <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> Methode für jedes-Element <xref:System.Configuration.SettingsProvider> auf, um die tatsächliche Serialisierung auszuführen.  
  
 Die- <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> Methode sollte mit Sicherheitsbedenken implementiert werden:  
  
-   Nur voll vertrauenswürdiger Code sollte die Aktualisierung von Anwendungseinstellungen erlauben. Teilweise vertrauenswürdiger Code sollte nur die Aktualisierung der Benutzer Anwendungseinstellungen erlauben. Nicht vertrauenswürdiger Code darf die Anwendungseinstellungen in der Regel nicht aktualisieren.  
  
-   Verwendungs Kontingente sollten als Schutz vor Ressourcen Angriffen durch teilweise vertrauenswürdige Anwendungen angesehen werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>
