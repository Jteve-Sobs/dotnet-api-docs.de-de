<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConfigurationConverterBase.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ca0909547ea686593c46dfc425d5dd5a207464bf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca0909547ea686593c46dfc425d5dd5a207464bf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>The base class for the configuration converter types.</source>
          <target state="translated">Die Basisklasse für die Konfigurationskonvertertypen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase&gt;</ph> is the base class for the converter configuration types.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase&gt;</ph> ist die Basisklasse für den Konverter Konfigurationstypen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>These are types that convert strings, found in the configuration file, to and from the related strongly typed properties.</source>
          <target state="translated">Hierbei handelt es sich um Typen, die Konvertierung von Zeichenfolgen, in verschiedene andere und aus den stark typisierten Eigenschaften der Konfigurationsdatei gefunden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>The following code examples show how to derive from the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase&gt;</ph> class to create a custom <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> converter type.</source>
          <target state="translated">Die folgenden Codebeispiele zeigen, wie Ableitung der <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase&gt;</ph> Klasse zum Erstellen eines benutzerdefinierten <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> Typkonverters.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>Also, the examples show how to use this type in a custom section.</source>
          <target state="translated">Darüber hinaus den folgenden Beispielen wie dieses Typs in einem benutzerdefinierten Abschnitt verwendet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>The following code example shows how to create a custom <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> converter type from the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationConverterBase&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> Typkonverters aus der <ph id="ph2">&lt;xref:System.Configuration.ConfigurationConverterBase&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>The following code example shows how to define a custom section that uses the previous custom <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> converter.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie einen benutzerdefinierten Abschnitt zu definieren, das vorherige benutzerdefinierte verwendet <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> Konverter.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>The following code example shows how to create and modify a configuration file using the previous custom section.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie eine Konfigurationsdatei mit den vorherigen benutzerdefinierten Abschnitt zu erstellen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationConverterBase">
          <source>The following is a configuration excerpt as used by the previous example.</source>
          <target state="translated">Im folgenden finden einen Konfigurationsauszug wie im vorherigen Beispiel verwendet.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationConverterBase" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationConverterBase" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationConverterBase.#ctor">
          <source>Because you normally use the converter types provided by the system, the only time you need the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.%23ctor%2A&gt;</ph> constructor is when you must create your own conversion type.</source>
          <target state="translated">Da Sie normalerweise die Konvertertypen, die vom System bereitgestellte verwenden, werden nur dann müssen Sie die <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.%23ctor%2A&gt;</ph> Konstruktor ist, wenn Sie eine eigene Umrechnungstyp erstellen müssen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> object used for type conversions.</source>
          <target state="translated">Das für Typkonvertierungen verwendete <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to convert from.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, aus dem konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Determines whether the conversion is allowed.</source>
          <target state="translated">Bestimmt, ob die Konvertierung zulässig ist.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the conversion is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Konvertierung zulässig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt;</ph> method determines whether a conversion can be performed on strongly typed properties to obtain value strings used in the configuration file.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt;</ph> Methode bestimmt, ob eine Konvertierung für stark typisierte Eigenschaften zum Abrufen von Zeichenfolgen verwendet werden, in der Konfigurationsdatei ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The following example code shows how to override the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt;</ph> method to create a custom <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> converter type.</source>
          <target state="translated">Der folgende Beispielcode veranschaulicht das Überschreiben der <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt;</ph> Methode zum Erstellen eines benutzerdefinierten <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> Typkonverters.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, the example shows how to use this type in a custom section.</source>
          <target state="translated">Das Beispiel zeigt auch, wie Sie diesen Typ in einem benutzerdefinierten Abschnitt zu verwenden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> object used for type conversion.</source>
          <target state="translated">Das für die Typkonvertierung verwendete <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type to convert to.</source>
          <target state="translated">Der Typ, in den konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Determines whether the conversion is allowed.</source>
          <target state="translated">Bestimmt, ob die Konvertierung zulässig ist.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the conversion is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Konvertierung zulässig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt;</ph> method determines whether the strings contained in the configuration file can be converted to the related strongly typed properties.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt;</ph> Methode bestimmt, ob die in der Konfigurationsdatei enthaltenen Zeichenfolgen in die stark typisierten Eigenschaften konvertiert werden können.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The following example code shows how to override the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt;</ph> method to create a custom <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> converter type.</source>
          <target state="translated">Der folgende Beispielcode veranschaulicht das Überschreiben der <ph id="ph1">&lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt;</ph> Methode zum Erstellen eines benutzerdefinierten <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> Typkonverters.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, the example shows how to use this type in a custom section.</source>
          <target state="translated">Das Beispiel zeigt auch, wie Sie diesen Typ in einem benutzerdefinierten Abschnitt zu verwenden.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>