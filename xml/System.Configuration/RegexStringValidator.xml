<Type Name="RegexStringValidator" FullName="System.Configuration.RegexStringValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59778b1058f818ccedbfc9b5a304f30e6f98c891" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37686614" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegexStringValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegexStringValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.RegexStringValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexStringValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexStringValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type RegexStringValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="31d5f-101">Stellt die Validierung einer Zeichenfolge auf Grundlage der von einem regulären Ausdruck bereitgestellten Regeln bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31d5f-101">Provides validation of a string based on the rules provided by a regular expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d5f-102">Die <xref:System.Configuration.RegexStringValidator> Objekt enthält die Regeln, die erforderlich sind, um eine String-Objekt, das basierend auf einem regulären Ausdruck zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="31d5f-102">The <xref:System.Configuration.RegexStringValidator> object contains the rules necessary to validate a string object based on a regular expression.</span></span> <span data-ttu-id="31d5f-103">Die Regeln werden festgelegt, wenn eine Instanz der <xref:System.Configuration.RegexStringValidator> -Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="31d5f-103">The rules are established when an instance of the <xref:System.Configuration.RegexStringValidator> class is created.</span></span>  
  
 <span data-ttu-id="31d5f-104">Die <xref:System.Configuration.RegexStringValidator.CanValidate%2A> Methode bestimmt, ob der Objekttyp validiert wird mit dem erwarteten Typ übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="31d5f-104">The <xref:System.Configuration.RegexStringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type.</span></span> <span data-ttu-id="31d5f-105">Der zu prüfenden Objekts als Parameter übergeben wird die <xref:System.Configuration.RegexStringValidator.Validate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="31d5f-105">The object being validated is passed as a parameter of the <xref:System.Configuration.RegexStringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d5f-106">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Configuration.RegexStringValidator> Typ.</span><span class="sxs-lookup"><span data-stu-id="31d5f-106">The following code example demonstrates how to use the <xref:System.Configuration.RegexStringValidator> type.</span></span>  
  
 [!code-csharp[System.Configuration.RegexStringValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/CS/RegexStringValidator.cs#1)]
 [!code-vb[System.Configuration.RegexStringValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/VB/RegexStringValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexStringValidator (string regex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string regex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.RegexStringValidator.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (regex As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexStringValidator(System::String ^ regex);" />
      <MemberSignature Language="F#" Value="new System.Configuration.RegexStringValidator : string -&gt; System.Configuration.RegexStringValidator" Usage="new System.Configuration.RegexStringValidator regex" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regex" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regex">
          <span data-ttu-id="31d5f-107">Eine Zeichenfolge, die einen regulären Ausdruck angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-107">A string that specifies a regular expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d5f-108">Initialisiert eine neue Instanz der <see cref="T:System.Configuration.RegexStringValidator" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-108">Initializes a new instance of the <see cref="T:System.Configuration.RegexStringValidator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31d5f-109">
            <paramref name="regex" /> ist NULL oder eine leere Zeichenfolge ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-109">
              <paramref name="regex" /> is null or an empty string ("").</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="regexStringValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="31d5f-110">Der Objekttyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-110">The type of object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d5f-111">Bestimmt, ob der Typ des Objekts validiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-111">Determines whether the type of the object can be validated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31d5f-112">
            <see langword="true" />, wenn der <paramref name="type" />-Parameter einer Zeichenfolge entspricht, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-112">
              <see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d5f-113">Eine Ausnahme wird ausgelöst, wenn die Validierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="31d5f-113">An exception is thrown if the validation fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d5f-114">Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.RegexStringValidator.CanValidate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="31d5f-114">The following example demonstrates how to use the <xref:System.Configuration.RegexStringValidator.CanValidate%2A> method.</span></span> <span data-ttu-id="31d5f-115">Dieses Codebeispiel ist Teil eines größeren Beispiels, die aus Gründen der <xref:System.Configuration.RegexStringValidator> Klasse.</span><span class="sxs-lookup"><span data-stu-id="31d5f-115">This code example is part of a larger example that is provided for the <xref:System.Configuration.RegexStringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.RegexStringValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/CS/RegexStringValidator.cs#3)]
 [!code-vb[System.Configuration.RegexStringValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/VB/RegexStringValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.RegexStringValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="regexStringValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="31d5f-116">Der Wert eines Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-116">The value of an object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d5f-117">Bestimmt, ob der Wert eines Objekts gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-117">Determines whether the value of an object is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d5f-118">Ein <xref:System.Configuration.RegexStringValidator> Objekt enthält die Regeln, die erforderlich sind, um eine String-Objekt, das basierend auf einem regulären Ausdruck zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="31d5f-118">A <xref:System.Configuration.RegexStringValidator> object contains the rules necessary to validate a string object based on a regular expression.</span></span> <span data-ttu-id="31d5f-119">Die Regeln werden festgelegt, wenn eine Instanz der <xref:System.Configuration.RegexStringValidator> -Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="31d5f-119">The rules are established when an instance of the <xref:System.Configuration.RegexStringValidator> class is created.</span></span> <span data-ttu-id="31d5f-120">Das String-Objekt, um zu überprüfen, die als Parameter übergeben wird die <xref:System.Configuration.RegexStringValidator.Validate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="31d5f-120">The string object to validate is passed as a parameter of the <xref:System.Configuration.RegexStringValidator.Validate%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d5f-121">Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Configuration.RegexStringValidator.Validate%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="31d5f-121">The following code example demonstrates how to use the <xref:System.Configuration.RegexStringValidator.Validate%2A> method.</span></span> <span data-ttu-id="31d5f-122">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Configuration.RegexStringValidator> Klasse.</span><span class="sxs-lookup"><span data-stu-id="31d5f-122">This code example is part of a larger example provided for the <xref:System.Configuration.RegexStringValidator> class.</span></span>  
  
 [!code-csharp[System.Configuration.RegexStringValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/CS/RegexStringValidator.cs#4)]
 [!code-vb[System.Configuration.RegexStringValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/VB/RegexStringValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31d5f-123">
            <paramref name="value" /> entspricht nicht den Parametern der <see cref="T:System.Text.RegularExpressions.Regex" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d5f-123">
              <paramref name="value" /> does not conform to the parameters of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>