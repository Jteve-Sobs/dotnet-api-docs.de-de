<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6edcb865b7c182393a1575d9befd87e1d3307ca" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959656" /></Metadata><TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ConfigurationManager = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed ConfigurationManager extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="00a21-101">Stellt Zugriff auf Konfigurationsdateien für Clientanwendungen bereit.</span><span class="sxs-lookup"><span data-stu-id="00a21-101">Provides access to configuration files for client applications.</span></span> <span data-ttu-id="00a21-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-103">Die <xref:System.Configuration.ConfigurationManager>-Klasse ermöglicht Ihnen den Zugriff auf Computer-, Anwendungs-und Benutzer Konfigurationsinformationen.</span><span class="sxs-lookup"><span data-stu-id="00a21-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="00a21-104">Diese Klasse ersetzt die <xref:System.Configuration.ConfigurationSettings>-Klasse, die veraltet ist.</span><span class="sxs-lookup"><span data-stu-id="00a21-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="00a21-105">Verwenden Sie für Webanwendungen die <xref:System.Web.Configuration.WebConfigurationManager>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="00a21-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="00a21-106">Um die <xref:System.Configuration.ConfigurationManager>-Klasse verwenden zu können, muss das Projekt auf die `System.Configuration` Assembly verweisen.</span><span class="sxs-lookup"><span data-stu-id="00a21-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="00a21-107">Standardmäßig verweisen einige Projektvorlagen, z. b. Konsolenanwendung, nicht auf diese Assembly, sodass Sie Sie manuell referenzieren müssen.</span><span class="sxs-lookup"><span data-stu-id="00a21-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a21-108">Der Name und Speicherort der Anwendungs Konfigurationsdatei sind vom Host der Anwendung abhängig.</span><span class="sxs-lookup"><span data-stu-id="00a21-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="00a21-109">Weitere Informationen finden Sie unter [Konfigurieren von apps mithilfe von Konfigurationsdateien](/dotnet/framework/configure-apps/).</span><span class="sxs-lookup"><span data-stu-id="00a21-109">For more information, see [Configuring Apps by using Configuration Files](/dotnet/framework/configure-apps/).</span></span>  
  
 <span data-ttu-id="00a21-110">Sie können die integrierten <xref:System.Configuration> Typen verwenden oder von Ihnen ableiten, um Konfigurationsinformationen zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="00a21-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="00a21-111">Mit diesen Typen können Sie direkt mit Konfigurationsinformationen arbeiten und Konfigurationsdateien so erweitern, dass Sie benutzerdefinierte Informationen enthalten.</span><span class="sxs-lookup"><span data-stu-id="00a21-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="00a21-112">Die <xref:System.Configuration.ConfigurationManager>-Klasse enthält Member, mit denen Sie die folgenden Aufgaben ausführen können:</span><span class="sxs-lookup"><span data-stu-id="00a21-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="00a21-113">Liest einen Abschnitt aus einer Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="00a21-113">Read a section from a configuration file.</span></span> <span data-ttu-id="00a21-114">Um auf Konfigurationsinformationen zuzugreifen, müssen Sie die <xref:System.Configuration.ConfigurationManager.GetSection%2A>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="00a21-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="00a21-115">Verwenden Sie für einige Abschnitte wie `appSettings` und `connectionStrings`die Klassen <xref:System.Configuration.ConfigurationManager.AppSettings%2A> und <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A>.</span><span class="sxs-lookup"><span data-stu-id="00a21-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="00a21-116">Diese Member führen schreibgeschützte Vorgänge aus, verwenden eine einzelne zwischengespeicherte Instanz der Konfiguration und sind multithreadfähig.</span><span class="sxs-lookup"><span data-stu-id="00a21-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="00a21-117">Lesen und Schreiben von Konfigurationsdateien als Ganzes.</span><span class="sxs-lookup"><span data-stu-id="00a21-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="00a21-118">Die Anwendung kann Konfigurationseinstellungen auf jeder Ebene, für sich selbst oder für andere Anwendungen oder Computer lokal oder Remote lesen und schreiben.</span><span class="sxs-lookup"><span data-stu-id="00a21-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="00a21-119">Verwenden Sie eine der Methoden, die von der <xref:System.Configuration.ConfigurationManager>-Klasse bereitgestellt werden, um eine Konfigurationsdatei wie SampleApp. exe. config zu öffnen. Diese Methoden geben ein <xref:System.Configuration.Configuration> Objekt zurück, das wiederum Methoden und Eigenschaften verfügbar macht, die Sie verwenden können, um mit den zugeordneten Konfigurationsdateien zu arbeiten.</span><span class="sxs-lookup"><span data-stu-id="00a21-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="00a21-120">Mit den-Methoden werden Lese-oder Schreibvorgänge durchgeführt und die Konfigurationsdaten jedes Mal erstellt, wenn eine Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="00a21-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="00a21-121">Unterstützung von Konfigurationsaufgaben.</span><span class="sxs-lookup"><span data-stu-id="00a21-121">Support configuration tasks.</span></span> <span data-ttu-id="00a21-122">Die folgenden Typen werden verwendet, um verschiedene Konfigurationsaufgaben zu unterstützen:</span><span class="sxs-lookup"><span data-stu-id="00a21-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="00a21-123">Zusätzlich zum Arbeiten mit vorhandenen Konfigurationsinformationen können Sie benutzerdefinierte Konfigurationselemente erstellen und bearbeiten, indem Sie die integrierten Konfigurationstypen, z. b. die Klassen <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>und <xref:System.Configuration.ConfigurationSection>, erweitern.</span><span class="sxs-lookup"><span data-stu-id="00a21-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="00a21-124">Ein Beispiel für die programmgesteuerte Erweiterung eines integrierten Konfigurations Typs finden Sie unter <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="00a21-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="00a21-125">Ein Beispiel für die Erweiterung eines integrierten Konfigurations Typs, der das Attribut basierte Modell verwendet, finden Sie unter <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="00a21-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-126">Das erste Beispiel zeigt eine einfache Konsolenanwendung, die Anwendungseinstellungen liest, eine neue Einstellung hinzufügt und eine vorhandene Einstellung aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="00a21-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="00a21-127">Im vorherigen Beispiel wird davon ausgegangen, dass das Projekt über eine APP. config-Datei verfügt, wie unten gezeigt.</span><span class="sxs-lookup"><span data-stu-id="00a21-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="00a21-128">Im folgenden Beispiel wird gezeigt, wie eine Verbindungs Zeichenfolge verwendet wird, um Daten aus einer Datenbank zu lesen.</span><span class="sxs-lookup"><span data-stu-id="00a21-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="00a21-129">Im vorherigen Beispiel wird davon ausgegangen, dass das Projekt über eine APP. config verfügt, wie unten gezeigt.</span><span class="sxs-lookup"><span data-stu-id="00a21-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="00a21-130">Die <see cref="T:System.Configuration.Configuration" />-Klasse ermöglicht den programmgesteuerten Zugriff zum Bearbeiten von Konfigurationsdateien.</span><span class="sxs-lookup"><span data-stu-id="00a21-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span></span> <span data-ttu-id="00a21-131">Sie verwenden eine der geöffneten Methoden, die von <see cref="T:System.Configuration.ConfigurationManager" />bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span></span> <span data-ttu-id="00a21-132">Diese Methoden geben ein <see cref="T:System.Configuration.Configuration" /> Objekt zurück, das wiederum die erforderlichen Methoden und Eigenschaften bereitstellt, um die zugrunde liegenden Konfigurationsdateien zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="00a21-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span></span> <span data-ttu-id="00a21-133">Sie können auf diese Dateien zum Lesen oder Schreiben zugreifen.</span><span class="sxs-lookup"><span data-stu-id="00a21-133">You can access these files for reading or writing.</span></span>  
  
<span data-ttu-id="00a21-134">Um die Konfigurationsdateien zu lesen, verwenden Sie <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> oder <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" />, um die Konfigurationsinformationen zu lesen.</span><span class="sxs-lookup"><span data-stu-id="00a21-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span></span> <span data-ttu-id="00a21-135">Der Benutzer oder der Prozess, der liest, muss über die folgenden Berechtigungen verfügen:</span><span class="sxs-lookup"><span data-stu-id="00a21-135">The user or process that reads must have the following permissions:</span></span> 
<span data-ttu-id="00a21-136">-Leseberechtigung für die Konfigurationsdatei auf der aktuellen Konfigurations Hierarchieebene.</span><span class="sxs-lookup"><span data-stu-id="00a21-136">-   Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="00a21-137">: Leseberechtigungen für alle übergeordneten Konfigurationsdateien.</span><span class="sxs-lookup"><span data-stu-id="00a21-137">-   Read permissions on all the parent configuration files.</span></span>  
  
<span data-ttu-id="00a21-138">Wenn Ihre Anwendung schreibgeschützten Zugriff auf Ihre eigene Konfiguration benötigt, empfiehlt es sich, die <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />-Methode zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="00a21-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span> <span data-ttu-id="00a21-139">Diese Methode ermöglicht den Zugriff auf die zwischengespeicherten Konfigurationswerte für die aktuelle Anwendung, die eine bessere Leistung als die <see cref="T:System.Configuration.Configuration" /> Klasse aufweist.</span><span class="sxs-lookup"><span data-stu-id="00a21-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span>  
  
<span data-ttu-id="00a21-140">Verwenden Sie eine der <see cref="Overload:System.Configuration.Configuration.Save" /> Methoden, um in die Konfigurationsdateien zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="00a21-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span> <span data-ttu-id="00a21-141">Der Benutzer oder der Prozess, der schreibt, muss über die folgenden Berechtigungen verfügen:</span><span class="sxs-lookup"><span data-stu-id="00a21-141">The user or process that writes must have the following permissions:</span></span> 
<span data-ttu-id="00a21-142">-Schreib Berechtigung für die Konfigurationsdatei und das Verzeichnis auf der aktuellen Konfigurations Hierarchieebene.</span><span class="sxs-lookup"><span data-stu-id="00a21-142">-   Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="00a21-143">: Leseberechtigungen für alle Konfigurationsdateien.</span><span class="sxs-lookup"><span data-stu-id="00a21-143">-   Read permissions on all the configuration files.</span></span></para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
    <related type="Article" href="/dotnet/framework/configure-apps/"><span data-ttu-id="00a21-144">Konfigurationsdateien</span><span class="sxs-lookup"><span data-stu-id="00a21-144">Configuration Files</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Configuration.ConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a21-145">Ruft die <see cref="T:System.Configuration.AppSettingsSection" />-Daten für die Standardkonfiguration der aktuellen Anwendung ab.</span><span class="sxs-lookup"><span data-stu-id="00a21-145">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="00a21-146">Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt, das den Inhalt des <see cref="T:System.Configuration.AppSettingsSection" />-Objekts für die Standardkonfiguration der aktuellen Anwendung enthält.</span><span class="sxs-lookup"><span data-stu-id="00a21-146">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-147">Ein <xref:System.Configuration.AppSettingsSection>-Objekt enthält den Inhalt des `appSettings` Abschnitts der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="00a21-147">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-148">Das erste Beispiel zeigt eine einfache Konsolenanwendung, die Anwendungseinstellungen liest, eine neue Einstellung hinzufügt und eine vorhandene Einstellung aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="00a21-148">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="00a21-149">Im vorherigen Beispiel wird davon ausgegangen, dass das Projekt über eine APP. config-Datei verfügt, wie unten gezeigt.</span><span class="sxs-lookup"><span data-stu-id="00a21-149">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-150">Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt konnte mit den Anwendungseinstellungsdaten nicht abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-150">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span></span></exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a21-151">Ruft die <see cref="T:System.Configuration.ConnectionStringsSection" />-Daten für die Standardkonfiguration der aktuellen Anwendung ab.</span><span class="sxs-lookup"><span data-stu-id="00a21-151">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="00a21-152">Ein <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />-Objekt, das den Inhalt des <see cref="T:System.Configuration.ConnectionStringsSection" />-Objekts für die Standardkonfiguration der aktuellen Anwendung enthält.</span><span class="sxs-lookup"><span data-stu-id="00a21-152">A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-153">Ein <xref:System.Configuration.ConnectionStringsSection>-Objekt enthält den Inhalt des `connectionStrings` Abschnitts der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="00a21-153">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-154">Im folgenden Beispiel wird gezeigt, wie eine Verbindungs Zeichenfolge verwendet wird, um Daten aus einer Datenbank zu lesen.</span><span class="sxs-lookup"><span data-stu-id="00a21-154">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="00a21-155">Im vorherigen Beispiel wird davon ausgegangen, dass das Projekt über eine APP. config verfügt, wie unten gezeigt.</span><span class="sxs-lookup"><span data-stu-id="00a21-155">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-156">Es konnte kein <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />-Objekt abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-156">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span></span></exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Configuration.ConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="00a21-157">Der Konfigurationsabschnittspfad und -name.</span><span class="sxs-lookup"><span data-stu-id="00a21-157">The configuration section path and name.</span></span> <span data-ttu-id="00a21-158">Knotennamen werden durch Schrägstriche getrennt, z.B. „system.net/mailSettings/smtp“.</span><span class="sxs-lookup"><span data-stu-id="00a21-158">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span></span></param>
        <summary><span data-ttu-id="00a21-159">Ruft einen angegebenen Konfigurationsabschnitt für die Standardkonfiguration der aktuellen Anwendung ab.</span><span class="sxs-lookup"><span data-stu-id="00a21-159">Retrieves a specified configuration section for the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="00a21-160">Das angegebene <see cref="T:System.Configuration.ConfigurationSection" />-Objekt oder <see langword="null" />, wenn der Abschnitt nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="00a21-160">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-161">Bei Client Anwendungen ruft diese Methode eine Konfigurationsdatei ab, die durch das Zusammenführen der Anwendungs Konfigurationsdatei, der lokalen Benutzer Konfigurationsdatei und der Roamingkonfigurationsdatei abgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="00a21-161">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="00a21-162">Die <xref:System.Configuration.ConfigurationManager.GetSection%2A>-Methode greift auf Lauf Zeit Konfigurationsinformationen zu, die nicht geändert werden können.</span><span class="sxs-lookup"><span data-stu-id="00a21-162">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="00a21-163">Um die Konfiguration zu ändern, verwenden Sie die <xref:System.Configuration.Configuration.GetSection%2A>-Methode für die Konfigurationsdatei, die Sie mithilfe einer der folgenden geöffneten Methoden abrufen:</span><span class="sxs-lookup"><span data-stu-id="00a21-163">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-164">Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ConfigurationManager.GetSection%2A>-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="00a21-164">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="00a21-165">Das Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Configuration.ConfigurationManager>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="00a21-165">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-166">Eine Konfigurationsdatei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-166">A configuration file could not be loaded.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="00a21-167">Sie müssen den Rückgabewert in den erwarteten Konfigurationstyp umwandeln.</span><span class="sxs-lookup"><span data-stu-id="00a21-167">You must cast the return value to the expected configuration type.</span></span> <span data-ttu-id="00a21-168">Um mögliche Umwandlungs Ausnahmen zu vermeiden, sollten Sie einen bedingten Umwandlungs Vorgang wie den <see langword="as" /> Operator C# in oder die [TryCast](/dotnet/visual-basic/language-reference/operators/trycast-operator) -Funktion in Visual Basic verwenden.</span><span class="sxs-lookup"><span data-stu-id="00a21-168">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the [TryCast](/dotnet/visual-basic/language-reference/operators/trycast-operator) function in Visual Basic.</span></span></para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00a21-169">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration userLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel"><span data-ttu-id="00a21-170">Die <see cref="T:System.Configuration.ConfigurationUserLevel" />, für die Sie die Konfiguration öffnen.</span><span class="sxs-lookup"><span data-stu-id="00a21-170">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="00a21-171">Öffnet die Konfigurationsdatei für die aktuelle Anwendung als <see cref="T:System.Configuration.Configuration" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-171">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="00a21-172">Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-172">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-173">Client Anwendungen verwenden eine globale Konfiguration, die für alle Benutzer gilt, separate Konfigurationen, die für einzelne Benutzer gelten, und Konfigurationen, die für Roamingbenutzer gelten.</span><span class="sxs-lookup"><span data-stu-id="00a21-173">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="00a21-174">Der `userLevel`-Parameter bestimmt den Speicherort der zu öffnenden Konfigurationsdatei, indem er angibt, ob er über keine Benutzerebene (die Konfigurationsdatei befindet sich im gleichen Verzeichnis wie die Anwendung) oder über eine benutzerspezifische Ebene verfügt (die Konfigurationsdatei befindet sich in einem von der Benutzerebene festgelegten Pfad der Anwendungseinstellungen).</span><span class="sxs-lookup"><span data-stu-id="00a21-174">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="00a21-175">Geben Sie an, welche Konfiguration Sie erhalten möchten, indem Sie einen der folgenden Werte für `userLevel`übergeben:</span><span class="sxs-lookup"><span data-stu-id="00a21-175">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="00a21-176">Um das <xref:System.Configuration.Configuration> Objekt zu erhalten, das für alle Benutzer gilt, legen Sie `userLevel` auf <xref:System.Configuration.ConfigurationUserLevel.None>fest.</span><span class="sxs-lookup"><span data-stu-id="00a21-176">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="00a21-177">Um das lokale <xref:System.Configuration.Configuration> Objekt zu erhalten, das für den aktuellen Benutzer gilt, legen Sie `userLevel` auf <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>fest.</span><span class="sxs-lookup"><span data-stu-id="00a21-177">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="00a21-178">Um das Roaming <xref:System.Configuration.Configuration> Objekt zu erhalten, das für den aktuellen Benutzer gilt, legen Sie `userLevel` auf <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>fest.</span><span class="sxs-lookup"><span data-stu-id="00a21-178">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="00a21-179">Um das <xref:System.Configuration.Configuration>-Objekt für eine Ressource zu erhalten, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="00a21-179">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="00a21-180">Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="00a21-180">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-181">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="00a21-181">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-182">Eine Konfigurationsdatei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-182">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration exePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath"><span data-ttu-id="00a21-183">Der Pfad der ausführbaren Datei (EXE).</span><span class="sxs-lookup"><span data-stu-id="00a21-183">The path of the executable (exe) file.</span></span></param>
        <summary><span data-ttu-id="00a21-184">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-184">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="00a21-185">Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-185">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-186">Client Anwendungen verwenden eine globale Konfiguration, die für alle Benutzer gilt, separate Konfigurationen, die für einzelne Benutzer gelten, und Konfigurationen, die für Roamingbenutzer gelten.</span><span class="sxs-lookup"><span data-stu-id="00a21-186">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="00a21-187">Der `userLevel` Wert bestimmt den Speicherort der Konfigurationsdatei, die geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="00a21-187">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="00a21-188">Es zeigt an, ob es über keine Benutzerebene (die Konfigurationsdatei befindet sich im selben Verzeichnis wie die Anwendung) oder eine benutzerspezifische Ebene (die Konfigurationsdatei befindet sich in einem Anwendungs Einstellungs Pfad, der durch den Typ der Benutzerebene festgelegt ist).</span><span class="sxs-lookup"><span data-stu-id="00a21-188">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="00a21-189">Das Aufrufen dieser Methoden Überladung entspricht dem Aufrufen der <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> Überladung, bei der der Parameter `preLoad` auf `false`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="00a21-189">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-190">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="00a21-190">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-191">Eine Konfigurationsdatei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-191">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00a21-192">Öffnet die Computerkonfigurationsdatei auf dem aktuellen Computer als <see cref="T:System.Configuration.Configuration" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-192">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="00a21-193">Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-193">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-194">Computer Konfigurationseinstellungen gelten für den gesamten Computer und alle Anwendungen, die sich darauf befinden, es sei denn, Sie wurden für die lokale Anwendung überschrieben.</span><span class="sxs-lookup"><span data-stu-id="00a21-194">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="00a21-195">Die Computer Konfigurationseinstellungen werden in der Datei Machine. config der aktuellen Version des .NET Framework gelesen.</span><span class="sxs-lookup"><span data-stu-id="00a21-195">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="00a21-196">Die Datei Machine. config befindet sich im folgenden Unterverzeichnis:</span><span class="sxs-lookup"><span data-stu-id="00a21-196">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="00a21-197">*% windir%* \Microsoft.NET\Framework\\*Version*\Config</span><span class="sxs-lookup"><span data-stu-id="00a21-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a21-198">Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="00a21-198">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="00a21-199">Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="00a21-199">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="00a21-200">Es ist nicht möglich, auf die Datei "Machine. config" für andere Versionen der .NET Framework zuzugreifen, die auf dem Computer installiert sein könnten.</span><span class="sxs-lookup"><span data-stu-id="00a21-200">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-201">Im folgenden Codebeispiel wird gezeigt, wie Sie mit der <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>-Methode alle in der Konfigurationsdatei enthaltenen Abschnitte abrufen können.</span><span class="sxs-lookup"><span data-stu-id="00a21-201">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-202">Eine Konfigurationsdatei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-202">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00a21-203">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-203">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="00a21-204">Ein <see cref="T:System.Configuration.ExeConfigurationFileMap" />-Objekt, das auf die Konfigurationsdatei verweist, die statt der Standard-Anwendungskonfigurationsdatei verwendet werden sollte.</span><span class="sxs-lookup"><span data-stu-id="00a21-204">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="00a21-205">Das <see cref="T:System.Configuration.ConfigurationUserLevel" />-Objekt, für das Sie die Konfiguration öffnen.</span><span class="sxs-lookup"><span data-stu-id="00a21-205">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="00a21-206">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt mithilfe der angegebenen Dateizuordnung und Benutzerebene.</span><span class="sxs-lookup"><span data-stu-id="00a21-206">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span></span></summary>
        <returns><span data-ttu-id="00a21-207">Konfigurationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-207">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-208">Das <xref:System.Configuration.ConfigurationUserLevel>-Objekt bestimmt den Speicherort der Konfigurationsdatei, die geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="00a21-208">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="00a21-209">Gibt an, ob die Datei keine Benutzerebene hat (die Konfigurationsdatei befindet sich im selben Verzeichnis wie die Anwendung) oder über eine benutzerspezifische Ebene (die Konfigurationsdatei befindet sich in einem von `userLevel`festgelegten Anwendungs Einstellungs Pfad).</span><span class="sxs-lookup"><span data-stu-id="00a21-209">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a21-210">Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="00a21-210">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="00a21-211">Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="00a21-211">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-212">Im folgenden Codebeispiel wird gezeigt, wie Sie mit der <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>-Methode alle in der Konfigurationsdatei enthaltenen Abschnitte abrufen können.</span><span class="sxs-lookup"><span data-stu-id="00a21-212">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-213">Eine Konfigurationsdatei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-213">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel * bool -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel, preLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preLoad" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="00a21-214">Ein <see cref="T:System.Configuration.ExeConfigurationFileMap" />-Objekt, das auf die Konfigurationsdatei verweist, die statt der Standard-Anwendungskonfigurationsdatei verwendet werden sollte.</span><span class="sxs-lookup"><span data-stu-id="00a21-214">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="00a21-215">Das <see cref="T:System.Configuration.ConfigurationUserLevel" />-Objekt, für das Sie die Konfiguration öffnen.</span><span class="sxs-lookup"><span data-stu-id="00a21-215">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <param name="preLoad"><span data-ttu-id="00a21-216"><see langword="true" />, um alle Abschnittsgruppen und Abschnitte vorab zu laden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="00a21-216"><see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="00a21-217">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt mithilfe der angegebenen Dateizuordnung, Benutzerebene und Vorladeoption.</span><span class="sxs-lookup"><span data-stu-id="00a21-217">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span></span></summary>
        <returns><span data-ttu-id="00a21-218">Konfigurationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-218">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-219">Das <xref:System.Configuration.ConfigurationUserLevel>-Objekt bestimmt den Speicherort der Konfigurationsdatei, die geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="00a21-219">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="00a21-220">Gibt an, ob die Datei keine Benutzerebene hat (die Konfigurationsdatei befindet sich im selben Verzeichnis wie die Anwendung) oder über eine benutzerspezifische Ebene (die Konfigurationsdatei befindet sich in einem von `userLevel`festgelegten Anwendungs Einstellungs Pfad).</span><span class="sxs-lookup"><span data-stu-id="00a21-220">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a21-221">Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="00a21-221">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="00a21-222">Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="00a21-222">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="00a21-223">Ein Codebeispiel finden Sie in der <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> Überladung.</span><span class="sxs-lookup"><span data-stu-id="00a21-223">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-224">Eine Konfigurationsdatei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-224">A configuration file could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="00a21-225">Ein <see cref="T:System.Configuration.ExeConfigurationFileMap" />-Objekt, das auf die Konfigurationsdatei verweist, die statt der Standard-Anwendungskonfigurationsdatei verwendet werden sollte.</span><span class="sxs-lookup"><span data-stu-id="00a21-225">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <summary><span data-ttu-id="00a21-226">Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, das die angegebene Dateizuordnung verwendet.</span><span class="sxs-lookup"><span data-stu-id="00a21-226">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span></span></summary>
        <returns><span data-ttu-id="00a21-227">Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="00a21-227">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-228">Computer Konfigurationseinstellungen gelten für den gesamten Computer und alle Anwendungen, die sich darauf befinden, es sei denn, Sie wurden für die lokale Anwendung überschrieben.</span><span class="sxs-lookup"><span data-stu-id="00a21-228">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="00a21-229">Die Computer Konfigurationseinstellungen werden in der Datei Machine. config der aktuellen Version des .NET Framework gelesen.</span><span class="sxs-lookup"><span data-stu-id="00a21-229">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="00a21-230">Die Datei Machine. config befindet sich im folgenden Unterverzeichnis:</span><span class="sxs-lookup"><span data-stu-id="00a21-230">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="00a21-231">*% windir%* \Microsoft.NET\Framework\\*Version*\Config</span><span class="sxs-lookup"><span data-stu-id="00a21-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a21-232">Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="00a21-232">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="00a21-233">Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="00a21-233">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="00a21-234">Es ist nicht möglich, auf die Datei "Machine. config" für andere Versionen der .NET Framework zuzugreifen, die auf dem Computer installiert sein könnten.</span><span class="sxs-lookup"><span data-stu-id="00a21-234">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-235">Im folgenden Codebeispiel wird gezeigt, wie Sie die <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A>-Methode verwenden, um alle Abschnitte in der Konfigurationsdatei abzurufen.</span><span class="sxs-lookup"><span data-stu-id="00a21-235">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="00a21-236">Eine Konfigurationsdatei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="00a21-236">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member RefreshSection : string -&gt; unit" Usage="System.Configuration.ConfigurationManager.RefreshSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="00a21-237">Der Konfigurationsabschnittsname oder der Konfigurationspfad und der Abschnittsname des zu aktualisierenden Abschnitts.</span><span class="sxs-lookup"><span data-stu-id="00a21-237">The configuration section name or the configuration path and section name of the section to refresh.</span></span></param>
        <summary><span data-ttu-id="00a21-238">Aktualisiert den benannten Abschnitt. Dadurch wird er beim nächsten Abrufen erneut vom Datenträger gelesen.</span><span class="sxs-lookup"><span data-stu-id="00a21-238">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a21-239">Diese Methode macht den Cache für den angegebenen Konfigurations Abschnitt ungültig, ohne dass sich dies auf andere Abschnitte auswirkt.</span><span class="sxs-lookup"><span data-stu-id="00a21-239">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a21-240">Im folgenden Codebeispiel wird gezeigt, wie Sie die <xref:System.Configuration.ConfigurationManager.RefreshSection%2A>-Methode verwenden, um den Konfigurations Abschnitt für die Anwendungseinstellungen zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="00a21-240">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
