<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf2bfcddc8ec362fe5527c2f8535e79cc99198f3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="281f6-101">Stellt Zugriff auf Konfigurationsdateien für Clientanwendungen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="281f6-101">Provides access to configuration files for client applications.</span>
      </span>
      <span data-ttu-id="281f6-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="281f6-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-103">Die <xref:System.Configuration.ConfigurationManager> -Klasse ermöglicht es Ihnen Zugriff Computer, Anwendung und Konfigurationsinformationen für Benutzer.</span><span class="sxs-lookup"><span data-stu-id="281f6-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="281f6-104">Diese Klasse ersetzt die <xref:System.Configuration.ConfigurationSettings> -Klasse, die veraltet ist.</span><span class="sxs-lookup"><span data-stu-id="281f6-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="281f6-105">Verwenden Sie für Webanwendungen, die <xref:System.Web.Configuration.WebConfigurationManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="281f6-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="281f6-106">Verwenden der <xref:System.Configuration.ConfigurationManager> -Klasse, die das Projekt verweisen muss die `System.Configuration` Assembly.</span><span class="sxs-lookup"><span data-stu-id="281f6-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="281f6-107">Standardmäßig einige Projektvorlagen, z. B. Konsolenanwendung, nicht diese Assembly verweisen, damit Sie manuell verweisen müssen.</span><span class="sxs-lookup"><span data-stu-id="281f6-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="281f6-108">Der Name und Speicherort der Konfigurationsdatei der Anwendung richten sich nach der Anwendung Host.</span><span class="sxs-lookup"><span data-stu-id="281f6-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="281f6-109">Weitere Informationen finden Sie unter [NIB: Anwendungskonfigurationsdateien](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span><span class="sxs-lookup"><span data-stu-id="281f6-109">For more information, see [NIB: Application Configuration Files](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="281f6-110">Verwenden Sie die integrierte <xref:System.Configuration> Typen oder von ihnen zum Behandeln von Konfigurationsinformationen abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="281f6-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="281f6-111">Mithilfe dieser Typen zu verwenden, können Sie direkt mit Konfigurationsinformationen arbeiten, und Sie erweitern, Konfigurationsdateien, um benutzerdefinierte Informationen einzuschließen.</span><span class="sxs-lookup"><span data-stu-id="281f6-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="281f6-112">Die <xref:System.Configuration.ConfigurationManager> Klasse enthält Elemente, die Ihnen ermöglichen, die folgenden Aufgaben ausführen:</span><span class="sxs-lookup"><span data-stu-id="281f6-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="281f6-113">Lesen Sie einen Abschnitt aus einer Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="281f6-113">Read a section from a configuration file.</span></span> <span data-ttu-id="281f6-114">Rufen Sie die Konfigurationsinformationen für den Zugriff auf die <xref:System.Configuration.ConfigurationManager.GetSection%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="281f6-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="281f6-115">Für einige Abschnitte, wie z. B. `appSettings` und `connectionStrings`, verwenden Sie die <xref:System.Configuration.ConfigurationManager.AppSettings%2A> und <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> Klassen.</span><span class="sxs-lookup"><span data-stu-id="281f6-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="281f6-116">Diese Member nur-Lese Vorgänge ausführen, verwenden Sie eine zwischengespeicherte Einzelinstanz der Konfiguration und sind multithread beachten.</span><span class="sxs-lookup"><span data-stu-id="281f6-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="281f6-117">Lesen und Schreiben von Konfigurationsdateien als Ganzes.</span><span class="sxs-lookup"><span data-stu-id="281f6-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="281f6-118">Die Anwendung kann Lese- / Konfigurationseinstellungen auf jeder Ebene, für sich selbst oder für andere Anwendungen oder für Computer, lokal oder Remote.</span><span class="sxs-lookup"><span data-stu-id="281f6-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="281f6-119">Verwenden Sie eine der bereitgestellten Methoden die <xref:System.Configuration.ConfigurationManager> Klasse, um eine Konfigurationsdatei z. B. SampleApp.exe.config, zu öffnen. Diese Methoden geben ein <xref:System.Configuration.Configuration> -Objekt, das wiederum macht Methoden und Eigenschaften, die mit den zugeordneten Konfigurationsdateien arbeiten können.</span><span class="sxs-lookup"><span data-stu-id="281f6-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="281f6-120">Die Methoden führen Lese- oder Schreibvorgänge und erstellen die Konfigurationsdaten werden jedes Mal, die eine Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="281f6-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="281f6-121">Aufgaben zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="281f6-121">Support configuration tasks.</span></span> <span data-ttu-id="281f6-122">Die folgenden Typen werden verwendet, um verschiedene Konfigurationsaufgaben zu unterstützen:</span><span class="sxs-lookup"><span data-stu-id="281f6-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="281f6-123">Zusätzlich zum Arbeiten mit vorhandenen Konfigurationsinformationen, können Sie erstellen und mit benutzerdefinierten Konfigurationselemente arbeiten, indem Sie erweitern die integrierte Typen wie die <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, und <xref:System.Configuration.ConfigurationSection> Klassen.</span><span class="sxs-lookup"><span data-stu-id="281f6-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="281f6-124">Ein Beispiel dafür, wie einen integrierter Konfigurationstyp programmgesteuert erweitert, finden Sie unter <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="281f6-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="281f6-125">Ein Beispiel zum Erweitern eines integrierten Configuration-Typs, der attributbasiertes Objektmodell verwendet, finden Sie unter <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="281f6-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-126">Das erste Beispiel zeigt eine einfache Konsolenanwendung, die Anwendungseinstellungen gelesen, und fügt eine neue Einstellung aktualisiert eine vorhandene Einstellung.</span><span class="sxs-lookup"><span data-stu-id="281f6-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="281f6-127">Im vorherige Beispiel wird davon ausgegangen, dass das Projekt eine Datei "App.config" wie unten gezeigt hat.</span><span class="sxs-lookup"><span data-stu-id="281f6-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="281f6-128">Das folgende Beispiel zeigt, wie eine Verbindungszeichenfolge verwenden zum Lesen von Daten aus einer Datenbank.</span><span class="sxs-lookup"><span data-stu-id="281f6-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="281f6-129">Im vorherige Beispiel wird davon ausgegangen, dass das Projekt eine "App.config" hat, wie unten dargestellt.</span><span class="sxs-lookup"><span data-stu-id="281f6-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="281f6-130">Die <see cref="T:System.Configuration.Configuration" /> Klasse ermöglicht den programmgesteuerten Zugriff für das Bearbeiten von Konfigurationsdateien.</span>
        <span class="sxs-lookup">
          <span data-stu-id="281f6-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span>
        </span>
        <span data-ttu-id="281f6-131">Verwenden Sie eine der Open-Methoden von bereitgestellten <see cref="T:System.Configuration.ConfigurationManager" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="281f6-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span>
        </span>
        <span data-ttu-id="281f6-132">Diese Methoden geben ein <see cref="T:System.Configuration.Configuration" /> -Objekt, das wiederum die erforderlichen Methoden und Eigenschaften zum Behandeln der zugrunde liegenden Konfigurationsdateien bereitstellt.</span>
        <span class="sxs-lookup">
          <span data-stu-id="281f6-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span>
        </span>
        <span data-ttu-id="281f6-133">Sie können diese Dateien zum Lesen oder Schreiben zugreifen.</span>
        <span class="sxs-lookup">
          <span data-stu-id="281f6-133">You can access these files for reading or writing.</span>
        </span>
        <span data-ttu-id="281f6-134">Verwenden Sie zum Lesen der Konfigurationsdateien <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> oder <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> zum Lesen von Konfigurationsinformationen.</span>
        <span class="sxs-lookup">
          <span data-stu-id="281f6-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span>
        </span>
        <span data-ttu-id="281f6-135">Der Benutzer oder Prozess, der liest die folgenden Berechtigungen erforderlich:</span>
        <span class="sxs-lookup">
          <span data-stu-id="281f6-135">The user or process that reads must have the following permissions:</span>
        </span>  
  
-   <span data-ttu-id="281f6-136">Read-Berechtigung für die Konfigurationsdatei an der aktuellen Ebene der Hierarchie.</span><span class="sxs-lookup"><span data-stu-id="281f6-136">Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
-   <span data-ttu-id="281f6-137">Read-Berechtigungen für das übergeordnete Element von Konfigurationsdateien.</span><span class="sxs-lookup"><span data-stu-id="281f6-137">Read permissions on all the parent configuration files.</span></span><span data-ttu-id="281f6-138">Wenn Ihre Anwendung nur-Lese Zugriff auf seine eigene Konfiguration benötigt, empfehlen wir die Verwendung der <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="281f6-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span><span data-ttu-id="281f6-139">Diese Methode ermöglicht den Zugriff auf die zwischengespeicherten Konfigurationswerte für die aktuelle Anwendung, die eine bessere Leistung als hat die <see cref="T:System.Configuration.Configuration" /> Klasse.</span><span class="sxs-lookup"><span data-stu-id="281f6-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span><span data-ttu-id="281f6-140">Verwenden Sie zum Schreiben an den Konfigurationsdateien eines der <see cref="Overload:System.Configuration.Configuration.Save" /> Methoden.</span><span class="sxs-lookup"><span data-stu-id="281f6-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span><span data-ttu-id="281f6-141">Der Benutzer oder Prozess, der schreibt die folgenden Berechtigungen erforderlich:</span><span class="sxs-lookup"><span data-stu-id="281f6-141">The user or process that writes must have the following permissions:</span></span>  
  
-   <span data-ttu-id="281f6-142">Schreibberechtigung für die Konfigurationsdatei und das Verzeichnis auf der aktuellen Konfiguration Hierarchieebene.</span><span class="sxs-lookup"><span data-stu-id="281f6-142">Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
-   <span data-ttu-id="281f6-143">Leseberechtigungen Sie für alle Konfigurationsdateien.</span><span class="sxs-lookup"><span data-stu-id="281f6-143">Read permissions on all the configuration files.</span></span></para>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="281f6-144">Ruft die <see cref="T:System.Configuration.AppSettingsSection" />-Daten für die Standardkonfiguration der aktuellen Anwendung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-144">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="281f6-145">Gibt ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt zurück, das den Inhalt des <see cref="T:System.Configuration.AppSettingsSection" />-Objekts für die Standardkonfiguration der aktuellen Anwendung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-145">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-146">Ein <xref:System.Configuration.AppSettingsSection> -Objekt enthält den Inhalt der Konfigurationsdatei `appSettings` Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="281f6-146">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-147">Das erste Beispiel zeigt eine einfache Konsolenanwendung, die Anwendungseinstellungen gelesen, und fügt eine neue Einstellung aktualisiert eine vorhandene Einstellung.</span><span class="sxs-lookup"><span data-stu-id="281f6-147">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="281f6-148">Im vorherige Beispiel wird davon ausgegangen, dass das Projekt eine Datei "App.config" wie unten gezeigt hat.</span><span class="sxs-lookup"><span data-stu-id="281f6-148">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-149">Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt konnte mit den Anwendungseinstellungsdaten nicht abgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-149">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="281f6-150">Ruft die <see cref="T:System.Configuration.ConnectionStringsSection" />-Daten für die Standardkonfiguration der aktuellen Anwendung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-150">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="281f6-151">Gibt ein <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />-Objekt zurück, das den Inhalt des <see cref="T:System.Configuration.ConnectionStringsSection" />-Objekts für die Standardkonfiguration der aktuellen Anwendung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-151">Returns a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-152">Ein <xref:System.Configuration.ConnectionStringsSection> -Objekt enthält den Inhalt der Konfigurationsdatei `connectionStrings` Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="281f6-152">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-153">Das folgende Beispiel zeigt, wie eine Verbindungszeichenfolge verwenden zum Lesen von Daten aus einer Datenbank.</span><span class="sxs-lookup"><span data-stu-id="281f6-153">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="281f6-154">Im vorherige Beispiel wird davon ausgegangen, dass das Projekt eine "App.config" hat, wie unten dargestellt.</span><span class="sxs-lookup"><span data-stu-id="281f6-154">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-155">Es konnte kein <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />-Objekt abgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-155">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="281f6-156">Der Konfigurationsabschnittspfad und -name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-156">The configuration section path and name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="281f6-157">Ruft einen angegebenen Konfigurationsabschnitt für die Standardkonfiguration der aktuellen Anwendung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-157">Retrieves a specified configuration section for the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="281f6-158">Das angegebene <see cref="T:System.Configuration.ConfigurationSection" />-Objekt oder <see langword="null" />, wenn der Abschnitt nicht vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-158">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-159">Bei Clientanwendungen ruft diese Methode eine Konfigurationsdatei, die durch das Zusammenführen der Anwendungskonfigurationsdatei, die lokalen Benutzerkonfigurationsdatei und servergespeicherten Konfigurationsdatei abgerufen.</span><span class="sxs-lookup"><span data-stu-id="281f6-159">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="281f6-160">Die <xref:System.Configuration.ConfigurationManager.GetSection%2A> Methode greift auf die Laufzeit-Konfigurationsinformationen, die sie nicht ändern können.</span><span class="sxs-lookup"><span data-stu-id="281f6-160">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="281f6-161">Um die Konfiguration zu ändern, verwenden Sie die <xref:System.Configuration.Configuration.GetSection%2A> Methode zur Konfigurationsdatei, die Sie abrufen, indem Sie eine der folgenden Methoden öffnen:</span><span class="sxs-lookup"><span data-stu-id="281f6-161">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-162">Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ConfigurationManager.GetSection%2A>-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="281f6-162">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="281f6-163">Das Beispiel ist Teil eines größeren Beispiels, die aus Gründen der <xref:System.Configuration.ConfigurationManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="281f6-163">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-164">Eine Konfigurationsdatei konnte nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-164">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="281f6-165">Sie müssen den Rückgabewert in den erwarteten Konfigurationstyp umwandeln.</span>
            <span class="sxs-lookup">
              <span data-stu-id="281f6-165">You must cast the return value to the expected configuration type.</span>
            </span>
            <span data-ttu-id="281f6-166">Um mögliche Umwandlungsausnahmen zu vermeiden, sollten Sie z. B. eine bedingte Umwandlungsoperation verwenden die <see langword="as" /> Operator in c# oder der Funktion in Visual Basic.</span>
            <span class="sxs-lookup">
              <span data-stu-id="281f6-166">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the  function in Visual Basic.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="281f6-167">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-167">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel">
          <span data-ttu-id="281f6-168">Die <see cref="T:System.Configuration.ConfigurationUserLevel" />, für die Sie die Konfiguration öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-168">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="281f6-169">Öffnet die Konfigurationsdatei für die aktuelle Anwendung als <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-169">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="281f6-170">Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-170">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-171">Clientanwendungen verwenden eine globale Konfiguration, die gilt für alle Benutzer, separate Konfigurationen, die für einzelne Benutzer gelten und Konfigurationen, die für mobile Benutzer gelten.</span><span class="sxs-lookup"><span data-stu-id="281f6-171">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="281f6-172">Die `userLevel` -Parameter bestimmt den Speicherort der Konfigurationsdatei wird geöffnet wird, ob keine Benutzerebene (die Konfigurationsdatei befindet sich im gleichen Verzeichnis wie die Anwendung) oder eine Einzelbenutzer-Ebene (die Konfigurationsdatei befindet sich in einer Einstellungen Anwendungspfad gemäß der Benutzerebene).</span><span class="sxs-lookup"><span data-stu-id="281f6-172">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="281f6-173">Geben Sie für die Konfiguration abzurufen, übergeben Sie einen der folgenden Werte `userLevel`:</span><span class="sxs-lookup"><span data-stu-id="281f6-173">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="281f6-174">Zum Abrufen der <xref:System.Configuration.Configuration> Objekt, das für alle Benutzer gilt `userLevel` auf <xref:System.Configuration.ConfigurationUserLevel.None>.</span><span class="sxs-lookup"><span data-stu-id="281f6-174">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="281f6-175">Zum Abrufen des lokalen <xref:System.Configuration.Configuration> Objekt, das für den aktuellen Benutzer gelten `userLevel` auf <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span><span class="sxs-lookup"><span data-stu-id="281f6-175">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="281f6-176">Das roaming abzurufenden <xref:System.Configuration.Configuration> Objekt, das für den aktuellen Benutzer gelten `userLevel` auf <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span><span class="sxs-lookup"><span data-stu-id="281f6-176">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="281f6-177">Zum Abrufen der <xref:System.Configuration.Configuration> -Objekt für eine Ressource Codes muss über Leseberechtigungen für alle Konfigurationsdateien, die von dem sie die Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="281f6-177">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="281f6-178">Um eine Konfigurationsdatei zu aktualisieren, muss Ihren Code darüber hinaus muss über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="281f6-178">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-179">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="281f6-179">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-180">Eine Konfigurationsdatei konnte nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-180">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath">
          <span data-ttu-id="281f6-181">Der Pfad der ausführbaren Datei (EXE).</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-181">The path of the executable (exe) file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="281f6-182">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-182">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="281f6-183">Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-183">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-184">Clientanwendungen verwenden eine globale Konfiguration, die gilt für alle Benutzer, separate Konfigurationen, die für einzelne Benutzer gelten und Konfigurationen, die für mobile Benutzer gelten.</span><span class="sxs-lookup"><span data-stu-id="281f6-184">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="281f6-185">Die `userLevel` Wert bestimmt den Speicherort der Konfigurationsdatei wird geöffnet.</span><span class="sxs-lookup"><span data-stu-id="281f6-185">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="281f6-186">Es gibt an, ob keine Benutzerebene (die Konfigurationsdatei befindet sich im gleichen Verzeichnis wie die Anwendung) oder eine Einzelbenutzer-Ebene (die Konfigurationsdatei in einem Anwendungspfad-Einstellungen durch den Benutzer Ebenentyp bestimmt ist.).</span><span class="sxs-lookup"><span data-stu-id="281f6-186">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="281f6-187">Das Aufrufen dieser methodenüberladung entspricht dem Aufrufen der <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> -Überladung mit der `preLoad` Parameter festgelegt wird, um `false`.</span><span class="sxs-lookup"><span data-stu-id="281f6-187">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-188">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="281f6-188">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-189">Eine Konfigurationsdatei konnte nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-189">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="281f6-190">Öffnet die Computerkonfigurationsdatei auf dem aktuellen Computer als <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-190">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="281f6-191">Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-191">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-192">Konfigurationseinstellungen für Computer gelten für den gesamten Computer und alle Anwendungen, die sich darauf befinden, es sei denn, für die lokale Anwendung überschrieben.</span><span class="sxs-lookup"><span data-stu-id="281f6-192">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="281f6-193">Konfigurationseinstellungen für Computer werden aus der Datei "Machine.config", der derzeit ausgeführten Version von .NET Framework gelesen.</span><span class="sxs-lookup"><span data-stu-id="281f6-193">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="281f6-194">Die Datei "Machine.config" befindet sich im Unterverzeichnis folgende:</span><span class="sxs-lookup"><span data-stu-id="281f6-194">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="281f6-195">*%windir%*\Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="281f6-195">*%windir%*\Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="281f6-196">Zum Abrufen der <xref:System.Configuration.Configuration> -Objekt für eine Ressource Codes muss über Leseberechtigungen für alle Konfigurationsdateien, die von dem sie die Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="281f6-196">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="281f6-197">Um eine Konfigurationsdatei zu aktualisieren, muss Ihren Code darüber hinaus muss über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="281f6-197">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="281f6-198">Es ist nicht möglich, auf die Datei "Machine.config" für andere Versionen von .NET Framework, die auf dem Computer installiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="281f6-198">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-199">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> Methode, um alle Abschnitte abzurufen, die in der Konfigurationsdatei enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="281f6-199">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-200">Eine Konfigurationsdatei konnte nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-200">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="281f6-201">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-201">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="281f6-202">Ein <see cref="T:System.Configuration.ExeConfigurationFileMap" />-Objekt, das auf die Konfigurationsdatei verweist, die statt der Standard-Anwendungskonfigurationsdatei verwendet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-202">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="281f6-203">Das <see cref="T:System.Configuration.ConfigurationUserLevel" />-Objekt, für das Sie die Konfiguration öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-203">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="281f6-204">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt mithilfe der angegebenen Dateizuordnung und Benutzerebene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-204">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="281f6-205">Konfigurationsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-205">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-206">Die <xref:System.Configuration.ConfigurationUserLevel> -Objekt bestimmt den Speicherort der Konfigurationsdatei wird geöffnet.</span><span class="sxs-lookup"><span data-stu-id="281f6-206">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="281f6-207">Es gibt an, ob die Datei keine Benutzerebene (die Konfigurationsdatei befindet sich im gleichen Verzeichnis wie die Anwendung) oder eine Einzelbenutzer-Ebene (die Konfigurationsdatei befindet sich in einem Anwendungspfad-Einstellungen gemäß `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="281f6-207">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="281f6-208">Zum Abrufen der <xref:System.Configuration.Configuration> -Objekt für eine Ressource Codes muss über Leseberechtigungen für alle Konfigurationsdateien, die von dem sie die Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="281f6-208">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="281f6-209">Um eine Konfigurationsdatei zu aktualisieren, muss Ihren Code darüber hinaus muss über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="281f6-209">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-210">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> Methode, um alle Abschnitte abzurufen, die von der Konfigurationsdatei enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="281f6-210">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-211">Eine Konfigurationsdatei konnte nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-211">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
        <Parameter Name="preLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="281f6-212">Ein <see cref="T:System.Configuration.ExeConfigurationFileMap" />-Objekt, das auf die Konfigurationsdatei verweist, die statt der Standard-Anwendungskonfigurationsdatei verwendet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-212">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="281f6-213">Das <see cref="T:System.Configuration.ConfigurationUserLevel" />-Objekt, für das Sie die Konfiguration öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-213">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <param name="preLoad">
          <span data-ttu-id="281f6-214">
            <see langword="true" />, um alle Abschnittsgruppen und Abschnitte vorab zu laden; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-214">
              <see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="281f6-215">Öffnet die angegebene Clientkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt mithilfe der angegebenen Dateizuordnung, Benutzerebene und Vorladeoption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-215">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="281f6-216">Konfigurationsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-216">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-217">Die <xref:System.Configuration.ConfigurationUserLevel> -Objekt bestimmt den Speicherort der Konfigurationsdatei, die geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="281f6-217">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="281f6-218">Es gibt an, ob die Datei keine Benutzerebene (die Konfigurationsdatei befindet sich im gleichen Verzeichnis wie die Anwendung) oder eine Einzelbenutzer-Ebene (die Konfigurationsdatei befindet sich in einem Anwendungspfad für Einstellungen, die vom bestimmt `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="281f6-218">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="281f6-219">Zum Abrufen der <xref:System.Configuration.Configuration> -Objekt für eine Ressource Codes muss über Leseberechtigungen für alle Konfigurationsdateien, die von dem sie die Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="281f6-219">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="281f6-220">Um eine Konfigurationsdatei zu aktualisieren, muss Ihren Code darüber hinaus muss über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="281f6-220">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="281f6-221">Ein Codebeispiel finden Sie unter der <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> überladen.</span><span class="sxs-lookup"><span data-stu-id="281f6-221">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-222">Eine Konfigurationsdatei konnte nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-222">A configuration file could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="281f6-223">Ein <see cref="T:System.Configuration.ExeConfigurationFileMap" />-Objekt, das auf die Konfigurationsdatei verweist, die statt der Standard-Anwendungskonfigurationsdatei verwendet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-223">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="281f6-224">Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, das die angegebene Dateizuordnung verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-224">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="281f6-225">Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-225">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-226">Konfigurationseinstellungen für Computer gelten für den gesamten Computer und alle Anwendungen, die sich darauf befinden, es sei denn, für die lokale Anwendung überschrieben.</span><span class="sxs-lookup"><span data-stu-id="281f6-226">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="281f6-227">Konfigurationseinstellungen für Computer werden aus der Datei "Machine.config", der derzeit ausgeführten Version von .NET Framework gelesen.</span><span class="sxs-lookup"><span data-stu-id="281f6-227">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="281f6-228">Die Datei "Machine.config" befindet sich im Unterverzeichnis folgende:</span><span class="sxs-lookup"><span data-stu-id="281f6-228">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="281f6-229">*%windir%*\Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="281f6-229">*%windir%*\Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="281f6-230">Zum Abrufen der <xref:System.Configuration.Configuration> -Objekt für eine Ressource Codes muss über Leseberechtigungen für alle Konfigurationsdateien, die von dem sie die Einstellungen erbt.</span><span class="sxs-lookup"><span data-stu-id="281f6-230">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="281f6-231">Um eine Konfigurationsdatei zu aktualisieren, muss Ihren Code darüber hinaus muss über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="281f6-231">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="281f6-232">Es ist nicht möglich, auf die Datei "Machine.config" für andere Versionen von .NET Framework, die auf dem Computer installiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="281f6-232">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-233">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> Methode, um alle Abschnitte in der Konfigurationsdatei abzurufen.</span><span class="sxs-lookup"><span data-stu-id="281f6-233">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="281f6-234">Eine Konfigurationsdatei konnte nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-234">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="281f6-235">Der Konfigurationsabschnittsname oder der Konfigurationspfad und der Abschnittsname des zu aktualisierenden Abschnitts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-235">The configuration section name or the configuration path and section name of the section to refresh.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="281f6-236">Aktualisiert den benannten Abschnitt. Dadurch wird er beim nächsten Abrufen erneut vom Datenträger gelesen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="281f6-236">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="281f6-237">Diese Methode wird den Cache für den angegebenen Konfigurationsabschnitt ohne Auswirkungen auf andere Abschnitte ungültig.</span><span class="sxs-lookup"><span data-stu-id="281f6-237">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="281f6-238">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> Methode, um den Konfigurationsabschnitt der Anwendung-Einstellungen zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="281f6-238">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>