<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7334668a390ddea282822d40a701007c04e22340" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70530191" /></Metadata><TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert Standardfunktionen für Steuerelemente oder Bibliotheken, die Anwendungseinstellungen speichern oder abrufen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel können Sie einer Anwendung Unterstützung für Anwendungseinstellungen hinzufügen, indem Sie eine Wrapper Klasse für Einstellungen <xref:System.Configuration.ApplicationSettingsBase>erstellen, die von abgeleitet ist, und dann dieser Klasse besondere Eigenschaften hinzufügen. Bei diesem Ansatz werden Anwendungseinstellungen für ein Steuerelement jedoch nicht ausreichend eingeschlossen, sodass der zugehörige Container vor den Details geschützt wird. Die <xref:System.Configuration.IPersistComponentSettings> -Schnittstelle stellt einer Anwendung eine Standardschnittstelle für die Kommunikation von Anwendungs Einstellungs Zustands Änderungsanforderungen an ein Steuerelement, eine Komponente oder ein Bibliotheks Modul bereit. Entwurfszeit Tools hängen außerdem von dieser Schnittstelle ab, um Steuerelemente und Komponenten ordnungsgemäß zu verwalten.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Anwendungseinstellungen für benutzerdefinierte Steuerelemente</related>
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Liest die Anwendungseinstellungen des Steuerelements in die entsprechenden Eigenschaften und aktualisiert den Zustand des Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Allgemeinen führt die <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> -Methode zwei wesentliche Vorgänge aus:  
  
-   Dies bewirkt, dass jede Anwendungs Einstellungs Instanz, die im-Steuerelement enthalten ist, die Werte der Anwendungs Einstellungs Eigenschaften aktualisiert <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> , in der Regel durch Aufrufen ihrer Methoden.  
  
-   Bei Bedarf werden die allgemeinen Eigenschaften aktualisiert, die von den Eigenschaften der neu geladenen Einstellungen abhängen. Wenn beispielsweise die Settings-Klasse eine `location` Settings-Eigenschaft enthielt, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> sollte sicherstellen, dass <xref:System.Windows.Forms.Control.Location%2A> die-Eigenschaft des-Steuer Elements aktualisiert wird, um diese neu geladene Einstellung widerzuspiegeln  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die Eigenschaften der Anwendungseinstellungen des Steuerelements auf die Standardwerte zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Implementierung <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> der-Methode ruft in der <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> Regel die-Methode für jede Instanz einer Anwendungs Einstellungs Klasse auf, die Sie enthält.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Behält die Eigenschaften der Anwendungseinstellungen des Steuerelements bei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> -Methode schreibt die Werte der Anwendungs Einstellungs Eigenschaften des-Steuer Elements in den zugeordneten Datenspeicher. Der Datenspeicher und die serialisierungstechnologie, die von der Methode verwendet werden, wird durch den Einstellungs <xref:System.Configuration.SettingsProviderAttribute>Anbieter bestimmt, der mit den einzelnen Einstellungs Klassen über Sie können die Auswahl des Einstellungs Anbieters überschreiben, indem Sie <xref:System.Configuration.ISettingsProviderService> die-Schnittstelle verwenden.  
  
> [!NOTE]
>  Wenn die <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> -Eigenschaft `true`ist, sollte das Steuer <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Element in seiner <xref:System.Windows.Forms.Control.Dispose%2A> eigenen-Methode aufgerufen werden, damit die Konfigurationsdaten des Steuer Elements vor dem Beenden der Anwendung automatisch gespeichert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement die Eigenschaften seiner Anwendungseinstellungen automatisch beibehalten soll, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Steuerelement automatisch seinen Zustand beibehalten soll, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Steuerelement Konfigurationsdaten enthält, speichert es diese Daten in der Regel als Reaktion auf einen expliziten <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Aufruf der-Methode oder manchmal implizit, <xref:System.Windows.Forms.Control.Dispose%2A> wenn die-Methode des Steuer Elements aufgerufen wird. Die <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> -Eigenschaft bestimmt, ob ein-Steuerelement seine Konfigurationsdaten beim verwerfen automatisch beibehält.  
  
 Der Standardwert von <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> hängt von der Implementierung des-Steuer Elements ab. Die Dokumentation für das Steuerelement sollte angeben, ob Anwendungseinstellungen verwendet werden, welche Daten persistent gespeichert werden und wie der Standardwert <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> der Eigenschaft ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie ein-Steuerelement den Wert der <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> -Eigenschaft auf die gleiche Weise überprüfen kann, bevor versucht wird, seine Konfigurationsdaten automatisch beizubehalten.  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des Schlüssels der Anwendungseinstellungen für die aktuelle Instanz des Steuerelements ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Schlüssel der Einstellungen der aktuellen Instanz des Steuerelements enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> die-Eigenschaft, um Gruppen von Anwendungs Einstellungs Eigenschaften zu unterscheiden, wenn mehrere Instanzen derselben Wrapper Klasse vorhanden sind. Wenn ein Steuerelement z. b. eine zugeordnete Wrapper Klasse enthält, führt das Platzieren mehrerer Instanzen desselben Steuer Elements in der gleichen Anwendung in der Regel zu mehreren Instanzen der Wrapper Klasse. Ein Einstellungs Schlüssel ist nur erforderlich, wenn sich die Konfigurationsdaten auf instanzbasis unterscheiden. beispielsweise der Speicherort von dynamisch positionierten Steuerelementen.  
  
 Die folgenden allgemeinen Regeln gelten für die Verwendung von <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   Ein Steuerelement kann wie jede beliebige Klasse keine oder mehrere Anwendungs Einstellungs Klassen enthalten, die von <xref:System.Configuration.ApplicationSettingsBase>abgeleitet sind. Jede Einstellungs Klasse enthält eine eigene <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> -Eigenschaft, die dabei hilft, mehrere Instanzen dieser Klasse zu unterscheiden.  
  
-   Ein Steuerelement muss seine instanzbezogenen Daten und Ihre freigegebenen Daten in verschiedene Einstellungs Klassen aufteilen.  
  
-   Für ein-Steuerelement mit beliebigen Konfigurationsdaten pro Instanz sollte `get` der-Accessor <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> der-Eigenschaft standardmäßig <xref:System.Windows.Forms.Control.Name%2A> auf den des-Steuer Elements zugreifen. In den meisten Fällen ist der Name des Steuer Elements innerhalb einer Anwendung eindeutig. Wenn das-Steuerelement nur freigegebene Konfigurations `get` Daten enthält, `null`sollte standardmäßig auf festlegen.  
  
-   Der `set` -Accessor für diese Eigenschaft sollte implementiert werden, um zwischen Einstellungs Klassen zu unterscheiden, die pro Instanz und gemeinsam genutzte Konfigurationsdaten enthalten. Für jede Einstellungs Klasse, die instanzspezifische Daten `set` enthält, sollte nur an die <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> -Eigenschaft der Settings-Klasse übergeben werden. Für Einstellungs Klassen, die freigegebene `set` Daten enthalten, sollte für diese Einstellungs Klasse keine Aktion ausführen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Anwendungseinstellungen für benutzerdefinierte Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>
