<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36cdd14653e8d239fcffab82331de0392616795f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dcece-101">Definiert Standardfunktionen für Steuerelemente oder Bibliotheken, die Anwendungseinstellungen speichern oder abrufen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcece-101">Defines standard functionality for controls or libraries that store and retrieve application settings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcece-102">Sie können in der Regel Unterstützung von Einstellungen zu einer Anwendung hinzufügen, indem erstellen eine Wrapperklasse für Einstellungen, das von abgeleitet ist <xref:System.Configuration.ApplicationSettingsBase>, und klicken Sie dann diese Klasse besondere Eigenschaften hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="dcece-102">Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, and then add special properties to this class.</span></span> <span data-ttu-id="dcece-103">Allerdings ist dieser Ansatz nicht ausreichend Anwendungseinstellungen für ein Steuerelement kapseln, damit von den Details des Containers geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="dcece-103">However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</span></span> <span data-ttu-id="dcece-104">Die <xref:System.Configuration.IPersistComponentSettings> Schnittstelle bietet eine Anwendung mithilfe einer standard-Schnittstelle für die Kommunikation der Application Settings Status änderungsanforderungen auf ein Steuerelement, Komponente oder Library-Modul.</span><span class="sxs-lookup"><span data-stu-id="dcece-104">The <xref:System.Configuration.IPersistComponentSettings> interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</span></span> <span data-ttu-id="dcece-105">Entwurfszeittools hängen auch von dieser Schnittstelle, um die Steuerelemente und Komponenten ordnungsgemäß verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="dcece-105">Design-time tools also depend on this interface to properly manage controls and components.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcece-106">Liest die Anwendungseinstellungen des Steuerelements in die entsprechenden Eigenschaften und aktualisiert den Zustand des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcece-106">Reads the control's application settings into their corresponding properties and updates the control's state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcece-107">Im Allgemeinen die <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> -Methode führt zwei grundlegende Vorgänge:</span><span class="sxs-lookup"><span data-stu-id="dcece-107">In general, the <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> method performs two essential operations:</span></span>  
  
-   <span data-ttu-id="dcece-108">Es bewirkt, dass jede Anwendungsinstanz-Einstellungen enthalten, die für das Steuerelement in der Regel aktualisieren Sie die Werte von deren Anwendungseinstellungseigenschaften durch Aufrufen ihrer <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="dcece-108">It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="dcece-109">Je nach Bedarf aktualisiert sie die allgemeinen Eigenschaften, von die diese Einstellungen neu geladene Eigenschaften abhängen.</span><span class="sxs-lookup"><span data-stu-id="dcece-109">As required, it updates those general properties that depend on these reloaded settings properties.</span></span> <span data-ttu-id="dcece-110">Wenn die Einstellungen enthalten z. B. eine `location` Einstellungseigenschaft, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> sollten sicherstellen, dass des Steuerelements <xref:System.Windows.Forms.Control.Location%2A> Eigenschaft wird aktualisiert, und diese neu geladene Einstellung wieder.</span><span class="sxs-lookup"><span data-stu-id="dcece-110">For example, if the settings class contained a `location` settings property, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> should ensure that the control's <xref:System.Windows.Forms.Control.Location%2A> property is updated to reflect this reloaded setting.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcece-111">Setzt die Eigenschaften der Anwendungseinstellungen des Steuerelements auf die Standardwerte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcece-111">Resets the control's application settings properties to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcece-112">Die Implementierung der <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> Methodenaufrufe in der Regel die <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> Methode für jede Instanz einer Anwendung Settings-Klasse, die es enthält.</span><span class="sxs-lookup"><span data-stu-id="dcece-112">The implementation of the <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> method typically calls the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method on each instance of an application settings class it contains.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcece-113">Behält die Eigenschaften der Anwendungseinstellungen des Steuerelements bei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcece-113">Persists the control's application settings properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcece-114">Die <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> -Methode schreibt die Werte der Eigenschaften des Steuerelements Anwendung in der zugeordneten Datenspeicher.</span><span class="sxs-lookup"><span data-stu-id="dcece-114">The <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method writes the values of the control's application settings properties to the associated data store.</span></span> <span data-ttu-id="dcece-115">Data Store und Serialisierung Technik die Methode verwendet richtet sich nach der Einstellungsanbieter zugeordneten jedes Settings-Klasse, durch die <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="dcece-115">The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="dcece-116">Sie können die Auswahl des Einstellungsanbieters außer Kraft setzen, mit der <xref:System.Configuration.ISettingsProviderService> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="dcece-116">You can override the choice of the settings provider by using the <xref:System.Configuration.ISettingsProviderService> interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dcece-117">Wenn die <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Eigenschaft `true`, sollte das Steuerelement aufrufen <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> in eine eigene <xref:System.Windows.Forms.Control.Dispose%2A> Methode, damit das Steuerelement-Konfigurationsdaten automatisch vor dem Beenden der Anwendung gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="dcece-117">If the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is `true`, the control should call <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> in its own <xref:System.Windows.Forms.Control.Dispose%2A> method so that the control's configuration data is stored automatically before the application ends.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcece-118">Ruft einen Wert ab, der angibt, ob das Steuerelement die Eigenschaften seiner Anwendungseinstellungen automatisch beibehalten soll, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcece-118">Gets or sets a value indicating whether the control should automatically persist its application settings properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcece-119">
            <see langword="true" />, wenn das Steuerelement automatisch seinen Zustand beibehalten soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcece-119">
              <see langword="true" /> if the control should automatically persist its state; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcece-120">Wenn ein Steuerelement Konfigurationsdaten enthält, in der Regel bleiben diese Daten als Antwort auf ein expliziter Aufruf von der <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Methode oder manchmal implizit beim des Steuerelements <xref:System.Windows.Forms.Control.Dispose%2A> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dcece-120">If a control contains configuration data, it will typically persist this data in response to an explicit call to the <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method or sometimes implicitly when the control's <xref:System.Windows.Forms.Control.Dispose%2A> method is invoked.</span></span> <span data-ttu-id="dcece-121">Die <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> -Eigenschaft bestimmt, ob ein Steuerelement die Konfigurationsdaten automatisch beibehalten, wenn er verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="dcece-121">The <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property determines whether a control automatically persists its configuration data when it is disposed.</span></span>  
  
 <span data-ttu-id="dcece-122">Der Standardwert von <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> richtet sich nach der Implementierung des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="dcece-122">The default value of <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> depends on the implementation of the control.</span></span> <span data-ttu-id="dcece-123">Die Dokumentation für das Steuerelement sollte angegeben werden, ob sie Anwendungseinstellungen verwendet, welche Daten persistent gespeichert werden und welcher der Standardwert von der <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="dcece-123">The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcece-124">Im folgenden Codebeispiel wird veranschaulicht, der richtige Weg für ein Steuerelement, um die Überprüfung des Werts der <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Eigenschaft, bevor er versucht, die Konfigurationsdaten automatisch beibehalten.</span><span class="sxs-lookup"><span data-stu-id="dcece-124">The following code example shows the proper way for a control to check the value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property before it attempts to automatically persist its configuration data.</span></span>  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcece-125">Ruft den Wert des Schlüssels der Anwendungseinstellungen für die aktuelle Instanz des Steuerelements ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcece-125">Gets or sets the value of the application settings key for the current instance of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcece-126">Ein <see cref="T:System.String" />, der den Schlüssel der Einstellungen der aktuellen Instanz des Steuerelements enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcece-126">A <see cref="T:System.String" /> containing the settings key for the current instance of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcece-127">Verwenden der <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> Eigenschaft, um Gruppen von Einstellungen Anwendungseigenschaften zu unterscheiden, wenn mehrere Instanzen derselben Wrapperklasse vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="dcece-127">Use the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</span></span> <span data-ttu-id="dcece-128">Beispielsweise enthält ein Steuerelement über eine zugeordnete Wrapperklasse, führt platzieren Sie dann in derselben Anwendung mehrere Instanzen des gleichen Steuerelements in der Regel mehrere Instanzen von der Wrapperklasse.</span><span class="sxs-lookup"><span data-stu-id="dcece-128">For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</span></span> <span data-ttu-id="dcece-129">Ein Einstellungsschlüssel ist erforderlich, nur, wenn die Konfigurationsdaten in einem instanzweise unterschiedlich; Beispiel: die Position der Steuerelemente dynamisch positioniert.</span><span class="sxs-lookup"><span data-stu-id="dcece-129">A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</span></span>  
  
 <span data-ttu-id="dcece-130">Die folgenden allgemeinen Regeln gelten für die Verwendung von <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span><span class="sxs-lookup"><span data-stu-id="dcece-130">The following general rules apply to the use of <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span></span>  
  
-   <span data-ttu-id="dcece-131">Ein Steuerelement, wie jede Klasse darf null oder mehr Anwendungseinstellungsklassen abgeleitet <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="dcece-131">A control, like any class, may contain zero or more application settings classes, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="dcece-132">Jede Settings-Klasse enthält einen eigenen <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> -Eigenschaft, wodurch zu, mehrere Instanzen dieser Klasse unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="dcece-132">Each settings class contains its own <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property, which helps disambiguate multiple instances of that class.</span></span>  
  
-   <span data-ttu-id="dcece-133">Ein Steuerelement sollte Daten pro Instanz und die freigegebenen Daten in unterschiedlichen Einstellungenklassen aufteilen.</span><span class="sxs-lookup"><span data-stu-id="dcece-133">A control should separate its per-instance data and its shared data into different settings classes.</span></span>  
  
-   <span data-ttu-id="dcece-134">Für ein Steuerelement mit Konfigurationsdaten pro Instanz die `get` Accessor, der die <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> Eigenschaft sollte standardmäßig die <xref:System.Windows.Forms.Control.Name%2A> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="dcece-134">For a control with any per-instance configuration data, the `get` accessor of the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property should default to the <xref:System.Windows.Forms.Control.Name%2A> of the control.</span></span> <span data-ttu-id="dcece-135">In den meisten Fällen wird der Name des Steuerelements in einer Anwendung eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="dcece-135">In most cases the name of the control will be unique within an application.</span></span> <span data-ttu-id="dcece-136">Wenn das Steuerelement enthält nur freigegebene Konfigurationsdaten `get` Standard `null`.</span><span class="sxs-lookup"><span data-stu-id="dcece-136">If the control contains only shared configuration data, `get` should default to `null`.</span></span>  
  
-   <span data-ttu-id="dcece-137">Die `set` Accessor für diese Eigenschaft sollte implementiert werden, um Anwendungseinstellungen-Klassen, pro Instanz und die freigegebene Konfigurationsdaten zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="dcece-137">The `set` accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</span></span> <span data-ttu-id="dcece-138">Für jede Settings-Klasse, die mit der Instanzdaten `set` sollten nur Pass-Through an die <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> Eigenschaft der Settings-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dcece-138">For each settings class containing per-instance data, `set` should just pass-through to the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property of the settings class.</span></span> <span data-ttu-id="dcece-139">Für Anwendungseinstellungen-Klassen mit freigegebenen Daten `set` dürfen keine Aktion durchführen, für die Settings-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dcece-139">For settings classes containing shared data, `set` should perform no action for that settings class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>