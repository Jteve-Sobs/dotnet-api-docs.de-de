<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95b08a70d91ff302b6d915b34837c84869c24a00" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39908891" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalFileSettingsProvider&#xA;Inherits SettingsProvider&#xA;Implements IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalFileSettingsProvider : System::Configuration::SettingsProvider, System::Configuration::IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type LocalFileSettingsProvider = class&#xA;    inherit SettingsProvider&#xA;    interface IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d27d8-101">Stellt Dauerhaftigkeit Klassen für Anwendungseinstellungsklassen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d27d8-101">Provides persistence for application settings classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d27d8-102">Einstellungsanbieter definiert einen Mechanismus zum Speichern der Konfigurationsdaten in die Architektur der Anwendungseinstellungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="d27d8-102">Setting providers define a mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="d27d8-103">Die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] enthält einen einzelnen Standardeinstellungsanbieter <xref:System.Configuration.LocalFileSettingsProvider>, der Konfigurationsdaten auf dem lokalen Dateisystem speichert.</span><span class="sxs-lookup"><span data-stu-id="d27d8-103">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="d27d8-104">Eine Anwendungseinstellungseigenschaft oder eine Gruppe von Eigenschaften gehören zu einem Anbieter-spezifischen Einstellungen mithilfe des der <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d27d8-104">An application settings property or group of properties are associated to a specific settings provider through the use of the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="d27d8-105">In der Regel ist das Clientprogramm nicht explizit Zugriff auf diese Klasse; Architektur der Anwendungseinstellungen ruft stattdessen automatisch den entsprechenden Einstellungsanbieter zurück, wenn seine Dienste benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="d27d8-105">Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required.</span></span> <span data-ttu-id="d27d8-106">Z. B. viele der Elemente der <xref:System.Configuration.ApplicationSettingsBase> ihre Arbeit an der zugeordnete Einstellungsanbieter delegieren.</span><span class="sxs-lookup"><span data-stu-id="d27d8-106">For example, many of the members of <xref:System.Configuration.ApplicationSettingsBase> delegate their work to the associated settings provider.</span></span>  
  
 <span data-ttu-id="d27d8-107"><xref:System.Configuration.LocalFileSettingsProvider> Beibehalten von Einstellungen in Konfigurationsdateien, mit der Erweiterung `.config`.</span><span class="sxs-lookup"><span data-stu-id="d27d8-107"><xref:System.Configuration.LocalFileSettingsProvider> persists settings to configuration files that have the extension `.config`.</span></span> <span data-ttu-id="d27d8-108">Der Inhalt von Konfigurationsdateien sind als XML-Dokumente aufgebaut.</span><span class="sxs-lookup"><span data-stu-id="d27d8-108">The contents of configuration files are structured as XML documents.</span></span> <span data-ttu-id="d27d8-109">Je nachdem, ob die Einstellung des auf der Anwendungsebene oder Benutzerebene festgelegt ist, befindet sich die Konfigurationsdaten werden als Elemente innerhalb einer `<applicationSettings>` oder ein `<userSettings>` Abschnittsgruppe bzw.</span><span class="sxs-lookup"><span data-stu-id="d27d8-109">Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an `<applicationSettings>` or a `<userSettings>` section group, respectively.</span></span> <span data-ttu-id="d27d8-110">Jede dieser Abschnittsgruppen wird dargestellt, von einer entsprechenden <xref:System.Configuration.AppSettingsSection> oder <xref:System.Configuration.ClientSettingsSection>bzw..</span><span class="sxs-lookup"><span data-stu-id="d27d8-110">Each of these section groups is represented by a corresponding <xref:System.Configuration.AppSettingsSection> or <xref:System.Configuration.ClientSettingsSection>, respectively.</span></span> <span data-ttu-id="d27d8-111">Jeder Abschnittsobjekt im Besitz und verwaltet einen Konfigurationsabschnittshandler, die ein Objekt des Typs ist <xref:System.Configuration.IConfigurationSectionHandler>.</span><span class="sxs-lookup"><span data-stu-id="d27d8-111">Each section object is owned and administered by a configuration section handler, which is an object of type <xref:System.Configuration.IConfigurationSectionHandler>.</span></span>  
  
 <span data-ttu-id="d27d8-112">Anwendungsspezifische Einstellungen und die standardmäßige benutzerspezifische Einstellungen werden gespeichert, in einer Datei namens `application.exe.config`, das im selben Verzeichnis wie die ausführbare Datei erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="d27d8-112">Application-scoped settings and the default user-scoped settings are stored in a file named `application.exe.config`, which is created in the same directory as the executable file.</span></span> <span data-ttu-id="d27d8-113">Anwendungskonfigurationseinstellungen sind schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="d27d8-113">Application configuration settings are read-only.</span></span> <span data-ttu-id="d27d8-114">Bestimmte Benutzerdaten befindet sich in einer Datei namens `user.config`, gespeichert, die im Basisverzeichnis des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="d27d8-114">Specific user data is stored in a file named `user.config`, stored under the user's home directory.</span></span> <span data-ttu-id="d27d8-115">Wenn servergespeicherte Profile aktiviert sind, können zwei Versionen der Benutzerkonfigurationsdatei vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="d27d8-115">If roaming profiles are enabled, two versions of the user configuration file could exist.</span></span> <span data-ttu-id="d27d8-116">In diesem Fall haben die Einträge in der servergespeicherte Version Vorrang vor doppelte Einträge in der Konfigurationsdatei für den lokalen Benutzer.</span><span class="sxs-lookup"><span data-stu-id="d27d8-116">In such a case, the entries in the roaming version take precedence over duplicated entries in the local user configuration file.</span></span>  
  
 <span data-ttu-id="d27d8-117">Weitere Informationen zu Anwendungseinstellungen finden Sie unter [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="d27d8-117">For more information about application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalFileSettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d27d8-118">Initialisiert eine neue Instanz der <see cref="T:System.Configuration.LocalFileSettingsProvider" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-118">Initializes a new instance of the <see cref="T:System.Configuration.LocalFileSettingsProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d27d8-119">Die Standard-Konstruktor legt die <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> Eigenschaft <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="d27d8-119">The default constructor sets the <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> property to <xref:System.String.Empty>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d27d8-120">Ruft den Namen der aktuell ausgeführten Anwendung ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-120">Gets or sets the name of the currently running application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d27d8-121">Eine Zeichenfolge, die den Anzeigenamen der Anwendung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-121">A string that contains the application's display name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d27d8-122">Die <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> und <xref:System.Configuration.Provider.ProviderBase.Name%2A> Eigenschaften – Hilfe zur an um entsprechend benannte Eigenschaften in verschiedenen Anwendungen zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="d27d8-122">The <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue&#xA;override this.GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="localFileSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d27d8-123">Ein <see cref="T:System.Configuration.SettingsContext" />, der beschreibt, wo die Anwendungseinstellungseigenschaft verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-123">A <see cref="T:System.Configuration.SettingsContext" /> that describes where the application settings property is used.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="d27d8-124">Die <see cref="T:System.Configuration.SettingsProperty" />, deren Wert zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-124">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d27d8-125">Gibt den Wert der benannten Einstellungseigenschaft für die vorherige Version derselben Anwendung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-125">Returns the value of the named settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d27d8-126">Ein <see cref="T:System.Configuration.SettingsPropertyValue" />, der die Anwendungseinstellung darstellt, sofern gefunden; andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-126">A <see cref="T:System.Configuration.SettingsPropertyValue" /> representing the application setting if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d27d8-127">Die <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> Methode wird häufig verwendet, in Verbindung mit der <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> Methode bei der Migration von Anwendungseinstellungen während der Installations einer neuen Version einer Anwendung.</span><span class="sxs-lookup"><span data-stu-id="d27d8-127">The <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span> <span data-ttu-id="d27d8-128">Weitere Informationen finden Sie unter der <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="d27d8-128">For more information, see the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (context As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="localFileSettingsProvider.GetPropertyValues (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d27d8-129">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-129">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="d27d8-130">Eine <see cref="T:System.Configuration.SettingsPropertyCollection" />, die die Einstellungseigenschaftengruppe enthält, deren Werte abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-130">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d27d8-131">Gibt die Auflistung der Einstellungseigenschaftswerte für die angegebene Anwendungsinstanz und Einstellungseigenschaftengruppe zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-131">Returns the collection of setting property values for the specified application instance and settings property group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d27d8-132">Eine <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, die Werte für die angegebene Einstellungseigenschaftengruppe enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-132">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d27d8-133">Die <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> Methode verwaltet auch die spezielle Anwendungseinstellungstyp <xref:System.Configuration.SpecialSetting.ConnectionString>.</span><span class="sxs-lookup"><span data-stu-id="d27d8-133">The <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> method also manages the special application settings type <xref:System.Configuration.SpecialSetting.ConnectionString>.</span></span> <span data-ttu-id="d27d8-134">Verbindungszeichenfolgen werden in einem speziellen Abschnitt der Konfigurationsdatei vom Element getrennt gespeichert `<connectionstrings>`.</span><span class="sxs-lookup"><span data-stu-id="d27d8-134">Connection strings are stored in a special section of the configuration file delimited by the element `<connectionstrings>`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d27d8-135"><xref:System.Configuration.LocalFileSettingsProvider> ist keine Verschlüsselung verwendet, alle Einstellungen beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="d27d8-135"><xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings.</span></span> <span data-ttu-id="d27d8-136">Speichern Sie daher nicht nur-Text-Kennwörter oder andere vertrauliche Informationen, die mithilfe dieses Anbieters ohne zusätzliche Vorsichtsmaßnahmen, z. B. separat verschlüsselt die Informationen in der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="d27d8-136">Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.</span></span> <span data-ttu-id="d27d8-137">Weitere Informationen finden Sie unter [Encrypting Configuration Information mithilfe von geschützten Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).</span><span class="sxs-lookup"><span data-stu-id="d27d8-137">For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="d27d8-138">Eine die Benutzer betreffende Einstellung wurde gefunden, die aktuelle Konfiguration unterstützt aber nur die Anwendung betreffende Einstellungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-138">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, values As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="localFileSettingsProvider.Initialize (name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d27d8-139">Der angezeigte Name des Anbieters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-139">The friendly name of the provider.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="d27d8-140">Eine Auflistung der Name-Wert-Paare, die die anbieterspezifischen Attribute darstellen, die in der Konfiguration für diesen Anbieter angegeben sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-140">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d27d8-141">Initialisiert den Anbieter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-141">Initializes the provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit&#xA;override this.Reset : System.Configuration.SettingsContext -&gt; unit" Usage="localFileSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d27d8-142">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-142">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d27d8-143">Setzt alle mit der angegebenen Anwendung verbundenen Anwendungseinstellungseigenschaften auf ihre Standardwerte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-143">Resets all application settings properties associated with the specified application to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d27d8-144">Die <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> Methode werden die gespeicherten Werte, der die angegebene Anwendungsgruppe Einstellungen wiederhergestellt.</span><span class="sxs-lookup"><span data-stu-id="d27d8-144">The <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> method restores the stored values of the specified application settings group.</span></span> <span data-ttu-id="d27d8-145">Die Aktion der <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> hängt vom Umfang der Anwendungseinstellungseigenschaft:</span><span class="sxs-lookup"><span data-stu-id="d27d8-145">The action of <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> depends on the scope of the application settings property:</span></span>  
  
-   <span data-ttu-id="d27d8-146">Anwendungsspezifische Einstellungen sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="d27d8-146">Application-scoped settings are not affected.</span></span>  
  
-   <span data-ttu-id="d27d8-147">Benutzerspezifische Einstellungen werden zurückgesetzt, auf die Standardwerte, die als nur-Lese Einträge in der Konfigurationsdatei der Anwendung gespeichert sind `application.exe.config`.</span><span class="sxs-lookup"><span data-stu-id="d27d8-147">User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, `application.exe.config`.</span></span> <span data-ttu-id="d27d8-148">Alle Anwendungseinstellungswerte als servergespeichertes Profil hat Vorrang vor allen Duplikate finden Sie unter dem lokalen Profil, wenn servergespeicherte Profile verwendet werden, ist.</span><span class="sxs-lookup"><span data-stu-id="d27d8-148">If roaming profiles are being used, any application settings values in the roaming profile take precedence over duplicates found in the local profile.</span></span>  
  
 <span data-ttu-id="d27d8-149">Beachten Sie, dass wenn servergespeicherte Profile verwendet werden, es kann zwei `user.config` -Dateien, eine für die lokalen Einstellungen und eine für das servergespeicherte Profil.</span><span class="sxs-lookup"><span data-stu-id="d27d8-149">Notice that if roaming profiles are used, there can be two `user.config` files, one for the local settings and one for the roaming profile.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="d27d8-150">Eine die Benutzer betreffende Einstellung wurde gefunden, die aktuelle Konfiguration unterstützt aber nur die Anwendung betreffende Einstellungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-150">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (context As SettingsContext, values As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="localFileSettingsProvider.SetPropertyValues (context, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d27d8-151">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-151">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="d27d8-152">Eine <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, die die Gruppe der festzulegenden Eigenschafteneinstellungen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-152">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d27d8-153">Legt die Werte der angegebenen Gruppe von Eigenschafteneinstellungen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-153">Sets the values of the specified group of property settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d27d8-154">Eine Wrapperklasse für Einstellungen, abgeleitet aus <xref:System.Configuration.ApplicationSettingsBase>, enthält die <xref:System.Configuration.ApplicationSettingsBase.Save%2A> -Methode, die aufgerufen wird, um die Werte aller Eigenschaften Einstellungen beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="d27d8-154">A settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>, contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="d27d8-155">Diese Methode durchläuft alle Einstellungen Anbieter zugeordnete seine Eigenschaften und Aufrufe der <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> Methode für die einzelnen <xref:System.Configuration.SettingsProvider> zum Ausführen des Vorgangs für die Serialisierung.</span><span class="sxs-lookup"><span data-stu-id="d27d8-155">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="d27d8-156"><xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> serialisiert einzeln auf jede benutzerspezifische Anwendungseinstellungseigenschaft an die entsprechende Anwendung, die in die entsprechende Einstellung `user.config` Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="d27d8-156"><xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> individually serializes each user-scoped application settings property to its corresponding application setting in the appropriate `user.config` configuration file.</span></span>  
  
 <span data-ttu-id="d27d8-157">In der Standardeinstellung die <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> Methode verwendet der folgende logische Ablauf, um das Serialisierungsschema, je nach Art der Einstellungseigenschaft zu bestimmen:</span><span class="sxs-lookup"><span data-stu-id="d27d8-157">By default, the <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:</span></span>  
  
1.  <span data-ttu-id="d27d8-158">Wenn der Typ eines zugeordneten hat <xref:System.ComponentModel.TypeConverter> mit einer <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> methodenimplementierung, diese Konvertierung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d27d8-158">If the type has an associated <xref:System.ComponentModel.TypeConverter> with a <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> method implementation, this conversion is used.</span></span>  
  
2.  <span data-ttu-id="d27d8-159">XML-Serialisierung wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="d27d8-159">XML serialization is used.</span></span>  
  
 <span data-ttu-id="d27d8-160">Sie können jedoch einen bevorzugten Serialisierungsmechanismus angeben, mit der <xref:System.Configuration.SettingsSerializeAsAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d27d8-160">However, you can specify a preferred serialization mechanism by using the <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="d27d8-161"><xref:System.Configuration.LocalFileSettingsProvider> unterstützt keine binären Serialisierung in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d27d8-161"><xref:System.Configuration.LocalFileSettingsProvider> does not support binary serialization in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].</span></span>  
  
 <span data-ttu-id="d27d8-162">Wenn eine Eigenschaft für benutzerspezifische Einstellungen wieder explizit auf den Standardwert festgelegt ist, wird der lokalen Datei Einstellungsanbieter den Eintrag für die zugeordnete Einstellung aus der Konfigurationsdatei für den Benutzer entfernt.</span><span class="sxs-lookup"><span data-stu-id="d27d8-162">If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file.</span></span> <span data-ttu-id="d27d8-163">Der nächste Lesezugriff für diese Eigenschaft wird einfach der Standardwert verwendet.</span><span class="sxs-lookup"><span data-stu-id="d27d8-163">The next read access for this property will simply use the default value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d27d8-164"><xref:System.Configuration.LocalFileSettingsProvider> ist keine Verschlüsselung verwendet, alle Einstellungen beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="d27d8-164"><xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings.</span></span> <span data-ttu-id="d27d8-165">Speichern Sie daher nicht nur-Text-Kennwörter oder andere vertrauliche Informationen, die mithilfe dieses Anbieters ohne zusätzliche Vorsichtsmaßnahmen, z. B. separat verschlüsselt die Informationen in der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="d27d8-165">Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.</span></span> <span data-ttu-id="d27d8-166">Weitere Informationen finden Sie unter [Encrypting Configuration Information mithilfe von geschützten Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).</span><span class="sxs-lookup"><span data-stu-id="d27d8-166">For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="d27d8-167">Eine die Benutzer betreffende Einstellung wurde gefunden, die aktuelle Konfiguration unterstützt aber nur die Anwendung betreffende Einstellungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-167">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span>
          </span>
          <span data-ttu-id="d27d8-168">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-168">-or-</span>
          </span>
          <span data-ttu-id="d27d8-169">Beim Speichern der Einstellungen in der Konfigurationsdatei ist ein allgemeiner Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-169">There was a general failure saving the settings to the configuration file.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit&#xA;override this.Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="localFileSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d27d8-170">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-170">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="d27d8-171">Eine <see cref="T:System.Configuration.SettingsPropertyCollection" />, die die Einstellungseigenschaftengruppe enthält, deren Werte abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-171">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d27d8-172">Versucht, frühere, den Benutzer betreffende Einstellungen aus einer früheren Version derselben Anwendung zu migrieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-172">Attempts to migrate previous user-scoped settings from a previous version of the same application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d27d8-173"><xref:System.Configuration.LocalFileSettingsProvider> die lokalen und roaming-Einstellungen in separaten Vorgängen werden migriert.</span><span class="sxs-lookup"><span data-stu-id="d27d8-173"><xref:System.Configuration.LocalFileSettingsProvider> migrates the local and roaming settings in separate operations.</span></span>  
  
 <span data-ttu-id="d27d8-174">Die <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> Methode unterdrückt wird, für jede Anwendung, die festlegen, hat die <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> angewendet wird, oder der gesamten Einstellungen Wrapper-Klasse abgeleitet <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="d27d8-174">The <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method is suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="d27d8-175">Auf diese Weise, die diese Methode aufgerufen wird, hängt von der Art der Anwendung, die aktualisiert wird:</span><span class="sxs-lookup"><span data-stu-id="d27d8-175">This way this method is called depends on the type of application that is being upgraded:</span></span>  
  
-   <span data-ttu-id="d27d8-176">Jede Version eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung in ihrem eigenen isolierten Installationsverzeichnis gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="d27d8-176">Each version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is stored in its own isolated installation directory.</span></span> <span data-ttu-id="d27d8-177">Nach der eine neue Version des eine [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] Anwendung installiert ist, und wenn die neue Version zuerst ausgeführt wird, wird automatisch interner Logik Aufrufen <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> alle allgemeinen Anwendungseinstellungen auf die neue Version zu migrieren.</span><span class="sxs-lookup"><span data-stu-id="d27d8-177">After a new version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is installed, and when the new version is first run, internal logic will automatically call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> to migrate all common application settings to the new version.</span></span> <span data-ttu-id="d27d8-178">Weitere Informationen finden Sie unter [ClickOnce und Anwendungseinstellungen](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).</span><span class="sxs-lookup"><span data-stu-id="d27d8-178">For more information, see [ClickOnce and Application Settings](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).</span></span>  
  
-   <span data-ttu-id="d27d8-179">Standardmäßigen Windows Forms und konsolenanwendungen müssen manuell aufrufen, <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, da es keine allgemeine, automatische Methode zum bestimmen, wann eine solche Anwendung zuerst ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d27d8-179">Standard Windows Forms and console applications must manually call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, because there is not a general, automatic way to determine when such an application is first run.</span></span> <span data-ttu-id="d27d8-180">Die zwei allgemeinen Verfahren sind entweder über das Installationsprogramm oder mithilfe von aus der Anwendung selbst, die mit einer beibehaltenen-Eigenschaft, häufig mit einem Namen wie `IsFirstRun`.</span><span class="sxs-lookup"><span data-stu-id="d27d8-180">The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like `IsFirstRun`.</span></span>  
  
 <span data-ttu-id="d27d8-181">Beachten Sie, dass für die neuere Version Migrieren von Anwendungseinstellungen, es muss auch zu laden und die ältere Version der Anwendungseinstellungen lesen können.</span><span class="sxs-lookup"><span data-stu-id="d27d8-181">Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings.</span></span> <span data-ttu-id="d27d8-182">Daher muss sie Wrapper-Klassen, die kompatibel mit den neuen und früheren Versionen der Anwendung enthalten.</span><span class="sxs-lookup"><span data-stu-id="d27d8-182">Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="d27d8-183">Eine die Benutzer betreffende Einstellung wurde gefunden, die aktuelle Konfiguration unterstützt aber nur die Anwendung betreffende Einstellungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-183">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</span>
          </span>
          <span data-ttu-id="d27d8-184">- oder -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-184">-or-</span>
          </span>
          <span data-ttu-id="d27d8-185">Auf die vorherige Version der Konfigurationsdatei konnte nicht zugegriffen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d27d8-185">The previous version of the configuration file could not be accessed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>