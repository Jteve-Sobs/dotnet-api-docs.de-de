<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5d5730d41b97a5c57f862d89c29c0934924653b" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63865309" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert erweiterte Fähigkeiten für clientbasierte Anbieter von Anwendungseinstellungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Architektur der Anwendungseinstellungen können Sie einen benutzerdefinierten Speichermechanismus angeben, für die Anwendungseinstellungen erstellen Sie einen benutzerdefinierten Einstellungsanbieter, was eine Klasse ist abgeleitet <xref:System.Configuration.SettingsProvider>. Eine solche Klasse enthält die grundlegende Funktionen zum Speichern und Abrufen von Eigenschaften. Sie können jedoch zusätzliche standardisierte Funktionalität hinzufügen, durch die Implementierung der <xref:System.Configuration.IApplicationSettingsProvider> -Schnittstelle in der benutzerdefinierten Einstellungsanbieter. Diese Schnittstelle enthält drei Methoden, die in erster Linie den Einstellungsanbieter auf Intelligenter Handle Version anwendungsänderungen zu ermöglichen. In der Regel wird der Einstellungsanbieter Anwendungseinstellungen für verschiedene Versionen einer Anwendung separat zu die folgenden Situationen vorhersehen zu speichern:  
  
-   Seite-an-Seite-Ausführung mit unterschiedlichen Versionen einer Anwendung.  
  
-   Anwendungseinstellungen werden beibehalten, beim Aktualisieren einer Anwendung.  
  
-   Zurücksetzen der Anwendungseinstellungen auf ihre Standardwerte für die aktuell verwendeten Version.  
  
 Die <xref:System.Configuration.LocalFileSettingsProvider>-Klasse implementiert die <xref:System.Configuration.IApplicationSettingsProvider>-Schnittstelle. Den gleichen Satz von Methoden, die enthaltenen <xref:System.Configuration.IApplicationSettingsProvider> finden Sie auch der <xref:System.Configuration.ApplicationSettingsBase> Klasse, die Einrichtung einer vordefinierten Kommunikationskanal zwischen einer Anwendung Einstellungswrappers und den Einstellungsanbieter zu aktivieren.  
  
> [!NOTE]
>  Diese Schnittstelle ist optional. Wenn ein Anbieter diese Schnittstelle nicht implementiert, schlägt die Settings-Infrastruktur ohne Benachrichtigung, wenn versucht wird, die von dieser Schnittstelle definierten Methoden den Zugriff auf.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Architektur der Anwendungseinstellungen</related>
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</param>
        <param name="property">Die <see cref="T:System.Configuration.SettingsProperty" />, deren Wert zurückgegeben werden soll.</param>
        <summary>Gibt den Wert der angegebenen Einstellungseigenschaft für die vorherige Version derselben Anwendung zurück.</summary>
        <returns>Ein <see cref="T:System.Configuration.SettingsPropertyValue" />, der den Wert der angegebenen Eigenschafteneinstellung enthält, wie der zuletzt in der vorherigen Version der Anwendung festgelegt wurde; oder <see langword="null" />, wenn die Einstellung nicht gefunden werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> -Methode in Verbindung mit der <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> Methode zum Migrieren von Anwendungseinstellungen während oder nach der Installation einer neuen Version einer Anwendung.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Für <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> Berechtigung.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Parallele Ausführung</related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</param>
        <summary>Setzt die mit der angegebenen Anwendung verbundenen Anwendungseinstellungen auf ihre Standardwerte zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> Methode initialisiert die gespeicherten Werte der Einstellungen für die Anwendungsgruppe. Im Gegensatz dazu <xref:System.Configuration.DefaultSettingValueAttribute> einen Standardwert für einen einzelnen Einstellungseigenschaft während der Initialisierung, bereitstellt, wenn es kein gespeicherten Wert verfügt.  
  
 Der Anbieter der Einstellungen wird bestimmt, was für die angegebene Gruppe von Anwendungseinstellungen sinnvolle Standardwerte vorgegeben sind. Z. B. die Implementierung in <xref:System.Configuration.LocalFileSettingsProvider> setzt benutzerspezifische Einstellungen auf ihre freigegebenen Werte in der `application.exe.config` Datei; im Gegensatz dazu bleibt es die anwendungsspezifischen Einstellungen unverändert.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Für <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> Berechtigung.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</param>
        <param name="properties">Eine <see cref="T:System.Configuration.SettingsPropertyCollection" />, die die Einstellungseigenschaftengruppe enthält, deren Werte abgerufen werden sollen.</param>
        <summary>Gibt dem Anbieter an, dass die Anwendung aktualisiert wurde. Dadurch erhält der Anbieter die Gelegenheit, seine gespeicherten Einstellungen entsprechend zu aktualisieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework können die Seite-an-Seite-Installation und Ausführung verschiedener Versionen derselben Anwendung. Der Anwendungseinstellungsanbieter speichert die Einstellungen für jede Version einer Anwendung separat durchführen, um Isolation sicherzustellen. Allerdings empfiehlt es sich zum Migrieren von Einstellungen aus der vorherigen Version einer Anwendung in der aktuellen Aktivität. Um diese Funktionen für die Migration zu gewährleisten, verwenden Sie die <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> Methode, die in einer Klasse abgeleitet implementiert <xref:System.Configuration.SettingsProvider>.  
  
 Können Sie die <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> -Methode in Verbindung mit der <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> Methode zum Migrieren von Anwendungseinstellungen während oder nach der Installation einer neuen Version einer Anwendung.  
  
 Diese Methode unterdrückt werden sollen, für jede Anwendung, die festlegen, hat die <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> angewendet wird, oder der gesamten Einstellungen Wrapper-Klasse abgeleitet <xref:System.Configuration.ApplicationSettingsBase>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Für <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> Berechtigung.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Parallele Ausführung</related>
      </Docs>
    </Member>
  </Members>
</Type>