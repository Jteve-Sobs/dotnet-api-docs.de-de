<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53e3d96ee4c1f73a05d936c3f4ace5c9859c54c0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70662572" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert erweiterte Fähigkeiten für clientbasierte Anbieter von Anwendungseinstellungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Architektur der Anwendungseinstellungen ermöglicht Ihnen die Bereitstellung eines benutzerdefinierten Speichermechanismus für Anwendungseinstellungen durch Erstellen eines benutzerdefinierten Einstellungs Anbieters, bei dem <xref:System.Configuration.SettingsProvider>es sich um eine von abgeleitete Klasse handelt. Eine solche Klasse enthält die grundlegenden Funktionen zum Speichern und Abrufen von Eigenschaften. Sie können jedoch zusätzliche standardisierte Funktionalität hinzufügen, indem Sie <xref:System.Configuration.IApplicationSettingsProvider> die-Schnittstelle im Anbieter für benutzerdefinierte Einstellungen implementieren. Diese Schnittstelle enthält drei Methoden, mit denen der Einstellungs Anbieter hauptsächlich Änderungen an der Anwendungs Version leichter verarbeiten kann. In der Regel speichert der Einstellungs Anbieter Anwendungseinstellungen für verschiedene Versionen einer Anwendung separat, um die folgenden Umstände zu erwarten:  
  
-   Parallele Ausführung verschiedener Versionen einer Anwendung.  
  
-   Beibehalten von Anwendungseinstellungen beim Aktualisieren einer Anwendung.  
  
-   Zurücksetzen der Anwendungseinstellungen auf ihre Standardwerte für die aktuell verwendete Version.  
  
 Die <xref:System.Configuration.LocalFileSettingsProvider>-Klasse implementiert die <xref:System.Configuration.IApplicationSettingsProvider>-Schnittstelle. Der gleiche Satz von Methoden, der <xref:System.Configuration.IApplicationSettingsProvider> in enthalten ist, finden <xref:System.Configuration.ApplicationSettingsBase> Sie auch in der-Klasse. Dadurch wird die Einrichtung eines vordefinierten Kommunikationskanals zwischen einem Anwendungs Einstellungs Wrapper und dem zugehörigen Einstellungs Anbieter ermöglicht.  
  
> [!NOTE]
>  Diese Schnittstelle ist optional. Wenn ein Anbieter diese Schnittstelle nicht implementiert, schlägt die Einstellungs Infrastruktur ohne Benachrichtigung fehl, wenn versucht wird, auf eine der Methoden zuzugreifen, die von dieser Schnittstelle definiert werden.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Architektur der Anwendungseinstellungen</related>
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</param>
        <param name="property">Die <see cref="T:System.Configuration.SettingsProperty" />, deren Wert zurückgegeben werden soll.</param>
        <summary>Gibt den Wert der angegebenen Einstellungseigenschaft für die vorherige Version derselben Anwendung zurück.</summary>
        <returns>Ein <see cref="T:System.Configuration.SettingsPropertyValue" />, der den Wert der angegebenen Eigenschafteneinstellung enthält, wie der zuletzt in der vorherigen Version der Anwendung festgelegt wurde; oder <see langword="null" />, wenn die Einstellung nicht gefunden werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> -Methode zusammen mit der <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> -Methode verwenden, um Anwendungseinstellungen während oder nach der Installation einer neuen Version einer Anwendung zu migrieren.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Für <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> die Berechtigung.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Parallele Ausführung</related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</param>
        <summary>Setzt die mit der angegebenen Anwendung verbundenen Anwendungseinstellungen auf ihre Standardwerte zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> -Methode initialisiert die gespeicherten Werte der angegebenen Anwendungs Einstellungs Gruppe neu. Im Gegensatz dazu <xref:System.Configuration.DefaultSettingValueAttribute> stellt während der Eigenschafts Initialisierung einen Standardwert für eine einzelne Einstellungs Eigenschaft bereit, wenn Sie über keinen gespeicherten Wert verfügt.  
  
 Der Einstellungs Anbieter bestimmt, welche angemessenen Standardwerte für die angegebene Gruppe von Anwendungseinstellungen gelten. Beispielsweise setzt die-Implementierung <xref:System.Configuration.LocalFileSettingsProvider> in die Benutzer bezogenen Einstellungen auf Ihre freigegebenen Werte in der `application.exe.config` Datei zurück. im Gegensatz dazu werden die anwendungsbezogenen Einstellungen unverändert gelassen.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Für <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> die Berechtigung.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Configuration.SettingsContext" />, der die aktuelle Anwendungsverwendung beschreibt.</param>
        <param name="properties">Eine <see cref="T:System.Configuration.SettingsPropertyCollection" />, die die Einstellungseigenschaftengruppe enthält, deren Werte abgerufen werden sollen.</param>
        <summary>Gibt dem Anbieter an, dass die Anwendung aktualisiert wurde. Dadurch erhält der Anbieter die Gelegenheit, seine gespeicherten Einstellungen entsprechend zu aktualisieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der .NET Framework ermöglicht die parallele Installation und Ausführung verschiedener Versionen derselben Anwendung. Der Anwendungs Einstellungs Anbieter speichert die Anwendungseinstellungen für jede Version einer Anwendung separat, um die Isolation sicherzustellen. Möglicherweise möchten Sie jedoch die Einstellungen der früheren Version einer Anwendung zu der aktuellen Version migrieren. Um diese Migrations Funktion bereitzustellen, verwenden <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> Sie die-Methode, die in einer <xref:System.Configuration.SettingsProvider>von abgeleiteten Klasse implementiert ist.  
  
 Sie können die <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> -Methode zusammen mit der <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> -Methode verwenden, um Anwendungseinstellungen während oder nach der Installation einer neuen Version einer Anwendung zu migrieren.  
  
 Diese Methode sollte für jede Anwendungs Einstellung unterdrückt werden, auf <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> die das angewendet wird, oder die gesamte, von <xref:System.Configuration.ApplicationSettingsBase>abgeleitete Einstellungs Wrapper Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Für <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> die Berechtigung.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Parallele Ausführung</related>
      </Docs>
    </Member>
  </Members>
</Type>
