<Type Name="UriSection" FullName="System.Configuration.UriSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a0df274813ba76c96525c1d4c615538bb4f6840" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39844193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UriSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UriSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.UriSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UriSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type UriSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt den URI-Abschnitt in einer Konfigurationsdatei dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die vorhandene <xref:System.Uri?displayProperty=nameWithType> Klasse wurde erweitert, damit die Unterstützung von International Resource Identifiers (IRI) und Internationalized Domain Names. Aktuellen Benutzer sehen keine Änderung gegenüber dem .NET Framework 2.0-Verhalten, es sei denn, sie explizit IRI und IDN aktivieren. Dadurch wird die Anwendungskompatibilität mit früheren Versionen von .NET Framework garantiert.  
  
 Die Konfigurationseinstellungen für die IRI und IDN können abgerufen werden, mithilfe der <xref:System.Configuration.UriSection> Klasse.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.UriSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Configuration.UriSection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die vorhandene <xref:System.Uri?displayProperty=nameWithType> Klasse wurde erweitert, damit die Unterstützung von International Resource Identifiers (IRI) und Internationalized Domain Names. Aktuellen Benutzer sehen keine Änderung gegenüber dem .NET Framework 2.0-Verhalten, es sei denn, sie explizit IRI und IDN aktivieren. Dadurch wird die Anwendungskompatibilität mit früheren Versionen von .NET Framework garantiert.  
  
 Die Konfigurationseinstellungen für die IRI und IDN können abgerufen werden, mithilfe der <xref:System.Configuration.UriSection> Klasse.  
  
 Weitere Informationen zur IRI-Unterstützung finden Sie im Abschnitt "Hinweise" für die <xref:System.Uri?displayProperty=nameWithType> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idn">
      <MemberSignature Language="C#" Value="public System.Configuration.IdnElement Idn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IdnElement Idn" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Idn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Idn As IdnElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IdnElement ^ Idn { System::Configuration::IdnElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Idn : System.Configuration.IdnElement" Usage="System.Configuration.UriSection.Idn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Configuration.ConfigurationProperty("idn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IdnElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Configuration.IdnElement" />-Objekt ab, das die Konfigurationseinstellung für die IDN-Verarbeitung in der <see cref="T:System.Uri" />-Klasse enthält.</summary>
        <value>Die Konfigurationseinstellung für die IDN-Verarbeitung (International Domain Name) in der <see cref="T:System.Uri" />-Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die vorhandene <xref:System.Uri?displayProperty=nameWithType> Klasse wurde erweitert, damit die Unterstützung von International Resource Identifiers (IRI) und Internationalized Domain Names. Aktuellen Benutzer sehen keine Änderung gegenüber dem .NET Framework 2.0-Verhalten, es sei denn, sie explizit IRI und IDN aktivieren. Dadurch wird die Anwendungskompatibilität mit früheren Versionen von .NET Framework garantiert.  
  
 Die Konfigurationseinstellungen für die IRI und IDN können abgerufen werden, mithilfe der <xref:System.Configuration.UriSection> Klasse. Die <xref:System.Configuration.UriSection.Idn%2A> Eigenschaft gibt die Einstellung für die IDN-Verarbeitung in die <xref:System.Uri?displayProperty=nameWithType> Klasse.  
  
 Die IRI-Verarbeitung muss aktiviert werden, damit die IDN-Verarbeitung überhaupt möglich ist. Ist die IRI-Verarbeitung deaktiviert, wird die IDN-Verarbeitung auf die Standardeinstellung festgelegt. Darin wird aus Kompatibilitätsgründen das .NET Framework 2.0-Verhalten verwendet, und IDN-Namen werden nicht verwendet.  
  
 Das Attribut Internationalized Domain Name (IDN) steuert nur die IDN-Verarbeitung. Alle anderen IRI-Verarbeitung (z. B. die Normalisierung von Zeichen) wird standardmäßig ausgeführt.  
  
 Die Konfigurationseinstellung für die <xref:System.Configuration.IdnElement> gelesen wird einmal beim ersten <xref:System.Uri?displayProperty=nameWithType> Klasse erstellt wird. Später vorgenommene Änderungen an den Konfigurationseinstellungen werden anschließend ignoriert.  
  
 Weitere Informationen zur IRI-Unterstützung finden Sie im Abschnitt "Hinweise" für die <xref:System.Uri?displayProperty=nameWithType> Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="IriParsing">
      <MemberSignature Language="C#" Value="public System.Configuration.IriParsingElement IriParsing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IriParsingElement IriParsing" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.IriParsing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IriParsing As IriParsingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IriParsingElement ^ IriParsing { System::Configuration::IriParsingElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IriParsing : System.Configuration.IriParsingElement" Usage="System.Configuration.UriSection.IriParsing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Configuration.ConfigurationProperty("iriParsing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IriParsingElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Configuration.IriParsingElement" />-Objekt ab, das die Konfigurationseinstellung für die IRI-Analyse in der <see cref="T:System.Uri" />-Klasse enthält.</summary>
        <value>Die Konfigurationseinstellung für die IRI-Analyse (International Resource Identifier) in der <see cref="T:System.Uri" />-Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die vorhandene <xref:System.Uri?displayProperty=nameWithType> Klasse wurde erweitert, damit die Unterstützung von International Resource Identifiers (IRI) und Internationalized Domain Names. Aktuellen Benutzer sehen keine Änderung gegenüber dem .NET Framework 2.0-Verhalten, es sei denn, sie explizit IRI und IDN aktivieren. Dadurch wird die Anwendungskompatibilität mit früheren Versionen von .NET Framework garantiert.  
  
 Die Konfigurationseinstellungen für die IRI und IDN können abgerufen werden, mithilfe der <xref:System.Configuration.UriSection> Klasse. Die <xref:System.Configuration.UriSection.IriParsing%2A> Eigenschaft gibt die Einstellung für die IRI-Analyse die <xref:System.Uri?displayProperty=nameWithType> Klasse.  
  
 Die IRI-Verarbeitung muss aktiviert werden, damit die IDN-Verarbeitung überhaupt möglich ist. Ist die IRI-Verarbeitung deaktiviert, wird die IDN-Verarbeitung auf die Standardeinstellung festgelegt. Darin wird aus Kompatibilitätsgründen das .NET Framework 2.0-Verhalten verwendet, und IDN-Namen werden nicht verwendet.  
  
 Das Attribut Internationalized Domain Name (IDN) steuert nur die IDN-Verarbeitung. Alle anderen IRI-Verarbeitung (z. B. die Normalisierung von Zeichen) wird standardmäßig ausgeführt.  
  
 Die Konfigurationseinstellung für die <xref:System.Configuration.IriParsingElement> gelesen wird einmal beim ersten <xref:System.Uri?displayProperty=nameWithType> Klasse erstellt wird. Später vorgenommene Änderungen an den Konfigurationseinstellungen werden anschließend ignoriert.  
  
 Weitere Informationen zur IRI-Unterstützung finden Sie im Abschnitt "Hinweise" für die <xref:System.Uri?displayProperty=nameWithType> Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Configuration.UriSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemeSettings">
      <MemberSignature Language="C#" Value="public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SchemeSettingElementCollection SchemeSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.SchemeSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemeSettings As SchemeSettingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SchemeSettingElementCollection ^ SchemeSettings { System::Configuration::SchemeSettingElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemeSettings : System.Configuration.SchemeSettingElementCollection" Usage="System.Configuration.UriSection.SchemeSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("schemeSettings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SchemeSettingElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Configuration.SchemeSettingElementCollection" />-Objekt ab, das die Konfigurationseinstellungen für die Schemaanalyse in der <see cref="T:System.Uri" />-Klasse enthält.</summary>
        <value>Die Konfigurationseinstellungen für die Schemaanalyse in der <see cref="T:System.Uri" />-Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.UriSection.SchemeSettings%2A> Eigenschaft ist nicht generisch. Nur die GenericUriParserOptions = der Konfigurationseinstellung "DontUnescapePathDotsAndSlashes" für HTTP und HTTPS-Schemas unterstützt werden. Alle anderen Einstellungen werden ignoriert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SchemeSettingElement" />
        <altmember cref="T:System.Configuration.SchemeSettingElementCollection" />
        <altmember cref="T:System.GenericUriParserOptions" />
      </Docs>
    </Member>
  </Members>
</Type>