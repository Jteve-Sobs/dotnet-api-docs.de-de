<Type Name="WebScriptServiceHostFactory" FullName="System.ServiceModel.Activation.WebScriptServiceHostFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5dc9f056f4ee9946136c329d68ac1c2ec7f79336" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963742" /></Metadata><TypeSignature Language="C#" Value="public class WebScriptServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebScriptServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WebScriptServiceHostFactory&#xA;Inherits ServiceHostFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebScriptServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactory" />
  <TypeSignature Language="F#" Value="type WebScriptServiceHostFactory = class&#xA;    inherit ServiceHostFactory" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fügt einem Dienst in einer verwalteten Hostumgebung, die Hostinstanzen für den Dienst als Reaktion auf eingehende Nachrichten dynamisch aktiviert, automatisch einen ASP.NET AJAX-Endpunkt hinzu, ohne eine Konfiguration zu erfordern.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Factory bietet eine Möglichkeit, einem Dienst einen ASP.NET AJAX-Endpunkt ohne erforderliche Konfiguration hinzuzufügen. Der Endpunkt wird allen anderen in der Konfiguration definierten Endpunkten hinzugefügt, sofern vorhanden. Bei den verwalteten Hostumgebungen, die diese Art der dynamischen Hostaktivierung unterstützen, handelt es sich um Internet Information Services (IIS) und Windows Process Activation Services (WAS).  
  
 Um diese Factory zu verwenden, geben Sie die <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> im `Factory`-Attribut der [@ServiceHost](/dotnet/framework/configure-apps/file-schema/wcf-directive/servicehost) -Direktive an.  
  
 Der durch diese Factory erstellte ASP.NET AJAX-Endpunkt wird mit der <xref:System.ServiceModel.WebHttpBinding> und der <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> mit allen Standardeinstellungen konfiguriert. Der Endpunkt wird relativ zur SVC-Datei an einer leeren Adresse erstellt. Definiert die Dienstkonfiguration bereits einen Endpunkt an dieser Adresse, wird eine <xref:System.InvalidOperationException> ausgelöst, und der Dienst kann nicht gestartet werden.  
  
   
  
## Examples  
 Geben Sie die <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> für den Wert des `Factory`-Attributs in der [@ServiceHost](/dotnet/framework/configure-apps/file-schema/wcf-directive/servicehost) -Direktive an, um einen ASP.NET AJAX-Endpunkt für den `MyService`-Dienst zu aktivieren, wie im folgenden Beispiel gezeigt.  
  
```  
<% @ServiceHost   
Service="MyService"  
Language="C#"  
Debug="true"  
Factory="WebScriptServiceHostFactory"  
%>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebScriptServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebScriptServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise wird dieser Konstruktor automatisch von Windows Communication Foundation (WCF) als Teil der Dienst Aktivierung aufgerufen. es ist nicht erforderlich, diese Methode manuell aufzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateServiceHost (serviceType As Type, baseAddresses As Uri()) As ServiceHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::ServiceHost ^ CreateServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.CreateServiceHost : Type * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="webScriptServiceHostFactory.CreateServiceHost (serviceType, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">Der Typ des zu hostenden Dienstes.</param>
        <param name="baseAddresses">Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.Uri" />, das die Basisadressen für den gehosteten Dienst enthält.</param>
        <summary>Erstellt eine abgeleitete Klasse von <see cref="T:System.ServiceModel.ServiceHost" /> für einen angegebenen Diensttyp mit einer bestimmten Basisadresse, die verwendet werden kann, um ASP.NET AJAX-Endpunkte in bestimmten Szenarios automatisch zu aktivieren.</summary>
        <returns>Ein <see cref="T:System.ServiceModel.ServiceHost" /> für den mit der angegebenen Basisadresse angegebenen Diensttyp.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise wird diese Methode automatisch von Windows Communication Foundation (WCF) als Teil der Dienst Aktivierung aufgerufen. es ist nicht erforderlich, diese Methode manuell aufzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ein anderer Dienst verwendet dieselbe Basisadresse, oder ein anderer Endpunkt verwendet dieselbe Adresse wie der ASP.NET AJAX-Endpunkt, den diese Factory zu erstellen versucht.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
