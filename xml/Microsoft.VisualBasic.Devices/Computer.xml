<Type Name="Computer" FullName="Microsoft.VisualBasic.Devices.Computer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce7524d10be1adf5dff34307cbaec96df7aeba9f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69319146" /></Metadata><TypeSignature Language="C#" Value="public class Computer : Microsoft.VisualBasic.Devices.ServerComputer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Computer extends Microsoft.VisualBasic.Devices.ServerComputer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Computer" />
  <TypeSignature Language="VB.NET" Value="Public Class Computer&#xA;Inherits ServerComputer" />
  <TypeSignature Language="C++ CLI" Value="public ref class Computer : Microsoft::VisualBasic::Devices::ServerComputer" />
  <TypeSignature Language="F#" Value="type Computer = class&#xA;    inherit ServerComputer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Devices.ServerComputer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Eigenschaften für die Bearbeitung von Computerkomponenten bereit, z.B. Audio, die Uhr, die Tastatur, das Dateisystem und so weiter.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften, die vom `My.Computer` -Objekt verfügbar gemacht werden, geben Informationen zum Computer, auf dem die Anwendung bereitgestellt wird, zur Laufzeit zurück. In der Regel unterscheiden sich diese Daten von den auf dem Entwicklungs Computer verfügbaren Daten.  
  
 Einige Member, z. b `My.Computer.Audio` . das-Objekt, sind nur für nicht-Server Anwendungen verfügbar.  
  
 In der folgenden Tabelle sind Beispiele für Aufgaben aufgeführt `My.Computer` , die das-Objekt betreffen.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Verbindungsstatus überprüfen|[Gewusst wie: Überprüfen des Verbindungsstatus](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Registrierungsschlüssel erstellen|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Zugreifen auf die Zwischenablage|[Speichern von Daten in der Zwischenablage und Lesen von Daten aus der Zwischenablage](~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird `My.Computer.Name` die-Eigenschaft verwendet, um den Namen des Computers anzuzeigen, auf dem der Code ausgeführt wird.  
  
 [!code-vb[VbVbalrMyComputer#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Audio" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Clock" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.FileSystemProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Keyboard" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Mouse" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Ports" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Computer ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Computer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Computer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Computer" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [Objekte](~/docs/visual-basic/language-reference/objects/index.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Audio">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Audio Audio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Audio Audio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Audio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Audio As Audio" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Audio ^ Audio { Microsoft::VisualBasic::Devices::Audio ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Audio : Microsoft.VisualBasic.Devices.Audio" Usage="Microsoft.VisualBasic.Devices.Computer.Audio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Audio</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das Eigenschaften für Methoden bereitstellt, die Sounds wiedergeben.</summary>
        <value>Das <see langword="My.Computer.Audio" />-Objekt für den Computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht den einfachen Zugriff auf `My.Computer.Audio` das-Objekt. Weitere Informationen finden <xref:Microsoft.VisualBasic.Devices.Audio> Sie unter Object.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuer Element Bibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Die `My.Computer.Audio.Play` -Methode gibt den angegebenen Sound im Hintergrund wieder `AudioPlayMode.Background` , wenn angegeben wird.  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 Dieser Code kann nur innerhalb einer Windows Forms Anwendung ausgeführt werden.  
  
 Der Dateiname sollte auf eine WAV-Sounddatei auf Ihrem System verweisen.  
  
 Um die Verwaltung Ihrer Audiodateien zu vereinfachen, sollten Sie die Dateien als Anwendungs Ressourcen speichern. Auf die Dateien kann dann über das `My.Resources` -Objekt zugegriffen werden. Weitere Informationen finden Sie unter [My. Resources-Objekt](~/docs/visual-basic/language-reference/objects/my-resources-object.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Audio" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Clipboard">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.MyServices.ClipboardProxy Clipboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.MyServices.ClipboardProxy Clipboard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Clipboard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clipboard As ClipboardProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::MyServices::ClipboardProxy ^ Clipboard { Microsoft::VisualBasic::MyServices::ClipboardProxy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clipboard : Microsoft.VisualBasic.MyServices.ClipboardProxy" Usage="Microsoft.VisualBasic.Devices.Computer.Clipboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MyServices.ClipboardProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das Methoden zum Bearbeiten der Zwischenablage bereitstellt.</summary>
        <value>Das <see langword="My.Computer.Clipboard" />-Objekt für den Computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht den einfachen Zugriff auf <xref:Microsoft.VisualBasic.MyServices.ClipboardProxy> das-Objekt.  
  
 Diese Eigenschaft ist nur für nicht-Server Anwendungen verfügbar.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuer Element Bibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird Text aus der Zwischenablage in `textOnClipboard`die-Zeichenfolge gelesen.  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 In diesem Beispiel tritt ein Fehler auf, wenn in der Zwischenablage kein Text vorhanden ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Speichern von Daten in der Zwischenablage und Lesen der Zwischenablage</related>
      </Docs>
    </Member>
    <Member MemberName="Keyboard">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Keyboard Keyboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Keyboard Keyboard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Keyboard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keyboard As Keyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Keyboard ^ Keyboard { Microsoft::VisualBasic::Devices::Keyboard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keyboard : Microsoft.VisualBasic.Devices.Keyboard" Usage="Microsoft.VisualBasic.Devices.Computer.Keyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Keyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das Eigenschaften für den Zugriff auf den aktuellen Tastaturzustand (z. B. Informationen über die derzeit gedrückten Tasten) und eine Methode zum Senden von Tastaturanschlägen an das aktive Fenster bereitstellt.</summary>
        <value>Das <see langword="My.Computer.Keyboard" />-Objekt für den Computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht den einfachen Zugriff auf `My.Computer.Keyboard` das-Objekt. Weitere Informationen finden <xref:Microsoft.VisualBasic.Devices.Keyboard> Sie unter Object.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuer Element Bibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird `My.Computer.Keyboard.CtrlKeyDown` die-Eigenschaft verwendet, um zu bestimmen, ob die STRG-Taste des Computers aktuell gedrückt ist.  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Keyboard" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Mouse">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Mouse Mouse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Mouse Mouse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Mouse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mouse As Mouse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Mouse ^ Mouse { Microsoft::VisualBasic::Devices::Mouse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mouse : Microsoft.VisualBasic.Devices.Mouse" Usage="Microsoft.VisualBasic.Devices.Computer.Mouse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Mouse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das Eigenschaften zum Abrufen von Informationen über das Format und die Konfiguration der auf dem lokalen Computer installierten Maus bereitstellt.</summary>
        <value>Das <see langword="My.Computer.Mouse" />-Objekt für den Computer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht den einfachen Zugriff auf `My.Computer.Mouse` das-Objekt. Weitere Informationen finden <xref:Microsoft.VisualBasic.Devices.Mouse> Sie unter Object.  
  
 Diese Eigenschaft ist nur für nicht-Server Anwendungen verfügbar.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuer Element Bibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel werden `My.Computer.Mouse.WheelExists` die `My.Computer.Mouse.WheelScrollLines` -Eigenschaft und die-Eigenschaft verwendet, um zu bestimmen, ob die Maus über ein Mausrad verfügt und wie viel beim Drehen des Bildlaufs  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Mouse" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ports">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Ports Ports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Ports Ports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Ports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ports As Ports" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Ports ^ Ports { Microsoft::VisualBasic::Devices::Ports ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ports : Microsoft.VisualBasic.Devices.Ports" Usage="Microsoft.VisualBasic.Devices.Computer.Ports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Ports</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das eine Eigenschaft und eine Methode zum Zugreifen auf die seriellen Anschlüsse des Computers bereitstellt.</summary>
        <value>Das <see langword="My.Computer.Ports" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht den einfachen Zugriff auf `My.Computer.Ports` das-Objekt. Weitere Informationen finden <xref:Microsoft.VisualBasic.Devices.Ports> Sie unter Object.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuer Element Bibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie Zeichen folgen an den `COM1` seriellen Anschluss des Computers gesendet werden.  
  
 Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird. Sämtlicher Code, der den seriellen Anschluss bearbeitet, sollte in diesem Block oder in einem `Try...Catch...Finally` -Block mit einem-Befehl, <xref:System.IO.Ports.SerialPort.Close%2A> der die-Methode verwendet, angezeigt werden.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter [Vorgehensweise: Senden von Zeichen folgen an](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)serielle Anschlüsse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Ports" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Screen">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Screen Screen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Screen Screen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Screen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Screen As Screen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Screen ^ Screen { System::Windows::Forms::Screen ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Screen : System.Windows.Forms.Screen" Usage="Microsoft.VisualBasic.Devices.Computer.Screen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Screen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Forms.Screen" />-Objekt ab, das den primären Bildschirm des Computers darstellt.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.Screen" />-Objekt, das den primären Bildschirm des Computers darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Screen` -Eigenschaft stellt ähnliche Funktionen wie <xref:System.Windows.Forms.Screen.PrimaryScreen%2A> die-Eigenschaft bereit.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|------------------|---------------|  
|Windows Forms-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows Forms-Steuerelementbibliothek|**Ja**|  
|Websteuer Element Bibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird <xref:System.Windows.Forms.Screen.WorkingArea%2A> die-Eigenschaft `My.Computer.Screen` der-Eigenschaft verwendet, um den Arbeitsbereich der primären Anzeige des Computers zu bestimmen und dann die Größe des Formulars zu ändern, um den Arbeitsbereich auszufüllen.  
  
 [!code-vb[VbVbalrMyComputer#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#10)]  
  
 Dieses Beispiel muss in einer Windows Forms Anwendung ausgeführt werden.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Windows.Forms.Screen" />
        <altmember cref="P:System.Windows.Forms.Screen.PrimaryScreen" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
