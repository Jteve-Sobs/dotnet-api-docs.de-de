<Type Name="Ports" FullName="Microsoft.VisualBasic.Devices.Ports">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d60e67c7c1c5b539f50c7c73592dcec4ab326b5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36727400" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Ports" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ports extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Ports" />
  <TypeSignature Language="VB.NET" Value="Public Class Ports" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ports" />
  <TypeSignature Language="F#" Value="type Ports = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bea80-101">Stellt eine Eigenschaft und eine Methode bereit, mit deren Hilfe Sie auf die seriellen Anschlüsse eines Computer zugreifen können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bea80-101">Provides a property and a method for accessing the computer's serial ports.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea80-102">Die `My.Computer.Ports` Objekt stellt einen einfachen Einstiegspunkt für den Zugriff auf die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] seriellen Anschluss-Klasse, <xref:System.IO.Ports.SerialPort>.</span><span class="sxs-lookup"><span data-stu-id="bea80-102">The `My.Computer.Ports` object provides a straightforward entry point for accessing the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] serial port class, <xref:System.IO.Ports.SerialPort>.</span></span>  
  
 <span data-ttu-id="bea80-103">Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports` Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-103">The following table lists examples of tasks involving the `My.Computer.Ports` object.</span></span>  
  
|<span data-ttu-id="bea80-104">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="bea80-104">To</span></span>|<span data-ttu-id="bea80-105">Siehe</span><span class="sxs-lookup"><span data-stu-id="bea80-105">See</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-106">Wählen Sie ein Modem mit einem seriellen Anschluss verbunden</span><span class="sxs-lookup"><span data-stu-id="bea80-106">Dial a modem attached to a serial port</span></span>|[<span data-ttu-id="bea80-107">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-107">How to: Dial Modems Attached to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|<span data-ttu-id="bea80-108">Senden Sie eine Zeichenfolge in einen seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-108">Send a string to a serial port</span></span>|[<span data-ttu-id="bea80-109">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-109">How to: Send Strings to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|<span data-ttu-id="bea80-110">Empfangen von Zeichenfolgen von einem seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-110">Receive strings from a serial port</span></span>|[<span data-ttu-id="bea80-111">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-111">How to: Receive Strings From Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
|<span data-ttu-id="bea80-112">Anzeigen von verfügbaren seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-112">Show available serial ports</span></span>|[<span data-ttu-id="bea80-113">Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-113">How to: Show Available Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="bea80-114">Verfügbarkeit nach Projekttyp</span><span class="sxs-lookup"><span data-stu-id="bea80-114">Availability by Project Type</span></span>  
  
|<span data-ttu-id="bea80-115">Projekttyp:</span><span class="sxs-lookup"><span data-stu-id="bea80-115">Project type</span></span>|<span data-ttu-id="bea80-116">Verfügbar</span><span class="sxs-lookup"><span data-stu-id="bea80-116">Available</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-117">Windows-Anwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-117">Windows Application</span></span>|<span data-ttu-id="bea80-118">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-118">**Yes**</span></span>|  
|<span data-ttu-id="bea80-119">Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-119">Class Library</span></span>|<span data-ttu-id="bea80-120">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-120">**Yes**</span></span>|  
|<span data-ttu-id="bea80-121">Konsolenanwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-121">Console Application</span></span>|<span data-ttu-id="bea80-122">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-122">**Yes**</span></span>|  
|<span data-ttu-id="bea80-123">Windows-Steuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-123">Windows Control Library</span></span>|<span data-ttu-id="bea80-124">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-124">**Yes**</span></span>|  
|<span data-ttu-id="bea80-125">Websteuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-125">Web Control Library</span></span>|<span data-ttu-id="bea80-126">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-126">No</span></span>|  
|<span data-ttu-id="bea80-127">Windows-Dienst</span><span class="sxs-lookup"><span data-stu-id="bea80-127">Windows Service</span></span>|<span data-ttu-id="bea80-128">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-128">**Yes**</span></span>|  
|<span data-ttu-id="bea80-129">Website</span><span class="sxs-lookup"><span data-stu-id="bea80-129">Web Site</span></span>|<span data-ttu-id="bea80-130">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-130">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bea80-131">In diesem Beispiel wird beschrieben, wie Zeichenfolgen an des Computers senden `COM1` seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-131">This example describes how to send strings to the computer's `COM1` serial port.</span></span>  
  
 <span data-ttu-id="bea80-132">Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird.</span><span class="sxs-lookup"><span data-stu-id="bea80-132">The `Using` block allows the application to close the serial port even if it generates an exception.</span></span> <span data-ttu-id="bea80-133">Der gesamte Code, der den seriellen Anschluss ändert sollte angezeigt werden, innerhalb dieses Blocks oder innerhalb einer `Try...Catch...Finally` Block mit einem Aufruf von verwenden die <xref:System.IO.Ports.SerialPort.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-133">All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.</span></span>  
  
 <span data-ttu-id="bea80-134">Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-134">The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 <span data-ttu-id="bea80-135">Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span><span class="sxs-lookup"><span data-stu-id="bea80-135">For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ports ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ports();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bea80-136">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Ports" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-136">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Ports" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSerialPort">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bea80-137">Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-137">Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort portName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">
          <span data-ttu-id="bea80-138">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-138">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="bea80-139">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-139">Required.</span>
          </span>
          <span data-ttu-id="bea80-140">Der Name des zu öffnenden Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-140">Name of the port to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bea80-141">Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-141">Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bea80-142">Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-142">An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea80-143">Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-143">The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object.</span></span> <span data-ttu-id="bea80-144">Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-144">The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.</span></span>  
  
 <span data-ttu-id="bea80-145">Der Code sollte schließen die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts.</span><span class="sxs-lookup"><span data-stu-id="bea80-145">Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object.</span></span> <span data-ttu-id="bea80-146">Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bea80-146">You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly.</span></span> <span data-ttu-id="bea80-147">Siehe das Beispiel in diesem Thema für Weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="bea80-147">See the example in this topic for more information.</span></span>  
  
 <span data-ttu-id="bea80-148">Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-148">The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.</span></span>  
  
|<span data-ttu-id="bea80-149">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="bea80-149">To</span></span>|<span data-ttu-id="bea80-150">Siehe</span><span class="sxs-lookup"><span data-stu-id="bea80-150">See</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-151">Wählen Sie ein Modem mit einem seriellen Anschluss verbunden</span><span class="sxs-lookup"><span data-stu-id="bea80-151">Dial a modem attached to a serial port</span></span>|[<span data-ttu-id="bea80-152">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-152">How to: Dial Modems Attached to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|<span data-ttu-id="bea80-153">Senden einer Zeichenfolge an den seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-153">Send a string to serial port</span></span>|[<span data-ttu-id="bea80-154">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-154">How to: Send Strings to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|<span data-ttu-id="bea80-155">Empfangen von Zeichenfolgen von einem seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-155">Receive strings from a serial port</span></span>|[<span data-ttu-id="bea80-156">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-156">How to: Receive Strings From Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="bea80-157">Verfügbarkeit nach Projekttyp</span><span class="sxs-lookup"><span data-stu-id="bea80-157">Availability by Project Type</span></span>  
  
|<span data-ttu-id="bea80-158">Projekttyp:</span><span class="sxs-lookup"><span data-stu-id="bea80-158">Project type</span></span>|<span data-ttu-id="bea80-159">Verfügbar</span><span class="sxs-lookup"><span data-stu-id="bea80-159">Available</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-160">Windows-Anwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-160">Windows Application</span></span>|<span data-ttu-id="bea80-161">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-161">**Yes**</span></span>|  
|<span data-ttu-id="bea80-162">Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-162">Class Library</span></span>|<span data-ttu-id="bea80-163">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-163">**Yes**</span></span>|  
|<span data-ttu-id="bea80-164">Konsolenanwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-164">Console Application</span></span>|<span data-ttu-id="bea80-165">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-165">**Yes**</span></span>|  
|<span data-ttu-id="bea80-166">Windows-Steuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-166">Windows Control Library</span></span>|<span data-ttu-id="bea80-167">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-167">**Yes**</span></span>|  
|<span data-ttu-id="bea80-168">Websteuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-168">Web Control Library</span></span>|<span data-ttu-id="bea80-169">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-169">No</span></span>|  
|<span data-ttu-id="bea80-170">Windows-Dienst</span><span class="sxs-lookup"><span data-stu-id="bea80-170">Windows Service</span></span>|<span data-ttu-id="bea80-171">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-171">**Yes**</span></span>|  
|<span data-ttu-id="bea80-172">Website</span><span class="sxs-lookup"><span data-stu-id="bea80-172">Web Site</span></span>|<span data-ttu-id="bea80-173">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-173">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bea80-174">In diesem Beispiel wird beschrieben, wie Zeichenfolgen an des Computers senden `COM1` seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-174">This example describes how to send strings to the computer's `COM1` serial port.</span></span>  
  
 <span data-ttu-id="bea80-175">Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird.</span><span class="sxs-lookup"><span data-stu-id="bea80-175">The `Using` block allows the application to close the serial port even if it generates an exception.</span></span> <span data-ttu-id="bea80-176">Der gesamte Code, der den seriellen Anschluss ändert sollte angezeigt werden, innerhalb dieses Blocks oder innerhalb einer `Try...Catch...Finally` Block mit einem Aufruf von verwenden die <xref:System.IO.Ports.SerialPort.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-176">All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.</span></span>  
  
 <span data-ttu-id="bea80-177">Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-177">The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 <span data-ttu-id="bea80-178">Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span><span class="sxs-lookup"><span data-stu-id="bea80-178">For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea80-179">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-179">
              <paramref name="portName" /> is <see langword="Nothing" /> or an empty string.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">
          <span data-ttu-id="bea80-180">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-180">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="bea80-181">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-181">Required.</span>
          </span>
          <span data-ttu-id="bea80-182">Der Name des zu öffnenden Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-182">Name of the port to open.</span>
          </span>
        </param>
        <param name="baudRate">
          <span data-ttu-id="bea80-183">
            <see langword="Integer" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-183">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="bea80-184">Baudrate des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-184">Baud rate of the port.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bea80-185">Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-185">Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bea80-186">Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-186">An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea80-187">Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-187">The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object.</span></span> <span data-ttu-id="bea80-188">Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-188">The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.</span></span>  
  
 <span data-ttu-id="bea80-189">Der Code sollte schließen die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts.</span><span class="sxs-lookup"><span data-stu-id="bea80-189">Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object.</span></span> <span data-ttu-id="bea80-190">Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bea80-190">You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly.</span></span> <span data-ttu-id="bea80-191">Siehe das Beispiel in diesem Thema für Weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="bea80-191">See the example in this topic for more information.</span></span>  
  
 <span data-ttu-id="bea80-192">Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-192">The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.</span></span>  
  
|<span data-ttu-id="bea80-193">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="bea80-193">To</span></span>|<span data-ttu-id="bea80-194">Siehe</span><span class="sxs-lookup"><span data-stu-id="bea80-194">See</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-195">Wählen Sie ein Modem mit einem seriellen Anschluss verbunden</span><span class="sxs-lookup"><span data-stu-id="bea80-195">Dial a modem attached to a serial port</span></span>|[<span data-ttu-id="bea80-196">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-196">How to: Dial Modems Attached to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|<span data-ttu-id="bea80-197">Senden einer Zeichenfolge an den seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-197">Send a string to serial port</span></span>|[<span data-ttu-id="bea80-198">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-198">How to: Send Strings to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|<span data-ttu-id="bea80-199">Empfangen von Zeichenfolgen von einem seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-199">Receive strings from a serial port</span></span>|[<span data-ttu-id="bea80-200">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-200">How to: Receive Strings From Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="bea80-201">Verfügbarkeit nach Projekttyp</span><span class="sxs-lookup"><span data-stu-id="bea80-201">Availability by Project Type</span></span>  
  
|<span data-ttu-id="bea80-202">Projekttyp:</span><span class="sxs-lookup"><span data-stu-id="bea80-202">Project type</span></span>|<span data-ttu-id="bea80-203">Verfügbar</span><span class="sxs-lookup"><span data-stu-id="bea80-203">Available</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-204">Windows-Anwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-204">Windows Application</span></span>|<span data-ttu-id="bea80-205">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-205">**Yes**</span></span>|  
|<span data-ttu-id="bea80-206">Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-206">Class Library</span></span>|<span data-ttu-id="bea80-207">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-207">**Yes**</span></span>|  
|<span data-ttu-id="bea80-208">Konsolenanwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-208">Console Application</span></span>|<span data-ttu-id="bea80-209">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-209">**Yes**</span></span>|  
|<span data-ttu-id="bea80-210">Windows-Steuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-210">Windows Control Library</span></span>|<span data-ttu-id="bea80-211">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-211">**Yes**</span></span>|  
|<span data-ttu-id="bea80-212">Websteuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-212">Web Control Library</span></span>|<span data-ttu-id="bea80-213">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-213">No</span></span>|  
|<span data-ttu-id="bea80-214">Windows-Dienst</span><span class="sxs-lookup"><span data-stu-id="bea80-214">Windows Service</span></span>|<span data-ttu-id="bea80-215">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-215">**Yes**</span></span>|  
|<span data-ttu-id="bea80-216">Website</span><span class="sxs-lookup"><span data-stu-id="bea80-216">Web Site</span></span>|<span data-ttu-id="bea80-217">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-217">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bea80-218">In diesem Beispiel wird beschrieben, wie Zeichenfolgen an des Computers senden `COM1` seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-218">This example describes how to send strings to the computer's `COM1` serial port.</span></span>  
  
 <span data-ttu-id="bea80-219">Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird.</span><span class="sxs-lookup"><span data-stu-id="bea80-219">The `Using` block allows the application to close the serial port even if it generates an exception.</span></span> <span data-ttu-id="bea80-220">Der gesamte Code, der den seriellen Anschluss ändert sollte angezeigt werden, innerhalb dieses Blocks oder innerhalb einer `Try...Catch...Finally` Block mit einem Aufruf von verwenden die <xref:System.IO.Ports.SerialPort.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-220">All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.</span></span>  
  
 <span data-ttu-id="bea80-221">Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-221">The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 <span data-ttu-id="bea80-222">Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span><span class="sxs-lookup"><span data-stu-id="bea80-222">For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea80-223">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-223">
              <paramref name="portName" /> is <see langword="Nothing" /> or an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bea80-224">
            <paramref name="baudRate" /> ist kleiner gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-224">
              <paramref name="baudRate" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName">
          <span data-ttu-id="bea80-225">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-225">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="bea80-226">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-226">Required.</span>
          </span>
          <span data-ttu-id="bea80-227">Der Name des zu öffnenden Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-227">Name of the port to open.</span>
          </span>
        </param>
        <param name="baudRate">
          <span data-ttu-id="bea80-228">
            <see langword="Integer" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-228">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="bea80-229">Baudrate des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-229">Baud rate of the port.</span>
          </span>
        </param>
        <param name="parity">
          <span data-ttu-id="bea80-230">
            <see cref="T:System.IO.Ports.Parity" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-230">
              <see cref="T:System.IO.Ports.Parity" />.</span>
          </span>
          <span data-ttu-id="bea80-231">Parität des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-231">Parity of the port.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bea80-232">Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-232">Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bea80-233">Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-233">An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea80-234">Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-234">The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object.</span></span> <span data-ttu-id="bea80-235">Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-235">The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.</span></span>  
  
 <span data-ttu-id="bea80-236">Der Code sollte schließen die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts.</span><span class="sxs-lookup"><span data-stu-id="bea80-236">Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object.</span></span> <span data-ttu-id="bea80-237">Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bea80-237">You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly.</span></span> <span data-ttu-id="bea80-238">Siehe das Beispiel in diesem Thema für Weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="bea80-238">See the example in this topic for more information.</span></span>  
  
 <span data-ttu-id="bea80-239">Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-239">The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.</span></span>  
  
|<span data-ttu-id="bea80-240">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="bea80-240">To</span></span>|<span data-ttu-id="bea80-241">Siehe</span><span class="sxs-lookup"><span data-stu-id="bea80-241">See</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-242">Wählen Sie ein Modem mit einem seriellen Anschluss verbunden</span><span class="sxs-lookup"><span data-stu-id="bea80-242">Dial a modem attached to a serial port</span></span>|[<span data-ttu-id="bea80-243">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-243">How to: Dial Modems Attached to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|<span data-ttu-id="bea80-244">Senden einer Zeichenfolge an den seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-244">Send a string to serial port</span></span>|[<span data-ttu-id="bea80-245">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-245">How to: Send Strings to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|<span data-ttu-id="bea80-246">Empfangen von Zeichenfolgen von einem seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-246">Receive strings from a serial port</span></span>|[<span data-ttu-id="bea80-247">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-247">How to: Receive Strings From Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="bea80-248">Verfügbarkeit nach Projekttyp</span><span class="sxs-lookup"><span data-stu-id="bea80-248">Availability by Project Type</span></span>  
  
|<span data-ttu-id="bea80-249">Projekttyp:</span><span class="sxs-lookup"><span data-stu-id="bea80-249">Project type</span></span>|<span data-ttu-id="bea80-250">Verfügbar</span><span class="sxs-lookup"><span data-stu-id="bea80-250">Available</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-251">Windows-Anwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-251">Windows Application</span></span>|<span data-ttu-id="bea80-252">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-252">**Yes**</span></span>|  
|<span data-ttu-id="bea80-253">Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-253">Class Library</span></span>|<span data-ttu-id="bea80-254">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-254">**Yes**</span></span>|  
|<span data-ttu-id="bea80-255">Konsolenanwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-255">Console Application</span></span>|<span data-ttu-id="bea80-256">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-256">**Yes**</span></span>|  
|<span data-ttu-id="bea80-257">Windows-Steuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-257">Windows Control Library</span></span>|<span data-ttu-id="bea80-258">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-258">**Yes**</span></span>|  
|<span data-ttu-id="bea80-259">Websteuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-259">Web Control Library</span></span>|<span data-ttu-id="bea80-260">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-260">No</span></span>|  
|<span data-ttu-id="bea80-261">Windows-Dienst</span><span class="sxs-lookup"><span data-stu-id="bea80-261">Windows Service</span></span>|<span data-ttu-id="bea80-262">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-262">**Yes**</span></span>|  
|<span data-ttu-id="bea80-263">Website</span><span class="sxs-lookup"><span data-stu-id="bea80-263">Web Site</span></span>|<span data-ttu-id="bea80-264">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-264">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bea80-265">In diesem Beispiel wird beschrieben, wie Zeichenfolgen an des Computers senden `COM1` seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-265">This example describes how to send strings to the computer's `COM1` serial port.</span></span>  
  
 <span data-ttu-id="bea80-266">Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird.</span><span class="sxs-lookup"><span data-stu-id="bea80-266">The `Using` block allows the application to close the serial port even if it generates an exception.</span></span> <span data-ttu-id="bea80-267">Der gesamte Code, der den seriellen Anschluss ändert sollte angezeigt werden, innerhalb dieses Blocks oder innerhalb einer `Try...Catch...Finally` Block mit einem Aufruf von verwenden die <xref:System.IO.Ports.SerialPort.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-267">All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.</span></span>  
  
 <span data-ttu-id="bea80-268">Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-268">The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 <span data-ttu-id="bea80-269">Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span><span class="sxs-lookup"><span data-stu-id="bea80-269">For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea80-270">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-270">
              <paramref name="portName" /> is <see langword="Nothing" /> or an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bea80-271">
            <paramref name="baudRate" /> ist kleiner gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-271">
              <paramref name="baudRate" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="bea80-272">
            <paramref name="parity" /> ist keiner der <see cref="T:System.IO.Ports.Parity" />-Enumerationswerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-272">
              <paramref name="parity" /> is not one of the <see cref="T:System.IO.Ports.Parity" /> enumeration values.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">
          <span data-ttu-id="bea80-273">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-273">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="bea80-274">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-274">Required.</span>
          </span>
          <span data-ttu-id="bea80-275">Der Name des zu öffnenden Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-275">Name of the port to open.</span>
          </span>
        </param>
        <param name="baudRate">
          <span data-ttu-id="bea80-276">
            <see langword="Integer" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-276">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="bea80-277">Baudrate des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-277">Baud rate of the port.</span>
          </span>
        </param>
        <param name="parity">
          <span data-ttu-id="bea80-278">
            <see cref="T:System.IO.Ports.Parity" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-278">
              <see cref="T:System.IO.Ports.Parity" />.</span>
          </span>
          <span data-ttu-id="bea80-279">Parität des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-279">Parity of the port.</span>
          </span>
        </param>
        <param name="dataBits">
          <span data-ttu-id="bea80-280">
            <see langword="Integer" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-280">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="bea80-281">Datenbiteinstellung des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-281">Data-bit setting of the port.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bea80-282">Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-282">Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bea80-283">Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-283">An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea80-284">Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-284">The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object.</span></span> <span data-ttu-id="bea80-285">Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-285">The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.</span></span>  
  
 <span data-ttu-id="bea80-286">Der Code sollte schließen die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts.</span><span class="sxs-lookup"><span data-stu-id="bea80-286">Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object.</span></span> <span data-ttu-id="bea80-287">Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bea80-287">You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly.</span></span> <span data-ttu-id="bea80-288">Siehe das Beispiel in diesem Thema für Weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="bea80-288">See the example in this topic for more information.</span></span>  
  
 <span data-ttu-id="bea80-289">Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-289">The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.</span></span>  
  
|<span data-ttu-id="bea80-290">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="bea80-290">To</span></span>|<span data-ttu-id="bea80-291">Siehe</span><span class="sxs-lookup"><span data-stu-id="bea80-291">See</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-292">Wählen Sie ein Modem mit einem seriellen Anschluss verbunden</span><span class="sxs-lookup"><span data-stu-id="bea80-292">Dial a modem attached to a serial port</span></span>|[<span data-ttu-id="bea80-293">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-293">How to: Dial Modems Attached to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|<span data-ttu-id="bea80-294">Senden einer Zeichenfolge an den seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-294">Send a string to serial port</span></span>|[<span data-ttu-id="bea80-295">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-295">How to: Send Strings to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|<span data-ttu-id="bea80-296">Empfangen von Zeichenfolgen von einem seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-296">Receive strings from a serial port</span></span>|[<span data-ttu-id="bea80-297">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-297">How to: Receive Strings From Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="bea80-298">Verfügbarkeit nach Projekttyp</span><span class="sxs-lookup"><span data-stu-id="bea80-298">Availability by Project Type</span></span>  
  
|<span data-ttu-id="bea80-299">Projekttyp:</span><span class="sxs-lookup"><span data-stu-id="bea80-299">Project type</span></span>|<span data-ttu-id="bea80-300">Verfügbar</span><span class="sxs-lookup"><span data-stu-id="bea80-300">Available</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-301">Windows-Anwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-301">Windows Application</span></span>|<span data-ttu-id="bea80-302">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-302">**Yes**</span></span>|  
|<span data-ttu-id="bea80-303">Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-303">Class Library</span></span>|<span data-ttu-id="bea80-304">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-304">**Yes**</span></span>|  
|<span data-ttu-id="bea80-305">Konsolenanwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-305">Console Application</span></span>|<span data-ttu-id="bea80-306">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-306">**Yes**</span></span>|  
|<span data-ttu-id="bea80-307">Windows-Steuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-307">Windows Control Library</span></span>|<span data-ttu-id="bea80-308">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-308">**Yes**</span></span>|  
|<span data-ttu-id="bea80-309">Websteuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-309">Web Control Library</span></span>|<span data-ttu-id="bea80-310">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-310">No</span></span>|  
|<span data-ttu-id="bea80-311">Windows-Dienst</span><span class="sxs-lookup"><span data-stu-id="bea80-311">Windows Service</span></span>|<span data-ttu-id="bea80-312">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-312">**Yes**</span></span>|  
|<span data-ttu-id="bea80-313">Website</span><span class="sxs-lookup"><span data-stu-id="bea80-313">Web Site</span></span>|<span data-ttu-id="bea80-314">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-314">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bea80-315">In diesem Beispiel wird beschrieben, wie Zeichenfolgen an des Computers senden `COM1` seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-315">This example describes how to send strings to the computer's `COM1` serial port.</span></span>  
  
 <span data-ttu-id="bea80-316">Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird.</span><span class="sxs-lookup"><span data-stu-id="bea80-316">The `Using` block allows the application to close the serial port even if it generates an exception.</span></span> <span data-ttu-id="bea80-317">Der gesamte Code, der den seriellen Anschluss ändert sollte angezeigt werden, innerhalb dieses Blocks oder innerhalb einer `Try...Catch...Finally` Block mit einem Aufruf von verwenden die <xref:System.IO.Ports.SerialPort.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-317">All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.</span></span>  
  
 <span data-ttu-id="bea80-318">Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-318">The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 <span data-ttu-id="bea80-319">Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span><span class="sxs-lookup"><span data-stu-id="bea80-319">For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea80-320">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-320">
              <paramref name="portName" /> is <see langword="Nothing" /> or an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bea80-321">
            <paramref name="dataBits" /> ist kleiner gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-321">
              <paramref name="dataBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="bea80-322">
            <paramref name="parity" /> ist keiner der <see cref="T:System.IO.Ports.Parity" />-Enumerationswerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-322">
              <paramref name="parity" /> is not one of the <see cref="T:System.IO.Ports.Parity" /> enumeration values.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName">
          <span data-ttu-id="bea80-323">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-323">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="bea80-324">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-324">Required.</span>
          </span>
          <span data-ttu-id="bea80-325">Der Name des zu öffnenden Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-325">Name of the port to open.</span>
          </span>
        </param>
        <param name="baudRate">
          <span data-ttu-id="bea80-326">
            <see langword="Integer" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-326">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="bea80-327">Baudrate des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-327">Baud rate of the port.</span>
          </span>
        </param>
        <param name="parity">
          <span data-ttu-id="bea80-328">
            <see cref="T:System.IO.Ports.Parity" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-328">
              <see cref="T:System.IO.Ports.Parity" />.</span>
          </span>
          <span data-ttu-id="bea80-329">Parität des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-329">Parity of the port.</span>
          </span>
        </param>
        <param name="dataBits">
          <span data-ttu-id="bea80-330">
            <see langword="Integer" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-330">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="bea80-331">Datenbiteinstellung des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-331">Data-bit setting of the port.</span>
          </span>
        </param>
        <param name="stopBits">
          <span data-ttu-id="bea80-332">
            <see cref="T:System.IO.Ports.StopBits" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-332">
              <see cref="T:System.IO.Ports.StopBits" />.</span>
          </span>
          <span data-ttu-id="bea80-333">Stoppbiteinstellung des Anschlusses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-333">Stop-bit setting of the port.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bea80-334">Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-334">Creates and opens a <see cref="T:System.IO.Ports.SerialPort" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bea80-335">Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-335">An open <see cref="T:System.IO.Ports.SerialPort" /> object, configured with the supplied arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea80-336">Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-336">The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object.</span></span> <span data-ttu-id="bea80-337">Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.</span><span class="sxs-lookup"><span data-stu-id="bea80-337">The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.</span></span>  
  
 <span data-ttu-id="bea80-338">Der Code sollte schließen die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts.</span><span class="sxs-lookup"><span data-stu-id="bea80-338">Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object.</span></span> <span data-ttu-id="bea80-339">Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen.</span><span class="sxs-lookup"><span data-stu-id="bea80-339">You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly.</span></span> <span data-ttu-id="bea80-340">Siehe das Beispiel in diesem Thema für Weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="bea80-340">See the example in this topic for more information.</span></span>  
  
 <span data-ttu-id="bea80-341">Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-341">The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.</span></span>  
  
|<span data-ttu-id="bea80-342">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="bea80-342">To</span></span>|<span data-ttu-id="bea80-343">Siehe</span><span class="sxs-lookup"><span data-stu-id="bea80-343">See</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-344">Wählen Sie ein Modem mit einem seriellen Anschluss verbunden</span><span class="sxs-lookup"><span data-stu-id="bea80-344">Dial a modem attached to a serial port</span></span>|[<span data-ttu-id="bea80-345">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-345">How to: Dial Modems Attached to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|<span data-ttu-id="bea80-346">Senden einer Zeichenfolge an den seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-346">Send a string to serial port</span></span>|[<span data-ttu-id="bea80-347">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-347">How to: Send Strings to Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|<span data-ttu-id="bea80-348">Empfangen von Zeichenfolgen von einem seriellen Anschluss</span><span class="sxs-lookup"><span data-stu-id="bea80-348">Receive strings from a serial port</span></span>|[<span data-ttu-id="bea80-349">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-349">How to: Receive Strings From Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="bea80-350">Verfügbarkeit nach Projekttyp</span><span class="sxs-lookup"><span data-stu-id="bea80-350">Availability by Project Type</span></span>  
  
|<span data-ttu-id="bea80-351">Projekttyp:</span><span class="sxs-lookup"><span data-stu-id="bea80-351">Project type</span></span>|<span data-ttu-id="bea80-352">Verfügbar</span><span class="sxs-lookup"><span data-stu-id="bea80-352">Available</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-353">Windows-Anwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-353">Windows Application</span></span>|<span data-ttu-id="bea80-354">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-354">**Yes**</span></span>|  
|<span data-ttu-id="bea80-355">Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-355">Class Library</span></span>|<span data-ttu-id="bea80-356">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-356">**Yes**</span></span>|  
|<span data-ttu-id="bea80-357">Konsolenanwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-357">Console Application</span></span>|<span data-ttu-id="bea80-358">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-358">**Yes**</span></span>|  
|<span data-ttu-id="bea80-359">Windows-Steuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-359">Windows Control Library</span></span>|<span data-ttu-id="bea80-360">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-360">**Yes**</span></span>|  
|<span data-ttu-id="bea80-361">Websteuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-361">Web Control Library</span></span>|<span data-ttu-id="bea80-362">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-362">No</span></span>|  
|<span data-ttu-id="bea80-363">Windows-Dienst</span><span class="sxs-lookup"><span data-stu-id="bea80-363">Windows Service</span></span>|<span data-ttu-id="bea80-364">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-364">**Yes**</span></span>|  
|<span data-ttu-id="bea80-365">Website</span><span class="sxs-lookup"><span data-stu-id="bea80-365">Web Site</span></span>|<span data-ttu-id="bea80-366">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-366">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bea80-367">In diesem Beispiel wird beschrieben, wie Zeichenfolgen an des Computers senden `COM1` seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-367">This example describes how to send strings to the computer's `COM1` serial port.</span></span>  
  
 <span data-ttu-id="bea80-368">Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird.</span><span class="sxs-lookup"><span data-stu-id="bea80-368">The `Using` block allows the application to close the serial port even if it generates an exception.</span></span> <span data-ttu-id="bea80-369">Der gesamte Code, der den seriellen Anschluss ändert sollte angezeigt werden, innerhalb dieses Blocks oder innerhalb einer `Try...Catch...Finally` Block mit einem Aufruf von verwenden die <xref:System.IO.Ports.SerialPort.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="bea80-369">All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.</span></span>  
  
 <span data-ttu-id="bea80-370">Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.</span><span class="sxs-lookup"><span data-stu-id="bea80-370">The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 <span data-ttu-id="bea80-371">Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span><span class="sxs-lookup"><span data-stu-id="bea80-371">For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bea80-372">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-372">
              <paramref name="portName" /> is <see langword="Nothing" /> or an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bea80-373">
            <paramref name="dataBits" /> ist kleiner gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-373">
              <paramref name="dataBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="bea80-374">
            <paramref name="stopBits" /> ist keiner der <see cref="T:System.IO.Ports.StopBits" />-Enumerationswerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-374">
              <paramref name="stopBits" /> is not one of the <see cref="T:System.IO.Ports.StopBits" /> enumeration values.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
      </Docs>
    </Member>
    <Member MemberName="SerialPortNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SerialPortNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SerialPortNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialPortNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ SerialPortNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialPortNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bea80-375">Ruft eine Auflistung der Namen der seriellen Anschlüsse des Computers ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-375">Gets a collection of the names of the serial ports on the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bea80-376">Eine Auflistung der Namen der seriellen Anschlüsse des Computers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bea80-376">A collection of the names of the serial ports on the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea80-377">Die `My.Computer.Ports.SerialPortNames` Eigenschaft ruft eine Auflistung der Namen der seriellen Anschlüsse auf dem Computer ab.</span><span class="sxs-lookup"><span data-stu-id="bea80-377">The `My.Computer.Ports.SerialPortNames` property gets a collection of the names of the serial ports on the computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bea80-378">Die von `My.Computer.Ports.SerialPortNames` zurückgegebenen Anschlussnamen sind möglicherweise unter Windows 98 unzulässig.</span><span class="sxs-lookup"><span data-stu-id="bea80-378">The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98.</span></span> <span data-ttu-id="bea80-379">Verwenden Sie die Ausnahmebehandlung, um Anwendungsfehler zu verhindern – z.B die `Try...Catch...Finally`-Anweisung oder die `Using`-Anweisung beim Öffnen der Anschlüsse mithilfe der Anschlussnamen.</span><span class="sxs-lookup"><span data-stu-id="bea80-379">To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports.</span></span>  
  
 <span data-ttu-id="bea80-380">Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Ports.SerialPortNames` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bea80-380">The following table lists an example of a task involving the `My.Computer.Ports.SerialPortNames` property.</span></span>  
  
|<span data-ttu-id="bea80-381">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="bea80-381">To</span></span>|<span data-ttu-id="bea80-382">Siehe</span><span class="sxs-lookup"><span data-stu-id="bea80-382">See</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-383">Anzeigen von verfügbaren seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-383">Show available serial ports</span></span>|[<span data-ttu-id="bea80-384">Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen</span><span class="sxs-lookup"><span data-stu-id="bea80-384">How to: Show Available Serial Ports</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="bea80-385">Verfügbarkeit nach Projekttyp</span><span class="sxs-lookup"><span data-stu-id="bea80-385">Availability by Project Type</span></span>  
  
|<span data-ttu-id="bea80-386">Projekttyp:</span><span class="sxs-lookup"><span data-stu-id="bea80-386">Project type</span></span>|<span data-ttu-id="bea80-387">Verfügbar</span><span class="sxs-lookup"><span data-stu-id="bea80-387">Available</span></span>|  
|-|-|  
|<span data-ttu-id="bea80-388">Windows-Anwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-388">Windows Application</span></span>|<span data-ttu-id="bea80-389">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-389">**Yes**</span></span>|  
|<span data-ttu-id="bea80-390">Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-390">Class Library</span></span>|<span data-ttu-id="bea80-391">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-391">**Yes**</span></span>|  
|<span data-ttu-id="bea80-392">Konsolenanwendung</span><span class="sxs-lookup"><span data-stu-id="bea80-392">Console Application</span></span>|<span data-ttu-id="bea80-393">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-393">**Yes**</span></span>|  
|<span data-ttu-id="bea80-394">Windows-Steuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-394">Windows Control Library</span></span>|<span data-ttu-id="bea80-395">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-395">**Yes**</span></span>|  
|<span data-ttu-id="bea80-396">Websteuerelementbibliothek</span><span class="sxs-lookup"><span data-stu-id="bea80-396">Web Control Library</span></span>|<span data-ttu-id="bea80-397">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-397">No</span></span>|  
|<span data-ttu-id="bea80-398">Windows-Dienst</span><span class="sxs-lookup"><span data-stu-id="bea80-398">Windows Service</span></span>|<span data-ttu-id="bea80-399">**Ja**</span><span class="sxs-lookup"><span data-stu-id="bea80-399">**Yes**</span></span>|  
|<span data-ttu-id="bea80-400">Website</span><span class="sxs-lookup"><span data-stu-id="bea80-400">Web Site</span></span>|<span data-ttu-id="bea80-401">Nein</span><span class="sxs-lookup"><span data-stu-id="bea80-401">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bea80-402">In diesem Beispiel werden alle Zeichenfolgen durchlaufen, die die `My.Computer.Ports.SerialPortNames`-Eigenschaft zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="bea80-402">This example loops over all the strings that the `My.Computer.Ports.SerialPortNames` property returns.</span></span> <span data-ttu-id="bea80-403">Diese Zeichenfolgen sind die Namen der auf dem Computer verfügbaren Anschlüsse.</span><span class="sxs-lookup"><span data-stu-id="bea80-403">These strings are the names of the available serial ports on the computer.</span></span>  
  
 <span data-ttu-id="bea80-404">Üblicherweise wählt ein Benutzer aus der Liste der verfügbaren Anschlüsse aus, welchen seriellen Anschluss die Anwendung verwenden soll.</span><span class="sxs-lookup"><span data-stu-id="bea80-404">Typically, a user selects which serial port the application should use from the list of available ports.</span></span> <span data-ttu-id="bea80-405">In diesem Beispiel werden die Namen der seriellen Anschlüsse in einem <xref:System.Windows.Forms.ListBox>-Steuerelement gespeichert.</span><span class="sxs-lookup"><span data-stu-id="bea80-405">In this example, the serial port names are stored in a <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="bea80-406">Weitere Informationen finden Sie unter [ListBox-Steuerelement](~/docs/framework/winforms/controls/listbox-control-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="bea80-406">For more information, see [ListBox Control](~/docs/framework/winforms/controls/listbox-control-windows-forms.md).</span></span>  
  
 [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  
  
 <span data-ttu-id="bea80-407">Für dieses Beispiel benötigen Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="bea80-407">This example requires:</span></span>  
  
-   <span data-ttu-id="bea80-408">Einen Verweis auf den <xref:System?displayProperty=nameWithType>-Namespace</span><span class="sxs-lookup"><span data-stu-id="bea80-408">A reference to the <xref:System?displayProperty=nameWithType> namespace.</span></span>  
  
-   <span data-ttu-id="bea80-409">Dass Ihr Formular ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `ListBox1` hat.</span><span class="sxs-lookup"><span data-stu-id="bea80-409">That your form have a <xref:System.Windows.Forms.ListBox> control named `ListBox1`.</span></span>  
  
 <span data-ttu-id="bea80-410">Weitere Informationen finden Sie unter [Vorgehensweise: Anzeigen von verfügbaren seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).</span><span class="sxs-lookup"><span data-stu-id="bea80-410">For more information, see [How to: Show Available Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="Overload:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
  </Members>
</Type>