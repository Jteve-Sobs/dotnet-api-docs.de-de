<Type Name="Ports" FullName="Microsoft.VisualBasic.Devices.Ports">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fc38a212981c894a9726302d6ace00717d7abbf" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83898834" /></Metadata><TypeSignature Language="C#" Value="public class Ports" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ports extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Ports" />
  <TypeSignature Language="VB.NET" Value="Public Class Ports" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ports" />
  <TypeSignature Language="F#" Value="type Ports = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Eigenschaft und eine Methode bereit, mit deren Hilfe Sie auf die seriellen Anschlüsse eines Computer zugreifen können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `My.Computer.Ports`-Objekt bietet einen einfachen Einstiegspunkt für den Zugriff auf die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] serielle Port Klasse, <xref:System.IO.Ports.SerialPort>.  
  
 In der folgenden Tabelle sind Beispiele für Aufgaben im Zusammenhang mit dem `My.Computer.Ports` Objekt aufgeführt.  
  
|To|Finden Sie unter|  
|-|-|  
|An einem seriellen Anschluss angefügtes Modem wählen|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports)|  
|Sendet eine Zeichenfolge an einen seriellen Anschluss.|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports)|  
|Empfangen von Zeichen folgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports)|  
|Anzeigen der verfügbaren seriellen Anschlüsse|[Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|&Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie Zeichen folgen an den `COM1` seriellen Anschluss des Computers gesendet werden.  
  
 Der `Using`-Block ermöglicht der Anwendung, den seriellen Anschluss auch dann zu schließen, wenn die eingeschlossene Anweisung eine Ausnahme generiert. Sämtlicher Code, der den seriellen Anschluss bearbeitet, sollte in diesem Block oder in einem `Try...Catch...Finally` Block mit einem-Befehl, der <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwendet, angezeigt werden.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter Gewusst [wie: Senden von Zeichen folgen an serielle Anschlüsse](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">Objekte (Visual Basic)</related>
    <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
    <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
    <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
    <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen in Visual Basic</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ports ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ports();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:Microsoft.VisualBasic.Devices.Ports" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSerialPort">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort portName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">[https://login.microsoftonline.com/consumers/](<see langword="String" />). Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der `My.Computer.Ports.OpenSerialPort`-Methode wird ein <xref:System.IO.Ports.SerialPort>-Objekt erstellt und geöffnet. Die Argumente für die `OpenSerialPort`-Methode bestimmen die Einstellungen des <xref:System.IO.Ports.SerialPort> Objekts.  
  
 Der Code sollte das <xref:System.IO.Ports.SerialPort> Objekt schließen, wenn die Verwendung des-Objekts abgeschlossen ist. Sie können die <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwenden, um das Objekt explizit zu schließen, oder die `Using` Anweisung, um Sie implizit zu schließen. Weitere Informationen finden Sie im Beispiel in diesem Thema.  
  
 In der folgenden Tabelle sind Beispiele für Aufgaben aufgeführt, die die `My.Computer.Ports.OpenSerialPort`-Methode betreffen.  
  
|To|Finden Sie unter|  
|-|-|  
|An einem seriellen Anschluss angefügtes Modem wählen|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports)|  
|Sendet eine Zeichenfolge an den seriellen Anschluss.|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports)|  
|Empfangen von Zeichen folgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|&Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie Zeichen folgen an den `COM1` seriellen Anschluss des Computers gesendet werden.  
  
 Der `Using`-Block ermöglicht der Anwendung, den seriellen Anschluss auch dann zu schließen, wenn die eingeschlossene Anweisung eine Ausnahme generiert. Sämtlicher Code, der den seriellen Anschluss bearbeitet, sollte in diesem Block oder in einem `Try...Catch...Finally` Block mit einem-Befehl, der <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwendet, angezeigt werden.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter Gewusst [wie: Senden von Zeichen folgen an serielle Anschlüsse](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">Objekte (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/using-statement">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">[https://login.microsoftonline.com/consumers/](<see langword="String" />). Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <param name="baudRate">[https://login.microsoftonline.com/consumers/](<see langword="Integer" />). Baudrate des Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der `My.Computer.Ports.OpenSerialPort`-Methode wird ein <xref:System.IO.Ports.SerialPort>-Objekt erstellt und geöffnet. Die Argumente für die `OpenSerialPort`-Methode bestimmen die Einstellungen des <xref:System.IO.Ports.SerialPort> Objekts.  
  
 Der Code sollte das <xref:System.IO.Ports.SerialPort> Objekt schließen, wenn die Verwendung des-Objekts abgeschlossen ist. Sie können die <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwenden, um das Objekt explizit zu schließen, oder die `Using` Anweisung, um Sie implizit zu schließen. Weitere Informationen finden Sie im Beispiel in diesem Thema.  
  
 In der folgenden Tabelle sind Beispiele für Aufgaben aufgeführt, die die `My.Computer.Ports.OpenSerialPort`-Methode betreffen.  
  
|To|Finden Sie unter|  
|-|-|  
|An einem seriellen Anschluss angefügtes Modem wählen|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports)|  
|Sendet eine Zeichenfolge an den seriellen Anschluss.|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports)|  
|Empfangen von Zeichen folgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|&Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie Zeichen folgen an den `COM1` seriellen Anschluss des Computers gesendet werden.  
  
 Der `Using`-Block ermöglicht der Anwendung, den seriellen Anschluss auch dann zu schließen, wenn die eingeschlossene Anweisung eine Ausnahme generiert. Sämtlicher Code, der den seriellen Anschluss bearbeitet, sollte in diesem Block oder in einem `Try...Catch...Finally` Block mit einem-Befehl, der <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwendet, angezeigt werden.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter Gewusst [wie: Senden von Zeichen folgen an serielle Anschlüsse](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" /> ist kleiner gleich 0 (null).</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">Objekte (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/using-statement">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer, parity As Parity) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName">[https://login.microsoftonline.com/consumers/](<see langword="String" />). Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <param name="baudRate">[https://login.microsoftonline.com/consumers/](<see langword="Integer" />). Baudrate des Anschlusses.</param>
        <param name="parity">[https://login.microsoftonline.com/consumers/](<see cref="T:System.IO.Ports.Parity" />). Parität des Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der `My.Computer.Ports.OpenSerialPort`-Methode wird ein <xref:System.IO.Ports.SerialPort>-Objekt erstellt und geöffnet. Die Argumente für die `OpenSerialPort`-Methode bestimmen die Einstellungen des <xref:System.IO.Ports.SerialPort> Objekts.  
  
 Der Code sollte das <xref:System.IO.Ports.SerialPort> Objekt schließen, wenn die Verwendung des-Objekts abgeschlossen ist. Sie können die <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwenden, um das Objekt explizit zu schließen, oder die `Using` Anweisung, um Sie implizit zu schließen. Weitere Informationen finden Sie im Beispiel in diesem Thema.  
  
 In der folgenden Tabelle sind Beispiele für Aufgaben aufgeführt, die die `My.Computer.Ports.OpenSerialPort`-Methode betreffen.  
  
|To|Finden Sie unter|  
|-|-|  
|An einem seriellen Anschluss angefügtes Modem wählen|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports)|  
|Sendet eine Zeichenfolge an den seriellen Anschluss.|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports)|  
|Empfangen von Zeichen folgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|&Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie Zeichen folgen an den `COM1` seriellen Anschluss des Computers gesendet werden.  
  
 Der `Using`-Block ermöglicht der Anwendung, den seriellen Anschluss auch dann zu schließen, wenn die eingeschlossene Anweisung eine Ausnahme generiert. Sämtlicher Code, der den seriellen Anschluss bearbeitet, sollte in diesem Block oder in einem `Try...Catch...Finally` Block mit einem-Befehl, der <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwendet, angezeigt werden.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter Gewusst [wie: Senden von Zeichen folgen an serielle Anschlüsse](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" /> ist keiner der <see cref="T:System.IO.Ports.Parity" />-Enumerationswerte.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">Objekte (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/using-statement">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer, parity As Parity, dataBits As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">[https://login.microsoftonline.com/consumers/](<see langword="String" />). Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <param name="baudRate">[https://login.microsoftonline.com/consumers/](<see langword="Integer" />). Baudrate des Anschlusses.</param>
        <param name="parity">[https://login.microsoftonline.com/consumers/](<see cref="T:System.IO.Ports.Parity" />). Parität des Anschlusses.</param>
        <param name="dataBits">[https://login.microsoftonline.com/consumers/](<see langword="Integer" />). Datenbiteinstellung des Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der `My.Computer.Ports.OpenSerialPort`-Methode wird ein <xref:System.IO.Ports.SerialPort>-Objekt erstellt und geöffnet. Die Argumente für die `OpenSerialPort`-Methode bestimmen die Einstellungen des <xref:System.IO.Ports.SerialPort> Objekts.  
  
 Der Code sollte das <xref:System.IO.Ports.SerialPort> Objekt schließen, wenn die Verwendung des-Objekts abgeschlossen ist. Sie können die <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwenden, um das Objekt explizit zu schließen, oder die `Using` Anweisung, um Sie implizit zu schließen. Weitere Informationen finden Sie im Beispiel in diesem Thema.  
  
 In der folgenden Tabelle sind Beispiele für Aufgaben aufgeführt, die die `My.Computer.Ports.OpenSerialPort`-Methode betreffen.  
  
|To|Finden Sie unter|  
|-|-|  
|An einem seriellen Anschluss angefügtes Modem wählen|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports)|  
|Sendet eine Zeichenfolge an den seriellen Anschluss.|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports)|  
|Empfangen von Zeichen folgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|&Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie Zeichen folgen an den `COM1` seriellen Anschluss des Computers gesendet werden.  
  
 Der `Using`-Block ermöglicht der Anwendung, den seriellen Anschluss auch dann zu schließen, wenn die eingeschlossene Anweisung eine Ausnahme generiert. Sämtlicher Code, der den seriellen Anschluss bearbeitet, sollte in diesem Block oder in einem `Try...Catch...Finally` Block mit einem-Befehl, der <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwendet, angezeigt werden.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter Gewusst [wie: Senden von Zeichen folgen an serielle Anschlüsse](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" /> ist keiner der <see cref="T:System.IO.Ports.Parity" />-Enumerationswerte.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">Objekte (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/using-statement">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer, parity As Parity, dataBits As Integer, stopBits As StopBits) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName">[https://login.microsoftonline.com/consumers/](<see langword="String" />). Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <param name="baudRate">[https://login.microsoftonline.com/consumers/](<see langword="Integer" />). Baudrate des Anschlusses.</param>
        <param name="parity">[https://login.microsoftonline.com/consumers/](<see cref="T:System.IO.Ports.Parity" />). Parität des Anschlusses.</param>
        <param name="dataBits">[https://login.microsoftonline.com/consumers/](<see langword="Integer" />). Datenbiteinstellung des Anschlusses.</param>
        <param name="stopBits">[https://login.microsoftonline.com/consumers/](<see cref="T:System.IO.Ports.StopBits" />). Stoppbiteinstellung des Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der `My.Computer.Ports.OpenSerialPort`-Methode wird ein <xref:System.IO.Ports.SerialPort>-Objekt erstellt und geöffnet. Die Argumente für die `OpenSerialPort`-Methode bestimmen die Einstellungen des <xref:System.IO.Ports.SerialPort> Objekts.  
  
 Der Code sollte das <xref:System.IO.Ports.SerialPort> Objekt schließen, wenn die Verwendung des-Objekts abgeschlossen ist. Sie können die <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwenden, um das Objekt explizit zu schließen, oder die `Using` Anweisung, um Sie implizit zu schließen. Weitere Informationen finden Sie im Beispiel in diesem Thema.  
  
 In der folgenden Tabelle sind Beispiele für Aufgaben aufgeführt, die die `My.Computer.Ports.OpenSerialPort`-Methode betreffen.  
  
|To|Finden Sie unter|  
|-|-|  
|An einem seriellen Anschluss angefügtes Modem wählen|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports)|  
|Sendet eine Zeichenfolge an den seriellen Anschluss.|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports)|  
|Empfangen von Zeichen folgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|&Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie Zeichen folgen an den `COM1` seriellen Anschluss des Computers gesendet werden.  
  
 Der `Using`-Block ermöglicht der Anwendung, den seriellen Anschluss auch dann zu schließen, wenn die eingeschlossene Anweisung eine Ausnahme generiert. Sämtlicher Code, der den seriellen Anschluss bearbeitet, sollte in diesem Block oder in einem `Try...Catch...Finally` Block mit einem-Befehl, der <xref:System.IO.Ports.SerialPort.Close%2A>-Methode verwendet, angezeigt werden.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter Gewusst [wie: Senden von Zeichen folgen an serielle Anschlüsse](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="stopBits" /> ist keiner der <see cref="T:System.IO.Ports.StopBits" />-Enumerationswerte.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">Objekte (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/using-statement">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="SerialPortNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SerialPortNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SerialPortNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialPortNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ SerialPortNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialPortNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Namen der seriellen Anschlüsse des Computers ab.</summary>
        <value>Eine Auflistung der Namen der seriellen Anschlüsse des Computers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der `My.Computer.Ports.SerialPortNames`-Eigenschaft wird eine Auflistung der Namen der seriellen Anschlüsse auf dem Computer abgerufen.  
  
> [!NOTE]
>  Die von `My.Computer.Ports.SerialPortNames` zurückgegebenen Anschlussnamen sind möglicherweise unter Windows 98 unzulässig. Verwenden Sie die Ausnahmebehandlung, um Anwendungsfehler zu verhindern – z.B die `Try...Catch...Finally`-Anweisung oder die `Using`-Anweisung beim Öffnen der Anschlüsse mithilfe der Anschlussnamen.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Ports.SerialPortNames`-Eigenschaft aufgelistet.  
  
|To|Finden Sie unter|  
|-|-|  
|Anzeigen der verfügbaren seriellen Anschlüsse|[Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|&Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel werden alle Zeichenfolgen durchlaufen, die die `My.Computer.Ports.SerialPortNames`-Eigenschaft zurückgibt. Diese Zeichenfolgen sind die Namen der auf dem Computer verfügbaren Anschlüsse.  
  
 Üblicherweise wählt ein Benutzer aus der Liste der verfügbaren Anschlüsse aus, welchen seriellen Anschluss die Anwendung verwenden soll. In diesem Beispiel werden die Namen der seriellen Anschlüsse in einem <xref:System.Windows.Forms.ListBox>-Steuerelement gespeichert. Weitere Informationen finden Sie unter [ListBox-Steuerelement](/dotnet/framework/winforms/controls/listbox-control-windows-forms).  
  
 [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  
  
 Dieses Beispiel erfordert Folgendes:  
  
-   Einen Verweis auf den <xref:System?displayProperty=nameWithType>-Namespace  
  
-   Dass Ihr Formular ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `ListBox1` hat.  
  
 Weitere Informationen finden Sie unter [Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen](/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports).  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/objects/">Objekte (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/try-catch-finally-statement">Try...Catch...Finally-Anweisung (Visual Basic)</related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/using-statement">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
