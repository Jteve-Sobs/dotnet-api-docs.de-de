<Type Name="Ports" FullName="Microsoft.VisualBasic.Devices.Ports">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd497cb0b15fddafa4116f92c5b93d8e228fdc11" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46617773" /></Metadata><TypeSignature Language="C#" Value="public class Ports" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ports extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Ports" />
  <TypeSignature Language="VB.NET" Value="Public Class Ports" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ports" />
  <TypeSignature Language="F#" Value="type Ports = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Eigenschaft und eine Methode bereit, mit deren Hilfe Sie auf die seriellen Anschlüsse eines Computer zugreifen können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Ports` Objekt stellt einen einfachen Einstiegspunkt für den Zugriff auf die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] seriellen Anschluss-Klasse, <xref:System.IO.Ports.SerialPort>.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports` Objekt.  
  
|Beschreibung|Siehe|  
|-|-|  
|Wählen Sie ein Modem mit einem seriellen Anschluss verbunden|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Eine Zeichenfolge mit einem seriellen Anschluss senden|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Empfangen von Zeichenfolgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
|Anzeigen von verfügbaren seriellen Anschlüssen|[Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie zum Senden von Zeichenfolgen an des Computers `COM1` seriellen Anschluss.  
  
 Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird. Sämtlicher Code, der den seriellen Anschluss ändert sollte angezeigt werden, in diesem Block oder in einem `Try...Catch...Finally` Block mit einem Aufruf mit der <xref:System.IO.Ports.SerialPort.Close%2A> Methode.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen in Visual Basic</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ports ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ports();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Ports" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSerialPort">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort portName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" /> Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt. Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.  
  
 Schließen Sie Ihren Code sollte die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts. Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen. Siehe das Beispiel in diesem Thema Informationen.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Wählen Sie ein Modem mit einem seriellen Anschluss verbunden|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Senden einer Zeichenfolge an den seriellen Anschluss|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Empfangen von Zeichenfolgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie zum Senden von Zeichenfolgen an des Computers `COM1` seriellen Anschluss.  
  
 Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird. Sämtlicher Code, der den seriellen Anschluss ändert sollte angezeigt werden, in diesem Block oder in einem `Try...Catch...Finally` Block mit einem Aufruf mit der <xref:System.IO.Ports.SerialPort.Close%2A> Methode.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" /> Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <param name="baudRate"><see langword="Integer" /> Baudrate des Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt. Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.  
  
 Schließen Sie Ihren Code sollte die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts. Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen. Siehe das Beispiel in diesem Thema Informationen.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Wählen Sie ein Modem mit einem seriellen Anschluss verbunden|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Senden einer Zeichenfolge an den seriellen Anschluss|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Empfangen von Zeichenfolgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie zum Senden von Zeichenfolgen an des Computers `COM1` seriellen Anschluss.  
  
 Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird. Sämtlicher Code, der den seriellen Anschluss ändert sollte angezeigt werden, in diesem Block oder in einem `Try...Catch...Finally` Block mit einem Aufruf mit der <xref:System.IO.Ports.SerialPort.Close%2A> Methode.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" /> ist kleiner gleich 0 (null).</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" /> Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <param name="baudRate"><see langword="Integer" /> Baudrate des Anschlusses.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" /> Parität des Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt. Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.  
  
 Schließen Sie Ihren Code sollte die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts. Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen. Siehe das Beispiel in diesem Thema Informationen.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Wählen Sie ein Modem mit einem seriellen Anschluss verbunden|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Senden einer Zeichenfolge an den seriellen Anschluss|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Empfangen von Zeichenfolgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie zum Senden von Zeichenfolgen an des Computers `COM1` seriellen Anschluss.  
  
 Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird. Sämtlicher Code, der den seriellen Anschluss ändert sollte angezeigt werden, in diesem Block oder in einem `Try...Catch...Finally` Block mit einem Aufruf mit der <xref:System.IO.Ports.SerialPort.Close%2A> Methode.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" /> ist keiner der <see cref="T:System.IO.Ports.Parity" />-Enumerationswerte.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" /> Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <param name="baudRate"><see langword="Integer" /> Baudrate des Anschlusses.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" /> Parität des Anschlusses.</param>
        <param name="dataBits"><see langword="Integer" /> Datenbiteinstellung des Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt. Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.  
  
 Schließen Sie Ihren Code sollte die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts. Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen. Siehe das Beispiel in diesem Thema Informationen.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Wählen Sie ein Modem mit einem seriellen Anschluss verbunden|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Senden einer Zeichenfolge an den seriellen Anschluss|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Empfangen von Zeichenfolgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie zum Senden von Zeichenfolgen an des Computers `COM1` seriellen Anschluss.  
  
 Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird. Sämtlicher Code, der den seriellen Anschluss ändert sollte angezeigt werden, in diesem Block oder in einem `Try...Catch...Finally` Block mit einem Aufruf mit der <xref:System.IO.Ports.SerialPort.Close%2A> Methode.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" /> ist keiner der <see cref="T:System.IO.Ports.Parity" />-Enumerationswerte.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" /> Erforderlich. Der Name des zu öffnenden Anschlusses.</param>
        <param name="baudRate"><see langword="Integer" /> Baudrate des Anschlusses.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" /> Parität des Anschlusses.</param>
        <param name="dataBits"><see langword="Integer" /> Datenbiteinstellung des Anschlusses.</param>
        <param name="stopBits"><see cref="T:System.IO.Ports.StopBits" /> Stoppbiteinstellung des Anschlusses.</param>
        <summary>Erstellt und öffnet ein <see cref="T:System.IO.Ports.SerialPort" />-Objekt.</summary>
        <returns>Ein offenes <see cref="T:System.IO.Ports.SerialPort" />-Objekt, das mit den angegebenen Argumenten konfiguriert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Ports.OpenSerialPort` Methode erstellt und öffnet eine <xref:System.IO.Ports.SerialPort> Objekt. Die Argumente für die `OpenSerialPort` Methode zu ermitteln, die Einstellungen der <xref:System.IO.Ports.SerialPort> Objekt.  
  
 Schließen Sie Ihren Code sollte die <xref:System.IO.Ports.SerialPort> Objekt, wenn er abgeschlossen ist unter Verwendung des Objekts. Können Sie die <xref:System.IO.Ports.SerialPort.Close%2A> Methode, um das Objekt explizit schließen, oder die `Using` Anweisung implizit geschlossen. Siehe das Beispiel in diesem Thema Informationen.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Ports.OpenSerialPort` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Wählen Sie ein Modem mit einem seriellen Anschluss verbunden|[Gewusst wie: Wählen mit Modems an seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Senden einer Zeichenfolge an den seriellen Anschluss|[Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Empfangen von Zeichenfolgen von einem seriellen Anschluss|[Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie zum Senden von Zeichenfolgen an des Computers `COM1` seriellen Anschluss.  
  
 Der `Using`-Block ermöglicht es der Anwendung, den seriellen Port auch dann zu schließen, wenn eine Ausnahme generiert wird. Sämtlicher Code, der den seriellen Anschluss ändert sollte angezeigt werden, in diesem Block oder in einem `Try...Catch...Finally` Block mit einem Aufruf mit der <xref:System.IO.Ports.SerialPort.Close%2A> Methode.  
  
 Die <xref:System.IO.Ports.SerialPort.WriteLine%2A>-Methode sendet die Daten an den seriellen Anschluss.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Weitere Informationen finden Sie unter [wie: Senden von Zeichenfolgen zu seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="portName" /> ist <see langword="Nothing" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="stopBits" /> ist keiner der <see cref="T:System.IO.Ports.StopBits" />-Enumerationswerte.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Gewusst wie: Wählen mit Modems an seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Gewusst wie: Senden von Zeichenfolgen zu seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Gewusst wie: Empfangen von Zeichenfolgen von seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="SerialPortNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SerialPortNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SerialPortNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialPortNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ SerialPortNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialPortNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Namen der seriellen Anschlüsse des Computers ab.</summary>
        <value>Eine Auflistung der Namen der seriellen Anschlüsse des Computers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Ports.SerialPortNames` Eigenschaft ruft eine Auflistung mit den Namen der seriellen Anschlüsse des Computers ab.  
  
> [!NOTE]
>  Die von `My.Computer.Ports.SerialPortNames` zurückgegebenen Anschlussnamen sind möglicherweise unter Windows 98 unzulässig. Verwenden Sie die Ausnahmebehandlung, um Anwendungsfehler zu verhindern – z.B die `Try...Catch...Finally`-Anweisung oder die `Using`-Anweisung beim Öffnen der Anschlüsse mithilfe der Anschlussnamen.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Ports.SerialPortNames` Eigenschaft.  
  
|Beschreibung|Siehe|  
|-|-|  
|Anzeigen von verfügbaren seriellen Anschlüssen|[Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel werden alle Zeichenfolgen durchlaufen, die die `My.Computer.Ports.SerialPortNames`-Eigenschaft zurückgibt. Diese Zeichenfolgen sind die Namen der auf dem Computer verfügbaren Anschlüsse.  
  
 Üblicherweise wählt ein Benutzer aus der Liste der verfügbaren Anschlüsse aus, welchen seriellen Anschluss die Anwendung verwenden soll. In diesem Beispiel werden die Namen der seriellen Anschlüsse in einem <xref:System.Windows.Forms.ListBox>-Steuerelement gespeichert. Weitere Informationen finden Sie unter [ListBox-Steuerelement](~/docs/framework/winforms/controls/listbox-control-windows-forms.md).  
  
 [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  
  
 Für dieses Beispiel benötigen Sie Folgendes:  
  
-   Einen Verweis auf den <xref:System?displayProperty=nameWithType>-Namespace  
  
-   Dass Ihr Formular ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `ListBox1` hat.  
  
 Weitere Informationen finden Sie unter [Vorgehensweise: Anzeigen von verfügbaren seriellen Anschlüssen](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="Overload:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Gewusst wie: Anzeigen von verfügbaren seriellen Anschlüssen in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md">Try...Catch...Finally-Anweisung (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using-Anweisung (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>