<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1090d44d40e28b0d29477f2237034a9f61aeea09" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37711905" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a property, event, and methods for interacting with the network to which the computer is connected.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Network` Objekt.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Überprüfen des Verbindungsstatus|[Gewusst wie: Überprüfen des Verbindungsstatus](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu http://www.cohowinery.com/uploads.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Network" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, die `DownloadFile` Methode wird die vorhandene Datei nicht überschreiben. Sie können eine der anderen Überladungen der der <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> Methode, um vorhandene Dateien überschrieben werden sollen anweisen, Benutzeranmeldeinformationen oder einen bestimmten Timeoutwert angeben.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, die `DownloadFile` Methode wird die vorhandene Datei nicht überschreiben. Sie können eine der anderen Überladungen der der <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> Methode, um vorhandene Dateien überschrieben werden sollen anweisen, Benutzeranmeldeinformationen oder einen bestimmten Timeoutwert angeben. `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, die `DownloadFile` Methode wird die vorhandene Datei nicht überschreiben. Können Sie eine der anderen Überladungen von der <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> Methode, um anzuweisen, um vorhandene Dateien überschreiben oder einen bestimmten Timeoutwert angeben.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, die `DownloadFile` Methode wird die vorhandene Datei nicht überschreiben. Können Sie eine der anderen Überladungen von der <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> Methode, um anzuweisen, um vorhandene Dateien überschreiben oder einen bestimmten Timeoutwert angeben.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <see langword="String" /> or <see cref="T:System.Uri" />. Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">
          <see langword="String" />. File name and path of the downloaded file.</param>
        <param name="networkCredentials">
          <see cref="T:System.Net.ICredentials" />. Credentials to be supplied.</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird angezeigt, die den Fortschritt des Vorgangs an; das Dialogfeld enthält einen **Abbrechen** Schaltfläche, die verwendet werden kann, um den Vorgang abzubrechen. Das Dialogfeld ist nicht modal und Benutzereingaben an andere Fenster in das Programm wird nicht blockiert.  
  
 Wenn der Server nicht innerhalb des angegebenen antwortet `connectionTimeout`, der Vorgang wird abgebrochen und eine Ausnahme ausgelöst.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">
          <see cref="T:System.Int32" />. Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird angezeigt, die den Fortschritt des Vorgangs an; das Dialogfeld enthält einen **Abbrechen** Schaltfläche, die verwendet werden kann, um den Vorgang abzubrechen. Das Dialogfeld ist nicht modal und Benutzereingaben an andere Fenster in das Programm wird nicht blockiert.  
  
 Wenn der Server nicht innerhalb des angegebenen antwortet `connectionTimeout`, der Vorgang wird abgebrochen und eine Ausnahme ausgelöst.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="networkCredentials">Credentials to be supplied.</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>showUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird angezeigt, die den Fortschritt des Vorgangs an; das Dialogfeld enthält einen **Abbrechen** Schaltfläche, die verwendet werden kann, um den Vorgang abzubrechen. Das Dialogfeld ist nicht modal und Benutzereingaben an andere Fenster in das Programm wird nicht blockiert.  
  
 Wenn der Server nicht innerhalb des angegebenen antwortet `connectionTimeout`, der Vorgang wird abgebrochen und eine Ausnahme ausgelöst.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird angezeigt, die den Fortschritt des Vorgangs an; das Dialogfeld enthält einen **Abbrechen** Schaltfläche, die verwendet werden kann, um den Vorgang abzubrechen. Das Dialogfeld ist nicht modal und Benutzereingaben an andere Fenster in das Programm wird nicht blockiert.  
  
 Wenn der Server nicht innerhalb des angegebenen antwortet `connectionTimeout`, der Vorgang wird abgebrochen und eine Ausnahme ausgelöst.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>ShowUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird angezeigt, die den Fortschritt des Vorgangs an; das Dialogfeld enthält einen **Abbrechen** Schaltfläche, die verwendet werden kann, um den Vorgang abzubrechen. Das Dialogfeld ist nicht modal und Benutzereingaben an andere Fenster in das Programm wird nicht blockiert.  
  
 Wenn der Server nicht innerhalb des angegebenen antwortet `connectionTimeout`, der Vorgang wird abgebrochen und eine Ausnahme ausgelöst.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>ShowUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird angezeigt, die den Fortschritt des Vorgangs an; das Dialogfeld enthält einen **Abbrechen** Schaltfläche, die verwendet werden kann, um den Vorgang abzubrechen. Das Dialogfeld ist nicht modal und Benutzereingaben an andere Fenster in das Programm wird nicht blockiert.  
  
 Wenn der Server nicht innerhalb des angegebenen antwortet `connectionTimeout`, der Vorgang wird abgebrochen und eine Ausnahme ausgelöst.  
  
 `DownloadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile` Methode sendet keine optionalen HTTP-Header. Einige Server möglicherweise 500 (Interner Serverfehler) zurück, wenn der optionale User-Agent-Header nicht vorhanden ist. Um die optionalen Header zu senden, müssen Sie erstellen, eine Anforderung mithilfe der <xref:System.Net.WebClient> Klasse.  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` und speichert sie in `C:\Documents and Settings\All Users\Documents`, wobei ein Timeoutintervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether a computer is connected to a network.</summary>
        <value>
          <see langword="True" /> Wenn der Computer mit einem Netzwerk verbunden ist; andernfalls <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` Gibt immer `False` beim Aufrufen durch eine `Click Once` Anwendungs- oder wenn der Benutzer keinen <xref:System.Net.NetworkInformation.NetworkInformationPermission>.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Network.IsAvailable` Eigenschaft.  
  
|Beschreibung|Siehe|  
|-|-|  
|Überprüfen Sie, ob ein Computer mit einem Netzwerk verbunden ist|[Gewusst wie: Überprüfen des Verbindungsstatus](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird der Status der Eigenschaft überprüft und meldet diesen.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the network availability changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung löst das `NetworkAvailabilityChanged` Ereignis jedes Mal, wenn die Verfügbarkeit des Netzwerks ändert. Können Sie die <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> Eigenschaft der `e` Parameter, um den neuen Zustand der Verbindung abzurufen. Rufen Sie den aktuellen Zustand der Verbindung mit der <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> Eigenschaft.  
  
 In einer Windows Forms-Anwendung wird dieses Ereignis Hauptthread der Anwendung, mit den anderen UI-Ereignissen ausgelöst. Dadurch wird den Ereignishandler, die Benutzeroberfläche der Anwendung direkt zugreifen. Allerdings ist die Anwendung ausgelastet ist, behandeln ein anderes Benutzeroberflächen-Ereignis, wenn dieses Ereignis ausgelöst wird, dieses Ereignis kann nicht verarbeitet werden, bis der andere Ereignishandler abgeschlossen ist, oder ruft die <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> Methode.  
  
 Können keine der `Handles` -Anweisung behandeln die `NetworkAvailabilityChanged` Ereignis müssen Sie verwenden die `AddHandler` Anweisung.  
  
 In Windows Forms-Anwendungen die `MyApplication` Objekt macht eine `NetworkAvailabilityChanged` -Ereignis, das bietet die gleiche Funktionalität wie dieses Ereignis, aber Sie können mit behandeln die `Handles` Anweisung.  
  
> [!NOTE]
>  Viele Netzwerk-Hubs bereitstellen eine Netzwerkverbindung, auch wenn der Hub aus einem größeren Netzwerk getrennt ist. Folglich gibt dieses Ereignis für verdrahtete Verbindungen, eine Änderung in der Verbindung zwischen dem Computer und einen Hub an.  
  
> [!NOTE]
>  Die `NetworkAvailabilityChanged` Ereignis wird nicht ausgelöst werden, von Anwendungen, die unter Windows 95 und Windows 98 ausgeführt werden oder von Anwendungen, die von einem nicht-Administrator unter Windows 2000 ausgeführt werden. Wenn Ihre Anwendung möglicherweise auf diesen Plattformen ausgeführt wird, verwenden Sie die <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> Eigenschaft.  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Computer.Network.NetworkAvailabilityChanged` Ereignis, um die Benutzeroberfläche des Formulars oder Steuerelements zu aktualisieren.  
  
 Dieser Code muss in einem Formular oder Steuerelement mit werden eine <xref:System.Windows.Forms.Label> mit dem Namen `Label1`.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pings the specified server.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Ping` Methode ist es sich nicht um eine ausfallsichere Methode für die Verfügbarkeit von einem Remotecomputer: Anschluss auf dem Zielcomputer deaktiviert werden kann, oder die Ping-Anforderung möglicherweise durch eine Firewall oder ein Router blockiert.  
  
 Die Adresse übergeben, um die `Ping` -Methode muss DNS aufgelöst werden und darf nicht "http://" vorangestellt sein.  
  
   
  
## Examples  
 In diesem Beispiel meldet, und zwar unabhängig davon, ob der Server gepingt werden kann, indem Sie ermitteln, ob die `Ping` Methodenrückgabe `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Ersetzen Sie dies `"198.01.01.01"` durch die IP-Adresse, URL oder den Computernamen des Servers, ein Pingsignal an.  
  
 In diesem Beispiel meldet, und zwar unabhängig davon, ob der Server gepingt werden kann, indem Sie ermitteln, ob die `Ping` zurückgegebene Methode `True` und gibt ein Timeoutintervall von 1000 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Ersetzen Sie dies `"www.cohowinery.com"` durch die IP-Adresse, URL oder den Computernamen des Servers, ein Pingsignal an.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen Satz von Sicherheitsberechtigungen, die auf Code angewendet werden. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Steuert die Zugriffsrechte zum Herstellen oder annehmen von Verbindungen für eine Transportadresse. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Steuert den Zugriff auf eine Windows NT-Leistungsindikatorkomponente. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Steuert den Zugriff auf Netzwerkinformationen und Datenverkehrsstatistiken für den lokalen Computer. Zugeordnete Enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">The URI of the server to ping.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Ping` Methode ist es sich nicht um eine ausfallsichere Methode für die Verfügbarkeit von einem Remotecomputer: Anschluss auf dem Zielcomputer deaktiviert werden kann, oder die Ping-Anforderung möglicherweise durch eine Firewall oder ein Router blockiert.  
  
 Die Adresse übergeben, um die `Ping` -Methode muss DNS aufgelöst werden und darf nicht "http://" vorangestellt sein.  
  
   
  
## Examples  
 In diesem Beispiel meldet, und zwar unabhängig davon, ob der Server gepingt werden kann, indem Sie ermitteln, ob die `Ping` Methodenrückgabe `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Ersetzen Sie dies `"198.01.01.01"` durch die IP-Adresse, URL oder den Computernamen des Servers, ein Pingsignal an.  
  
 In diesem Beispiel meldet, und zwar unabhängig davon, ob der Server gepingt werden kann, indem Sie ermitteln, ob die `Ping` zurückgegebene Methode `True` und gibt ein Timeoutintervall von 1000 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Ersetzen Sie dies `"www.cohowinery.com"` durch die IP-Adresse, URL oder den Computernamen des Servers, ein Pingsignal an.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen Satz von Sicherheitsberechtigungen, die auf Code angewendet werden. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Steuert die Zugriffsrechte zum Herstellen oder annehmen von Verbindungen für eine Transportadresse. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Steuert den Zugriff auf eine Windows NT-Leistungsindikatorkomponente. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Steuert den Zugriff auf Netzwerkinformationen und Datenverkehrsstatistiken für den lokalen Computer. Zugeordnete Enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
        <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Ping` Methode ist es sich nicht um eine ausfallsichere Methode für die Verfügbarkeit von einem Remotecomputer: Anschluss auf dem Zielcomputer deaktiviert werden kann, oder die Ping-Anforderung möglicherweise durch eine Firewall oder ein Router blockiert.  
  
 Die Adresse übergeben, um die `Ping` -Methode muss DNS aufgelöst werden und darf nicht "http://" vorangestellt sein.  
  
   
  
## Examples  
 In diesem Beispiel meldet, und zwar unabhängig davon, ob der Server gepingt werden kann, indem Sie ermitteln, ob die `Ping` Methodenrückgabe `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Ersetzen Sie dies `"198.01.01.01"` durch die IP-Adresse, URL oder den Computernamen des Servers, ein Pingsignal an.  
  
 In diesem Beispiel meldet, und zwar unabhängig davon, ob der Server gepingt werden kann, indem Sie ermitteln, ob die `Ping` zurückgegebene Methode `True` und gibt ein Timeoutintervall von 1000 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Ersetzen Sie dies `"www.cohowinery.com"` durch die IP-Adresse, URL oder den Computernamen des Servers, ein Pingsignal an.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen Satz von Sicherheitsberechtigungen, die auf Code angewendet werden. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Steuert die Zugriffsrechte zum Herstellen oder annehmen von Verbindungen für eine Transportadresse. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Steuert den Zugriff auf eine Windows NT-Leistungsindikatorkomponente. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Steuert den Zugriff auf Netzwerkinformationen und Datenverkehrsstatistiken für den lokalen Computer. Zugeordnete Enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">The URI of the server to ping.</param>
        <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Ping` Methode ist es sich nicht um eine ausfallsichere Methode für die Verfügbarkeit von einem Remotecomputer: Anschluss auf dem Zielcomputer deaktiviert werden kann, oder die Ping-Anforderung möglicherweise durch eine Firewall oder ein Router blockiert.  
  
 Die Adresse übergeben, um die `Ping` -Methode muss DNS aufgelöst werden und darf nicht "http://" vorangestellt sein.  
  
   
  
## Examples  
 In diesem Beispiel meldet, und zwar unabhängig davon, ob der Server gepingt werden kann, indem Sie ermitteln, ob die `Ping` Methodenrückgabe `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Ersetzen Sie dies `"198.01.01.01"` durch die IP-Adresse, URL oder den Computernamen des Servers, ein Pingsignal an.  
  
 In diesem Beispiel meldet, und zwar unabhängig davon, ob der Server gepingt werden kann, indem Sie ermitteln, ob die `Ping` zurückgegebene Methode `True` und gibt ein Timeoutintervall von 1000 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Ersetzen Sie dies `"www.cohowinery.com"` durch die IP-Adresse, URL oder den Computernamen des Servers, ein Pingsignal an.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Beschreibt einen Satz von Sicherheitsberechtigungen, die auf Code angewendet werden. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Steuert die Zugriffsrechte zum Herstellen oder annehmen von Verbindungen für eine Transportadresse. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Steuert den Zugriff auf eine Windows NT-Leistungsindikatorkomponente. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Steuert den Zugriff auf Netzwerkinformationen und Datenverkehrsstatistiken für den lokalen Computer. Zugeordnete Enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends the specified file to the specified host address.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine der anderen Überladungen der der <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> Methode, um Benutzeranmeldeinformationen oder einen bestimmten Timeoutwert angeben.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine der anderen Überladungen der der <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> Methode, um Benutzeranmeldeinformationen oder einen bestimmten Timeoutwert angeben.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine der anderen Überladungen der der <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> Methode, um einen bestimmten Timeoutwert anzugeben.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine der anderen Überladungen der der <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> Methode, um einen bestimmten Timeoutwert anzugeben.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="networkCredentials">Credentials for authentication.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird der Fortschritt des Vorgangs und enthält eine **Abbrechen** Schaltfläche, die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, wird sie Benutzereingaben an andere Fenster in das Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb eines Intervalls im angegebenen antwortet `connectionTimeout`, wird der Vorgang wird abgebrochen, und eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird der Fortschritt des Vorgangs und enthält eine **Abbrechen** Schaltfläche, die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, wird sie Benutzereingaben an andere Fenster in das Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb eines Intervalls im angegebenen antwortet `connectionTimeout`, wird der Vorgang wird abgebrochen, und eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="networkCredentials">Credentials for authentication.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird der Fortschritt des Vorgangs und enthält eine **Abbrechen** Schaltfläche, die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, wird sie Benutzereingaben an andere Fenster in das Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb eines Intervalls im angegebenen antwortet `connectionTimeout`, wird der Vorgang wird abgebrochen, und eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird der Fortschritt des Vorgangs und enthält eine **Abbrechen** Schaltfläche, die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, wird sie Benutzereingaben an andere Fenster in das Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb eines Intervalls im angegebenen antwortet `connectionTimeout`, wird der Vorgang wird abgebrochen, und eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">Whether to display progress of the operation. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird der Fortschritt des Vorgangs und enthält eine **Abbrechen** Schaltfläche, die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, wird sie Benutzereingaben an andere Fenster in das Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb eines Intervalls im angegebenen antwortet `connectionTimeout`, wird der Vorgang wird abgebrochen, und eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">Whether to display progress of the operation. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` nastaven NA hodnotu `True`, ein Dialogfeld wird der Fortschritt des Vorgangs und enthält eine **Abbrechen** Schaltfläche, die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, wird sie Benutzereingaben an andere Fenster in das Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb eines Intervalls im angegebenen antwortet `connectionTimeout`, wird der Vorgang wird abgebrochen, und eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` Ausgaben Ablaufverfolgungsinformationen zurück, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Enabling Network Tracing](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll Informationen, einschließlich Kennwörter in Klartext gesendet und sollte nicht für die Übermittlung vertraulicher Informationen verwendet werden.  
  
 Die folgende Tabelle enthält ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile` Methode.  
  
|Beschreibung|Siehe|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` zu `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Steuert die Fähigkeit, auf Dateien und Ordner zuzugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Steuert die Berechtigungen, die im Zusammenhang mit der Benutzeroberfläche und die Zwischenablage. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Steuert die Zugriffsrechte auf HTTP-Internetressourcen zugreifen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
  </Members>
</Type>