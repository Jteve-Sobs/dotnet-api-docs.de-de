<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ce22bb521447115fa5a3735f5f87b38df5a1216" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82383257" /></Metadata><TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Eigenschaft, ein Ereignis und Methoden für die Interaktion mit dem Netzwerk bereit, an das der Computer angeschlossen ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle sind Beispiele für Aufgaben im Zusammenhang mit dem `My.Computer.Network` Objekt aufgeführt.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Verbindungsstatus überprüfen|[Gewusst wie: Überprüfen des Verbindungsstatus](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Network" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, wird die vorhandene Datei durch die `DownloadFile`-Methode nicht überschrieben. Sie können eine der anderen über Ladungen der <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>-Methode verwenden, um Sie anzuweisen, vorhandene Dateien zu überschreiben, Benutzer Anmelde Informationen anzugeben oder einen bestimmten Timeout Wert anzugeben.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des Standardtimeouts (100 Sekunden).</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, wird die vorhandene Datei durch die `DownloadFile`-Methode nicht überschrieben. Sie können eine der anderen über Ladungen der <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>-Methode verwenden, um Sie anzuweisen, vorhandene Dateien zu überschreiben, Benutzer Anmelde Informationen anzugeben oder einen bestimmten Timeout Wert anzugeben. `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des Standardtimeouts (100 Sekunden).</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, wird die vorhandene Datei durch die `DownloadFile`-Methode nicht überschrieben. Sie können eine der anderen über Ladungen der <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>-Methode verwenden, um Sie anzuweisen, vorhandene Dateien zu überschreiben oder einen bestimmten Timeout Wert anzugeben.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des Standardtimeouts (100 Sekunden).</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, wird die vorhandene Datei durch die `DownloadFile`-Methode nicht überschrieben. Sie können eine der anderen über Ladungen der <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>-Methode verwenden, um Sie anzuweisen, vorhandene Dateien zu überschreiben oder einen bestimmten Timeout Wert anzugeben.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des Standardtimeouts (100 Sekunden).</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><see langword="String" /> oder <see cref="T:System.Uri" /> Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">[https://login.microsoftonline.com/consumers/](<see langword="String" />). Dateiname und Pfad der heruntergeladenen Datei.</param>
        <param name="networkCredentials">[https://login.microsoftonline.com/consumers/](<see cref="T:System.Net.ICredentials" />). Die anzugebenden Anmeldeinformationen.</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="overwrite"><see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, wird ein Dialogfeld angezeigt, das den Fortschritt des Vorgangs anzeigt. Das Dialogfeld enthält die Schaltfläche **Abbrechen** , mit der der Vorgang abgebrochen werden kann. Das Dialogfeld ist nicht modal und blockiert daher keine Benutzereingaben für andere Fenster im Programm.  
  
 Wenn der Server nicht innerhalb des angegebenen `connectionTimeout`antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt, und die Zieldatei ist bereits vorhanden.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">[https://login.microsoftonline.com/consumers/](<see cref="T:System.Int32" />). Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="overwrite"><see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, wird ein Dialogfeld angezeigt, das den Fortschritt des Vorgangs anzeigt. Das Dialogfeld enthält die Schaltfläche **Abbrechen** , mit der der Vorgang abgebrochen werden kann. Das Dialogfeld ist nicht modal und blockiert daher keine Benutzereingaben für andere Fenster im Programm.  
  
 Wenn der Server nicht innerhalb des angegebenen `connectionTimeout`antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt, und die Zieldatei ist bereits vorhanden.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <param name="networkCredentials">Die anzugebenden Anmeldeinformationen.</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="overwrite"><see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="onUserCancel">Gibt das Verhalten beim Klicken auf **Abbrechen** oder **Nein** in dem Dialogfeld an, das angezeigt wird, wenn <paramref name="showUI" /> auf <see langword="True" /> festgelegt ist. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, wird ein Dialogfeld angezeigt, das den Fortschritt des Vorgangs anzeigt. Das Dialogfeld enthält die Schaltfläche **Abbrechen** , mit der der Vorgang abgebrochen werden kann. Das Dialogfeld ist nicht modal und blockiert daher keine Benutzereingaben für andere Fenster im Programm.  
  
 Wenn der Server nicht innerhalb des angegebenen `connectionTimeout`antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt, und die Zieldatei ist bereits vorhanden.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="overwrite"><see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, wird ein Dialogfeld angezeigt, das den Fortschritt des Vorgangs anzeigt. Das Dialogfeld enthält die Schaltfläche **Abbrechen** , mit der der Vorgang abgebrochen werden kann. Das Dialogfeld ist nicht modal und blockiert daher keine Benutzereingaben für andere Fenster im Programm.  
  
 Wenn der Server nicht innerhalb des angegebenen `connectionTimeout`antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt, und die Zieldatei ist bereits vorhanden.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="overwrite"><see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="onUserCancel">Gibt das Verhalten beim Klicken auf **Abbrechen** oder **Nein** in dem Dialogfeld an, das angezeigt wird, wenn <c>ShowUI</c> auf <see langword="True" /> festgelegt ist. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, wird ein Dialogfeld angezeigt, das den Fortschritt des Vorgangs anzeigt. Das Dialogfeld enthält die Schaltfläche **Abbrechen** , mit der der Vorgang abgebrochen werden kann. Das Dialogfeld ist nicht modal und blockiert daher keine Benutzereingaben für andere Fenster im Programm.  
  
 Wenn der Server nicht innerhalb des angegebenen `connectionTimeout`antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt, und die Zieldatei ist bereits vorhanden.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Der Pfad der Datei, die heruntergeladen werden soll, einschließlich des Dateinamens und der Hostadresse.</param>
        <param name="destinationFileName">Dateiname und Pfad der heruntergeladenen Datei.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge ("").</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="overwrite"><see langword="True" />, wenn vorhandene Dateien überschrieben werden sollen, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="onUserCancel">Gibt das Verhalten beim Klicken auf **Abbrechen** oder **Nein** in dem Dialogfeld an, das angezeigt wird, wenn <c>ShowUI</c> auf <see langword="True" /> festgelegt ist. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Lädt die angegebene Remotedatei herunter und speichert sie am angegebenen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, wird ein Dialogfeld angezeigt, das den Fortschritt des Vorgangs anzeigt. Das Dialogfeld enthält die Schaltfläche **Abbrechen** , mit der der Vorgang abgebrochen werden kann. Das Dialogfeld ist nicht modal und blockiert daher keine Benutzereingaben für andere Fenster im Programm.  
  
 Wenn der Server nicht innerhalb des angegebenen `connectionTimeout`antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `DownloadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Die `DownloadFile`-Methode sendet keine optionalen HTTP-Header. Einige Server geben möglicherweise 500 (interner Server Fehler) zurück, wenn der optionale Header des Benutzer-Agents fehlt. Um optionale Header zu senden, müssen Sie eine Anforderung mit der <xref:System.Net.WebClient>-Klasse erstellen.  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.DownloadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Herunterladen einer Datei|[Gewusst wie: Herunterladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 In diesem Beispiel wird die Datei `WineList.txt` aus `http://www.cohowinery.com/downloads` heruntergeladen und in `C:\Documents and Settings\All Users\Documents`gespeichert. dabei wird ein Timeout Intervall von 500 Millisekunden angegeben.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> endet mit einem nachgestellten Schrägstrich.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> ist auf <see langword="False" /> festgelegt, und die Zieldatei ist bereits vorhanden.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob ein Computer mit einem Netzwerk verbunden ist.</summary>
        <value><see langword="True" />, wenn der Computer mit einem Netzwerk verbunden ist, andernfalls <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` immer `False` zurück, wenn er von einer `Click Once` Anwendung aufgerufen wird, oder wenn der Benutzer nicht über <xref:System.Net.NetworkInformation.NetworkInformationPermission>verfügt.  
  
 In der folgenden Tabelle sind Beispiele für Aufgaben aufgeführt, die die `My.Computer.Network.IsAvailable`-Eigenschaft betreffen.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Überprüfen, ob ein Computer mit einem Netzwerk verbunden ist|[Gewusst wie: Überprüfen des Verbindungsstatus](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird der Status der Eigenschaft überprüft und berichtet.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich die Netzwerkverfügbarkeit ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung löst das `NetworkAvailabilityChanged`-Ereignis aus, wenn sich die Verfügbarkeit des Netzwerks ändert. Sie können die <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>-Eigenschaft des `e`-Parameters verwenden, um den neuen Status der Netzwerkverbindung zu erhalten. Um den aktuellen Status der Netzwerkverbindung zu erhalten, verwenden Sie die <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>-Eigenschaft.  
  
 In einer Windows Forms Anwendung wird dieses Ereignis für den Haupt Thread der Anwendung mit den anderen Benutzeroberflächen Ereignissen ausgelöst. Dadurch kann der Ereignishandler direkt auf die Benutzeroberfläche der Anwendung zugreifen. Wenn die Anwendung jedoch mit der Behandlung eines anderen Benutzeroberflächen Ereignisses beschäftigt ist, wenn dieses Ereignis ausgelöst wird, kann dieses Ereignis erst verarbeitet werden, wenn der andere Ereignishandler die <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>-Methode beendet oder aufruft.  
  
 Die `Handles`-Anweisung kann nicht verwendet werden, um das `NetworkAvailabilityChanged`-Ereignis zu behandeln. Sie müssen die `AddHandler`-Anweisung verwenden.  
  
 In Windows Forms-Anwendungen macht das `MyApplication`-Objekt ein `NetworkAvailabilityChanged` Ereignis verfügbar, das die gleiche Funktionalität wie dieses Ereignis bereitstellt, aber Sie können es mit der `Handles`-Anweisung behandeln.  
  
> [!NOTE]
>  Viele Netzwerk Hubs bieten eine Netzwerkverbindung, auch wenn der Hub von einem größeren Netzwerk getrennt ist. Folglich deutet dieses Ereignis bei verdrahteten Verbindungen auf eine Änderung der Verbindung zwischen dem Computer und einem Hub hin.  
  
## Examples  
 In diesem Beispiel wird das `My.Computer.Network.NetworkAvailabilityChanged`-Ereignis verwendet, um die Benutzeroberfläche eines Formulars oder Steuer Elements zu aktualisieren.  
  
 Dieser Code sollte sich in einem Formular oder Steuerelement mit einem <xref:System.Windows.Forms.Label> namens `Label1`befinden.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sendet ein Ping-Signal an den angegebenen Server.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Die URL, der Computername oder die IP-Adresse des Servers, an den ein Ping-Signal gesendet werden soll.</param>
        <summary>Sendet ein Ping-Signal an den angegebenen Server.</summary>
        <returns><see langword="True" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Ping`-Methode ist keine ausfallsichere Methode zum Ermitteln der Verfügbarkeit eines Remote Computers: der Ping-Port auf dem Zielcomputer ist möglicherweise ausgeschaltet, oder die Ping-Anforderung wird von einer Firewall oder einem Router blockiert.  
  
 Die an die `Ping` Methode über gegebene Adresse muss DNS-lösbar sein und darf nicht "http://" vorangestellt sein.  
  
   
  
## Examples  
 In diesem Beispiel wird angegeben, ob der Server gepingt werden kann, indem ermittelt wird, ob die `Ping`-Methode `True`zurückgibt.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Ersetzen Sie `"198.01.01.01"` durch die IP-Adresse, die URL oder den Computernamen des Servers, den Sie Pingen möchten.  
  
 In diesem Beispiel wird angegeben, ob der Server gepingt werden kann, indem ermittelt wird, ob die `Ping` Methode `True` zurückgegeben hat, und gibt ein Timeout Intervall von 1000 Millisekunden an.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Ersetzen Sie `"www.cohowinery.com"` durch die IP-Adresse, die URL oder den Computernamen des Servers, den Sie Pingen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist keine Netzwerkverbindung verfügbar.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Die URL war nicht gültig.</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der URI des Servers, an den ein Ping-Signal gesendet werden soll.</param>
        <summary>Sendet ein Ping-Signal an den angegebenen Server.</summary>
        <returns><see langword="True" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Ping`-Methode ist keine ausfallsichere Methode zum Ermitteln der Verfügbarkeit eines Remote Computers: der Ping-Port auf dem Zielcomputer ist möglicherweise ausgeschaltet, oder die Ping-Anforderung wird von einer Firewall oder einem Router blockiert.  
  
 Die an die `Ping` Methode über gegebene Adresse muss DNS-lösbar sein und darf nicht "http://" vorangestellt sein.  
  
   
  
## Examples  
 In diesem Beispiel wird angegeben, ob der Server gepingt werden kann, indem ermittelt wird, ob die `Ping`-Methode `True`zurückgibt.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Ersetzen Sie `"198.01.01.01"` durch die IP-Adresse, die URL oder den Computernamen des Servers, den Sie Pingen möchten.  
  
 In diesem Beispiel wird angegeben, ob der Server gepingt werden kann, indem ermittelt wird, ob die `Ping` Methode `True` zurückgegeben hat, und gibt ein Timeout Intervall von 1000 Millisekunden an.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Ersetzen Sie `"www.cohowinery.com"` durch die IP-Adresse, die URL oder den Computernamen des Servers, den Sie Pingen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist keine Netzwerkverbindung verfügbar.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Die URL war nicht gültig.</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Die URL, der Computername oder die IP-Adresse des Servers, an den ein Ping-Signal gesendet werden soll.</param>
        <param name="timeout">Zeitgrenzwert (in Millisekunden) für das Herstellen einer Verbindung mit dem Ziel. Der Standardwert ist 500.</param>
        <summary>Sendet ein Ping-Signal an den angegebenen Server.</summary>
        <returns><see langword="True" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Ping`-Methode ist keine ausfallsichere Methode zum Ermitteln der Verfügbarkeit eines Remote Computers: der Ping-Port auf dem Zielcomputer ist möglicherweise ausgeschaltet, oder die Ping-Anforderung wird von einer Firewall oder einem Router blockiert.  
  
 Die an die `Ping` Methode über gegebene Adresse muss DNS-lösbar sein und darf nicht "http://" vorangestellt sein.  
  
   
  
## Examples  
 In diesem Beispiel wird angegeben, ob der Server gepingt werden kann, indem ermittelt wird, ob die `Ping`-Methode `True`zurückgibt.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Ersetzen Sie `"198.01.01.01"` durch die IP-Adresse, die URL oder den Computernamen des Servers, den Sie Pingen möchten.  
  
 In diesem Beispiel wird angegeben, ob der Server gepingt werden kann, indem ermittelt wird, ob die `Ping` Methode `True` zurückgegeben hat, und gibt ein Timeout Intervall von 1000 Millisekunden an.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Ersetzen Sie `"www.cohowinery.com"` durch die IP-Adresse, die URL oder den Computernamen des Servers, den Sie Pingen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist keine Netzwerkverbindung verfügbar.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Die URL war nicht gültig.</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">Der URI des Servers, an den ein Ping-Signal gesendet werden soll.</param>
        <param name="timeout">Zeitgrenzwert (in Millisekunden) für das Herstellen einer Verbindung mit dem Ziel. Der Standardwert ist 500.</param>
        <summary>Sendet ein Ping-Signal an den angegebenen Server.</summary>
        <returns><see langword="True" />, wenn der Vorgang erfolgreich war, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Ping`-Methode ist keine ausfallsichere Methode zum Ermitteln der Verfügbarkeit eines Remote Computers: der Ping-Port auf dem Zielcomputer ist möglicherweise ausgeschaltet, oder die Ping-Anforderung wird von einer Firewall oder einem Router blockiert.  
  
 Die an die `Ping` Methode über gegebene Adresse muss DNS-lösbar sein und darf nicht "http://" vorangestellt sein.  
  
   
  
## Examples  
 In diesem Beispiel wird angegeben, ob der Server gepingt werden kann, indem ermittelt wird, ob die `Ping`-Methode `True`zurückgibt.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Ersetzen Sie `"198.01.01.01"` durch die IP-Adresse, die URL oder den Computernamen des Servers, den Sie Pingen möchten.  
  
 In diesem Beispiel wird angegeben, ob der Server gepingt werden kann, indem ermittelt wird, ob die `Ping` Methode `True` zurückgegeben hat, und gibt ein Timeout Intervall von 1000 Millisekunden an.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Ersetzen Sie `"www.cohowinery.com"` durch die IP-Adresse, die URL oder den Computernamen des Servers, den Sie Pingen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist keine Netzwerkverbindung verfügbar.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Die URL war nicht gültig.</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine der anderen über Ladungen der <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>-Methode verwenden, um Benutzer Anmelde Informationen bereitzustellen oder einen bestimmten Timeout Wert anzugeben.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Pfad der QUuelldatei ist nicht gültig.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des Standardtimeouts (100 Sekunden).</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine der anderen über Ladungen der <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>-Methode verwenden, um Benutzer Anmelde Informationen bereitzustellen oder einen bestimmten Timeout Wert anzugeben.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Pfad der QUuelldatei ist nicht gültig.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des Standardtimeouts (100 Sekunden).</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine der anderen über Ladungen der <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>-Methode verwenden, um einen bestimmten Timeout Wert anzugeben.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des Standardtimeouts (100 Sekunden).</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine der anderen über Ladungen der <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>-Methode verwenden, um einen bestimmten Timeout Wert anzugeben.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des Standardtimeouts (100 Sekunden).</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <param name="networkCredentials">Die Anmeldeinformationen für die Authentifizierung.</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, zeigt ein Dialogfeld den Fortschritt des Vorgangs an und enthält eine Schaltfläche **Abbrechen** , auf die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, werden Benutzereingaben für andere Fenster im Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb des in `connectionTimeout`angegebenen Intervalls antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, zeigt ein Dialogfeld den Fortschritt des Vorgangs an und enthält eine Schaltfläche **Abbrechen** , auf die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, werden Benutzereingaben für andere Fenster im Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb des in `connectionTimeout`angegebenen Intervalls antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <param name="networkCredentials">Die Anmeldeinformationen für die Authentifizierung.</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="onUserCancel">Aktion, die ausgeführt werden soll, wenn der Benutzer auf **Abbrechen** klickt. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, zeigt ein Dialogfeld den Fortschritt des Vorgangs an und enthält eine Schaltfläche **Abbrechen** , auf die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, werden Benutzereingaben für andere Fenster im Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb des in `connectionTimeout`angegebenen Intervalls antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="showUI"><see langword="True" />, wenn der Status des Vorgangs angezeigt werden soll, andernfalls <see langword="False" />. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, zeigt ein Dialogfeld den Fortschritt des Vorgangs an und enthält eine Schaltfläche **Abbrechen** , auf die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, werden Benutzereingaben für andere Fenster im Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb des in `connectionTimeout`angegebenen Intervalls antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="showUI">Gibt an, ob der Status des Vorgangs angezeigt werden soll. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="onUserCancel">Aktion, die ausgeführt werden soll, wenn der Benutzer auf **Abbrechen** klickt. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, zeigt ein Dialogfeld den Fortschritt des Vorgangs an und enthält eine Schaltfläche **Abbrechen** , auf die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, werden Benutzereingaben für andere Fenster im Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb des in `connectionTimeout`angegebenen Intervalls antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Pfad und Name der Datei, die hochgeladen werden soll.</param>
        <param name="address">URL, IP-Adresse oder URI des Zielservers.</param>
        <param name="userName">Benutzername, der authentifiziert werden soll. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="password">Das zu authentifizierende Kennwort. Der Standardwert ist eine leere Zeichenfolge: <c>""</c>.</param>
        <param name="showUI">Gibt an, ob der Status des Vorgangs angezeigt werden soll. Der Standardwert ist <see langword="False" />.</param>
        <param name="connectionTimeout">Timeoutintervall in Millisekunden. Der Standardwert beträgt 100 Sekunden.</param>
        <param name="onUserCancel">Aktion, die ausgeführt werden soll, wenn der Benutzer auf **Abbrechen** klickt. Der Standardwert ist <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sendet die angegebene Datei an die angegebene Hostadresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `showUI` auf `True`festgelegt ist, zeigt ein Dialogfeld den Fortschritt des Vorgangs an und enthält eine Schaltfläche **Abbrechen** , auf die der Benutzer klicken kann, um den Vorgang abzubrechen. Da das Dialogfeld nicht modal ist, werden Benutzereingaben für andere Fenster im Programm nicht blockiert.  
  
 Wenn der Server nicht innerhalb des in `connectionTimeout`angegebenen Intervalls antwortet, wird der Vorgang abgebrochen, und es wird eine Ausnahme ausgelöst.  
  
 `My.Computer.Network.UploadFile` gibt Ablauf Verfolgungs Informationen aus, wenn Sie die Netzwerk Ablauf Verfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Aktivieren der Netzwerk Ablauf Verfolgung](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Das FTP-Protokoll sendet Informationen, einschließlich Kenn Wörtern, als nur-Text und sollte nicht zum Übertragen von sensiblen Informationen verwendet werden.  
  
 In der folgenden Tabelle wird ein Beispiel für eine Aufgabe mit der `My.Computer.Network.UploadFile`-Methode aufgelistet.  
  
|Zweck|Informationen finden Sie unter .|  
|-|-|  
|Hochladen einer Datei|[Gewusst wie: Hochladen einer Datei](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird die Datei `Order.txt` in `http://www.cohowinery.com/uploads`hochgeladen.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 In diesem Beispiel wird `Order.txt` ohne Benutzername und Kennwort in `http://www.cohowinery.com/uploads` hochgeladen. Der Hochladeprozess wird gezeigt. Das Timeoutintervall beträgt 500 Millisekunden.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> ist kleiner gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> enthält keinen Dateinamen.</exception>
        <exception cref="T:System.Security.SecurityException">Einem Benutzer fehlen notwendige Berechtigungen, um eine Netzwerkoperation auszuführen.</exception>
        <exception cref="T:System.TimeoutException">Der Server antwortet nicht innerhalb des angegebenen <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Die Anforderung wurde vom Zielwebserver abgelehnt.</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objekte (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Gewusst wie: Downloaden einer Datei in Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Gewusst wie: Analysieren von Dateipfaden in Visual Basic</related>
      </Docs>
    </Member>
  </Members>
</Type>
