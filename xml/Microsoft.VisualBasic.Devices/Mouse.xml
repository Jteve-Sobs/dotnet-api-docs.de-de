<Type Name="Mouse" FullName="Microsoft.VisualBasic.Devices.Mouse">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a81d91e8f2762f425f995013d571622186aa469e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36727507" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse" />
  <TypeSignature Language="F#" Value="type Mouse = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Eigenschaften zum Abrufen von Informationen über das Format und die Konfiguration der auf dem lokalen Computer installierten Maus bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Mouse` Objekt bietet eine Möglichkeit zum Suchen von Informationen über die Maus des Computers: Gibt an, ob der Maustasten ausgetauscht werden, und Details über das Mausrad.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Computer.Mouse.WheelExists` und `My.Computer.Mouse.WheelScrollLines` Eigenschaften, um zu bestimmen, ob die Maus über ein Mausrad verfügt und wie viel Bildlauf beim Drehen.  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Mouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Mouse.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mouse();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Devices.Mouse" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Mouse` Objekt bietet eine Möglichkeit zum Suchen von Informationen über die Maus des Computers: Gibt an, ob die Maustaste vertauscht wurden und Details über das Mausrad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonsSwapped">
      <MemberSignature Language="C#" Value="public bool ButtonsSwapped { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ButtonsSwapped" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ButtonsSwapped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ButtonsSwapped { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ButtonsSwapped : bool" Usage="Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see langword="Boolean" />-Wert ab, der angibt, ob die Funktionen der linken und der rechten Maustaste vertauscht wurden.</summary>
        <value>Ein <see langword="Boolean" /> mit dem Wert <see langword="True" />, wenn die Funktionen der linken und der rechten Maustaste vertauscht wurden, andernfalls <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Mouse.ButtonsSwapped` Eigenschaft:  
  
-   Bietet ähnliche Funktionen der <xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A> Eigenschaft.  
  
-   Enthält Informationen über den Computer, der den Code ausgeführt wird.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Computer.Mouse.ButtonsSwapped` Eigenschaft, um zu bestimmen, ob die Funktionen der linken und rechten Maustaste vertauscht wurden.  
  
 [!code-vb[VbVbalrMyComputer#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Auf dem Computer ist keine Maus installiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="WheelExists">
      <MemberSignature Language="C#" Value="public bool WheelExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WheelExists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WheelExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WheelExists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.WheelExists : bool" Usage="Microsoft.VisualBasic.Devices.Mouse.WheelExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see langword="Boolean" />-Wert ab, der angibt, ob die Maus ein Mausrad aufweist.</summary>
        <value>Ein Boolean mit dem Wert <see langword="True" />, wenn die Maus über ein Mausrad verfügt, andernfalls <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Computer.Mouse.WheelExists` Eigenschaft bietet ähnliche Funktionen der <xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A> Eigenschaft.  
  
 Überprüfen Sie den Wert von der `My.Computer.Mouse.WheelExists` Eigenschaft, bevor Sie versuchen, den Zugriff auf die <xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A> -Eigenschaft, die eine Ausnahme auslöst, wenn die Maus nicht über ein Mausrad verfügt.  
  
 Die `My.Computer.Mouse.WheelExists` Eigenschaft enthält Informationen über den Computer, der den Code ausgeführt wird.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `My.Computer.Mouse.WheelExists` -Eigenschaft können Sie bestimmen, ob die Maus über ein Mausrad verfügt und wie viel Bildlauf, wenn das Mausrad gedreht wird.  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Auf dem Computer ist keine Maus installiert.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines" />
      </Docs>
    </Member>
    <Member MemberName="WheelScrollLines">
      <MemberSignature Language="C#" Value="public int WheelScrollLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WheelScrollLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WheelScrollLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WheelScrollLines { int get(); };" />
      <MemberSignature Language="F#" Value="member this.WheelScrollLines : int" Usage="Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zahl ab, die den Umfang des Bildlaufes beim Drehen des Mausrades um eine Kerbe angibt.</summary>
        <value>Ein <see langword="Integer" />, der den Umfang des Bildlaufes beim Drehen des Mausrades um eine Kerbe angibt. Ein positiver Wert gibt einen Bildlauf um diese Anzahl von Zeilen an, während ein negativer Wert angibt, dass ein Bildlauf um einen ganzen Bildschirm durchgeführt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um zu bestimmen, wie viele Zeilen nach oben oder unten in einem Steuerelement für mehrzeilige Blättern, die einer Bildlaufleiste.  
  
 Die `My.Computer.Mouse.WheelScrollLines` Eigenschaft bietet ähnliche Funktionen der <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A> Eigenschaft.  
  
 Da diese Eigenschaft eine Ausnahme auslöst, wenn die Maus nicht über ein Mausrad verfügt, stellen Sie sicher eine Maus verfügt über ein Mausrad durch Überprüfen der `My.Computer.Mouse.WheelExists` Eigenschaft.  
  
 Diese Eigenschaft bietet Informationen über den Computer, der den Code ausgeführt wird.  
  
## <a name="availability-by-project-type"></a>Verfügbarkeit nach Projekttyp  
  
|Projekttyp:|Verfügbar|  
|-|-|  
|Windows-Anwendung|**Ja**|  
|Klassenbibliothek|**Ja**|  
|Konsolenanwendung|**Ja**|  
|Windows-Steuerelementbibliothek|**Ja**|  
|Websteuerelementbibliothek|Nein|  
|Windows-Dienst|**Ja**|  
|Website|Nein|  
  
   
  
## Examples  
 In diesem Beispiel wird ermittelt, ob die Maus, ein Mausrad verfügt, und verwendet die `My.Computer.Mouse.WheelExists` Eigenschaft zum Ermitteln des anfallenden beim Drehen des Mausrads ein scrollvorgang ausgeführt werden.  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Maus verfügt über kein Bildlaufrad.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists" />
      </Docs>
    </Member>
  </Members>
</Type>