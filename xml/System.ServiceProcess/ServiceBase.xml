<Type Name="ServiceBase" FullName="System.ServiceProcess.ServiceBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21e8d4ef3662555c3b91cf266991168a0da9fc42" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48707023" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceBase : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBase extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBase&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceBase : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ServiceBase = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.ServiceProcess.ServiceProcessInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.UserNTServiceDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IRootDesigner")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c9195-101">Stellt eine Basisklasse für einen Dienst als Teil einer Dienstanwendung bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9195-101">Provides a base class for a service that will exist as part of a service application.</span>
      </span>
      <span data-ttu-id="c9195-102">
        <see cref="T:System.ServiceProcess.ServiceBase" /> muss abgeleitet werden, wenn eine neue Dienstklasse erstellt wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9195-102">
          <see cref="T:System.ServiceProcess.ServiceBase" /> must be derived from when creating a new service class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-103">Leiten Sie von <xref:System.ServiceProcess.ServiceBase> beim Definieren Ihrer Dienstklasse in einer dienstanwendung.</span><span class="sxs-lookup"><span data-stu-id="c9195-103">Derive from <xref:System.ServiceProcess.ServiceBase> when defining your service class in a service application.</span></span> <span data-ttu-id="c9195-104">Sinnvoller Dienst Außerkraftsetzungen der <xref:System.ServiceProcess.ServiceBase.OnStart%2A> und <xref:System.ServiceProcess.ServiceBase.OnStop%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="c9195-104">Any useful service overrides the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods.</span></span> <span data-ttu-id="c9195-105">Sie können zusätzliche Funktionen, überschreiben <xref:System.ServiceProcess.ServiceBase.OnPause%2A> und <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> mit bestimmten Verhalten als Reaktion auf Änderungen in den Status des Dienstes.</span><span class="sxs-lookup"><span data-stu-id="c9195-105">For additional functionality, you can override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> with specific behavior in response to changes in the service state.</span></span>  
  
 <span data-ttu-id="c9195-106">Ein Dienst ist eine lang ausgeführte ausführbare Datei, die Benutzeroberfläche nicht unterstützt und welche möglicherweise nicht unter dem Konto des angemeldeten Benutzers ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c9195-106">A service is a long-running executable that does not support a user interface, and which might not run under the logged-on user account.</span></span> <span data-ttu-id="c9195-107">Der Dienst kann ohne beliebiger Benutzer angemeldet wird, auf dem Computer ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="c9195-107">The service can run without any user being logged on to the computer.</span></span>  
  
 <span data-ttu-id="c9195-108">Führen in der Standardeinstellung Dienste unter dem Konto System, das nicht ist identisch mit dem Administratorkonto an.</span><span class="sxs-lookup"><span data-stu-id="c9195-108">By default, services run under the System account, which is not the same as the Administrator account.</span></span> <span data-ttu-id="c9195-109">Sie können die Rechte von dem Konto System nicht ändern.</span><span class="sxs-lookup"><span data-stu-id="c9195-109">You cannot change the rights of the System account.</span></span> <span data-ttu-id="c9195-110">Alternativ können Sie verwenden eine <xref:System.ServiceProcess.ServiceProcessInstaller> an ein Benutzerkonto, unter dem der Dienst ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-110">Alternatively, you can use a <xref:System.ServiceProcess.ServiceProcessInstaller> to specify a user account under which the service will run.</span></span>  
  
 <span data-ttu-id="c9195-111">Eine ausführbare Datei kann mehr als ein Dienst muss enthalten allerdings ein separates <xref:System.ServiceProcess.ServiceInstaller> für jeden Dienst.</span><span class="sxs-lookup"><span data-stu-id="c9195-111">An executable can contain more than one service but must contain a separate <xref:System.ServiceProcess.ServiceInstaller> for each service.</span></span> <span data-ttu-id="c9195-112">Die <xref:System.ServiceProcess.ServiceInstaller> Instanz registriert den Dienst im System.</span><span class="sxs-lookup"><span data-stu-id="c9195-112">The <xref:System.ServiceProcess.ServiceInstaller> instance registers the service with the system.</span></span> <span data-ttu-id="c9195-113">Das Installationsprogramm ordnet jedem Dienst mit einem Ereignisprotokoll, die Sie zum Zeichnen-Befehle verwenden können.</span><span class="sxs-lookup"><span data-stu-id="c9195-113">The installer also associates each service with an event log that you can use to record service commands.</span></span> <span data-ttu-id="c9195-114">Die `main()` Funktion in der ausführbaren Datei definiert, welche Dienste ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c9195-114">The `main()` function in the executable defines which services should run.</span></span> <span data-ttu-id="c9195-115">Das aktuelle Arbeitsverzeichnis des Diensts ist das Systemverzeichnis und nicht das Verzeichnis, in dem sich die ausführbare Datei befindet.</span><span class="sxs-lookup"><span data-stu-id="c9195-115">The current working directory of the service is the system directory, not the directory in which the executable is located.</span></span>  
  
 <span data-ttu-id="c9195-116">Wenn Sie einen Dienst starten, wird das System sucht nach der ausführbaren Datei und führt die <xref:System.ServiceProcess.ServiceBase.OnStart%2A> Methode für diesen Dienst, in die ausführbare Datei enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="c9195-116">When you start a service, the system locates the executable and runs the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method for that service, contained within the executable.</span></span> <span data-ttu-id="c9195-117">Allerdings ist der Dienst ausgeführt wird nicht dasselbe wie das Ausführen der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="c9195-117">However, running the service is not the same as running the executable.</span></span> <span data-ttu-id="c9195-118">Die ausführbare Datei lädt nur den Dienst.</span><span class="sxs-lookup"><span data-stu-id="c9195-118">The executable only loads the service.</span></span> <span data-ttu-id="c9195-119">Der Dienst wird über den Dienststeuerungs-Manager (z. B. gestartet oder beendet) zugegriffen.</span><span class="sxs-lookup"><span data-stu-id="c9195-119">The service is accessed (for example, started and stopped) through the Service Control Manager.</span></span>  
  
 <span data-ttu-id="c9195-120">Die ausführbare Datei ruft der <xref:System.ServiceProcess.ServiceBase> abgeleitete Klasse Konstruktor das erste Mal auf den Dienst starten aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c9195-120">The executable calls the <xref:System.ServiceProcess.ServiceBase> derived class's constructor the first time you call Start on the service.</span></span> <span data-ttu-id="c9195-121">Die <xref:System.ServiceProcess.ServiceBase.OnStart%2A> Befehlsbehandlung Methode wird aufgerufen, unmittelbar nach dem Ausführen des Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="c9195-121">The <xref:System.ServiceProcess.ServiceBase.OnStart%2A> command-handling method is called immediately after the constructor executes.</span></span> <span data-ttu-id="c9195-122">Der Konstruktor wird nicht nach der ersten Zeit, die der Dienst geladen wurde, erneut ausgeführt, daher ist es erforderlich, trennen Sie die Verarbeitung durch den Konstruktor aus, die ausgeführt werden, indem <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-122">The constructor is not executed again after the first time the service has been loaded, so it is necessary to separate the processing performed by the constructor from that performed by <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="c9195-123">Alle Ressourcen, die durch freigegeben werden können <xref:System.ServiceProcess.ServiceBase.OnStop%2A> erstellt werden soll, im <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-123">Any resources that can be released by <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should be created in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="c9195-124">Erstellen von Ressourcen im Konstruktor verhindert, dass sie ordnungsgemäß erstellt wird, wenn der Dienst, später gestartet wurde <xref:System.ServiceProcess.ServiceBase.OnStop%2A> Freigabe der Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="c9195-124">Creating resources in the constructor prevents them from being created properly if the service is started again after <xref:System.ServiceProcess.ServiceBase.OnStop%2A> has released the resources.</span></span>  
  
 <span data-ttu-id="c9195-125">Das Service Control Manager (SCM) bietet eine Möglichkeit, mit dem Dienst interagieren.</span><span class="sxs-lookup"><span data-stu-id="c9195-125">The Service Control Manager (SCM) provides a way to interact with the service.</span></span> <span data-ttu-id="c9195-126">Sie können den dienststeuerungs-Manager verwenden, zu starten, beenden, anhalten, fortsetzen oder benutzerdefinierte Befehle an den Dienst übergeben.</span><span class="sxs-lookup"><span data-stu-id="c9195-126">You can use the SCM to pass Start, Stop, Pause, Continue, or custom commands into the service.</span></span> <span data-ttu-id="c9195-127">Dienststeuerungs-Manager verwendet die Werte der <xref:System.ServiceProcess.ServiceBase.CanStop%2A> und <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> um zu bestimmen, ob der Dienst, beenden akzeptiert, Anhalten oder Fortsetzen von Befehlen.</span><span class="sxs-lookup"><span data-stu-id="c9195-127">The SCM uses the values of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> and <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to determine whether the service accepts Stop, Pause, or Continue commands.</span></span> <span data-ttu-id="c9195-128">Beenden, Anhalten und fortsetzen aktiviert sind, in den dienststeuerungs-Manager-Kontext Menüs nur, wenn die entsprechende Eigenschaft <xref:System.ServiceProcess.ServiceBase.CanStop%2A> oder <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `true` in der Dienstklasse.</span><span class="sxs-lookup"><span data-stu-id="c9195-128">Stop, Pause, and Continue are enabled in the SCM's context menus only if the corresponding property <xref:System.ServiceProcess.ServiceBase.CanStop%2A> or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` in the service class.</span></span> <span data-ttu-id="c9195-129">Wenn aktiviert, wird der Befehl an den Dienst übergeben und <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, oder <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-129">If enabled, the command is passed to the service, and <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is called.</span></span> <span data-ttu-id="c9195-130">Wenn <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, oder <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `false`, die entsprechende Methode für die Behandlung von Befehlen (z. B. <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) wird nicht verarbeitet werden, auch wenn Sie die Methode implementiert haben.</span><span class="sxs-lookup"><span data-stu-id="c9195-130">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) will not be processed, even if you have implemented the method.</span></span>  
  
 <span data-ttu-id="c9195-131">Sie können die <xref:System.ServiceProcess.ServiceController> Klasse programmgesteuert welche dienststeuerungs-Manager, verfügt über eine Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="c9195-131">You can use the <xref:System.ServiceProcess.ServiceController> class to do programmatically what the SCM does using a user interface.</span></span> <span data-ttu-id="c9195-132">Sie können in der Konsole verfügbaren Tasks automatisieren.</span><span class="sxs-lookup"><span data-stu-id="c9195-132">You can automate the tasks available in the console.</span></span> <span data-ttu-id="c9195-133">Wenn <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, oder <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `true` jedoch eine entsprechende Befehlsbehandlung-Methode nicht implementiert haben (z. B. <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) das System löst eine Ausnahme aus und ignoriert den Befehl.</span><span class="sxs-lookup"><span data-stu-id="c9195-133">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` but you have not implemented a corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) the system throws an exception and ignores the command.</span></span>  
  
 <span data-ttu-id="c9195-134">Sie müssen keine implementieren <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, oder eine andere Methode im <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="c9195-134">You do not have to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, or any other method in <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="c9195-135">Verhalten des Diensts wird jedoch beschrieben, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, sodass mindestens dieser Member überschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="c9195-135">However, the service's behavior is described in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, so at minimum, this member should be overridden.</span></span> <span data-ttu-id="c9195-136">Die `main()` Funktion der ausführbaren Datei registriert den Dienst in der ausführbaren Datei mit dem Dienststeuerungs-Manager durch Aufrufen der <xref:System.ServiceProcess.ServiceBase.Run%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c9195-136">The `main()` function of the executable registers the service in the executable with the Service Control Manager by calling the <xref:System.ServiceProcess.ServiceBase.Run%2A> method.</span></span> <span data-ttu-id="c9195-137">Die <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> Eigenschaft der <xref:System.ServiceProcess.ServiceBase> , übergeben die <xref:System.ServiceProcess.ServiceBase.Run%2A> Methode entsprechen muss die <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> Eigenschaft das Dienstinstallationsprogramm für diesen Dienst.</span><span class="sxs-lookup"><span data-stu-id="c9195-137">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> property of the <xref:System.ServiceProcess.ServiceBase> object passed to the <xref:System.ServiceProcess.ServiceBase.Run%2A> method must match the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the service installer for that service.</span></span>  
  
 <span data-ttu-id="c9195-138">Sie können `InstallUtil.exe` Dienste auf Ihrem System installieren.</span><span class="sxs-lookup"><span data-stu-id="c9195-138">You can use `InstallUtil.exe` to install services on your system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9195-139">Sie können angeben, dass ein anderes Protokoll als das Ereignisprotokoll der Anwendung zum Empfangen von Benachrichtigungen über Dienstaufrufe, aber keine der <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> noch die <xref:System.ServiceProcess.ServiceBase.EventLog%2A> Eigenschaft in ein benutzerdefiniertes Protokoll schreiben.</span><span class="sxs-lookup"><span data-stu-id="c9195-139">You can specify a log other than the Application event log to receive notification of service calls, but neither the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> nor the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property can write to a custom log.</span></span> <span data-ttu-id="c9195-140">Legen Sie <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> zu `false` , wenn Sie keine automatische Protokollierung verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="c9195-140">Set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` if you do not want to use automatic logging.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9195-141">Erstellt eine neue Instanz der <see cref="T:System.ServiceProcess.ServiceBase" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-141">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-142">Erstellen Sie eine Instanz der nicht der <xref:System.ServiceProcess.ServiceBase> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c9195-142">Do not create an instance of the <xref:System.ServiceProcess.ServiceBase> class.</span></span> <span data-ttu-id="c9195-143">Leiten Sie stattdessen von <xref:System.ServiceProcess.ServiceBase> und die abgeleitete Klasse zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="c9195-143">Instead, derive from <xref:System.ServiceProcess.ServiceBase> and instantiate your derived class.</span></span> <span data-ttu-id="c9195-144">Das Minimum implementiert werden müssen im Konstruktor für eine Klasse von geerbt <xref:System.ServiceProcess.ServiceBase> Festlegen der <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> in der Komponente.</span><span class="sxs-lookup"><span data-stu-id="c9195-144">The minimum you need to implement in the constructor for a class inherited from <xref:System.ServiceProcess.ServiceBase> is to set the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> on your component.</span></span> <span data-ttu-id="c9195-145">Ohne weitere Verarbeitung ist insbesondere in den Konstruktor erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c9195-145">No other processing is specifically required in the constructor.</span></span> <span data-ttu-id="c9195-146">Sie sollten die meisten Initialisierung in behandeln <xref:System.ServiceProcess.ServiceBase.OnStart%2A> anstatt im Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="c9195-146">You should handle most initialization in <xref:System.ServiceProcess.ServiceBase.OnStart%2A> rather than in the constructor.</span></span> <span data-ttu-id="c9195-147">Andernfalls besteht keine Garantie dafür, die die Objekte erneut initialisiert werden, wenn Sie einen Dienst neu starten, nachdem er beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="c9195-147">Otherwise, there is no guarantee the objects will be reinitialized when you restart a service after it has been stopped.</span></span>  
  
 <span data-ttu-id="c9195-148">Wenn Sie den Konstruktor in der abgeleiteten Klasse überschreiben, rufen Sie den Basisklassenkonstruktor in Ihrem Code.</span><span class="sxs-lookup"><span data-stu-id="c9195-148">If you override the constructor in your derived class, call the base class constructor in your code.</span></span>  
  
 <span data-ttu-id="c9195-149">Die <xref:System.ServiceProcess.ServiceBase> Kopierkonstruktor legt <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> zu `true`.</span><span class="sxs-lookup"><span data-stu-id="c9195-149">The <xref:System.ServiceProcess.ServiceBase> constructor sets <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true`.</span></span> <span data-ttu-id="c9195-150">Wenn Sie nicht automatisch Aufrufe an den Dienst aus der Service Control Manager (SCM) protokollieren möchten, legen Sie <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> zu `false`.</span><span class="sxs-lookup"><span data-stu-id="c9195-150">If you do not want to automatically log calls to the service from the Service Control Manager (SCM), set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false`.</span></span>  
  
 <span data-ttu-id="c9195-151">Wenn die ausführbare Datei auf einen einzelnen Dienst enthält, ruft das System Konstruktor des Diensts an, wenn Start, der vom dienststeuerungs-Manager aktiviert ist, und den Destruktor ausgeführt wird, wenn Stop aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-151">If the executable contains a single service, the system calls the service's constructor when Start is selected from the SCM, and runs the destructor if Stop is called.</span></span>  
  
 <span data-ttu-id="c9195-152">Wenn die ausführbare Datei mehrere Dienste enthält, starten für einen Dienst aufrufen führt dazu, dass die Konstruktoren für alle Dienste in der ausführbaren Datei aufgerufen werden, aber nur der angegebene Dienst wurde gestartet.</span><span class="sxs-lookup"><span data-stu-id="c9195-152">If the executable contains multiple services, calling Start on one service causes the constructors to be called for all services in the executable, but only the specified service is started.</span></span> <span data-ttu-id="c9195-153">Destruktoren für die Dienste werden gemeinsam ausgeführt werden, wenn alle Dienste, nicht einzeln angehalten wurden, wenn jeder Dienst beendet wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-153">Destructors for the services are run together when all services have been stopped, not individually when each service is stopped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9195-154">Wenn Sie den Konstruktor der Basisklasse überschreiben, sollte Sie explizit im Konstruktor einer abgeleiteten Klasse aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c9195-154">If you override the base class constructor, you should explicitly call it in the constructor of your derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      </Docs>
    </Member>
    <Member MemberName="AutoLog">
      <MemberSignature Language="C#" Value="public bool AutoLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoLog : bool with get, set" Usage="System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBAutoLog")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-155">Gibt an, ob die Befehle Starten, Beenden, Anhalten und Fortsetzen im Ereignisprotokoll aufgezeichnet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-155">Indicates whether to report Start, Stop, Pause, and Continue commands in the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-156">
            <see langword="true" />, wenn Informationen im Ereignisprotokoll aufgezeichnet werden sollen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-156">
              <see langword="true" /> to report information in the event log; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-157">Festlegen von <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> zu `true` weist den Dienst verwenden Sie das Anwendungsereignisprotokoll auf Befehl Fehler auftreten, sowie statusänderungsinformationen für starten, beenden, Anhalten und Ereignisse für den Dienst weiterhin.</span><span class="sxs-lookup"><span data-stu-id="c9195-157">Setting <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true` instructs the service to use the Application event log to report command failures, as well as state change information for Start, Stop, Pause, and Continue events on the service.</span></span> <span data-ttu-id="c9195-158">Der Name des Diensts wird als des Protokolls verwendet <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c9195-158">The name of the service is used as the log's <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c9195-159">Zum Melden von Informationen an das Anwendungsprotokoll, anstatt ein benutzerdefiniertes Ereignisprotokoll legen <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> zu `false` und Schreiben von Anweisungen in Methoden Befehlsbehandlung <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, oder <xref:System.ServiceProcess.ServiceBase.OnStop%2A> , die an das entsprechende Protokoll gesendet.</span><span class="sxs-lookup"><span data-stu-id="c9195-159">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9195-160">Die <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, der die Quellzeichenfolge für das Ereignisprotokoll bereitstellt, muss festgelegt werden, bevor der Dienst versucht, in das Ereignisprotokoll schreiben.</span><span class="sxs-lookup"><span data-stu-id="c9195-160">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service attempts to write to the event log.</span></span> <span data-ttu-id="c9195-161">Versuchen, auf das Ereignisprotokoll zuzugreifen, bevor der Name der Datenquelle festgelegt wird, löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="c9195-161">Trying to access the event log before the source name is set throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandlePowerEvent">
      <MemberSignature Language="C#" Value="public bool CanHandlePowerEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandlePowerEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandlePowerEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandlePowerEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanHandlePowerEvent : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-162">Ruft einen Wert ab, der angibt, ob der Dienst Benachrichtigungen über Änderungen im Energiestatus des Computers verarbeiten kann, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-162">Gets or sets a value indicating whether the service can handle notifications of computer power status changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-163">
            <see langword="true" />, wenn der Dienst die in der <see cref="T:System.ServiceProcess.PowerBroadcastStatus" />-Klasse angegebenen Änderungen im Energiestatus des Computers verarbeitet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-163">
              <see langword="true" /> if the service handles the computer power status changes indicated in the <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> class, otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-164">Wenn der Computer Änderungen im Energiestatus des, den Service Control Manager (SCM) wird überprüft, ob der Dienst einschaltbefehle-Ereignis mit dem Wert des akzeptiert <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-164">When the computer power status changes, the Service Control Manager (SCM) verifies whether the service accepts power event commands using the value of <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span></span>  
  
 <span data-ttu-id="c9195-165">Wenn <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> ist `true`, der Befehl an den Dienst übergeben wird und die <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> Methode wird aufgerufen, wenn definiert.</span><span class="sxs-lookup"><span data-stu-id="c9195-165">If <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> is `true`, the command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> method is called if defined.</span></span> <span data-ttu-id="c9195-166">Wenn <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> wurde nicht implementiert. in der abgeleiteten Klasse verarbeitet dienststeuerungs-Manager das Power-Ereignis, durch die leere Basisklasse <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="c9195-166">If <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is not implemented in the derived class, the SCM handles the power event through the empty base class <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9195-167">Diese Eigenschaft wird geändert, nachdem der Dienst gestartet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-167">This property is modified after the service was started.</span>
          </span>
        </exception>
        <altmember cref="T:System.ServiceProcess.PowerBroadcastStatus" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandleSessionChangeEvent">
      <MemberSignature Language="C#" Value="public bool CanHandleSessionChangeEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandleSessionChangeEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandleSessionChangeEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandleSessionChangeEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanHandleSessionChangeEvent : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-168">Ruft einen Wert ab, der angibt, ob der Dienst Sitzungsänderungsereignisse aus einer Terminal Server-Sitzung behandeln kann, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-168">Gets or sets a value that indicates whether the service can handle session change events received from a Terminal Server session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-169">
            <see langword="true" />, wenn der Dienst Terminal Server-Sitzungsänderungsereignisse behandeln kann; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-169">
              <see langword="true" /> if the service can handle Terminal Server session change events; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9195-170">Diese Eigenschaft wird geändert, nachdem der Dienst gestartet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-170">This property is modified after the service was started.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanPauseAndContinue">
      <MemberSignature Language="C#" Value="public bool CanPauseAndContinue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPauseAndContinue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberSignature Language="VB.NET" Value="Public Property CanPauseAndContinue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPauseAndContinue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanPauseAndContinue : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-171">Ruft einen Wert ab, der angibt, ob der Dienst angehalten und wieder aufgenommen werden kann, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-171">Gets or sets a value indicating whether the service can be paused and resumed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-172">
            <see langword="true" />, wenn der Dienst angehalten werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-172">
              <see langword="true" /> if the service can be paused; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-173">Legen Sie den Wert, der die <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> Eigenschaft im Konstruktor für den Dienst.</span><span class="sxs-lookup"><span data-stu-id="c9195-173">Set the value of the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property in the constructor for the service.</span></span>  
  
 <span data-ttu-id="c9195-174">Wenn ein Dienst angehalten wird, hält er an, wozu es dient.</span><span class="sxs-lookup"><span data-stu-id="c9195-174">When a service is paused, it halts what it is doing.</span></span> <span data-ttu-id="c9195-175">Wenn Sie fortfahren, den Dienst (entweder über den Dienststeuerungs-Manager oder programmgesteuert), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-175">When you continue the service (either through the Service Control Manager or programmatically), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> runs.</span></span>  
  
 <span data-ttu-id="c9195-176">Senden einer Anforderung zum Anhalten des Diensts kann Systemressourcen.</span><span class="sxs-lookup"><span data-stu-id="c9195-176">Sending a Pause request to the service can conserve system resources.</span></span> <span data-ttu-id="c9195-177">Anhalten möglicherweise nicht alle Systemressourcen freigeben, aber beendet wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-177">Pause may not release all system resources, but Stop does.</span></span> <span data-ttu-id="c9195-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> und <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> werden häufig implementiert, um weniger Verarbeitungszeit als <xref:System.ServiceProcess.ServiceBase.OnStop%2A> und <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> are often implemented to perform less processing than <xref:System.ServiceProcess.ServiceBase.OnStop%2A> and <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span>  
  
 <span data-ttu-id="c9195-179">Wenn <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `true`, außer Kraft setzen <xref:System.ServiceProcess.ServiceBase.OnPause%2A> und <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> an die Verarbeitung, die auftreten soll, wenn das Service Control Manager (SCM) eine Anforderung zum Anhalten oder fortsetzen an den Dienst übergibt.</span><span class="sxs-lookup"><span data-stu-id="c9195-179">When <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true`, override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the Service Control Manager (SCM) passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="c9195-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> sollte implementiert werden, um die Verarbeitung in rückgängig zu machen <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="c9195-181">Wenn <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `false`, dienststeuerungs-Manager übergibt nicht anhalten oder fortsetzen Anforderungen an den Dienst, also die <xref:System.ServiceProcess.ServiceBase.OnPause%2A> und <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> Methoden werden nicht aufgerufen werden, auch wenn sie implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-181">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="c9195-182">Im dienststeuerungs-Manager der `Pause` und `Continue` Steuerelemente sind deaktiviert, wenn <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `false`.</span><span class="sxs-lookup"><span data-stu-id="c9195-182">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9195-183">Der Dienst wurde bereits gestartet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-183">The service has already been started.</span>
          </span>
          <span data-ttu-id="c9195-184">Die <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />-Eigenschaft kann nach dem Start des Diensts nicht mehr geändert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-184">The <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> property cannot be changed once the service has started.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanShutdown">
      <MemberSignature Language="C#" Value="public bool CanShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Property CanShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShutdown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanShutdown : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-185">Ruft einen Wert ab, der angibt, ob der Dienst beim Herunterfahren des Systems benachrichtigt werden soll, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-185">Gets or sets a value indicating whether the service should be notified when the system is shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-186">
            <see langword="true" />, wenn der Dienst beim Herunterfahren des Systems benachrichtigt werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-186">
              <see langword="true" /> if the service should be notified when the system is shutting down; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c9195-187">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-187">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-188">Wenn <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> ist `true`, der Dienst wird benachrichtigt, wenn das System heruntergefahren wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-188">If <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> is `true`, the service is notified when the system is shutting down.</span></span> <span data-ttu-id="c9195-189">Beim Herunterfahren der <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> Methode wird aufgerufen, wenn sie in der abgeleiteten Klasse implementiert wurde.</span><span class="sxs-lookup"><span data-stu-id="c9195-189">At shutdown, the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method is called if it has been implemented in your derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9195-190">Nur das System sollte dazu führen, dass die <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> Methode für die Ausführung des Diensts können sie aufrufen, aber dies wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="c9195-190">Only the system should cause the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method to execute; the service can call it, but this is not recommended.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9195-191">Der Dienst wurde bereits gestartet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-191">The service has already been started.</span>
          </span>
          <span data-ttu-id="c9195-192">Die <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />-Eigenschaft kann nach dem Start des Diensts nicht mehr geändert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-192">The <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> property cannot be changed once the service has started.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanStop">
      <MemberSignature Language="C#" Value="public bool CanStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanStop" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanStop" />
      <MemberSignature Language="VB.NET" Value="Public Property CanStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanStop : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-193">Ruft einen Wert ab, der angibt, ob der Dienst nach dem Starten beendet werden kann, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-193">Gets or sets a value indicating whether the service can be stopped once it has started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-194">
            <see langword="true" />, wenn der Dienst angehalten und die <see cref="M:System.ServiceProcess.ServiceBase.OnStop" />-Methode aufgerufen werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-194">
              <see langword="true" /> if the service can be stopped and the <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> method called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-195">Wenn für einen Dienst beenden aufgerufen wird, den Service Control Manager (SCM) überprüft, ob der Dienst beenden-Befehle, die mit dem Wert des akzeptiert <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-195">When Stop is called on a service, the Service Control Manager (SCM) verifies whether the service accepts Stop commands using the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span></span> <span data-ttu-id="c9195-196">Für die meisten Dienste, die den Wert der <xref:System.ServiceProcess.ServiceBase.CanStop%2A> ist `true`, aber einige Betriebssystemdienste, lassen beispielsweise nicht den Benutzer abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="c9195-196">For most services, the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, but some operating system services, for example, do not allow the user to stop them.</span></span>  
  
 <span data-ttu-id="c9195-197">Wenn <xref:System.ServiceProcess.ServiceBase.CanStop%2A> ist `true`, wird der Befehl zum Beenden an den Dienst übergeben und die <xref:System.ServiceProcess.ServiceBase.OnStop%2A> Methode wird aufgerufen, wenn er definiert ist.</span><span class="sxs-lookup"><span data-stu-id="c9195-197">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="c9195-198">Wenn <xref:System.ServiceProcess.ServiceBase.OnStop%2A> ist nicht in der abgeleiteten Klasse, die SCM-Handles, die Beendigung des Befehls über die leere Basisklasse implementiert <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="c9195-198">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the derived class, the SCM handles the Stop command through the empty base class <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9195-199">Der Dienst wurde bereits gestartet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-199">The service has already been started.</span>
          </span>
          <span data-ttu-id="c9195-200">Die <see cref="P:System.ServiceProcess.ServiceBase.CanStop" />-Eigenschaft kann nach dem Start des Diensts nicht mehr geändert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-200">The <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> property cannot be changed once the service has started.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="serviceBase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c9195-201">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-201">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-202">Gibt die von der <see cref="T:System.ServiceProcess.ServiceBase" />-Klasse verwendeten Ressourcen (mit Ausnahme des Speichers) frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-202">Disposes of the resources (other than memory) used by the <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-203">Rufen Sie <xref:System.ServiceProcess.ServiceBase.Dispose%2A> in der abgeleiteten Klasse (und somit in der <xref:System.ServiceProcess.ServiceBase> Klasse) Sie abschließend die abgeleitete Klasse verwenden.</span><span class="sxs-lookup"><span data-stu-id="c9195-203">Call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> in your derived class (and through it, in the <xref:System.ServiceProcess.ServiceBase> class) when you are finished using the derived class.</span></span> <span data-ttu-id="c9195-204">Die <xref:System.ServiceProcess.ServiceBase.Dispose%2A> -Methode bewirkt, dass die abgeleitete Klasse in einem nicht verwendbaren Zustand.</span><span class="sxs-lookup"><span data-stu-id="c9195-204">The <xref:System.ServiceProcess.ServiceBase.Dispose%2A> method leaves the derived class in an unusable state.</span></span> <span data-ttu-id="c9195-205">Nach dem Aufruf <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, Sie müssen alle Verweise auf die abgeleitete Klasse freigeben und <xref:System.ServiceProcess.ServiceBase> , damit der belegte Speicher durch die Garbagecollection wieder zugänglich gemacht werden kann.</span><span class="sxs-lookup"><span data-stu-id="c9195-205">After calling <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, you must release all references to the derived class and <xref:System.ServiceProcess.ServiceBase> so the memory they were occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9195-206">Rufen Sie immer <xref:System.ServiceProcess.ServiceBase.Dispose%2A> bereits vor der Veröffentlichung des letzten Verweis auf die Klasse, die von abgeleiteten <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="c9195-206">Always call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> before you release your last reference to the class derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="c9195-207">Andernfalls die Ressourcen <xref:System.ServiceProcess.ServiceBase> und die abgeleitete Klasse wird nicht freigegeben werden, bis die Garbagecollection den Destruktor des Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="c9195-207">Otherwise, the resources <xref:System.ServiceProcess.ServiceBase> and the derived class are using will not be freed until garbage collection calls the objects' destructors.</span></span>  
  
 <span data-ttu-id="c9195-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> wird häufig implementiert, um den Code in verarbeiten <xref:System.ServiceProcess.ServiceBase.OnPause%2A>kombiniert mit einem Aufruf von <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is often implemented to process the code in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, combined with a call to <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span></span> <span data-ttu-id="c9195-209">Wenn Sie dazu in der abgeleiteten Klasse auswählen, ist es üblich, implementieren Sie <xref:System.ServiceProcess.ServiceBase.OnStart%2A> zuweisen was <xref:System.ServiceProcess.ServiceBase.Dispose%2A> veröffentlicht.</span><span class="sxs-lookup"><span data-stu-id="c9195-209">If you choose to do this in your derived class, it is customary to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to allocate whatever <xref:System.ServiceProcess.ServiceBase.Dispose%2A> released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="EventLog">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.EventLog EventLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLog EventLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.EventLog" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EventLog As EventLog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::EventLog ^ EventLog { System::Diagnostics::EventLog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventLog : System.Diagnostics.EventLog" Usage="System.ServiceProcess.ServiceBase.EventLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-210">Ruft ein Ereignisprotokoll ab, mit dem Sie Benachrichtigungen über Aufrufe von Dienstbefehlen wie Starten und Beenden in das Anwendungsereignisprotokoll schreiben können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-210">Gets an event log you can use to write notification of service command calls, such as Start and Stop, to the Application event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-211">Eine <see cref="T:System.Diagnostics.EventLog" />-Instanz, deren Quelle im Anwendungsprotokoll registriert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-211">An <see cref="T:System.Diagnostics.EventLog" /> instance whose source is registered to the Application log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-212">Der Konstruktor initialisiert die <xref:System.ServiceProcess.ServiceBase.EventLog%2A> Eigenschaft, um eine Instanz mit der <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> und <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> festgelegten Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="c9195-212">The constructor initializes the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to an instance with the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> properties set.</span></span> <span data-ttu-id="c9195-213">Die Quelle ist die <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> des Diensts, und das Protokoll ist Anwendungsprotokoll des Computers.</span><span class="sxs-lookup"><span data-stu-id="c9195-213">The source is the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service, and the log is the computer's Application log.</span></span> <span data-ttu-id="c9195-214">Diese Werte werden automatisch festgelegt und können nicht für die automatische Protokollierung von Befehlen von legacysprachdiensten geändert werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-214">These values are set automatically and cannot be changed for automatic logging of service commands.</span></span>  
  
 <span data-ttu-id="c9195-215">Wenn <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> ist `true`, starten, beenden, anhalten, fortsetzen und benutzerdefinierte Befehle werden automatisch in das Anwendungsereignisprotokoll aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="c9195-215">When <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, Start, Stop, Pause, Continue, and custom commands are recorded automatically in the Application event log.</span></span> <span data-ttu-id="c9195-216">Sie können die <xref:System.ServiceProcess.ServiceBase.EventLog%2A> Eigenschaft, um zusätzliche Nachrichten in das Protokoll auch zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="c9195-216">You can use the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to write additional messages to that log as well.</span></span> <span data-ttu-id="c9195-217">Die Komponente ruft <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> mit diesem <xref:System.ServiceProcess.ServiceBase.EventLog%2A> Member.</span><span class="sxs-lookup"><span data-stu-id="c9195-217">The component calls <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> using this <xref:System.ServiceProcess.ServiceBase.EventLog%2A> member.</span></span>  
  
 <span data-ttu-id="c9195-218">Zum Melden von Informationen an das Anwendungsprotokoll, anstatt ein benutzerdefiniertes Ereignisprotokoll legen <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> zu `false` und Schreiben von Anweisungen in Methoden Befehlsbehandlung <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, oder <xref:System.ServiceProcess.ServiceBase.OnStop%2A> , die an das entsprechende Protokoll gesendet.</span><span class="sxs-lookup"><span data-stu-id="c9195-218">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int with get, set" Usage="System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-219">Ruft den Exitcode für den Dienst ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-219">Gets or sets the exit code for the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-220">Der Exitcode für den Dienst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-220">The exit code for the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-221">Legen Sie die <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> Eigenschaft mit einem Wert ungleich 0 vor dem Beenden des Diensts zur Anzeige eines Fehlers mit dem Dienststeuerungs-Manager.</span><span class="sxs-lookup"><span data-stu-id="c9195-221">Set the <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> property to a non-zero value before stopping the service to indicate an error to the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNameLength">
      <MemberSignature Language="C#" Value="public const int MaxNameLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxNameLength = (80)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxNameLength As Integer  = 80" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxNameLength = 80;" />
      <MemberSignature Language="F#" Value="val mutable MaxNameLength : int" Usage="System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-222">Gibt die maximale Größe für einen Dienstnamen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-222">Indicates the maximum size for a service name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-223">ServiceName und "DisplayName" haben beide größeneinschränkungen müssen, beim Festlegen der Eigenschaften auf die Dienstklasse berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-223">ServiceName and DisplayName both have size restrictions that must be observed when setting the properties on your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
      </Docs>
    </Member>
    <Member MemberName="OnContinue">
      <MemberSignature Language="C#" Value="protected virtual void OnContinue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnContinue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContinue ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContinue();" />
      <MemberSignature Language="F#" Value="abstract member OnContinue : unit -&gt; unit&#xA;override this.OnContinue : unit -&gt; unit" Usage="serviceBase.OnContinue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9195-224">Bei der Implementierung in einer abgeleiteten Klasse wird <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> ausgeführt, wenn der Dienststeuerungs-Manager einen Befehl zum Fortsetzen an den Dienst sendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-224">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> runs when a Continue command is sent to the service by the Service Control Manager (SCM).</span>
          </span>
          <span data-ttu-id="c9195-225">Gibt Aktionen an, die durchgeführt werden müssen, wenn der normale Betrieb eines Diensts nach dem Anhalten wieder aufgenommen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-225">Specifies actions to take when a service resumes normal functioning after being paused.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-226">Implementieren <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> zum Spiegeln von Ihrer Anwendung als Antwort auf <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-226">Implement <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to mirror your application's response to <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span> <span data-ttu-id="c9195-227">Wenn Sie fortfahren, den Dienst (entweder über die Dienstkonsole oder programmgesteuert), die <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> Verarbeitung ausgeführt wird und der Dienst wird wieder aktiviert.</span><span class="sxs-lookup"><span data-stu-id="c9195-227">When you continue the service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing runs, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="c9195-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> Wenn überschrieben werden soll die <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="c9195-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="c9195-229">Wenn <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `false`, dienststeuerungs-Manager übergibt nicht anhalten oder fortsetzen Anforderungen an den Dienst, also die <xref:System.ServiceProcess.ServiceBase.OnPause%2A> und <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> Methoden werden nicht aufgerufen werden, auch wenn sie implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-229">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="c9195-230">Im dienststeuerungs-Manager der `Pause` und `Continue` Steuerelemente sind deaktiviert, wenn <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `false`.</span><span class="sxs-lookup"><span data-stu-id="c9195-230">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnCustomCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomCommand (int command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomCommand(int32 command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomCommand (command As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomCommand(int command);" />
      <MemberSignature Language="F#" Value="abstract member OnCustomCommand : int -&gt; unit&#xA;override this.OnCustomCommand : int -&gt; unit" Usage="serviceBase.OnCustomCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="c9195-231">Die an den Dienst gesendete Befehlsnachricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-231">The command message sent to the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-232">Bei der Implementierung in einer abgeleiteten Klasse wird <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> ausgeführt, wenn der Dienststeuerungs-Manager einen benutzerdefinierten Befehl an den Dienst übergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-232">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> executes when the Service Control Manager (SCM) passes a custom command to the service.</span>
          </span>
          <span data-ttu-id="c9195-233">Gibt an, welche Aktionen auszuführen sind, wenn ein Befehl mit dem angegebenen Parameter auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-233">Specifies actions to take when a command with the specified parameter value occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> können Sie Funktionalität zusätzlich zu starten, beenden, Anhalten und Wiederaufnehmen von Diensten angeben.</span><span class="sxs-lookup"><span data-stu-id="c9195-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> lets you specify additional functionality beyond starting, stopping, pausing and continuing services.</span></span>  
  
 <span data-ttu-id="c9195-235">Dienststeuerungs-Manager untersucht den benutzerdefinierten Befehl zu überprüfen, ob der Dienst unterstützt nicht die `command` übergebene Parameter.</span><span class="sxs-lookup"><span data-stu-id="c9195-235">The SCM does not examine the custom command to verify whether the service supports the `command` parameter passed in.</span></span> <span data-ttu-id="c9195-236">Sie übergibt den benutzerdefinierten Befehl direkt an den Dienst.</span><span class="sxs-lookup"><span data-stu-id="c9195-236">It passes the custom command directly to the service.</span></span> <span data-ttu-id="c9195-237">Wenn der Dienst nicht erkennt die `command` -Parameter und hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="c9195-237">If the service does not recognize the `command` parameter, it does nothing.</span></span>  
  
 <span data-ttu-id="c9195-238">Benutzerdefinierte Befehle werden erstellt, indem ein <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> -Anweisung in einem <xref:System.ServiceProcess.ServiceController> Komponente.</span><span class="sxs-lookup"><span data-stu-id="c9195-238">Custom commands are raised by an <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> statement in a <xref:System.ServiceProcess.ServiceController> component.</span></span> <span data-ttu-id="c9195-239">Verwenden Sie eine Switch-Anweisung oder... Klicken Sie dann Bedingung, die die benutzerdefinierte Befehle zu verarbeiten, die Sie für Ihren Dienst zu definieren.</span><span class="sxs-lookup"><span data-stu-id="c9195-239">Use a switch statement or if..then condition to handle the custom commands you define on your service.</span></span>  
  
 <span data-ttu-id="c9195-240">Nur die Werte für einen benutzerdefinierten Befehl, die Sie in Ihrer Anwendung definieren können, oder verwenden Sie in <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> sind diejenigen zwischen 128 bis 255.</span><span class="sxs-lookup"><span data-stu-id="c9195-240">The only values for a custom command that you can define in your application or use in <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> are those between 128 and 255.</span></span> <span data-ttu-id="c9195-241">Ganze Zahlen unter 128 entsprechen Werte vom System reservierte.</span><span class="sxs-lookup"><span data-stu-id="c9195-241">Integers below 128 correspond to system-reserved values.</span></span>  
  
 <span data-ttu-id="c9195-242">Wenn die <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> Eigenschaft `true`, benutzerdefinierte Befehle, wie alle anderen Befehle schreiben Einträge in das Ereignisprotokoll zum melden, ob die Ausführung der Methode erfolgreich war oder nicht.</span><span class="sxs-lookup"><span data-stu-id="c9195-242">If the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> property is `true`, custom commands, like all other commands, write entries to the event log to report whether the method execution succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="protected virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPause" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPause ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPause();" />
      <MemberSignature Language="F#" Value="abstract member OnPause : unit -&gt; unit&#xA;override this.OnPause : unit -&gt; unit" Usage="serviceBase.OnPause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9195-243">Wird bei der Implementierung in einer abgeleiteten Klasse ausgeführt, wenn der Dienststeuerungs-Manager einen Befehl zum Anhalten an den Dienst sendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-243">When implemented in a derived class, executes when a Pause command is sent to the service by the Service Control Manager (SCM).</span>
          </span>
          <span data-ttu-id="c9195-244">Gibt Aktionen an, die beim Anhalten eines Diensts durchgeführt werden müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-244">Specifies actions to take when a service pauses.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-245">Verwendung <xref:System.ServiceProcess.ServiceBase.OnPause%2A> die Verarbeitung an, das auftritt, wenn der Dienst einen Befehl zum Anhalten erhält.</span><span class="sxs-lookup"><span data-stu-id="c9195-245">Use <xref:System.ServiceProcess.ServiceBase.OnPause%2A> to specify the processing that occurs when the service receives a Pause command.</span></span> <span data-ttu-id="c9195-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> Wenn überschrieben werden soll die <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="c9195-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="c9195-247">Wenn Sie fortfahren, einen angehaltenen Dienst (entweder über die Dienstkonsole oder programmgesteuert), die <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> Verarbeitung ausgeführt wird und der Dienst wird wieder aktiviert.</span><span class="sxs-lookup"><span data-stu-id="c9195-247">When you continue a paused service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing is run, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="c9195-248">Der Befehl "Pause" kann nur Ihre Anwendung auf ein bestimmtes Ereignis zu reagieren.</span><span class="sxs-lookup"><span data-stu-id="c9195-248">The Pause command only allows your application to react to a specific event.</span></span> <span data-ttu-id="c9195-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> hat keine Auswirkungen auf den Dienst, den er nicht definiert sind.</span><span class="sxs-lookup"><span data-stu-id="c9195-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> does nothing to the service that you do not define it to do.</span></span>  
  
 <span data-ttu-id="c9195-250">Senden einer Anforderung zum Anhalten des Diensts kann Systemressourcen beibehalten werden, da anhalten nicht alle Systemressourcen freigeben muss.</span><span class="sxs-lookup"><span data-stu-id="c9195-250">Sending a Pause request to the service can conserve system resources because Pause need not release all system resources.</span></span> <span data-ttu-id="c9195-251">Z. B. wenn Threads, durch den Prozess, der einen Dienst anhalten geöffnet wurden, anstatt sie beenden die Threads geöffnet bleiben kann macht so haarige überflüssig müssen sie zum erneuten zuweisen, wenn der Dienst fortgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-251">For example, if threads have been opened by the process, pausing a service rather than stopping it can allow the threads to remain open, obviating the need to reallocate them when the service continues.</span></span> <span data-ttu-id="c9195-252">Wenn Sie anhalten, um alle Systemressourcen freigeben definieren, verhält er sich wie ein Befehl zum Beenden.</span><span class="sxs-lookup"><span data-stu-id="c9195-252">If you define Pause to release all system resources, it behaves like a Stop command.</span></span>  
  
 <span data-ttu-id="c9195-253">Legen Sie <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> zu `true`, und überschreiben <xref:System.ServiceProcess.ServiceBase.OnPause%2A> und <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> an auftreten soll, wenn der dienststeuerungs-Manager eine Anforderung zum Anhalten oder fortsetzen an den Dienst übergibt die Verarbeitung.</span><span class="sxs-lookup"><span data-stu-id="c9195-253">Set <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to `true`, and override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the SCM passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="c9195-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> sollte implementiert werden, um die Verarbeitung in rückgängig zu machen <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="c9195-255">Wenn <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `false`, dienststeuerungs-Manager übergibt nicht anhalten oder fortsetzen Anforderungen an den Dienst, also die <xref:System.ServiceProcess.ServiceBase.OnPause%2A> und <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> Methoden werden nicht aufgerufen werden, auch wenn implementiert.</span><span class="sxs-lookup"><span data-stu-id="c9195-255">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if implemented.</span></span> <span data-ttu-id="c9195-256">Im dienststeuerungs-Manager der `Pause` und `Continue` Steuerelemente sind deaktiviert, wenn <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> ist `false`.</span><span class="sxs-lookup"><span data-stu-id="c9195-256">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnPowerEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnPowerEvent (System.ServiceProcess.PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnPowerEvent(valuetype System.ServiceProcess.PowerBroadcastStatus powerStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnPowerEvent (powerStatus As PowerBroadcastStatus) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnPowerEvent(System::ServiceProcess::PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="F#" Value="abstract member OnPowerEvent : System.ServiceProcess.PowerBroadcastStatus -&gt; bool&#xA;override this.OnPowerEvent : System.ServiceProcess.PowerBroadcastStatus -&gt; bool" Usage="serviceBase.OnPowerEvent powerStatus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="powerStatus" Type="System.ServiceProcess.PowerBroadcastStatus" />
      </Parameters>
      <Docs>
        <param name="powerStatus">
          <span data-ttu-id="c9195-257">Ein <see cref="T:System.ServiceProcess.PowerBroadcastStatus" />, der eine Benachrichtigung des Systems über dessen Energiestatus angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-257">A <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> that indicates a notification from the system about its power status.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-258">Wird bei der Implementierung in einer abgeleiteten Klasse ausgeführt, wenn sich der Energiestatus des Computers geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-258">When implemented in a derived class, executes when the computer's power status has changed.</span>
          </span>
          <span data-ttu-id="c9195-259">Dies gilt für Laptops, wenn diese in den Standbymodus wechseln. Dieser entspricht nicht dem Herunterfahren des Systems.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-259">This applies to laptop computers when they go into suspended mode, which is not the same as a system shutdown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9195-260">Bei Implementierung in einer abgeleiteten Klasse bestimmen die Anforderungen der Anwendung, welcher Wert zurückzugeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-260">When implemented in a derived class, the needs of your application determine what value to return.</span>
          </span>
          <span data-ttu-id="c9195-261">Wenn beispielsweise ein <see langword="QuerySuspend" />-Broadcaststatus übergeben wird, können Sie die Anwendung veranlassen, die Abfrage durch Rückgabe <see langword="false" /> abzulehnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-261">For example, if a <see langword="QuerySuspend" /> broadcast status is passed, you could cause your application to reject the query by returning <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-262">Verwendung <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> an tritt auf, wenn das Systemereignis in angegeben. die Verarbeitung der <xref:System.ServiceProcess.PowerBroadcastStatus> Enumeration auftritt – z.B. wenn der Computer im angehaltenen Modus befindet oder niedriger Ladezustand des Akkus.</span><span class="sxs-lookup"><span data-stu-id="c9195-262">Use <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> to specify the processing that occurs when the system event indicated in the <xref:System.ServiceProcess.PowerBroadcastStatus> enumeration occurs--for example, when the computer is placed in suspended mode or indicates low battery power.</span></span>  
  
 <span data-ttu-id="c9195-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> Wenn überschrieben werden soll die <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="c9195-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionChange">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionChange (System.ServiceProcess.SessionChangeDescription changeDescription);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionChange(valuetype System.ServiceProcess.SessionChangeDescription changeDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionChange (changeDescription As SessionChangeDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionChange(System::ServiceProcess::SessionChangeDescription changeDescription);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionChange : System.ServiceProcess.SessionChangeDescription -&gt; unit&#xA;override this.OnSessionChange : System.ServiceProcess.SessionChangeDescription -&gt; unit" Usage="serviceBase.OnSessionChange changeDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeDescription" Type="System.ServiceProcess.SessionChangeDescription" />
      </Parameters>
      <Docs>
        <param name="changeDescription">
          <span data-ttu-id="c9195-264">Eine -Struktur, die den Änderungstyp angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-264">A structure that identifies the change type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-265">Wird ausgeführt, wenn ein Änderungsereignis von einer Terminal Server-Sitzung empfangen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-265">Executes when a change event is received from a Terminal Server session.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-266">Sie müssen festlegen, die <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> Eigenschaft `true` um die Ausführung dieser Methode ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="c9195-266">You must set the <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> property to `true` to enable the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
        <altmember cref="T:System.ServiceProcess.SessionChangeDescription" />
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberSignature Language="F#" Value="abstract member OnShutdown : unit -&gt; unit&#xA;override this.OnShutdown : unit -&gt; unit" Usage="serviceBase.OnShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9195-267">Wird bei der Implementierung in einer abgeleiteten Klasse beim Herunterfahren des Systems ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-267">When implemented in a derived class, executes when the system is shutting down.</span>
          </span>
          <span data-ttu-id="c9195-268">Gibt an, welche Vorgänge unmittelbar vor dem Herunterfahren des Systems ausgeführt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-268">Specifies what should occur immediately prior to the system shutting down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-269">Verwendung <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> die Verarbeitung an, das auftritt, wenn das System heruntergefahren wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-269">Use <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> to specify the processing that occurs when the system shuts down.</span></span>  
  
 <span data-ttu-id="c9195-270">Dieses Ereignis tritt nur auf, wenn das Betriebssystem heruntergefahren ist, nicht verwendet werden, wenn der Computer ausgeschaltet ist.</span><span class="sxs-lookup"><span data-stu-id="c9195-270">This event occurs only when the operating system is shut down, not when the computer is turned off.</span></span>  
  
 <span data-ttu-id="c9195-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> Wenn überschrieben werden soll die <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="c9195-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="protected virtual void OnStart (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStart(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStart (args As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStart(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnStart : string[] -&gt; unit&#xA;override this.OnStart : string[] -&gt; unit" Usage="serviceBase.OnStart args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="c9195-272">Vom Befehl zum Starten übergebene Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-272">Data passed by the start command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-273">Wird bei der Implementierung in einer abgeleiteten Klasse ausgeführt, wenn der Dienststeuerungs-Manager einen Befehl zum Starten an den Dienst sendet oder wenn das Betriebssystem gestartet wird (diese gilt für Dienste, die automatisch gestartet werden).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-273">When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically).</span>
          </span>
          <span data-ttu-id="c9195-274">Gibt Aktionen an, die beim Starten des Diensts ausgeführt werden müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-274">Specifies actions to take when the service starts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-275">Verwendung <xref:System.ServiceProcess.ServiceBase.OnStart%2A> die Verarbeitung an, das auftritt, wenn der Dienst einen Befehl zum Starten empfängt.</span><span class="sxs-lookup"><span data-stu-id="c9195-275">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to specify the processing that occurs when the service receives a Start command.</span></span> <span data-ttu-id="c9195-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> ist die Methode, in der Sie das Verhalten des Diensts angeben.</span><span class="sxs-lookup"><span data-stu-id="c9195-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is the method in which you specify the behavior of the service.</span></span> <span data-ttu-id="c9195-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> können Argumente als eine Möglichkeit, Daten zu übergeben, aber diese Verwendung ist selten.</span><span class="sxs-lookup"><span data-stu-id="c9195-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> can take arguments as a way to pass data, but this usage is rare.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c9195-278">Verwenden Sie den Konstruktor nicht Verarbeitung ausführen, die in sollten <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-278">Do not use the constructor to perform processing that should be in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="c9195-279">Verwendung <xref:System.ServiceProcess.ServiceBase.OnStart%2A> alle Initialisierung des Diensts zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="c9195-279">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to handle all initialization of your service.</span></span> <span data-ttu-id="c9195-280">Der Konstruktor wird aufgerufen, wenn die Anwendung der ausführbaren ausgeführt wird, nicht verwendet werden, wenn der Dienst ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-280">The constructor is called when the application's executable runs, not when the service runs.</span></span> <span data-ttu-id="c9195-281">Die ausführbare Datei ausgeführt wird, bevor Sie <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9195-281">The executable runs before <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="c9195-282">Wenn Sie, z. B. Fortfahren wird der Konstruktor nicht erneut aufgerufen, weil der dienststeuerungs-Manager bereits auf das Objekt im Arbeitsspeicher enthält.</span><span class="sxs-lookup"><span data-stu-id="c9195-282">When you continue, for example, the constructor is not called again because the SCM already holds the object in memory.</span></span> <span data-ttu-id="c9195-283">Wenn <xref:System.ServiceProcess.ServiceBase.OnStop%2A> Ressourcen zugeordnet, in, anstatt im Konstruktor <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, würde die erforderlichen Ressourcen nicht erneut zweiten Mal der Dienst aufgerufen wird, erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-283">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> releases resources allocated in the constructor rather than in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, the needed resources would not be created again the second time the service is called.</span></span>  
  
 <span data-ttu-id="c9195-284">Für Dienste kann festgelegt werden, für den automatischen start bei einem Neustart des Computers durch Festlegen der <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> im des Diensts-Installationsprogramm auf <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span><span class="sxs-lookup"><span data-stu-id="c9195-284">Services can be set to start automatically when the computer reboots by setting the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> on the service's installer to <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="c9195-285">In einem solchen Fall <xref:System.ServiceProcess.ServiceBase.OnStart%2A> würde beim Systemstart aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-285">In such a situation, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> would be called at system startup.</span></span>  
  
 <span data-ttu-id="c9195-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> wird erwartet, in der abgeleiteten Klasse außer Kraft gesetzt werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="c9195-287">Für den Dienst sinnvolle <xref:System.ServiceProcess.ServiceBase.OnStart%2A> und <xref:System.ServiceProcess.ServiceBase.OnStop%2A> muss sowohl in Ihrer Dienstklasse implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-287">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 <span data-ttu-id="c9195-288">Verarbeiten Sie die Initialisierung von Argumenten für den Dienst in der <xref:System.ServiceProcess.ServiceBase.OnStart%2A> -Methode, nicht in der Main-Methode.</span><span class="sxs-lookup"><span data-stu-id="c9195-288">Process initialization arguments for the service in the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method, not in the Main method.</span></span> <span data-ttu-id="c9195-289">Die Argumente in der `args` Parameterarray kann manuell im Fenster "Eigenschaften" für den Dienst in der Konsole Dienste festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-289">The arguments in the `args` parameter array can be set manually in the properties window for the service in the Services console.</span></span> <span data-ttu-id="c9195-290">In der Konsole eingegebenen Argumente werden nicht gespeichert. Sie werden an den Dienst einmalig übergeben, wenn der Dienst in der Systemsteuerung gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-290">The arguments entered in the console are not saved; they are passed to the service on a one-time basis when the service is started from the control panel.</span></span> <span data-ttu-id="c9195-291">Argumente, die vorhanden sein müssen, wenn der Dienst automatisch gestartet wird, die in die ImagePath-Zeichenfolgenwert für den Dienst-Registrierungsschlüssel eingefügt werden können (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\ \* \< Dienstname >\*).</span><span class="sxs-lookup"><span data-stu-id="c9195-291">Arguments that must be present when the service is automatically started can be placed in the ImagePath string value for the service's registry key (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<service name>*).</span></span> <span data-ttu-id="c9195-292">Sie erhalten die Argumente aus der Registrierung mithilfe der <xref:System.Environment.GetCommandLineArgs%2A> Methode, z. B.: `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span><span class="sxs-lookup"><span data-stu-id="c9195-292">You can obtain the arguments from the registry using the <xref:System.Environment.GetCommandLineArgs%2A> method, for example:  `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStop">
      <MemberSignature Language="C#" Value="protected virtual void OnStop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStop" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStop ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStop();" />
      <MemberSignature Language="F#" Value="abstract member OnStop : unit -&gt; unit&#xA;override this.OnStop : unit -&gt; unit" Usage="serviceBase.OnStop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9195-293">Wird bei der Implementierung in einer abgeleiteten Klasse ausgeführt, wenn der Dienststeuerungs-Manager einen Befehl zum Beenden an den Dienst sendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-293">When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM).</span>
          </span>
          <span data-ttu-id="c9195-294">Gibt Aktionen an, die beim Beenden eines Diensts auszuführen sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-294">Specifies actions to take when a service stops running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-295">Verwendung <xref:System.ServiceProcess.ServiceBase.OnStop%2A> die Verarbeitung an, das auftritt, wenn der Dienst einen Befehl zum Beenden empfängt.</span><span class="sxs-lookup"><span data-stu-id="c9195-295">Use <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to specify the processing that occurs when the service receives a Stop command.</span></span>  
  
 <span data-ttu-id="c9195-296">Wenn der dienststeuerungs-Manager einen Befehl zum Beenden empfängt, verwendet er den Wert der <xref:System.ServiceProcess.ServiceBase.CanStop%2A> zu überprüfen, ob der Dienst beendet Befehle akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="c9195-296">When the SCM receives a Stop command, it uses the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> to verify whether the service accepts Stop commands.</span></span> <span data-ttu-id="c9195-297">Wenn <xref:System.ServiceProcess.ServiceBase.CanStop%2A> ist `true`, wird der Befehl zum Beenden an den Dienst übergeben und die <xref:System.ServiceProcess.ServiceBase.OnStop%2A> Methode wird aufgerufen, wenn er definiert ist.</span><span class="sxs-lookup"><span data-stu-id="c9195-297">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service, and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="c9195-298">Wenn <xref:System.ServiceProcess.ServiceBase.OnStop%2A> ist nicht implementiert im Dienst dienststeuerungs-Manager den Befehl zum Beenden verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="c9195-298">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the service, the SCM handles the Stop command.</span></span>  
  
 <span data-ttu-id="c9195-299">Wenn <xref:System.ServiceProcess.ServiceBase.CanStop%2A> ist `false`, dienststeuerungs-Manager, ignoriert den Stop-Befehl.</span><span class="sxs-lookup"><span data-stu-id="c9195-299">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `false`, the SCM ignores the Stop command.</span></span> <span data-ttu-id="c9195-300">Es wird nicht an den Dienst übergeben.</span><span class="sxs-lookup"><span data-stu-id="c9195-300">It is not passed to the service.</span></span> <span data-ttu-id="c9195-301">Der Befehl zum Beenden gibt zurück, und löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="c9195-301">The Stop command returns and throws an exception.</span></span>  
  
 <span data-ttu-id="c9195-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> wird erwartet, in der abgeleiteten Klasse außer Kraft gesetzt werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="c9195-303">Für den Dienst sinnvolle <xref:System.ServiceProcess.ServiceBase.OnStart%2A> und <xref:System.ServiceProcess.ServiceBase.OnStop%2A> muss sowohl in Ihrer Dienstklasse implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-303">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RequestAdditionalTime">
      <MemberSignature Language="C#" Value="public void RequestAdditionalTime (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestAdditionalTime(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequestAdditionalTime (milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestAdditionalTime(int milliseconds);" />
      <MemberSignature Language="F#" Value="member this.RequestAdditionalTime : int -&gt; unit" Usage="serviceBase.RequestAdditionalTime milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">
          <span data-ttu-id="c9195-304">Die angeforderte Zeit in Millisekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-304">The requested time in milliseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-305">Fordert zusätzliche Zeit für eine ausstehende Operation an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-305">Requests additional time for a pending operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-306">Die <xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> Methode aufgerufen werden soll von der überschriebenen <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, oder <xref:System.ServiceProcess.ServiceBase.OnStop%2A> Methoden, um zusätzliche Zeit für einen ausstehenden Vorgang, um zu verhindern, dass das Service Control Manager (SCM) markieren zu Anfordern der der Dienst reagiert nicht mehr.</span><span class="sxs-lookup"><span data-stu-id="c9195-306">The <xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> method is intended to be called by the overridden <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods to request additional time for a pending operation, to prevent the Service Control Manager (SCM) from marking the service as not responding.</span></span>  <span data-ttu-id="c9195-307">Wenn der ausstehende Vorgang keine fortfahren, anhalten, starten oder beenden, ist ein <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c9195-307">If the pending operation is not a continue, pause, start, or stop, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9195-308">Der Dienst steht nicht aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-308">The service is not in a pending state.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-309">Stellt den Haupteinstiegspunkt für die ausführbare Datei eines Diensts bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-309">Provides the main entry point for a service executable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (service As ServiceBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::ServiceProcess::ServiceBase ^ service);" />
      <MemberSignature Language="F#" Value="static member Run : System.ServiceProcess.ServiceBase -&gt; unit" Usage="System.ServiceProcess.ServiceBase.Run service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.ServiceProcess.ServiceBase" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="c9195-310">Eine <see cref="T:System.ServiceProcess.ServiceBase" />, die einen zu startenden Dienst angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-310">A <see cref="T:System.ServiceProcess.ServiceBase" /> which indicates a service to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-311">Registriert die ausführbare Datei für einen Dienst im Dienststeuerungs-Manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-311">Registers the executable for a service with the Service Control Manager (SCM).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-312">Rufen Sie diese Überladung der `main()` Funktion der ausführbaren Datei, um den Dienst mit dem Dienststeuerungs-Manager registrieren des Service.</span><span class="sxs-lookup"><span data-stu-id="c9195-312">Call this overload in the `main()` function of the service executable to register the service with the Service Control Manager.</span></span> <span data-ttu-id="c9195-313">Nach dem Aufruf von <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, der Dienststeuerungs-Manager stellt einen Befehl zum Starten, was in einem Aufruf führt die <xref:System.ServiceProcess.ServiceBase.OnStart%2A> -Methode in den Dienst.</span><span class="sxs-lookup"><span data-stu-id="c9195-313">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, the Service Control Manager issues a Start command, which results in a call to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method in the service.</span></span> <span data-ttu-id="c9195-314">Der Dienst wird nicht gestartet werden, bis der Befehl "Start" ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-314">The service is not started until the Start command is executed.</span></span>  
  
 <span data-ttu-id="c9195-315">Die <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> Methode wird aufgerufen, in die gleiche Weise wie <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> für Windows Forms-Anwendungen.</span><span class="sxs-lookup"><span data-stu-id="c9195-315">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="c9195-316">Wenn <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> ist `true`, ein Eintrag wird in das Ereignisprotokoll geschrieben, wenn der angegebene Dienst von der `service` Parameter kann nicht gestartet werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-316">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if the service specified by the `service` parameter fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9195-317">
            <paramref name="service" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-317">
              <paramref name="service" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase[] services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase[] services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (services As ServiceBase())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(cli::array &lt;System::ServiceProcess::ServiceBase ^&gt; ^ services);" />
      <MemberSignature Language="F#" Value="static member Run : System.ServiceProcess.ServiceBase[] -&gt; unit" Usage="System.ServiceProcess.ServiceBase.Run services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.ServiceProcess.ServiceBase[]" />
      </Parameters>
      <Docs>
        <param name="services">
          <span data-ttu-id="c9195-318">Ein Array von ServiceBase-Instanzen, die zu startende Dienste angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-318">An array of ServiceBase instances, which indicate services to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-319">Registriert die ausführbare Datei für mehrere Dienste im Dienststeuerungs-Manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-319">Registers the executable for multiple services with the Service Control Manager (SCM).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-320">Rufen Sie diese Überladung der `main()` Funktionalität des Diensts für ausführbare Datei, um die Dienste mit dem Dienststeuerungs-Manager zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="c9195-320">Call this overload in the `main()` function of the service executable to register the services with the Service Control Manager.</span></span> <span data-ttu-id="c9195-321">Nach dem Aufruf von <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, der Dienststeuerungs-Manager gibt die Start-Befehle, die führen Aufrufe an die <xref:System.ServiceProcess.ServiceBase.OnStart%2A> Methoden in den Diensten.</span><span class="sxs-lookup"><span data-stu-id="c9195-321">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, the Service Control Manager issues Start commands, which result in calls to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> methods in the services.</span></span> <span data-ttu-id="c9195-322">Die Dienste werden nicht gestartet werden, bis die Start-Befehle ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="c9195-322">The services are not started until the Start commands are executed.</span></span>  
  
 <span data-ttu-id="c9195-323">Die <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> Methode wird aufgerufen, in die gleiche Weise wie die <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> -Methode für Windows Forms-Anwendungen.</span><span class="sxs-lookup"><span data-stu-id="c9195-323">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as the <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> method for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="c9195-324">Wenn <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> ist `true`, ein Eintrag wird in das Ereignisprotokoll geschrieben, wenn ein Dienst im Array nicht gestartet.</span><span class="sxs-lookup"><span data-stu-id="c9195-324">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if any service in the array fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9195-325">Sie haben keinen zu startenden Dienst angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-325">You did not supply a service to start.</span>
          </span>
          <span data-ttu-id="c9195-326">Das Array ist u. U. <see langword="null" /> oder leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-326">The array might be <see langword="null" /> or empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="ServiceHandle">
      <MemberSignature Language="C#" Value="protected IntPtr ServiceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ServiceHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property IntPtr ServiceHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceHandle : nativeint" Usage="System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-327">Ruft das Dienststeuerungshandle für den Dienst ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-327">Gets the service control handle for the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-328">Eine <see cref="T:System.IntPtr" />-Struktur, die das Dienststeuerungshandle für den Dienst enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-328">An <see cref="T:System.IntPtr" /> structure that contains the service control handle for the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-329">Das Dienststeuerungshandle wird verwendet, für die Kommunikation mit den Service Control Manager (SCM).</span><span class="sxs-lookup"><span data-stu-id="c9195-329">The service control handle is used to communicate with the Service Control Manager (SCM).</span></span>  <span data-ttu-id="c9195-330">Das Handle kann zum Aktualisieren des dienststeuerungs-Manager-Statusinformationen für den aufrufenden Dienst mithilfe der nicht verwalteten `SetServiceStatus` Funktion.</span><span class="sxs-lookup"><span data-stu-id="c9195-330">The handle can be used to update the service control manager's status information for the calling service using the unmanaged `SetServiceStatus` function.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c9195-331">für den Zugriff von nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-331">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c9195-332">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-332">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceMainCallback">
      <MemberSignature Language="C#" Value="public void ServiceMainCallback (int argCount, IntPtr argPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ServiceMainCallback(int32 argCount, native int argPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ServiceMainCallback (argCount As Integer, argPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ServiceMainCallback(int argCount, IntPtr argPointer);" />
      <MemberSignature Language="F#" Value="member this.ServiceMainCallback : int * nativeint -&gt; unit" Usage="serviceBase.ServiceMainCallback (argCount, argPointer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argCount" Type="System.Int32" />
        <Parameter Name="argPointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="argCount">
          <span data-ttu-id="c9195-333">Die Anzahl der Argumente im Argumentarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-333">The number of arguments in the argument array.</span>
          </span>
        </param>
        <param name="argPointer">
          <span data-ttu-id="c9195-334">Eine <see cref="T:System.IntPtr" />-Struktur, die auf ein Array von Argumenten zeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-334">An <see cref="T:System.IntPtr" /> structure that points to an array of arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9195-335">Registriert den Befehlshandler und startet den Dienst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-335">Registers the command handler and starts the service.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBServiceName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9195-336">Ruft den zur Bezeichnung des Diensts beim System verwendeten kurzen Namen ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-336">Gets or sets the short name used to identify the service to the system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9195-337">Der Name des Diensts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-337">The name of the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-338">Die <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> identifiziert den Dienst mit dem Dienststeuerungs-Manager.</span><span class="sxs-lookup"><span data-stu-id="c9195-338">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> identifies the service to the Service Control Manager.</span></span> <span data-ttu-id="c9195-339">Der Wert dieser Eigenschaft muss identisch mit dem Namen für den Dienst in der <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> Eigenschaft der entsprechenden Installerklasse.</span><span class="sxs-lookup"><span data-stu-id="c9195-339">The value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property of the corresponding installer class.</span></span> <span data-ttu-id="c9195-340">Im Code die <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> des Diensts wird in der Regel legen Sie der `main()` Funktion der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="c9195-340">In code, the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service is usually set in the `main()` function of the executable.</span></span>  
  
 <span data-ttu-id="c9195-341">Die <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> dient auch zum Angeben der <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> zugeordneten der <xref:System.ServiceProcess.ServiceBase.EventLog%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c9195-341">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> is also used to specify the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> associated with the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property.</span></span> <span data-ttu-id="c9195-342">Dies <xref:System.ServiceProcess.ServiceBase.EventLog%2A> ist eine Instanz, die Befehlsinformationen in das Anwendungsprotokoll schreibt.</span><span class="sxs-lookup"><span data-stu-id="c9195-342">This <xref:System.ServiceProcess.ServiceBase.EventLog%2A> is an instance that writes service command information to the Application log.</span></span>  
  
 <span data-ttu-id="c9195-343">Die <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, der die Quellzeichenfolge für das Ereignisprotokoll bereitstellt, muss festgelegt werden, bevor der Dienst in das Ereignisprotokoll schreibt.</span><span class="sxs-lookup"><span data-stu-id="c9195-343">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service writes to the event log.</span></span> <span data-ttu-id="c9195-344">Versuchen, auf das Ereignisprotokoll zuzugreifen, bevor der Name der Datenquelle festgelegt wird, wird eine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="c9195-344">Trying to access the event log before the source name is set causes an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9195-345">Der Dienst wurde bereits gestartet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-345">The service has already been started.</span>
          </span>
          <span data-ttu-id="c9195-346">Die <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" />-Eigenschaft kann nach dem Start des Diensts nicht mehr geändert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-346">The <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> property cannot be changed once the service has started.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9195-347">Der angegebene Name ist eine Zeichenfolge der Länge 0 (null) oder ist länger als <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" />, oder der angegebene Name enthält Schrägstriche oder umgekehrte Schrägstriche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-347">The specified name is a zero-length string or is longer than <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" />, or the specified name contains forward slash or backslash characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="serviceBase.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9195-348">Beendet den ausgeführten Dienst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9195-348">Stops the executing service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9195-349">Die <xref:System.ServiceProcess.ServiceBase.Stop%2A> Methode legt fest, die Zustand des Diensts an, dass eine Beenden steht aus und ruft die <xref:System.ServiceProcess.ServiceBase.OnStop%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c9195-349">The <xref:System.ServiceProcess.ServiceBase.Stop%2A> method sets the service state to indicate a stop is pending and calls the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method.</span></span>  <span data-ttu-id="c9195-350">Nachdem die Anwendung beendet wird, wird der Dienststatus auf beendet festgelegt.</span><span class="sxs-lookup"><span data-stu-id="c9195-350">After the application is stopped, the service state is set to stopped.</span></span> <span data-ttu-id="c9195-351">Wenn die Anwendung eines gehosteten Diensts ist, wird die Anwendungsdomäne entladen.</span><span class="sxs-lookup"><span data-stu-id="c9195-351">If the application is a hosted service, the application domain is unloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
  </Members>
</Type>