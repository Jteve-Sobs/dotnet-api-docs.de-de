<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceBase.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d659a5675f8e308404ab56d663607e4230bf1530.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d659a5675f8e308404ab56d663607e4230bf1530</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceBase">
          <source>Provides a base class for a service that will exist as part of a service application.</source>
          <target state="translated">Stellt eine Basisklasse für einen Dienst als Teil einer Dienstanwendung bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceBase">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> must be derived from when creating a new service class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> muss abgeleitet werden, wenn eine neue Dienstklasse erstellt wird.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Derive from <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> when defining your service class in a service application.</source>
          <target state="translated">Ableiten von <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> beim Definieren Ihrer Dienstklasse in einer dienstanwendung.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Any useful service overrides the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> methods.</source>
          <target state="translated">Sinnvoller Dienst Außerkraftsetzungen der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>For additional functionality, you can override <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> with specific behavior in response to changes in the service state.</source>
          <target state="translated">Sie können zusätzliche Funktionen überschreiben <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> mit bestimmten Verhalten als Reaktion auf Änderungen im Status "Dienst".</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>A service is a long-running executable that does not support a user interface, and which might not run under the logged-on user account.</source>
          <target state="translated">Ein Dienst ist eine lang ausgeführte ausführbare Datei, die eine Benutzeroberfläche nicht unterstützt und welche möglicherweise nicht unter dem Konto des angemeldeten Benutzers ausgeführt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The service can run without any user being logged on to the computer.</source>
          <target state="translated">Der Dienst kann ohne dass ein Benutzer auf dem Computer angemeldet wird ausgeführt.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>By default, services run under the System account, which is not the same as the Administrator account.</source>
          <target state="translated">Führen Sie Dienste standardmäßig unter dem Systemkonto, die nicht identisch mit dem Administratorkonto an.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You cannot change the rights of the System account.</source>
          <target state="translated">Sie können die Rechte des Systemkontos nicht ändern.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Alternatively, you can use a <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> to specify a user account under which the service will run.</source>
          <target state="translated">Alternativ können Sie eine <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> ein Benutzerkonto angeben, unter dem der Dienst ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>An executable can contain more than one service but must contain a separate <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> for each service.</source>
          <target state="translated">Eine ausführbare Datei kann mehrere Dienste enthalten, jedoch muss ein separates enthalten <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> für jeden Dienst.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance registers the service with the system.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> Instanz registriert den Dienst im System.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The installer also associates each service with an event log that you can use to record service commands.</source>
          <target state="translated">Das Installationsprogramm ordnet jedem Dienst mit einem Ereignisprotokoll, die Sie verwenden können, um Befehle aufzuzeichnen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">`main()`</ph> function in the executable defines which services should run.</source>
          <target state="translated">Die <ph id="ph1">`main()`</ph> Funktion in der ausführbaren Datei definiert, welche Dienste ausgeführt werden sollen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The current working directory of the service is the system directory, not the directory in which the executable is located.</source>
          <target state="translated">Das aktuelle Arbeitsverzeichnis des Diensts ist das Systemverzeichnis nicht das Verzeichnis, in dem sich die ausführbare Datei befindet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>When you start a service, the system locates the executable and runs the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> method for that service, contained within the executable.</source>
          <target state="translated">Wenn Sie einen Dienst starten, wird das System die ausführbaren Datei sucht und führt die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> Methode für diesen Dienst, in die ausführbare Datei enthalten sind.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>However, running the service is not the same as running the executable.</source>
          <target state="translated">Allerdings ist mit dem Dienst nicht identisch mit der Ausführung der ausführbaren Datei.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The executable only loads the service.</source>
          <target state="translated">Die ausführbare Datei lädt nur den Dienst.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The service is accessed (for example, started and stopped) through the Service Control Manager.</source>
          <target state="translated">Der Dienst wird über den Dienststeuerungs-Manager (z. B. gestartet oder beendet) zugegriffen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The executable calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> derived class's constructor the first time you call Start on the service.</source>
          <target state="translated">Die ausführbare Datei ruft der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> abgeleitete Klasse Konstruktor das erste Mal auf den Dienst starten aufrufen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> command-handling method is called immediately after the constructor executes.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> befehlsverarbeitung-Methode wird aufgerufen, sobald der Konstruktor führt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The constructor is not executed again after the first time the service has been loaded, so it is necessary to separate the processing performed by the constructor from that performed by <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated">Der Konstruktor wird nicht erneut nach dem ersten Mal mit der Dienst geladen wurde, ausgeführt, daher ist es erforderlich, unterteilen die Verarbeitung durch den Konstruktor aus, die durchgeführt <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Any resources that can be released by <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> should be created in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated">Alle Ressourcen, die durch freigegeben werden können <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> erstellt werden soll, im <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Creating resources in the constructor prevents them from being created properly if the service is started again after <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> has released the resources.</source>
          <target state="translated">Erstellen von Ressourcen im Konstruktor verhindert, dass sie ordnungsgemäß erstellt werden, wenn der Dienst gestartet wurde, erneut nach <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> wurde die Ressourcen freigegeben.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The Service Control Manager (SCM) provides a way to interact with the service.</source>
          <target state="translated">Der Dienststeuerungs-Manager (SCM) bietet eine Möglichkeit, mit dem Dienst interagieren.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can use the SCM to pass Start, Stop, Pause, Continue, or custom commands into the service.</source>
          <target state="translated">SCM können Sie starten, beenden, anhalten, fortsetzen oder benutzerdefinierte Befehle an den Dienst übergeben.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The SCM uses the values of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> to determine whether the service accepts Stop, Pause, or Continue commands.</source>
          <target state="translated">SCM verwendet die Werte der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> bestimmt, ob der Dienst, beenden akzeptiert, Anhalten oder Fortsetzen von Befehlen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Stop, Pause, and Continue are enabled in the SCM's context menus only if the corresponding property <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph3">`true`</ph> in the service class.</source>
          <target state="translated">Beenden, Anhalten und fortsetzen sind aktiviert, in dem SCM Kontext Menüs nur, wenn die entsprechende Eigenschaft <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph3">`true`</ph> in die Dienstklasse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>If enabled, the command is passed to the service, and <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> is called.</source>
          <target state="translated">Wenn aktiviert, wird der Befehl an den Dienst übergeben und <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, oder <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`false`</ph>, the corresponding command-handling method (such as <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>) will not be processed, even if you have implemented the method.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph>, oder <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph4">`false`</ph>, die entsprechende befehlsverarbeitung-Methode (z. B. <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>) nicht verarbeitet werden, auch wenn Sie die Methode implementiert haben.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to do programmatically what the SCM does using a user interface.</source>
          <target state="translated">Sie können die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> Klasse, um programmgesteuert tun, was den SCM verfügt über eine Benutzeroberfläche.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can automate the tasks available in the console.</source>
          <target state="translated">Sie können in der Konsole verfügbaren Tasks automatisieren.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`true`</ph> but you have not implemented a corresponding command-handling method (such as <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>) the system throws an exception and ignores the command.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph>, oder <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph4">`true`</ph> , aber Sie haben eine entsprechende befehlsverarbeitung-Methode nicht implementiert (z. B. <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>) des Systems löst eine Ausnahme aus und ignoriert den Befehl.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You do not have to implement <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>, or any other method in <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</source>
          <target state="translated">Sie müssen nicht implementieren <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>, oder eine andere Methode in <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>However, the service's behavior is described in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, so at minimum, this member should be overridden.</source>
          <target state="translated">Allerdings ist das Verhalten des Diensts in beschriebenen <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, sodass mindestens bei diesem Member überschrieben werden sollte.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">`main()`</ph> function of the executable registers the service in the executable with the Service Control Manager by calling the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">`main()`</ph> Funktion der ausführbaren Datei registriert den Dienst in der ausführbaren Datei mit dem Dienststeuerungs-Manager durch Aufrufen der <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> object passed to the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A&gt;</ph> method must match the <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> property of the service installer for that service.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> Eigenschaft der <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> , übergeben die <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A&gt;</ph> Methode muss übereinstimmen. die <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> Eigenschaft des Service-Installers für diesen Dienst.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can use <ph id="ph1">`InstallUtil.exe`</ph> to install services on your system.</source>
          <target state="translated">Sie können <ph id="ph1">`InstallUtil.exe`</ph> Dienste auf Ihrem System installiert.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can specify a log other than the Application event log to receive notification of service calls, but neither the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> nor the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> property can write to a custom log.</source>
          <target state="translated">Sie können angeben, dass ein Protokoll als das Anwendungsereignisprotokoll, um Benachrichtigungen Dienstaufrufe jedoch weder die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> noch die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> Eigenschaft in ein benutzerdefiniertes Protokoll schreiben kann.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`false`</ph> if you do not want to use automatic logging.</source>
          <target state="translated">Legen Sie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> zu <ph id="ph2">`false`</ph> , wenn Sie nicht automatische Protokollierung verwenden möchten.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> class.</source>
          <target state="translated">Erstellt eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Do not create an instance of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> class.</source>
          <target state="translated">Erstellen Sie eine Instanz der nicht der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Instead, derive from <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> and instantiate your derived class.</source>
          <target state="translated">Leiten Sie stattdessen von <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> und die abgeleitete Klasse instanziieren.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>The minimum you need to implement in the constructor for a class inherited from <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> is to set the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> on your component.</source>
          <target state="translated">Die minimale müssen Sie im Konstruktor implementieren, für eine Klasse geerbt <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> besteht darin, die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> in der Komponente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>No other processing is specifically required in the constructor.</source>
          <target state="translated">Keine weitere Verarbeitung ist insbesondere in den Konstruktor erforderlich.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>You should handle most initialization in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> rather than in the constructor.</source>
          <target state="translated">Sie sollten die meisten Initialisierung in behandeln <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> anstatt im Konstruktor.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Otherwise, there is no guarantee the objects will be reinitialized when you restart a service after it has been stopped.</source>
          <target state="translated">Andernfalls besteht keine Garantie, die die Objekte erneut initialisiert werden, wenn Sie einen Dienst neu starten, nachdem er beendet wurde.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If you override the constructor in your derived class, call the base class constructor in your code.</source>
          <target state="translated">Wenn Sie den Konstruktor in der abgeleiteten Klasse überschreiben, rufen Sie den Basisklassenkonstruktor im Code.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> constructor sets <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> Standardkonstruktor legt <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> auf <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If you do not want to automatically log calls to the service from the Service Control Manager (SCM), set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn Sie nicht automatisch Aufrufe an den Dienst aus der Service Control Manager (SCM) protokollieren möchten, legen Sie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> auf <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If the executable contains a single service, the system calls the service's constructor when Start is selected from the SCM, and runs the destructor if Stop is called.</source>
          <target state="translated">Wenn die ausführbare Datei einen einzelnen Dienst enthält, ruft das System Konstruktor des Dienstes aus, wenn Start, die von der SCM ausgewählt ist, und den Destruktor ausgeführt wird, wenn die Beendigung aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If the executable contains multiple services, calling Start on one service causes the constructors to be called for all services in the executable, but only the specified service is started.</source>
          <target state="translated">Wenn die ausführbare Datei mehrere Dienste enthält, beginnt, einen Dienst aufrufen bewirkt, dass die Konstruktoren für alle Dienste in der ausführbaren Datei aufgerufen werden, aber nur der angegebene Dienst wurde gestartet.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Destructors for the services are run together when all services have been stopped, not individually when each service is stopped.</source>
          <target state="translated">Destruktoren für die Dienste werden zusammen ausgeführt werden, wenn alle Dienste, nicht einzeln angehalten wurden, wenn jeder Dienst beendet wird.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If you override the base class constructor, you should explicitly call it in the constructor of your derived class.</source>
          <target state="translated">Wenn Sie den Konstruktor der Basisklasse überschreiben, müssen Sie explizit im Konstruktor der abgeleiteten Klasse aufrufen.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>Indicates whether to report Start, Stop, Pause, and Continue commands in the event log.</source>
          <target state="translated">Gibt an, ob die Befehle Starten, Beenden, Anhalten und Fortsetzen im Ereignisprotokoll aufgezeichnet werden sollen.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to report information in the event log; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn Informationen im Ereignisprotokoll aufgezeichnet werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`true`</ph> instructs the service to use the Application event log to report command failures, as well as state change information for Start, Stop, Pause, and Continue events on the service.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> auf <ph id="ph2">`true`</ph> weist den Dienst das Anwendungsereignisprotokoll Bericht Befehl Fehlern sowie auf statusänderungsinformationen für Start, Stop, Pause, und Ereignisse auf dem Dienst fortfahren.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>The name of the service is used as the log's <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Der Name des Diensts wird verwendet, als des Protokolls <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>To report information to a custom event log rather than the Application log, set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`false`</ph> and write instructions within the command-handling methods <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> to post to the appropriate log.</source>
          <target state="translated">Informationen zum Windows-Anwendungsprotokoll, anstatt ein benutzerdefiniertes Ereignisprotokoll zu melden, legen Sie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> auf <ph id="ph2">`false`</ph> und Schreiben von Anweisungen innerhalb der Behandlungsmethoden für Befehl <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, oder <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> an das entsprechende Protokoll.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph>, which supplies the source string for the event log, must be set before the service attempts to write to the event log.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph>, der die Quellzeichenfolge für das Ereignisprotokoll bereitstellt, muss festgelegt werden, bevor der Dienst versucht, in das Ereignisprotokoll schreiben.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>Trying to access the event log before the source name is set throws an exception.</source>
          <target state="translated">Bei dem Versuch, die Zugriff auf das Ereignisprotokoll, bevor der Quellname festgelegt wird, löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>Gets or sets a value indicating whether the service can handle notifications of computer power status changes.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Dienst Benachrichtigungen über Änderungen im Energiestatus des Computers verarbeiten kann, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service handles the computer power status changes indicated in the <ph id="ph2">&lt;see cref="T:System.ServiceProcess.PowerBroadcastStatus" /&gt;</ph> class, otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Dienst die in der <ph id="ph2">&lt;see cref="T:System.ServiceProcess.PowerBroadcastStatus" /&gt;</ph>-Klasse angegebenen Änderungen im Energiestatus des Computers verarbeitet, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>When the computer power status changes, the Service Control Manager (SCM) verifies whether the service accepts power event commands using the value of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph>.</source>
          <target state="translated">Wenn der Computer Power Status ändert, Service Control Manager (SCM) wird überprüft, ob der Dienst mit dem Wert des Ereignis-einschaltbefehle akzeptiert <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the command is passed to the service and the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> method is called if defined.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, der Befehl an den Dienst übergeben wird und die <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> Methode wird aufgerufen, wenn definiert.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> is not implemented in the derived class, the SCM handles the power event through the empty base class <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> ist nicht implementiert in der abgeleiteten Klasse behandelt die SCM der Power-Ereignis über die leere Basisklasse <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>This property is modified after the service was started.</source>
          <target state="translated">Diese Eigenschaft wird geändert, nachdem der Dienst gestartet wurde.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
          <source>Gets or sets a value that indicates whether the service can handle session change events received from a Terminal Server session.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Dienst Sitzungsänderungsereignisse aus einer Terminal Server-Sitzung behandeln kann, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service can handle Terminal Server session change events; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Dienst Terminal Server-Sitzungsänderungsereignisse behandeln kann; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
          <source>This property is modified after the service was started.</source>
          <target state="translated">Diese Eigenschaft wird geändert, nachdem der Dienst gestartet wurde.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>Gets or sets a value indicating whether the service can be paused and resumed.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Dienst angehalten und wieder aufgenommen werden kann, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service can be paused; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Dienst angehalten werden kann, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>Set the value of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> property in the constructor for the service.</source>
          <target state="translated">Legen Sie den Wert, der die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> Eigenschaft im Konstruktor für den Dienst.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>When a service is paused, it halts what it is doing.</source>
          <target state="translated">Wenn ein Dienst angehalten wird, hält er an, welche Aufgaben sie ausführen.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>When you continue the service (either through the Service Control Manager or programmatically), <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> runs.</source>
          <target state="translated">Wenn Sie den Dienst (entweder über den Dienststeuerungs-Manager oder programmgesteuert), weiterhin <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>Sending a Pause request to the service can conserve system resources.</source>
          <target state="translated">Eine Anforderung zum Anhalten der an den Dienst senden kann Systemressourcen sparen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>Pause may not release all system resources, but Stop does.</source>
          <target state="translated">Anhalten möglicherweise nicht alle Systemressourcen frei, jedoch wird beendet.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> are often implemented to perform less processing than <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> werden häufig implementiert, um weniger Verarbeitungszeit als <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>When <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph2">`true`</ph>, override <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> to specify the processing that should occur when the Service Control Manager (SCM) passes a Pause or Continue request to your service.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, außer Kraft setzen <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> die Verarbeitung an, die ausgeführt werden soll, wenn der Dienststeuerungs-Manager (SCM) eine Anforderung zum Anhalten oder fortsetzen an den Dienst übergeben.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> should be implemented to undo the processing in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> implementiert werden sollte, um die Verarbeitung in rückgängig machen <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the SCM will not pass Pause or Continue requests to the service, so the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> methods will not be called even if they are implemented.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph2">`false`</ph>, übergibt die SCM nicht anhalten oder fortsetzen Anforderungen an den Dienst, sodass die <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> Methoden werden nicht aufgerufen werden, auch wenn sie implementiert werden.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>In the SCM, the <ph id="ph1">`Pause`</ph> and <ph id="ph2">`Continue`</ph> controls are disabled when <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Im dienststeuerungs-Manager der <ph id="ph1">`Pause`</ph> und <ph id="ph2">`Continue`</ph> Steuerelemente sind deaktiviert, wenn <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>The service has already been started.</source>
          <target state="translated">Der Dienst wurde bereits gestartet.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /&gt;</ph> property cannot be changed once the service has started.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /&gt;</ph>-Eigenschaft kann nach dem Start des Diensts nicht mehr geändert werden.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>Gets or sets a value indicating whether the service should be notified when the system is shutting down.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Dienst beim Herunterfahren des Systems benachrichtigt werden soll, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service should be notified when the system is shutting down; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Dienst beim Herunterfahren des Systems benachrichtigt werden soll, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the service is notified when the system is shutting down.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, der Dienst wird benachrichtigt, wenn das System heruntergefahren wird.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>At shutdown, the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> method is called if it has been implemented in your derived class.</source>
          <target state="translated">Beim Herunterfahren der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> Methode wird aufgerufen, wenn es in der abgeleiteten Klasse implementiert wurde.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>Only the system should cause the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> method to execute; the service can call it, but this is not recommended.</source>
          <target state="translated">Nur das System sollte dazu führen, dass die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> Methode für die Ausführung der Dienst aufrufen, aber dies wird nicht empfohlen.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>The service has already been started.</source>
          <target state="translated">Der Dienst wurde bereits gestartet.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /&gt;</ph> property cannot be changed once the service has started.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /&gt;</ph>-Eigenschaft kann nach dem Start des Diensts nicht mehr geändert werden.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>Gets or sets a value indicating whether the service can be stopped once it has started.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Dienst nach dem Starten beendet werden kann, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service can be stopped and the <ph id="ph2">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnStop" /&gt;</ph> method called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Dienst angehalten und die <ph id="ph2">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnStop" /&gt;</ph>-Methode aufgerufen werden kann, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>When Stop is called on a service, the Service Control Manager (SCM) verifies whether the service accepts Stop commands using the value of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>.</source>
          <target state="translated">Beim Beenden eines Diensts aufgerufen wird, wird der Dienststeuerungs-Manager (SCM) überprüft, ob es sich bei der Dienst beenden-Befehle, die mit dem Wert des akzeptiert <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>For most services, the value of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> is <ph id="ph2">`true`</ph>, but some operating system services, for example, do not allow the user to stop them.</source>
          <target state="translated">Für die meisten Dienste, die den Wert der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, aber einige Betriebssystemdiensten können z. B. nicht den Benutzer, die sie beenden.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the Stop command is passed to the service and the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> method is called if it is defined.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, wird der Befehl zum Beenden an den Dienst übergeben und die <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> Methode wird aufgerufen, wenn er definiert ist.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> is not implemented in the derived class, the SCM handles the Stop command through the empty base class <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> ist nicht in der abgeleiteten Klasse, die SCM-Handles, die zum Beenden der Befehl über die leere Basisklasse implementiert <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>The service has already been started.</source>
          <target state="translated">Der Dienst wurde bereits gestartet.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanStop" /&gt;</ph> property cannot be changed once the service has started.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanStop" /&gt;</ph>-Eigenschaft kann nach dem Start des Diensts nicht mehr geändert werden.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>.</source>
          <target state="translated">Gibt die von der <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>-Klasse verwendeten Ressourcen (mit Ausnahme des Speichers) frei.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> in your derived class (and through it, in the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> class) when you are finished using the derived class.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> in die abgeleitete Klasse (und dadurch in die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> Klasse) Sie abschließend die abgeleitete Klasse verwenden.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> method leaves the derived class in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> Methode bewirkt, dass die abgeleitete Klasse in einem nicht verwendbaren Zustand.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>After calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph>, you must release all references to the derived class and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> so the memory they were occupying can be reclaimed by garbage collection.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph>, müssen Sie alle Verweise auf die abgeleitete Klasse freigeben und <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> , damit der belegte Arbeitsspeicher von der Garbagecollection wieder zugänglich gemacht werden kann.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> before you release your last reference to the class derived from <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</source>
          <target state="translated">Rufen Sie immer <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> , bevor Sie den letzten Verweis auf die Klasse abgeleitet freigeben <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>Otherwise, the resources <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> and the derived class are using will not be freed until garbage collection calls the objects' destructors.</source>
          <target state="translated">Andernfalls, die Ressourcen <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> und die abgeleitete Klasse wird nicht freigegeben werden, bis die Garbagecollection den Destruktor des Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> is often implemented to process the code in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, combined with a call to <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> wird häufig implementiert, um den Code in verarbeiten <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>kombiniert mit einem Aufruf von <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>If you choose to do this in your derived class, it is customary to implement <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> to allocate whatever <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> released.</source>
          <target state="translated">Wenn Sie dazu in der abgeleiteten Klasse auswählen, wird normalerweise implementiert, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> zuweisen nach Belieben <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> freigegeben.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>Gets an event log you can use to write notification of service command calls, such as Start and Stop, to the Application event log.</source>
          <target state="translated">Ruft ein Ereignisprotokoll ab, mit dem Sie Benachrichtigungen über Aufrufe von Dienstbefehlen wie Starten und Beenden in das Anwendungsereignisprotokoll schreiben können.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>An <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLog" /&gt;</ph> instance whose source is registered to the Application log.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLog" /&gt;</ph>-Instanz, deren Quelle im Anwendungsprotokoll registriert ist.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>The constructor initializes the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> property to an instance with the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType&gt;</ph> properties set.</source>
          <target state="translated">Der Konstruktor initialisiert die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> Eigenschaft zu einer Instanz mit der <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph> und <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType&gt;</ph> festgelegten Eigenschaften.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>The source is the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> of the service, and the log is the computer's Application log.</source>
          <target state="translated">Die Quelle ist die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> des Diensts, und das Protokoll ist Anwendungsprotokoll des Computers.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>These values are set automatically and cannot be changed for automatic logging of service commands.</source>
          <target state="translated">Diese Werte werden automatisch festgelegt und können nicht geändert werden, für die automatische Protokollierung von Dienstbefehlen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>When <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> is <ph id="ph2">`true`</ph>, Start, Stop, Pause, Continue, and custom commands are recorded automatically in the Application event log.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, starten, beenden, anhalten, fortsetzen und benutzerdefinierte Befehle werden automatisch in das Anwendungsereignisprotokoll aufgezeichnet.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>You can use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> property to write additional messages to that log as well.</source>
          <target state="translated">Sie können die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> Eigenschaft in dieses Protokoll auch zusätzliche Nachrichten schreiben.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>The component calls <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType&gt;</ph> using this <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> member.</source>
          <target state="translated">Die Komponente ruft <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType&gt;</ph> mit diesem <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> Member.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>To report information to a custom event log rather than the Application log, set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`false`</ph> and write instructions within the command-handling methods <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> to post to the appropriate log.</source>
          <target state="translated">Informationen zum Windows-Anwendungsprotokoll, anstatt ein benutzerdefiniertes Ereignisprotokoll zu melden, legen Sie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> auf <ph id="ph2">`false`</ph> und Schreiben von Anweisungen innerhalb der Behandlungsmethoden für Befehl <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, oder <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> an das entsprechende Protokoll.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ExitCode">
          <source>Gets or sets the exit code for the service.</source>
          <target state="translated">Ruft den Exitcode für den Dienst ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ExitCode">
          <source>The exit code for the service.</source>
          <target state="translated">Der Exitcode für den Dienst.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ExitCode">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ExitCode%2A&gt;</ph> property to a non-zero value before stopping the service to indicate an error to the Service Control Manager.</source>
          <target state="translated">Legen Sie die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ExitCode%2A&gt;</ph> Eigenschaft auf einen Wert ungleich 0 (null) vor dem Beenden des Diensts zur Anzeige ein Fehlers mit dem Dienststeuerungs-Manager.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="F:System.ServiceProcess.ServiceBase.MaxNameLength">
          <source>Indicates the maximum size for a service name.</source>
          <target state="translated">Gibt die maximale Größe für einen Dienstnamen an.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ServiceProcess.ServiceBase.MaxNameLength">
          <source>ServiceName and DisplayName both have size restrictions that must be observed when setting the properties on your service class.</source>
          <target state="translated">ServiceName und DisplayName haben beide Größe Einschränkungen müssen, beim Festlegen der Eigenschaften auf die Dienstklasse berücksichtigt werden.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>When implemented in a derived class, <ph id="ph1">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /&gt;</ph> runs when a Continue command is sent to the service by the Service Control Manager (SCM).</source>
          <target state="translated">Bei der Implementierung in einer abgeleiteten Klasse wird <ph id="ph1">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /&gt;</ph> ausgeführt, wenn der Dienststeuerungs-Manager einen Befehl zum Fortsetzen an den Dienst sendet.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>Specifies actions to take when a service resumes normal functioning after being paused.</source>
          <target state="translated">Gibt Aktionen an, die durchgeführt werden müssen, wenn der normale Betrieb eines Diensts nach dem Anhalten wieder aufgenommen wird.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>Implement <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> to mirror your application's response to <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</source>
          <target state="translated">Implementieren <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> zum Spiegeln von Ihrer Anwendung als Antwort auf <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>When you continue the service (either through the Services console or programmatically), the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> processing runs, and the service becomes active again.</source>
          <target state="translated">Wenn Sie den Dienst (entweder programmgesteuert oder mit der Konsole Dienste), weiterhin die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> Verarbeitung ausgeführt wird und der Dienst wird wieder aktiviert.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> is expected to be overridden when the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> Wenn außer Kraft gesetzt werden soll die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> Eigenschaft ist <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the SCM will not pass Pause or Continue requests to the service, so the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> methods will not be called even if they are implemented.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph2">`false`</ph>, übergibt die SCM nicht anhalten oder fortsetzen Anforderungen an den Dienst, sodass die <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> Methoden werden nicht aufgerufen werden, auch wenn sie implementiert werden.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>In the SCM, the <ph id="ph1">`Pause`</ph> and <ph id="ph2">`Continue`</ph> controls are disabled when <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Im dienststeuerungs-Manager der <ph id="ph1">`Pause`</ph> und <ph id="ph2">`Continue`</ph> Steuerelemente sind deaktiviert, wenn <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>The command message sent to the service.</source>
          <target state="translated">Die an den Dienst gesendete Befehlsnachricht.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>When implemented in a derived class, <ph id="ph1">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /&gt;</ph> executes when the Service Control Manager (SCM) passes a custom command to the service.</source>
          <target state="translated">Bei der Implementierung in einer abgeleiteten Klasse wird <ph id="ph1">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /&gt;</ph> ausgeführt, wenn der Dienststeuerungs-Manager einen benutzerdefinierten Befehl an den Dienst übergibt.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>Specifies actions to take when a command with the specified parameter value occurs.</source>
          <target state="translated">Gibt an, welche Aktionen auszuführen sind, wenn ein Befehl mit dem angegebenen Parameter auftritt.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> lets you specify additional functionality beyond starting, stopping, pausing and continuing services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> können Sie zusätzliche Funktionalität jenseits von starten, beenden, Anhalten und fortsetzen Dienste angeben.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>The SCM does not examine the custom command to verify whether the service supports the <ph id="ph1">`command`</ph> parameter passed in.</source>
          <target state="translated">SCM ist nicht untersuchen Sie die benutzerdefinierten Befehls zu überprüfen, ob der Dienst unterstützt die <ph id="ph1">`command`</ph> übergebene Parameter.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>It passes the custom command directly to the service.</source>
          <target state="translated">Den benutzerdefinierten Befehl übergibt direkt an den Dienst.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>If the service does not recognize the <ph id="ph1">`command`</ph> parameter, it does nothing.</source>
          <target state="translated">Wenn der Dienst nicht erkennt die <ph id="ph1">`command`</ph> Parameter, es wird keine Aktion ausgeführt.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>Custom commands are raised by an <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A&gt;</ph> statement in a <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> component.</source>
          <target state="translated">Benutzerdefinierte Befehle werden ausgelöst, indem ein <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A&gt;</ph> -Anweisung in einer <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> Komponente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>Use a switch statement or if..then condition to handle the custom commands you define on your service.</source>
          <target state="translated">Verwenden Sie eine Switch-Anweisung oder, wenn... Klicken Sie dann Bedingung, die benutzerdefinierte Befehle zu verarbeiten, die Sie für Ihren Dienst definieren.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>The only values for a custom command that you can define in your application or use in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> are those between 128 and 255.</source>
          <target state="translated">Nur die Werte für einen benutzerdefinierten Befehl, die Sie in Ihrer Anwendung definieren oder verwenden Sie in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> sind diejenigen zwischen 128 und 255.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>Integers below 128 correspond to system-reserved values.</source>
          <target state="translated">Ganze Zahlen unter 128 entsprechen Werten System reserviert.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, custom commands, like all other commands, write entries to the event log to report whether the method execution succeeded or failed.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>, Schreiben von benutzerdefinierten Befehlen, wie alle anderen Befehle Einträge in das Ereignisprotokoll zum melden, ob die Ausführung der Methode erfolgreich war oder nicht.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>When implemented in a derived class, executes when a Pause command is sent to the service by the Service Control Manager (SCM).</source>
          <target state="translated">Wird bei der Implementierung in einer abgeleiteten Klasse ausgeführt, wenn der Dienststeuerungs-Manager einen Befehl zum Anhalten an den Dienst sendet.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>Specifies actions to take when a service pauses.</source>
          <target state="translated">Gibt Aktionen an, die beim Anhalten eines Diensts durchgeführt werden müssen.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> to specify the processing that occurs when the service receives a Pause command.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> die Verarbeitung an, das auftritt, wenn der Dienst einen Befehl zum Anhalten empfängt.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> is expected to be overridden when the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> Wenn außer Kraft gesetzt werden soll die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> Eigenschaft ist <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>When you continue a paused service (either through the Services console or programmatically), the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> processing is run, and the service becomes active again.</source>
          <target state="translated">Wenn Sie einen angehaltenen Dienst (entweder programmgesteuert oder mit der Konsole Dienste), weiterhin die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> Verarbeitung ausgeführt wird, und der Dienst wird wieder aktiviert.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>The Pause command only allows your application to react to a specific event.</source>
          <target state="translated">Der Befehl "Pause" kann nur die Anwendung, auf ein bestimmtes Ereignis zu reagieren.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> does nothing to the service that you do not define it to do.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> führt keine Aktion an den Dienst, den Sie nicht mit dem definieren.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>Sending a Pause request to the service can conserve system resources because Pause need not release all system resources.</source>
          <target state="translated">Eine Anforderung zum Anhalten der an den Dienst senden kann Systemressourcen beibehalten werden, da anhalten nicht alle Systemressourcen freigeben muss.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>For example, if threads have been opened by the process, pausing a service rather than stopping it can allow the threads to remain open, obviating the need to reallocate them when the service continues.</source>
          <target state="translated">Wenn Threads sein, durch den Prozess geöffnet worden, einen Dienst anhalten, anstatt durch beendet die Threads geöffnet bleiben kann sodass z. B. die Notwendigkeit, sie neu zuordnen, wenn der Dienst weiterhin auf.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>If you define Pause to release all system resources, it behaves like a Stop command.</source>
          <target state="translated">Wenn Sie anhalten, um Systemressourcen freizugeben definieren, verhält er wie ein Befehl zum Beenden.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>Set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> to <ph id="ph2">`true`</ph>, and override <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> to specify the processing that should occur when the SCM passes a Pause or Continue request to your service.</source>
          <target state="translated">Legen Sie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> auf <ph id="ph2">`true`</ph>, und überschreiben <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> an, die auftreten soll, wenn die SCM eine Anforderung zum Anhalten oder Fortsetzen mit dem Dienst übergibt die Verarbeitung.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> should be implemented to undo the processing in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> implementiert werden sollte, um die Verarbeitung in rückgängig machen <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the SCM will not pass Pause or Continue requests to the service, so the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> methods will not be called even if implemented.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph2">`false`</ph>, übergibt die SCM nicht anhalten oder fortsetzen Anforderungen an den Dienst, sodass die <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> Methoden werden nicht aufgerufen werden, auch wenn implementiert.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>In the SCM, the <ph id="ph1">`Pause`</ph> and <ph id="ph2">`Continue`</ph> controls are disabled when <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Im dienststeuerungs-Manager der <ph id="ph1">`Pause`</ph> und <ph id="ph2">`Continue`</ph> Steuerelemente sind deaktiviert, wenn <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceProcess.PowerBroadcastStatus" /&gt;</ph> that indicates a notification from the system about its power status.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceProcess.PowerBroadcastStatus" /&gt;</ph>, der eine Benachrichtigung des Systems über dessen Energiestatus angibt.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>When implemented in a derived class, executes when the computer's power status has changed.</source>
          <target state="translated">Wird bei der Implementierung in einer abgeleiteten Klasse ausgeführt, wenn sich der Energiestatus des Computers geändert hat.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>This applies to laptop computers when they go into suspended mode, which is not the same as a system shutdown.</source>
          <target state="translated">Dies gilt für Laptops, wenn diese in den Standbymodus wechseln. Dieser entspricht nicht dem Herunterfahren des Systems.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>When implemented in a derived class, the needs of your application determine what value to return.</source>
          <target state="translated">Bei Implementierung in einer abgeleiteten Klasse bestimmen die Anforderungen der Anwendung, welcher Wert zurückzugeben ist.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>For example, if a <ph id="ph1">&lt;see langword="QuerySuspend" /&gt;</ph> broadcast status is passed, you could cause your application to reject the query by returning <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wenn beispielsweise ein <ph id="ph1">&lt;see langword="QuerySuspend" /&gt;</ph>-Broadcaststatus übergeben wird, können Sie die Anwendung veranlassen, die Abfrage durch Rückgabe <ph id="ph2">&lt;see langword="false" /&gt;</ph> abzulehnen.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> to specify the processing that occurs when the system event indicated in the <ph id="ph2">&lt;xref:System.ServiceProcess.PowerBroadcastStatus&gt;</ph> enumeration occurs--for example, when the computer is placed in suspended mode or indicates low battery power.</source>
          <target state="translated">Verwenden <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> an tritt auf, wenn das Systemereignis in angegeben. die Verarbeitung der <ph id="ph2">&lt;xref:System.ServiceProcess.PowerBroadcastStatus&gt;</ph> Enumeration auftritt – z. B. wenn der Computer im angehaltenen Modus befindet oder niedriger Batteriestand angibt.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> is expected to be overridden when the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> Wenn außer Kraft gesetzt werden soll die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph> Eigenschaft ist <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
          <source>A structure that identifies the change type.</source>
          <target state="translated">Eine -Struktur, die den Änderungstyp angibt.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
          <source>Executes when a change event is received from a Terminal Server session.</source>
          <target state="translated">Wird ausgeführt, wenn ein Änderungsereignis von einer Terminal Server-Sitzung empfangen wird.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
          <source>You must set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable the execution of this method.</source>
          <target state="translated">Sie müssen festlegen, die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A&gt;</ph> Eigenschaft, um <ph id="ph2">`true`</ph> So aktivieren Sie die Ausführung dieser Methode.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source>When implemented in a derived class, executes when the system is shutting down.</source>
          <target state="translated">Wird bei der Implementierung in einer abgeleiteten Klasse beim Herunterfahren des Systems ausgeführt.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source>Specifies what should occur immediately prior to the system shutting down.</source>
          <target state="translated">Gibt an, welche Vorgänge unmittelbar vor dem Herunterfahren des Systems ausgeführt werden sollen.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> to specify the processing that occurs when the system shuts down.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> die Verarbeitung an, das auftritt, wenn das System heruntergefahren wird.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source>This event occurs only when the operating system is shut down, not when the computer is turned off.</source>
          <target state="translated">Dieses Ereignis tritt nur auf, wenn das Betriebssystem heruntergefahren ist, nicht verwendet werden, wenn der Computer ausgeschaltet ist.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> is expected to be overridden when the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> Wenn außer Kraft gesetzt werden soll die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph> Eigenschaft ist <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Data passed by the start command.</source>
          <target state="translated">Vom Befehl zum Starten übergebene Daten.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically).</source>
          <target state="translated">Wird bei der Implementierung in einer abgeleiteten Klasse ausgeführt, wenn der Dienststeuerungs-Manager einen Befehl zum Starten an den Dienst sendet oder wenn das Betriebssystem gestartet wird (diese gilt für Dienste, die automatisch gestartet werden).</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Specifies actions to take when the service starts.</source>
          <target state="translated">Gibt Aktionen an, die beim Starten des Diensts ausgeführt werden müssen.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> to specify the processing that occurs when the service receives a Start command.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> die Verarbeitung an, das auftritt, wenn der Dienst einen Befehl zum Starten empfängt.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> is the method in which you specify the behavior of the service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> ist die Methode, in der Sie das Verhalten des Diensts angeben.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> can take arguments as a way to pass data, but this usage is rare.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> können Argumente als eine Möglichkeit, Daten zu übergeben, aber diese Verwendung ist selten.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Do not use the constructor to perform processing that should be in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated">Verwenden Sie den Konstruktor nicht Verarbeitungen ausführen, die in sollten <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> to handle all initialization of your service.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> alle Initialisierung des Diensts zu behandeln.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>The constructor is called when the application's executable runs, not when the service runs.</source>
          <target state="translated">Der Konstruktor wird aufgerufen, wenn die Anwendung der ausführbaren ausgeführt wird, nicht verwendet werden, wenn der Dienst ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>The executable runs before <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated">Die ausführbare Datei ausgeführt wird, bevor Sie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>When you continue, for example, the constructor is not called again because the SCM already holds the object in memory.</source>
          <target state="translated">Wenn Sie, z. B. Fortfahren wird der Konstruktor nicht erneut aufgerufen, da der SCM das Objekt bereits im Arbeitsspeicher enthält.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> releases resources allocated in the constructor rather than in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, the needed resources would not be created again the second time the service is called.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> in den Konstruktor statt im reservierten Ressourcen frei <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, würde die erforderlichen Ressourcen nicht erneut das zweite Mal wird der Dienst aufgerufen erstellt werden.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Services can be set to start automatically when the computer reboots by setting the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> on the service's installer to <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceStartMode.Automatic&gt;</ph>.</source>
          <target state="translated">Für Dienste kann festgelegt werden, für den automatischen start beim Neustart des Computers durch Festlegen der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> auf den Dienst-Installer, um <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceStartMode.Automatic&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>In such a situation, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> would be called at system startup.</source>
          <target state="translated">In einer solchen Situation <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> beim Systemstart aufgerufen.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> is expected to be overridden in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> muss in der abgeleiteten Klasse außer Kraft gesetzt werden.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>For the service to be useful, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> should both be implemented in your service class.</source>
          <target state="translated">Für den Dienst sind aussagekräftig sind, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> muss sowohl in Ihrer Dienstklasse implementiert werden.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Process initialization arguments for the service in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> method, not in the Main method.</source>
          <target state="translated">Verarbeiten von Initialisierungsargumente für den Dienst in der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> Methode nicht in der Main-Methode.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>The arguments in the <ph id="ph1">`args`</ph> parameter array can be set manually in the properties window for the service in the Services console.</source>
          <target state="translated">Die Argumente in der <ph id="ph1">`args`</ph> Parameterarray kann manuell im Fenster "Eigenschaften" für den Dienst in der Konsole Dienste festgelegt werden.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>The arguments entered in the console are not saved; they are passed to the service on a one-time basis when the service is started from the control panel.</source>
          <target state="translated">In der Konsole eingegebenen Argumente werden nicht gespeichert. Sie werden an den Dienst einmalig übergeben, wenn der Dienst über die Systemsteuerung gestartet wird.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Arguments that must be present when the service is automatically started can be placed in the ImagePath string value for the service's registry key (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services<ph id="ph1">\\</ph><bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>service name&gt;<ept id="p1">*</ept>).</source>
          <target state="translated">Argumente, die vorhanden sein müssen, wenn der Dienst automatisch gestartet, platziert werden können, in die ImagePath-Zeichenfolgenwert für den Dienst-Registrierungsschlüssel (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services<ph id="ph1">\\</ph> <bpt id="p1">*</bpt> <ph id="ph2">\&lt;</ph> Dienstname &gt;<ept id="p1">*</ept>).</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>You can obtain the arguments from the registry using the <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> method, for example:  <ph id="ph2">`string[] imagePathArgs = Environment.GetCommandLineArgs();`</ph>.</source>
          <target state="translated">Sie erhalten die Argumente aus der Registrierung mithilfe der <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> Methode, zum Beispiel: <ph id="ph2">`string[] imagePathArgs = Environment.GetCommandLineArgs();`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM).</source>
          <target state="translated">Wird bei der Implementierung in einer abgeleiteten Klasse ausgeführt, wenn der Dienststeuerungs-Manager einen Befehl zum Beenden an den Dienst sendet.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>Specifies actions to take when a service stops running.</source>
          <target state="translated">Gibt Aktionen an, die beim Beenden eines Diensts auszuführen sind.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> to specify the processing that occurs when the service receives a Stop command.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> die Verarbeitung an, das auftritt, wenn der Dienst einen Befehl zum Beenden empfängt.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>When the SCM receives a Stop command, it uses the value of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> to verify whether the service accepts Stop commands.</source>
          <target state="translated">Wenn der SCM einen Befehl zum Beenden empfängt, verwendet Sie den Wert der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> zu überprüfen, ob der Dienst beenden Befehle akzeptiert.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the Stop command is passed to the service, and the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> method is called if it is defined.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, wird der Befehl zum Beenden an den Dienst übergeben und die <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> Methode wird aufgerufen, wenn er definiert ist.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> is not implemented in the service, the SCM handles the Stop command.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> ist nicht implementiert der Dienst behandelt SCM Befehl zum Beenden.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the SCM ignores the Stop command.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> ist <ph id="ph2">`false`</ph>, der SCM, ignoriert der Befehl zum Beenden.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>It is not passed to the service.</source>
          <target state="translated">Es ist nicht an den Dienst übergeben.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>The Stop command returns and throws an exception.</source>
          <target state="translated">Der Befehl zum Beenden gibt zurück und löst eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> is expected to be overridden in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> muss in der abgeleiteten Klasse außer Kraft gesetzt werden.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>For the service to be useful, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> should both be implemented in your service class.</source>
          <target state="translated">Für den Dienst sind aussagekräftig sind, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> muss sowohl in Ihrer Dienstklasse implementiert werden.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>The requested time in milliseconds.</source>
          <target state="translated">Die angeforderte Zeit in Millisekunden.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>Requests additional time for a pending operation.</source>
          <target state="translated">Fordert zusätzliche Zeit für eine ausstehende Operation an.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A&gt;</ph> method is intended to be called by the overridden <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> methods to request additional time for a pending operation, to prevent the Service Control Manager (SCM) from marking the service as not responding.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A&gt;</ph> Methode aufgerufen werden soll von der überschriebenen <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, oder <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> Methoden, um zusätzliche Zeit für einen ausstehenden Vorgang, um zu verhindern, dass der Dienststeuerungs-Manager (SCM)-Kennzeichnung Anfordern der der Dienst reagiert nicht mehr.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>If the pending operation is not a continue, pause, start, or stop, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn der ausstehende Vorgang keine fortfahren, anhalten, starten oder beenden, ist ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>The service is not in a pending state.</source>
          <target state="translated">Der Dienst steht nicht aus.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceBase">
          <source>Provides the main entry point for a service executable.</source>
          <target state="translated">Stellt den Haupteinstiegspunkt für die ausführbare Datei eines Diensts bereit.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> which indicates a service to start.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>, die einen zu startenden Dienst angibt.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>Registers the executable for a service with the Service Control Manager (SCM).</source>
          <target state="translated">Registriert die ausführbare Datei für einen Dienst im Dienststeuerungs-Manager.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>Call this overload in the <ph id="ph1">`main()`</ph> function of the service executable to register the service with the Service Control Manager.</source>
          <target state="translated">Rufen Sie diese Überladung in der <ph id="ph1">`main()`</ph> Funktion, der den Dienst mit dem Dienststeuerungs-Manager registrieren ausführbaren Dienstdatei.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>After you call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29&gt;</ph>, the Service Control Manager issues a Start command, which results in a call to the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> method in the service.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29&gt;</ph>, der Dienstkontroll-Manager stellt einen Befehl zum Starten, dies zu einem Aufruf führt der <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> Methode im Dienst.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>The service is not started until the Start command is executed.</source>
          <target state="translated">Der Dienst wird nicht gestartet, bis der Startbefehl ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType&gt;</ph> method is called in much the same way as <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> for Windows Forms applications.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType&gt;</ph> Methode wird aufgerufen, in die gleiche Weise wie <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> für Windows Forms-Anwendungen.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> is <ph id="ph2">`true`</ph>, an entry is written to the event log if the service specified by the <ph id="ph3">`service`</ph> parameter fails to start.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, wird ein Eintrag in das Ereignisprotokoll geschrieben, wenn der Dienst vom angegebenen der <ph id="ph3">`service`</ph> Parameter nicht gestartet.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>An array of ServiceBase instances, which indicate services to start.</source>
          <target state="translated">Ein Array von ServiceBase-Instanzen, die zu startende Dienste angeben.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>Registers the executable for multiple services with the Service Control Manager (SCM).</source>
          <target state="translated">Registriert die ausführbare Datei für mehrere Dienste im Dienststeuerungs-Manager.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>Call this overload in the <ph id="ph1">`main()`</ph> function of the service executable to register the services with the Service Control Manager.</source>
          <target state="translated">Rufen Sie diese Überladung in der <ph id="ph1">`main()`</ph> Funktion des Diensts, die ausführbare Datei, um die Dienste mit dem Dienststeuerungs-Manager zu registrieren.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>After you call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29&gt;</ph>, the Service Control Manager issues Start commands, which result in calls to the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> methods in the services.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29&gt;</ph>, der Dienstkontroll-Manager gibt die Start-Befehle, in aufrufen, wodurch die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> Methoden in den Diensten.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>The services are not started until the Start commands are executed.</source>
          <target state="translated">Die Dienste werden nicht gestartet werden, bis die Start-Befehle ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType&gt;</ph> method is called in much the same way as the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> method for Windows Forms applications.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType&gt;</ph> Methode wird aufgerufen, in die gleiche Weise wie die <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> Methode für Windows Forms-Anwendungen.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> is <ph id="ph2">`true`</ph>, an entry is written to the event log if any service in the array fails to start.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, wird ein Eintrag in das Ereignisprotokoll geschrieben, wenn ein Dienst im Array nicht gestartet.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>You did not supply a service to start.</source>
          <target state="translated">Sie haben keinen zu startenden Dienst angegeben.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>The array might be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or empty.</source>
          <target state="translated">Das Array ist u. U. <ph id="ph1">&lt;see langword="null" /&gt;</ph> oder leer.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>Gets the service control handle for the service.</source>
          <target state="translated">Ruft das Dienststeuerungshandle für den Dienst ab.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> structure that contains the service control handle for the service.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Struktur, die das Dienststeuerungshandle für den Dienst enthält.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>The service control handle is used to communicate with the Service Control Manager (SCM).</source>
          <target state="translated">Der Kontrollpunkt Service dient zum Kommunizieren mit dem Dienststeuerungs-Manager (SCM).</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>The handle can be used to update the service control manager's status information for the calling service using the unmanaged <ph id="ph1">`SetServiceStatus`</ph> function.</source>
          <target state="translated">Das Handle kann zum Aktualisieren des dienststeuerungs-Manager-Statusinformationen für den aufrufenden Dienst mithilfe der nicht verwalteten <ph id="ph1">`SetServiceStatus`</ph> Funktion.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>for access to unmanaged code.</source>
          <target state="translated">für den Zugriff auf nicht verwalteten Code.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
          <source>The number of arguments in the argument array.</source>
          <target state="translated">Die Anzahl der Argumente im Argumentarray.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> structure that points to an array of arguments.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>-Struktur, die auf ein Array von Argumenten zeigt.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
          <source>Registers the command handler and starts the service.</source>
          <target state="translated">Registriert den Befehlshandler und startet den Dienst.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>Gets or sets the short name used to identify the service to the system.</source>
          <target state="translated">Ruft den zur Bezeichnung des Diensts beim System verwendeten kurzen Namen ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The name of the service.</source>
          <target state="translated">Der Name des Diensts.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> identifies the service to the Service Control Manager.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> identifiziert den Dienst mit dem Dienststeuerungs-Manager.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The value of this property must be identical to the name recorded for the service in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType&gt;</ph> property of the corresponding installer class.</source>
          <target state="translated">Der Wert dieser Eigenschaft muss identisch mit dem Namen für den Dienst in der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft des entsprechenden Installerklasse.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>In code, the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> of the service is usually set in the <ph id="ph2">`main()`</ph> function of the executable.</source>
          <target state="translated">Im Code der <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> des Diensts wird in der Regel legen Sie der <ph id="ph2">`main()`</ph> Funktion der ausführbaren Datei.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> is also used to specify the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph> associated with the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> property.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> dient auch zum Angeben der <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph> zugeordneten der <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>This <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> is an instance that writes service command information to the Application log.</source>
          <target state="translated">Dies <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> ist eine Instanz, die die Informationen zum Befehl in das Anwendungsprotokoll schreibt.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph>, which supplies the source string for the event log, must be set before the service writes to the event log.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph>, der die Quellzeichenfolge für das Ereignisprotokoll bereitstellt, muss festgelegt werden, bevor der Dienst in das Ereignisprotokoll schreibt.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>Trying to access the event log before the source name is set causes an exception to be thrown.</source>
          <target state="translated">Beim Versuch, das Ereignisprotokoll zugreifen, bevor der Quellname festgelegt wird, eine Ausnahme ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The service has already been started.</source>
          <target state="translated">Der Dienst wurde bereits gestartet.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /&gt;</ph> property cannot be changed once the service has started.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /&gt;</ph>-Eigenschaft kann nach dem Start des Diensts nicht mehr geändert werden.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The specified name is a zero-length string or is longer than <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" /&gt;</ph>, or the specified name contains forward slash or backslash characters.</source>
          <target state="translated">Der angegebene Name ist eine Zeichenfolge der Länge 0 (null) oder ist länger als <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" /&gt;</ph>, oder der angegebene Name enthält Schrägstriche oder umgekehrte Schrägstriche.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Stop">
          <source>Stops the executing service.</source>
          <target state="translated">Beendet den ausgeführten Dienst.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Stop">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Stop%2A&gt;</ph> method sets the service state to indicate a stop is pending and calls the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Stop%2A&gt;</ph> Methode legt fest, den Status des Dienstes an, dass eine Beenden steht aus und ruft die <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Stop">
          <source>After the application is stopped, the service state is set to stopped.</source>
          <target state="translated">Nachdem die Anwendung beendet ist, wird der Dienstzustand auf beendet festgelegt.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Stop">
          <source>If the application is a hosted service, the application domain is unloaded.</source>
          <target state="translated">Wenn die Anwendung einen gehosteten Dienst ist, wird die Anwendungsdomäne entladen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>