<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c20e92c41d23587c8e791d251cf9ba3406bd2c80" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70458166" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Installiert eine ausführbare Datei, die Klassen enthält, die <see cref="T:System.ServiceProcess.ServiceBase" /> erweitern. Diese Klasse wird von Installationsprogrammen, z. B. von InstallUtil.exe, beim Installieren einer Dienstanwendung aufgerufen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.ServiceProcess.ServiceProcessInstaller> funktioniert gemeinsam mit allen Diensten in einer ausführbaren Datei. Sie wird vom Installationsprogramm zum Schreiben von Registrierungs Werten verwendet, die mit den Diensten verknüpft sind, die Sie installieren möchten.  
  
 Erstellen Sie zum Installieren eines Dienstanbieter eine projektinstallerklasse, <xref:System.Configuration.Install.Installer>die von erbt <xref:System.ComponentModel.RunInstallerAttribute> , und legen Sie `true`für die-Klasse auf fest. Instanziieren Sie in Ihrem Projekt eine <xref:System.ServiceProcess.ServiceProcessInstaller> Instanz pro Dienst Anwendung und eine <xref:System.ServiceProcess.ServiceInstaller> Instanz für jeden Dienst in der Anwendung. Fügen Sie abschließend die <xref:System.ServiceProcess.ServiceProcessInstaller> -Instanz und <xref:System.ServiceProcess.ServiceInstaller> die-Instanzen Ihrer projektinstallerklasse hinzu.  
  
 Wenn "installutil. exe" ausgeführt wird, sucht das Hilfsprogramm nach Klassen in der <xref:System.ComponentModel.RunInstallerAttribute> Dienstassembly `true`, bei denen auf festgelegt ist. Fügen Sie der Dienstassembly Klassen hinzu, indem Sie Sie <xref:System.Configuration.Install.Installer.Installers%2A> der Auflistung hinzufügen, die Ihrem Projekt Installationsprogramm zugeordnet ist. Wenn  <xref:System.ComponentModel.RunInstallerAttribute> den Wert hat, wird das Projekt Installationsprogramm ignoriert. `false`  
  
 Bei einer Instanz von <xref:System.ServiceProcess.ServiceProcessInstaller>können Sie die Eigenschaften ändern, indem Sie angeben, dass eine Dienst Anwendung unter einem anderen Konto als dem angemeldeten Benutzer ausgeführt wird. Sie können ein bestimmtes <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> -und-Paar angeben, unter dem der- <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> Dienst ausgeführt werden soll <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> , oder Sie können verwenden, um anzugeben, dass der Dienst unter dem System Konto des Computers, einem lokalen oder Netzwerkdienst Konto oder einem Benutzerkonto ausgeführt wird.  
  
> [!NOTE]
>  Das System Konto des Computers ist nicht mit dem Administrator Konto identisch.  
  
 Normalerweise wird die-Methode <xref:System.ServiceProcess.ServiceInstaller> nicht innerhalb Ihres Codes aufgerufen. Sie werden in der Regel nur vom Installations Dienstprogramm aufgerufen. Das Installationsprogramm ruft während des <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> Installations <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> Vorgangs automatisch die-Methode und die-Methode auf. Sie werden ggf. Fehler durch Aufrufen <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> von (oder <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) für alle zuvor installierten Komponenten gesichert.  
  
 Mit der Installationsroutine einer Anwendung werden Informationen zu den bereits installierten Komponenten automatisch verwaltet. dabei werden die <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>-Installationsdateien des Projekts verwendet. Diese Zustandsinformationen werden fortlaufend aktualisiert, <xref:System.ServiceProcess.ServiceProcessInstaller> wenn die- <xref:System.ServiceProcess.ServiceInstaller> Instanz und jede Instanz vom-Hilfsprogramm installiert wird. Es ist in der Regel nicht erforderlich, dass Ihr Code diese Zustandsinformationen explizit ändert.  
  
 Durch das Instanziieren eines <xref:System.ServiceProcess.ServiceProcessInstaller> wird der <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>Basisklassenkonstruktor aufgerufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Projekt Installationsprogramm mit dem Namen MyProjectInstaller erstellt, <xref:System.Configuration.Install.Installer>das von erbt. Es wird davon ausgegangen, dass es eine ausführbare Dienst Datei gibt, die zwei Dienste enthält: "Hello-World Service 1" und "Hello-World Service 2". Innerhalb des Konstruktors für "MyProjectInstaller" (der vom Installations Dienstprogramm aufgerufen wird) <xref:System.ServiceProcess.ServiceInstaller> werden für jeden Dienst Objekte erstellt, und für <xref:System.ServiceProcess.ServiceProcessInstaller> die ausführbare Datei wird ein erstellt. Damit das Installationsprogramm MyProjectInstaller als gültiges Installationsprogramm erkennt, wird das <xref:System.ComponentModel.RunInstallerAttribute> -Attribut auf `true`festgelegt.  
  
 Optionale Eigenschaften werden für das prozessinstallations Programm und die Dienst Installationsprogramme festgelegt, bevor die Installations <xref:System.Configuration.Install.Installer.Installers%2A> Programme der Auflistung hinzugefügt werden. Wenn das Installations Hilfsprogramm auf MyProjectInstaller zugreift, werden die <xref:System.Configuration.Install.Installer.Installers%2A> Objekte, die der Auflistung <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> durch einen-Aufrufvorgang hinzugefügt werden, nacheinander installiert. Während des Vorgangs verwaltet das Installationsprogramm Zustandsinformationen, die angeben, welche Objekte installiert wurden. Daher kann jedes Objekt im Falle eines Installations Fehlers gesichert werden.  
  
 Normalerweise würden Sie die projekttinstallationsklasse nicht explizit instanziieren. Sie würden Sie erstellen und hinzufügen <xref:System.ComponentModel.RunInstallerAttribute>, aber das Installations Dienstprogramm ruft tatsächlich auf und instanziiert die-Klasse.  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des Kontos ab, unter dem die Dienstanwendung ausgeführt wird, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.ServiceProcess.ServiceAccount" />, der den Typ des Kontos definiert, unter dem das System diesen Dienst ausführt. Die Standardeinstellung ist <see langword="User" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> -Eigenschaft ist, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> werden <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> die-Eigenschaft und die-Eigenschaft zum Definieren eines Kontos verwendet, unter dem die Dienst Anwendung ausgeführt wird `User`.  
  
 Das Paar <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> und ermöglicht es, dass der Dienst unter einem anderen Konto als dem Systemkonto ausgeführt wird. <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Dies kann z. b. ermöglichen, dass der Dienst beim Neustart automatisch gestartet wird, wenn kein Benutzer angemeldet ist. Wenn Sie entweder den oder <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> den leeren und auf <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> `User`festlegen, werden Sie bei der Installation aufgefordert, einen gültigen Benutzernamen und ein Kennwort einzugeben.  
  
 Sie können auch angeben, dass der Dienst unter dem lokalen Systemkonto oder als lokaler oder Netzwerkdienst ausgeführt wird. Ausführliche Informationen <xref:System.ServiceProcess.ServiceAccount> zu Konto Typen finden Sie unter der-Enumeration.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">Die <see cref="T:System.ComponentModel.IComponent" />, die den Dienstprozess darstellt.</param>
        <summary>Implementiert die <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />-Methode der Basisklasse ohne das für die <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />-Klasse spezifische Verhalten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sollte nicht innerhalb Ihres Codes aufgerufen werden. Die Basisklassen Methode für <xref:System.Configuration.Install.ComponentInstaller> ist `abstract`, sodass Sie hier in der abgeleiteten Klasse implementiert wird. Es gibt jedoch keine <xref:System.ServiceProcess.ServiceProcessInstaller> klassenspezifische Verarbeitung in der Implementierung der Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Hilfetext ab, der zu den Installationsoptionen für Dienste angezeigt wird.</summary>
        <value>Hilfetext, der die Schritte zum Festlegen des Benutzernamens und Kennwortes beschreibt, wenn der Dienst unter einem bestimmten Konto ausgeführt werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Hilfetext kann verwendet werden, wenn ein Dienst manuell gestartet wird. Es zeigt dem Benutzer an, wie Benutzername-und Kenn Wort Informationen eingegeben werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">Ein <see cref="T:System.Collections.IDictionary" /> mit Kontextinformationen für die Installation.</param>
        <summary>Schreibt Dienstanwendungsinformationen in die Registrierung. Diese Methode ist für die Verwendung durch Installationstools bestimmt, die die entsprechenden Methoden automatisch aufrufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise wird die-Methode <xref:System.ServiceProcess.ServiceProcessInstaller> nicht innerhalb Ihres Codes aufgerufen. Sie werden in der Regel nur vom Installations Dienstprogramm aufgerufen. Das Installationsprogramm ruft während des <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> Installationsvorgangs automatisch die-Methode auf. Bei Bedarf werden Fehler durch Aufrufen <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> von für alle zuvor installierten Komponenten gesichert. Diese Methode übergibt die Installation an die Basisklassen <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> Methode.  
  
 Normalerweise werden Sie die Methoden <xref:System.ServiceProcess.ServiceInstaller> nicht innerhalb Ihres Codes aufrufen. Sie werden in der Regel nur vom Installations Dienstprogramm aufgerufen. Das Installationsprogramm ruft während des <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> Installations <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> Vorgangs automatisch die-Methode und die-Methode auf. Es werden ggf. Fehler durch Aufrufen <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> von (oder <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) für alle zuvor installierten Komponenten gesichert.  
  
 Mit der Installationsroutine einer Anwendung werden Informationen zu den bereits installierten Komponenten automatisch verwaltet. dabei werden die <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>-Installationsdateien des Projekts verwendet. Diese <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> Zustandsinformationen, die `stateSaver` als-Parameter übergeben werden, werden fortlaufend aktualisiert <xref:System.ServiceProcess.ServiceProcessInstaller> , wenn die <xref:System.ServiceProcess.ServiceInstaller> -Instanz und jede Instanz vom-Hilfsprogramm installiert wird. Es ist in der Regel nicht erforderlich, dass Ihr Code diese Zustandsinformationen explizit ändert.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>übergibt alle Ausnahmen, die von Basisklassen Methoden oder <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> Ereignis Handlern ausgelöst werden, an die Aufruf Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stateSaver" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das zugeordnete Kennwort des Benutzerkontos ab, unter dem die Dienstanwendung ausgeführt wird, oder legt dieses fest.</summary>
        <value>Das zugeordnete Kennwort des Benutzerkontos, unter dem die Dienstanwendung ausgeführt wird. Der Standardwert ist eine leere Zeichenfolge (""). Die Eigenschaft ist nicht öffentlich und wird nicht serialisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Paar <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> und ermöglicht es, dass der Dienst unter einem anderen Konto als dem Systemkonto ausgeführt wird. <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> Dies kann z. b. ermöglichen, dass der Dienst beim Neustart automatisch gestartet wird, wenn kein Benutzer angemeldet ist.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>und <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> werden auf sichere Weise verarbeitet, da Sie niemals serialisiert oder im Installationsstatus (dem des Projekt <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>Installers) oder an einem anderen Speicherort mit öffentlichem Zugriff gespeichert werden.  
  
 Das <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Festlegen von <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> und ermöglicht die automatische Zuordnung eines Kontos zum Dienst zum Zeitpunkt der Installation. Wenn Sie entweder den oder <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> den leeren und auf <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> `User`festlegen, werden Sie bei der Installation aufgefordert, einen gültigen Benutzernamen und ein Kennwort einzugeben.  
  
 Eine weitere Option zum Ausführen eines Dienstanbieter unter einem separaten Konto ist die Verwendung des System Kontos des Computers. Dieses Konto, das sich von dem Administrator Konto unterscheidet, erfordert kein Kennwort. Die Berechtigungen des System Kontos können die des aktuell angemeldeten Benutzers überschreiten. Das Ausführen unter dem System Konto anstelle eines Benutzerkontos vermeidet Probleme, die dazu führen, dass der Benutzer nicht über die erforderliche Berechtigung für den Dienst verfügt.  
  
 Wenn <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> ein anderer Wert als `User`ist, wird das angegebene Konto (lokaler oder Netzwerkdienst oder lokales System) verwendet, auch wenn die- <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Eigenschaft <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> und die-Eigenschaft aufgefüllt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Collections.IDictionary" /> mit Kontextinformationen für die Installation.</param>
        <summary>Führt ein Rollback der Informationen über Dienstanwendungen durch, die bei der Installation in die Registrierung geschrieben wurden. Diese Methode ist nur für die Verwendung durch Installationstools vorgesehen, die die entsprechenden Methoden automatisch verarbeiten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise wird die-Methode <xref:System.ServiceProcess.ServiceProcessInstaller> nicht innerhalb Ihres Codes aufgerufen. Sie werden in der Regel nur vom Installations Dienstprogramm aufgerufen. Das Installationsprogramm ruft während des <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> Installationsvorgangs automatisch die-Methode auf. Es sichert ggf. Fehler, indem für das <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> Objekt aufgerufen wird, das die Ausnahme generiert hat.  
  
 Mit der Installationsroutine einer Anwendung werden Informationen zu den bereits installierten Komponenten automatisch verwaltet. dabei werden die <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>-Installationsdateien des Projekts verwendet. Diese <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> Zustandsinformationen, die `savedState` als-Parameter übergeben werden, werden fortlaufend aktualisiert <xref:System.ServiceProcess.ServiceProcessInstaller> , wenn die <xref:System.ServiceProcess.ServiceInstaller> -Instanz und jede Instanz vom-Hilfsprogramm installiert wird. Es ist in der Regel nicht erforderlich, dass Ihr Code diese Zustandsinformationen explizit ändert.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>übergibt alle Ausnahmen, die von Basisklassen Methoden oder <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> Ereignis Handlern ausgelöst werden, an die Aufruf Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> ist <see langword="null" />.  
  
- oder - 
<paramref name="savedState" /> ist beschädigt oder nicht vorhanden.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Benutzerkonto ab, unter dem die Dienstanwendung ausgeführt wird, oder legt dieses fest.</summary>
        <value>Das Konto, unter dem der Dienst ausgeführt werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Paar <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> und ermöglicht es, dass der Dienst unter einem anderen Konto als dem Systemkonto ausgeführt wird. <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Dies kann z. b. ermöglichen, dass der Dienst beim Neustart automatisch gestartet wird, wenn kein Benutzer angemeldet ist.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>und <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> werden auf sichere Weise verarbeitet, da Sie niemals serialisiert oder im Installationsstatus (dem des Projekt <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>Installers) oder an einem anderen Speicherort mit öffentlichem Zugriff gespeichert werden.  
  
 Das <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Festlegen von <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> und ermöglicht die automatische Zuordnung eines Kontos zum Dienst zum Zeitpunkt der Installation. Wenn Sie entweder den oder <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> den leeren und auf <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> `User`festlegen, werden Sie bei der Installation aufgefordert, einen gültigen Benutzernamen und ein Kennwort einzugeben.  
  
 Eine weitere Option zum Ausführen eines Dienstanbieter unter einem separaten Konto ist die Verwendung des System Kontos des Computers. Dieses Konto, das sich von dem Administrator Konto unterscheidet, erfordert kein Kennwort. Die Berechtigungen des System Kontos können die des aktuell angemeldeten Benutzers überschreiten. Das Ausführen unter dem System Konto anstelle eines Benutzerkontos vermeidet Probleme, die dazu führen, dass der Benutzer nicht über die erforderliche Berechtigung für den Dienst verfügt.  
  
 Wenn <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> ein anderer Wert als `User`ist, wird das angegebene Konto (lokaler oder Netzwerkdienst oder lokales System) verwendet, auch wenn die- <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Eigenschaft <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> und die-Eigenschaft aufgefüllt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>
