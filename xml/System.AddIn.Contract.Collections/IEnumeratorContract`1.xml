<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a39d901158e3d4dac304cefbe0c156cc6f7146ed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359424" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">
      <span data-ttu-id="1baa7-101">Der Typ der aufzulistenden Objekte.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1baa7-101">The type of objects to enumerate.</span>
      </span>
      <span data-ttu-id="1baa7-102">
        <c>C</c> muss die <see cref="T:System.AddIn.Contract.IContract" />-Schnittstelle implementieren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1baa7-102">
          <c>C</c> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="1baa7-103">Listet die Elemente einer generischen Auflistung von <see cref="T:System.AddIn.Contract.IContract" />-Objekten auf.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1baa7-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1baa7-104">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="1baa7-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="1baa7-105">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="1baa7-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="1baa7-106">An dieser Position ist der Rückgabewert der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="1baa7-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="1baa7-107">Aus diesem Grund müssen Sie aufrufen <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> um den Enumerator auf das erste Element der Auflistung vor dem Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1baa7-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="1baa7-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1baa7-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="1baa7-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Legt den Rückgabewert des <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element.</span><span class="sxs-lookup"><span data-stu-id="1baa7-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="1baa7-110">Wenn <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="1baa7-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="1baa7-111">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> auch zurückgeben `false`.</span><span class="sxs-lookup"><span data-stu-id="1baa7-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="1baa7-112">Wenn der letzte Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zurückgegebene `false`, der Rückgabewert der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="1baa7-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="1baa7-113">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="1baa7-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1baa7-114">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="1baa7-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1baa7-115">Gibt den <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1baa7-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1baa7-116">Der <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1baa7-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1baa7-117">Der Rückgabewert der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert, wenn eine der folgenden Bedingungen:</span><span class="sxs-lookup"><span data-stu-id="1baa7-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="1baa7-118">Der Enumerator vor dem ersten Element in der Auflistung positioniert ist, sofort nach dem Erstellen des Enumerators oder nach <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1baa7-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="1baa7-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> muss aufgerufen werden, um den Enumerator auf das erste Element der Auflistung vor dem Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="1baa7-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="1baa7-120">Der letzte Aufruf von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zurückgegebene `false`, gibt das Ende der Auflistung an.</span><span class="sxs-lookup"><span data-stu-id="1baa7-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="1baa7-121">Der Enumerator ist aufgrund von Änderungen in der Auflistung, z. B. hinzufügen, bearbeiten oder Löschen von Elementen für ungültig erklärt.</span><span class="sxs-lookup"><span data-stu-id="1baa7-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="1baa7-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1baa7-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="1baa7-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Legt den Rückgabewert des <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element.</span><span class="sxs-lookup"><span data-stu-id="1baa7-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1baa7-124">Setzt den Enumerator auf das nächste Element der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1baa7-124">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1baa7-125">
            <see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1baa7-125">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1baa7-126">Nach dem Erstellen eines Enumerators oder nach der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> -Methode aufgerufen wird, wird ein Enumerator vor das erste Element der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="1baa7-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="1baa7-127">Der erste Aufruf der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Methode verschiebt den Enumerator auf das erste Element der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="1baa7-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="1baa7-128">Wenn <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="1baa7-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="1baa7-129">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> auch zurückgeben `false` bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1baa7-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="1baa7-130">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="1baa7-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1baa7-131">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> oder <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1baa7-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1baa7-132">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1baa7-132">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1baa7-133">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1baa7-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1baa7-134">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="1baa7-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1baa7-135">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> oder <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1baa7-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1baa7-136">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1baa7-136">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>