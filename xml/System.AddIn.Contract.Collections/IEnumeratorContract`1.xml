<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4dae846d6e71db1b1c62cb8cfd472051ca4f295" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70519491" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">Der Typ der aufzulistenden Objekte. <paramref name="C" /> muss die <see cref="T:System.AddIn.Contract.IContract" />-Schnittstelle implementieren.</typeparam>
    <summary>Listet die Elemente einer generischen Auflistung von <see cref="T:System.AddIn.Contract.IContract" />-Objekten auf.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.  
  
 Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert. An dieser Position ist der Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> nicht definiert. Daher müssen Sie aufrufen <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> , um den Enumerator vor dem Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>von auf das erste Element der Auflistung zu setzen.  
  
 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird. <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>Legt den Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element fest.  
  
 Wenn <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> gibt `false` zurück. Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> auch `false` zurück. Wenn der letzte-Rückruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zurück `false`gegeben wurde, ist der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> Rückgabewert von nicht definiert.  
  
 Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist. Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'C" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators zurück.</summary>
        <returns>Der <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> ist unter den folgenden Bedingungen nicht definiert:  
  
-   Der Enumerator wird vor dem ersten Element in der Auflistung positioniert, unmittelbar nachdem der Enumerator erstellt wurde oder nachdem <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> aufgerufen wurde. <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>muss aufgerufen werden, um den Enumerator vor dem Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>von auf das erste Element der Auflistung zu verschieben.  
  
-   Der letzte <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zurückgegebene `false`Rückruf, der das Ende der Auflistung angibt.  
  
-   Der Enumerator wird aufgrund der in der Auflistung vorgenommenen Änderungen ungültig, z. b. durch Hinzufügen, ändern oder Löschen von Elementen.  
  
 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird. <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>Legt den Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den Enumerator auf das nächste Element der Auflistung.</summary>
        <returns><see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem ein Enumerator erstellt wurde oder nachdem die <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> -Methode aufgerufen wurde, wird ein Enumerator vor dem ersten Element der Auflistung positioniert. Der erste <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> -Befehl der-Methode verschiebt den Enumerator auf das erste Element der-Auflistung.  
  
 Wenn <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> gibt `false` zurück. Wenn sich der Enumerator an dieser Position befindet, geben nachfolg <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Ende Aufrufe `false` von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> ebenfalls zurück, bis aufgerufen wird.  
  
 Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist. Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig, <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> der nächste <xref:System.InvalidOperationException>Rückruf von oder löst eine aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist. Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig, <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> der nächste <xref:System.InvalidOperationException>Rückruf von oder löst eine aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
