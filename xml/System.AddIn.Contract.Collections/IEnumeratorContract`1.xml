<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IEnumeratorContract`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a39d901158e3d4dac304cefbe0c156cc6f7146ed.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a39d901158e3d4dac304cefbe0c156cc6f7146ed</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>The type of objects to enumerate.</source>
          <target state="translated">Der Typ der aufzulistenden Objekte.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source><bpt id="p1">&lt;c&gt;</bpt>C<ept id="p1">&lt;/c&gt;</ept> must implement the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> interface.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>C<ept id="p1">&lt;/c&gt;</ept> muss die <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>-Schnittstelle implementieren.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>Enumerates the elements of a generic collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects.</source>
          <target state="translated">Listet die Elemente einer generischen Auflistung von <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>-Objekten auf.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>At this position, the return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">An dieser Position ist der Rückgabewert der <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</source>
          <target state="translated">Aus diesem Grund müssen Sie aufrufen <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> um den Enumerator auf das erste Element der Auflistung vor dem Aufruf <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> Legt den Rückgabewert des <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> auf das nächste Element.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>If the last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, the return value of <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.</source>
          <target state="translated">Wenn der letzte Aufruf <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, der Rückgabewert der <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Collections.IEnumeratorContract`1">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> in the collection at the current position of the enumerator.</source>
          <target state="translated">Gibt den <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> in der Auflistung an der aktuellen Position des Enumerators zurück.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> in the collection at the current position of the enumerator.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> in der Auflistung an der aktuellen Position des Enumerators.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined under any of the following conditions:</source>
          <target state="translated">Der Rückgabewert der <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> ist nicht definiert, wenn eine der folgenden Bedingungen:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Der Enumerator vor dem ersten Element in der Auflistung positioniert ist, sofort nach dem Erstellen des Enumerators oder nach <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> muss aufgerufen werden, um den Enumerator auf das erste Element der Auflistung vor dem Aufruf <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">Der letzte Aufruf von <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> zurückgegebene <ph id="ph2">`false`</ph>, gibt das Ende der Auflistung an.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source>The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
          <target state="translated">Der Enumerator ist aufgrund von Änderungen in der Auflistung, z. B. hinzufügen, bearbeiten oder Löschen von Elementen für ungültig erklärt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> gibt solange dasselbe Objekt zurück, bis <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> Legt den Rückgabewert des <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> auf das nächste Element.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Setzt den Enumerator auf das nächste Element der Auflistung.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn der Enumerator das Ende der Auflistung überschritten hat.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> method is called, an enumerator is positioned before the first element of the collection.</source>
          <target state="translated">Nach dem Erstellen eines Enumerators oder nach der <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> -Methode aufgerufen wird, wird ein Enumerator vor das erste Element der Auflistung positioniert.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>The first call to the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> method moves the enumerator to the first element of the collection.</source>
          <target state="translated">Der erste Aufruf der <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> Methode verschiebt den Enumerator auf das erste Element der Auflistung.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> gibt <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> auch zurückgeben <ph id="ph2">`false`</ph> bis <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>