<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4dae846d6e71db1b1c62cb8cfd472051ca4f295" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69343080" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C"><span data-ttu-id="07358-101">Der Typ der aufzulistenden Objekte.</span><span class="sxs-lookup"><span data-stu-id="07358-101">The type of objects to enumerate.</span></span> <span data-ttu-id="07358-102"><paramref name="C" /> muss die <see cref="T:System.AddIn.Contract.IContract" />-Schnittstelle implementieren.</span><span class="sxs-lookup"><span data-stu-id="07358-102"><paramref name="C" /> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span></span></typeparam>
    <summary><span data-ttu-id="07358-103">Listet die Elemente einer generischen Auflistung von <see cref="T:System.AddIn.Contract.IContract" />-Objekten auf.</span><span class="sxs-lookup"><span data-stu-id="07358-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07358-104">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="07358-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="07358-105">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="07358-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="07358-106">An dieser Position ist der Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="07358-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="07358-107">Daher müssen Sie aufrufen <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> , um den Enumerator vor dem Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>von auf das erste Element der Auflistung zu setzen.</span><span class="sxs-lookup"><span data-stu-id="07358-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="07358-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="07358-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="07358-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>Legt den Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="07358-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="07358-110">Wenn <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="07358-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="07358-111">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="07358-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="07358-112">Wenn der letzte-Rückruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zurück `false`gegeben wurde, ist der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> Rückgabewert von nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="07358-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="07358-113">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="07358-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="07358-114">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="07358-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'C" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07358-115">Gibt den <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators zurück.</span><span class="sxs-lookup"><span data-stu-id="07358-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></summary>
        <returns><span data-ttu-id="07358-116">Der <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators.</span><span class="sxs-lookup"><span data-stu-id="07358-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07358-117">Der Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> ist unter den folgenden Bedingungen nicht definiert:</span><span class="sxs-lookup"><span data-stu-id="07358-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="07358-118">Der Enumerator wird vor dem ersten Element in der Auflistung positioniert, unmittelbar nachdem der Enumerator erstellt wurde oder nachdem <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="07358-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="07358-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>muss aufgerufen werden, um den Enumerator vor dem Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>von auf das erste Element der Auflistung zu verschieben.</span><span class="sxs-lookup"><span data-stu-id="07358-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="07358-120">Der letzte <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zurückgegebene `false`Rückruf, der das Ende der Auflistung angibt.</span><span class="sxs-lookup"><span data-stu-id="07358-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="07358-121">Der Enumerator wird aufgrund der in der Auflistung vorgenommenen Änderungen ungültig, z. b. durch Hinzufügen, ändern oder Löschen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="07358-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="07358-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="07358-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="07358-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>Legt den Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="07358-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07358-124">Setzt den Enumerator auf das nächste Element der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="07358-124">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="07358-125"><see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</span><span class="sxs-lookup"><span data-stu-id="07358-125"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07358-126">Nachdem ein Enumerator erstellt wurde oder nachdem die <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> -Methode aufgerufen wurde, wird ein Enumerator vor dem ersten Element der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="07358-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="07358-127">Der erste <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> -Befehl der-Methode verschiebt den Enumerator auf das erste Element der-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="07358-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="07358-128">Wenn <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="07358-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="07358-129">Wenn sich der Enumerator an dieser Position befindet, geben nachfolg <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Ende Aufrufe `false` von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> ebenfalls zurück, bis aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="07358-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="07358-130">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="07358-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="07358-131">Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig, <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> der nächste <xref:System.InvalidOperationException>Rückruf von oder löst eine aus.</span><span class="sxs-lookup"><span data-stu-id="07358-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="07358-132">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</span><span class="sxs-lookup"><span data-stu-id="07358-132">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07358-133">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="07358-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07358-134">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="07358-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="07358-135">Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator unwiederbringlich ungültig, <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> der nächste <xref:System.InvalidOperationException>Rückruf von oder löst eine aus.</span><span class="sxs-lookup"><span data-stu-id="07358-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="07358-136">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</span><span class="sxs-lookup"><span data-stu-id="07358-136">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
