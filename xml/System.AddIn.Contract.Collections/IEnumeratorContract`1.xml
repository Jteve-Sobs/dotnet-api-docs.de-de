<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1dc453127e910f3fa3b4ba16478a4847f87f648" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63915822" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C"><span data-ttu-id="cbf07-101">Der Typ der aufzulistenden Objekte.</span><span class="sxs-lookup"><span data-stu-id="cbf07-101">The type of objects to enumerate.</span></span> <span data-ttu-id="cbf07-102"><paramref name="C" /> muss die <see cref="T:System.AddIn.Contract.IContract" />-Schnittstelle implementieren.</span><span class="sxs-lookup"><span data-stu-id="cbf07-102"><paramref name="C" /> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span></span></typeparam>
    <summary><span data-ttu-id="cbf07-103">Listet die Elemente einer generischen Auflistung von <see cref="T:System.AddIn.Contract.IContract" />-Objekten auf.</span><span class="sxs-lookup"><span data-stu-id="cbf07-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbf07-104">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="cbf07-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="cbf07-105">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="cbf07-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="cbf07-106">An dieser Position ist der Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="cbf07-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="cbf07-107">Aus diesem Grund müssen Sie aufrufen <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> auf den Enumerator auf das erste Element der Auflistung vor dem Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="cbf07-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="cbf07-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="cbf07-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="cbf07-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Legt den Rückgabewert der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element.</span><span class="sxs-lookup"><span data-stu-id="cbf07-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="cbf07-110">Wenn <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="cbf07-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="cbf07-111">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="cbf07-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="cbf07-112">Wenn der letzte Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zurückgegebenen `false`, der Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="cbf07-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="cbf07-113">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="cbf07-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="cbf07-114">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="cbf07-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'C" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cbf07-115">Gibt den <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators zurück.</span><span class="sxs-lookup"><span data-stu-id="cbf07-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></summary>
        <returns><span data-ttu-id="cbf07-116">Der <see cref="T:System.AddIn.Contract.IContract" /> in der Auflistung an der aktuellen Position des Enumerators.</span><span class="sxs-lookup"><span data-stu-id="cbf07-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbf07-117">Der Rückgabewert von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> ist nicht definiert, unter der folgenden Bedingungen:</span><span class="sxs-lookup"><span data-stu-id="cbf07-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="cbf07-118">Der Enumerator ist vor dem ersten Element in der Auflistung positioniert, sofort nach der Erstellung des Enumerators oder nach <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="cbf07-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="cbf07-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> muss aufgerufen werden, um den Enumerator auf das erste Element der Auflistung vor dem Aufruf <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="cbf07-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="cbf07-120">Der letzte Aufruf von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zurückgegeben `false`, die das Ende der Auflistung angibt.</span><span class="sxs-lookup"><span data-stu-id="cbf07-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="cbf07-121">Der Enumerator ist aufgrund von Änderungen am in der Auflistung, z. B. hinzufügen, ändern oder Löschen von Elementen für ungültig erklärt.</span><span class="sxs-lookup"><span data-stu-id="cbf07-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="cbf07-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="cbf07-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="cbf07-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Legt den Rückgabewert der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> auf das nächste Element.</span><span class="sxs-lookup"><span data-stu-id="cbf07-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cbf07-124">Setzt den Enumerator auf das nächste Element der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="cbf07-124">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="cbf07-125"><see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</span><span class="sxs-lookup"><span data-stu-id="cbf07-125"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbf07-126">Nach dem Erstellen eines Enumerators oder nach der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> Methode aufgerufen wird, wird ein Enumerator vor dem ersten Element der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="cbf07-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="cbf07-127">Der erste Aufruf der <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Methode verschiebt den Enumerator auf das erste Element der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="cbf07-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="cbf07-128">Wenn <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="cbf07-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="cbf07-129">Wenn der Enumerator ist an dieser Position, nachfolgende Aufrufe von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> auch zurückgeben `false` bis <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="cbf07-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="cbf07-130">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="cbf07-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="cbf07-131">Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> oder <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="cbf07-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cbf07-132">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</span><span class="sxs-lookup"><span data-stu-id="cbf07-132">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cbf07-133">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="cbf07-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbf07-134">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="cbf07-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="cbf07-135">Wenn der Auflistung, z. B. das Hinzufügen Änderungen, ändern oder Löschen von Elementen, wenn der Enumerator unwiederbringlich ist ungültig, und der nächste Aufruf von <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> oder <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="cbf07-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cbf07-136">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</span><span class="sxs-lookup"><span data-stu-id="cbf07-136">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>