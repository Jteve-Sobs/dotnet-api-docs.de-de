<Type Name="ICollectionContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b74a4b0fd0ea3ed57e353119c8ccf02fded4727d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69343093" /></Metadata><TypeSignature Language="C#" Value="public interface ICollectionContract&lt;C&gt; : System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt; where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICollectionContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.Collections.IEnumerableContract`1&lt;!C&gt;, class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.ICollectionContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICollectionContract(Of C)&#xA;Implements IEnumerableContract(Of C)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class ICollectionContract : System::AddIn::Contract::Collections::IEnumerableContract&lt;C&gt;" />
  <TypeSignature Language="F#" Value="type ICollectionContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IEnumerableContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C"><span data-ttu-id="9a5f9-101">Der Typ der Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-101">The type of elements in the collection.</span></span> <span data-ttu-id="9a5f9-102"><paramref name="C" /> muss die <see cref="T:System.AddIn.Contract.IContract" />-Schnittstelle implementieren.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-102"><paramref name="C" /> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span></span></typeparam>
    <summary><span data-ttu-id="9a5f9-103">Stellt eine generische Auflistung von <see cref="T:System.AddIn.Contract.IContract" />-Objekten dar.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-103">Represents a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a5f9-104">Eine <xref:System.AddIn.Contract.Collections.ICollectionContract%601> kann dynamisch geändert werden.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-104">An <xref:System.AddIn.Contract.Collections.ICollectionContract%601> can be dynamically resized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(C item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'C -&gt; unit" Usage="iCollectionContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9a5f9-105">Das <see cref="T:System.AddIn.Contract.IContract" />, das in <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-105">The <see cref="T:System.AddIn.Contract.IContract" /> to add to the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></param>
        <summary><span data-ttu-id="9a5f9-106">Fügt dem <see cref="T:System.AddIn.Contract.IContract" /> eine <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-106">Adds an <see cref="T:System.AddIn.Contract.IContract" /> to the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a5f9-107">Um zu ermitteln, <xref:System.AddIn.Contract.Collections.ICollectionContract%601> ob ein schreibgeschützt ist, müssen <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> Sie die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-107">To determine whether an <xref:System.AddIn.Contract.Collections.ICollectionContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a5f9-108"><see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-108">The <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iCollectionContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a5f9-109">Entfernt alle Elemente aus der <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-109">Removes all elements from the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a5f9-110">Um zu ermitteln, <xref:System.AddIn.Contract.Collections.ICollectionContract%601> ob ein schreibgeschützt ist, müssen <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> Sie die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-110">To determine whether an <xref:System.AddIn.Contract.Collections.ICollectionContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a5f9-111"><see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-111">The <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As C) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(C item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'C -&gt; bool" Usage="iCollectionContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9a5f9-112">Das <see cref="T:System.AddIn.Contract.IContract" />, das in der <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-112">The <see cref="T:System.AddIn.Contract.IContract" /> to locate in the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></param>
        <summary><span data-ttu-id="9a5f9-113">Gibt einen Wert zurück, der angibt, ob sich der angegebene <see cref="T:System.AddIn.Contract.IContract" /> im <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> befindet.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-113">Returns a value that indicates whether the specified <see cref="T:System.AddIn.Contract.IContract" /> is in the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></summary>
        <returns><span data-ttu-id="9a5f9-114"><see langword="true" />, wenn sich die angegebene <see cref="T:System.AddIn.Contract.IContract" /> in der <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-114"><see langword="true" /> if the specified <see cref="T:System.AddIn.Contract.IContract" /> is in the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (C[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!C[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As C(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;C&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'C[] * int -&gt; unit" Usage="iCollectionContract.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="C[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9a5f9-115">Das eindimensionale Array, das das Ziel der aus <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-115">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="9a5f9-116">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-116">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="9a5f9-117">Kopiert die gesamte <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> in ein kompatibles eindimensionales Array, beginnend am angegebenen Index des Zielarrays.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-117">Copies the entire <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a5f9-118"><paramref name="array" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-118"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9a5f9-119"><paramref name="arrayIndex" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-119"><paramref name="arrayIndex" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a5f9-120"><paramref name="array" /> ist mehrdimensional.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-120"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="9a5f9-121">- oder -</span><span class="sxs-lookup"><span data-stu-id="9a5f9-121">-or-</span></span> 
<span data-ttu-id="9a5f9-122">Die Anzahl der Elemente in der <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />-Quelle ist größer als der verfügbare Speicherplatz ab <paramref name="arrayIndex" /> bis zum Ende des Zielarrays.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-122">The number of elements in the source <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination array.</span></span>  
  
<span data-ttu-id="9a5f9-123">- oder -</span><span class="sxs-lookup"><span data-stu-id="9a5f9-123">-or-</span></span> 
<span data-ttu-id="9a5f9-124">Typ <paramref name="C" /> kann nicht automatisch in den Typ des Zielarrays umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-124">Type <paramref name="C" /> cannot be cast automatically to the type of the destination array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iCollectionContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a5f9-125">Gibt die Anzahl der im <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> enthaltenen Elemente zurück.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-125">Returns the number of elements contained in the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></summary>
        <returns><span data-ttu-id="9a5f9-126">Die Anzahl der Elemente, die in <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-126">The number of elements contained in the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iCollectionContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a5f9-127">Gibt einen Wert zurück, der angibt, ob der <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-127">Returns a value that indicates whether the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> is read-only.</span></span></summary>
        <returns><span data-ttu-id="9a5f9-128"><see langword="true" />, wenn das <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-128"><see langword="true" /> if the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> is read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As C) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(C item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'C -&gt; bool" Usage="iCollectionContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9a5f9-129">Der <see cref="T:System.AddIn.Contract.IContract" />, der aus der <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-129">The <see cref="T:System.AddIn.Contract.IContract" /> to remove from the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></param>
        <summary><span data-ttu-id="9a5f9-130">Entfernt das erste Vorkommen einer bestimmten <see cref="T:System.AddIn.Contract.IContract" /> aus <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-130">Removes the first occurrence of a specific <see cref="T:System.AddIn.Contract.IContract" /> from the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></summary>
        <returns><span data-ttu-id="9a5f9-131"><see langword="true" />, wenn das <paramref name="item" /> erfolgreich entfernt wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-131"><see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9a5f9-132">Diese Methode gibt auch dann <see langword="false" /> zurück, wenn das <paramref name="item" /> nicht in der <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-132">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a5f9-133">Um zu ermitteln, <xref:System.AddIn.Contract.Collections.ICollectionContract%601> ob ein schreibgeschützt ist, müssen <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> Sie die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-133">To determine whether an <xref:System.AddIn.Contract.Collections.ICollectionContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a5f9-134"><see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="9a5f9-134">The <see cref="T:System.AddIn.Contract.Collections.ICollectionContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
