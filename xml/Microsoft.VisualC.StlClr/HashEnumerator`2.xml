<Type Name="HashEnumerator&lt;TKey,TValue&gt;" FullName="Microsoft.VisualC.StlClr.HashEnumerator&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c57603acf6971dcf7c27de56e004e04f1bbfc913" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30345514" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HashEnumerator&lt;TKey,TValue&gt; : Microsoft.VisualC.StlClr.HashEnumeratorBase&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HashEnumerator`2&lt;TKey, TValue&gt; extends Microsoft.VisualC.StlClr.HashEnumeratorBase`2&lt;!TKey, !TValue&gt; implements class System.Collections.Generic.IEnumerator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
  <TypeSignature Language="VB.NET" Value="Public Class HashEnumerator(Of TKey, TValue)&#xA;Inherits HashEnumeratorBase(Of TKey, TValue)&#xA;Implements IEnumerator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class HashEnumerator : Microsoft::VisualC::StlClr::HashEnumeratorBase&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerator&lt;TValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.VisualC.StlClr.HashEnumeratorBase&lt;TKey,TValue&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TKey">TKey</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TValue">TValue</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="92358-101">Der Typ des Hashiteratorschlüssels.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92358-101">The type of the hash iterator key.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="92358-102">Der Typ des Hashiteratorwerts.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92358-102">The type of the hash iterator value.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="92358-103">Unterstützt eine einfache Iteration über ein STL/CLR-Objekt, das die <see cref="T:Microsoft.VisualC.StlClr.IHash`2" />-Schnittstelle implementiert.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92358-103">Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IHash`2" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashEnumerator (Microsoft.VisualC.StlClr.Generic.INode&lt;TValue&gt; _First);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.Generic.INode`1&lt;!TValue&gt; _First) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_First As INode(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashEnumerator(Microsoft::VisualC::StlClr::Generic::INode&lt;TValue&gt; ^ _First);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.INode&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First">
          <span data-ttu-id="92358-104">Der erste Knoten im Container, der durchlaufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-104">The first node in the container over which to iterate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92358-105">Weist ein neues <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />-Objekt zu und initialisiert es.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-105">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual TValue Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Current As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TValue Current { TValue get(); void set(TValue value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92358-106">Ruft das aktuelle Element in der Auflistung ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-106">Gets or sets the current element in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92358-107">Das aktuelle Element in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-107">The current element in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92358-108">Gibt nicht verwaltete, vom <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />-Objekt verwendete Ressourcen frei oder setzt diese zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-108">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92358-109">Gibt nicht verwaltete, vom <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />-Objekt verwendete Ressourcen frei oder setzt diese zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-109">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="92358-110">
            <see langword="true" /> zum Verwerfen verwalteter Objekte, <see langword="false" /> zum Verwerfen nicht verwalteter Objekte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-110">
              <see langword="true" /> to dispose of managed objects; <see langword="false" /> to dispose of unmanaged objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92358-111">Gibt nicht verwaltete, vom <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />-Objekt verwendete Ressourcen frei oder setzt diese zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-111">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public override bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92358-112">Setzt den Enumerator auf das nächste Element in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-112">Advances the enumerator to the next element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92358-113">
            <see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-113">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92358-114">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92358-114">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>