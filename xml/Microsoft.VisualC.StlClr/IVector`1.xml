<Type Name="IVector&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a712328a1d5b543c2d73cac3ce749af6b265e4d7" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55344457" /></Metadata><TypeSignature Language="C#" Value="public interface IVector&lt;TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IVector`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.IVector`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVector(Of TValue)&#xA;Implements ICloneable, ICollection, IRandomAccessContainer(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IVector : ICloneable, Microsoft::VisualC::StlClr::Generic::IRandomAccessContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IVector&lt;'Value&gt; = interface&#xA;    interface IRandomAccessContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue"><span data-ttu-id="508a1-101">Der Typ eines Elements in der kontrollierten Sequenz.</span><span class="sxs-lookup"><span data-stu-id="508a1-101">The type of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="508a1-102">Definiert die Schnittstelle für ein STL/CLR-<see href="https://docs.microsoft.com/cpp/dotnet/vector-stl-clr">vector</see>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="508a1-102">Defines the interface for an STL/CLR <see href="https://docs.microsoft.com/cpp/dotnet/vector-stl-clr">vector</see> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="assign">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="508a1-103">Ersetzt alle Elemente im Container durch die angegebenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="508a1-103">Replaces all elements in the container with the specified elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-104">Weitere Informationen finden Sie unter [Vector:: Assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span><span class="sxs-lookup"><span data-stu-id="508a1-104">For more information, see [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member assign : System.Collections.IEnumerable -&gt; unit" Usage="iVector.assign _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="508a1-105">Die Enumeration, deren Elemente in den Container eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="508a1-105">The enumeration whose elements are to be inserted into the container.</span></span></param>
        <summary><span data-ttu-id="508a1-106">Ersetzt alle Elemente im Container durch die Elemente in der angegebenen Enumeration.</span><span class="sxs-lookup"><span data-stu-id="508a1-106">Replaces all elements in the container with the elements in the specified enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-107">Weitere Informationen finden Sie unter [Vector:: Assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span><span class="sxs-lookup"><span data-stu-id="508a1-107">For more information, see [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member assign : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.assign (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First"><span data-ttu-id="508a1-108">Die Anfangsposition des Bereichs von Elementen, die eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="508a1-108">The beginning position of the range of elements to insert.</span></span></param>
        <param name="_Last"><span data-ttu-id="508a1-109">Die erste Position nach dem Ende des Bereichs von Elementen, die in den Container eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="508a1-109">The first position beyond the end of the range of elements to insert.</span></span></param>
        <summary><span data-ttu-id="508a1-110">Ersetzt alle Elemente im Container durch die Elemente zwischen den angegebenen Iteratoren.</span><span class="sxs-lookup"><span data-stu-id="508a1-110">Replaces all elements in the container with the elements between the given iterators.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-111">Weitere Informationen finden Sie unter [Vector:: Assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span><span class="sxs-lookup"><span data-stu-id="508a1-111">For more information, see [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (int _Count, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(int32 _Count, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_Count As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(int _Count, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member assign : int * 'Value -&gt; unit" Usage="iVector.assign (_Count, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Count" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Count"><span data-ttu-id="508a1-112">Die Anzahl der Elemente, die in den Container eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="508a1-112">The number of elements to insert into the container.</span></span></param>
        <param name="_Val"><span data-ttu-id="508a1-113">Der Wert des einzufügenden Elements.</span><span class="sxs-lookup"><span data-stu-id="508a1-113">The value of the element to insert.</span></span></param>
        <summary><span data-ttu-id="508a1-114">Ersetzt alle Elemente im Container mit der angegebenen Anzahl der Elemente, die angegebene Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="508a1-114">Replaces all elements in the container with the specified number of elements that have given values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-115">Weitere Informationen finden Sie unter [Vector:: Assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span><span class="sxs-lookup"><span data-stu-id="508a1-115">For more information, see [vector::assign (STL/CLR)](/cpp/dotnet/vector-stl-clr#assign).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="at">
      <MemberSignature Language="C#" Value="public TValue at (int _Pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue at(int32 _Pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function at (_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % at(int _Pos);" />
      <MemberSignature Language="F#" Value="abstract member at : int -&gt; " Usage="iVector.at _Pos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos"><span data-ttu-id="508a1-116">Die Position des Elements, auf das zugegriffen werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-116">The position of the element to access.</span></span></param>
        <summary><span data-ttu-id="508a1-117">Greift auf ein Element an einer angegebenen Position im Container zu.</span><span class="sxs-lookup"><span data-stu-id="508a1-117">Accesses an element at a specified position in the container.</span></span></summary>
        <returns><span data-ttu-id="508a1-118">Das Element der kontrollierten Sequenz an der Position <paramref name="_Pos" />.</span><span class="sxs-lookup"><span data-stu-id="508a1-118">The element of the controlled sequence at position <paramref name="_Pos" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-119">Weitere Informationen finden Sie unter [Vector:: AT (STL/CLR)](/cpp/dotnet/vector-stl-clr#at).</span><span class="sxs-lookup"><span data-stu-id="508a1-119">For more information, see [vector::at (STL/CLR)](/cpp/dotnet/vector-stl-clr#at).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="back">
      <MemberSignature Language="C#" Value="public TValue back ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue back() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.back" />
      <MemberSignature Language="VB.NET" Value="Public Function back () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % back();" />
      <MemberSignature Language="F#" Value="abstract member back : unit -&gt; " Usage="iVector.back " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508a1-120">Greift auf das letzte Element des Containers zu.</span><span class="sxs-lookup"><span data-stu-id="508a1-120">Accesses the last element of the container.</span></span></summary>
        <returns><span data-ttu-id="508a1-121">Das letzte Element der kontrollierten Sequenz, das nicht leer sein darf.</span><span class="sxs-lookup"><span data-stu-id="508a1-121">The last element of the controlled sequence, which must be non-empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-122">Weitere Informationen finden Sie unter [Vector:: Back (STL/CLR)](/cpp/dotnet/vector-stl-clr#back).</span><span class="sxs-lookup"><span data-stu-id="508a1-122">For more information, see [vector::back (STL/CLR)](/cpp/dotnet/vector-stl-clr#back).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="back_item">
      <MemberSignature Language="C#" Value="public TValue back_item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue back_item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.back_item" />
      <MemberSignature Language="VB.NET" Value="Public Property back_item As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue back_item { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.back_item : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.back_item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="508a1-123">Greift auf das letzte Element des Containers zu.</span><span class="sxs-lookup"><span data-stu-id="508a1-123">Accesses the last element of the container.</span></span></summary>
        <value><span data-ttu-id="508a1-124">Das letzte Element der kontrollierten Sequenz, das nicht leer sein darf.</span><span class="sxs-lookup"><span data-stu-id="508a1-124">The last element of the controlled sequence, which must be non-empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-125">Weitere Informationen finden Sie unter [Vector:: back_item (STL/CLR)](/cpp/dotnet/vector-stl-clr#back_item).</span><span class="sxs-lookup"><span data-stu-id="508a1-125">For more information, see [vector::back_item (STL/CLR)](/cpp/dotnet/vector-stl-clr#back_item).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void begin(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin :  -&gt; unit" Usage="iVector.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="508a1-126">Ein Iterator mit Random-Zugriff, der das erste Element der kontrollierten Sequenz oder die Position unmittelbar nach dem Ende einer leeren Sequenz bestimmt.</span><span class="sxs-lookup"><span data-stu-id="508a1-126">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence.</span></span> <span data-ttu-id="508a1-127">Sie können damit einen Iterator abrufen, der den <paramref name="current" /> Anfang der kontrollierten Sequenz bestimmt; der Zustand kann sich jedoch ändern, sobald sich die Länge der kontrollierten Sequenz ändert.</span><span class="sxs-lookup"><span data-stu-id="508a1-127">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="508a1-128">Legt den Anfang der kontrollierten Sequenz fest.</span><span class="sxs-lookup"><span data-stu-id="508a1-128">Designates the beginning of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="508a1-129">Ein Iterator.</span><span class="sxs-lookup"><span data-stu-id="508a1-129">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="508a1-130">Weitere Informationen finden Sie unter [Vector:: begin (STL/CLR)](/cpp/dotnet/vector-stl-clr#begin).</span><span class="sxs-lookup"><span data-stu-id="508a1-130">For more information, see [vector::begin (STL/CLR)](/cpp/dotnet/vector-stl-clr#begin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="capacity">
      <MemberSignature Language="C#" Value="public int capacity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 capacity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.capacity" />
      <MemberSignature Language="VB.NET" Value="Public Function capacity () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int capacity();" />
      <MemberSignature Language="F#" Value="abstract member capacity : unit -&gt; int" Usage="iVector.capacity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508a1-131">Ermittelt die Größe des zugeordneten Speichers für den Container.</span><span class="sxs-lookup"><span data-stu-id="508a1-131">Reports the size of allocated storage for the container.</span></span></summary>
        <returns><span data-ttu-id="508a1-132">Der Speicher, der derzeit für die kontrollierte Sequenz zugeordnet ist und dessen Wert mindestens <see cref="M:Microsoft.VisualC.StlClr.IVector`1.size" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="508a1-132">The storage that is currently allocated to hold the controlled sequence, a value at least as large as <see cref="M:Microsoft.VisualC.StlClr.IVector`1.size" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-133">Weitere Informationen finden Sie unter [Vector:: Capacity (STL/CLR)](/cpp/dotnet/vector-stl-clr#capacity).</span><span class="sxs-lookup"><span data-stu-id="508a1-133">For more information, see [vector::capacity (STL/CLR)](/cpp/dotnet/vector-stl-clr#capacity).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iVector.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508a1-134">Entfernt alle Elemente aus dem Container.</span><span class="sxs-lookup"><span data-stu-id="508a1-134">Removes all elements from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-135">Weitere Informationen finden Sie unter [Vector:: Clear (STL/CLR)](/cpp/dotnet/vector-stl-clr#clear).</span><span class="sxs-lookup"><span data-stu-id="508a1-135">For more information, see [vector::clear (STL/CLR)](/cpp/dotnet/vector-stl-clr#clear).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iVector.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508a1-136">Prüft, ob der Container leer ist.</span><span class="sxs-lookup"><span data-stu-id="508a1-136">Tests whether the container has no elements.</span></span></summary>
        <returns><span data-ttu-id="508a1-137"><see langword="true" />, wenn der Container leer ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="508a1-137"><see langword="true" /> if the container has no elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-138">Weitere Informationen finden Sie unter [Vector:: Empty (STL/CLR)](/cpp/dotnet/vector-stl-clr#empty).</span><span class="sxs-lookup"><span data-stu-id="508a1-138">For more information, see [vector::empty (STL/CLR)](/cpp/dotnet/vector-stl-clr#empty).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void end(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end :  -&gt; unit" Usage="iVector.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="508a1-139">Ein Iterator mit Random-Zugriff, der auf eine Position unmittelbar nach dem Ende der kontrollierten Sequenz verweist.</span><span class="sxs-lookup"><span data-stu-id="508a1-139">A random-access iterator that points just beyond the end of the controlled sequence.</span></span> <span data-ttu-id="508a1-140">Sie können damit einen Iterator abrufen, der das <paramref name="current" /> Ende der kontrollierten Sequenz bestimmt; der Zustand kann sich jedoch ändern, sobald sich die Länge der kontrollierten Sequenz ändert.</span><span class="sxs-lookup"><span data-stu-id="508a1-140">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="508a1-141">Legt das Ende der kontrollierten Sequenz fest.</span><span class="sxs-lookup"><span data-stu-id="508a1-141">Designates the end of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="508a1-142">Ein Iterator.</span><span class="sxs-lookup"><span data-stu-id="508a1-142">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="508a1-143">Weitere Informationen finden Sie unter [Vector:: End (STL/CLR)](/cpp/dotnet/vector-stl-clr#end).</span><span class="sxs-lookup"><span data-stu-id="508a1-143">For more information, see [vector::end (STL/CLR)](/cpp/dotnet/vector-stl-clr#end).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="508a1-144">Entfernt Elemente von angegebenen Positionen im Container.</span><span class="sxs-lookup"><span data-stu-id="508a1-144">Removes elements from specified positions in the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-145">Weitere Informationen finden Sie unter [Vector:: Erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="508a1-145">For more information, see [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerRandomAccessIterator(Of TValue), _Where As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.erase (, _Where)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="508a1-146">Ein Iterator, der das erste Element bestimmt, das verbleibt, nachdem alle Elemente entfernt wurden, oder <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />, wenn keine Elemente verbleiben.</span><span class="sxs-lookup"><span data-stu-id="508a1-146">An iterator that designates the first element that remains beyond any removed elements, or <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</span></span></param>
        <param name="_Where"><span data-ttu-id="508a1-147">Die Position des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="508a1-147">The position of the element to remove.</span></span></param>
        <summary><span data-ttu-id="508a1-148">Entfernt das Einzelelement der kontrollierten Sequenz, auf das von *\_Where* verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="508a1-148">Removes the single element of the controlled sequence that is pointed to by *\_Where*.</span></span></summary>
        <returns><span data-ttu-id="508a1-149">Ein Iterator.</span><span class="sxs-lookup"><span data-stu-id="508a1-149">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="508a1-150">Weitere Informationen finden Sie unter [Vector:: Erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="508a1-150">For more information, see [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerRandomAccessIterator(Of TValue), _First_iter As ContainerRandomAccessIterator(Of TValue), _Last_iter As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Last_iter);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.erase (, _First_iter, _Last_iter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="508a1-151">Ein Iterator, der das erste Element bestimmt, das verbleibt, nachdem alle Elemente entfernt wurden, oder <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />, wenn keine Elemente verbleiben.</span><span class="sxs-lookup"><span data-stu-id="508a1-151">An iterator that designates the first element that remains beyond any removed elements, or <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</span></span></param>
        <param name="_First_iter"><span data-ttu-id="508a1-152">Die Anfangsposition des Bereichs von Elementen, die gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="508a1-152">The beginning of the range of elements to erase.</span></span></param>
        <param name="_Last_iter"><span data-ttu-id="508a1-153">Die erste Position nach dem Bereich von Elementen, die gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="508a1-153">The first position beyond the range of elements to erase.</span></span></param>
        <summary><span data-ttu-id="508a1-154">Entfernt die Elemente der kontrollierten Sequenz im Bereich [<paramref name="_First_iter" />, <paramref name="_Last_iter" />].</span><span class="sxs-lookup"><span data-stu-id="508a1-154">Removes the elements of the controlled sequence in the range [<paramref name="_First_iter" />, <paramref name="_Last_iter" />].</span></span></summary>
        <returns><span data-ttu-id="508a1-155">Ein Iterator.</span><span class="sxs-lookup"><span data-stu-id="508a1-155">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="508a1-156">Weitere Informationen finden Sie unter [Vector:: Erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="508a1-156">For more information, see [vector::erase (STL/CLR)](/cpp/dotnet/vector-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="front">
      <MemberSignature Language="C#" Value="public TValue front ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue front() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.front" />
      <MemberSignature Language="VB.NET" Value="Public Function front () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % front();" />
      <MemberSignature Language="F#" Value="abstract member front : unit -&gt; " Usage="iVector.front " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508a1-157">Greift auf das erste Element des Containers zu.</span><span class="sxs-lookup"><span data-stu-id="508a1-157">Accesses the first element of the container.</span></span></summary>
        <returns><span data-ttu-id="508a1-158">Das erste Element der kontrollierten Sequenz, das nicht leer sein darf.</span><span class="sxs-lookup"><span data-stu-id="508a1-158">The first element of the controlled sequence, which must be non-empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-159">Weitere Informationen finden Sie unter [Vector:: Front (STL/CLR)](/cpp/dotnet/vector-stl-clr#front).</span><span class="sxs-lookup"><span data-stu-id="508a1-159">For more information, see [vector::front (STL/CLR)](/cpp/dotnet/vector-stl-clr#front).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="front_item">
      <MemberSignature Language="C#" Value="public TValue front_item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue front_item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.front_item" />
      <MemberSignature Language="VB.NET" Value="Public Property front_item As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue front_item { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.front_item : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.front_item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="508a1-160">Greift auf das erste Element des Containers zu.</span><span class="sxs-lookup"><span data-stu-id="508a1-160">Accesses the first element of the container.</span></span></summary>
        <value><span data-ttu-id="508a1-161">Das erste Element der kontrollierten Sequenz, das nicht leer sein darf.</span><span class="sxs-lookup"><span data-stu-id="508a1-161">The first element of the controlled sequence, which must be non-empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-162">Weitere Informationen finden Sie unter [Vector:: front_item (STL/CLR)](/cpp/dotnet/vector-stl-clr#front_item).</span><span class="sxs-lookup"><span data-stu-id="508a1-162">For more information, see [vector::front_item (STL/CLR)](/cpp/dotnet/vector-stl-clr#front_item).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="get_generation">
      <MemberSignature Language="C#" Value="public uint get_generation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.UInt32 modopt(System.Runtime.CompilerServices.IsLong) get_generation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.get_generation" />
      <MemberSignature Language="VB.NET" Value="Public Function get_generation () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 get_generation();" />
      <MemberSignature Language="F#" Value="abstract member get_generation : unit -&gt; UInt32" Usage="iVector.get_generation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508a1-163">Ruft die aktuelle Änderung des zugrunde liegenden Containers ab.</span><span class="sxs-lookup"><span data-stu-id="508a1-163">Gets the current change generation of the underlying container.</span></span></summary>
        <returns><span data-ttu-id="508a1-164">Die aktuelle Änderung des zugrunde liegenden Containers.</span><span class="sxs-lookup"><span data-stu-id="508a1-164">The current change generation of the underlying container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="508a1-165">Fügt Elemente an einer angegebenen Position im Container hinzu.</span><span class="sxs-lookup"><span data-stu-id="508a1-165">Adds elements to the container at a specified position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-166">Weitere Informationen finden Sie unter [Vector:: Insert (STL/CLR)](/cpp/dotnet/vector-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="508a1-166">For more information, see [vector::insert (STL/CLR)](/cpp/dotnet/vector-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where_iter, System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where_iter, class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where_iter As ContainerRandomAccessIterator(Of TValue), _Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where_iter, System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * System.Collections.IEnumerable -&gt; unit" Usage="iVector.insert (_Where_iter, _Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Where_iter"><span data-ttu-id="508a1-167">Die Position im Container, vor der die Sequenz eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-167">The position in the container before which to insert.</span></span></param>
        <param name="_Right"><span data-ttu-id="508a1-168">Die Enumeration, die in den Container eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-168">The enumeration to insert into the container.</span></span></param>
        <summary><span data-ttu-id="508a1-169">Fügt die Sequenz in den Container ein, die von einem Enumerator angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="508a1-169">Inserts the sequence that is designated by an enumerator into the container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerRandomAccessIterator(Of TValue), _Where As ContainerRandomAccessIterator(Of TValue), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * 'Value -&gt; unit" Usage="iVector.insert (, _Where, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="508a1-170">Ein Iterator, der das neu eingefügte Element entwirft</span><span class="sxs-lookup"><span data-stu-id="508a1-170">An iterator that designates the newly inserted element.</span></span></param>
        <param name="_Where"><span data-ttu-id="508a1-171">Die Position im Container, vor der die Sequenz eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-171">The position in the container before which to insert.</span></span></param>
        <param name="_Val"><span data-ttu-id="508a1-172">Der Wert des Elements, das in den Container eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-172">The value of the element to insert into the container.</span></span></param>
        <summary><span data-ttu-id="508a1-173">Fügt den angegebenen Wert in den Container ein.</span><span class="sxs-lookup"><span data-stu-id="508a1-173">Inserts the specified value into the container.</span></span></summary>
        <returns><span data-ttu-id="508a1-174">Ein Iterator.</span><span class="sxs-lookup"><span data-stu-id="508a1-174">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where As ContainerRandomAccessIterator(Of TValue), _First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.insert (_Where, _First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Where"><span data-ttu-id="508a1-175">Die Position im Container, vor der die Sequenz eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-175">The position in the container before which to insert.</span></span></param>
        <param name="_First"><span data-ttu-id="508a1-176">Die Anfangsposition des Bereichs, der in den Container eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-176">The beginning position of the range to insert into the container.</span></span></param>
        <param name="_Last"><span data-ttu-id="508a1-177">Die erste Position nach dem Ende des Bereichs, der in den Container eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-177">The first position beyond the range to insert into the container.</span></span></param>
        <summary><span data-ttu-id="508a1-178">Fügt die Sequenz in den Container ein, die mit <paramref name="_First" /> beginnt und mit dem Element vor <paramref name="_Last" /> endet.</span><span class="sxs-lookup"><span data-stu-id="508a1-178">Inserts the sequence beginning with <paramref name="_First" /> and ending with the element preceding <paramref name="_Last" /> into the container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, int _Count, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, int32 _Count, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where As ContainerRandomAccessIterator(Of TValue), _Count As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, int _Count, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * int * 'Value -&gt; unit" Usage="iVector.insert (_Where, _Count, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Count" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Where"><span data-ttu-id="508a1-179">Die Position im Container, vor der die Sequenz eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-179">The position in the container before which to insert.</span></span></param>
        <param name="_Count"><span data-ttu-id="508a1-180">Die Anzahl der Elemente, die in den Container eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="508a1-180">The number of elements to insert into the container.</span></span></param>
        <param name="_Val"><span data-ttu-id="508a1-181">Der Wert des Elements, das in den Container eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-181">The value of the element to insert into the container.</span></span></param>
        <summary><span data-ttu-id="508a1-182">Fügt den angegebenen Wert in den Container ein.</span><span class="sxs-lookup"><span data-stu-id="508a1-182">Inserts the specified value into the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="508a1-183">Weitere Informationen finden Sie unter [Vector:: Insert (STL/CLR)](/cpp/dotnet/vector-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="508a1-183">For more information, see [vector::insert (STL/CLR)](/cpp/dotnet/vector-stl-clr#insert).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[int _Pos] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[int] { TValue get(int _Pos); void set(int _Pos, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos"><span data-ttu-id="508a1-184">Die Position des Elements, auf das zugegriffen werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-184">The position of the element to access.</span></span></param>
        <summary><span data-ttu-id="508a1-185">Greift auf ein Element an einer angegebenen Position im Container zu.</span><span class="sxs-lookup"><span data-stu-id="508a1-185">Accesses an element at a specified position in the container.</span></span></summary>
        <value><span data-ttu-id="508a1-186">Das Element an der Position <paramref name="_Pos" />.</span><span class="sxs-lookup"><span data-stu-id="508a1-186">The element at position <paramref name="_Pos" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-187">Weitere Informationen finden Sie unter [vector::operator(STL/CLR)](/cpp/dotnet/vector-stl-clr#operator).</span><span class="sxs-lookup"><span data-stu-id="508a1-187">For more information, see [vector::operator(STL/CLR)](/cpp/dotnet/vector-stl-clr#operator).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="pop_back">
      <MemberSignature Language="C#" Value="public void pop_back ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void pop_back() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.pop_back" />
      <MemberSignature Language="VB.NET" Value="Public Sub pop_back ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void pop_back();" />
      <MemberSignature Language="F#" Value="abstract member pop_back : unit -&gt; unit" Usage="iVector.pop_back " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508a1-188">Entfernt das letzte Element aus dem Container.</span><span class="sxs-lookup"><span data-stu-id="508a1-188">Removes the last element from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-189">Weitere Informationen finden Sie unter [Vector:: pop_back (STL/CLR)](/cpp/dotnet/vector-stl-clr#pop_back).</span><span class="sxs-lookup"><span data-stu-id="508a1-189">For more information, see [vector::pop_back (STL/CLR)](/cpp/dotnet/vector-stl-clr#pop_back).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="push_back">
      <MemberSignature Language="C#" Value="public void push_back (TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void push_back(!TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub push_back (_Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void push_back(TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member push_back : 'Value -&gt; unit" Usage="iVector.push_back _Val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Val"><span data-ttu-id="508a1-190">Der Wert des Elements, das in den Container eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-190">The value of the element to insert into the container.</span></span></param>
        <summary><span data-ttu-id="508a1-191">Fügt ein neues Element am Ende des Containers hinzu.</span><span class="sxs-lookup"><span data-stu-id="508a1-191">Adds a new element to the end of the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-192">Weitere Informationen finden Sie unter [Vector:: push_back (STL/CLR)](/cpp/dotnet/vector-stl-clr#push_back).</span><span class="sxs-lookup"><span data-stu-id="508a1-192">For more information, see [vector::push_back (STL/CLR)](/cpp/dotnet/vector-stl-clr#push_back).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin :  -&gt; unit" Usage="iVector.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="508a1-193">Ein umgekehrter Iterator, der das letzte Element der kontrollierten Sequenz oder die Position unmittelbar nach dem Anfang einer leeren Sequenz bestimmt.</span><span class="sxs-lookup"><span data-stu-id="508a1-193">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence.</span></span> <span data-ttu-id="508a1-194">Demzufolge wird der <paramref name="beginning" /> der umgekehrten Sequenz bestimmt.</span><span class="sxs-lookup"><span data-stu-id="508a1-194">Hence, it designates the <paramref name="beginning" /> of the reverse sequence.</span></span> <span data-ttu-id="508a1-195">Sie können damit einen Iterator abrufen, der den <paramref name="current" /> Anfang der kontrollierten Sequenz in umgekehrter Reihenfolge bestimmt; der Zustand kann sich jedoch ändern, sobald sich die Länge der kontrollierten Sequenz ändert.</span><span class="sxs-lookup"><span data-stu-id="508a1-195">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="508a1-196">Legt den Anfang der umgekehrten kontrollierten Sequenz fest.</span><span class="sxs-lookup"><span data-stu-id="508a1-196">Designates the beginning of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="508a1-197">Ein Iterator.</span><span class="sxs-lookup"><span data-stu-id="508a1-197">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="508a1-198">Weitere Informationen finden Sie unter [Vector:: rbegin (STL/CLR)](/cpp/dotnet/vector-stl-clr#rbegin).</span><span class="sxs-lookup"><span data-stu-id="508a1-198">For more information, see [vector::rbegin (STL/CLR)](/cpp/dotnet/vector-stl-clr#rbegin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rend(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend :  -&gt; unit" Usage="iVector.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="508a1-199">Ein umgekehrter Iterator, der auf eine Position unmittelbar nach dem Anfang der kontrollierten Sequenz verweist.</span><span class="sxs-lookup"><span data-stu-id="508a1-199">A reverse iterator that points just beyond the beginning of the controlled sequence.</span></span> <span data-ttu-id="508a1-200">Demzufolge wird der <paramref name="end" /> der umgekehrten Sequenz bestimmt.</span><span class="sxs-lookup"><span data-stu-id="508a1-200">Hence, it designates the <paramref name="end" /> of the reverse sequence.</span></span> <span data-ttu-id="508a1-201">Sie können damit einen Iterator abrufen, der das <paramref name="current" /> Ende der kontrollierten Sequenz in umgekehrter Reihenfolge bestimmt; der Zustand kann sich jedoch ändern, sobald sich die Länge der kontrollierten Sequenz ändert.</span><span class="sxs-lookup"><span data-stu-id="508a1-201">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="508a1-202">Legt das Ende der umgekehrten kontrollierten Sequenz fest.</span><span class="sxs-lookup"><span data-stu-id="508a1-202">Designates the end of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="508a1-203">Ein Iterator.</span><span class="sxs-lookup"><span data-stu-id="508a1-203">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="508a1-204">Weitere Informationen finden Sie unter [Vector:: rend (STL/CLR)](/cpp/dotnet/vector-stl-clr#rend).</span><span class="sxs-lookup"><span data-stu-id="508a1-204">For more information, see [vector::rend (STL/CLR)](/cpp/dotnet/vector-stl-clr#rend).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="reserve">
      <MemberSignature Language="C#" Value="public void reserve (int _Capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void reserve(int32 _Capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub reserve (_Capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void reserve(int _Capacity);" />
      <MemberSignature Language="F#" Value="abstract member reserve : int -&gt; unit" Usage="iVector.reserve _Capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Capacity"><span data-ttu-id="508a1-205">Die neue Mindestkapazität des Containers.</span><span class="sxs-lookup"><span data-stu-id="508a1-205">The new minimum capacity of the container.</span></span></param>
        <summary><span data-ttu-id="508a1-206">Reserviert Speicher, um die Erweiterung der Mindestkapazität für den Container sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="508a1-206">Reserves storage to ensure the minimum growth capacity for the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-207">Weitere Informationen finden Sie unter [Vector:: Reserve (STL/CLR)](/cpp/dotnet/vector-stl-clr#reserve).</span><span class="sxs-lookup"><span data-stu-id="508a1-207">For more information, see [vector::reserve (STL/CLR)](/cpp/dotnet/vector-stl-clr#reserve).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="resize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="508a1-208">Ändert die Anzahl der Elemente, die im Container enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="508a1-208">Changes the number of elements that the container can hold.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-209">Weitere Informationen finden Sie unter [Vector:: Resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span><span class="sxs-lookup"><span data-stu-id="508a1-209">For more information, see [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="resize">
      <MemberSignature Language="C#" Value="public void resize (int _Newsize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void resize(int32 _Newsize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub resize (_Newsize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void resize(int _Newsize);" />
      <MemberSignature Language="F#" Value="abstract member resize : int -&gt; unit" Usage="iVector.resize _Newsize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newsize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Newsize"><span data-ttu-id="508a1-210">Die neue Größe der kontrollierten Sequenz.</span><span class="sxs-lookup"><span data-stu-id="508a1-210">The new size of the controlled sequence.</span></span></param>
        <summary><span data-ttu-id="508a1-211">Ändert die Anzahl der Elemente im Container in die angegebene Größe.</span><span class="sxs-lookup"><span data-stu-id="508a1-211">Changes the number of elements in the container to the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-212">Weitere Informationen finden Sie unter [Vector:: Resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span><span class="sxs-lookup"><span data-stu-id="508a1-212">For more information, see [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="resize">
      <MemberSignature Language="C#" Value="public void resize (int _Newsize, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void resize(int32 _Newsize, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub resize (_Newsize As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void resize(int _Newsize, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member resize : int * 'Value -&gt; unit" Usage="iVector.resize (_Newsize, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newsize" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Newsize"><span data-ttu-id="508a1-213">Die neue Größe der kontrollierten Sequenz.</span><span class="sxs-lookup"><span data-stu-id="508a1-213">The new size of the controlled sequence.</span></span></param>
        <param name="_Val"><span data-ttu-id="508a1-214">Der Wert der Elemente, die eingefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="508a1-214">The value of the elements to insert.</span></span></param>
        <summary><span data-ttu-id="508a1-215">Ändert die Anzahl der Elemente im Container in die angegebene Größe.</span><span class="sxs-lookup"><span data-stu-id="508a1-215">Changes the number of elements in the container to the specified size.</span></span> <span data-ttu-id="508a1-216">Die Methode fügt Elemente mit dem Wert <paramref name="_Val" /> hinzu, wenn die neue Größe größer ist als die alte Größe.</span><span class="sxs-lookup"><span data-stu-id="508a1-216">If the new size is larger than the old size, the method appends elements that have value <paramref name="_Val" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-217">Weitere Informationen finden Sie unter [Vector:: Resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span><span class="sxs-lookup"><span data-stu-id="508a1-217">For more information, see [vector::resize (STL/CLR)](/cpp/dotnet/vector-stl-clr#resize).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iVector.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="508a1-218">Zählt die Anzahl der Elemente im Container.</span><span class="sxs-lookup"><span data-stu-id="508a1-218">Counts the number of elements in the container.</span></span></summary>
        <returns><span data-ttu-id="508a1-219">Die Länge der kontrollierten Sequenz.</span><span class="sxs-lookup"><span data-stu-id="508a1-219">The length of the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="508a1-220">Weitere Informationen finden Sie unter [Vector:: Size (STL/CLR)](/cpp/dotnet/vector-stl-clr#size).</span><span class="sxs-lookup"><span data-stu-id="508a1-220">For more information, see [vector::size (STL/CLR)](/cpp/dotnet/vector-stl-clr#size).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IVector&lt;TValue&gt; );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IVector`1&lt;!TValue&gt; ) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap ( As IVector(Of TValue))" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IVector&lt;TValue&gt; ^ );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IVector&lt;TValue&gt; A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IVector`1&lt;!TValue&gt; A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (A_0 As IVector(Of TValue))" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IVector&lt;TValue&gt; ^ A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.IVector&lt;'Value&gt; -&gt; unit" Usage="iVector.swap A_0" FrameworkAlternate="netframework-4.5;netframework-3.5;netframework-4.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0" />
        <Parameter Name="A_0" Type="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="508a1-221">Der Container, mit dem der Inhalt getauscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-221">The container with which to swap contents.</span></span></param>
        <param name=""><span data-ttu-id="508a1-222">Der Container, mit dem der Inhalt getauscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="508a1-222">The container with which to swap contents.</span></span></param>
        <summary><span data-ttu-id="508a1-223">Vertauscht den Inhalt von zwei Containern.</span><span class="sxs-lookup"><span data-stu-id="508a1-223">Swaps the contents of two containers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="508a1-224">Weitere Informationen finden Sie unter [Vector:: Swap (STL/CLR)](/cpp/dotnet/vector-stl-clr#swap).</span><span class="sxs-lookup"><span data-stu-id="508a1-224">For more information, see [vector::swap (STL/CLR)](/cpp/dotnet/vector-stl-clr#swap).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>