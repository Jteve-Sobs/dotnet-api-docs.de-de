<Type Name="SqlHelpers" FullName="System.Data.Linq.SqlClient.SqlHelpers">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76be9bd47400faa93d18c1e5927de19f6a20f1ff" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37681079" /></Metadata><TypeSignature Language="C#" Value="public static class SqlHelpers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlHelpers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.SqlClient.SqlHelpers" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlHelpers" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlHelpers abstract sealed" />
  <TypeSignature Language="F#" Value="type SqlHelpers = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="99e2c-101">Stellt Hilfsmethoden für Operationen bereit, mit denen Zeichenfolgenmuster verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="99e2c-101">Provides helper methods for operations that match string patterns.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="GetStringContainsPattern">
      <MemberSignature Language="C#" Value="public static string GetStringContainsPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringContainsPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStringContainsPattern (text As String, escape As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetStringContainsPattern(System::String ^ text, char escape);" />
      <MemberSignature Language="F#" Value="static member GetStringContainsPattern : string * char -&gt; string" Usage="System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern (text, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="99e2c-102">Die Zeichenfolge, die in die Suchmusterzeichenfolge eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e2c-102">The string to insert into the search pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="99e2c-103">Das Zeichen, mit dem Platzhalterzeichen mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="99e2c-103">The character to use to escape wildcard characters.</span></span></param>
        <summary><span data-ttu-id="99e2c-104">Erstellt eine Suchmusterzeichenfolge, bei der vor und nach dem angegebenen Text anderer Text vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="99e2c-104">Creates a search pattern string where the specified text can have other text before and following it.</span></span></summary>
        <returns><span data-ttu-id="99e2c-105">Eine Suchmusterzeichenfolge, die die angegebene Zeichenfolge sowie davor und danach das Zeichen "%" enthält.</span><span class="sxs-lookup"><span data-stu-id="99e2c-105">A search pattern string that contains the specified string and the '%' character before and after it.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStringEndsWithPattern">
      <MemberSignature Language="C#" Value="public static string GetStringEndsWithPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringEndsWithPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStringEndsWithPattern (text As String, escape As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetStringEndsWithPattern(System::String ^ text, char escape);" />
      <MemberSignature Language="F#" Value="static member GetStringEndsWithPattern : string * char -&gt; string" Usage="System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern (text, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="99e2c-106">Die Zeichenfolge, die in die Suchmusterzeichenfolge eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e2c-106">The string to insert into the search pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="99e2c-107">Das Zeichen, mit dem Platzhalterzeichen mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="99e2c-107">The character to use to escape wildcard characters.</span></span></param>
        <summary><span data-ttu-id="99e2c-108">Erstellt eine Suchmusterzeichenfolge, bei der vor, aber nicht nach dem angegebenen Text anderer Text vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="99e2c-108">Creates a search pattern string where the specified text can have other text before it but not following it.</span></span></summary>
        <returns><span data-ttu-id="99e2c-109">Eine Suchmusterzeichenfolge, die das Zeichen "%", gefolgt von der angegebenen Zeichenfolge, enthält.</span><span class="sxs-lookup"><span data-stu-id="99e2c-109">A search pattern string that contains the '%' character followed by the specified string.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStringStartsWithPattern">
      <MemberSignature Language="C#" Value="public static string GetStringStartsWithPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringStartsWithPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStringStartsWithPattern (text As String, escape As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetStringStartsWithPattern(System::String ^ text, char escape);" />
      <MemberSignature Language="F#" Value="static member GetStringStartsWithPattern : string * char -&gt; string" Usage="System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern (text, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="99e2c-110">Die Zeichenfolge, die in die Suchmusterzeichenfolge eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e2c-110">The string to insert into the search pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="99e2c-111">Das Zeichen, mit dem Platzhalterzeichen mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="99e2c-111">The character to use to escape wildcard characters.</span></span></param>
        <summary><span data-ttu-id="99e2c-112">Erstellt eine Suchmusterzeichenfolge, bei der nach, aber nicht vor dem angegebenen Text anderer Text vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="99e2c-112">Creates a search pattern string where the specified text can have other text after it but not before it.</span></span></summary>
        <returns><span data-ttu-id="99e2c-113">Eine Suchmusterzeichenfolge, die die angegebene Zeichenfolge, gefolgt vom Zeichen "%", enthält.</span><span class="sxs-lookup"><span data-stu-id="99e2c-113">A search pattern string that contains the specified string followed by the '%' character.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TranslateVBLikePattern">
      <MemberSignature Language="C#" Value="public static string TranslateVBLikePattern (string pattern, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TranslateVBLikePattern(string pattern, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslateVBLikePattern (pattern As String, escape As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TranslateVBLikePattern(System::String ^ pattern, char escape);" />
      <MemberSignature Language="F#" Value="static member TranslateVBLikePattern : string * char -&gt; string" Usage="System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern (pattern, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="99e2c-114">Das <see langword="Like" />-Suchmuster von Visual Basic, das in ein <see langword="LIKE" />-Suchmuster von SQL Server konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e2c-114">The Visual Basic <see langword="Like" /> search pattern to translate to a SQL Server <see langword="LIKE" /> search pattern.</span></span></param>
        <param name="escape"><span data-ttu-id="99e2c-115">Das Zeichen, mit dem spezielle SQL-Zeichen oder das Escapezeichen selbst mit Escapezeichen versehen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="99e2c-115">The character to use to escape special SQL characters or the escape character itself.</span></span></param>
        <summary><span data-ttu-id="99e2c-116">Übersetzt ein Suchmuster für den <see langword="Like" />-Operator von Visual Basic in ein Suchmuster für den <see langword="LIKE" />-Operator von SQL Server.</span><span class="sxs-lookup"><span data-stu-id="99e2c-116">Translates a search pattern for the Visual Basic <see langword="Like" /> operator to a search pattern for the SQL Server <see langword="LIKE" /> operator.</span></span></summary>
        <returns><span data-ttu-id="99e2c-117">Ein Suchmuster für den <see langword="LIKE" />-Operator von SQL Server, das dem angegebenen <see langword="Like" />-Suchmuster von Visual Basic entspricht.</span><span class="sxs-lookup"><span data-stu-id="99e2c-117">A search pattern for the SQL Server <see langword="LIKE" /> operator that corresponds to the specified Visual Basic <see langword="Like" /> search pattern.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>