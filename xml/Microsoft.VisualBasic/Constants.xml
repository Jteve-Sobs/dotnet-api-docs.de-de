<Type Name="Constants" FullName="Microsoft.VisualBasic.Constants">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69daedb21492b269ca9a41ea30c6e93736ed0c4f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30351374" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Constants" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Constants extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Constants" />
  <TypeSignature Language="VB.NET" Value="Public Module Constants" />
  <TypeSignature Language="C++ CLI" Value="public ref class Constants sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4ffb9-101">Das <see langword="Constants" />-Modul enthält verschiedene Konstanten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ffb9-101">The <see langword="Constants" /> module contains miscellaneous constants.</span>
      </span>
      <span data-ttu-id="4ffb9-102">Diese Konstanten können an einer beliebigen Stelle im Code verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ffb9-102">These constants can be used anywhere in your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-103">Dieses Modul unterstützt das Visual Basic-Konstanten, die die Mitglieder von vielen Visual Basic-Enumerationen entsprechen:</span><span class="sxs-lookup"><span data-stu-id="4ffb9-103">This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="vbAbort">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbAbort = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbort As MsgBoxResult  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbAbort = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-104">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Abort" /> geklickt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-104">Indicates that the <see langword="Abort" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="4ffb9-105">Von der <see langword="MsgBox" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-105">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-106">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxResult` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-106">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-107">Die `MsgBox` -Funktion gibt eine `MsgBoxResult` -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-107">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbAbortRetryIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbortRetryIgnore As MsgBoxStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-108">Gibt an, dass die Schaltflächen <see langword="Abort" />, <see langword="Retry" /> und <see langword="Ignore" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-108">Indicates that the <see langword="Abort" />, <see langword="Retry" />, and <see langword="Ignore" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-109">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-109">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-110">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-110">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbApplicationModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbApplicationModal As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbApplicationModal = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-111">Gibt an, dass das Meldungsfeld als modales Dialogfeld angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-111">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-112">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-112">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-113">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-113">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbArchive">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbArchive = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbArchive = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArchive As FileAttribute  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbArchive = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-114">Gibt an, dass die Datei seit dem letzten Sicherungsvorgang für Dateizugriffsfunktionen geändert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-114">Indicates that the file has changed since the last backup operation for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-115">Beim Aufrufen der `Dir`, `GetAttr`, oder `SetAttr` -Funktionen, die Sie verwenden die `FileAttribute` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-115">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-116">Die `Attributes` Argument übernimmt die `FileAttribute` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-116">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-117">Beim Ausführen der Datei-e/a-Vorgänge, die `My.Computer.FileSystem` Objekt bietet höhere Leistung und Verbesserung der benutzerfreundlichkeit als ältere Datei e/a-Methoden.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-117">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="4ffb9-118">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.FileSystem> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-118">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbArray">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbArray = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbArray = (8192)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArray" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArray As VariantType  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbArray = 8192;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-119">Gibt an, dass der Typ eines Variant-Objekts ein Array ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-119">Indicates that the type of a variant object is an array.</span>
          </span>
          <span data-ttu-id="4ffb9-120">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-120">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-121">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-121">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-122">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-122">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-123">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-123">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbBack">
      <MemberSignature Language="C#" Value="public const string vbBack;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbBack" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBack" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBack As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbBack;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-124">Stellt ein Rücktastenzeichen für Druck- und Anzeigefunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-124">Represents a backspace character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbBinaryCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbBinaryCompare = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBinaryCompare As CompareMethod  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbBinaryCompare = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-125">Gibt an, dass ein binärer Vergleich ausgeführt werden soll, wenn Vergleichsfunktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-125">Specifies that a binary comparison should be performed when comparison functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-126">Beim Aufrufen von Vergleichsfunktionen können Sie die <xref:Microsoft.VisualBasic.CompareMethod> Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-126">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-127">Die `Compare` Argument übernimmt die `CompareMethod` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-127">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-128">Vergleiche binär- und Textmodus finden Sie unter [Option Compare-Anweisung](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-128">For binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbBoolean">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbBoolean = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbBoolean = (11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBoolean As VariantType  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbBoolean = 11;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-129">Gibt an, dass der Typ eines Variant-Objekts <see langword="Boolean" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-129">Indicates that the type of a variant object is <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="4ffb9-130">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-130">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-131">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-131">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-132">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-132">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-133">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-133">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbByte">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbByte = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbByte = (17)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbByte" />
      <MemberSignature Language="VB.NET" Value="Public Const vbByte As VariantType  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbByte = 17;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-134">Gibt an, dass der Typ eines Variant-Objekts <see langword="Byte" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-134">Indicates that the type of a variant object is <see langword="Byte" />.</span>
          </span>
          <span data-ttu-id="4ffb9-135">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-135">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-136">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-136">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-137">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-137">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-138">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-138">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbCancel = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCancel As MsgBoxResult  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbCancel = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-139">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Cancel" /> geklickt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-139">Indicates that the <see langword="Cancel" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="4ffb9-140">Von der <see langword="MsgBox" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-140">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-141">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxResult` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-141">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-142">Die `MsgBox` -Funktion gibt eine `MsgBoxResult` -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-142">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCr">
      <MemberSignature Language="C#" Value="public const string vbCr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCr" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCr" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCr As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-143">Stellt ein Wagenrücklaufzeichen für Druck- und Anzeigefunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-143">Represents a carriage-return character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCritical">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbCritical = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCritical As MsgBoxStyle  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbCritical = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-144">Gibt an, dass das Symbol für wichtige Meldungen angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-144">Indicates that the critical message icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-145">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-145">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-146">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-146">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbCrLf">
      <MemberSignature Language="C#" Value="public const string vbCrLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCrLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCrLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCrLf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-147">Stellt ein Wagenrücklaufzeichen mit einem Zeilenvorschubzeichen für Druck- und Anzeigefunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-147">Represents a carriage-return character combined with a linefeed character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbCurrency">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbCurrency = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbCurrency = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCurrency As VariantType  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbCurrency = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-148">Gibt an, dass der Typ eines Variant-Objekts <see langword="Currency" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-148">Indicates that the type of a variant object is <see langword="Currency" />.</span>
          </span>
          <span data-ttu-id="4ffb9-149">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-149">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-150">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-150">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-151">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-151">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-152">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-152">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDate = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDate = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDate As VariantType  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDate = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-153">Gibt an, dass der Typ eines Variant-Objekts <see langword="Date" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-153">Indicates that the type of a variant object is <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="4ffb9-154">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-154">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-155">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-155">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-156">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-156">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-157">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-157">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDecimal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDecimal = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDecimal = (14)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDecimal As VariantType  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDecimal = 14;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-158">Gibt an, dass der Typ eines Variant-Objekts <see langword="Decimal" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-158">Indicates that the type of a variant object is <see langword="Decimal" />.</span>
          </span>
          <span data-ttu-id="4ffb9-159">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-159">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-160">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-160">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-161">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-161">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-162">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-162">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton1 As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-163">Gibt an, dass die ganz links angezeigte Schaltfläche als Standardschaltfläche ausgewählt wird, wenn das Meldungsfeld angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-163">Indicates that the leftmost button is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-164">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-164">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-165">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-165">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton2">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton2 As MsgBoxStyle  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-166">Gibt an, dass die zweite Schaltfläche von links als Standardschaltfläche ausgewählt wird, wenn das Meldungsfeld angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-166">Indicates that the second button from the left is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-167">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-167">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-168">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-168">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton3">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton3 As MsgBoxStyle  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-169">Gibt an, dass die dritte Schaltfläche von links als Standardschaltfläche ausgewählt wird, wenn das Meldungsfeld angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-169">Indicates that the third button from the left is selected as the default button when the message box appears.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-170">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-170">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-171">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-171">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbDirectory">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbDirectory = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDirectory As FileAttribute  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbDirectory = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-172">Gibt an, dass die Datei ein Verzeichnis oder Ordner für Dateizugriffsfunktionen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-172">Indicates that the file is a directory or folder for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-173">Beim Aufrufen der `Dir`, `GetAttr`, oder `SetAttr` -Funktionen, die Sie verwenden die `FileAttribute` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-173">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-174">Die `Attributes` Argument übernimmt die `FileAttribute` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-174">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-175">Beim Ausführen der Datei-e/a-Vorgänge, die `My.Computer.FileSystem` Objekt bietet höhere Leistung und Verbesserung der benutzerfreundlichkeit als ältere Datei e/a-Methoden.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-175">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="4ffb9-176">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.FileSystem> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-176">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbDouble">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDouble = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDouble = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDouble As VariantType  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDouble = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-177">Gibt an, dass der Typ eines Variant-Objekts <see langword="Double" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-177">Indicates that the type of a variant object is <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="4ffb9-178">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-178">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-179">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-179">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-180">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-180">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-181">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-181">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbEmpty">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbEmpty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbEmpty = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Const vbEmpty As VariantType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbEmpty = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-182">Gibt an, dass der Typ eines Variant-Objekts <see langword="Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-182">Indicates that the type of a variant object is <see langword="Empty" />.</span>
          </span>
          <span data-ttu-id="4ffb9-183">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-183">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-184">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-184">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-185">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-185">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-186">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-186">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbExclamation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbExclamation = (48)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbExclamation As MsgBoxStyle  = 48" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbExclamation = 48;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-187">Gibt an, dass das Ausrufezeichensymbol angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-187">Indicates that the exclamation icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-188">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-188">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-189">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-189">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbFalse">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbFalse = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbFalse = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFalse As TriState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbFalse = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-190">Gibt an, dass ein <see langword="Boolean" /> Wert von <see langword="False" /> verwendet werden soll, wenn Zahlenformatierungsfunktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-190">Indicates that a <see langword="Boolean" /> value of <see langword="False" /> should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-191">Wenn Sie Funktionen zum Formatieren von Anrufen, Sie können im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-191">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFourDays">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFourDays As FirstWeekOfYear  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-192">Gibt an, dass die erste Woche des Jahres mit mindestens vier Tagen verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-192">Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-193">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-193">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-194">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-194">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-195">Die `FirstWeekOfYear` Enumeration gibt an, die gültigen Werte für die `WeekOfYear` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-195">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-196">Die `WeekOfYear` Argument übernimmt die `FirstWeekOfYear` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-196">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstFullWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFullWeek As FirstWeekOfYear  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-197">Gibt an, dass die erste vollständige Woche des Jahres verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-197">Indicates that the first full week of the year should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-198">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-198">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-199">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-199">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-200">Die `FirstWeekOfYear` Enumeration gibt an, die gültigen Werte für die `WeekOfYear` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-200">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-201">Die `WeekOfYear` Argument übernimmt die `FirstWeekOfYear` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-201">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFirstJan1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstJan1 As FirstWeekOfYear  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-202">Gibt an, dass die Woche des Jahres mit 1. Januar verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-202">Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-203">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-203">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-204">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-204">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-205">Die `FirstWeekOfYear` Enumeration gibt an, die gültigen Werte für die `WeekOfYear` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-205">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-206">Die `WeekOfYear` Argument übernimmt die `FirstWeekOfYear` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-206">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbFormFeed">
      <MemberSignature Language="C#" Value="public const string vbFormFeed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbFormFeed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFormFeed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbFormFeed;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-207">Stellt ein Seitenvorschubzeichen für Druckfunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-207">Represents a form-feed character for print functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbFriday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbFriday = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFriday As FirstDayOfWeek  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbFriday = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-208">Gibt an, dass Freitag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-208">Specifies that Friday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-209">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-209">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-210">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-210">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-211">Die `FirstDayOfWeek` Enumeration gibt an, die gültigen Werte für die `DayOfWeek` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-211">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-212">Die `DayOfWeek` Argument übernimmt die `FirstDayOfWeek` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-212">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-213">Datumsfunktionen auch zurückgeben `FirstDayOfWeek` Werte (außer `System`).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-213">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbGeneralDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbGeneralDate = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGeneralDate As DateFormat  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbGeneralDate = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-214">Gibt an, dass das allgemeine Datumsformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-214">Indicates that the general date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-215">Beim Aufrufen der `FormatDateTime` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-215">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ffb9-216">Sie können die regionalen Einstellungen des Computers zugreifen, durch Doppelklicken auf die **regionale** Symbol gefunden **Systemsteuerung**.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-216">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbGet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbGet = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbGet = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGet As CallType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbGet = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-217">Gibt an, dass ein Eigenschaftswert abgerufen werden soll, wenn die <see langword="CallByName" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-217">Specifies that a property value should be retrieved when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-218">Beim Aufrufen der `CallByName` -Funktion können Sie die folgenden `CallType` Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-218">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-219">Die `UseCallType` Argument übernimmt die `CallType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-219">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbHidden">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbHidden = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbHidden = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHidden As FileAttribute  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbHidden = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-220">Gibt an, dass die Datei eine versteckte Datei für Dateizugriffsfunktionen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-220">Indicates that the file is a hidden file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-221">Beim Aufrufen der `Dir`, `GetAttr`, oder `SetAttr` -Funktionen, die Sie verwenden die `FileAttribute` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-221">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-222">Die `Attributes` Argument übernimmt die `FileAttribute` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-222">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-223">Beim Ausführen der Datei-e/a-Vorgänge, die `My.Computer.FileSystem` Objekt bietet höhere Leistung und Verbesserung der benutzerfreundlichkeit als ältere Datei e/a-Methoden.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-223">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="4ffb9-224">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.FileSystem> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-224">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbHide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbHide = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbHide = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHide As AppWinStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbHide = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-225">Gibt an, dass der Fensterstil für das aufgerufene Programm ausgeblendet ist, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-225">Indicates that the window style is hidden for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-226">Wenn Sie ausgeben `Shell` Befehle können Sie in Ihrem Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-226">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-227">Die `Style` Argument übernimmt die `AppWinStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-227">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbHiragana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbHiragana = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHiragana As VbStrConv  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbHiragana = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-228">Gibt an, dass Hiragana-Zeichen in Katakana-Zeichen konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-228">Indicates Hiragana characters should be converted to Katakana characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-229">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-229">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-230">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-230">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbIgnore = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbIgnore As MsgBoxResult  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbIgnore = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-231">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Ignore" /> geklickt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-231">Indicates that the <see langword="Ignore" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="4ffb9-232">Von der <see langword="MsgBox" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-232">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-233">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxResult` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-233">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-234">Die `MsgBox` -Funktion gibt eine `MsgBoxResult` -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-234">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInformation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbInformation = (64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInformation As MsgBoxStyle  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbInformation = 64;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-235">Gibt an, dass das Informationssymbol angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-235">Indicates that the information icon will display when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-236">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-236">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-237">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-237">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbInteger">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbInteger = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbInteger = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInteger As VariantType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbInteger = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-238">Gibt an, dass der Typ eines Variant-Objekts <see langword="Integer" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-238">Indicates that the type of a variant object is <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="4ffb9-239">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-239">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-240">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-240">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-241">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-241">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-242">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-242">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbKatakana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbKatakana = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbKatakana As VbStrConv  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbKatakana = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-243">Gibt an, dass Katakana-Zeichen in Hiragana-Zeichen konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-243">Indicates that Katakana characters should be converted to Hiragana characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-244">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-244">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-245">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-245">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbLet = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbLet = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLet As CallType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbLet = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-246">Gibt an, dass ein Eigenschaftswert auf eine Objektinstanz festgelegt werden soll, wenn die <see langword="CallByName" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-246">Indicates that a property value should be set to an object instance when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-247">Beim Aufrufen der `CallByName` -Funktion können Sie die folgenden `CallType` Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-247">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-248">Die `UseCallType` Argument übernimmt die `CallType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-248">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLf">
      <MemberSignature Language="C#" Value="public const string vbLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbLf;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-249">Stellt ein Zeilenvorschubzeichen für Druck- und Anzeigefunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-249">Represents a linefeed character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbLinguisticCasing">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = (1024)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLinguisticCasing As VbStrConv  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLinguisticCasing = 1024;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-250">Gibt an, dass Zeichen konvertiert werden sollen, um sprachliche Regeln für die Groß-/Kleinschreibung anstelle der Dateisystemregeln für die Groß-/Kleinschreibung zu verwenden, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-250">Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-251">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-251">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-252">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-252">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbLong">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbLong = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbLong = (20)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLong" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLong As VariantType  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbLong = 20;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-253">Gibt an, dass der Typ eines Variant-Objekts <see langword="Long" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-253">Indicates the type of a variant object is <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="4ffb9-254">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-254">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-255">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-255">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-256">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-256">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-257">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-257">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongDate = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongDate = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongDate As DateFormat  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongDate = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-258">Gibt an, dass das lange Datumsformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-258">Indicates that the long date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-259">Beim Aufrufen der `FormatDateTime` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-259">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ffb9-260">Sie können die regionalen Einstellungen des Computers zugreifen, durch Doppelklicken auf die **regionale** Symbol gefunden **Systemsteuerung**.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-260">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLongTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongTime = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongTime = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongTime As DateFormat  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongTime = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-261">Gibt an, dass das lange Zeitformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-261">Indicates that the long time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-262">Beim Aufrufen der `FormatDateTime` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-262">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ffb9-263">Sie können die regionalen Einstellungen des Computers zugreifen, durch Doppelklicken auf die **regionale** Symbol gefunden **Systemsteuerung**.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-263">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbLowerCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLowerCase = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLowerCase As VbStrConv  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLowerCase = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-264">Gibt an, dass Zeichen in Kleinbuchstaben konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-264">Indicates that characters should be converted to lowercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-265">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-265">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-266">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-266">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMaximizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMaximizedFocus As AppWinStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMaximizedFocus = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-267">Gibt an, dass der Fensterstil maximiert wird und den Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-267">Indicates that the window style is maximized with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-268">Wenn Sie ausgeben `Shell` Befehle können Sie in Ihrem Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-268">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-269">Die `Style` Argument übernimmt die `AppWinStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-269">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMethod">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbMethod = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbMethod = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMethod As CallType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbMethod = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-270">Gibt an, dass eine Methode aufgerufen werden soll, wenn die <see langword="CallByName" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-270">Specifies that a method should be called when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-271">Beim Aufrufen der `CallByName` -Funktion können Sie die folgenden `CallType` Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-271">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-272">Die `UseCallType` Argument übernimmt die `CallType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-272">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedFocus As AppWinStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedFocus = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-273">Gibt an, dass der Fensterstil minimiert wird und den Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-273">Indicates that the window style is minimized with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-274">Wenn Sie ausgeben `Shell` Befehle können Sie in Ihrem Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-274">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-275">Die `Style` Argument übernimmt die `AppWinStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-275">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedNoFocus As AppWinStyle  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-276">Gibt an, dass der Fensterstil minimiert wird und keinen Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-276">Indicates that the window style is minimized without focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-277">Wenn Sie ausgeben `Shell` Befehle können Sie in Ihrem Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-277">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-278">Die `Style` Argument übernimmt die `AppWinStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-278">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbMonday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbMonday = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMonday As FirstDayOfWeek  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbMonday = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-279">Gibt an, dass Montag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-279">Specifies that Monday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-280">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-280">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-281">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-281">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-282">Die `FirstDayOfWeek` Enumeration gibt an, die gültigen Werte für die `DayOfWeek` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-282">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-283">Die `DayOfWeek` Argument übernimmt die `FirstDayOfWeek` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-283">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-284">Datumsfunktionen auch zurückgeben `FirstDayOfWeek` Werte (außer `System`).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-284">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxHelp">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = (16384)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxHelp As MsgBoxStyle  = 16384" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-285">Gibt an, dass die Schaltfläche <see langword="Help" /> angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-285">Indicates that the <see langword="Help" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-286">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-286">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-287">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-287">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRight">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = (524288)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRight As MsgBoxStyle  = 524288" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-288">Gibt an, dass der Text rechts ausgerichtet wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-288">Indicates that text will be right-aligned when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-289">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-289">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-290">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-290">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRtlReading">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = (1048576)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRtlReading As MsgBoxStyle  = 1048576" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-291">Gibt an, dass Text mit Leserichtung von rechts nach links (hebräische und arabische Systeme) angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-291">Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-292">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-292">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-293">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-293">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxSetForeground">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = (65536)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxSetForeground As MsgBoxStyle  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-294">Gibt an, dass das Meldungsfeld im Vordergrund angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-294">Indicates that the message box will display in the foreground when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-295">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-295">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-296">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-296">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNarrow">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbNarrow = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNarrow As VbStrConv  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbNarrow = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-297">Gibt an, dass breite Zeichen (zwei Bytes) in schmale Zeichen (ein Byte) konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-297">Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-298">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-298">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-299">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-299">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNewLine">
      <MemberSignature Language="C#" Value="public const string vbNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNewLine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNewLine As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNewLine;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-300">Stellt ein Zeilenumbruchzeichen für Druck- und Anzeigefunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-300">Represents a newline character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbNo = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNo As MsgBoxResult  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbNo = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-301">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="No" /> geklickt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-301">Indicates that the <see langword="No" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="4ffb9-302">Von der <see langword="MsgBox" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-302">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-303">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxResult` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-303">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-304">Die `MsgBox` -Funktion gibt eine `MsgBoxResult` -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-304">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbNormal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbNormal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormal As FileAttribute  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbNormal = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-305">Gibt an, dass die Datei eine normale Datei für Dateizugriffsfunktionen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-305">Indicates that the file is a normal file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-306">Beim Aufrufen der `Dir`, `GetAttr`, oder `SetAttr` -Funktionen, die Sie verwenden die `FileAttribute` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-306">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-307">Die `Attributes` Argument übernimmt die `FileAttribute` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-307">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-308">Beim Ausführen der Datei-e/a-Vorgänge, die `My.Computer.FileSystem` Objekt bietet höhere Leistung und Verbesserung der benutzerfreundlichkeit als ältere Datei e/a-Methoden.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-308">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="4ffb9-309">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.FileSystem> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-309">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalFocus = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalFocus As AppWinStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalFocus = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-310">Gibt an, dass der Fensterstil normal ist und den Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-310">Indicates that the window style is normal with focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-311">Wenn Sie ausgeben `Shell` Befehle können Sie in Ihrem Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-311">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-312">Die `Style` Argument übernimmt die `AppWinStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-312">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNormalNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalNoFocus As AppWinStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalNoFocus = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-313">Gibt an, dass der Fensterstil normal ist und keinen Fokus für das aufgerufene Programm besitzt, wenn die <see langword="Shell" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-313">Indicates that the window style is normal without focus for the invoked program when the <see langword="Shell" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-314">Wenn Sie ausgeben `Shell` Befehle können Sie in Ihrem Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-314">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-315">Die `Style` Argument übernimmt die `AppWinStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-315">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbNull">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbNull = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbNull = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNull" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNull As VariantType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbNull = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-316">Gibt an, dass der Typ eines Variant-Objekts <see langword="Nothing" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-316">Indicates that the type of a variant object is <see langword="Nothing" />.</span>
          </span>
          <span data-ttu-id="4ffb9-317">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-317">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-318">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-318">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-319">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-319">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-320">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-320">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbNullChar">
      <MemberSignature Language="C#" Value="public const string vbNullChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullChar" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullChar As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-321">Stellt ein NULL-Zeichen für Druck- und Anzeigefunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-321">Represents a null character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbNullString">
      <MemberSignature Language="C#" Value="public const string vbNullString = null;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullString = null" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullString As String  = null" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullString = nullptr;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-322">Stellt eine Zeichenfolge der Länge 0 (null) für Druck- und Anzeigefunktionen sowie zum Aufrufen externer Prozeduren dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-322">Represents a zero-length string for print and display functions, and for calling external procedures.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbObject">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbObject = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbObject = (9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObject" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObject As VariantType  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbObject = 9;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-323">Gibt an, dass der Typ eines Variant-Objekts <see langword="Object" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-323">Indicates that the type of a variant object is <see langword="Object" />.</span>
          </span>
          <span data-ttu-id="4ffb9-324">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-324">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-325">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-325">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-326">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-326">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-327">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-327">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbObjectError">
      <MemberSignature Language="C#" Value="public const int vbObjectError = -2147221504;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 vbObjectError = (-2147221504)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObjectError As Integer  = -2147221504" />
      <MemberSignature Language="C++ CLI" Value="public: int vbObjectError = -2147221504;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147221504</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-328">Stellt die Fehlernummer für das Objekt dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-328">Represents the object error number.</span>
          </span>
          <span data-ttu-id="4ffb9-329">Benutzerdefinierte Fehlernummern sollten größer als dieser Wert sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-329">User-defined error numbers should be greater than this value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbOK">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbOK = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOK" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOK As MsgBoxResult  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbOK = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-330">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="OK" /> geklickt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-330">Indicates that the <see langword="OK" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="4ffb9-331">Von der <see langword="MsgBox" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-331">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-332">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxResult` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-332">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-333">Die `MsgBox` -Funktion gibt eine `MsgBoxResult` -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-333">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKCancel As MsgBoxStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKCancel = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-334">Gibt an, dass die Schaltflächen <see langword="OK" /> und <see langword="Cancel" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-334">Indicates that the <see langword="OK" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-335">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-335">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-336">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-336">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbOKOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKOnly As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKOnly = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-337">Gibt an, dass nur die Schaltfläche <see langword="OK" /> angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-337">Indicates that only the <see langword="OK" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-338">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-338">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-339">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-339">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbProperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbProperCase = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbProperCase As VbStrConv  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbProperCase = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-340">Gibt an, dass der erste Buchstabe jedes Worts in einer Zeichenfolge in Großbuchstaben und die übrigen Zeichen in Kleinbuchstaben konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-340">Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-341">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-341">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-342">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-342">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbQuestion">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbQuestion = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberSignature Language="VB.NET" Value="Public Const vbQuestion As MsgBoxStyle  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbQuestion = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-343">Gibt an, dass das Fragezeichensymbol angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-343">Indicates that the question icon will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-344">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-344">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-345">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-345">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbReadOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbReadOnly = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbReadOnly As FileAttribute  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbReadOnly = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-346">Gibt an, dass die Datei eine schreibgeschützte Datei für Dateizugriffsfunktionen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-346">Indicates that the file is a read-only file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-347">Beim Aufrufen der `Dir`, `GetAttr`, oder `SetAttr` -Funktionen, die Sie verwenden die `FileAttribute` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-347">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-348">Die `Attributes` Argument übernimmt die `FileAttribute` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-348">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-349">Beim Ausführen der Datei-e/a-Vorgänge, die `My.Computer.FileSystem` Objekt bietet höhere Leistung und Verbesserung der benutzerfreundlichkeit als ältere Datei e/a-Methoden.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-349">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="4ffb9-350">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.FileSystem> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-350">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetry">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbRetry = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetry As MsgBoxResult  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbRetry = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-351">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Retry" /> geklickt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-351">Indicates that the <see langword="Retry" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="4ffb9-352">Von der <see langword="MsgBox" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-352">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-353">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxResult` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-353">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-354">Die `MsgBox` -Funktion gibt eine `MsgBoxResult` -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-354">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbRetryCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetryCancel As MsgBoxStyle  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbRetryCancel = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-355">Gibt an, dass die Schaltflächen <see langword="Retry" /> und <see langword="Cancel" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-355">Indicates that the <see langword="Retry" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-356">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-356">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-357">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-357">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSaturday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSaturday As FirstDayOfWeek  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSaturday = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-358">Gibt an, dass Samstag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-358">Specifies that Saturday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-359">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-359">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-360">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-360">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-361">Die `FirstDayOfWeek` Enumeration gibt an, die gültigen Werte für die `DayOfWeek` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-361">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-362">Die `DayOfWeek` Argument übernimmt die `FirstDayOfWeek` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-362">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-363">Datumsfunktionen auch zurückgeben `FirstDayOfWeek` Werte (außer `System`).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-363">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbSet = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbSet = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSet As CallType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbSet = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-364">Gibt an, dass ein Eigenschaftswert festgelegt werden soll, wenn die <see langword="CallByName" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-364">Indicates that a property value should be set when the <see langword="CallByName" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-365">Beim Aufrufen der `CallByName` -Funktion können Sie die folgenden `CallType` Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-365">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-366">Die `UseCallType` Argument übernimmt die `CallType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-366">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbShortDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortDate = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortDate As DateFormat  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortDate = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-367">Gibt an, dass das kurze Datumsformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-367">Indicates that the short-date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-368">Beim Aufrufen der `FormatDateTime` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-368">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ffb9-369">Sie können die regionalen Einstellungen des Computers zugreifen, durch Doppelklicken auf die **regionale** Symbol gefunden **Systemsteuerung**.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-369">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbShortTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortTime = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortTime = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortTime As DateFormat  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortTime = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-370">Gibt an, dass das kurze Zeitformat für die aktuelle Kultur verwendet werden soll, wenn die <see langword="FormatDateTime" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-370">Indicates that the short-time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-371">Beim Aufrufen der `FormatDateTime` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-371">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ffb9-372">Sie können die regionalen Einstellungen des Computers zugreifen, durch Doppelklicken auf die **regionale** Symbol gefunden **Systemsteuerung**.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-372">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      </Docs>
    </Member>
    <Member MemberName="vbSimplifiedChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSimplifiedChinese As VbStrConv  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbSimplifiedChinese = 256;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-373">Gibt an, dass Zeichen in vereinfachte chinesische Zeichen konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-373">Indicates that characters should be converted to Simplified Chinese when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-374">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-374">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-375">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-375">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbSingle">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbSingle = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbSingle = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSingle As VariantType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbSingle = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-376">Gibt an, dass der Typ eines Variant-Objekts <see langword="Single" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-376">Indicates that the type of a variant object is <see langword="Single" />.</span>
          </span>
          <span data-ttu-id="4ffb9-377">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-377">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-378">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-378">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-379">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-379">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-380">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-380">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbString">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbString = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbString = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbString As VariantType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbString = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-381">Gibt an, dass der Typ eines Variant-Objekts <see langword="String" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-381">Indicates that the type of a variant object is <see langword="String" />.</span>
          </span>
          <span data-ttu-id="4ffb9-382">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-382">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-383">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-383">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-384">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-384">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-385">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-385">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbSunday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSunday = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSunday As FirstDayOfWeek  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSunday = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-386">Gibt an, dass Sonntag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-386">Specifies that Sunday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-387">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-387">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-388">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-388">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-389">Die `FirstDayOfWeek` Enumeration gibt an, die gültigen Werte für die `DayOfWeek` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-389">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-390">Die `DayOfWeek` Argument übernimmt die `FirstDayOfWeek` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-390">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-391">Datumsfunktionen auch zurückgeben `FirstDayOfWeek` Werte (außer `System`).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-391">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbSystem = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbSystem = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystem As FileAttribute  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbSystem = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-392">Gibt an, dass die Datei eine Systemdatei für Dateizugriffsfunktionen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-392">Indicates that the file is a system file for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-393">Beim Aufrufen der `Dir`, `GetAttr`, oder `SetAttr` -Funktionen, die Sie verwenden die `FileAttribute` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-393">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-394">Die `Attributes` Argument übernimmt die `FileAttribute` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-394">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-395">Beim Ausführen der Datei-e/a-Vorgänge, die `My.Computer.FileSystem` Objekt bietet höhere Leistung und Verbesserung der benutzerfreundlichkeit als ältere Datei e/a-Methoden.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-395">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="4ffb9-396">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.FileSystem> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-396">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbSystemModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = (4096)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystemModal As MsgBoxStyle  = 4096" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbSystemModal = 4096;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-397">Gibt an, dass das Meldungsfeld als modales Dialogfeld angezeigt wird, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-397">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-398">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-398">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-399">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-399">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbTab">
      <MemberSignature Language="C#" Value="public const string vbTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbTab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-400">Stellt ein Tabulatorzeichen für Druck- und Anzeigefunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-400">Represents a tab character for print and display functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbTextCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbTextCompare = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTextCompare As CompareMethod  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbTextCompare = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-401">Gibt an, dass ein Textvergleich ausgeführt werden soll, wenn Vergleichsfunktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-401">Indicates that a text comparison should be performed when comparison functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-402">Beim Aufrufen von Vergleichsfunktionen können Sie die <xref:Microsoft.VisualBasic.CompareMethod> Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-402">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-403">Die `Compare` Argument übernimmt die `CompareMethod` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-403">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-404">Weitere Informationen über weitere Informationen zum Vergleichen von Binär- und Textmodus finden Sie unter [Option Compare-Anweisung](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-404">For more information about more information about binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      </Docs>
    </Member>
    <Member MemberName="vbThursday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbThursday = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbThursday As FirstDayOfWeek  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbThursday = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-405">Gibt an, dass Donnerstag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-405">Specifies that Thursday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-406">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-406">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-407">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-407">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-408">Die `FirstDayOfWeek` Enumeration gibt an, die gültigen Werte für die `DayOfWeek` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-408">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-409">Die `DayOfWeek` Argument übernimmt die `FirstDayOfWeek` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-409">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-410">Datumsfunktionen auch zurückgeben `FirstDayOfWeek` Werte (außer `System`).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-410">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbTraditionalChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTraditionalChinese As VbStrConv  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbTraditionalChinese = 512;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-411">Gibt an, dass Zeichen in traditionelle chinesische Zeichen konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-411">Indicates that characters should be converted to Traditional Chinese when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-412">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-412">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-413">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-413">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbTrue">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbTrue = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbTrue = (-1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTrue As TriState  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbTrue = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-414">Gibt an, dass ein <see langword="Boolean" /> Wert von <see langword="True" /> verwendet werden soll, wenn Zahlenformatierungsfunktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-414">Indicates that a <see langword="Boolean" /> value of <see langword="True" /> should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-415">Wenn Sie Funktionen zum Formatieren von Anrufen, Sie können im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-415">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbTuesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTuesday As FirstDayOfWeek  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbTuesday = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-416">Gibt an, dass Dienstag als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-416">Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-417">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-417">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-418">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-418">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-419">Die `FirstDayOfWeek` Enumeration gibt an, die gültigen Werte für die `DayOfWeek` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-419">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-420">Die `DayOfWeek` Argument übernimmt die `FirstDayOfWeek` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-420">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-421">Datumsfunktionen auch zurückgeben `FirstDayOfWeek` Werte (außer `System`).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-421">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUpperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbUpperCase = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUpperCase As VbStrConv  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbUpperCase = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-422">Gibt an, dass Zeichen in Großbuchstaben konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-422">Indicates that characters should be converted to uppercase when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-423">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-423">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-424">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-424">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseDefault">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbUseDefault = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbUseDefault = (-2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseDefault As TriState  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbUseDefault = -2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-425">Gibt an, dass der <see langword="Boolean" /> Standardwert verwendet werden soll, wenn Zahlenformatierungsfunktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-425">Indicates that the default <see langword="Boolean" /> value should be used when number-formatting functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-426">Wenn Sie Funktionen zum Formatieren von Anrufen, Sie können im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-426">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      </Docs>
    </Member>
    <Member MemberName="vbUserDefinedType">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbUserDefinedType = (36)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUserDefinedType As VariantType  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbUserDefinedType = 36;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-427">Gibt an, dass der Typ eines Variant-Objekts ein benutzerdefinierter Typ ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-427">Indicates that the type of a variant object is a user-defined type.</span>
          </span>
          <span data-ttu-id="4ffb9-428">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-428">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-429">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-429">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-430">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-430">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-431">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-431">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystem As FirstWeekOfYear  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbUseSystem = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-432">Gibt an, dass die vom System als erste Woche des Jahres angegebene Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-432">Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-433">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-433">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-434">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-434">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-435">Die `FirstWeekOfYear` Enumeration gibt an, die gültigen Werte für die `WeekOfYear` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-435">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-436">Die `WeekOfYear` Argument übernimmt die `FirstWeekOfYear` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-436">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbUseSystemDayOfWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystemDayOfWeek As FirstDayOfWeek  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-437">Gibt an, dass der vom System als erster Tag der Woche angegebene Tag verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-437">Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-438">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-438">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-439">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-439">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-440">Die `FirstDayOfWeek` Enumeration gibt an, die gültigen Werte für die `DayOfWeek` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-440">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-441">Die `DayOfWeek` Argument übernimmt die `FirstDayOfWeek` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-441">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-442">Datumsfunktionen auch zurückgeben `FirstDayOfWeek` Werte (außer `System`).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-442">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbVariant">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbVariant = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbVariant = (12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVariant As VariantType  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbVariant = 12;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-443">Gibt an, dass der Typ eines Variant-Objekts <see langword="Variant" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-443">Indicates that the type of a variant object is <see langword="Variant" />.</span>
          </span>
          <span data-ttu-id="4ffb9-444">Von der <see langword="VarType" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-444">Returned by the <see langword="VarType" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-445">Beim Aufrufen der `VarType` -Funktion können Sie Enumerationsmember im Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-445">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-446">Die `VariantType` -Enumeration definiert den Konstanten, um die Identifizierung möglicher `Variant` Typen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-446">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="4ffb9-447">Die folgende Tabelle enthält die `VariantType` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-447">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbVerticalTab">
      <MemberSignature Language="C#" Value="public const string vbVerticalTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbVerticalTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVerticalTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbVerticalTab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-448">Stellt ein Wagenrücklaufzeichen für Druckfunktionen dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-448">Represents a carriage-return character for print functions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="vbVolume">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbVolume = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbVolume = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVolume As FileAttribute  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbVolume = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-449">Gibt das Volumebezeichnungsdateiattribut für Dateizugriffsfunktionen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-449">Indicates the volume label file attribute for file-access functions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-450">Dieses Attribut gilt nicht für die `SetAttr` Funktion.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-450">This attribute is not valid for the `SetAttr` function.</span></span>  
  
 <span data-ttu-id="4ffb9-451">Beim Aufrufen der `Dir`, `GetAttr`, oder `SetAttr` -Funktionen, die Sie verwenden die `FileAttribute` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-451">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-452">Die `Attributes` Argument übernimmt die `FileAttribute` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-452">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-453">Beim Ausführen der Datei-e/a-Vorgänge, die `My.Computer.FileSystem` Objekt bietet höhere Leistung und Verbesserung der benutzerfreundlichkeit als ältere Datei e/a-Methoden.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-453">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="4ffb9-454">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.FileSystem> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-454">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="vbWednesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWednesday As FirstDayOfWeek  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbWednesday = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-455">Gibt an, dass Mittwoch als erster Tag der Woche verwendet werden soll, wenn datumsbezogene Funktionen aufgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-455">Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-456">Beim Aufrufen von Datumsfunktionen können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-456">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-457">Einige datumsbezogenen Funktionen akzeptieren eine `DayOfWeek` Argument, eine `WeekOfYear` Argument oder beides.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-457">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="4ffb9-458">Die `FirstDayOfWeek` Enumeration gibt an, die gültigen Werte für die `DayOfWeek` Argumente sowie die möglichen Rückgabewerte von Funktionen.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-458">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="4ffb9-459">Die `DayOfWeek` Argument übernimmt die `FirstDayOfWeek` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-459">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="4ffb9-460">Datumsfunktionen auch zurückgeben `FirstDayOfWeek` Werte (außer `System`).</span><span class="sxs-lookup"><span data-stu-id="4ffb9-460">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="vbWide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbWide = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbWide = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWide As VbStrConv  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbWide = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-461">Gibt an, dass schmale Zeichen (ein Byte) in breite Zeichen (zwei Bytes) konvertiert werden sollen, wenn die <see langword="StrConv" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-461">Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <see langword="StrConv" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-462">Beim Aufrufen der `StrConv` -Funktion können Sie im Code anstelle der eigentlichen Werte der folgenden Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-462">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-463">Die `Conversion` Argument übernimmt die `VbStrConv` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-463">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="vbYes">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbYes = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYes" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYes As MsgBoxResult  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbYes = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-464">Gibt an, dass in einem Meldungsfeld auf die Schaltfläche <see langword="Yes" /> geklickt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-464">Indicates that the <see langword="Yes" /> button was clicked in a message box.</span>
          </span>
          <span data-ttu-id="4ffb9-465">Von der <see langword="MsgBox" />-Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-465">Returned by the <see langword="MsgBox" /> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-466">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxResult` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-466">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="4ffb9-467">Die `MsgBox` -Funktion gibt eine `MsgBoxResult` -Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-467">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNo = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNo As MsgBoxStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNo = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-468">Gibt an, dass die Schaltflächen <see langword="Yes" /> und <see langword="No" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-468">Indicates that the <see langword="Yes" /> and <see langword="No" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-469">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-469">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-470">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-470">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="vbYesNoCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNoCancel As MsgBoxStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ffb9-471">Gibt an, dass die Schaltflächen <see langword="Yes" />, <see langword="No" /> und <see langword="Cancel" /> angezeigt werden, wenn die <see langword="MsgBox" />-Funktion aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ffb9-471">Indicates that the <see langword="Yes" />, <see langword="No" />, and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffb9-472">Beim Aufrufen der `MsgBox` -Funktion, die Sie verwenden die `MsgBoxStyle` Enumeration in Ihrem Code anstelle der eigentlichen Werte.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-472">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="4ffb9-473">Die `Buttons` Argument übernimmt die `MsgBoxStyle` Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="4ffb9-473">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>