<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3839187e325901ad3f3f4d5e81304055450240f2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30348414" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Das <see langword="VbMath" />-Modul enthält Prozeduren, mit denen mathematische Operationen ausgeführt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Modul unterstützt die Visual Basic-Schlüsselwörter und Member der Laufzeitbibliothek zum Generieren von Zufallszahlen.  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `Rnd` Funktion generiert eine zufällige ganze Zahl im Bereich von 1 bis 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert den Zufallszahlengenerator.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert den Zufallszahlengenerator.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung von der `Randomize` Methode akzeptiert einen Ausgangswert. Stattdessen wird vom Systemzeitgeber zurückgegebene Wert als neuer Startwert verwendet.  
  
 Wenn `Randomize` nicht verwendet wird, die `Rnd` -Funktion (mit ohne Argumente) die gleiche Anzahl als Ausgangswert verwendet beim ersten er aufgerufen wird, und danach die zuletzt generierten Zahl als einen Ausgangswert verwendet.  
  
> [!NOTE]
>  Aufrufen, um die Sequenzen von Zufallszahlen zu wiederholen, `Rnd` mit einem negativen Argument unmittelbar vor der Verwendung `Randomize` mit einem numerischen Argument.  
  
> [!IMPORTANT]
>  Da die `Random` Anweisung und die `Rnd` Funktion mit einem Ausgangswert starten und Zahlen, die in einem begrenzten Bereich fallen generieren, die Ergebnisse möglicherweise von einer Person der zur Generierung verwendeten Algorithmus weiß, vorhersagbare. Folglich die `Random` Anweisung und die `Rnd` Funktion sollte nicht zum Generieren von Zufallszahlen für die Verwendung der Verschlüsselung verwendet werden. Weitere Informationen finden Sie unter <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `Randomize` Anweisung zum Initialisieren der Zufallszahlengenerator. Da das Number-Argument weggelassen wurde, `Randomize` verwendet den Rückgabewert aus der `Timer` Funktion wie die neuen Ausgangswerts.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">Dies ist optional. Ein <see langword="Object" /> oder ein gültiger numerischer Ausdruck.</param>
        <summary>Initialisiert den Zufallszahlengenerator.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` verwendet `Number` zum Initialisieren der `Rnd` Funktion Zufallszahlengenerator, indem sie einen neuen Ausgangswert. Wenn Sie weglassen `Number`, der vom Systemzeitgeber zurückgegebene Wert wird als neuen Ausgangswert verwendet.  
  
 Wenn `Randomize` nicht verwendet wird, die `Rnd` -Funktion (mit ohne Argumente) die gleiche Anzahl als Ausgangswert verwendet beim ersten er aufgerufen wird, und danach die zuletzt generierten Zahl als einen Ausgangswert verwendet.  
  
> [!NOTE]
>  Aufrufen, um die Sequenzen von Zufallszahlen zu wiederholen, `Rnd` mit einem negativen Argument unmittelbar vor der Verwendung `Randomize` mit einem numerischen Argument. Mit `Randomize` mit den gleichen Wert für `Number` wird die vorherige Sequenz nicht wiederholt.  
  
> [!IMPORTANT]
>  Da die `Random` Anweisung und die `Rnd` Funktion mit einem Ausgangswert starten und Zahlen, die in einem begrenzten Bereich fallen generieren, die Ergebnisse möglicherweise von einer Person der zur Generierung verwendeten Algorithmus weiß, vorhersagbare. Folglich die `Random` Anweisung und die `Rnd` Funktion sollte nicht zum Generieren von Zufallszahlen für die Verwendung der Verschlüsselung verwendet werden. Weitere Informationen finden Sie unter <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `Randomize` Anweisung zum Initialisieren der Zufallszahlengenerator. Da das Number-Argument weggelassen wurde, `Randomize` verwendet den Rückgabewert aus der `Timer` Funktion wie die neuen Ausgangswerts.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Zufallszahl des Typs <see langword="Single" /> zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zufallszahl des Typs <see langword="Single" /> zurück.</summary>
        <returns>Die nächste Zufallszahl in der Folge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Rnd` Funktion gibt einen Wert kleiner als 1, aber größer als oder gleich 0 (null).  
  
 Vor dem Aufruf `Rnd`, verwenden Sie die `Randomize` Anweisung ohne Argument Zufallszahlengenerator mit einem Startwert initialisiert werden, basierend auf den Systemzeitgeber.  
  
 Um zufällige ganze Zahlen in einem angegebenen Bereich zu erzeugen, verwenden Sie die folgende Formel ein.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 Hier `upperbound` ist die höchste Zahl im Bereich, und `lowerbound` wird von der niedrigsten Zahl im Bereich.  
  
> [!NOTE]
>  Aufrufen, um die Sequenzen von Zufallszahlen zu wiederholen, `Rnd` mit einem negativen Argument unmittelbar vor der Verwendung `Randomize` mit einem numerischen Argument.  
  
> [!IMPORTANT]
>  Da die `Random` Anweisung und die `Rnd` Funktion mit einem Ausgangswert starten und Zahlen, die in einem begrenzten Bereich fallen generieren, die Ergebnisse möglicherweise von einer Person der zur Generierung verwendeten Algorithmus weiß, vorhersagbare. Folglich die `Random` Anweisung und die `Rnd` Funktion sollte nicht zum Generieren von Zufallszahlen für die Verwendung der Verschlüsselung verwendet werden.  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `Rnd` Funktion generiert eine zufällige ganze Zahl im Bereich von 1 bis 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">Dies ist optional. Ein <see langword="Single" />-Wert oder ein gültiger <see langword="Single" />-Ausdruck.</param>
        <summary>Gibt eine Zufallszahl des Typs <see langword="Single" /> zurück.</summary>
        <returns>Wenn die Zahl kleiner als 0 ist, generiert Rnd jedes Mal dieselbe Zahl und verwendet <paramref name="Number" /> als Startwert. Ist die Zahl größer als 0, generiert Rnd die nächste Zufallszahl in der Folge. Wenn die Zahl gleich 0 ist, generiert Rnd die zuletzt generierte Zahl. Wird die Zahl nicht angegeben, generiert Rnd die nächste Zufallszahl in der Folge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Rnd` Funktion gibt einen Wert kleiner als 1, aber größer als oder gleich 0 (null).  
  
 Der Wert der `Number` bestimmt, wie `Rnd` generiert eine zufällige Zahl.  
  
 Für jeden angegebenen Startwert wird dieselbe Zahlenfolge generiert, da jeder nachfolgende Aufruf von der `Rnd` Funktion verwendet die zuvor generierte Zahl als Ausgangswert für die nächste Zahl in der Sequenz.  
  
 Vor dem Aufruf `Rnd`, verwenden Sie die `Randomize` Anweisung ohne Argument Zufallszahlengenerator mit einem Startwert initialisiert werden, basierend auf den Systemzeitgeber.  
  
 Um zufällige ganze Zahlen in einem angegebenen Bereich zu erzeugen, verwenden Sie die folgende Formel ein.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 Hier `upperbound` ist die höchste Zahl im Bereich, und `lowerbound` wird von der niedrigsten Zahl im Bereich.  
  
> [!NOTE]
>  Aufrufen, um die Sequenzen von Zufallszahlen zu wiederholen, `Rnd` mit einem negativen Argument unmittelbar vor der Verwendung `Randomize` mit einem numerischen Argument. Mit `Randomize` mit den gleichen Wert für `Number` wird die vorherige Sequenz nicht wiederholt.  
  
> [!IMPORTANT]
>  Da die `Random` Anweisung und die `Rnd` Funktion mit einem Ausgangswert starten und Zahlen, die in einem begrenzten Bereich fallen generieren, die Ergebnisse möglicherweise von einer Person der zur Generierung verwendeten Algorithmus weiß, vorhersagbare. Folglich die `Random` Anweisung und die `Rnd` Funktion sollte nicht zum Generieren von Zufallszahlen für die Verwendung der Verschlüsselung verwendet werden.  
  
   
  
## Examples  
 Dieses Beispiel verwendet die `Rnd` Funktion generiert eine zufällige ganze Zahl im Bereich von 1 bis 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
  </Members>
</Type>