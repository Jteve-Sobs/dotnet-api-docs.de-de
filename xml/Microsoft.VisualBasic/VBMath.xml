<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0df267a0dd8ad0ab6ed8805d55229fa1add34727" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86631841" /></Metadata><TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VBMath extends System.Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
    <AssemblyVersion>10.0.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.VisualBasic.CompilerServices.StandardModule]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.VisualBasic.CompilerServices.StandardModule&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Das <see langword="VbMath" />-Modul enthält Prozeduren, mit denen mathematische Operationen ausgeführt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Modul unterstützt die Visual Basic-sprach Schlüsselwörter und die Lauf Zeit Bibliothekselemente zum Erstellen von Zufallszahlen.  
  
   
  
## Examples  
 In diesem Beispiel wird die- `Rnd` Funktion verwendet, um einen zufälligen ganzzahligen Wert im Bereich von 1 bis 6 zu generieren.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary">Mathematische Operationen: Zusammenfassung</related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/derived-math-functions">Abgeleitete mathematische Funktionen (Visual Basic)</related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/">Schlüsselwörter (Visual Basic)</related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members">Visual Basic von Lauf Zeit Bibliotheks Membern</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert den Zufallszahlengenerator.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Randomize() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert den Zufallszahlengenerator.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung der- `Randomize` Methode nimmt keinen Startwert an. Stattdessen wird der vom System-Timer zurückgegebene Wert als neuer Ausgangswert verwendet.  
  
 Wenn `Randomize` nicht verwendet wird, verwendet die- `Rnd` Funktion (ohne Argumente) die gleiche Zahl wie ein Startwert, wenn Sie zum ersten Mal aufgerufen wird, und anschließend die zuletzt generierte Zahl als Ausgangswert verwendet.  
  
> [!NOTE]
>  Um Sequenzen von Zufallszahlen zu wiederholen, müssen `Rnd` Sie mit einem negativen Argument direkt vor der Verwendung `Randomize` von mit einem numerischen Argument aufzurufen.  
  
> [!IMPORTANT]
>  Da die `Random` -Anweisung und die- `Rnd` Funktion mit einem Startwert beginnen und Zahlen generieren, die in einem begrenzten Bereich liegen, können die Ergebnisse von jemandem, der den Algorithmus für die Generierung kennt, vorhersagbar sein. Folglich sollten die `Random` -Anweisung und die- `Rnd` Funktion nicht zum Generieren von Zufallszahlen für die Verwendung in der Kryptografie verwendet werden. Weitere Informationen finden Sie unter <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 In diesem Beispiel wird die `Randomize` -Anweisung verwendet, um den Zufallszahlen-Generator zu initialisieren. Da das number-Argument weggelassen wurde, `Randomize` verwendet den Rückgabewert der `Timer` Funktion als neuen Ausgangswert.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary">Mathematische Operationen: Zusammenfassung</related>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Randomize(float64 Number) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">Optional. Ein <see langword="Object" /> oder ein gültiger numerischer Ausdruck.</param>
        <summary>Initialisiert den Zufallszahlengenerator.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` verwendet `Number` zum Initialisieren des `Rnd` Zufallszahlen-Generators der Funktion und gibt ihm einen neuen Ausgangswert. Wenn Sie weglassen `Number` , wird der vom System-Timer zurückgegebene Wert als neuer Ausgangswert verwendet.  
  
 Wenn `Randomize` nicht verwendet wird, verwendet die- `Rnd` Funktion (ohne Argumente) die gleiche Zahl wie ein Startwert, wenn Sie zum ersten Mal aufgerufen wird, und anschließend die zuletzt generierte Zahl als Ausgangswert verwendet.  
  
> [!NOTE]
>  Um Sequenzen von Zufallszahlen zu wiederholen, müssen `Rnd` Sie mit einem negativen Argument direkt vor der Verwendung `Randomize` von mit einem numerischen Argument aufzurufen. `Randomize`Wenn Sie mit dem gleichen Wert für verwenden, `Number` wird die vorherige Sequenz nicht wiederholt.  
  
> [!IMPORTANT]
>  Da die `Random` -Anweisung und die- `Rnd` Funktion mit einem Startwert beginnen und Zahlen generieren, die in einem begrenzten Bereich liegen, können die Ergebnisse von jemandem, der den Algorithmus für die Generierung kennt, vorhersagbar sein. Folglich sollten die `Random` -Anweisung und die- `Rnd` Funktion nicht zum Generieren von Zufallszahlen für die Verwendung in der Kryptografie verwendet werden. Weitere Informationen finden Sie unter <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 In diesem Beispiel wird die `Randomize` -Anweisung verwendet, um den Zufallszahlen-Generator zu initialisieren. Da das number-Argument weggelassen wurde, `Randomize` verwendet den Rückgabewert der `Timer` Funktion als neuen Ausgangswert.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary">Mathematische Operationen: Zusammenfassung</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Zufallszahl des Typs <see cref="T:System.Single" /> zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Rnd() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zufallszahl des Typs <see cref="T:System.Single" /> zurück.</summary>
        <returns>Die nächste Zufallszahl in der Folge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- `Rnd` Funktion gibt einen Wert zurück, der kleiner als 1, aber größer oder gleich 0 (null) ist.  
  
 Verwenden Sie vor dem Aufrufen `Rnd` von die- `Randomize` Anweisung ohne ein-Argument, um den Zufallszahlengenerator mit einem Ausgangswert zu initialisieren, der auf dem System Timer basiert.  
  
 Verwenden Sie die folgende Formel, um ganzzahlige ganzzahlige Werte in einem bestimmten Bereich zu entwickeln.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 Hier `upperbound` ist die höchste Zahl im Bereich, und `lowerbound` ist die niedrigste Zahl im Bereich.  
  
> [!NOTE]
>  Um Sequenzen von Zufallszahlen zu wiederholen, müssen `Rnd` Sie mit einem negativen Argument direkt vor der Verwendung `Randomize` von mit einem numerischen Argument aufzurufen.  
  
> [!IMPORTANT]
>  Da die `Random` -Anweisung und die- `Rnd` Funktion mit einem Startwert beginnen und Zahlen generieren, die in einem begrenzten Bereich liegen, können die Ergebnisse von jemandem, der den Algorithmus für die Generierung kennt, vorhersagbar sein. Folglich sollten die `Random` -Anweisung und die- `Rnd` Funktion nicht zum Generieren von Zufallszahlen für die Verwendung in der Kryptografie verwendet werden.  
  
   
  
## Examples  
 In diesem Beispiel wird die- `Rnd` Funktion verwendet, um einen zufälligen ganzzahligen Wert im Bereich von 1 bis 6 zu generieren.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary">Mathematische Operationen: Zusammenfassung</related>
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Rnd(float32 Number) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">Optional. Ein <see cref="T:System.Single" />-Wert oder ein gültiger <see cref="T:System.Single" />-Ausdruck.</param>
        <summary>Gibt eine Zufallszahl des Typs <see cref="T:System.Single" /> zurück.</summary>
        <returns>Wenn die Zahl kleiner als 0 ist, generiert Rnd jedes Mal dieselbe Zahl und verwendet <paramref name="Number" /> als Startwert. Ist die Zahl größer als 0, generiert Rnd die nächste Zufallszahl in der Folge. Wenn die Zahl gleich 0 ist, generiert Rnd die zuletzt generierte Zahl. Wird die Zahl nicht angegeben, generiert Rnd die nächste Zufallszahl in der Folge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- `Rnd` Funktion gibt einen Wert zurück, der kleiner als 1, aber größer oder gleich 0 (null) ist.  
  
 Der Wert von `Number` bestimmt, wie `Rnd` eine Zufallszahl generiert.  
  
 Für einen beliebigen anfänglichen Ausgangswert wird dieselbe Zahlen Sequenz generiert, da jeder aufeinanderfolgende aufrufsrückruf `Rnd` die zuvor generierte Zahl als Ausgangswert für die nächste Zahl in der Sequenz verwendet.  
  
 Verwenden Sie vor dem Aufrufen `Rnd` von die- `Randomize` Anweisung ohne ein-Argument, um den Zufallszahlengenerator mit einem Ausgangswert zu initialisieren, der auf dem System Timer basiert.  
  
 Verwenden Sie die folgende Formel, um ganzzahlige ganzzahlige Werte in einem bestimmten Bereich zu entwickeln.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 Hier `upperbound` ist die höchste Zahl im Bereich, und `lowerbound` ist die niedrigste Zahl im Bereich.  
  
> [!NOTE]
>  Um Sequenzen von Zufallszahlen zu wiederholen, müssen `Rnd` Sie mit einem negativen Argument direkt vor der Verwendung `Randomize` von mit einem numerischen Argument aufzurufen. `Randomize`Wenn Sie mit dem gleichen Wert für verwenden, `Number` wird die vorherige Sequenz nicht wiederholt.  
  
> [!IMPORTANT]
>  Da die `Random` -Anweisung und die- `Rnd` Funktion mit einem Startwert beginnen und Zahlen generieren, die in einem begrenzten Bereich liegen, können die Ergebnisse von jemandem, der den Algorithmus für die Generierung kennt, vorhersagbar sein. Folglich sollten die `Random` -Anweisung und die- `Rnd` Funktion nicht zum Generieren von Zufallszahlen für die Verwendung in der Kryptografie verwendet werden.  
  
   
  
## Examples  
 In diesem Beispiel wird die- `Rnd` Funktion verwendet, um einen zufälligen ganzzahligen Wert im Bereich von 1 bis 6 zu generieren.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary">Mathematische Operationen: Zusammenfassung</related>
      </Docs>
    </Member>
  </Members>
</Type>
