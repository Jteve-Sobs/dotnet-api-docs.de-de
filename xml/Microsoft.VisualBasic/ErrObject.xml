<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b956e175a057d7318656b9527a06fcf8a634d67a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34173845" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="843e5-101">Das <see langword="ErrObject" />-Modul enthält Eigenschaften und Prozeduren, mit denen Laufzeitfehler unter Verwendung des <see langword="Err" />-Objekts identifiziert und behandelt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="843e5-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-102">Die `ErrObject` Modul unterstützt die `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="843e5-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="843e5-103">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="843e5-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-104">In diesem Beispiel verwendet die Eigenschaften der `Err` Objekt in ein Dialogfeld Fehlermeldungen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="843e5-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="843e5-105">Beachten Sie, was geschieht, wenn Sie die `Clear` Methode erste: beim Generieren Sie dann Visual Basic-Fehler mit der `Raise` -Methode, die Visual Basic Standardwerte zu den Eigenschaften des der `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="843e5-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="843e5-106">Löscht alle Eigenschafteneinstellungen des <see langword="Err" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-106">Clears all property settings of the <see langword="Err" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-107">Verwenden Sie `Clear` explizit deaktivieren der `Err` Objekt, nachdem ein Fehler behandelt wurde, z. B. bei Verwendung der verzögerten Fehlerbehandlung mit `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="843e5-107">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="843e5-108">Die `Clear` Methode wird automatisch aufgerufen, wenn eine der folgenden Anweisungen ausführt:</span><span class="sxs-lookup"><span data-stu-id="843e5-108">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="843e5-109">Jede Art von `Resume` Anweisung</span><span class="sxs-lookup"><span data-stu-id="843e5-109">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="843e5-110">`Exit Sub`, `Exit Function`oder `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="843e5-110">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="843e5-111">Alle `On Error` Anweisung</span><span class="sxs-lookup"><span data-stu-id="843e5-111">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="843e5-112">Alle `Try...Catch...Finally` Anweisung</span><span class="sxs-lookup"><span data-stu-id="843e5-112">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="843e5-113">Die `On Error Resume Next` Konstrukt möglicherweise vorzuziehen `On Error GoTo` bei der Behandlung von Fehlern während des Zugriffs auf andere Objekte generiert.</span><span class="sxs-lookup"><span data-stu-id="843e5-113">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="843e5-114">Überprüfung `Err` nach jeder Interaktion mit einem Objekt der Code zugegriffen: Sie können sicher sein, welches Objekt den Fehlercode in platziert `Err.Number`, und welches Objekt den Fehler (das Objekt ursprünglich generiert hat im angegebenen `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="843e5-114">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-115">Dieses Beispiel verwendet die `Err` des Objekts `Clear` Methode, um die numerischen Eigenschaften des Zurücksetzen der `Err` Objekt, das 0 (null) und seine Zeichenfolgeneigenschaften in leere Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="843e5-115">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="843e5-116">Ohne den Aufruf von `Clear`, der zweite Aufruf von `MsgBox` würde die gleiche Fehlermeldung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="843e5-116">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="843e5-117">Gibt einen <see langword="String" />-Ausdruck zurück, der eine einem Fehler zugeordnete beschreibende Zeichenfolge enthält, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-117">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span>
          </span>
          <span data-ttu-id="843e5-118">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-118">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="843e5-119">Gibt einen <see langword="String" />-Ausdruck zurück, der eine einem Fehler zugeordnete beschreibende Zeichenfolge enthält, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-119">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span>
          </span>
          <span data-ttu-id="843e5-120">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-120">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-121">Die `Description` Einstellung der Eigenschaft besteht eine kurze Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="843e5-121">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="843e5-122">Verwenden Sie diese Eigenschaft, um die Benachrichtigung des Benutzers zu einem Fehler, die nicht oder nicht behandeln möchten.</span><span class="sxs-lookup"><span data-stu-id="843e5-122">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="843e5-123">Wenn Sie eine benutzerdefinierte Fehlermeldung zu generieren, weisen Sie eine kurze Beschreibung des Fehlers zu den `Description` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="843e5-123">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="843e5-124">Wenn die `Description` Eigenschaft wird nicht ausgefüllt, und der Wert des der <xref:Microsoft.VisualBasic.ErrObject.Number%2A> Eigenschaft entspricht einer Visual Basic-Laufzeitfehler, und klicken Sie dann die Zeichenfolge zurückgegeben, durch die <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> Funktion festgelegt ist, der `Description` Eigenschaft, wenn der Fehler generiert wird.</span><span class="sxs-lookup"><span data-stu-id="843e5-124">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-125">In diesem Beispiel wird eine benutzerdefinierte Meldung an die `Description` Eigenschaft von der `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="843e5-125">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="843e5-126">Gibt eine ganze Zahl zurück, die die Zeilennummer der letzten ausgeführten Anweisung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-126">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="843e5-127">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-127">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="843e5-128">Gibt eine ganze Zahl zurück, die die Zeilennummer der letzten ausgeführten Anweisung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-128">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="843e5-129">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-129">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-130">Wenn Visual Basic keine Zeilennummern findet, wird 0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="843e5-130">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-131">Dieses Beispiel verwendet die `Erl` Eigenschaft, um die Nummer der Zeile anzugeben.</span><span class="sxs-lookup"><span data-stu-id="843e5-131">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="843e5-132">Gibt die Ausnahme zurück, die den aufgetretenen Fehler darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-132">Returns the exception representing the error that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="843e5-133">Gibt die Ausnahme zurück, die den aufgetretenen Fehler darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-133">Returns the exception representing the error that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-134">Die `GetException` -Funktion steht nur aus den `Err` object-Klasse.</span><span class="sxs-lookup"><span data-stu-id="843e5-134">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="843e5-135">Generische Vergleich funktioniert mit den `Exception` Eigenschaft von der `Err` Objekt, das den Fehler anzuzeigen, die aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="843e5-135">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-136">Der folgende Code zeigt die Meldung, die zugewiesen werden, auf die Ausnahme in der `Err` Objekt:</span><span class="sxs-lookup"><span data-stu-id="843e5-136">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="843e5-137">Gibt eine <see langword="Integer" /> zurück, die die Kontext-ID für ein Thema in einer Hilfedatei enthält, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-137">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span>
          </span>
          <span data-ttu-id="843e5-138">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-138">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="843e5-139">Gibt eine <see langword="Integer" /> zurück, die die Kontext-ID für ein Thema in einer Hilfedatei enthält, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-139">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span>
          </span>
          <span data-ttu-id="843e5-140">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-140">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-141">Die `HelpContext` Eigenschaft wird verwendet, um kontextbezogene Hilfe für eine Anwendung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="843e5-141">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="843e5-142">Wenn in eine Hilfedatei angegeben ist `HelpFile`die `HelpContext` Eigenschaft wird verwendet, um die Hilfedatei identifiziert automatisch angezeigt.</span><span class="sxs-lookup"><span data-stu-id="843e5-142">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="843e5-143">Wenn beide die `HelpFile` und `HelpContext` Eigenschaften sind leer, den Wert der <xref:Microsoft.VisualBasic.ErrObject.Number%2A> Eigenschaft aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="843e5-143">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="843e5-144">Wenn der Wert der `Number` Eigenschaft entspricht der Wert eines Visual Basic-Laufzeitfehler, wird die Kontext-ID der Visual Basic-Hilfe verwendet.</span><span class="sxs-lookup"><span data-stu-id="843e5-144">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="843e5-145">Wenn der Wert der `Number` Eigenschaft keiner Visual Basic-Fehler, der Inhalt-Bildschirm für die Visual Basic-Hilfedatei wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="843e5-145">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="843e5-146">Schreiben Sie Routinen in Ihrer Anwendung um typische Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="843e5-146">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="843e5-147">Beim Programmieren mit einem Objekt können Sie das Objekt Hilfedatei zur Verbesserung der Qualität der Fehlerbehandlung oder eine sinnvolle Meldung, die für Benutzer angezeigt, wenn der Fehler nicht behebbar ist.</span><span class="sxs-lookup"><span data-stu-id="843e5-147">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-148">Dieses Beispiel verwendet die `HelpContext` Eigenschaft von der `Err` -Objekt, das Visual Basic-Hilfethema für Anzeigen der `Overflow` Fehler.</span><span class="sxs-lookup"><span data-stu-id="843e5-148">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="843e5-149">Gibt einen <see langword="String" />-Ausdruck zurück, der den vollqualifizierten Pfad zu einer Hilfedatei enthält, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-149">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span>
          </span>
          <span data-ttu-id="843e5-150">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-150">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="843e5-151">Gibt einen <see langword="String" />-Ausdruck zurück, der den vollqualifizierten Pfad zu einer Hilfedatei enthält, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-151">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span>
          </span>
          <span data-ttu-id="843e5-152">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-152">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-153">Wenn eine Hilfedatei, wird angegeben wird die `HelpFile` -Eigenschaft, es wird automatisch aufgerufen, wenn der Benutzer die Hilfe-Taste (oder die F1-Taste) drückt im Dialogfeld mit der Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="843e5-153">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="843e5-154">Wenn die `HelpContext` Eigenschaft enthält einen gültigen Kontext-ID für die angegebene Datei, die in diesem Thema wird automatisch angezeigt.</span><span class="sxs-lookup"><span data-stu-id="843e5-154">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="843e5-155">Wenn kein `HelpFile` angegeben ist, wird die Visual Basic-Hilfedatei wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="843e5-155">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="843e5-156">Schreiben Sie Routinen in Ihrer Anwendung um typische Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="843e5-156">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="843e5-157">Beim Programmieren mit einem Objekt können Sie das Objekt Hilfedatei zur Verbesserung der Qualität der Fehlerbehandlung oder eine sinnvolle Meldung, die für Benutzer angezeigt, wenn der Fehler nicht behebbar ist.</span><span class="sxs-lookup"><span data-stu-id="843e5-157">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-158">Dieses Beispiel verwendet die `HelpFile` Eigenschaft von der `Err` Objekt, um das Hilfesystem zu starten.</span><span class="sxs-lookup"><span data-stu-id="843e5-158">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="843e5-159">Wird standardmäßig die `HelpFile` Eigenschaft enthält den Namen des Visual Basic-Hilfedatei.</span><span class="sxs-lookup"><span data-stu-id="843e5-159">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="843e5-160">Gibt einen von einem Aufruf einer Dynamic Link Library (DLL) erzeugten Systemfehlercode zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-160">Returns a system error code produced by a call to a dynamic-link library (DLL).</span>
          </span>
          <span data-ttu-id="843e5-161">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-161">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="843e5-162">Gibt einen von einem Aufruf einer Dynamic Link Library (DLL) erzeugten Systemfehlercode zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-162">Returns a system error code produced by a call to a dynamic-link library (DLL).</span>
          </span>
          <span data-ttu-id="843e5-163">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-163">Read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-164">Die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Eigenschaft gilt nur für DLL-Aufrufe von Visual Basic-Code.</span><span class="sxs-lookup"><span data-stu-id="843e5-164">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="843e5-165">Wenn ein Aufruf erfolgt ist, gibt die aufgerufene Funktion in der Regel einen Code, der angibt, Erfolg oder Fehler, und die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Eigenschaft gefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="843e5-165">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="843e5-166">Überprüfen Sie die Dokumentation für die DLL-Funktionen, die die Rückgabewerte zu bestimmen, die Erfolg oder Fehler anzeigt.</span><span class="sxs-lookup"><span data-stu-id="843e5-166">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="843e5-167">Sobald der Fehlercode zurückgegeben wird, wird die Visual Basic-Anwendung muss sofort überprüfen die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="843e5-167">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="843e5-168">Keine Ausnahme wird ausgelöst, wenn die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="843e5-168">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="843e5-169">Die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Eigenschaft ist geschützt, indem <xref:System.Security.Permissions.SecurityAction.LinkDemand>, welche verhindert, es vor nicht vertrauenswürdigem Code zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="843e5-169">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="843e5-170">Allerdings <xref:System.Security.Permissions.SecurityAction.LinkDemand> erfordert nur den unmittelbaren Aufrufer haben <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="843e5-170">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="843e5-171">Wenn der Code aus teilweise vertrauenswürdigem Code aufgerufen werden kann, verfügbar machen den Wert des <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> ohne Validierung ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="843e5-171">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="843e5-172">Für wichtige Einschränkungen zur Verwendung der <xref:System.Security.Permissions.SecurityAction.LinkDemand> Member finden Sie unter ["Demand" im Vergleich. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="843e5-172">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="843e5-173">Weitere Informationen zu Berechtigungen finden Sie unter <xref:System.Security.Permissions.SecurityPermission> und [Codezugriffsberechtigungen](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="843e5-173">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="843e5-174">Beachten Sie, dass diese Eigenschaft gibt immer 0 (null) zurück für intelligente Geräte.</span><span class="sxs-lookup"><span data-stu-id="843e5-174">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-175">Das folgende Beispiel zeigt, wie Sie verwenden, können die `LastDllError` Eigenschaft nach dem Aufrufen einer funktionsrückgabewerts in der Windows-API.</span><span class="sxs-lookup"><span data-stu-id="843e5-175">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="843e5-176">Die `PrintWindowCoordinates` Prozedur akzeptiert ein Handle zu einem Fenster und ruft die `GetWindowRect` Funktion.</span><span class="sxs-lookup"><span data-stu-id="843e5-176">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="843e5-177">`GetWindowRect` füllt die RECT-Datenstruktur mit den Seiten des Rechtecks, die das Fenster bilden.</span><span class="sxs-lookup"><span data-stu-id="843e5-177">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="843e5-178">Wenn Sie ein ungültiges Handle übergeben, ein Fehler auftritt, und die Fehlernummer steht über die `LastDllError` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="843e5-178">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="843e5-179">Gibt einen numerischen Wert zurück, der einen Fehler angibt, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-179">Returns or sets a numeric value specifying an error.</span>
          </span>
          <span data-ttu-id="843e5-180">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-180">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="843e5-181">Gibt einen numerischen Wert zurück, der einen Fehler angibt, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-181">Returns or sets a numeric value specifying an error.</span>
          </span>
          <span data-ttu-id="843e5-182">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-182">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-183">Alle von der `Raise` Argumente außer `Number` sind optional.</span><span class="sxs-lookup"><span data-stu-id="843e5-183">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="843e5-184">Wenn Sie optionale Argumente und die eigenschafteneinstellungen des weglassen der `Err` Objekt enthalten Werte, die nicht gelöscht wurden, diese Werte dienen als Werte für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="843e5-184">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="843e5-185">Da die `Err` Objekt gibt mehr Informationen als beim Generieren von Fehlern mit Assistenten für die `Error` -Anweisung `Raise` eignet sich zum Generieren von Fehlern beim Klassenmodule schreiben.</span><span class="sxs-lookup"><span data-stu-id="843e5-185">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="843e5-186">Z. B. mit der `Raise` -Methode, die Quelle, die den Fehler generiert hat kann angegeben werden der `Source` -Eigenschaft, die Onlinehilfe für den Fehler verwiesen werden kann und so weiter.</span><span class="sxs-lookup"><span data-stu-id="843e5-186">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="843e5-187">Legen Sie einen benutzerdefinierten Fehler von einem Objekt zurückgeben, `Err.Number` durch Hinzufügen der Zahl, die Sie als Fehlercode ausgewählt der `VbObjectError` konstant.</span><span class="sxs-lookup"><span data-stu-id="843e5-187">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="843e5-188">Beispielsweise verwenden Sie den folgenden Code, um die Anzahl 1051 als Fehlercode zurückzugeben:</span><span class="sxs-lookup"><span data-stu-id="843e5-188">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="843e5-189">Dieses Beispiel zeigt ein typisches Einsatzgebiet von der `Number` Eigenschaft in einer Routine für die Fehlerbehandlung.</span><span class="sxs-lookup"><span data-stu-id="843e5-189">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="843e5-190">Dieses Beispiel verwendet die `Err` des Objekts `Raise` Methode zum Generieren der ursprüngliche Fehler innerhalb einer Funktion in Visual Basic geschrieben.</span><span class="sxs-lookup"><span data-stu-id="843e5-190">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="843e5-191">Die aufrufende Funktion kann den Fehler abfangen und für den Benutzer melden.</span><span class="sxs-lookup"><span data-stu-id="843e5-191">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="843e5-192">Beachten Sie diese Prozedur `CallingProcedure` steht im Gegensatz zu den Informationstyp, der Sie ableiten können eine `Err` Objekt mit den Informationen, die Sie ableiten können ein `Exception` Objekt.</span><span class="sxs-lookup"><span data-stu-id="843e5-192">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="843e5-193">
            <paramref name="Number" /> ist größer als 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-193">
              <paramref name="Number" /> is greater than 65535.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="843e5-194">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-194">Required.</span>
          </span>
          <span data-ttu-id="843e5-195">
            <see langword="Long" />-Integer, der die Art des Fehlers identifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-195">
              <see langword="Long" /> integer that identifies the nature of the error.</span>
          </span>
          <span data-ttu-id="843e5-196">Visual Basic-Fehler liegen im Bereich 0 – 65535. Der Bereich 0 – 512 ist für Systemfehler reserviert. Der Bereich 513 – 65535 steht für benutzerdefinierte Fehler zur Verfügung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-196">Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</span>
          </span>
          <span data-ttu-id="843e5-197">Beim Festlegen der <see langword="Number" />-Eigenschaft auf den eigenen Code in einem Klassenmodul fügen Sie der <see langword="vbObjectError" />-Konstante Ihre Fehlercodenummer hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-197">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span>
          </span>
          <span data-ttu-id="843e5-198">Um z.B. die Fehlernummer 513 zu generieren, weisen Sie <c>vbObjectError + 513</c> der <see langword="Number" />-Eigenschaft zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-198">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span>
          </span>
        </param>
        <param name="Source">
          <span data-ttu-id="843e5-199">Dies ist optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-199">Optional.</span>
          </span>
          <span data-ttu-id="843e5-200">
            <see langword="String" />-Ausdruck, der das Objekt oder die Anwendung nennt, das bzw. die den Fehler generiert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-200">
              <see langword="String" /> expression naming the object or application that generated the error.</span>
          </span>
          <span data-ttu-id="843e5-201">Wenn Sie diese Eigenschaft für ein Objekt festlegen, verwenden Sie das Format <c>Projekt</c>.<c>Klasse</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-201">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span>
          </span>
          <span data-ttu-id="843e5-202">Wird <c>Quelle</c> nicht angegeben, wird die Prozess-ID des aktuellen Visual Basic-Projekts verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-202">If <c>Source</c> is not specified, the process ID of the current Visual Basic project is used.</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="843e5-203">Dies ist optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-203">Optional.</span>
          </span>
          <span data-ttu-id="843e5-204">
            <see langword="String" />-Ausdruck, der den Fehler beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-204">
              <see langword="String" /> expression describing the error.</span>
          </span>
          <span data-ttu-id="843e5-205">Ohne Angabe wird der Wert in der <see langword="Number" />-Eigenschaft überprüft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-205">If unspecified, the value in the <see langword="Number" /> property is examined.</span>
          </span>
          <span data-ttu-id="843e5-206">Wenn eine Zuordnung zu dem Code eines Visual Basic-Laufzeitfehlers möglich ist, wird die Zeichenfolge, die von der <see langword="Error" />-Funktion zurückgegeben wird, als <see langword="Description" />-Eigenschaft verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-206">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span>
          </span>
          <span data-ttu-id="843e5-207">Entspricht der <see langword="Number" />-Eigenschaft kein Visual Basic-Fehler, wird die Meldung "Anwendungs- oder objektdefinierter Fehler" verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-207">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="843e5-208">Dies ist optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-208">Optional.</span>
          </span>
          <span data-ttu-id="843e5-209">Der vollqualifizierte Pfad zu der Hilfedatei, in der Hilfe zu diesem Fehler zur Verfügung steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-209">The fully qualified path to the Help file in which help on this error can be found.</span>
          </span>
          <span data-ttu-id="843e5-210">Ohne Angabe verwendet Visual Basic den vollqualifizierten Laufwerks-, Pfad- und Dateinamen der Visual Basic-Hilfedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-210">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span>
          </span>
        </param>
        <param name="HelpContext">
          <span data-ttu-id="843e5-211">Dies ist optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-211">Optional.</span>
          </span>
          <span data-ttu-id="843e5-212">Die Kontext-ID, die ein Thema in <c>HelpFile</c> identifiziert, das Hilfe für den Fehler bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-212">The context ID identifying a topic within <c>HelpFile</c> that provides help for the error.</span>
          </span>
          <span data-ttu-id="843e5-213">Wenn keine Angabe erfolgt, wird die Kontext-ID in der Visual Basic-Hilfedatei für den Fehler verwendet, der der <see langword="Number" />-Eigenschaft entspricht, sofern vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-213">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="843e5-214">Generiert einen Laufzeitfehler und kann statt der <see langword="Error" />-Anweisung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-214">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-215">Alle von der `Raise` Argumente außer `Number` sind optional.</span><span class="sxs-lookup"><span data-stu-id="843e5-215">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="843e5-216">Wenn Sie optionale Argumente und die eigenschafteneinstellungen des weglassen der `Err` Objekt enthalten Werte, die nicht gelöscht wurden, diese Werte dienen als Werte für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="843e5-216">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="843e5-217">Da die `Err` Objekt gibt mehr Informationen als beim Generieren von Fehlern mit Assistenten für die `Error` -Anweisung `Raise` eignet sich zum Generieren von Fehlern beim Klassenmodule schreiben.</span><span class="sxs-lookup"><span data-stu-id="843e5-217">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="843e5-218">Z. B. mit der `Raise` -Methode, die Quelle, die den Fehler generiert hat kann angegeben werden der `Source` -Eigenschaft, die Onlinehilfe für den Fehler verwiesen werden kann und so weiter.</span><span class="sxs-lookup"><span data-stu-id="843e5-218">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-219">Dieses Beispiel verwendet die `Err` des Objekts `Raise` Methode zum Generieren der Fehler innerhalb einer Funktion in Visual Basic geschrieben.</span><span class="sxs-lookup"><span data-stu-id="843e5-219">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="843e5-220">Die aufrufende Funktion kann den Fehler abfangen und für den Benutzer ein Meldungsfeld melden.</span><span class="sxs-lookup"><span data-stu-id="843e5-220">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="843e5-221">Gibt einen <see langword="String" />-Ausdruck zurück, der den Namen des Objekts oder der Anwendung angibt, das bzw. die den Fehler ursprünglich generiert hat, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-221">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span>
          </span>
          <span data-ttu-id="843e5-222">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-222">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="843e5-223">Gibt einen <see langword="String" />-Ausdruck zurück, der den Namen des Objekts oder der Anwendung angibt, das bzw. die den Fehler ursprünglich generiert hat, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-223">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span>
          </span>
          <span data-ttu-id="843e5-224">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="843e5-224">Read/write.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843e5-225">Die `Source` Eigenschaft gibt eine `String` Ausdruck, der das Objekt darstellt, die den Fehler generiert; der Ausdruck ist in der Regel Klassenname des Objekts oder der Prozess-ID.</span><span class="sxs-lookup"><span data-stu-id="843e5-225">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="843e5-226">Verwenden der `Source` Eigenschaft, um Informationen bereitzustellen, wenn der Code einen Fehler in einem aufgerufenen Objekt verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="843e5-226">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="843e5-227">Angenommen, wenn Sie Zugriff auf Microsoft Excel und generiert eine `Division by zero` Fehler, Microsoft Excel wird `Err.Number` auf den Fehlercode für den Fehler und legt `Source` auf "Excel.Application".</span><span class="sxs-lookup"><span data-stu-id="843e5-227">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="843e5-228">Wenn die Anwendung einen Fehler aus dem Code generiert `Source` ist Ihre Anwendung programmgesteuerte-ID.</span><span class="sxs-lookup"><span data-stu-id="843e5-228">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="843e5-229">Innerhalb einer Klasse `Source` einen Namen in das Formular enthalten sollte *Projekt*.* Klasse*.</span><span class="sxs-lookup"><span data-stu-id="843e5-229">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="843e5-230">Tritt ein unerwarteter Fehler im Code, der `Source` Eigenschaft wird automatisch ausgefüllt.</span><span class="sxs-lookup"><span data-stu-id="843e5-230">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="843e5-231">Fehler in einem Modul `Source` enthält den Namen des Projekts.</span><span class="sxs-lookup"><span data-stu-id="843e5-231">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843e5-232">Dieses Beispiel veranschaulicht die Verwendung von der `Source` Eigenschaft in einer typischen Fehlerbehandlungs-Routine.</span><span class="sxs-lookup"><span data-stu-id="843e5-232">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="843e5-233">Wenn ein Fehler ausgelöst wird, von `Class1`, die Zeichenfolge `"Class1"` zugewiesen ist die `Source` Eigenschaft von der `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="843e5-233">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="843e5-234">Diese Zeichenfolge wird in eine informative Meldung, der angibt, die Quelle und die Nummer des Fehlers angezeigt.</span><span class="sxs-lookup"><span data-stu-id="843e5-234">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
  </Members>
</Type>