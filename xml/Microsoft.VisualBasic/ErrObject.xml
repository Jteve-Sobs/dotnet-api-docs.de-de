<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67203d2e3262083e36b5d156d1c448b2571fa2ce" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156375" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e31b2-101">Die <see langword="ErrObject" /> -Modul enthält Eigenschaften und Prozeduren, mit denen Sie identifizieren und Behandeln von Laufzeitfehlern, die mit der <see langword="Err" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-102">Die `ErrObject` -Modul unterstützt die `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="e31b2-103">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="e31b2-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-104">Dieses Beispiel verwendet die Eigenschaften der `Err` Objekt in ein Dialogfeld Fehlermeldung erstellt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="e31b2-105">Beachten Sie, was geschieht, wenn Sie die `Clear` Methode erste: Wenn Sie dann mit Visual Basic-Fehler generieren die `Raise` -Methode, die Visual Basic Default-Werte zu den Eigenschaften des der `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="e31b2-106">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e31b2-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="e31b2-107">Try...Catch...Finally-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e31b2-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="e31b2-108">Schlüsselwörter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e31b2-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="e31b2-109">Member der Visual Basic-Laufzeitbibliothek</span><span class="sxs-lookup"><span data-stu-id="e31b2-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e31b2-110">Löscht alle eigenschafteneinstellungen des der <see langword="Err" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-111">Verwenden Sie `Clear` explizit löschen der `Err` -Objekt nach Ausführung ein Fehler wie z. B. bei der Verwendung von verzögerten Fehlerbehandlung mit verarbeitet wurde, `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="e31b2-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="e31b2-112">Die `Clear` Methode wird automatisch aufgerufen, wenn keines der folgenden Anweisungen ausführt:</span><span class="sxs-lookup"><span data-stu-id="e31b2-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="e31b2-113">Jede Art von `Resume` Anweisung</span><span class="sxs-lookup"><span data-stu-id="e31b2-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="e31b2-114">`Exit Sub`, `Exit Function`oder `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="e31b2-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="e31b2-115">Alle `On Error` Anweisung</span><span class="sxs-lookup"><span data-stu-id="e31b2-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="e31b2-116">Alle `Try...Catch...Finally` Anweisung</span><span class="sxs-lookup"><span data-stu-id="e31b2-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="e31b2-117">Die `On Error Resume Next` Konstrukt möglicherweise besser, `On Error GoTo` bei der Behandlung von Fehlern, die beim Zugriff auf andere Objekte generiert.</span><span class="sxs-lookup"><span data-stu-id="e31b2-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="e31b2-118">Überprüfung `Err` nach jeder Interaktion mit einem Objekt der Code zugegriffen: Sie können Sie sicher, dass welches Objekt den Fehlercode in platziert werden `Err.Number`, und welches Objekt den Fehler ursprünglich generiert hat (das Objekt, das im angegebenen `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="e31b2-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-119">Dieses Beispiel verwendet die `Err` des Objekts `Clear` Methode, um die numerischen Eigenschaften von Zurücksetzen der `Err` Objekt, das die Eigenschaften auf Zeichenfolgen der Länge 0 (null) und 0 (null).</span><span class="sxs-lookup"><span data-stu-id="e31b2-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="e31b2-120">Ohne den Aufruf von `Clear`, der zweite Aufruf von `MsgBox` würde die gleiche Fehlermeldung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="e31b2-121">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e31b2-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e31b2-122">Zurück oder legt einen <see langword="String" /> Ausdruck, der eine beschreibende Zeichenfolge, die einem Fehler zugeordneten enthält.</span><span class="sxs-lookup"><span data-stu-id="e31b2-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="e31b2-123">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="e31b2-124">Zurück oder legt einen <see langword="String" /> Ausdruck, der eine beschreibende Zeichenfolge, die einem Fehler zugeordneten enthält.</span><span class="sxs-lookup"><span data-stu-id="e31b2-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="e31b2-125">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-126">Die `Description` eigenschafteneinstellung für die enthält eine kurze Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="e31b2-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="e31b2-127">Verwenden Sie diese Eigenschaft, um die Benutzer auf einen Fehler zu benachrichtigen, die Sie nicht oder nicht verarbeiten möchten.</span><span class="sxs-lookup"><span data-stu-id="e31b2-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="e31b2-128">Zur Erstellung einen benutzerdefinierten Fehler weisen Sie eine kurze Beschreibung des Fehlers zu den `Description` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e31b2-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="e31b2-129">Wenn die `Description` Eigenschaft wurde nicht ausgefüllt, und der Wert des der <xref:Microsoft.VisualBasic.ErrObject.Number%2A> Eigenschaft entspricht einer Visual Basic-Laufzeitfehler, und klicken Sie dann die Zeichenfolge zurückgegeben wird, indem die <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> Funktion festgelegt ist, der `Description` Eigenschaft, wenn der Fehler generiert wird.</span><span class="sxs-lookup"><span data-stu-id="e31b2-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-130">In diesem Beispiel wird eine benutzerdefinierte Nachricht an die `Description` Eigenschaft der `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e31b2-131">Ruft eine ganze Zahl ab, die die Zeilennummer der letzten ausgeführten Anweisung angibt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-131">Gets an integer indicating the line number of the last executed statement.</span></span></summary>
        <value><span data-ttu-id="e31b2-132">Die Zeilennummer der letzten ausgeführten Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e31b2-132">The line number of the last executed statement.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-133">Wenn Sie Visual Basic keine Zeilennummern findet, wird 0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e31b2-133">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-134">Dieses Beispiel verwendet die `Erl` Eigenschaft, die die Nummer der Zeile angibt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-134">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e31b2-135">Gibt die Ausnahme zurück, der den aufgetretenen Fehler darstellt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-135">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="e31b2-136">Die Ausnahme, die den aufgetretenen Fehler darstellt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-136">The exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-137">Die `GetException` -Funktion steht nur über die `Err` object-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e31b2-137">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="e31b2-138">Es funktioniert mit der `Exception` Eigenschaft der `Err` Objekt, um den Fehler anzuzeigen, der aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="e31b2-138">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-139">Der folgende Code zeigt die Meldung, die zugewiesen werden, um die Ausnahme in der `Err` Objekt:</span><span class="sxs-lookup"><span data-stu-id="e31b2-139">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e31b2-140">Gibt zurück oder legt diesen fest ein <see langword="Integer" /> , die die Kontext-ID für ein Thema in einer Hilfedatei enthält.</span><span class="sxs-lookup"><span data-stu-id="e31b2-140">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="e31b2-141">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-141">Read/write.</span></span></summary>
        <value><span data-ttu-id="e31b2-142">Gibt zurück oder legt diesen fest ein <see langword="Integer" /> , die die Kontext-ID für ein Thema in einer Hilfedatei enthält.</span><span class="sxs-lookup"><span data-stu-id="e31b2-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="e31b2-143">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-143">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-144">Die `HelpContext` Eigenschaft wird verwendet, um kontextbezogene Hilfe für eine Anwendung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-144">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="e31b2-145">Wenn in eine Hilfedatei angegeben ist `HelpFile`, `HelpContext` Eigenschaft wird verwendet, um automatisch die identifizierte Datei angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-145">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="e31b2-146">Wenn beide die `HelpFile` und `HelpContext` Eigenschaften sind leer, der Wert des der <xref:Microsoft.VisualBasic.ErrObject.Number%2A> Eigenschaft aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="e31b2-146">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="e31b2-147">Wenn der Wert des der `Number` Eigenschaft entspricht der Wert eines Visual Basic-Laufzeitfehler, dann wird die Visual Basic-Hilfe-Kontext-ID für den Fehler verwendet.</span><span class="sxs-lookup"><span data-stu-id="e31b2-147">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="e31b2-148">Wenn der Wert des der `Number` Eigenschaft entspricht keiner Visual Basic-Fehler wird angezeigt, das Inhaltsverzeichnis der Hilfe zu Visual Basic-Datei.</span><span class="sxs-lookup"><span data-stu-id="e31b2-148">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e31b2-149">Schreiben Sie Routinen in der Anwendung für die typischen Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="e31b2-149">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="e31b2-150">Beim Programmieren mit einem Objekt können Sie die Hilfedatei des Objekts, um zur Verbesserung der Qualität der Fehlerbehandlung oder eine hilfreiche Meldung für den Benutzer anzuzeigen, wenn der Fehler nicht wiederhergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e31b2-150">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-151">Dieses Beispiel verwendet die `HelpContext` Eigenschaft der `Err` Objekt, zeigen das Visual Basic-Hilfethema für das `Overflow` Fehler.</span><span class="sxs-lookup"><span data-stu-id="e31b2-151">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e31b2-152">Zurück oder legt einen <see langword="String" /> Ausdruck, der den vollqualifizierten Pfad zu einer Hilfedatei enthält.</span><span class="sxs-lookup"><span data-stu-id="e31b2-152">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="e31b2-153">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-153">Read/write.</span></span></summary>
        <value><span data-ttu-id="e31b2-154">Zurück oder legt einen <see langword="String" /> Ausdruck, der den vollqualifizierten Pfad zu einer Hilfedatei enthält.</span><span class="sxs-lookup"><span data-stu-id="e31b2-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="e31b2-155">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-155">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-156">Wenn eine Hilfedatei, wird angegeben wird die `HelpFile` -Eigenschaft wird automatisch aufgerufen, wenn der Benutzer die Hilfe-Taste (oder die F1-Taste drückt) im Dialogfeld der Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="e31b2-156">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="e31b2-157">Wenn die `HelpContext` Eigenschaft enthält einen gültigen Kontext-ID für die angegebene Datei, die diesem Thema wird automatisch angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-157">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="e31b2-158">Wenn kein `HelpFile` angegeben ist, wird die Visual Basic-Hilfedatei angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e31b2-158">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e31b2-159">Schreiben Sie Routinen in der Anwendung für die typischen Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="e31b2-159">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="e31b2-160">Beim Programmieren mit einem Objekt können Sie die Hilfedatei des Objekts, um zur Verbesserung der Qualität der Fehlerbehandlung oder eine hilfreiche Meldung für den Benutzer anzuzeigen, wenn der Fehler nicht wiederhergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e31b2-160">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-161">Dieses Beispiel verwendet die `HelpFile` Eigenschaft der `Err` Objekt, das Hilfesystem gestartet.</span><span class="sxs-lookup"><span data-stu-id="e31b2-161">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="e31b2-162">In der Standardeinstellung die `HelpFile` Eigenschaft enthält den Namen der Visual Basic-Hilfedatei.</span><span class="sxs-lookup"><span data-stu-id="e31b2-162">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e31b2-163">Ruft einen von einem Aufruf einer Dynamic Link Library (DLL) erzeugten Systemfehlercode ab.</span><span class="sxs-lookup"><span data-stu-id="e31b2-163">Gets a system error code produced by a call to a dynamic-link library (DLL).</span></span></summary>
        <value><span data-ttu-id="e31b2-164">Eine durch einen Aufruf einer Dynamic Link Library (DLL) erzeugten Systemfehlercode.</span><span class="sxs-lookup"><span data-stu-id="e31b2-164">A system error code produced by a call to a dynamic-link library (DLL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-165">Die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Eigenschaft gilt nur für DLL-Aufrufe aus Visual Basic-Code.</span><span class="sxs-lookup"><span data-stu-id="e31b2-165">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="e31b2-166">Wenn solch ein Aufruf erfolgt, gibt die aufgerufene Funktion in der Regel einen Code, der angibt, Erfolg oder Fehler, und die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Eigenschaft gefüllt ist.</span><span class="sxs-lookup"><span data-stu-id="e31b2-166">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="e31b2-167">Überprüfen Sie die Dokumentation für den DLL Funktionen, um die Rückgabe von Werten zu ermitteln, die auf Erfolg oder Fehler hinweisen.</span><span class="sxs-lookup"><span data-stu-id="e31b2-167">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="e31b2-168">Wenn der Fehlercode zurückgegeben wird, wird die Visual Basic-Anwendung muss sofort überprüfen die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e31b2-168">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="e31b2-169">Wird keine Ausnahme ausgelöst, wenn der <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="e31b2-169">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e31b2-170">Die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Eigenschaft ist geschützt, indem <xref:System.Security.Permissions.SecurityAction.LinkDemand>, was dabei hilft zu verhindern, dass er vor Zugriffen aus nicht vertrauenswürdigem Code.</span><span class="sxs-lookup"><span data-stu-id="e31b2-170">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="e31b2-171">Allerdings <xref:System.Security.Permissions.SecurityAction.LinkDemand> erfordert nur den unmittelbaren Aufrufer haben <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="e31b2-171">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="e31b2-172">Wenn Ihr Code aus teilweise vertrauenswürdigem Code aufgerufen werden kann, verfügbar machen den Wert der <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> ohne Überprüfung ein Sicherheitsrisiko dar.</span><span class="sxs-lookup"><span data-stu-id="e31b2-172">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="e31b2-173">Für wichtige Einschränkungen zur Verwendung der <xref:System.Security.Permissions.SecurityAction.LinkDemand> Member finden Sie unter [erfordern Visual Studio. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="e31b2-173">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="e31b2-174">Weitere Informationen zu Berechtigungen finden Sie unter <xref:System.Security.Permissions.SecurityPermission> und [Codezugriffsberechtigungen](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="e31b2-174">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="e31b2-175">Beachten Sie, dass diese Eigenschaft gibt immer 0 (null) zurück für intelligente Geräte.</span><span class="sxs-lookup"><span data-stu-id="e31b2-175">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-176">Das folgende Beispiel zeigt Informationen zur Verwendung der `LastDllError` Eigenschaft nach dem Aufrufen einer Funktion in der Windows-API.</span><span class="sxs-lookup"><span data-stu-id="e31b2-176">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="e31b2-177">Die `PrintWindowCoordinates` Prozedur akzeptiert ein Handle zu einem Fenster und ruft die `GetWindowRect` Funktion.</span><span class="sxs-lookup"><span data-stu-id="e31b2-177">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="e31b2-178">`GetWindowRect` füllt die RECT-Datenstruktur mit den Längen der Seiten des Rechtecks, die das Fenster bilden.</span><span class="sxs-lookup"><span data-stu-id="e31b2-178">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="e31b2-179">Wenn Sie ein ungültiges Handle übergeben, wird ein Fehler auftritt, und die Fehlernummer steht über den `LastDllError` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e31b2-179">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e31b2-180">Gibt, oder legt einen numerischen Wert, der einen Fehler angibt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-180">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="e31b2-181">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-181">Read/write.</span></span></summary>
        <value><span data-ttu-id="e31b2-182">Gibt, oder legt einen numerischen Wert, der einen Fehler angibt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-182">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="e31b2-183">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-183">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-184">Alle der `Raise` Argumente außer `Number` sind optional.</span><span class="sxs-lookup"><span data-stu-id="e31b2-184">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="e31b2-185">Wenn Sie optionale Argumente und die eigenschafteneinstellungen von weglassen der `Err` Objekt enthalten Werte, die nicht gelöscht wurden, und diese Werte dienen als Werte für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="e31b2-185">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="e31b2-186">Da die `Err` Objekt bietet umfangreichere Informationen als beim Generieren von Fehlern mit Assistenten für die `Error` -Anweisung `Raise` eignet sich zum Generieren von Fehlern beim Schreiben von Class-Module.</span><span class="sxs-lookup"><span data-stu-id="e31b2-186">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="e31b2-187">Z. B. mit der `Raise` -Methode, die Quelle, die den Fehler generiert hat kann angegeben werden der `Source` -Eigenschaft, die Onlinehilfe für den Fehler verwiesen werden kann und so weiter.</span><span class="sxs-lookup"><span data-stu-id="e31b2-187">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="e31b2-188">Wenn Sie einen benutzerdefinierten Fehler von einem Objekt zurückzugeben, legen `Err.Number` durch Addieren der, den Sie als Fehlercode ausgewählt der `VbObjectError` Konstanten.</span><span class="sxs-lookup"><span data-stu-id="e31b2-188">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="e31b2-189">Beispielsweise verwenden Sie den folgenden Code, um die Anzahl von 1051 als Fehlercode zurückzugeben:</span><span class="sxs-lookup"><span data-stu-id="e31b2-189">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-190">Dieses Beispiel veranschaulicht eine typische Verwendung des der `Number` -Eigenschaft in einer Routine für die Fehlerbehandlung.</span><span class="sxs-lookup"><span data-stu-id="e31b2-190">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="e31b2-191">Dieses Beispiel verwendet die `Err` des Objekts `Raise` Methode, um eine ursprüngliche Fehler innerhalb einer Funktion, die in Visual Basic geschriebene zu generieren.</span><span class="sxs-lookup"><span data-stu-id="e31b2-191">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="e31b2-192">Die aufrufende Funktion kann den Fehler abzufangen, und wenden Sie sich an den Benutzer.</span><span class="sxs-lookup"><span data-stu-id="e31b2-192">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="e31b2-193">Beachten Sie, dass die Prozedur `CallingProcedure` steht im Gegensatz zu den Typ der Informationen, die Sie ableiten können eine `Err` Objekt mit den Informationen, die Sie ableiten können eine `Exception` Objekt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-193">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e31b2-194"><paramref name="Number" /> ist größer als 65535.</span><span class="sxs-lookup"><span data-stu-id="e31b2-194"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="e31b2-195">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e31b2-195">Required.</span></span> <span data-ttu-id="e31b2-196"><see langword="Long" /> ganze Zahl, die die Art des Fehlers identifiziert.</span><span class="sxs-lookup"><span data-stu-id="e31b2-196"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="e31b2-197">Visual Basic-Fehler liegen im Bereich 0–65535. Der Bereich 0–512 ist für Systemfehler reserviert. Der Bereich 513–65535 steht für benutzerdefinierte Fehler zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="e31b2-197">Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.</span></span> <span data-ttu-id="e31b2-198">Beim Festlegen der <see langword="Number" /> -Eigenschaft auf den eigenen Code in einem Klassenmodul, fügen Sie Ihre Fehlercodenummer hinzu der <see langword="vbObjectError" /> Konstanten.</span><span class="sxs-lookup"><span data-stu-id="e31b2-198">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="e31b2-199">Um z.B. die Fehlernummer 513 zu generieren, weisen Sie <c>vbObjectError + 513</c> der <see langword="Number" />-Eigenschaft zu.</span><span class="sxs-lookup"><span data-stu-id="e31b2-199">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="e31b2-200">Dies ist optional.</span><span class="sxs-lookup"><span data-stu-id="e31b2-200">Optional.</span></span> <span data-ttu-id="e31b2-201"><see langword="String" /> Ausdruck, benennen das Objekt oder eine Anwendung, die den Fehler generiert hat.</span><span class="sxs-lookup"><span data-stu-id="e31b2-201"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="e31b2-202">Wenn Sie diese Eigenschaft für ein Objekt festlegen, verwenden Sie das Format <c>Projekt</c>.<c>Klasse</c>.</span><span class="sxs-lookup"><span data-stu-id="e31b2-202">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="e31b2-203">Wenn <paramref name="Source" /> nicht angegeben ist, wird die Prozess-ID der aktuellen Visual Basic-Projekt verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e31b2-203">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="e31b2-204">Dies ist optional.</span><span class="sxs-lookup"><span data-stu-id="e31b2-204">Optional.</span></span> <span data-ttu-id="e31b2-205"><see langword="String" /> der Ausdruck, der den Fehler beschreibt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-205"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="e31b2-206">Falls nicht angegeben, handelt es sich bei den Wert in der <see langword="Number" /> -Eigenschaft überprüft.</span><span class="sxs-lookup"><span data-stu-id="e31b2-206">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="e31b2-207">Wenn sie eine Visual Basic-Laufzeitfehler zugeordnet werden kann code verwenden, wird die Zeichenfolge, die von zurückgegeben werden, die <see langword="Error" /> Funktion dient als die <see langword="Description" /> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e31b2-207">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="e31b2-208">Es ist kein Visual Basic-Fehler, die für die <see langword="Number" /> Eigenschaft wird die Meldung "Anwendungs- oder objektdefinierter Fehler" verwendet.</span><span class="sxs-lookup"><span data-stu-id="e31b2-208">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="e31b2-209">Dies ist optional.</span><span class="sxs-lookup"><span data-stu-id="e31b2-209">Optional.</span></span> <span data-ttu-id="e31b2-210">Der vollqualifizierte Pfad der Hilfedatei, die in der Hilfe zu diesem Fehler gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="e31b2-210">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="e31b2-211">Falls nicht angegeben, verwendet Visual Basic den vollqualifizierten Laufwerks-, Pfad und Dateinamen der Visual Basic-Hilfedatei an.</span><span class="sxs-lookup"><span data-stu-id="e31b2-211">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="e31b2-212">Dies ist optional.</span><span class="sxs-lookup"><span data-stu-id="e31b2-212">Optional.</span></span> <span data-ttu-id="e31b2-213">Die Kontext-ID, die ein Thema in identifizieren <paramref name="HelpFile" /> , das Hilfe für den Fehler bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-213">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="e31b2-214">Wenn nicht angegeben ist, werden die Visual Basic-Hilfedatei Kontext-ID für den Fehler, entspricht die <see langword="Number" /> Eigenschaft wird verwendet, wenn es vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e31b2-214">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="e31b2-215">Wird ein Laufzeitfehler generiert. kann verwendet werden, statt die <see langword="Error" /> Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e31b2-215">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-216">Alle der `Raise` Argumente außer `Number` sind optional.</span><span class="sxs-lookup"><span data-stu-id="e31b2-216">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="e31b2-217">Wenn Sie optionale Argumente und die eigenschafteneinstellungen von weglassen der `Err` Objekt enthalten Werte, die nicht gelöscht wurden, und diese Werte dienen als Werte für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="e31b2-217">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="e31b2-218">Da die `Err` Objekt bietet umfangreichere Informationen als beim Generieren von Fehlern mit Assistenten für die `Error` -Anweisung `Raise` eignet sich zum Generieren von Fehlern beim Schreiben von Class-Module.</span><span class="sxs-lookup"><span data-stu-id="e31b2-218">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="e31b2-219">Z. B. mit der `Raise` -Methode, die Quelle, die den Fehler generiert hat kann angegeben werden der `Source` -Eigenschaft, die Onlinehilfe für den Fehler verwiesen werden kann und so weiter.</span><span class="sxs-lookup"><span data-stu-id="e31b2-219">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-220">Dieses Beispiel verwendet die `Err` des Objekts `Raise` Methode, um einen Fehler in einer Funktion, die in Visual Basic geschriebene zu generieren.</span><span class="sxs-lookup"><span data-stu-id="e31b2-220">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="e31b2-221">Die aufrufende Funktion kann den Fehler abzufangen, und wenden Sie sich an den Benutzer ein Meldungsfeld.</span><span class="sxs-lookup"><span data-stu-id="e31b2-221">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="e31b2-222">Error-Anweisung</span><span class="sxs-lookup"><span data-stu-id="e31b2-222">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="e31b2-223">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e31b2-223">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e31b2-224">Zurück oder legt einen <see langword="String" /> -Ausdruck, der den Namen des Objekts oder der Anwendung, die den Fehler ursprünglich generiert hat.</span><span class="sxs-lookup"><span data-stu-id="e31b2-224">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="e31b2-225">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-225">Read/write.</span></span></summary>
        <value><span data-ttu-id="e31b2-226">Zurück oder legt einen <see langword="String" /> -Ausdruck, der den Namen des Objekts oder der Anwendung, die den Fehler ursprünglich generiert hat.</span><span class="sxs-lookup"><span data-stu-id="e31b2-226">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="e31b2-227">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="e31b2-227">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e31b2-228">Die `Source` Eigenschaft gibt an, eine `String` Ausdruck, der das Objekt darstellt, die den Fehler generiert; der Ausdruck ist in der Regel Klassenname des Objekts oder die Prozess-ID.</span><span class="sxs-lookup"><span data-stu-id="e31b2-228">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="e31b2-229">Verwenden der `Source` Eigenschaft, um Informationen bereitzustellen, wenn Ihr Code einen Fehler in einem aufgerufenen Objekt verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="e31b2-229">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="e31b2-230">Angenommen, Sie Microsoft Excel zugreifen und generiert eine `Division by zero` Fehler, Microsoft Excel legt `Err.Number` auf den Fehlercode für diesen Fehler fest und `Source` auf "Excel.Application".</span><span class="sxs-lookup"><span data-stu-id="e31b2-230">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="e31b2-231">Wenn die Anwendung aus dem Code, einen Fehler generiert `Source` ist Programm-ID Ihrer Anwendung.</span><span class="sxs-lookup"><span data-stu-id="e31b2-231">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="e31b2-232">Innerhalb einer Klasse `Source` muss einen Namen in das Formular enthalten *Projekt*. *Klasse*.</span><span class="sxs-lookup"><span data-stu-id="e31b2-232">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="e31b2-233">Tritt ein unerwarteter Fehler in Ihrem Code die `Source` Eigenschaft wird automatisch ausgefüllt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-233">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="e31b2-234">Fehler in einem Modul `Source` enthält den Namen des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e31b2-234">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e31b2-235">Dieses Beispiel veranschaulicht die Verwendung von der `Source` -Eigenschaft in einer typischen Fehlerbehandlungsroutine.</span><span class="sxs-lookup"><span data-stu-id="e31b2-235">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="e31b2-236">Wenn ein Fehler ausgelöst wird, von `Class1`, die Zeichenfolge `"Class1"` zugewiesen wird die `Source` Eigenschaft der `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-236">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="e31b2-237">Diese Zeichenfolge wird dann in eine informative Meldung, der angibt, die Quelle und die Nummer des Fehlers angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e31b2-237">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="e31b2-238">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e31b2-238">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>