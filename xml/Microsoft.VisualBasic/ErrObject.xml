<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adcc76493b18fa1521ae531179c34f83cf9b14fd" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82337328" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ErrObject extends System.Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
    <AssemblyVersion>10.0.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="19003-101">Das <see langword="ErrObject" />-Modul enthält Eigenschaften und Prozeduren, mit denen Laufzeitfehler unter Verwendung des <see langword="Err" />-Objekts identifiziert und behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="19003-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-102">Das `ErrObject`-Modul unterstützt das `Err`-Objekt.</span><span class="sxs-lookup"><span data-stu-id="19003-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="19003-103">Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="19003-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-104">In diesem Beispiel werden die Eigenschaften des `Err`-Objekts unter Erstellen eines Fehlermeldungs Dialogfelds verwendet.</span><span class="sxs-lookup"><span data-stu-id="19003-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="19003-105">Beachten Sie, was geschieht, wenn Sie zuerst die `Clear`-Methode verwenden: Wenn Sie dann mit der `Raise`-Methode einen Visual Basic Fehler generieren, werden Visual Basic Standardwerte zu den Eigenschaften des `Err` Objekts.</span><span class="sxs-lookup"><span data-stu-id="19003-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="19003-106">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="19003-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="19003-107">Try...Catch...Finally-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="19003-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="19003-108">Schlüsselwörter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="19003-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="19003-109">Visual Basic von Lauf Zeit Bibliotheks Membern</span><span class="sxs-lookup"><span data-stu-id="19003-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19003-110">Löscht alle Eigenschafteneinstellungen des <see langword="Err" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="19003-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-111">Verwenden Sie `Clear`, um das `Err` Objekt explizit zu löschen, nachdem ein Fehler behandelt wurde, z. b. Wenn Sie die verzögerte Fehlerbehandlung mit `On Error Resume Next`verwenden.</span><span class="sxs-lookup"><span data-stu-id="19003-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="19003-112">Die `Clear`-Methode wird automatisch aufgerufen, wenn eine der folgenden-Anweisungen ausgeführt wird:</span><span class="sxs-lookup"><span data-stu-id="19003-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="19003-113">Beliebiger Typ von `Resume` Anweisung</span><span class="sxs-lookup"><span data-stu-id="19003-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="19003-114">`Exit Sub`, `Exit Function` oder `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="19003-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="19003-115">Any `On Error`-Anweisung</span><span class="sxs-lookup"><span data-stu-id="19003-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="19003-116">Any `Try...Catch...Finally`-Anweisung</span><span class="sxs-lookup"><span data-stu-id="19003-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="19003-117">Beim Behandeln von Fehlern, die während des Zugriffs auf andere Objekte generiert werden, ist das `On Error Resume Next` Konstrukt möglicherweise `On Error GoTo` vorzuziehen.</span><span class="sxs-lookup"><span data-stu-id="19003-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="19003-118">Wenn `Err` nach jeder Interaktion mit einem Objekt überprüft wird, ob der Code auf das Objekt zugreift, das durch den Code aufgerufen wurde: Sie können sicher sein, welches Objekt den Fehlercode in `Err.Number`abgelegt hat, und welches Objekt den Fehler ursprünglich generiert hat (das in `Err.Source`angegebene Objekt).</span><span class="sxs-lookup"><span data-stu-id="19003-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-119">In diesem Beispiel wird die `Clear`-Methode des `Err` Objekts verwendet, um die numerischen Eigenschaften des `Err` Objekts auf 0 (null) und die zugehörigen Zeichen folgen Eigenschaften auf Zeichen folgen der Länge 0 (null)</span><span class="sxs-lookup"><span data-stu-id="19003-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="19003-120">Ohne den Aufrufen von `Clear`würde der zweite `MsgBox` die gleiche Fehlermeldung anzeigen.</span><span class="sxs-lookup"><span data-stu-id="19003-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="19003-121">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="19003-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19003-122">Gibt einen <see langword="String" />-Ausdruck zurück, der eine einem Fehler zugeordnete beschreibende Zeichenfolge enthält, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="19003-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="19003-123">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="19003-124">Gibt einen <see langword="String" />-Ausdruck zurück, der eine einem Fehler zugeordnete beschreibende Zeichenfolge enthält, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="19003-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="19003-125">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-126">Die `Description`-Eigenschafts Einstellung besteht aus einer kurzen Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="19003-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="19003-127">Verwenden Sie diese Eigenschaft, um den Benutzer auf einen Fehler aufmerksam zu machen, den Sie nicht oder nicht verarbeiten möchten.</span><span class="sxs-lookup"><span data-stu-id="19003-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="19003-128">Wenn Sie einen benutzerdefinierten Fehler erzeugen, weisen Sie der Eigenschaft `Description` eine kurze Beschreibung Ihres Fehlers zu.</span><span class="sxs-lookup"><span data-stu-id="19003-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="19003-129">Wenn die `Description`-Eigenschaft nicht ausgefüllt ist und der Wert der <xref:Microsoft.VisualBasic.ErrObject.Number%2A>-Eigenschaft einem Visual Basic Laufzeitfehler entspricht, wird die von der <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> Funktion zurückgegebene Zeichenfolge in der `Description`-Eigenschaft festgelegt, wenn der Fehler generiert wird.</span><span class="sxs-lookup"><span data-stu-id="19003-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-130">In diesem Beispiel wird der `Description`-Eigenschaft des `Err`-Objekts eine benutzerdefinierte Meldung zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="19003-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19003-131">Ruft eine ganze Zahl ab, die die Zeilennummer der letzten ausgeführten Anweisung angibt.</span><span class="sxs-lookup"><span data-stu-id="19003-131">Gets an integer indicating the line number of the last executed statement.</span></span></summary>
        <value><span data-ttu-id="19003-132">Die Zeilennummer der letzten ausgeführten Anweisung.</span><span class="sxs-lookup"><span data-stu-id="19003-132">The line number of the last executed statement.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-133">Wenn Visual Basic keine Zeilennummern trifft, wird 0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="19003-133">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-134">In diesem Beispiel wird die `Erl`-Eigenschaft verwendet, um die Zeilennummer anzugeben.</span><span class="sxs-lookup"><span data-stu-id="19003-134">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetException() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19003-135">Gibt die Ausnahme zurück, die den aufgetretenen Fehler darstellt.</span><span class="sxs-lookup"><span data-stu-id="19003-135">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="19003-136">Die Ausnahme, die den aufgetretenen Fehler darstellt.</span><span class="sxs-lookup"><span data-stu-id="19003-136">The exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-137">Die `GetException`-Funktion ist nur in der `Err`-Objektklasse verfügbar.</span><span class="sxs-lookup"><span data-stu-id="19003-137">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="19003-138">Es funktioniert mit der `Exception`-Eigenschaft des `Err`-Objekts, um den aufgetretenen Fehler anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="19003-138">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-139">Der folgende Code zeigt die Meldung an, die der Ausnahme im `Err`-Objekt zugewiesen wurde:</span><span class="sxs-lookup"><span data-stu-id="19003-139">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19003-140">Gibt eine <see langword="Integer" /> zurück, die die Kontext-ID für ein Thema in einer Hilfedatei enthält, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="19003-140">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="19003-141">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-141">Read/write.</span></span></summary>
        <value><span data-ttu-id="19003-142">Gibt eine <see langword="Integer" /> zurück, die die Kontext-ID für ein Thema in einer Hilfedatei enthält, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="19003-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="19003-143">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-143">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-144">Die `HelpContext`-Eigenschaft wird verwendet, um kontextbezogene Hilfe für eine Anwendung anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="19003-144">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="19003-145">Wenn eine Hilfedatei in `HelpFile`angegeben wird, wird die Eigenschaft `HelpContext` verwendet, um automatisch die identifizierte Hilfedatei anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="19003-145">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="19003-146">Wenn die Eigenschaften `HelpFile` und `HelpContext` leer sind, wird der Wert der Eigenschaft <xref:Microsoft.VisualBasic.ErrObject.Number%2A> aktiviert.</span><span class="sxs-lookup"><span data-stu-id="19003-146">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="19003-147">Wenn der Wert der `Number`-Eigenschaft einem Visual Basic Lauf Zeit Fehlerwert entspricht, wird die Visual Basic Hilfe Kontext-ID für den Fehler verwendet.</span><span class="sxs-lookup"><span data-stu-id="19003-147">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="19003-148">Wenn der Wert der `Number`-Eigenschaft keinem Visual Basic Fehler entspricht, wird der Inhalts Bildschirm für die Visual Basic Hilfedatei angezeigt.</span><span class="sxs-lookup"><span data-stu-id="19003-148">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19003-149">Sie sollten Routinen in Ihre Anwendung schreiben, um typische Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="19003-149">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="19003-150">Wenn Sie mit einem-Objekt programmieren, können Sie die-Hilfedatei des Objekts verwenden, um die Qualität ihrer Fehlerbehandlung zu verbessern, oder Sie können dem Benutzer eine aussagekräftige Meldung anzeigen, wenn der Fehler nicht wieder hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="19003-150">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-151">In diesem Beispiel wird die `HelpContext`-Eigenschaft des `Err`-Objekts verwendet, um das Visual Basic Hilfethema für den `Overflow` Fehler anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="19003-151">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19003-152">Gibt einen <see langword="String" />-Ausdruck zurück, der den vollqualifizierten Pfad zu einer Hilfedatei enthält, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="19003-152">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="19003-153">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-153">Read/write.</span></span></summary>
        <value><span data-ttu-id="19003-154">Gibt einen <see langword="String" />-Ausdruck zurück, der den vollqualifizierten Pfad zu einer Hilfedatei enthält, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="19003-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="19003-155">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-155">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-156">Wenn eine Hilfedatei durch die `HelpFile`-Eigenschaft angegeben wird, wird Sie automatisch aufgerufen, wenn der Benutzer die Hilfe Taste (oder die F1-Taste) im Dialogfeld Fehlermeldung drückt.</span><span class="sxs-lookup"><span data-stu-id="19003-156">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="19003-157">Wenn die `HelpContext`-Eigenschaft eine gültige Kontext-ID für die angegebene Datei enthält, wird dieses Thema automatisch angezeigt.</span><span class="sxs-lookup"><span data-stu-id="19003-157">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="19003-158">Wenn keine `HelpFile` angegeben ist, wird die Visual Basic Hilfedatei angezeigt.</span><span class="sxs-lookup"><span data-stu-id="19003-158">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19003-159">Sie sollten Routinen in Ihre Anwendung schreiben, um typische Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="19003-159">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="19003-160">Wenn Sie mit einem-Objekt programmieren, können Sie die-Hilfedatei des Objekts verwenden, um die Qualität ihrer Fehlerbehandlung zu verbessern, oder Sie können dem Benutzer eine aussagekräftige Meldung anzeigen, wenn der Fehler nicht wieder hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="19003-160">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-161">In diesem Beispiel wird die `HelpFile`-Eigenschaft des `Err`-Objekts verwendet, um das Hilfesystem zu starten.</span><span class="sxs-lookup"><span data-stu-id="19003-161">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="19003-162">Standardmäßig enthält die `HelpFile`-Eigenschaft den Namen der Visual Basic Hilfedatei.</span><span class="sxs-lookup"><span data-stu-id="19003-162">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19003-163">Ruft einen von einem Aufruf einer Dynamic Link Library (DLL) erzeugten Systemfehlercode ab.</span><span class="sxs-lookup"><span data-stu-id="19003-163">Gets a system error code produced by a call to a dynamic-link library (DLL).</span></span></summary>
        <value><span data-ttu-id="19003-164">Ein Systemfehler Code, der durch einen aufzurufenden Befehl einer Dynamic Link Library (dll) erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="19003-164">A system error code produced by a call to a dynamic-link library (DLL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-165">Die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>-Eigenschaft gilt nur für DLL-Aufrufe, die von Visual Basic Code ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="19003-165">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="19003-166">Wenn ein solcher Aufruf erfolgt, gibt die aufgerufene Funktion in der Regel einen Code zurück, der einen Erfolg oder einen Fehler angibt, und die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>-Eigenschaft wird ausgefüllt.</span><span class="sxs-lookup"><span data-stu-id="19003-166">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="19003-167">Überprüfen Sie die Dokumentation zu den Funktionen der dll, um die Rückgabewerte zu ermitteln, die auf Erfolg oder Fehler hinweisen.</span><span class="sxs-lookup"><span data-stu-id="19003-167">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="19003-168">Wenn der Fehlercode zurückgegeben wird, sollte die Visual Basic Anwendung die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>-Eigenschaft sofort überprüfen.</span><span class="sxs-lookup"><span data-stu-id="19003-168">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="19003-169">Es wird keine Ausnahme ausgelöst, wenn die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>-Eigenschaft festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="19003-169">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19003-170">Die <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>-Eigenschaft wird durch <xref:System.Security.Permissions.SecurityAction.LinkDemand>geschützt, wodurch verhindert wird, dass von nicht vertrauenswürdigem Code auf Sie zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="19003-170">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="19003-171">Allerdings erfordert <xref:System.Security.Permissions.SecurityAction.LinkDemand> nur den unmittelbaren Aufrufer, um über <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> Berechtigung zu verfügen.</span><span class="sxs-lookup"><span data-stu-id="19003-171">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="19003-172">Wenn Ihr Code von teilweise vertrauenswürdigem Code aufgerufen werden kann, ist das verfügbar machen des Werts <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> ohne Validierung ein Sicherheitsrisiko.</span><span class="sxs-lookup"><span data-stu-id="19003-172">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="19003-173">Wichtige Einschränkungen bei der Verwendung des <xref:System.Security.Permissions.SecurityAction.LinkDemand>-Members finden Sie unter [Demand und LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="19003-173">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="19003-174">Weitere Informationen zu Berechtigungen finden Sie unter <xref:System.Security.Permissions.SecurityPermission>-und [Code Zugriffsberechtigungen](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="19003-174">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="19003-175">Hinweis für intelligente Geräte gibt diese Eigenschaft immer 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="19003-175">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-176">Im folgenden Beispiel wird gezeigt, wie Sie die `LastDllError`-Eigenschaft nach dem Aufrufen einer Funktion in der Windows-API verwenden können.</span><span class="sxs-lookup"><span data-stu-id="19003-176">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="19003-177">Die `PrintWindowCoordinates` Prozedur nimmt ein Handle für ein Fenster an und ruft die `GetWindowRect`-Funktion auf.</span><span class="sxs-lookup"><span data-stu-id="19003-177">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="19003-178">`GetWindowRect` füllt die RECT-Datenstruktur mit den Längen der Seiten des Rechtecks aus, die das Fenster bilden.</span><span class="sxs-lookup"><span data-stu-id="19003-178">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="19003-179">Wenn Sie ein ungültiges Handle übergeben, tritt ein Fehler auf, und die Fehlernummer ist über die `LastDllError`-Eigenschaft verfügbar.</span><span class="sxs-lookup"><span data-stu-id="19003-179">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19003-180">Gibt einen numerischen Wert zurück, der einen Fehler angibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="19003-180">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="19003-181">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-181">Read/write.</span></span></summary>
        <value><span data-ttu-id="19003-182">Gibt einen numerischen Wert zurück, der einen Fehler angibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="19003-182">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="19003-183">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-183">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-184">Alle `Raise` Argumente außer `Number` sind optional.</span><span class="sxs-lookup"><span data-stu-id="19003-184">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="19003-185">Wenn Sie optionale Argumente weglassen und die Eigenschafts Einstellungen des `Err` Objekts Werte enthalten, die nicht gelöscht wurden, dienen diese Werte als Werte für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="19003-185">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="19003-186">Da das `Err` Objekt umfangreichere Informationen liefert, als wenn Sie Fehler mit der `Error`-Anweisung generieren, ist `Raise` beim Schreiben von Klassen Modulen nützlich.</span><span class="sxs-lookup"><span data-stu-id="19003-186">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="19003-187">Beispielsweise kann mit der `Raise`-Methode die Quelle, die den Fehler generiert hat, in der `Source`-Eigenschaft angegeben werden, die Online Hilfe für den Fehler kann referenziert werden usw.</span><span class="sxs-lookup"><span data-stu-id="19003-187">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="19003-188">Wenn Sie einen benutzerdefinierten Fehler von einem Objekt zurückgeben, legen Sie `Err.Number` fest, indem Sie die ausgewählte Zahl als Fehlercode der `VbObjectError` Konstante hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="19003-188">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="19003-189">Beispielsweise verwenden Sie den folgenden Code, um die Zahl 1051 als Fehlercode zurückzugeben:</span><span class="sxs-lookup"><span data-stu-id="19003-189">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="19003-190">Dieses Beispiel veranschaulicht eine typische Verwendung der `Number`-Eigenschaft in einer Routine zur Fehlerbehandlung.</span><span class="sxs-lookup"><span data-stu-id="19003-190">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="19003-191">In diesem Beispiel wird die `Raise`-Methode des `Err` Objekts verwendet, um einen ursprünglichen Fehler in einer Funktion zu generieren, die in Visual Basic geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="19003-191">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="19003-192">Die Aufruf Funktion kann den Fehler abfangen und an den Benutzer melden.</span><span class="sxs-lookup"><span data-stu-id="19003-192">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="19003-193">Beachten Sie, dass die Prozedur `CallingProcedure` den Typ der Informationen, die Sie von einem `Err`-Objekt ableiten können, mit den Informationen vergleicht, die Sie von einem `Exception`-Objekt ableiten können.</span><span class="sxs-lookup"><span data-stu-id="19003-193">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="19003-194"><paramref name="Number" /> ist größer als 65535.</span><span class="sxs-lookup"><span data-stu-id="19003-194"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = default, object Description = default, object HelpFile = default, object HelpContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="19003-195">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="19003-195">Required.</span></span> <span data-ttu-id="19003-196"><see langword="Long" />-Integer, der die Art des Fehlers identifiziert.</span><span class="sxs-lookup"><span data-stu-id="19003-196"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="19003-197">Visual Basic-Fehler liegen im Bereich 0–65535. Der Bereich 0–512 ist für Systemfehler reserviert. Der Bereich 513–65535 steht für benutzerdefinierte Fehler zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="19003-197">Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.</span></span> <span data-ttu-id="19003-198">Beim Festlegen der <see langword="Number" />-Eigenschaft auf den eigenen Code in einem Klassenmodul fügen Sie der <see langword="vbObjectError" />-Konstante Ihre Fehlercodenummer hinzu.</span><span class="sxs-lookup"><span data-stu-id="19003-198">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="19003-199">Um z.B. die Fehlernummer 513 zu generieren, weisen Sie <c>vbObjectError + 513</c> der <see langword="Number" />-Eigenschaft zu.</span><span class="sxs-lookup"><span data-stu-id="19003-199">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="19003-200">Optional.</span><span class="sxs-lookup"><span data-stu-id="19003-200">Optional.</span></span> <span data-ttu-id="19003-201"><see langword="String" />-Ausdruck, der das Objekt oder die Anwendung nennt, das bzw. die den Fehler generiert hat.</span><span class="sxs-lookup"><span data-stu-id="19003-201"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="19003-202">Wenn Sie diese Eigenschaft für ein Objekt festlegen, verwenden Sie das Format <c>Projekt</c>.<c>Klasse</c>.</span><span class="sxs-lookup"><span data-stu-id="19003-202">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="19003-203">Wird <paramref name="Source" /> nicht angegeben, wird die Prozess-ID des aktuellen Visual Basic-Projekts verwendet.</span><span class="sxs-lookup"><span data-stu-id="19003-203">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="19003-204">Optional.</span><span class="sxs-lookup"><span data-stu-id="19003-204">Optional.</span></span> <span data-ttu-id="19003-205"><see langword="String" />-Ausdruck, der den Fehler beschreibt.</span><span class="sxs-lookup"><span data-stu-id="19003-205"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="19003-206">Ohne Angabe wird der Wert in der <see langword="Number" />-Eigenschaft überprüft.</span><span class="sxs-lookup"><span data-stu-id="19003-206">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="19003-207">Wenn eine Zuordnung zu dem Code eines Visual Basic-Laufzeitfehlers möglich ist, wird die Zeichenfolge, die von der <see langword="Error" />-Funktion zurückgegeben wird, als <see langword="Description" />-Eigenschaft verwendet.</span><span class="sxs-lookup"><span data-stu-id="19003-207">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="19003-208">Entspricht der <see langword="Number" />-Eigenschaft kein Visual Basic-Fehler, wird die Meldung "Anwendungs- oder objektdefinierter Fehler" verwendet.</span><span class="sxs-lookup"><span data-stu-id="19003-208">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="19003-209">Optional.</span><span class="sxs-lookup"><span data-stu-id="19003-209">Optional.</span></span> <span data-ttu-id="19003-210">Der vollqualifizierte Pfad zu der Hilfedatei, in der Hilfe zu diesem Fehler zur Verfügung steht.</span><span class="sxs-lookup"><span data-stu-id="19003-210">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="19003-211">Ohne Angabe verwendet Visual Basic den vollqualifizierten Laufwerks-, Pfad- und Dateinamen der Visual Basic-Hilfedatei.</span><span class="sxs-lookup"><span data-stu-id="19003-211">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="19003-212">Optional.</span><span class="sxs-lookup"><span data-stu-id="19003-212">Optional.</span></span> <span data-ttu-id="19003-213">Die Kontext-ID, die ein Thema in <paramref name="HelpFile" /> identifiziert, das Hilfe für den Fehler bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="19003-213">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="19003-214">Wenn keine Angabe erfolgt, wird die Kontext-ID in der Visual Basic-Hilfedatei für den Fehler verwendet, der der <see langword="Number" />-Eigenschaft entspricht, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="19003-214">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="19003-215">Generiert einen Laufzeitfehler und kann statt der <see langword="Error" />-Anweisung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="19003-215">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-216">Alle `Raise` Argumente außer `Number` sind optional.</span><span class="sxs-lookup"><span data-stu-id="19003-216">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="19003-217">Wenn Sie optionale Argumente weglassen und die Eigenschafts Einstellungen des `Err` Objekts Werte enthalten, die nicht gelöscht wurden, dienen diese Werte als Werte für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="19003-217">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="19003-218">Da das `Err` Objekt umfangreichere Informationen liefert, als wenn Sie Fehler mit der `Error`-Anweisung generieren, ist `Raise` beim Schreiben von Klassen Modulen nützlich.</span><span class="sxs-lookup"><span data-stu-id="19003-218">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="19003-219">Beispielsweise kann mit der `Raise`-Methode die Quelle, die den Fehler generiert hat, in der `Source`-Eigenschaft angegeben werden, die Online Hilfe für den Fehler kann referenziert werden usw.</span><span class="sxs-lookup"><span data-stu-id="19003-219">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-220">In diesem Beispiel wird die `Raise`-Methode des `Err` Objekts verwendet, um einen Fehler in einer Funktion zu generieren, die in Visual Basic geschrieben ist.</span><span class="sxs-lookup"><span data-stu-id="19003-220">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="19003-221">Die Aufruf Funktion kann den Fehler abfangen und mit einem Meldungs Feld an den Benutzer melden.</span><span class="sxs-lookup"><span data-stu-id="19003-221">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="19003-222">Error-Anweisung</span><span class="sxs-lookup"><span data-stu-id="19003-222">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="19003-223">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="19003-223">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19003-224">Gibt einen <see langword="String" />-Ausdruck zurück, der den Namen des Objekts oder der Anwendung angibt, das bzw. die den Fehler ursprünglich generiert hat, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="19003-224">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="19003-225">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-225">Read/write.</span></span></summary>
        <value><span data-ttu-id="19003-226">Gibt einen <see langword="String" />-Ausdruck zurück, der den Namen des Objekts oder der Anwendung angibt, das bzw. die den Fehler ursprünglich generiert hat, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="19003-226">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="19003-227">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="19003-227">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19003-228">Die `Source`-Eigenschaft gibt einen `String` Ausdruck an, der das Objekt darstellt, das den Fehler generiert hat. der Ausdruck ist normalerweise der Klassenname oder die Prozess-ID des Objekts.</span><span class="sxs-lookup"><span data-stu-id="19003-228">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="19003-229">Verwenden Sie die `Source`-Eigenschaft, um Informationen bereitzustellen, wenn der Code einen Fehler nicht verarbeiten kann, der in einem Objekt mit Zugriff generiert wurde.</span><span class="sxs-lookup"><span data-stu-id="19003-229">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="19003-230">Wenn Sie z. b. auf Microsoft Excel zugreifen und ein `Division by zero` Fehler generiert, legt Microsoft Excel `Err.Number` auf den Fehlercode für diesen Fehler fest und legt `Source` auf "Excel. Application" fest.</span><span class="sxs-lookup"><span data-stu-id="19003-230">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="19003-231">Wenn die Anwendung einen Fehler aus dem Code erzeugt, ist `Source` die programmgesteuerte ID Ihrer Anwendung.</span><span class="sxs-lookup"><span data-stu-id="19003-231">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="19003-232">Innerhalb einer Klasse sollte `Source` einen Namen mit dem Formular *Projekt*enthalten. - *Klasse*.</span><span class="sxs-lookup"><span data-stu-id="19003-232">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="19003-233">Wenn ein unerwarteter Fehler im Code auftritt, wird die `Source`-Eigenschaft automatisch ausgefüllt.</span><span class="sxs-lookup"><span data-stu-id="19003-233">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="19003-234">Bei Fehlern in einem Modul enthält `Source` den Projektnamen.</span><span class="sxs-lookup"><span data-stu-id="19003-234">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19003-235">In diesem Beispiel wird die Verwendung der `Source`-Eigenschaft in einer typischen Fehler Behandlungs Routine veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="19003-235">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="19003-236">Wenn ein Fehler von `Class1`ausgelöst wird, wird die Zeichenfolge `"Class1"` der `Source`-Eigenschaft des `Err` Objekts zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="19003-236">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="19003-237">Diese Zeichenfolge wird dann in einer informativen Meldung angezeigt, die die Quelle und die Nummer des Fehlers angibt.</span><span class="sxs-lookup"><span data-stu-id="19003-237">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="19003-238">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="19003-238">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
