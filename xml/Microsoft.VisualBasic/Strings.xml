<Type Name="Strings" FullName="Microsoft.VisualBasic.Strings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f3d8336fb3091707bd9291d357c0518485ad5c9" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83951661" /></Metadata><TypeSignature Language="C#" Value="public sealed class Strings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Strings extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Strings" />
  <TypeSignature Language="VB.NET" Value="Public Module Strings" />
  <TypeSignature Language="C++ CLI" Value="public ref class Strings sealed" />
  <TypeSignature Language="F#" Value="type Strings = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Strings extends System.Object" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
    <AssemblyVersion>10.0.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="05a32-101">Das <see langword="Strings" />-Modul enthält Prozeduren, mit denen Zeichenfolgenoperationen ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-101">The <see langword="Strings" /> module contains procedures used to perform string operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-102">Dieses Modul unterstützt die Visual Basic-sprach Schlüsselwörter und die Lauf Zeit Bibliothekselemente, die Zeichen folgen bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="05a32-102">This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-103">Im folgenden Beispiel wird veranschaulicht, wie eine Zeichenfolge in ihren Leerzeichen aufgeteilt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-103">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-104">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-104">String Manipulation Summary</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/"><span data-ttu-id="05a32-105">Schlüsselwörter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="05a32-106">Visual Basic von Lauf Zeit Bibliotheks Membern</span><span class="sxs-lookup"><span data-stu-id="05a32-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Asc">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-107">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-107">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Asc(char String) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(char String);" />
      <MemberSignature Language="F#" Value="static member Asc : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(char String) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="05a32-108">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-108">Required.</span></span> <span data-ttu-id="05a32-109">Alle gültigen <see langword="Char" />-Ausdrücke oder <see langword="String" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-109">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="05a32-110">Wenn <paramref name="String" /> ein <see langword="String" />-Ausdruck ist, wird nur das erste Zeichen der Zeichenfolge als Eingabe verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-110">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="05a32-111">Wenn <paramref name="String" /> <see langword="Nothing" /> ist oder keine Zeichen enthält, tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="05a32-111">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="05a32-112">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-112">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="05a32-113">Der Zeichencode, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-113">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-114">`Asc` gibt den *Codepunkt*oder den Zeichencode für das Eingabezeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-114">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="05a32-115">Dies kann zwischen 0 und 255 für SBCS-Werte (Single-Byte Character Set) und-32768 bis 32767 für Double-Byte-Zeichensatz Werte (DBCS) liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-115">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="05a32-116">`AscW` gibt den Unicode-Codepunkt für das Eingabezeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-116">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="05a32-117">Dieser Wert kann zwischen 0 und 65535 liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-117">This can be 0 through 65535.</span></span> <span data-ttu-id="05a32-118">Der zurückgegebene Wert ist unabhängig von der Kultur und den Codepage-Einstellungen für den aktuellen Thread.</span><span class="sxs-lookup"><span data-stu-id="05a32-118">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-119">Die `AscB` Funktion früherer Versionen von Visual Basic gibt anstelle eines Zeichens einen Code für ein Byte zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-119">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="05a32-120">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-120">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-121">Alle Visual Basic 2005-Zeichen folgen sind in Unicode, und `AscB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-121">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-122">Im folgenden Beispiel wird die `Asc`-Funktion verwendet, um `Integer` Zeichen Codes zurückzugeben, die dem ersten Buchstaben in jeder Zeichenfolge entsprechen.</span><span class="sxs-lookup"><span data-stu-id="05a32-122">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/functions/"><span data-ttu-id="05a32-123">Funktionen (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-123">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Asc(string String) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (String As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member Asc : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(string String) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="05a32-124">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-124">Required.</span></span> <span data-ttu-id="05a32-125">Alle gültigen <see langword="Char" />-Ausdrücke oder <see langword="String" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-125">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="05a32-126">Wenn <paramref name="String" /> ein <see langword="String" />-Ausdruck ist, wird nur das erste Zeichen der Zeichenfolge als Eingabe verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-126">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="05a32-127">Wenn <paramref name="String" /> <see langword="Nothing" /> ist oder keine Zeichen enthält, tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="05a32-127">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="05a32-128">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-128">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="05a32-129">Der Zeichencode, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-129">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-130">`Asc` gibt den *Codepunkt*oder den Zeichencode für das Eingabezeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-130">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="05a32-131">Dies kann zwischen 0 und 255 für SBCS-Werte (Single-Byte Character Set) und-32768 bis 32767 für Double-Byte-Zeichensatz Werte (DBCS) liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-131">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="05a32-132">`AscW` gibt den Unicode-Codepunkt für das Eingabezeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-132">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="05a32-133">Dieser Wert kann zwischen 0 und 65535 liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-133">This can be 0 through 65535.</span></span> <span data-ttu-id="05a32-134">Der zurückgegebene Wert ist unabhängig von der Kultur und den Codepage-Einstellungen für den aktuellen Thread.</span><span class="sxs-lookup"><span data-stu-id="05a32-134">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-135">Die `AscB` Funktion früherer Versionen von Visual Basic gibt anstelle eines Zeichens einen Code für ein Byte zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-135">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="05a32-136">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-136">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-137">Alle Visual Basic 2005-Zeichen folgen sind in Unicode, und `AscB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-137">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-138">Im folgenden Beispiel wird die `Asc`-Funktion verwendet, um `Integer` Zeichen Codes zurückzugeben, die dem ersten Buchstaben in jeder Zeichenfolge entsprechen.</span><span class="sxs-lookup"><span data-stu-id="05a32-138">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/functions/"><span data-ttu-id="05a32-139">Funktionen (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-139">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AscW">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-140">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-140">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AscW(char String) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function AscW (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(char String);" />
      <MemberSignature Language="F#" Value="static member AscW : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(char String) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="05a32-141">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-141">Required.</span></span> <span data-ttu-id="05a32-142">Alle gültigen <see langword="Char" />-Ausdrücke oder <see langword="String" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-142">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="05a32-143">Wenn <paramref name="String" /> ein <see langword="String" />-Ausdruck ist, wird nur das erste Zeichen der Zeichenfolge als Eingabe verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-143">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="05a32-144">Wenn <paramref name="String" /> <see langword="Nothing" /> ist oder keine Zeichen enthält, tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="05a32-144">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="05a32-145">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-145">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="05a32-146">Der Zeichencode, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-146">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-147">`Asc` gibt den *Codepunkt*oder den Zeichencode für das Eingabezeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-147">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="05a32-148">Dies kann zwischen 0 und 255 für SBCS-Werte (Single-Byte Character Set) und-32768 bis 32767 für Double-Byte-Zeichensatz Werte (DBCS) liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-148">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="05a32-149">`AscW` gibt den Unicode-Codepunkt für das Eingabezeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-149">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="05a32-150">Dieser Wert kann zwischen 0 und 65535 liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-150">This can be 0 through 65535.</span></span> <span data-ttu-id="05a32-151">Der zurückgegebene Wert ist unabhängig von der Kultur und den Codepage-Einstellungen für den aktuellen Thread.</span><span class="sxs-lookup"><span data-stu-id="05a32-151">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-152">Die `AscB` Funktion früherer Versionen von Visual Basic gibt anstelle eines Zeichens einen Code für ein Byte zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-152">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="05a32-153">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-153">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-154">Alle Visual Basic 2005-Zeichen folgen sind in Unicode, und `AscB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-154">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-155">Im folgenden Beispiel wird die `Asc`-Funktion verwendet, um `Integer` Zeichen Codes zurückzugeben, die dem ersten Buchstaben in jeder Zeichenfolge entsprechen.</span><span class="sxs-lookup"><span data-stu-id="05a32-155">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/functions/"><span data-ttu-id="05a32-156">Funktionen (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-156">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AscW(string String) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AscW (String As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member AscW : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(string String) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="05a32-157">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-157">Required.</span></span> <span data-ttu-id="05a32-158">Alle gültigen <see langword="Char" />-Ausdrücke oder <see langword="String" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-158">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="05a32-159">Wenn <paramref name="String" /> ein <see langword="String" />-Ausdruck ist, wird nur das erste Zeichen der Zeichenfolge als Eingabe verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-159">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="05a32-160">Wenn <paramref name="String" /> <see langword="Nothing" /> ist oder keine Zeichen enthält, tritt ein <see cref="T:System.ArgumentException" />-Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="05a32-160">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="05a32-161">Gibt einen ganzzahligen Wert zurück, der den Zeichencode darstellt, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-161">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="05a32-162">Der Zeichencode, der einem Zeichen entspricht.</span><span class="sxs-lookup"><span data-stu-id="05a32-162">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-163">`Asc` gibt den *Codepunkt*oder den Zeichencode für das Eingabezeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-163">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="05a32-164">Dies kann zwischen 0 und 255 für SBCS-Werte (Single-Byte Character Set) und-32768 bis 32767 für Double-Byte-Zeichensatz Werte (DBCS) liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-164">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="05a32-165">`AscW` gibt den Unicode-Codepunkt für das Eingabezeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-165">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="05a32-166">Dieser Wert kann zwischen 0 und 65535 liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-166">This can be 0 through 65535.</span></span> <span data-ttu-id="05a32-167">Der zurückgegebene Wert ist unabhängig von der Kultur und den Codepage-Einstellungen für den aktuellen Thread.</span><span class="sxs-lookup"><span data-stu-id="05a32-167">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-168">Die `AscB` Funktion früherer Versionen von Visual Basic gibt anstelle eines Zeichens einen Code für ein Byte zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-168">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="05a32-169">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-169">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-170">Alle Visual Basic 2005-Zeichen folgen sind in Unicode, und `AscB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-170">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-171">Im folgenden Beispiel wird die `Asc`-Funktion verwendet, um `Integer` Zeichen Codes zurückzugeben, die dem ersten Buchstaben in jeder Zeichenfolge entsprechen.</span><span class="sxs-lookup"><span data-stu-id="05a32-171">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/functions/"><span data-ttu-id="05a32-172">Funktionen (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-172">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Chr">
      <MemberSignature Language="C#" Value="public static char Chr (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Chr(int32 CharCode) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Chr (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Chr(int CharCode);" />
      <MemberSignature Language="F#" Value="static member Chr : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.Chr CharCode" />
      <MemberSignature Language="ILAsm" Value=".method public static char Chr(int32 CharCode) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="05a32-173">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-173">Required.</span></span> <span data-ttu-id="05a32-174">Ein <see langword="Integer" />-Ausdruck, der den <c>Codepunkt</c> oder Zeichencode für das Zeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="05a32-174">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="05a32-175">Gibt das dem angegebenen Zeichencode zugeordnete Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-175">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="05a32-176">Das dem angegebenen Zeichencode zugeordnete Zeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-176">The character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-177">Der für `CharCode` akzeptierte asymmetrische Bereich kompensiert die Speicher Unterschiede zwischen dem `Short` und dem `Integer`.</span><span class="sxs-lookup"><span data-stu-id="05a32-177">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="05a32-178">Beispielsweise ist-29183 eine `Short`, aber + 36353 ist ein `Integer`.</span><span class="sxs-lookup"><span data-stu-id="05a32-178">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="05a32-179">Dies erleichtert auch die Kompatibilität mit Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="05a32-179">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="05a32-180">`Chr` verwendet die <xref:System.Text.Encoding>-Klasse im <xref:System.Text?displayProperty=nameWithType>-Namespace, um zu bestimmen, ob der aktuelle Thread einen Single-Byte-Zeichensatz (SBCS) oder einen Doppelbyte-Zeichensatz (Double-Byte Character Set, DBCS) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-180">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="05a32-181">Anschließend wird `CharCode` als Codepunkt in der entsprechenden Gruppe benötigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-181">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="05a32-182">Der Bereich kann zwischen 0 und 255 für SBCS-Zeichen und-32768 bis 65535 für DBCS-Zeichen liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-182">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="05a32-183">Der zurückgegebene Wert hängt von der Codepage für den aktuellen Thread ab, der in der <xref:System.Globalization.TextInfo.ANSICodePage%2A>-Eigenschaft der <xref:System.Globalization.TextInfo>-Klasse im <xref:System.Globalization>-Namespace enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-183">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="05a32-184">Sie können <xref:System.Globalization.TextInfo.ANSICodePage%2A> abrufen, indem Sie `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`angeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-184">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="05a32-185">`ChrW` nimmt `CharCode` als Unicode-Codepunkt an.</span><span class="sxs-lookup"><span data-stu-id="05a32-185">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="05a32-186">Der Bereich ist unabhängig von der Kultur und den Codepage-Einstellungen für den aktuellen Thread.</span><span class="sxs-lookup"><span data-stu-id="05a32-186">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="05a32-187">Werte von-32768 bis-1 werden wie Werte im Bereich + 32768 bis + 65535 behandelt.</span><span class="sxs-lookup"><span data-stu-id="05a32-187">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="05a32-188">Zahlen von 0 bis 31 sind identisch mit den standardmäßigen nicht druckbaren ASCII-Codes.</span><span class="sxs-lookup"><span data-stu-id="05a32-188">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="05a32-189">`Chr(10)` gibt z. b. ein Zeilenvorschub Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-189">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-190">Die `ChrB`-Funktion in früheren Versionen von Visual Basic gibt ein einzelnes Byte zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-190">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="05a32-191">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-191">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-192">Alle Zeichen folgen in Visual Basic und die .NET Framework sind in Unicode, und `ChrB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-192">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-193">Im folgenden Beispiel wird die `Chr`-Funktion verwendet, um das dem angegebenen Zeichencode zugeordnete Zeichen zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-193">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-194"><paramref name="CharCode" /> &lt; 0 oder &gt; 255 für <see langword="Chr" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-194"><paramref name="CharCode" /> &lt; 0 or &gt; 255 for <see langword="Chr" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-195">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-195">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChrW">
      <MemberSignature Language="C#" Value="public static char ChrW (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ChrW(int32 CharCode) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChrW (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ChrW(int CharCode);" />
      <MemberSignature Language="F#" Value="static member ChrW : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.ChrW CharCode" />
      <MemberSignature Language="ILAsm" Value=".method public static char ChrW(int32 CharCode) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="05a32-196">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-196">Required.</span></span> <span data-ttu-id="05a32-197">Ein <see langword="Integer" />-Ausdruck, der den <c>Codepunkt</c> oder Zeichencode für das Zeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="05a32-197">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="05a32-198">Gibt das dem angegebenen Zeichencode zugeordnete Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-198">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="05a32-199">Das dem angegebenen Zeichencode zugeordnete Zeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-199">The character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-200">Der für `CharCode` akzeptierte asymmetrische Bereich kompensiert die Speicher Unterschiede zwischen dem `Short` und dem `Integer`.</span><span class="sxs-lookup"><span data-stu-id="05a32-200">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="05a32-201">Beispielsweise ist-29183 eine `Short`, aber + 36353 ist ein `Integer`.</span><span class="sxs-lookup"><span data-stu-id="05a32-201">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="05a32-202">Dies erleichtert auch die Kompatibilität mit Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="05a32-202">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="05a32-203">`Chr` verwendet die <xref:System.Text.Encoding>-Klasse im <xref:System.Text?displayProperty=nameWithType>-Namespace, um zu bestimmen, ob der aktuelle Thread einen Single-Byte-Zeichensatz (SBCS) oder einen Doppelbyte-Zeichensatz (Double-Byte Character Set, DBCS) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-203">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="05a32-204">Anschließend wird `CharCode` als Codepunkt in der entsprechenden Gruppe benötigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-204">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="05a32-205">Der Bereich kann zwischen 0 und 255 für SBCS-Zeichen und-32768 bis 65535 für DBCS-Zeichen liegen.</span><span class="sxs-lookup"><span data-stu-id="05a32-205">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="05a32-206">Der zurückgegebene Wert hängt von der Codepage für den aktuellen Thread ab, der in der <xref:System.Globalization.TextInfo.ANSICodePage%2A>-Eigenschaft der <xref:System.Globalization.TextInfo>-Klasse im <xref:System.Globalization>-Namespace enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-206">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="05a32-207">Sie können <xref:System.Globalization.TextInfo.ANSICodePage%2A> abrufen, indem Sie `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`angeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-207">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="05a32-208">`ChrW` nimmt `CharCode` als Unicode-Codepunkt an.</span><span class="sxs-lookup"><span data-stu-id="05a32-208">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="05a32-209">Der Bereich ist unabhängig von der Kultur und den Codepage-Einstellungen für den aktuellen Thread.</span><span class="sxs-lookup"><span data-stu-id="05a32-209">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="05a32-210">Werte von-32768 bis-1 werden wie Werte im Bereich + 32768 bis + 65535 behandelt.</span><span class="sxs-lookup"><span data-stu-id="05a32-210">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="05a32-211">Zahlen von 0 bis 31 sind identisch mit den standardmäßigen nicht druckbaren ASCII-Codes.</span><span class="sxs-lookup"><span data-stu-id="05a32-211">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="05a32-212">`Chr(10)` gibt z. b. ein Zeilenvorschub Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-212">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-213">Die `ChrB`-Funktion in früheren Versionen von Visual Basic gibt ein einzelnes Byte zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-213">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="05a32-214">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-214">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-215">Alle Zeichen folgen in Visual Basic und die .NET Framework sind in Unicode, und `ChrB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-215">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-216">Im folgenden Beispiel wird die `Chr`-Funktion verwendet, um das dem angegebenen Zeichencode zugeordnete Zeichen zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-216">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-217"><paramref name="CharCode" /> &lt; – 32768 oder &gt; 65535 für <see langword="ChrW" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-217"><paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for <see langword="ChrW" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-218">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-218">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-219">Gibt ein nullbasiertes Array zurück, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-219">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As Object(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : obj[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Match" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Include" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="05a32-220">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-220">Required.</span></span> <span data-ttu-id="05a32-221">Eindimensionales Zeichenfolgenarray, das durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="05a32-221">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="05a32-222">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-222">Required.</span></span> <span data-ttu-id="05a32-223">Die zu suchende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-223">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="05a32-224">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-224">Optional.</span></span> <span data-ttu-id="05a32-225">Ein <see langword="Boolean" />-Wert, der angibt, ob untergeordnete Zeichenfolgen zurückgegeben werden sollen, die <paramref name="Match" /> einschließen oder ausschließen.</span><span class="sxs-lookup"><span data-stu-id="05a32-225"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span></span> <span data-ttu-id="05a32-226">Wenn <paramref name="Include" /> <see langword="True" /> ist, gibt die <see langword="Filter" />-Funktion eine Teilmenge des Arrays zurück, die <paramref name="Match" /> als eine untergeordnete Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-226">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span></span> <span data-ttu-id="05a32-227">Wenn <paramref name="Include" /> <see langword="False" /> ist, gibt die <see langword="Filter" />-Funktion eine Teilmenge des Arrays zurück, die <paramref name="Match" /> nicht als eine untergeordnete Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-227">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="05a32-228">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-228">Optional.</span></span> <span data-ttu-id="05a32-229">Numerischer Wert, der die Art des zu verwendenden Zeichenfolgenvergleichs angibt.</span><span class="sxs-lookup"><span data-stu-id="05a32-229">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="05a32-230">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-230">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="05a32-231">Gibt ein nullbasiertes Array zurück, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-231">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="05a32-232">Ein nullbasiertes Array, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-232">A zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-233">Wenn keine Übereinstimmungen `Match` in `Source`gefunden werden, gibt die `Filter`-Funktion ein leeres Array zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-233">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="05a32-234">Wenn `Source` auf `Nothing` festgelegt ist oder kein eindimensionales Array ist, tritt ein Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="05a32-234">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="05a32-235">Das von der `Filter` Funktion zurückgegebene Array enthält nur genügend Elemente, die die Anzahl der übereinstimmenden Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-235">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="05a32-236">Das `Compare`-Argument kann die folgenden Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="05a32-236">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="05a32-237">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-237">Constant</span></span>|<span data-ttu-id="05a32-238">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-238">Description</span></span>|  
|-|-|  
|<span data-ttu-id="05a32-239">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-239">Constant</span></span>|<span data-ttu-id="05a32-240">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-240">Description</span></span>|  
|`CompareMethod.Binary`|<span data-ttu-id="05a32-241">Führt einen binären Vergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-241">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="05a32-242">Führt einen Textvergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-242">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-243">In diesem Beispiel wird die Verwendung der `Filter`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-243">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-244"><paramref name="Source" /> ist <see langword="Nothing" /> oder kein eindimensionales Array.</span><span class="sxs-lookup"><span data-stu-id="05a32-244"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-245">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-245">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As String(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : string[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Match" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Include" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="05a32-246">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-246">Required.</span></span> <span data-ttu-id="05a32-247">Eindimensionales Zeichenfolgenarray, das durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="05a32-247">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="05a32-248">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-248">Required.</span></span> <span data-ttu-id="05a32-249">Die zu suchende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-249">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="05a32-250">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-250">Optional.</span></span> <span data-ttu-id="05a32-251">Ein <see langword="Boolean" />-Wert, der angibt, ob untergeordnete Zeichenfolgen zurückgegeben werden sollen, die <paramref name="Match" /> einschließen oder ausschließen.</span><span class="sxs-lookup"><span data-stu-id="05a32-251"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span></span> <span data-ttu-id="05a32-252">Wenn <paramref name="Include" /> <see langword="True" /> ist, gibt die <see langword="Filter" />-Funktion eine Teilmenge des Arrays zurück, die <paramref name="Match" /> als eine untergeordnete Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-252">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span></span> <span data-ttu-id="05a32-253">Wenn <paramref name="Include" /> <see langword="False" /> ist, gibt die <see langword="Filter" />-Funktion eine Teilmenge des Arrays zurück, die <paramref name="Match" /> nicht als eine untergeordnete Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-253">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="05a32-254">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-254">Optional.</span></span> <span data-ttu-id="05a32-255">Numerischer Wert, der die Art des zu verwendenden Zeichenfolgenvergleichs angibt.</span><span class="sxs-lookup"><span data-stu-id="05a32-255">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="05a32-256">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-256">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="05a32-257">Gibt ein nullbasiertes Array zurück, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-257">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="05a32-258">Ein nullbasiertes Array, das einen Teilbereich eines <see langword="String" />-Arrays auf der Basis angegebener Filterkriterien enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-258">A zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-259">Wenn keine Übereinstimmungen `Match` in `Source`gefunden werden, gibt die `Filter`-Funktion ein leeres Array zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-259">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="05a32-260">Wenn `Source` auf `Nothing` festgelegt ist oder kein eindimensionales Array ist, tritt ein Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="05a32-260">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="05a32-261">Das von der `Filter` Funktion zurückgegebene Array enthält nur genügend Elemente, die die Anzahl der übereinstimmenden Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-261">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="05a32-262">Das `Compare`-Argument kann die folgenden Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="05a32-262">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="05a32-263">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-263">Constant</span></span>|<span data-ttu-id="05a32-264">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-264">Description</span></span>|  
|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="05a32-265">Führt einen binären Vergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-265">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="05a32-266">Führt einen Textvergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-266">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-267">In diesem Beispiel wird die Verwendung der `Filter`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-267">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-268"><paramref name="Source" /> ist <see langword="Nothing" /> oder kein eindimensionales Array.</span><span class="sxs-lookup"><span data-stu-id="05a32-268"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-269">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-269">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(object Expression, string Style) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Format (Expression, Style)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Style" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-270">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-270">Required.</span></span> <span data-ttu-id="05a32-271">Beliebiger gültiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-271">Any valid expression.</span></span></param>
        <param name="Style"><span data-ttu-id="05a32-272">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-272">Optional.</span></span> <span data-ttu-id="05a32-273">Ein gültiger benannter oder benutzerdefinierter Format-<see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-273">A valid named or user-defined format <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="05a32-274">Gibt eine Zeichenfolge zurück, die entsprechend den Anweisungen in einem <see langword="String" />-Formatausdruck formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-274">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></summary>
        <returns><span data-ttu-id="05a32-275">Eine Zeichenfolge, die entsprechend den Anweisungen in einem <see langword="String" />-Formatausdruck formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-275">A string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-276">Die <xref:System.String.Format%2A?displayProperty=nameWithType>-Methode bietet auch eine ähnliche Funktionalität.</span><span class="sxs-lookup"><span data-stu-id="05a32-276">The <xref:System.String.Format%2A?displayProperty=nameWithType> method also provides similar functionality.</span></span>  
  
 <span data-ttu-id="05a32-277">Wenn Sie eine nicht lokalisierte numerische Zeichenfolge formatieren, sollten Sie ein benutzerdefiniertes numerisches Format verwenden, um sicherzustellen, dass Sie das gewünschte Aussehen erhalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-277">If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</span></span>  
  
 <span data-ttu-id="05a32-278">Wenn Sie versuchen, eine Zahl zu formatieren, ohne `Style`anzugeben, bietet die `Format`-Funktion ähnliche Funktionen wie die `Str`-Funktion, obwohl Sie International bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-278">If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware.</span></span> <span data-ttu-id="05a32-279">Positive Zahlen, die als Zeichen folgen mit der `Format`-Funktion formatiert sind, enthalten jedoch keinen führenden Platz, der für das Vorzeichen des Werts reserviert ist. mit der `Str`-Funktion konvertierte werden das führende Leerzeichen beibehalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-279">However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.</span></span>  
  
## <a name="different-formats-for-different-numeric-values"></a><span data-ttu-id="05a32-280">Verschiedene Formate für verschiedene numerische Werte</span><span class="sxs-lookup"><span data-stu-id="05a32-280">Different Formats for Different Numeric Values</span></span>  
 <span data-ttu-id="05a32-281">Ein benutzerdefinierter Formatausdruck für Zahlen kann ein bis drei Abschnitte enthalten, die durch ein Semikolon (;) getrennt sind.</span><span class="sxs-lookup"><span data-stu-id="05a32-281">A user-defined format expression for numbers can have from one to three sections separated by semicolons.</span></span> <span data-ttu-id="05a32-282">Wenn das `Style`-Argument der `Format`-Funktion eines der vordefinierten numerischen Formate enthält, ist nur ein Abschnitt zulässig.</span><span class="sxs-lookup"><span data-stu-id="05a32-282">If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.</span></span>  
  
|<span data-ttu-id="05a32-283">Wenn Sie</span><span class="sxs-lookup"><span data-stu-id="05a32-283">If you use</span></span>|<span data-ttu-id="05a32-284">Dies ist das Ergebnis:</span><span class="sxs-lookup"><span data-stu-id="05a32-284">This is the result</span></span>|  
|-|-|  
|<span data-ttu-id="05a32-285">Nur ein Abschnitt</span><span class="sxs-lookup"><span data-stu-id="05a32-285">One section only</span></span>|<span data-ttu-id="05a32-286">Der Formatausdruck gilt für alle Werte.</span><span class="sxs-lookup"><span data-stu-id="05a32-286">The format expression applies to all values.</span></span>|  
|<span data-ttu-id="05a32-287">Zwei Abschnitte</span><span class="sxs-lookup"><span data-stu-id="05a32-287">Two sections</span></span>|<span data-ttu-id="05a32-288">Der erste Abschnitt gilt für positive Werte und Nullen; der zweite Abschnitt gilt für negative Werte.</span><span class="sxs-lookup"><span data-stu-id="05a32-288">The first section applies to positive values and zeros; the second applies to negative values.</span></span>|  
|<span data-ttu-id="05a32-289">Drei Abschnitte</span><span class="sxs-lookup"><span data-stu-id="05a32-289">Three sections</span></span>|<span data-ttu-id="05a32-290">Der erste Abschnitt gilt für positive Werte, der zweite für negative Werte und der dritte für Nullen.</span><span class="sxs-lookup"><span data-stu-id="05a32-290">The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</span></span>|  
  
 <span data-ttu-id="05a32-291">Das folgende Beispiel enthält zwei Abschnitte: das erste definiert das Format für positive Werte und Nullen. der zweite Abschnitt definiert das Format für negative Werte.</span><span class="sxs-lookup"><span data-stu-id="05a32-291">The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</span></span> <span data-ttu-id="05a32-292">Da das `Style`-Argument der `Format`-Funktion eine Zeichenfolge annimmt, wird es in Anführungszeichen eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="05a32-292">Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.</span></span>  
  
 [!code-vb[VbVbalrStrings#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#18)]  
  
 <span data-ttu-id="05a32-293">Wenn Sie zwei Semikolons ohne etwas dazwischen einfügen, wird der fehlende Abschnitt entsprechend dem Format des positiven Werts ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-293">If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</span></span> <span data-ttu-id="05a32-294">Das folgende Format zeigt beispielsweise positive und negative Werte mit dem Format im ersten Abschnitt an und zeigt `Zero` an, wenn der Wert 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-294">For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.</span></span>  
  
 [!code-vb[VbVbalrStrings#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#19)]  
  
## <a name="predefined-numeric-formats"></a><span data-ttu-id="05a32-295">Vordefinierte numerische Formate</span><span class="sxs-lookup"><span data-stu-id="05a32-295">Predefined Numeric Formats</span></span>  
 <span data-ttu-id="05a32-296">Die folgende Tabelle enthält eine Übersicht über die Namen vordefinierter numerischer Formate.</span><span class="sxs-lookup"><span data-stu-id="05a32-296">The following table identifies the predefined numeric format names.</span></span> <span data-ttu-id="05a32-297">Diese können nach Namen als `Style` Argument für die `Format`-Funktion verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="05a32-297">These may be used by name as the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="05a32-298">Formatname</span><span class="sxs-lookup"><span data-stu-id="05a32-298">Format name</span></span>|<span data-ttu-id="05a32-299">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-299">Description</span></span>|  
|-|-|  
|<span data-ttu-id="05a32-300">`General Number`, `G` oder `g`</span><span class="sxs-lookup"><span data-stu-id="05a32-300">`General Number`, `G`, or `g`</span></span>|<span data-ttu-id="05a32-301">Zeigt die Zahl ohne Tausender Trennzeichen an.</span><span class="sxs-lookup"><span data-stu-id="05a32-301">Displays number with no thousand separator.</span></span><br /><br /> <span data-ttu-id="05a32-302">`Format(&H3FA, "g")` gibt beispielsweise `1018` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-302">For example, `Format(&H3FA, "g")` returns `1018`.</span></span>|  
|<span data-ttu-id="05a32-303">`Currency`, `C` oder `c`</span><span class="sxs-lookup"><span data-stu-id="05a32-303">`Currency`, `C`, or `c`</span></span>|<span data-ttu-id="05a32-304">Zeigt die Zahl mit Tausender Trennzeichen an, falls zutreffend. zeigt zwei Ziffern rechts vom Dezimaltrennzeichen an.</span><span class="sxs-lookup"><span data-stu-id="05a32-304">Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</span></span> <span data-ttu-id="05a32-305">Die Ausgabe hängt vom verwendeten Systemgebietsschema ab.</span><span class="sxs-lookup"><span data-stu-id="05a32-305">Output is based on system locale settings.</span></span><br /><br /> <span data-ttu-id="05a32-306">`Format(1234567, "c")` gibt beispielsweise `$1,234,567.00` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-306">For example, `Format(1234567, "c")` returns `$1,234,567.00`.</span></span>|  
|<span data-ttu-id="05a32-307">`Fixed`, `F` oder `f`</span><span class="sxs-lookup"><span data-stu-id="05a32-307">`Fixed`, `F`, or `f`</span></span>|<span data-ttu-id="05a32-308">Zeigt mindestens eine Ziffer links und zwei Ziffern rechts vom Dezimaltrennzeichen an.</span><span class="sxs-lookup"><span data-stu-id="05a32-308">Displays at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="05a32-309">`Format(1234567, "f")` gibt beispielsweise `1234567.00` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-309">For example, `Format(1234567, "f")` returns `1234567.00`.</span></span>|  
|<span data-ttu-id="05a32-310">`Standard`, `N` oder `n`</span><span class="sxs-lookup"><span data-stu-id="05a32-310">`Standard`, `N`, or `n`</span></span>|<span data-ttu-id="05a32-311">Zeigt die Zahl mit Tausender Trennzeichen, mindestens eine Ziffer links und zwei Ziffern rechts vom Dezimaltrennzeichen an.</span><span class="sxs-lookup"><span data-stu-id="05a32-311">Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="05a32-312">`Format(1234567, "n")` gibt beispielsweise `1,234,567.00` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-312">For example, `Format(1234567, "n")` returns `1,234,567.00`.</span></span>|  
|`Percent`|<span data-ttu-id="05a32-313">Zeigt die Zahl multipliziert mit 100 mit einem Prozentzeichen (%) an, das rechts ohne Leerzeichen angefügt wird; zeigt immer zwei Ziffern rechts vom Dezimaltrennzeichen an.</span><span class="sxs-lookup"><span data-stu-id="05a32-313">Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="05a32-314">`Format(0.4744, "Percent")` gibt beispielsweise `47.44%` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-314">For example, `Format(0.4744, "Percent")` returns `47.44%`.</span></span>|  
|<span data-ttu-id="05a32-315">`P` oder `p`</span><span class="sxs-lookup"><span data-stu-id="05a32-315">`P`, or `p`</span></span>|<span data-ttu-id="05a32-316">Zeigt die Zahl mit Tausendertrennzeichen multipliziert mit 100 mit einem Prozentzeichen (%) an, das rechts angefügt und durch ein Leerzeichen abgetrennt wird; zeigt immer zwei Ziffern rechts vom Dezimaltrennzeichen an.</span><span class="sxs-lookup"><span data-stu-id="05a32-316">Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="05a32-317">`Format(0.80345, "p")` gibt beispielsweise `80.35 %` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-317">For example, `Format(0.80345, "p")` returns `80.35 %`.</span></span>|  
|`Scientific`|<span data-ttu-id="05a32-318">Verwendet die standardmäßige wissenschaftliche Schreibweise und stellt zwei signifikante Stellen bereit.</span><span class="sxs-lookup"><span data-stu-id="05a32-318">Uses standard scientific notation, providing two significant digits.</span></span><br /><br /> <span data-ttu-id="05a32-319">`Format(1234567, "Scientific")` gibt beispielsweise `1.23E+06` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-319">For example, `Format(1234567, "Scientific")` returns `1.23E+06`.</span></span>|  
|<span data-ttu-id="05a32-320">`E` oder `e`</span><span class="sxs-lookup"><span data-stu-id="05a32-320">`E`, or `e`</span></span>|<span data-ttu-id="05a32-321">Verwendet die standardmäßige wissenschaftliche Schreibweise und stellt sechs signifikante Stellen bereit.</span><span class="sxs-lookup"><span data-stu-id="05a32-321">Uses standard scientific notation, providing six significant digits.</span></span><br /><br /> <span data-ttu-id="05a32-322">`Format(1234567, "e")` gibt beispielsweise `1.234567e+006` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-322">For example, `Format(1234567, "e")` returns `1.234567e+006`.</span></span>|  
|<span data-ttu-id="05a32-323">`D` oder `d`</span><span class="sxs-lookup"><span data-stu-id="05a32-323">`D`, or `d`</span></span>|<span data-ttu-id="05a32-324">Zeigt eine Zahl als Zeichenfolge an, die den Wert der Zahl im Dezimalformat (Basis 10) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-324">Displays number as a string that contains the value of the number in Decimal (base 10) format.</span></span> <span data-ttu-id="05a32-325">Diese Option wird nur für ganzzahlige Typen (`Byte`, `Short`, `Integer`, `Long`) unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-325">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="05a32-326">`Format(&H7F, "d")` gibt beispielsweise `127` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-326">For example, `Format(&H7F, "d")` returns `127`.</span></span>|  
|<span data-ttu-id="05a32-327">`X` oder `x`</span><span class="sxs-lookup"><span data-stu-id="05a32-327">`X`, or `x`</span></span>|<span data-ttu-id="05a32-328">Zeigt eine Zahl als Zeichenfolge an, die den Wert der Zahl im Hexadezimalformat (Basis 16) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-328">Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</span></span> <span data-ttu-id="05a32-329">Diese Option wird nur für ganzzahlige Typen (`Byte`, `Short`, `Integer`, `Long`) unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-329">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="05a32-330">`Format(127, "x")` gibt beispielsweise `7f` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-330">For example, `Format(127, "x")` returns `7f`.</span></span>|  
|`Yes/No`|<span data-ttu-id="05a32-331">Zeigt `No` an, wenn die Zahl 0 ist. Andernfalls wird `Yes`angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-331">Displays `No` if number is 0; otherwise, displays `Yes`.</span></span><br /><br /> <span data-ttu-id="05a32-332">`Format(0, "Yes/No")` gibt beispielsweise `No` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-332">For example, `Format(0, "Yes/No")` returns `No`.</span></span>|  
|`True/False`|<span data-ttu-id="05a32-333">Zeigt `False` an, wenn die Zahl 0 ist. Andernfalls wird `True`angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-333">Displays `False` if number is 0; otherwise, displays `True`.</span></span><br /><br /> <span data-ttu-id="05a32-334">`Format(1, "True/False")` gibt beispielsweise `True` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-334">For example, `Format(1, "True/False")` returns `True`.</span></span>|  
|`On/Off`|<span data-ttu-id="05a32-335">Zeigt `Off` an, wenn die Zahl 0 ist. Andernfalls wird `On`angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-335">Displays `Off` if number is 0; otherwise, displays `On`.</span></span><br /><br /> <span data-ttu-id="05a32-336">`Format(1, "On/Off")` gibt beispielsweise `On` zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-336">For example, `Format(1, "On/Off")` returns `On`.</span></span>|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-337">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-337">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-338">Die Formate `Yes/No`, `True/False`und `On/Off` werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-338">The `Yes/No`, `True/False`, and `On/Off` formats are not supported.</span></span>  
  
## <a name="user-defined-numeric-formats"></a><span data-ttu-id="05a32-339">Benutzerdefinierte numerische Formate</span><span class="sxs-lookup"><span data-stu-id="05a32-339">User-Defined Numeric Formats</span></span>  
 <span data-ttu-id="05a32-340">In der folgenden Tabelle werden die Zeichen aufgeführt, mit denen Sie benutzerdefinierte Zahlenformate erstellen können.</span><span class="sxs-lookup"><span data-stu-id="05a32-340">The following table identifies characters you can use to create user-defined number formats.</span></span> <span data-ttu-id="05a32-341">Diese können verwendet werden, um das `Style`-Argument für die `Format`-Funktion zu erstellen:</span><span class="sxs-lookup"><span data-stu-id="05a32-341">These may be used to build the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="05a32-342">Zeichen</span><span class="sxs-lookup"><span data-stu-id="05a32-342">Character</span></span>|<span data-ttu-id="05a32-343">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-343">Description</span></span>|  
|-|-|  
|<span data-ttu-id="05a32-344">Keine</span><span class="sxs-lookup"><span data-stu-id="05a32-344">None</span></span>|<span data-ttu-id="05a32-345">Zeigt die Zahl ohne Formatierung an.</span><span class="sxs-lookup"><span data-stu-id="05a32-345">Displays the number with no formatting.</span></span>|  
|<span data-ttu-id="05a32-346">(`0`)</span><span class="sxs-lookup"><span data-stu-id="05a32-346">(`0`)</span></span>|<span data-ttu-id="05a32-347">Ziffernplatzhalter.</span><span class="sxs-lookup"><span data-stu-id="05a32-347">Digit placeholder.</span></span> <span data-ttu-id="05a32-348">Zeigt eine Ziffer oder eine 0 (Null) an.</span><span class="sxs-lookup"><span data-stu-id="05a32-348">Displays a digit or a zero.</span></span> <span data-ttu-id="05a32-349">Wenn der Ausdruck an der Position, an der NULL in der Format Zeichenfolge angezeigt wird, eine Ziffer aufweist, zeigen Sie ihn an. Andernfalls wird an dieser Position ein NULL-Wert angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-349">If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</span></span><br /><br /> <span data-ttu-id="05a32-350">Hat die Zahl weniger Ziffern als der Formatausdruck Nullen (auf beiden Seiten des Dezimaltrennzeichens), werden führende oder nachfolgende Nullen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-350">If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</span></span> <span data-ttu-id="05a32-351">Hat die Zahl rechts vom Dezimaltrennzeichen mehr Ziffern, als im Formatausdruck rechts vom Dezimaltrennzeichen Nullen vorkommen, wird die Zahl auf so viele Dezimalstellen gerundet, wie Nullen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="05a32-351">If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</span></span> <span data-ttu-id="05a32-352">Hat die Zahl links vom Dezimaltrennzeichen mehr Ziffern, als im Formatausdruck links vom Dezimaltrennzeichen Nullen vorkommen, werden die zusätzlichen Ziffern unverändert angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-352">If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</span></span>|  
|<span data-ttu-id="05a32-353">(`#`)</span><span class="sxs-lookup"><span data-stu-id="05a32-353">(`#`)</span></span>|<span data-ttu-id="05a32-354">Ziffernplatzhalter.</span><span class="sxs-lookup"><span data-stu-id="05a32-354">Digit placeholder.</span></span> <span data-ttu-id="05a32-355">Zeigt eine Ziffer oder nichts an.</span><span class="sxs-lookup"><span data-stu-id="05a32-355">Displays a digit or nothing.</span></span> <span data-ttu-id="05a32-356">Wenn der Ausdruck an der Position, an der das `#` Zeichen in der Format Zeichenfolge angezeigt wird, eine Ziffer aufweist, wird Sie angezeigt. Andernfalls wird an dieser Position nichts angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-356">If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.</span></span><br /><br /> <span data-ttu-id="05a32-357">Dieses Symbol funktioniert wie der Platzhalter für die `0` Ziffer, mit dem Unterschied, dass führende und nachfolgende Nullen nicht angezeigt werden, wenn die Zahl weniger Ziffern hat, als `#` Zeichen auf beiden Seiten des Dezimal Trennzeichens im Format Ausdruck vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="05a32-357">This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.</span></span>|  
|<span data-ttu-id="05a32-358">(`.`)</span><span class="sxs-lookup"><span data-stu-id="05a32-358">(`.`)</span></span>|<span data-ttu-id="05a32-359">Dezimalplatzhalter.</span><span class="sxs-lookup"><span data-stu-id="05a32-359">Decimal placeholder.</span></span> <span data-ttu-id="05a32-360">Der Dezimalplatzhalter legt fest, wie viele Ziffern links und rechts vom Dezimaltrennzeichen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-360">The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</span></span> <span data-ttu-id="05a32-361">, Wenn der Format Ausdruck nur `#` Zeichen links neben diesem Symbol enthält. Zahlen, die kleiner als 1 sind, beginnen mit einem Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-361">If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</span></span> <span data-ttu-id="05a32-362">Sollen Bruchzahlen mit einer führenden Null angezeigt werden, verwenden Sie 0 (Null) als ersten Ziffernplatzhalter links vom Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-362">To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</span></span> <span data-ttu-id="05a32-363">In manchen Gebietsschemas wird ein Komma als Dezimaltrennzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-363">In some locales, a comma is used as the decimal separator.</span></span> <span data-ttu-id="05a32-364">Welches Zeichen tatsächlich als Dezimaltrennzeichen in der formatierten Ausgabe verwendet wird, hängt von dem Zahlenformat ab, das vom System erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-364">The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</span></span> <span data-ttu-id="05a32-365">Daher sollten Sie auch dann den Punkt als Dezimalplatzalter in den Formaten verwenden, wenn Sie in einem Gebietsschema arbeiten, in dem ein Komma als Dezimaltrennzeichen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-365">Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</span></span> <span data-ttu-id="05a32-366">Die formatierte Zeichenfolge wird im richtigen Format für das Gebietsschema angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-366">The formatted string will appear in the format correct for the locale.</span></span>|  
|<span data-ttu-id="05a32-367">(`%`)</span><span class="sxs-lookup"><span data-stu-id="05a32-367">(`%`)</span></span>|<span data-ttu-id="05a32-368">Prozentplatzhalter.</span><span class="sxs-lookup"><span data-stu-id="05a32-368">Percent placeholder.</span></span> <span data-ttu-id="05a32-369">Multipliziert den Ausdruck mit 100.</span><span class="sxs-lookup"><span data-stu-id="05a32-369">Multiplies the expression by 100.</span></span> <span data-ttu-id="05a32-370">Das Prozentzeichen (`%`) wird an der Position eingefügt, an der es in der Format Zeichenfolge angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-370">The percent character (`%`) is inserted in the position where it appears in the format string.</span></span>|  
|<span data-ttu-id="05a32-371">(`,`)</span><span class="sxs-lookup"><span data-stu-id="05a32-371">(`,`)</span></span>|<span data-ttu-id="05a32-372">Tausendertrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-372">Thousand separator.</span></span> <span data-ttu-id="05a32-373">Das Tausendertrennzeichen trennt in einer Zahl, die vier oder mehr Stellen links vom Dezimaltrennzeichen aufweist, die Tausender von den Hundertern.</span><span class="sxs-lookup"><span data-stu-id="05a32-373">The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</span></span> <span data-ttu-id="05a32-374">Die Standard mäßige Verwendung des Tausender Trennzeichens wird angegeben, wenn das Format ein Tausender Trennzeichen enthält, das von Ziffern Platzhaltern (`0` oder `#`) umgeben ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-374">Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).</span></span><br /><br /> <span data-ttu-id="05a32-375">Ein Tausendertrennzeichen direkt links vom Dezimaltrennzeichen (unabhängig davon, ob ein Dezimaltrennzeichen angegeben ist oder nicht) oder als Zeichen ganz rechts in der Zeichenfolge bedeutet Folgendes: "Die Zahl durch Division durch 1000 skalieren, gegebenenfalls mit Rundung".</span><span class="sxs-lookup"><span data-stu-id="05a32-375">A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</span></span> <span data-ttu-id="05a32-376">Zahlen, die kleiner als 1.000, aber größer oder gleich 500 sind, werden als `1`angezeigt, und Ziffern, die kleiner als 500 sind, werden als `0`angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-376">Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`.</span></span> <span data-ttu-id="05a32-377">Zwei benachbarte Tausendertrennzeichen an dieser Position skalieren mit einem Faktor von 1 Million sowie einem zusätzlichen Faktor von 1000 für jedes zusätzliche Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-377">Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</span></span><br /><br /> <span data-ttu-id="05a32-378">Mehrere Trennzeichen, die sich an einer anderen Position als direkt links vom Dezimaltrennzeichen oder ganz rechts in der Zeichenfolge befinden, geben nur an, dass ein Tausendertrennzeichen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-378">Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</span></span> <span data-ttu-id="05a32-379">In einigen Gebietsschemas wird der Punkt als Tausendertrennzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-379">In some locales, a period is used as a thousand separator.</span></span> <span data-ttu-id="05a32-380">Welches Zeichen tatsächlich als Tausendertrennzeichen in der formatierten Ausgabe verwendet wird, hängt von dem Zahlenformat ab, das vom System erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-380">The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</span></span> <span data-ttu-id="05a32-381">Verwenden Sie daher das Komma auch dann als Tausendertrennzeichen in den Formaten, wenn Sie in einem Gebietsschema arbeiten, in dem der Punkt als Tausendertrennzeichen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-381">Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</span></span> <span data-ttu-id="05a32-382">Die formatierte Zeichenfolge wird im richtigen Format für das Gebietsschema angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-382">The formatted string will appear in the format correct for the locale.</span></span><br /><br /> <span data-ttu-id="05a32-383">Betrachten Sie z. B. die folgenden drei Formatzeichenfolgen:</span><span class="sxs-lookup"><span data-stu-id="05a32-383">For example, consider the three following format strings:</span></span><br /><br /> <span data-ttu-id="05a32-384">-   `"#,0."`, bei dem das Tausender Trennzeichen verwendet wird, um die Zahl 100 Millionen als die Zeichenfolge "100 Millionen" zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-384">-   `"#,0."`, which uses the thousands separator to format the number 100 million as the string "100,000,000".</span></span><br /><span data-ttu-id="05a32-385">-   `"#0,."`, bei dem die Skalierung mit dem Faktor 1000 verwendet wird, um die Zahl 100 Millionen als die Zeichenfolge "100000" zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-385">-   `"#0,."`, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</span></span><br /><span data-ttu-id="05a32-386">-   `"#,0,."`, bei dem das Tausender Trennzeichen und die Skalierung um 1000 verwendet werden, um die Zahl 100 Millionen als die Zeichenfolge "100.000" zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-386">-   `"#,0,."`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</span></span>|  
|<span data-ttu-id="05a32-387">(`:`)</span><span class="sxs-lookup"><span data-stu-id="05a32-387">(`:`)</span></span>|<span data-ttu-id="05a32-388">Zeittrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-388">Time separator.</span></span> <span data-ttu-id="05a32-389">In einigen Gebietsschemas werden unter Umständen andere Zeichen als Zeittrennzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-389">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="05a32-390">Mit dem Zeittrennzeichen werden Stunden, Minuten und Sekunden beim Formatieren von Zeitwerten getrennt.</span><span class="sxs-lookup"><span data-stu-id="05a32-390">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="05a32-391">Welches Zeichen tatsächlich als Zeittrennzeichen in der formatierten Ausgabe verwendet wird, hängt von den Systemeinstellungen ab.</span><span class="sxs-lookup"><span data-stu-id="05a32-391">The actual character used as the time separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="05a32-392">(`/`)</span><span class="sxs-lookup"><span data-stu-id="05a32-392">(`/`)</span></span>|<span data-ttu-id="05a32-393">Datumstrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-393">Date separator.</span></span> <span data-ttu-id="05a32-394">In einigen Gebietsschemas werden unter Umständen andere Zeichen als Datumstrennzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-394">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="05a32-395">Mit dem Datumstrennzeichen werden Tag, Monat und Jahr beim Formatieren der Datumswerte getrennt.</span><span class="sxs-lookup"><span data-stu-id="05a32-395">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="05a32-396">Welches Zeichen tatsächlich als Datumstrennzeichen in der formatierten Ausgabe verwendet wird, hängt von den Systemeinstellungen ab.</span><span class="sxs-lookup"><span data-stu-id="05a32-396">The actual character used as the date separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="05a32-397">(`E-``E+``e-``e+`)</span><span class="sxs-lookup"><span data-stu-id="05a32-397">(`E-``E+``e-``e+`)</span></span>|<span data-ttu-id="05a32-398">Wissenschaftliches Format.</span><span class="sxs-lookup"><span data-stu-id="05a32-398">Scientific format.</span></span> <span data-ttu-id="05a32-399">Wenn der Format Ausdruck mindestens einen Ziffern Platzhalter (`0` oder `#`) Links von `E-`, `E+`, `e-`oder `e+`enthält, wird die Zahl im wissenschaftlichen Format angezeigt, und `E` oder `e` wird zwischen der Zahl und dem Exponenten eingefügt.</span><span class="sxs-lookup"><span data-stu-id="05a32-399">If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent.</span></span> <span data-ttu-id="05a32-400">Die Anzahl der Ziffernplatzhalter auf der linken Seite legt die Anzahl der Ziffern im Exponenten fest.</span><span class="sxs-lookup"><span data-stu-id="05a32-400">The number of digit placeholders to the left determines the number of digits in the exponent.</span></span> <span data-ttu-id="05a32-401">Verwenden Sie `E-` oder `e-`, um ein Minuszeichen neben negativen Exponenten zu platzieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-401">Use `E-` or `e-` to place a minus sign next to negative exponents.</span></span> <span data-ttu-id="05a32-402">Verwenden Sie `E+` oder `e+`, um ein Minuszeichen neben negativen Exponenten und ein Pluszeichen neben positiven Exponenten zu platzieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-402">Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents.</span></span> <span data-ttu-id="05a32-403">Um die richtige Formatierung zu gewährleisten, müssen Sie rechts von diesem Symbol auch Ziffernplatzhalter einschließen.</span><span class="sxs-lookup"><span data-stu-id="05a32-403">You must also include digit placeholders to the right of this symbol to get correct formatting.</span></span>|  
|<span data-ttu-id="05a32-404">`-` `+` `$` ()</span><span class="sxs-lookup"><span data-stu-id="05a32-404">`-` `+` `$` ( )</span></span>|<span data-ttu-id="05a32-405">Literalzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-405">Literal characters.</span></span> <span data-ttu-id="05a32-406">Diese Zeichen werden genau so angezeigt, wie sie in der Formatzeichenfolge eingegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="05a32-406">These characters are displayed exactly as typed in the format string.</span></span> <span data-ttu-id="05a32-407">Um ein anderes Zeichen als eines der aufgelisteten anzuzeigen, stellen Sie ihm einen umgekehrten Schrägstrich (`\`) voran, oder schließen Sie ihn in doppelte Anführungszeichen ("") ein.</span><span class="sxs-lookup"><span data-stu-id="05a32-407">To display a character other than one of those listed, precede it with a backslash (`\`) or enclose it in double quotation marks (" ").</span></span>|  
|<span data-ttu-id="05a32-408">(`\`)</span><span class="sxs-lookup"><span data-stu-id="05a32-408">(`\`)</span></span>|<span data-ttu-id="05a32-409">Zeigt das nächste Zeichen in der Formatzeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="05a32-409">Displays the next character in the format string.</span></span> <span data-ttu-id="05a32-410">Um ein Zeichen anzuzeigen, das eine besondere Bedeutung als Literalzeichen aufweist, stellen Sie ihm einen umgekehrten Schrägstrich (`\`) voran.</span><span class="sxs-lookup"><span data-stu-id="05a32-410">To display a character that has special meaning as a literal character, precede it with a backslash (`\`).</span></span> <span data-ttu-id="05a32-411">Der umgekehrte Schrägstrich selbst wird nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-411">The backslash itself isn't displayed.</span></span> <span data-ttu-id="05a32-412">Das Verwenden des umgekehrten Schrägstrichs ist gleichbedeutend mit dem Einschließen des nächsten Zeichens in doppelte Anführungszeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-412">Using a backslash is the same as enclosing the next character in double quotation marks.</span></span> <span data-ttu-id="05a32-413">Um einen umgekehrten Schrägstrich anzuzeigen, verwenden Sie zwei umgekehrte Schrägstriche (`\\`).</span><span class="sxs-lookup"><span data-stu-id="05a32-413">To display a backslash, use two backslashes (`\\`).</span></span><br /><br /> <span data-ttu-id="05a32-414">Beispiele für Zeichen, die nicht als Literalzeichen angezeigt werden können, sind die Datums-und Zeit Formatierungszeichen (`a``c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`und `:`), die numerischen Formatierungszeichen (`#`, `0`, `%`, `E`, `e`, Komma und Zeitraum) und die Zeichen für die Zeichen folgen Formatierung (`@`, `&`, `<`, `>`und `!`).</span><span class="sxs-lookup"><span data-stu-id="05a32-414">Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).</span></span>|  
|<span data-ttu-id="05a32-415">(`"``ABC``"`)</span><span class="sxs-lookup"><span data-stu-id="05a32-415">(`"``ABC``"`)</span></span>|<span data-ttu-id="05a32-416">Zeigt die Zeichenfolge innerhalb der doppelten Anführungszeichen (" ") an.</span><span class="sxs-lookup"><span data-stu-id="05a32-416">Displays the string inside the double quotation marks (" ").</span></span> <span data-ttu-id="05a32-417">Wenn Sie eine Zeichenfolge aus dem Code in das Style-Argument einschließen möchten, müssen Sie `Chr(34)` verwenden, um den Text einzuschließen (`34` ist der Zeichencode für ein Anführungszeichen (")).</span><span class="sxs-lookup"><span data-stu-id="05a32-417">To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (")).</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="05a32-418">Legacycodebeispiel</span><span class="sxs-lookup"><span data-stu-id="05a32-418">Legacy Code Example</span></span>  
 <span data-ttu-id="05a32-419">In der folgenden Tabelle sind einige Beispiele für Zahlenformatausdrücke aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="05a32-419">The following table contains some sample format expressions for numbers.</span></span> <span data-ttu-id="05a32-420">(Bei diesen Beispielen wird davon ausgegangen, dass die Gebiets Schema Einstellung des Systems auf Englisch-U. s festgelegt ist.) Die erste Spalte enthält die Format Zeichenfolgen für das `Style`-Argument der `Format`-Funktion. die anderen Spalten enthalten die resultierende Ausgabe, wenn die formatierten Daten den Wert aufweisen, der in den Spaltenüberschriften angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-420">(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</span></span>  
  
|<span data-ttu-id="05a32-421">Format (`Style`)</span><span class="sxs-lookup"><span data-stu-id="05a32-421">Format (`Style`)</span></span>|<span data-ttu-id="05a32-422">Formatierung von "5"</span><span class="sxs-lookup"><span data-stu-id="05a32-422">"5" formatted as</span></span>|<span data-ttu-id="05a32-423">Formatierung von "-5"</span><span class="sxs-lookup"><span data-stu-id="05a32-423">"-5" formatted as</span></span>|<span data-ttu-id="05a32-424">Formatierung von "0.5"</span><span class="sxs-lookup"><span data-stu-id="05a32-424">"0.5" formatted as</span></span>|  
|-|-|-|-|  
|`Zero-length string ("")`|`5`|`-5`|`0.5`|  
|`0`|`5`|`-5`|`1`|  
|`0.00`|`5.00`|`-5.00`|`0.50`|  
|`#,##0`|`5`|`-5`|`1`|  
|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  
|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  
|`0%`|`500%`|`-500%`|`50%`|  
|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  
|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  
|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  
  
## <a name="predefined-datetime-formats"></a><span data-ttu-id="05a32-425">Vordefinierte Datums-/Uhrzeitformate</span><span class="sxs-lookup"><span data-stu-id="05a32-425">Predefined Date/Time Formats</span></span>  
 <span data-ttu-id="05a32-426">Die folgende Tabelle enthält eine Übersicht über die vordefinierten Datums- und Uhrzeitformate.</span><span class="sxs-lookup"><span data-stu-id="05a32-426">The following table identifies the predefined date and time format names.</span></span> <span data-ttu-id="05a32-427">Diese können nach Namen als Format Argument für die `Format`-Funktion verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="05a32-427">These may be used by name as the style argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="05a32-428">Formatname</span><span class="sxs-lookup"><span data-stu-id="05a32-428">Format Name</span></span>|<span data-ttu-id="05a32-429">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-429">Description</span></span>|  
|-|-|  
|<span data-ttu-id="05a32-430">`General Date` oder `G`</span><span class="sxs-lookup"><span data-stu-id="05a32-430">`General Date`, or `G`</span></span>|<span data-ttu-id="05a32-431">Zeigt ein Datum und/oder eine Uhrzeit an.</span><span class="sxs-lookup"><span data-stu-id="05a32-431">Displays a date and/or time.</span></span> <span data-ttu-id="05a32-432">Beispiel: `3/12/2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="05a32-432">For example, `3/12/2008 11:07:31 AM`.</span></span> <span data-ttu-id="05a32-433">Die Datumsanzeige wird vom aktuellen Kulturwert der Anwendung bestimmt.</span><span class="sxs-lookup"><span data-stu-id="05a32-433">Date display is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="05a32-434">`Long Date`, `Medium Date` oder `D`</span><span class="sxs-lookup"><span data-stu-id="05a32-434">`Long Date`, `Medium Date`, or `D`</span></span>|<span data-ttu-id="05a32-435">Zeigt ein Datum entsprechend dem langen Datumsformat Ihrer aktuellen Kultureinstellung an.</span><span class="sxs-lookup"><span data-stu-id="05a32-435">Displays a date according to your current culture's long date format.</span></span> <span data-ttu-id="05a32-436">Beispiel: `Wednesday, March 12, 2008`.</span><span class="sxs-lookup"><span data-stu-id="05a32-436">For example, `Wednesday, March 12, 2008`.</span></span>|  
|<span data-ttu-id="05a32-437">`Short Date` oder `d`</span><span class="sxs-lookup"><span data-stu-id="05a32-437">`Short Date`, or `d`</span></span>|<span data-ttu-id="05a32-438">Zeigt ein Datum an, indem das kurze Datumsformat Ihrer aktuellen Kultureinstellung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-438">Displays a date using your current culture's short date format.</span></span> <span data-ttu-id="05a32-439">Beispiel: `3/12/2008`.</span><span class="sxs-lookup"><span data-stu-id="05a32-439">For example, `3/12/2008`.</span></span><br /><br /> <span data-ttu-id="05a32-440">Das `d` Zeichen zeigt den Tag in einem benutzerdefinierten Datumsformat an.</span><span class="sxs-lookup"><span data-stu-id="05a32-440">The `d` character displays the day in a user-defined date format.</span></span>|  
|<span data-ttu-id="05a32-441">`Long Time`, `Medium Time` oder `T`</span><span class="sxs-lookup"><span data-stu-id="05a32-441">`Long Time`, `Medium Time`, or `T`</span></span>|<span data-ttu-id="05a32-442">Zeigt eine Uhrzeit an, indem das lange Uhrzeitformat Ihrer aktuellen Kultureinstellung verwendet wird. Normalerweise werden Stunden, Minuten und Sekunden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-442">Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</span></span> <span data-ttu-id="05a32-443">Beispiel: `11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="05a32-443">For example, `11:07:31 AM`.</span></span>|  
|<span data-ttu-id="05a32-444">`Short Time` oder `t`</span><span class="sxs-lookup"><span data-stu-id="05a32-444">`Short Time` or `t`</span></span>|<span data-ttu-id="05a32-445">Zeigt eine Uhrzeit an, indem das kurze Uhrzeitformat Ihrer aktuellen Kultureinstellung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-445">Displays a time using your current culture's short time format.</span></span> <span data-ttu-id="05a32-446">Beispiel: `11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="05a32-446">For example, `11:07 AM`.</span></span><br /><br /> <span data-ttu-id="05a32-447">Das `t` Zeichen zeigt `AM` oder `PM` Werte für Gebiets Schemas an, die ein 12-Stunden-Format in einem benutzerdefinierten Zeitformat verwenden.</span><span class="sxs-lookup"><span data-stu-id="05a32-447">The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.</span></span>|  
|`f`|<span data-ttu-id="05a32-448">Zeigt das lange Datum und die kurze Uhrzeit an, indem das Format Ihrer aktuellen Kultureinstellung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-448">Displays the long date and short time according to your current culture's format.</span></span> <span data-ttu-id="05a32-449">Beispiel: `Wednesday, March 12, 2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="05a32-449">For example, `Wednesday, March 12, 2008 11:07 AM`.</span></span>|  
|`F`|<span data-ttu-id="05a32-450">Zeigt das lange Datum und die lange Uhrzeit an, indem das Format Ihrer aktuellen Kultureinstellung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-450">Displays the long date and long time according to your current culture's format.</span></span> <span data-ttu-id="05a32-451">Beispiel: `Wednesday, March 12, 2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="05a32-451">For example, `Wednesday, March 12, 2008 11:07:31 AM`.</span></span>|  
|`g`|<span data-ttu-id="05a32-452">Zeigt das kurze Datum und die kurze Uhrzeit an, indem das Format Ihrer aktuellen Kultureinstellung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-452">Displays the short date and short time according to your current culture's format.</span></span> <span data-ttu-id="05a32-453">Beispiel: `3/12/2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="05a32-453">For example, `3/12/2008 11:07 AM`.</span></span>|  
|<span data-ttu-id="05a32-454">`M`, `m`</span><span class="sxs-lookup"><span data-stu-id="05a32-454">`M`, `m`</span></span>|<span data-ttu-id="05a32-455">Zeigt den Monat und den Tag eines Datums an.</span><span class="sxs-lookup"><span data-stu-id="05a32-455">Displays the month and the day of a date.</span></span> <span data-ttu-id="05a32-456">Beispiel: `March 12`.</span><span class="sxs-lookup"><span data-stu-id="05a32-456">For example, `March 12`.</span></span><br /><br /> <span data-ttu-id="05a32-457">Das `M` Zeichen zeigt den Monat in einem benutzerdefinierten Datumsformat an.</span><span class="sxs-lookup"><span data-stu-id="05a32-457">The `M` character displays the month in a user-defined date format.</span></span> <span data-ttu-id="05a32-458">Das `m` Zeichen zeigt die Minuten in einem benutzerdefinierten Zeitformat an.</span><span class="sxs-lookup"><span data-stu-id="05a32-458">The `m` character displays the minutes in a user-defined time format.</span></span>|  
|<span data-ttu-id="05a32-459">`R`, `r`</span><span class="sxs-lookup"><span data-stu-id="05a32-459">`R`, `r`</span></span>|<span data-ttu-id="05a32-460">Formatiert das Datum gemäß der <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="05a32-460">Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property.</span></span> <span data-ttu-id="05a32-461">Beispiel: `Wed, 12 Mar 2008 11:07:31 GMT`.</span><span class="sxs-lookup"><span data-stu-id="05a32-461">For example, `Wed, 12 Mar 2008 11:07:31 GMT`.</span></span> <span data-ttu-id="05a32-462">Das formatierte Datum passt dabei nicht den Wert des Datums und der Uhrzeit an.</span><span class="sxs-lookup"><span data-stu-id="05a32-462">The formatted date does not adjust the value of the date and time.</span></span> <span data-ttu-id="05a32-463">Sie müssen den Datums-/Uhrzeitwert in GMT ändern, bevor Sie die `Format`-Funktion aufrufen.</span><span class="sxs-lookup"><span data-stu-id="05a32-463">You must adjust the Date/Time value to GMT before calling the `Format` function.</span></span>|  
|`s`|<span data-ttu-id="05a32-464">Formatiert das Datum und die Uhrzeit als sortierbaren Index.</span><span class="sxs-lookup"><span data-stu-id="05a32-464">Formats the date and time as a sortable index.</span></span> <span data-ttu-id="05a32-465">Beispiel: `2008-03-12T11:07:31`.</span><span class="sxs-lookup"><span data-stu-id="05a32-465">For example, `2008-03-12T11:07:31`.</span></span><br /><br /> <span data-ttu-id="05a32-466">Das `s` Zeichen zeigt die Sekunden in einem benutzerdefinierten Zeitformat an.</span><span class="sxs-lookup"><span data-stu-id="05a32-466">The `s` character displays the seconds in a user-defined time format.</span></span>|  
|`u`|<span data-ttu-id="05a32-467">Formatiert das Datum und die Uhrzeit als sortierbaren GMT-Index.</span><span class="sxs-lookup"><span data-stu-id="05a32-467">Formats the date and time as a GMT sortable index.</span></span> <span data-ttu-id="05a32-468">Beispiel: `2008-03-12 11:07:31Z`.</span><span class="sxs-lookup"><span data-stu-id="05a32-468">For example, `2008-03-12 11:07:31Z`.</span></span>|  
|`U`|<span data-ttu-id="05a32-469">Formatiert das Datum und die Uhrzeit jeweils im langen GMT-Format.</span><span class="sxs-lookup"><span data-stu-id="05a32-469">Formats the date and time with the long date and long time as GMT.</span></span> <span data-ttu-id="05a32-470">Beispiel: `Wednesday, March 12, 2008 6:07:31 PM`.</span><span class="sxs-lookup"><span data-stu-id="05a32-470">For example, `Wednesday, March 12, 2008 6:07:31 PM`.</span></span>|  
|<span data-ttu-id="05a32-471">`Y`, `y`</span><span class="sxs-lookup"><span data-stu-id="05a32-471">`Y`, `y`</span></span>|<span data-ttu-id="05a32-472">Formatiert das Datum als Jahr und Monat.</span><span class="sxs-lookup"><span data-stu-id="05a32-472">Formats the date as the year and month.</span></span> <span data-ttu-id="05a32-473">Beispiel: `March, 2008`.</span><span class="sxs-lookup"><span data-stu-id="05a32-473">For example, `March, 2008`.</span></span><br /><br /> <span data-ttu-id="05a32-474">In den `Y`-und `y` Zeichen wird das Jahr in einem benutzerdefinierten Datumsformat angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-474">The `Y` and `y` characters display the year in a user-defined date format.</span></span>|  
  
 <span data-ttu-id="05a32-475">Weitere Informationen zu den aktuellen Kultur Informationen der Anwendung finden Sie unter [so wirkt sich die Kultur auf Zeichen folgen in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings)aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-475">For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings).</span></span>  
  
## <a name="user-defined-datetime-formats"></a><span data-ttu-id="05a32-476">Benutzerdefinierte Datums-/Uhrzeitformate</span><span class="sxs-lookup"><span data-stu-id="05a32-476">User-Defined Date/Time Formats</span></span>  
 <span data-ttu-id="05a32-477">In der folgenden Tabelle sind die Zeichen aufgeführt, mit denen Sie benutzerdefinierte Datums- und Uhrzeitformate erstellen können.</span><span class="sxs-lookup"><span data-stu-id="05a32-477">The following table shows characters you can use to create user-defined date/time formats.</span></span> <span data-ttu-id="05a32-478">Anders als in früheren Versionen von Visual Basic wird bei diesen Formatzeichen die Groß-/Kleinschreibung beachtet.</span><span class="sxs-lookup"><span data-stu-id="05a32-478">Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</span></span>  
  
|<span data-ttu-id="05a32-479">Zeichen</span><span class="sxs-lookup"><span data-stu-id="05a32-479">Character</span></span>|<span data-ttu-id="05a32-480">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-480">Description</span></span>|  
|-|-|  
|<span data-ttu-id="05a32-481">(`:`)</span><span class="sxs-lookup"><span data-stu-id="05a32-481">(`:`)</span></span>|<span data-ttu-id="05a32-482">Zeittrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-482">Time separator.</span></span> <span data-ttu-id="05a32-483">In einigen Gebietsschemas werden unter Umständen andere Zeichen als Zeittrennzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-483">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="05a32-484">Mit dem Zeittrennzeichen werden Stunden, Minuten und Sekunden beim Formatieren von Zeitwerten getrennt.</span><span class="sxs-lookup"><span data-stu-id="05a32-484">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="05a32-485">Das tatsächliche Zeichen, das in der formatierten Ausgabe als Zeittrennzeichen verwendet wird, wird durch den jeweiligen Kulturwert der Anwendung vorgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-485">The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="05a32-486">(`/`)</span><span class="sxs-lookup"><span data-stu-id="05a32-486">(`/`)</span></span>|<span data-ttu-id="05a32-487">Datumstrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-487">Date separator.</span></span> <span data-ttu-id="05a32-488">In einigen Gebietsschemas werden unter Umständen andere Zeichen als Datumstrennzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-488">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="05a32-489">Mit dem Datumstrennzeichen werden Tag, Monat und Jahr beim Formatieren der Datumswerte getrennt.</span><span class="sxs-lookup"><span data-stu-id="05a32-489">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="05a32-490">Das tatsächliche Zeichen, das in der formatierten Ausgabe als Datumstrennzeichen verwendet wird, wird durch den jeweiligen Kulturwert der Anwendung vorgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-490">The actual character that is used as the date separator in formatted output is determined by your application's current culture.</span></span>|  
|<span data-ttu-id="05a32-491">(`%`)</span><span class="sxs-lookup"><span data-stu-id="05a32-491">(`%`)</span></span>|<span data-ttu-id="05a32-492">Wird verwendet, um anzugeben, dass das folgende Zeichen ohne Rücksicht auf alle nachfolgenden Buchstaben als Einzelbuchstabenformat gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="05a32-492">Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</span></span> <span data-ttu-id="05a32-493">Damit wird auch angegeben, dass ein Einzelbuchstabenformat als benutzerdefiniertes Format gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-493">Also used to indicate that a single-letter format is read as a user-defined format.</span></span> <span data-ttu-id="05a32-494">Weitere Informationen hierzu finden Sie weiter unten.</span><span class="sxs-lookup"><span data-stu-id="05a32-494">See what follows for additional details.</span></span>|  
|`d`|<span data-ttu-id="05a32-495">Zeigt den Tag als Zahl ohne führende Null an (z. b. `1`).</span><span class="sxs-lookup"><span data-stu-id="05a32-495">Displays the day as a number without a leading zero (for example, `1`).</span></span> <span data-ttu-id="05a32-496">Verwenden Sie `%d`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-496">Use `%d` if this is the only character in your user-defined numeric format.</span></span>|  
|`dd`|<span data-ttu-id="05a32-497">Zeigt den Tag als Zahl mit einer führenden Null an (z. b. `01`).</span><span class="sxs-lookup"><span data-stu-id="05a32-497">Displays the day as a number with a leading zero (for example, `01`).</span></span>|  
|`ddd`|<span data-ttu-id="05a32-498">Zeigt den Tag als Abkürzung an (z. b. `Sun`).</span><span class="sxs-lookup"><span data-stu-id="05a32-498">Displays the day as an abbreviation (for example, `Sun`).</span></span>|  
|`dddd`|<span data-ttu-id="05a32-499">Zeigt den Tag als vollständigen Namen an (z. b. `Sunday`).</span><span class="sxs-lookup"><span data-stu-id="05a32-499">Displays the day as a full name (for example, `Sunday`).</span></span>|  
|`M`|<span data-ttu-id="05a32-500">Zeigt den Monat als Zahl ohne führende Null an (der Januar wird z. b. als `1`dargestellt).</span><span class="sxs-lookup"><span data-stu-id="05a32-500">Displays the month as a number without a leading zero (for example, January is represented as `1`).</span></span> <span data-ttu-id="05a32-501">Verwenden Sie `%M`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-501">Use `%M` if this is the only character in your user-defined numeric format.</span></span>|  
|`MM`|<span data-ttu-id="05a32-502">Zeigt den Monat als Zahl mit einer führenden Null an (z. b. `01/12/01`).</span><span class="sxs-lookup"><span data-stu-id="05a32-502">Displays the month as a number with a leading zero (for example, `01/12/01`).</span></span>|  
|`MMM`|<span data-ttu-id="05a32-503">Zeigt den Monat als Abkürzung an (z. b. `Jan`).</span><span class="sxs-lookup"><span data-stu-id="05a32-503">Displays the month as an abbreviation (for example, `Jan`).</span></span>|  
|`MMMM`|<span data-ttu-id="05a32-504">Zeigt den Monat als vollständigen Monatsnamen an (z. b. `January`).</span><span class="sxs-lookup"><span data-stu-id="05a32-504">Displays the month as a full month name (for example, `January`).</span></span>|  
|`gg`|<span data-ttu-id="05a32-505">Zeigt die Zeichenfolge für den Zeitraum/das Zeichen an (z. b. `A.D.`).</span><span class="sxs-lookup"><span data-stu-id="05a32-505">Displays the period/era string (for example, `A.D.`).</span></span>|  
|`h`|<span data-ttu-id="05a32-506">Zeigt die Stunde als Zahl ohne führende Nullen im 12-Stunden-Format an (z. b. `1:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="05a32-506">Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`).</span></span> <span data-ttu-id="05a32-507">Verwenden Sie `%h`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-507">Use `%h` if this is the only character in your user-defined numeric format.</span></span>|  
|`hh`|<span data-ttu-id="05a32-508">Zeigt die Stunde als Zahl mit führenden Nullen im 12-Stunden-Format an (z. b. `01:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="05a32-508">Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).</span></span>|  
|`H`|<span data-ttu-id="05a32-509">Zeigt die Stunde als Zahl ohne führende Nullen im 24-Stunden-Format an (z. b. `1:15:15`).</span><span class="sxs-lookup"><span data-stu-id="05a32-509">Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`).</span></span> <span data-ttu-id="05a32-510">Verwenden Sie `%H`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-510">Use `%H` if this is the only character in your user-defined numeric format.</span></span>|  
|`HH`|<span data-ttu-id="05a32-511">Zeigt die Stunde als Zahl mit führenden Nullen im 24-Stunden-Format an (z. b. `01:15:15`).</span><span class="sxs-lookup"><span data-stu-id="05a32-511">Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).</span></span>|  
|`m`|<span data-ttu-id="05a32-512">Zeigt die Minute als Zahl ohne führende Nullen an (z. b. `12:1:15`).</span><span class="sxs-lookup"><span data-stu-id="05a32-512">Displays the minute as a number without leading zeros (for example, `12:1:15`).</span></span> <span data-ttu-id="05a32-513">Verwenden Sie `%m`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-513">Use `%m` if this is the only character in your user-defined numeric format.</span></span>|  
|`mm`|<span data-ttu-id="05a32-514">Zeigt die Minute als Zahl mit führenden Nullen an (z. b. `12:01:15`).</span><span class="sxs-lookup"><span data-stu-id="05a32-514">Displays the minute as a number with leading zeros (for example, `12:01:15`).</span></span>|  
|`s`|<span data-ttu-id="05a32-515">Zeigt die Sekunde als Zahl ohne führende Nullen an (z. b. `12:15:5`).</span><span class="sxs-lookup"><span data-stu-id="05a32-515">Displays the second as a number without leading zeros (for example, `12:15:5`).</span></span> <span data-ttu-id="05a32-516">Verwenden Sie `%s`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-516">Use `%s` if this is the only character in your user-defined numeric format.</span></span>|  
|`ss`|<span data-ttu-id="05a32-517">Zeigt die Sekunde als Zahl mit führenden Nullen an (z. b. `12:15:05`).</span><span class="sxs-lookup"><span data-stu-id="05a32-517">Displays the second as a number with leading zeros (for example, `12:15:05`).</span></span>|  
|`f`|<span data-ttu-id="05a32-518">Zeigt Sekundenbruchteile an.</span><span class="sxs-lookup"><span data-stu-id="05a32-518">Displays fractions of seconds.</span></span> <span data-ttu-id="05a32-519">Beispielsweise `ff` die Hundertstel Sekunden anzeigt, während `ffff` zehntausendstel Sekunden anzeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-519">For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds.</span></span> <span data-ttu-id="05a32-520">Sie können bis zu sieben `f`-Symbole in Ihrem benutzerdefinierten Format verwenden.</span><span class="sxs-lookup"><span data-stu-id="05a32-520">You may use up to seven `f` symbols in your user-defined format.</span></span> <span data-ttu-id="05a32-521">Verwenden Sie `%f`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-521">Use `%f` if this is the only character in your user-defined numeric format.</span></span>|  
|`t`|<span data-ttu-id="05a32-522">Verwendet das 12-Stunden-Format und zeigt einen Großbuchstaben `A` für jede Stunde vor 12 Uhr mittags an. zeigt einen Großbuchstaben `P` für jede Stunde zwischen 12 Uhr mittags und 11:59 Uhr an.</span><span class="sxs-lookup"><span data-stu-id="05a32-522">Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M.</span></span> <span data-ttu-id="05a32-523">Verwenden Sie `%t`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-523">Use `%t` if this is the only character in your user-defined numeric format.</span></span>|  
|`tt`|<span data-ttu-id="05a32-524">Für Gebiets Schemas, die ein 12-Stunden-Format verwenden, wird ein Großbuchstabe `AM` mit einer beliebigen Stunde vor 12 Uhr mittags angezeigt. zeigt einen Großbuchstaben `PM` mit einer Stunde zwischen 12 Uhr mittags und 11:59 Uhr</span><span class="sxs-lookup"><span data-stu-id="05a32-524">For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.</span></span><br /><br /> <span data-ttu-id="05a32-525">Für Gebietsschemas, die das 24-Stunden-Format verwenden, wird nichts angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-525">For locales that use a 24-hour clock, displays nothing.</span></span>|  
|`y`|<span data-ttu-id="05a32-526">Zeigt die Jahreszahl (0-9) ohne führende Nullen an.</span><span class="sxs-lookup"><span data-stu-id="05a32-526">Displays the year number (0-9) without leading zeros.</span></span> <span data-ttu-id="05a32-527">Verwenden Sie `%y`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-527">Use `%y` if this is the only character in your user-defined numeric format.</span></span>|  
|`yy`|<span data-ttu-id="05a32-528">Zeigt das Jahr in numerischem Format zweistellig mit einer führenden Null an, falls zutreffend.</span><span class="sxs-lookup"><span data-stu-id="05a32-528">Displays the year in two-digit numeric format with a leading zero, if applicable.</span></span>|  
|`yyy`|<span data-ttu-id="05a32-529">Zeigt das Jahr im numerischen Format vierstellig an.</span><span class="sxs-lookup"><span data-stu-id="05a32-529">Displays the year in four-digit numeric format.</span></span>|  
|`yyyy`|<span data-ttu-id="05a32-530">Zeigt das Jahr im numerischen Format vierstellig an.</span><span class="sxs-lookup"><span data-stu-id="05a32-530">Displays the year in four-digit numeric format.</span></span>|  
|`z`|<span data-ttu-id="05a32-531">Zeigt den Zeit Zonen Offset ohne führende Null an (z. b. `-8`).</span><span class="sxs-lookup"><span data-stu-id="05a32-531">Displays the timezone offset without a leading zero (for example, `-8`).</span></span> <span data-ttu-id="05a32-532">Verwenden Sie `%z`, wenn dies das einzige Zeichen im benutzerdefinierten numerischen Format ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-532">Use `%z` if this is the only character in your user-defined numeric format.</span></span>|  
|`zz`|<span data-ttu-id="05a32-533">Zeigt den Zeit Zonen Offset mit einer führenden Null an (z. b. `-08`).</span><span class="sxs-lookup"><span data-stu-id="05a32-533">Displays the timezone offset with a leading zero (for example, `-08`)</span></span>|  
|`zzz`|<span data-ttu-id="05a32-534">Zeigt den vollständigen Zeit Zonen Offset an (z. b. `-08:00`).</span><span class="sxs-lookup"><span data-stu-id="05a32-534">Displays the full timezone offset (for example, `-08:00`)</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="05a32-535">Legacycodebeispiel</span><span class="sxs-lookup"><span data-stu-id="05a32-535">Legacy Code Example</span></span>  
 <span data-ttu-id="05a32-536">Im folgenden finden Sie Beispiele für benutzerdefinierte Datums-und Uhrzeit Formate für `December 7, 1958, 8:50 PM, 35 seconds`:</span><span class="sxs-lookup"><span data-stu-id="05a32-536">The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:</span></span>  
  
|<span data-ttu-id="05a32-537">Format</span><span class="sxs-lookup"><span data-stu-id="05a32-537">Format</span></span>|<span data-ttu-id="05a32-538">Anzeige</span><span class="sxs-lookup"><span data-stu-id="05a32-538">Displays</span></span>|  
|-|-|  
|`M/d/yy`|`12/7/58`|  
|`d-MMM`|`7-Dec`|  
|`d-MMMM-yy`|`7-December-58`|  
|`d MMMM`|`7 December`|  
|`MMMM yy`|`December 58`|  
|`hh:mm tt`|`08:50 PM`|  
|`h:mm:ss t`|`8:50:35 P`|  
|`H:mm`|`20:50`|  
|`H:mm:ss`|`20:50:35`|  
|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-539">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-539">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-540">Die minimale Zeitauflösung für ein Gerät wird vom Hersteller des Geräts bestimmt.</span><span class="sxs-lookup"><span data-stu-id="05a32-540">The minimum time resolution for a device is determined by the manufacturer of the device.</span></span> <span data-ttu-id="05a32-541">Wenn die Zeitauflösung für das Gerät grob genug ist, gibt das `f` Formatzeichen 0 zurück, wenn es auf dem Gerät ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-541">If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-542">Dieses Beispiel zeigt verschiedene Verwendungsmöglichkeiten der `Format`-Funktion zur Formatierung von Werten mit `String`-Formaten und benutzerdefinierten Formaten.</span><span class="sxs-lookup"><span data-stu-id="05a32-542">This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats.</span></span> <span data-ttu-id="05a32-543">Die tatsächlich von Ihrem System ausgegebene Formatierung von Datumstrennzeichen (`/`), Trennzeichen für Zeitangaben (`:`) und AM/PM-Indikatoren (`t` und `tt`) richtet sich nach den Gebietsschemaeinstellungen des Codes.</span><span class="sxs-lookup"><span data-stu-id="05a32-543">For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using.</span></span> <span data-ttu-id="05a32-544">Wenn Datums- und Zeitangaben in der Entwicklungsumgebung angezeigt werden, werden das 24-Stunden-Zeitformat und das kurze Datumsformat des für den Code ausgewählten Gebietsschemas verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-544">When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-545">Für Gebietsschemas, die das 24-Stunden-Format verwenden, zeigen die AM/PM-Indikatoren (`t` und `tt`) nichts an.</span><span class="sxs-lookup"><span data-stu-id="05a32-545">For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.</span></span>  
  
 [!code-vb[VbVbalrStrings#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-546">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-546">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatCurrency">
      <MemberSignature Language="C#" Value="public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatCurrency (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatCurrency : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatCurrency (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-547">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-547">Required.</span></span> <span data-ttu-id="05a32-548">Der zu formatierende Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-548">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="05a32-549">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-549">Optional.</span></span> <span data-ttu-id="05a32-550">Numerischer Wert, der angibt, wie viele Stellen hinter dem Dezimaltrennzeichen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-550">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="05a32-551">Der Standardwert ist –1 und gibt an, dass die regionalen Einstellungen des Computers verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-551">Default value is -1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="05a32-552">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-552">Optional.</span></span> <span data-ttu-id="05a32-553"><see cref="T:Microsoft.VisualBasic.TriState" />-Enumeration, die angibt, ob bei Bruchwerten eine führende Null angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-553"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values.</span></span> <span data-ttu-id="05a32-554">Weitere Informationen finden Sie in den Hinweisen zu Werten.</span><span class="sxs-lookup"><span data-stu-id="05a32-554">See "Remarks" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="05a32-555">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-555">Optional.</span></span> <span data-ttu-id="05a32-556"><see cref="T:Microsoft.VisualBasic.TriState" />-Enumeration, die angibt, ob negative Werte in Klammern gesetzt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-556"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="05a32-557">Weitere Informationen finden Sie in den Hinweisen zu Werten.</span><span class="sxs-lookup"><span data-stu-id="05a32-557">See "Remarks" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="05a32-558">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-558">Optional.</span></span> <span data-ttu-id="05a32-559"><see cref="T:Microsoft.VisualBasic.TriState" />-Enumeration, die angibt, ob Zahlen mithilfe des Gruppentrennzeichens gruppiert werden, das in den regionalen Einstellungen des Computers definiert ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-559"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</span></span> <span data-ttu-id="05a32-560">Weitere Informationen finden Sie in den Hinweisen zu Werten.</span><span class="sxs-lookup"><span data-stu-id="05a32-560">See "Remarks" for values.</span></span></param>
        <summary><span data-ttu-id="05a32-561">Gibt einen Ausdruck als Währungsbetrag zurück, der mit dem in der Systemsteuerung festgelegten Währungssymbol formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-561">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></summary>
        <returns><span data-ttu-id="05a32-562">Ein mit dem in der Systemsteuerung festgelegten Währungssymbol als Währungsbetrag formatierter Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-562">An expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-563">Wenn ein oder mehrere optionale Argumente ausgelassen werden, werden stattdessen die entsprechenden Werte für die regionale Einstellungen des Computers verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-563">When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</span></span>  
  
 <span data-ttu-id="05a32-564">Die Position des Währungs Symbols in Relation zum Währungswert wird durch die regionalen Einstellungen des Systems bestimmt.</span><span class="sxs-lookup"><span data-stu-id="05a32-564">The position of the currency symbol relative to the currency value is determined by the system's regional settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-565">Alle Einstellungs Informationen stammen aus dem Gebiets Schema der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="05a32-565">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="05a32-566">Standardmäßig handelt es sich dabei um das in der Systemsteuerung festgelegte Gebiets Schema.</span><span class="sxs-lookup"><span data-stu-id="05a32-566">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="05a32-567">Sie kann jedoch Programm gesteuert mithilfe des .NET Framework geändert werden, mit Ausnahme der führenden Null-Werte, die von der `Number` Registerkarte stammen.</span><span class="sxs-lookup"><span data-stu-id="05a32-567">However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the `Number` tab.</span></span>  
  
 <span data-ttu-id="05a32-568">Die `IncludeLeadingDigit`-, `UseParensForNegativeNumbers`-und `GroupDigits`-Argumente akzeptieren die folgenden Enumerationswerte für "-Enumeration".</span><span class="sxs-lookup"><span data-stu-id="05a32-568">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments take the following TriState enumeration values.</span></span>  
  
|<span data-ttu-id="05a32-569">value</span><span class="sxs-lookup"><span data-stu-id="05a32-569">Value</span></span>|<span data-ttu-id="05a32-570">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-570">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="05a32-571">True</span><span class="sxs-lookup"><span data-stu-id="05a32-571">True</span></span>|  
|`TriState.False`|<span data-ttu-id="05a32-572">False</span><span class="sxs-lookup"><span data-stu-id="05a32-572">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="05a32-573">Die regionalen Einstellungen des Computers</span><span class="sxs-lookup"><span data-stu-id="05a32-573">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-574">Das folgende Beispiel veranschaulicht die Verwendung der `FormatCurrency`-Funktion.</span><span class="sxs-lookup"><span data-stu-id="05a32-574">The following example illustrates the use of the `FormatCurrency` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-575">Anzahl der Stellen nach dem Dezimalzeichen ist größer als 99.</span><span class="sxs-lookup"><span data-stu-id="05a32-575">Number of digits after decimal point is greater than 99.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="05a32-576">Typ ist nicht numerisch.</span><span class="sxs-lookup"><span data-stu-id="05a32-576">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-577">Zeichenfolgenbearbeitung</span><span class="sxs-lookup"><span data-stu-id="05a32-577">String Manipulation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatDateTime">
      <MemberSignature Language="C#" Value="public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatDateTime (Expression As DateTime, Optional NamedFormat As DateFormat = Microsoft.VisualBasic.DateFormat.GeneralDate) As String" />
      <MemberSignature Language="F#" Value="static member FormatDateTime : DateTime * Microsoft.VisualBasic.DateFormat -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatDateTime (Expression, NamedFormat)" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="NamedFormat" Type="Microsoft.VisualBasic.DateFormat" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-578">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-578">Required.</span></span> <span data-ttu-id="05a32-579"><see langword="Date" /> expression to be formatted.</span><span class="sxs-lookup"><span data-stu-id="05a32-579"><see langword="Date" /> expression to be formatted.</span></span></param>
        <param name="NamedFormat"><span data-ttu-id="05a32-580">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-580">Optional.</span></span> <span data-ttu-id="05a32-581">Numerischer Wert, der das verwendete Datum-/Zeitformat angibt.</span><span class="sxs-lookup"><span data-stu-id="05a32-581">Numeric value that indicates the date/time format used.</span></span> <span data-ttu-id="05a32-582">Wird der Wert nicht angegeben, so wird <see langword="DateFormat.GeneralDate" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-582">If omitted, <see langword="DateFormat.GeneralDate" /> is used.</span></span></param>
        <summary><span data-ttu-id="05a32-583">Gibt einen Zeichenfolgenausdruck für einen Datums- und Uhrzeitwert zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-583">Returns a string expression representing a date/time value.</span></span></summary>
        <returns><span data-ttu-id="05a32-584">Ein Zeichenfolgenausdruck, der einen Datums-/Zeitwert darstellt.</span><span class="sxs-lookup"><span data-stu-id="05a32-584">A string expression representing a date/time value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-585">Der `Date`-Datentyp enthält immer Datums-und Uhrzeit Informationen.</span><span class="sxs-lookup"><span data-stu-id="05a32-585">The `Date` data type always contains both date and time information.</span></span> <span data-ttu-id="05a32-586">Für den Zweck der Typkonvertierung berücksichtigt Visual Basic 1/1/1 (1. Januar des Jahres 1) als neutralen Wert für das Datum und 00:00:00 (Mitternacht) als neutralen Wert für die Zeit.</span><span class="sxs-lookup"><span data-stu-id="05a32-586">For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</span></span> <span data-ttu-id="05a32-587">Wenn Sie einen `Date` Wert als Datums-/Uhrzeitzeichenfolge formatieren, enthält `FormatDateTime` keine neutralen Werte in die resultierende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-587">If you format a `Date` value as a date/time string, `FormatDateTime` does not include neutral values in the resulting string.</span></span> <span data-ttu-id="05a32-588">Wenn Sie z. b. #1/1/0001 9:30:00 # in eine Zeichenfolge konvertieren, lautet das Ergebnis "9:30:00 am"; die Datumsinformationen werden unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="05a32-588">For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</span></span> <span data-ttu-id="05a32-589">Die Datumsinformationen sind jedoch weiterhin im ursprünglichen `Date` Wert vorhanden und können mit Funktionen wie `DatePart`wieder hergestellt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-589">However, the date information is still present in the original `Date` value and can be recovered with functions such as `DatePart`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-590">Wenn Sie das `Expression`-Argument als `String` Literale übergeben, interpretiert `FormatDateTime` es entsprechend der <xref:System.Globalization.CultureInfo.CurrentCulture%2A> Einstellung Ihrer Anwendung.</span><span class="sxs-lookup"><span data-stu-id="05a32-590">If you pass the `Expression` argument as a `String` literal, `FormatDateTime` interprets it according to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> setting of your application.</span></span> <span data-ttu-id="05a32-591">Wenn Sie es jedoch als `Date` Literale übergeben, verwenden Sie das Format #mm/dd/yyyy #, da `FormatDateTime` immer ein `Date` Literale gemäß der Kultur Englisch (USA) interpretiert.</span><span class="sxs-lookup"><span data-stu-id="05a32-591">However, if you pass it as a `Date` literal, use the format #mm/dd/yyyy#, because `FormatDateTime` always interprets a `Date` literal according to the English (US) culture.</span></span> <span data-ttu-id="05a32-592">Dies ist erforderlich, da die `Date` Literale möglicherweise falsch analysiert werden, wenn eine Anwendung mit `Date` literalen aus einer Kultur entwickelt und codiert, aber dann auf einer Plattform mit einer anderen Kultur ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-592">This is necessary because, if an application is developed and coded using `Date` literals from one culture, but is then executed on a platform with a different culture, the `Date` literals could be parsed incorrectly.</span></span>  
  
 <span data-ttu-id="05a32-593">Das `NamedFormat`-Argument weist die folgenden Einstellungen auf.</span><span class="sxs-lookup"><span data-stu-id="05a32-593">The `NamedFormat` argument has the following settings.</span></span>  
  
|<span data-ttu-id="05a32-594">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-594">Constant</span></span>|<span data-ttu-id="05a32-595">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-595">Description</span></span>|  
|-|-|  
|`DateFormat.GeneralDate`|<span data-ttu-id="05a32-596">Zeigt ein Datum und/oder eine Uhrzeit an.</span><span class="sxs-lookup"><span data-stu-id="05a32-596">Display a date and/or time.</span></span> <span data-ttu-id="05a32-597">Zeigt einen Datums Teil als kurzes Datum an.</span><span class="sxs-lookup"><span data-stu-id="05a32-597">Display a date part as a short date.</span></span> <span data-ttu-id="05a32-598">Wenn ein Zeit Teil vorhanden ist, zeigen Sie ihn als lange Zeit an.</span><span class="sxs-lookup"><span data-stu-id="05a32-598">If there is a time part, display it as a long time.</span></span> <span data-ttu-id="05a32-599">Wenn vorhanden, werden beide Teile angezeigt.</span><span class="sxs-lookup"><span data-stu-id="05a32-599">If present, both parts display.</span></span>|  
|`DateFormat.LongDate`|<span data-ttu-id="05a32-600">Zeigt ein Datum mit dem langen Datumsformat an, das in den regionalen Einstellungen des Computers angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-600">Display a date using the long date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortDate`|<span data-ttu-id="05a32-601">Zeigt ein Datum unter Verwendung des kurzen Datums Formats an, das in den regionalen Einstellungen des Computers angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-601">Display a date using the short date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.LongTime`|<span data-ttu-id="05a32-602">Zeigen Sie eine Uhrzeit mit dem Zeitformat an, das in den regionalen Einstellungen des Computers angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-602">Display a time using the time format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortTime`|<span data-ttu-id="05a32-603">Zeigt eine Uhrzeit mit dem 24-Stunden-Format (hh: mm) an.</span><span class="sxs-lookup"><span data-stu-id="05a32-603">Display a time using the 24-hour format (hh:mm).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-604">In diesem Beispiel wird die Verwendung der `FormatDateTime`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-604">This example demonstrates the use of the `FormatDateTime` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-605">Die Einstellung <paramref name="NamedFormat" /> ist nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="05a32-605"><paramref name="NamedFormat" /> setting is not valid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-606">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-606">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumber (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatNumber : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatNumber (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-607">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-607">Required.</span></span> <span data-ttu-id="05a32-608">Der zu formatierende Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-608">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="05a32-609">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-609">Optional.</span></span> <span data-ttu-id="05a32-610">Numerischer Wert, der angibt, wie viele Stellen hinter dem Dezimaltrennzeichen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-610">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="05a32-611">Der Standardwert ist –1 und gibt an, dass die regionalen Einstellungen des Computers verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-611">The default value is -1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="05a32-612">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-612">Optional.</span></span> <span data-ttu-id="05a32-613"><see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob bei Bruchwerten eine führende 0 angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-613"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values.</span></span> <span data-ttu-id="05a32-614">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-614">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="05a32-615">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-615">Optional.</span></span> <span data-ttu-id="05a32-616"><see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob negative Werte in Klammern gesetzt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-616"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses.</span></span> <span data-ttu-id="05a32-617">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-617">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="05a32-618">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-618">Optional.</span></span> <span data-ttu-id="05a32-619"><see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob Ziffern mithilfe des in den Gebietsschemaeinstellungen angegebenen Gruppentrennzeichens gruppiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05a32-619"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="05a32-620">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-620">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="05a32-621">Gibt einen als Zahl formatierten Ausdruck zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-621">Returns an expression formatted as a number.</span></span></summary>
        <returns><span data-ttu-id="05a32-622">Ein als Zahl formatierter Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-622">An expression formatted as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-623">Wenn mindestens ein optionales Argument weggelassen wird, werden die Werte für ausgelassene Argumente von den Gebiets Schema Einstellungen bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="05a32-623">When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-624">Alle Einstellungs Informationen stammen aus dem Gebiets Schema der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="05a32-624">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="05a32-625">Standardmäßig handelt es sich dabei um das in der Systemsteuerung festgelegte Gebiets Schema.</span><span class="sxs-lookup"><span data-stu-id="05a32-625">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="05a32-626">Sie kann jedoch mithilfe der .NET Framework Programm gesteuert geändert werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-626">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="05a32-627">Die Argumente `IncludeLeadingDigit`, `UseParensForNegativeNumbers`und `GroupDigits` haben die folgenden Einstellungen.</span><span class="sxs-lookup"><span data-stu-id="05a32-627">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="05a32-628">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-628">Constant</span></span>|<span data-ttu-id="05a32-629">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-629">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="05a32-630">True</span><span class="sxs-lookup"><span data-stu-id="05a32-630">True</span></span>|  
|`TriState.False`|<span data-ttu-id="05a32-631">False</span><span class="sxs-lookup"><span data-stu-id="05a32-631">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="05a32-632">Die regionalen Einstellungen des Computers</span><span class="sxs-lookup"><span data-stu-id="05a32-632">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-633">In diesem Beispiel wird die `FormatNumber`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-633">This example demonstrates the `FormatNumber` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="05a32-634">Typ ist nicht numerisch.</span><span class="sxs-lookup"><span data-stu-id="05a32-634">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-635">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-635">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatPercent">
      <MemberSignature Language="C#" Value="public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatPercent (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatPercent : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatPercent (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-636">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-636">Required.</span></span> <span data-ttu-id="05a32-637">Der zu formatierende Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-637">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="05a32-638">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-638">Optional.</span></span> <span data-ttu-id="05a32-639">Numerischer Wert, der angibt, wie viele Stellen rechts neben dem Dezimaltrennzeichen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-639">Numeric value indicating how many places to the right of the decimal are displayed.</span></span> <span data-ttu-id="05a32-640">Der Standardwert ist –1, was darauf hinweist, dass die Einstellungen des Gebietsschemas verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-640">Default value is -1, which indicates that the locale settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="05a32-641">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-641">Optional.</span></span> <span data-ttu-id="05a32-642"><see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob bei Dezimalzahlen eine führende Null angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="05a32-642"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values.</span></span> <span data-ttu-id="05a32-643">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-643">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="05a32-644">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-644">Optional.</span></span> <span data-ttu-id="05a32-645"><see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob negative Werte in Klammern gesetzt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05a32-645"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="05a32-646">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-646">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="05a32-647">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-647">Optional.</span></span> <span data-ttu-id="05a32-648"><see cref="T:Microsoft.VisualBasic.TriState" />-Konstante, die angibt, ob Ziffern mithilfe des in den Gebietsschemaeinstellungen angegebenen Gruppentrennzeichens gruppiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05a32-648"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="05a32-649">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-649">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="05a32-650">Gibt einen Ausdruck als Prozentangabe (d. h. multipliziert mit 100) und einem abschließenden %-Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-650">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></summary>
        <returns><span data-ttu-id="05a32-651">Ein als Prozentangabe (d. h. multipliziert mit 100) und mit einem abschließenden %-Zeichen formatierter Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-651">An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-652">Wenn ein oder mehrere optionale Argumente ausgelassen werden, werden die Werte für ausgelassene Argumente von den Gebiets Schema Einstellungen bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="05a32-652">When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-653">Alle Einstellungs Informationen stammen aus dem Gebiets Schema der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="05a32-653">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="05a32-654">Standardmäßig handelt es sich dabei um das in der Systemsteuerung festgelegte Gebiets Schema.</span><span class="sxs-lookup"><span data-stu-id="05a32-654">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="05a32-655">Sie kann jedoch mithilfe der .NET Framework Programm gesteuert geändert werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-655">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="05a32-656">Die Argumente `IncludeLeadingDigit`, `UseParensForNegativeNumbers`und `GroupDigits` haben die folgenden Einstellungen.</span><span class="sxs-lookup"><span data-stu-id="05a32-656">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="05a32-657">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-657">Constant</span></span>|<span data-ttu-id="05a32-658">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-658">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="05a32-659">True</span><span class="sxs-lookup"><span data-stu-id="05a32-659">True</span></span>|  
|`TriState.False`|<span data-ttu-id="05a32-660">False</span><span class="sxs-lookup"><span data-stu-id="05a32-660">False</span></span>|  
|`TriState.Default`|<span data-ttu-id="05a32-661">Die regionalen Einstellungen des Computers</span><span class="sxs-lookup"><span data-stu-id="05a32-661">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-662">In diesem Beispiel wird die Verwendung der `FormatPercent`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-662">This example illustrates the use of the `FormatPercent` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="05a32-663">Typ ist nicht numerisch.</span><span class="sxs-lookup"><span data-stu-id="05a32-663">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-664">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-664">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (string str, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char GetChar(string str, int32 Index) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (str As String, Index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char GetChar(System::String ^ str, int Index);" />
      <MemberSignature Language="F#" Value="static member GetChar : string * int -&gt; char" Usage="Microsoft.VisualBasic.Strings.GetChar (str, Index)" />
      <MemberSignature Language="ILAsm" Value=".method public static char GetChar(string str, int32 Index) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Index" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-665">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-665">Required.</span></span> <span data-ttu-id="05a32-666">Jeder gültige <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-666">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Index"><span data-ttu-id="05a32-667">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-667">Required.</span></span> <span data-ttu-id="05a32-668"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-668"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-669">Der (1-basierte) Index des Zeichens in <paramref name="str" />, der zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="05a32-669">The (1-based) index of the character in <paramref name="str" /> to be returned.</span></span></param>
        <summary><span data-ttu-id="05a32-670">Gibt einen <see langword="Char" />-Wert zurück, der das Zeichen am angegebenen Index in der angegebenen Zeichenfolge darstellt.</span><span class="sxs-lookup"><span data-stu-id="05a32-670">Returns a <see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></summary>
        <returns><span data-ttu-id="05a32-671"><see langword="Char" />-Wert, der das Zeichen am angegebenen Index in der angegebenen Zeichenfolge darstellt.</span><span class="sxs-lookup"><span data-stu-id="05a32-671"><see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-672">Wenn `Index` kleiner als 1 oder größer als der Index des letzten Zeichens in `str`ist, wird ein `ArgumentException` ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-672">If `Index` is less than 1 or greater than the index of the last character in `str`, an `ArgumentException` is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-673">In diesem Beispiel wird gezeigt, wie die `GetChar`-Funktion verwendet wird, um ein Zeichen aus einem angegebenen Index in einem `String`zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-673">This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.</span></span>  
  
 [!code-vb[VbVbalrStrings#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-674"><paramref name="str" /> ist <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 oder <paramref name="Index" /> ist größer als der Index des letzten Zeichens von <paramref name="str" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-674"><paramref name="str" /> is <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-675">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-675">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InStr">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-676">Gibt einen Integer-Wert zurück, der die Anfangsposition des ersten Auftretens einer Zeichenfolge innerhalb einer anderen Zeichenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="05a32-676">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span>  <span data-ttu-id="05a32-677">Die Ganzzahl ist ein auf Eins basierter Index, wenn eine Übereinstimmung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-677">The integer is a one-based index if a match is found.</span></span>  <span data-ttu-id="05a32-678">Wenn keine Übereinstimmung gefunden wird, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-678">If no match is found, the function returns zero.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (String1, String2, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="String2" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="05a32-679">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-679">Required.</span></span> <span data-ttu-id="05a32-680"><see langword="String" />-Ausdruck, der durchsucht wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-680"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="05a32-681">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-681">Required.</span></span> <span data-ttu-id="05a32-682">Gesuchter <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-682"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="05a32-683">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-683">Optional.</span></span> <span data-ttu-id="05a32-684">Gibt den Typ des Zeichenfolgenvergleichs an.</span><span class="sxs-lookup"><span data-stu-id="05a32-684">Specifies the type of string comparison.</span></span> <span data-ttu-id="05a32-685">Wenn <paramref name="Compare" /> ausgelassen wird, bestimmt die <see langword="Option Compare" />-Einstellung den Typ des Vergleichs.</span><span class="sxs-lookup"><span data-stu-id="05a32-685">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="05a32-686">Gibt einen Integer-Wert zurück, der die Anfangsposition des ersten Auftretens einer Zeichenfolge innerhalb einer anderen Zeichenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="05a32-686">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="05a32-687">Wenn</span><span class="sxs-lookup"><span data-stu-id="05a32-687">If</span></span> 
 </term>
              <description> <span data-ttu-id="05a32-688">Rückgabewert von InStr</span><span class="sxs-lookup"><span data-stu-id="05a32-688">InStr returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-689">
                <paramref name="String1" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-689">
                <paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="05a32-690">0</span><span class="sxs-lookup"><span data-stu-id="05a32-690">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-691">
                <paramref name="String2" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-691">
                <paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="05a32-692">Die Startposition für die Suche, mit Standard an der ersten Zeichenposition.</span><span class="sxs-lookup"><span data-stu-id="05a32-692">The starting position for the search, which defaults to the first character position.</span></span>  
  
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-693">
                <paramref name="String2" /> wird nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="05a32-693">
                <paramref name="String2" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="05a32-694">0</span><span class="sxs-lookup"><span data-stu-id="05a32-694">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-695">
                <paramref name="String2" /> wurde in <paramref name="String1" /> gefunden.</span><span class="sxs-lookup"><span data-stu-id="05a32-695">
                <paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="05a32-696">Position, an der die gefundene Zeichenfolge beginnt</span><span class="sxs-lookup"><span data-stu-id="05a32-696">Position where match begins</span></span> 
 </description>
            </item>
            <item>
              <term>
              </term>
              <description>
              </description>
            </item>
          </list>
<span data-ttu-id="05a32-697">erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-697">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-698">In der Regel wird die `InStr`-Funktion verwendet, wenn Zeichen folgen verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-698">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-699">Die `InStrB`-Funktion in früheren Versionen von Visual Basic gibt eine Anzahl von Bytes anstelle einer Zeichenposition zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-699">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="05a32-700">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-700">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-701">Alle Visual Basic 2005-Zeichen folgen sind in Unicode, und `InStrB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-701">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="05a32-702">Die `Compare`-Argumenteinstellungen lauten:</span><span class="sxs-lookup"><span data-stu-id="05a32-702">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="05a32-703">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-703">Constant</span></span>|<span data-ttu-id="05a32-704">value</span><span class="sxs-lookup"><span data-stu-id="05a32-704">Value</span></span>|<span data-ttu-id="05a32-705">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-705">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="05a32-706">0</span><span class="sxs-lookup"><span data-stu-id="05a32-706">0</span></span>|<span data-ttu-id="05a32-707">Führt einen binären Vergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-707">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="05a32-708">1</span><span class="sxs-lookup"><span data-stu-id="05a32-708">1</span></span>|<span data-ttu-id="05a32-709">Führt einen Textvergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-709">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-710">In diesem Beispiel wird die `InStr`-Funktion verwendet, um die Position des ersten Auftretens einer Zeichenfolge innerhalb einer anderen Zeichenfolge zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-710">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-711">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-711">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-712">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-712">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/option-compare-statement"><span data-ttu-id="05a32-713">Option Compare-Anweisung</span><span class="sxs-lookup"><span data-stu-id="05a32-713">Option Compare Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (int StartPos, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStr(int32 StartPos, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (StartPos As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member InStr : int * string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (StartPos, String1, String2, Compare)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (Start As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member InStr : int * string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (Start, String1, String2, Compare)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-2.0" />
        <Parameter Name="StartPos" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="String1" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-2.0;netcore-3.1;net-5.0" />
        <Parameter Name="String2" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-2.0;netcore-3.1;net-5.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-2.0;netcore-3.1;net-5.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="05a32-714">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-714">Optional.</span></span> <span data-ttu-id="05a32-715">Numerischer Ausdruck, der die Anfangsposition für jede Suche festlegt.</span><span class="sxs-lookup"><span data-stu-id="05a32-715">Numeric expression that sets the starting position for each search.</span></span> <span data-ttu-id="05a32-716">Wenn dieser ausgelassen wird, beginnt die Suche an der ersten Zeichenposition.</span><span class="sxs-lookup"><span data-stu-id="05a32-716">If omitted, search begins at the first character position.</span></span> <span data-ttu-id="05a32-717">Der Anfangsindex ist 1-basiert.</span><span class="sxs-lookup"><span data-stu-id="05a32-717">The start index is 1-based.</span></span></param>
        <param name="StartPos">To be added.</param>
        <param name="String1"><span data-ttu-id="05a32-718">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-718">Required.</span></span> <span data-ttu-id="05a32-719"><see langword="String" />-Ausdruck, der durchsucht wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-719"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="05a32-720">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-720">Required.</span></span> <span data-ttu-id="05a32-721">Gesuchter <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-721"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="05a32-722">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-722">Optional.</span></span> <span data-ttu-id="05a32-723">Gibt den Typ des Zeichenfolgenvergleichs an.</span><span class="sxs-lookup"><span data-stu-id="05a32-723">Specifies the type of string comparison.</span></span> <span data-ttu-id="05a32-724">Wenn <paramref name="Compare" /> ausgelassen wird, bestimmt die <see langword="Option Compare" />-Einstellung den Typ des Vergleichs.</span><span class="sxs-lookup"><span data-stu-id="05a32-724">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="05a32-725">Gibt einen Integer-Wert zurück, der die Anfangsposition des ersten Auftretens einer Zeichenfolge innerhalb einer anderen Zeichenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="05a32-725">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="05a32-726">Wenn</span><span class="sxs-lookup"><span data-stu-id="05a32-726">If</span></span> 
 </term>
              <description> <span data-ttu-id="05a32-727">Rückgabewert von InStr</span><span class="sxs-lookup"><span data-stu-id="05a32-727">InStr returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-728">
                <paramref name="String1" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-728">
                <paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="05a32-729">0</span><span class="sxs-lookup"><span data-stu-id="05a32-729">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-730">
                <paramref name="String2" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-730">
                <paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description>
                <paramref name="start" />
              </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-731">
                <paramref name="String2" /> wird nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="05a32-731">
                <paramref name="String2" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="05a32-732">0</span><span class="sxs-lookup"><span data-stu-id="05a32-732">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-733">
                <paramref name="String2" /> wurde in <paramref name="String1" /> gefunden.</span><span class="sxs-lookup"><span data-stu-id="05a32-733">
                <paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="05a32-734">Position, an der die gefundene Zeichenfolge beginnt</span><span class="sxs-lookup"><span data-stu-id="05a32-734">Position where match begins</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-735">
                <paramref name="Start" /> &gt; Länge von <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="05a32-735">
                <paramref name="Start" /> &gt; length of <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="05a32-736">0</span><span class="sxs-lookup"><span data-stu-id="05a32-736">0</span></span> 
 </description>
            </item>
          </list>
<span data-ttu-id="05a32-737">erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-737">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-738">In der Regel wird die `InStr`-Funktion verwendet, wenn Zeichen folgen verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-738">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-739">Die `InStrB`-Funktion in früheren Versionen von Visual Basic gibt eine Anzahl von Bytes anstelle einer Zeichenposition zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-739">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="05a32-740">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-740">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-741">Alle Visual Basic 2005-Zeichen folgen sind in Unicode, und `InStrB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-741">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="05a32-742">Die `Compare`-Argumenteinstellungen lauten:</span><span class="sxs-lookup"><span data-stu-id="05a32-742">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="05a32-743">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-743">Constant</span></span>|<span data-ttu-id="05a32-744">value</span><span class="sxs-lookup"><span data-stu-id="05a32-744">Value</span></span>|<span data-ttu-id="05a32-745">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-745">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="05a32-746">0</span><span class="sxs-lookup"><span data-stu-id="05a32-746">0</span></span>|<span data-ttu-id="05a32-747">Führt einen binären Vergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-747">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="05a32-748">1</span><span class="sxs-lookup"><span data-stu-id="05a32-748">1</span></span>|<span data-ttu-id="05a32-749">Führt einen Textvergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-749">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-750">In diesem Beispiel wird die `InStr`-Funktion verwendet, um die Position des ersten Auftretens einer Zeichenfolge innerhalb einer anderen Zeichenfolge zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-750">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-751"><paramref name="Start" /> &lt; 1.</span><span class="sxs-lookup"><span data-stu-id="05a32-751"><paramref name="Start" /> &lt; 1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-752">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-752">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-753">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-753">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/option-compare-statement"><span data-ttu-id="05a32-754">Option Compare-Anweisung</span><span class="sxs-lookup"><span data-stu-id="05a32-754">Option Compare Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InStrRev">
      <MemberSignature Language="C#" Value="public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStrRev (StringCheck As String, StringMatch As String, Optional Start As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStrRev : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStrRev (StringCheck, StringMatch, Start, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringCheck" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="StringMatch" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Start" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="StringCheck"><span data-ttu-id="05a32-755">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-755">Required.</span></span> <span data-ttu-id="05a32-756">Der gesuchte Zeichenfolgenausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-756">String expression being searched.</span></span></param>
        <param name="StringMatch"><span data-ttu-id="05a32-757">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-757">Required.</span></span> <span data-ttu-id="05a32-758">Der gesuchte Zeichenfolgenausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-758">String expression being searched for.</span></span></param>
        <param name="Start"><span data-ttu-id="05a32-759">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-759">Optional.</span></span> <span data-ttu-id="05a32-760">Numerischer Ausdruck, der die 1-basierte Anfangsposition für jede Suche festlegt, beginnend auf der linken Seite der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-760">Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</span></span> <span data-ttu-id="05a32-761">Wenn <paramref name="Start" /> weggelassen wird, wird –1 verwendet, d. h., dass die Suche an der letzten Zeichenposition beginnt.</span><span class="sxs-lookup"><span data-stu-id="05a32-761">If <paramref name="Start" /> is omitted then -1 is used, meaning the search begins at the last character position.</span></span> <span data-ttu-id="05a32-762">Die Suche wird dann von rechts nach links fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="05a32-762">Search then proceeds from right to left.</span></span></param>
        <param name="Compare"><span data-ttu-id="05a32-763">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-763">Optional.</span></span> <span data-ttu-id="05a32-764">Numerischer Wert, der den Typ des Vergleichs angibt, der für das Auswerten von untergeordneten Zeichenfolgen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-764">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="05a32-765">Wenn dieser ausgelassen wird, wird ein binärer Vergleich durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="05a32-765">If omitted, a binary comparison is performed.</span></span> <span data-ttu-id="05a32-766">Werte finden Sie im Abschnitt "Einstellungen".</span><span class="sxs-lookup"><span data-stu-id="05a32-766">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="05a32-767">Gibt die Position des ersten Vorkommens einer Zeichenfolge innerhalb einer anderen Zeichenfolge von rechts nach links gesehen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-767">Returns the position of the first occurrence of one string within another, starting from the right side of the string.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="05a32-768">Wenn</span><span class="sxs-lookup"><span data-stu-id="05a32-768">If</span></span> 
 </term>
              <description> <span data-ttu-id="05a32-769">InStrRev gibt Folgendes zurück</span><span class="sxs-lookup"><span data-stu-id="05a32-769">InStrRev returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-770">
                <paramref name="StringCheck" /> ist eine Zeichenfolge mit der Länge 0 (null)</span><span class="sxs-lookup"><span data-stu-id="05a32-770">
                <paramref name="StringCheck" /> is zero-length</span></span> 
 </term>
              <description> <span data-ttu-id="05a32-771">0</span><span class="sxs-lookup"><span data-stu-id="05a32-771">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-772">
                <paramref name="StringMatch" /> ist eine Zeichenfolge mit der Länge 0 (null)</span><span class="sxs-lookup"><span data-stu-id="05a32-772">
                <paramref name="StringMatch" /> is zero-length</span></span> 
 </term>
              <description>
                <paramref name="Start" />
              </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-773">
                <paramref name="StringMatch" /> wird nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="05a32-773">
                <paramref name="StringMatch" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="05a32-774">0</span><span class="sxs-lookup"><span data-stu-id="05a32-774">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-775">
                <paramref name="StringMatch" /> wurde in <paramref name="StringCheck" /> gefunden.</span><span class="sxs-lookup"><span data-stu-id="05a32-775">
                <paramref name="StringMatch" /> is found within <paramref name="StringCheck" /></span></span></term>
              <description> <span data-ttu-id="05a32-776">Position, an der die erste Übereinstimmung gefunden wird, beginnend mit der rechten Seite der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-776">Position at which the first match is found, starting with the right side of the string.</span></span>  
  
 </description>
            </item>
            <item>
              <term><span data-ttu-id="05a32-777">
                <paramref name="Start" /> ist größer als die Länge von <paramref name="StringMatch" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-777">
                <paramref name="Start" /> is greater than length of <paramref name="StringMatch" /></span></span></term>
              <description> <span data-ttu-id="05a32-778">0</span><span class="sxs-lookup"><span data-stu-id="05a32-778">0</span></span> 
 </description>
            </item>
          </list>
<span data-ttu-id="05a32-779">erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-779">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-780">Beachten Sie, dass die Syntax für die `InStrRev`-Funktion nicht mit der Syntax für die `InStr`-Funktion identisch ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-780">Note that the syntax for the `InStrRev` function is not the same as the syntax for the `InStr` function.</span></span>  
  
 <span data-ttu-id="05a32-781">Das `Compare`-Argument kann die folgenden Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="05a32-781">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="05a32-782">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-782">Constant</span></span>|<span data-ttu-id="05a32-783">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-783">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="05a32-784">Führt einen binären Vergleich durch.</span><span class="sxs-lookup"><span data-stu-id="05a32-784">Performs a binary comparison.</span></span>|  
|`Text`|<span data-ttu-id="05a32-785">Führt einen Textvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="05a32-785">Performs a textual comparison.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-786">In diesem Beispiel wird die Verwendung der `InStrRev`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-786">This example demonstrates the use of the `InStrRev` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-787"><paramref name="Start" /> = 0 oder <paramref name="Start" /> &lt; –1.</span><span class="sxs-lookup"><span data-stu-id="05a32-787"><paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-788">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-788">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-789">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-789">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-790">Gibt eine Zeichenfolge zurück, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-790">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (object[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(object[] SourceArray, string Delimiter) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As Object(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : obj[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(object[] SourceArray, string Delimiter) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="05a32-791">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-791">Required.</span></span> <span data-ttu-id="05a32-792">Ein eindimensionales Array, das untergeordnete Zeichenfolgen enthält, die verknüpft werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05a32-792">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="05a32-793">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-793">Optional.</span></span> <span data-ttu-id="05a32-794">Eine beliebige Zeichenfolge, die die Teilzeichenfolgen in der zurückgegebenen Zeichenfolge trennt.</span><span class="sxs-lookup"><span data-stu-id="05a32-794">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="05a32-795">Wenn nicht angegeben, wird das Leerzeichen (" ") verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-795">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="05a32-796">Wenn <paramref name="Delimiter" /> eine leere Zeichenfolge ("") oder <see langword="Nothing" /> ist, werden alle Elemente der Liste ohne Trennzeichen verkettet.</span><span class="sxs-lookup"><span data-stu-id="05a32-796">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="05a32-797">Gibt eine Zeichenfolge zurück, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-797">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="05a32-798">Eine Zeichenfolge, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-798">A string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-799">Zwischen den Funktionen `Join` und `Split` ist eine Parität vorhanden.</span><span class="sxs-lookup"><span data-stu-id="05a32-799">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="05a32-800">Die `Join`-Funktion nimmt ein Array von Zeichen folgen an und fügt Sie mithilfe einer Trenn Zeichenfolge ein, um eine einzelne Zeichenfolge zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-800">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="05a32-801">Die `Split`-Funktion nimmt eine Zeichenfolge an und trennt Sie am Trennzeichen, um ein Array von Zeichen folgen zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-801">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="05a32-802">Ein wichtiger Unterschied besteht jedoch darin, dass `Join` Zeichen folgen mit einer beliebigen Trenn Zeichenfolge verketten kann, `Split` nur Zeichen folgen mit einem einzelnen Zeichen Trennzeichen trennen kann.</span><span class="sxs-lookup"><span data-stu-id="05a32-802">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-803">Im folgenden Beispiel wird veranschaulicht, wie die `Join`-Funktion verwendet wird, um eine Liste aus mehreren Zeichen folgen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="05a32-803">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-804"><paramref name="SourceArray" /> ist nicht eindimensional.</span><span class="sxs-lookup"><span data-stu-id="05a32-804"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-805">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-805">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string[] SourceArray, string Delimiter) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As String(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : string[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(string[] SourceArray, string Delimiter) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.String[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="05a32-806">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-806">Required.</span></span> <span data-ttu-id="05a32-807">Ein eindimensionales Array, das untergeordnete Zeichenfolgen enthält, die verknüpft werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05a32-807">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="05a32-808">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-808">Optional.</span></span> <span data-ttu-id="05a32-809">Eine beliebige Zeichenfolge, die die Teilzeichenfolgen in der zurückgegebenen Zeichenfolge trennt.</span><span class="sxs-lookup"><span data-stu-id="05a32-809">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="05a32-810">Wenn nicht angegeben, wird das Leerzeichen (" ") verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-810">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="05a32-811">Wenn <paramref name="Delimiter" /> eine leere Zeichenfolge ("") oder <see langword="Nothing" /> ist, werden alle Elemente der Liste ohne Trennzeichen verkettet.</span><span class="sxs-lookup"><span data-stu-id="05a32-811">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="05a32-812">Gibt eine Zeichenfolge zurück, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-812">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="05a32-813">Eine Zeichenfolge, die durch Verknüpfen mehrerer Teilzeichenfolgen aus einem Array erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-813">A string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-814">Zwischen den Funktionen `Join` und `Split` ist eine Parität vorhanden.</span><span class="sxs-lookup"><span data-stu-id="05a32-814">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="05a32-815">Die `Join`-Funktion nimmt ein Array von Zeichen folgen an und fügt Sie mithilfe einer Trenn Zeichenfolge ein, um eine einzelne Zeichenfolge zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-815">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="05a32-816">Die `Split`-Funktion nimmt eine Zeichenfolge an und trennt Sie am Trennzeichen, um ein Array von Zeichen folgen zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-816">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="05a32-817">Ein wichtiger Unterschied besteht jedoch darin, dass `Join` Zeichen folgen mit einer beliebigen Trenn Zeichenfolge verketten kann, `Split` nur Zeichen folgen mit einem einzelnen Zeichen Trennzeichen trennen kann.</span><span class="sxs-lookup"><span data-stu-id="05a32-817">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-818">Im folgenden Beispiel wird veranschaulicht, wie die `Join`-Funktion verwendet wird, um eine Liste aus mehreren Zeichen folgen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="05a32-818">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-819"><paramref name="SourceArray" /> ist nicht eindimensional.</span><span class="sxs-lookup"><span data-stu-id="05a32-819"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-820">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-820">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-821">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das in Kleinbuchstaben konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-821">Returns a string or character converted to lowercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static char LCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char LCase(char Value) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char LCase(char Value);" />
      <MemberSignature Language="F#" Value="static member LCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberSignature Language="ILAsm" Value=".method public static char LCase(char Value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="05a32-822">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-822">Required.</span></span> <span data-ttu-id="05a32-823">Alle gültigen <see langword="String" />-Ausdrücke oder <see langword="Char" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-823">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="05a32-824">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das in Kleinbuchstaben konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-824">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="05a32-825">Eine Zeichenfolge oder ein Zeichen, die bzw. das in Kleinbuchstaben konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-825">A string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-826">Nur Großbuchstaben werden in Kleinbuchstaben konvertiert. alle Kleinbuchstaben und Zeichen ohne Buchstaben bleiben unverändert.</span><span class="sxs-lookup"><span data-stu-id="05a32-826">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="05a32-827">Diese Funktion verwendet die Kultur Informationen der Anwendung bei der Bearbeitung der Zeichenfolge, sodass die Fall Änderungen für das Gebiets Schema geeignet sind, in dem die Anwendung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-827">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="05a32-828">Wenn Ihre Anwendung Sicherheitsentscheidungen auf Grundlage des Ergebnisses eines Vergleichs-oder Fall Änderungs Vorgangs trifft, sollte der Vorgang die <xref:System.String.Compare%2A?displayProperty=nameWithType>-Methode verwenden und <xref:System.StringComparison.Ordinal> oder <xref:System.StringComparison.OrdinalIgnoreCase> für das `comparisonType`-Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-828">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="05a32-829">Weitere Informationen finden Sie unter [so wirkt sich die Kultur auf Zeichen folgen in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings)aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-829">For more information, see [How Culture Affects Strings in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-830">In diesem Beispiel wird die `LCase`-Funktion verwendet, um eine klein geschriebene Version einer Zeichenfolge zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-830">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-831">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-831">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-832">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-832">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static string LCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LCase(string Value) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member LCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberSignature Language="ILAsm" Value=".method public static string LCase(string Value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="05a32-833">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-833">Required.</span></span> <span data-ttu-id="05a32-834">Alle gültigen <see langword="String" />-Ausdrücke oder <see langword="Char" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-834">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="05a32-835">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das in Kleinbuchstaben konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-835">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="05a32-836">Eine Zeichenfolge oder ein Zeichen, die bzw. das in Kleinbuchstaben konvertiert wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-836">A string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-837">Nur Großbuchstaben werden in Kleinbuchstaben konvertiert. alle Kleinbuchstaben und Zeichen ohne Buchstaben bleiben unverändert.</span><span class="sxs-lookup"><span data-stu-id="05a32-837">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="05a32-838">Diese Funktion verwendet die Kultur Informationen der Anwendung bei der Bearbeitung der Zeichenfolge, sodass die Fall Änderungen für das Gebiets Schema geeignet sind, in dem die Anwendung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-838">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="05a32-839">Wenn Ihre Anwendung Sicherheitsentscheidungen auf Grundlage des Ergebnisses eines Vergleichs-oder Fall Änderungs Vorgangs trifft, sollte der Vorgang die <xref:System.String.Compare%2A?displayProperty=nameWithType>-Methode verwenden und <xref:System.StringComparison.Ordinal> oder <xref:System.StringComparison.OrdinalIgnoreCase> für das `comparisonType`-Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-839">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="05a32-840">Weitere Informationen finden Sie unter [so wirkt sich die Kultur auf Zeichen folgen in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings)aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-840">For more information, see [How Culture Affects Strings in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-841">In diesem Beispiel wird die `LCase`-Funktion verwendet, um eine klein geschriebene Version einer Zeichenfolge zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-841">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-842">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-842">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-843">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-843">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static string Left (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Left(string str, int32 Length) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Left (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Left(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Left : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Left (str, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Left(string str, int32 Length) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-844">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-844">Required.</span></span> <span data-ttu-id="05a32-845"><see langword="String" />-Ausdruck, von dem die äußersten linken Zeichen zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-845"><see langword="String" /> expression from which the leftmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="05a32-846">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-846">Required.</span></span> <span data-ttu-id="05a32-847"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-847"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-848">Numerischer Ausdruck, der angibt, wie viele Zeichen zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05a32-848">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="05a32-849">Wenn der Wert 0 ist, wird eine Zeichenfolge ("") der Länge 0 (null) zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-849">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="05a32-850">Wenn der Wert größer oder gleich der Anzahl von Zeichen in <paramref name="str" /> ist, wird die ganze Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-850">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="05a32-851">Gibt eine Zeichenfolge zurück, die eine angegebene Zeichenanzahl von der linken Seite einer Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-851">Returns a string containing a specified number of characters from the left side of a string.</span></span></summary>
        <returns><span data-ttu-id="05a32-852">Eine Zeichenfolge, die eine angegebene Anzahl Zeichen von der linken Seite einer Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-852">A string containing a specified number of characters from the left side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-853">Verwenden Sie die `Len`-Funktion, um die Anzahl der Zeichen in `str`zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="05a32-853">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="05a32-854">Wenn Sie in einer Windows Forms Anwendung oder einer anderen Klasse mit einer `Left`-Eigenschaft verwendet wird, müssen Sie die Funktion mit `Microsoft.VisualBasic.Left`vollständig qualifizieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-854">If used in a Windows Forms application, or any other class that has a `Left` property, you must fully qualify the function with `Microsoft.VisualBasic.Left`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-855">Die `LeftB`-Funktion in früheren Versionen von Visual Basic gibt eine Zeichenfolge in Bytes anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-855">The `LeftB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="05a32-856">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-856">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-857">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LeftB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-857">All current Visual Basic strings are in Unicode, and `LeftB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-858">Dieses Beispiel veranschaulicht die Verwendung der `Left`-Funktion, um eine Teil Zeichenfolge eines bestimmten `String`zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-858">This example demonstrates the use of the `Left` function to return a substring of a given `String`.</span></span> <span data-ttu-id="05a32-859">In einer Klasse, die über eine `Left`-Eigenschaft verfügt, kann es erforderlich sein, die `Left`-Funktion vollständig zu qualifizieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-859">In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-860"><paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="05a32-860"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-861">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-861">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Len">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-862">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-862">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (bool Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(bool Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(bool Expression);" />
      <MemberSignature Language="F#" Value="static member Len : bool -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(bool Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-863">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-863">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-864">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-864">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-865">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-865">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-866">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-866">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-867">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-867">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-868">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-868">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-869">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-869">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-870">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-870">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-871">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-871">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-872">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-872">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-873">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-873">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-874">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-874">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-875">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-875">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-876">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-876">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-877">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-877">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-878">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-878">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-879">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-879">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-880">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-880">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-881">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-881">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-882">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-882">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-883">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-883">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (byte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(unsigned int8 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Byte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : byte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int8 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Byte" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-884">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-884">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-885">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-885">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-886">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-886">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-887">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-887">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-888">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-888">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-889">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-889">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-890">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-890">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-891">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-891">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-892">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-892">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-893">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-893">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-894">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-894">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-895">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-895">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-896">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-896">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-897">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-897">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-898">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-898">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-899">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-899">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-900">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-900">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-901">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-901">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-902">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-902">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-903">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-903">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-904">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-904">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(char Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(char Expression);" />
      <MemberSignature Language="F#" Value="static member Len : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(char Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-905">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-905">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-906">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-906">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-907">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-907">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-908">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-908">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-909">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-909">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-910">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-910">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-911">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-911">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-912">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-912">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-913">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-913">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-914">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-914">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-915">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-915">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-916">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-916">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-917">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-917">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-918">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-918">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-919">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-919">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-920">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-920">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-921">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-921">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-922">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-922">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-923">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-923">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-924">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-924">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-925">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-925">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (DateTime Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(valuetype System.DateTime Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(DateTime Expression);" />
      <MemberSignature Language="F#" Value="static member Len : DateTime -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.DateTime Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-926">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-926">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-927">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-927">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-928">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-928">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-929">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-929">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-930">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-930">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-931">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-931">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-932">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-932">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-933">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-933">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-934">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-934">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-935">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-935">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-936">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-936">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-937">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-937">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-938">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-938">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-939">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-939">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-940">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-940">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-941">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-941">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-942">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-942">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-943">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-943">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-944">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-944">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-945">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-945">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-946">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-946">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (decimal Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(valuetype System.Decimal Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Decimal Expression);" />
      <MemberSignature Language="F#" Value="static member Len : decimal -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.Decimal Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-947">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-947">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-948">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-948">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-949">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-949">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-950">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-950">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-951">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-951">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-952">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-952">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-953">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-953">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-954">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-954">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-955">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-955">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-956">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-956">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-957">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-957">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-958">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-958">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-959">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-959">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-960">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-960">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-961">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-961">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-962">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-962">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-963">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-963">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-964">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-964">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-965">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-965">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-966">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-966">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-967">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-967">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (double Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(float64 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(double Expression);" />
      <MemberSignature Language="F#" Value="static member Len : double -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float64 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-968">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-968">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-969">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-969">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-970">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-970">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-971">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-971">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-972">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-972">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-973">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-973">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-974">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-974">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-975">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-975">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-976">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-976">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-977">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-977">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-978">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-978">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-979">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-979">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-980">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-980">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-981">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-981">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-982">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-982">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-983">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-983">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-984">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-984">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-985">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-985">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-986">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-986">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-987">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-987">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-988">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-988">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (short Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(int16 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(short Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int16 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int16" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-989">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-989">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-990">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-990">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-991">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-991">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-992">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-992">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-993">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-993">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-994">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-994">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-995">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-995">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-996">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-996">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-997">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-997">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-998">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-998">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-999">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-999">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1000">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1000">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1001">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1001">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1002">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1002">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1003">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1003">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1004">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1004">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1005">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1005">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1006">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1006">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1007">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1007">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1008">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1008">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1009">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1009">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(int32 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(int Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int32 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1010">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1010">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1011">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1011">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1012">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1012">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1013">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1013">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1014">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1014">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1015">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1015">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1016">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1016">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1017">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1017">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1018">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1018">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1019">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1019">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1020">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1020">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1021">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1021">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1022">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1022">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1023">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1023">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1024">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1024">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1025">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1025">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1026">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1026">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1027">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1027">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1028">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1028">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1029">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1029">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1030">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1030">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (long Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(int64 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(long Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int64 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int64" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1031">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1031">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1032">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1032">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1033">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1033">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1034">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1034">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1035">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1035">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1036">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1036">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1037">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1037">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1038">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1038">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1039">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1039">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1040">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1040">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1041">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1041">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1042">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1042">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1043">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1043">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1044">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1044">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1045">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1045">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1046">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1046">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1047">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1047">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1048">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1048">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1049">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1049">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1050">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1050">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1051">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1051">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(object Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : obj -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(object Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1052">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1052">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1053">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1053">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1054">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1054">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1055">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1055">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1056">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1056">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1057">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1057">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1058">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1058">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1059">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1059">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1060">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1060">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1061">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1061">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1062">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1062">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1063">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1063">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1064">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1064">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1065">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1065">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1066">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1066">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1067">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1067">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1068">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1068">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1069">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1069">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1070">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1070">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1071">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1071">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1072">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1072">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (sbyte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(int8 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::SByte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : sbyte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int8 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.SByte" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1073">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1073">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1074">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1074">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1075">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1075">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1076">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1076">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1077">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1077">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1078">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1078">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1079">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1079">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1080">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1080">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1081">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1081">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1082">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1082">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1083">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1083">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1084">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1084">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1085">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1085">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1086">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1086">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1087">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1087">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1088">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1088">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1089">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1089">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1090">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1090">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1091">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1091">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1092">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1092">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1093">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1093">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (float Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(float32 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(float Expression);" />
      <MemberSignature Language="F#" Value="static member Len : single -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float32 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1094">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1094">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1095">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1095">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1096">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1096">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1097">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1097">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1098">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1098">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1099">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1099">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1100">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1100">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1101">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1101">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1102">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1102">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1103">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1103">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1104">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1104">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1105">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1105">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1106">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1106">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1107">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1107">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1108">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1108">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1109">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1109">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1110">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1110">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1111">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1111">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1112">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1112">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1113">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1113">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1114">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1114">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(string Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(string Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1115">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1115">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1116">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1116">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1117">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1117">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1118">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1118">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1119">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1119">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1120">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1120">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1121">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1121">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1122">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1122">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1123">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1123">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1124">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1124">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1125">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1125">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1126">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1126">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1127">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1127">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1128">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1128">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1129">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1129">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1130">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1130">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1131">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1131">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1132">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1132">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1133">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1133">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1134">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1134">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1135">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1135">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ushort Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(unsigned int16 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt16 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int16 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1136">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1136">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1137">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1137">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1138">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1138">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1139">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1139">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1140">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1140">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1141">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1141">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1142">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1142">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1143">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1143">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1144">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1144">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1145">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1145">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1146">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1146">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1147">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1147">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1148">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1148">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1149">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1149">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1150">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1150">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1151">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1151">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1152">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1152">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1153">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1153">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1154">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1154">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1155">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1155">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1156">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1156">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (uint Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(unsigned int32 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt32 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint32 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int32 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1157">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1157">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1158">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1158">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1159">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1159">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1160">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1160">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1161">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1161">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1162">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1162">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1163">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1163">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1164">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1164">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1165">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1165">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1166">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1166">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1167">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1167">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1168">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1168">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1169">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1169">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1170">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1170">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1171">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1171">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1172">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1172">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1173">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1173">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1174">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1174">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1175">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1175">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1176">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1176">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1177">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1177">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ulong Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Len(unsigned int64 Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt64 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int64 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1178">Jeder gültige <see langword="String" />-Ausdruck oder -Variablenname.</span><span class="sxs-lookup"><span data-stu-id="05a32-1178">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="05a32-1179">Wenn <paramref name="Expression" /> vom Typ <see langword="Object" /> ist, gibt die <see langword="Len" />-Funktion die Größe zurück, wie sie von der <see langword="FilePut" />-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1179">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="05a32-1180">Gibt eine ganze Zahl zurück, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1180">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="05a32-1181">Eine ganze Zahl, die entweder die Anzahl der Zeichen in einer Zeichenfolge oder die zum Speichern einer Variablen erforderliche nominale Byteanzahl enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1181">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1182">Bei benutzerdefinierten Typen und `Object` Variablen gibt die `Len`-Funktion die Größe zurück, wie Sie von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1182">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="05a32-1183">Wenn eine `Object` einen `String`enthält, wird die Länge der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1183">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="05a32-1184">Wenn eine `Object` einen anderen Typ enthält, wird die Größe des Objekts zurückgegeben, da es von der `FilePut`-Funktion in die Datei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1184">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="05a32-1185">Das `VBFixedString`-Attribut kann auf Zeichen folgen Felder in-Objekten angewendet werden, um die Größe der Zeichenfolge in Bytes anzugeben, wenn Sie auf den Datenträger geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1185">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="05a32-1186">Die `Len`-Funktion verwendet das `VBFixedString`-Attribut (falls verfügbar), wenn die Größe der `Object` Variablen festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1186">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1187">Die `Len` Funktion ist möglicherweise nicht in der Lage, die tatsächliche Anzahl von Speicher Bytes zu bestimmen, die bei der Verwendung mit Zeichen folgen variabler Länge in benutzerdefinierten Datentypen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1187">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1188">Die `LenB`-Funktion in früheren Versionen von Visual Basic gibt die Anzahl von Bytes in einer Zeichenfolge anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1188">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="05a32-1189">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1189">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1190">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `LenB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1190">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="05a32-1191">Entwickler Hinweise zu intelligenten Geräten</span><span class="sxs-lookup"><span data-stu-id="05a32-1191">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="05a32-1192">Die `Len` Funktion akzeptiert nur `String` und `Object` Variablen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="05a32-1192">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="05a32-1193">Wenn eine `Object` einen `String`enthält, wird die Länge der `String`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1193">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="05a32-1194">Wenn ein Parameter ein NULL-`Object` Verweis ist, gibt die Funktion 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1194">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="05a32-1195">Wenn eine `Object` einen anderen Typ enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="05a32-1195">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1196">In diesem Beispiel wird mit der `Len`-Funktion die Anzahl der Zeichen in einer Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1196">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1197">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1197">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1198">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1198">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LSet">
      <MemberSignature Language="C#" Value="public static string LSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LSet(string Source, int32 Length) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member LSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.LSet (Source, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string LSet(string Source, int32 Length) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="05a32-1199">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1199">Required.</span></span> <span data-ttu-id="05a32-1200"><see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1200"><see langword="String" /> expression.</span></span> <span data-ttu-id="05a32-1201">Name der Zeichenfolgenvariablen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1201">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="05a32-1202">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1202">Required.</span></span> <span data-ttu-id="05a32-1203"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1203"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1204">Länge der zurückgegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1204">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="05a32-1205">Gibt eine links ausgerichtete Zeichenfolge zurück, die die angegebene Zeichenfolge angepasst an die angegebene Länge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1205">Returns a left-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="05a32-1206">Eine links ausgerichtete Zeichenfolge, die die an die angegebene Länge angepasste angegebene Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1206">A left-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1207">Wenn die angegebene Zeichenfolge länger als die angegebene Länge ist, wird die zurückgegebene Zeichenfolge auf die angegebene Länge verkürzt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1207">If the specified string is longer than the specified length, the returned string is shortened to the specified length.</span></span> <span data-ttu-id="05a32-1208">Wenn die angegebene Zeichenfolge kürzer als die angegebene Länge ist, werden am rechten Ende der zurückgegebenen Zeichenfolge Leerzeichen hinzugefügt, um die entsprechende Länge zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-1208">If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1209">In diesem Beispiel wird die Verwendung der `LSet`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-1209">This example demonstrates the use of the `LSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1210">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1210">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1211">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1211">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types"><span data-ttu-id="05a32-1212">Effiziente Verwendung von Datentypen</span><span class="sxs-lookup"><span data-stu-id="05a32-1212">Efficient Use of Data Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LTrim">
      <MemberSignature Language="C#" Value="public static string LTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LTrim(string str) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member LTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LTrim str" />
      <MemberSignature Language="ILAsm" Value=".method public static string LTrim(string str) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-1213">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1213">Required.</span></span> <span data-ttu-id="05a32-1214">Jeder gültige <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1214">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="05a32-1215">Gibt eine Zeichenfolge zurück, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1215">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="05a32-1216">Eine Zeichenfolge, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1216">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1217">Die Funktionen `LTrim`, `RTrim`und `Trim` entfernen Leerzeichen von den Enden von Zeichen folgen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1217">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1218">In diesem Beispiel werden mit der `LTrim`-Funktion führende Leerzeichen und mit der `RTrim`-Funktion nachstehende Leerzeichen aus einer Zeichenfolgenvariablen entfernt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1218">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="05a32-1219">Mit der `Trim`-Funktion werden beide Typen von Leerzeichen entfernt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1219">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1220">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1220">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Mid">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-1221">Gibt eine Zeichenfolge zurück, die Zeichen aus einer festgelegten Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1221">Returns a string that contains characters from a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Mid(string str, int32 Start) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Start" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-1222">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1222">Required.</span></span> <span data-ttu-id="05a32-1223"><see langword="String" />-Ausdruck, aus dem Zeichen zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1223"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="05a32-1224">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1224">Required.</span></span> <span data-ttu-id="05a32-1225"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1225"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1226">Anfangsposition der zurückzugebenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1226">Starting position of the characters to return.</span></span> <span data-ttu-id="05a32-1227">Wenn <paramref name="Start" /> größer als die Anzahl der Zeichen in <paramref name="str" /> ist, gibt die <see langword="Mid" />-Funktion eine Zeichenfolge ("") der Länge 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1227">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="05a32-1228"><paramref name="Start" /> ist 1-basiert.</span><span class="sxs-lookup"><span data-stu-id="05a32-1228"><paramref name="Start" /> is one-based.</span></span></param>
        <summary><span data-ttu-id="05a32-1229">Gibt eine Zeichenfolge zurück, die alle Zeichen enthält, beginnend bei einer angegebenen Position in einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1229">Returns a string that contains all the characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="05a32-1230">Eine Zeichenfolge, die aus allen Zeichen beginnend bei der angegebenen Position in der Zeichenfolge besteht.</span><span class="sxs-lookup"><span data-stu-id="05a32-1230">A string that consists of all the characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1231">Verwenden Sie die `Len`-Funktion, um die Anzahl der Zeichen in `str`zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1231">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="05a32-1232">Visual Basic verfügt über eine `Mid`-Funktion und eine `Mid`-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="05a32-1232">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="05a32-1233">Diese Elemente funktionieren beide mit einer angegebenen Anzahl von Zeichen in einer Zeichenfolge, aber die `Mid`-Funktion gibt die Zeichen zurück, während die `Mid` Anweisung die Zeichen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1233">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="05a32-1234">Weitere Informationen finden Sie unter [Mid-Anweisung](/dotnet/visual-basic/language-reference/statements/mid-statement).</span><span class="sxs-lookup"><span data-stu-id="05a32-1234">For more information, see [Mid Statement](/dotnet/visual-basic/language-reference/statements/mid-statement).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1235">Die `MidB`-Funktion in früheren Versionen von Visual Basic gibt eine Zeichenfolge in Bytes anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1235">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="05a32-1236">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1236">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1237">Alle Visual Basic Zeichenfolgen sind in Unicode, und `MidB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1237">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1238">In der letzten Zeile dieses Beispiels wird diese Überladung der `Mid`-Funktion verwendet, um das fünfte und nachfolgende Zeichen aus einer Zeichenfolge zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1238">The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1239"><paramref name="Start" /> &lt;= 0 oder <paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="05a32-1239"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1240">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1240">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-1241">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1241">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-1242">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1242">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/mid-statement"><span data-ttu-id="05a32-1243">Mid-Anweisung</span><span class="sxs-lookup"><span data-stu-id="05a32-1243">Mid Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Mid(string str, int32 Start, int32 Length) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start, int Length);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start, int32 Length) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Start" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-1244">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1244">Required.</span></span> <span data-ttu-id="05a32-1245"><see langword="String" />-Ausdruck, aus dem Zeichen zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1245"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="05a32-1246">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1246">Required.</span></span> <span data-ttu-id="05a32-1247"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1247"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1248">Anfangsposition der zurückzugebenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1248">Starting position of the characters to return.</span></span> <span data-ttu-id="05a32-1249">Wenn <paramref name="Start" /> größer als die Anzahl der Zeichen in <paramref name="str" /> ist, gibt die <see langword="Mid" />-Funktion eine Zeichenfolge ("") der Länge 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1249">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="05a32-1250"><paramref name="Start" /> ist 1-basiert.</span><span class="sxs-lookup"><span data-stu-id="05a32-1250"><paramref name="Start" /> is one based.</span></span></param>
        <param name="Length"><span data-ttu-id="05a32-1251">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1251">Optional.</span></span> <span data-ttu-id="05a32-1252"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1252"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1253">Die Anzahl der zurückzugebenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1253">Number of characters to return.</span></span> <span data-ttu-id="05a32-1254">Wenn der Ausdruck ausgelassen wird oder weniger als <paramref name="Length" /> Zeichen im Text enthalten sind (einschließlich des Zeichens an Position <paramref name="Start" />), werden alle Zeichen von der Anfangs- bis zur Endposition der Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1254">If omitted or if there are fewer than <paramref name="Length" /> characters in the text (including the character at position <paramref name="Start" />), all characters from the start position to the end of the string are returned.</span></span></param>
        <summary><span data-ttu-id="05a32-1255">Gibt eine Zeichenfolge zurück, die eine angegebene Anzahl von Zeichen enthält, beginnend bei einer angegebenen Position in einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1255">Returns a string that contains a specified number of characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="05a32-1256">Eine Zeichenfolge, die aus der angegebenen Anzahl von Zeichen besteht, beginnend bei der angegebenen Position in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1256">A string that consists of the specified number of characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1257">Verwenden Sie die `Len`-Funktion, um die Anzahl der Zeichen in `str`zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1257">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="05a32-1258">Visual Basic verfügt über eine `Mid`-Funktion und eine `Mid`-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="05a32-1258">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="05a32-1259">Diese Elemente funktionieren beide mit einer angegebenen Anzahl von Zeichen in einer Zeichenfolge, aber die `Mid`-Funktion gibt die Zeichen zurück, während die `Mid` Anweisung die Zeichen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1259">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="05a32-1260">Weitere Informationen finden Sie unter [Mid-Anweisung](/dotnet/visual-basic/language-reference/statements/mid-statement).</span><span class="sxs-lookup"><span data-stu-id="05a32-1260">For more information, see [Mid Statement](/dotnet/visual-basic/language-reference/statements/mid-statement).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1261">Die `MidB`-Funktion in früheren Versionen von Visual Basic gibt eine Zeichenfolge in Bytes anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1261">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="05a32-1262">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1262">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1263">Alle Visual Basic Zeichenfolgen sind in Unicode, und `MidB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1263">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1264">Die ersten beiden `Mid` Funktionen in diesem Beispiel geben die angegebene Anzahl von Zeichen aus einer Zeichenfolge zurück, beginnend bei den angegebenen Positionen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1264">The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions.</span></span> <span data-ttu-id="05a32-1265">(Die letzte Funktion veranschaulicht die <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> Überladung und gibt nur den Anfangspunkt für die Zeichen folgen Extraktion an.)</span><span class="sxs-lookup"><span data-stu-id="05a32-1265">(The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1266"><paramref name="Start" /> &lt;= 0 oder <paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="05a32-1266"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1267">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1267">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-1268">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1268">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-1269">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1269">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/mid-statement"><span data-ttu-id="05a32-1270">Mid-Anweisung</span><span class="sxs-lookup"><span data-stu-id="05a32-1270">Mid Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Expression As String, Find As String, Replacement As String, Optional Start As Integer = 1, Optional Count As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * int * int * Microsoft.VisualBasic.CompareMethod -&gt; string" Usage="Microsoft.VisualBasic.Strings.Replace (Expression, Find, Replacement, Start, Count, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Find" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Replacement" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Start" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Count" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1271">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1271">Required.</span></span> <span data-ttu-id="05a32-1272">Zeichenfolgenausdruck mit der zu ersetzenden untergeordneten Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1272">String expression containing substring to replace.</span></span></param>
        <param name="Find"><span data-ttu-id="05a32-1273">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1273">Required.</span></span> <span data-ttu-id="05a32-1274">Die gesuchte untergeordnete Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1274">Substring being searched for.</span></span></param>
        <param name="Replacement"><span data-ttu-id="05a32-1275">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1275">Required.</span></span> <span data-ttu-id="05a32-1276">Untergeordnete Ersetzungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1276">Replacement substring.</span></span></param>
        <param name="Start"><span data-ttu-id="05a32-1277">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1277">Optional.</span></span> <span data-ttu-id="05a32-1278">Position in <paramref name="Expression" />, die eine für die Ersetzung verwendete Teilzeichenfolge startet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1278">Position within <paramref name="Expression" /> that starts a substring used for replacement.</span></span> <span data-ttu-id="05a32-1279">Der Rückgabewert von <see langword="Replace" /> ist eine Zeichenfolge, die bei <paramref name="Start" /> beginnt, mit entsprechenden Ersetzungen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1279">The return value of <see langword="Replace" /> is a string that begins at <paramref name="Start" />, with appropriate substitutions.</span></span> <span data-ttu-id="05a32-1280">Wenn der Wert nicht angegeben wird, wird 1 angenommen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1280">If omitted, 1 is assumed.</span></span></param>
        <param name="Count"><span data-ttu-id="05a32-1281">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1281">Optional.</span></span> <span data-ttu-id="05a32-1282">Die Anzahl der durchzuführenden Ersetzungen für untergeordnete Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1282">Number of substring substitutions to perform.</span></span> <span data-ttu-id="05a32-1283">Wenn der Wert nicht angegeben wird, ist der Standardwert –1, d. h., dass alle möglichen Ersetzungen vorgenommen werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1283">If omitted, the default value is -1, which means "make all possible substitutions."</span></span></param>
        <param name="Compare"><span data-ttu-id="05a32-1284">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1284">Optional.</span></span> <span data-ttu-id="05a32-1285">Numerischer Wert, der den Typ des Vergleichs angibt, der für das Auswerten von untergeordneten Zeichenfolgen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1285">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="05a32-1286">Werte finden Sie im Abschnitt "Einstellungen".</span><span class="sxs-lookup"><span data-stu-id="05a32-1286">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="05a32-1287">Gibt eine Zeichenfolge zurück, in der eine bestimmte untergeordnete Zeichenfolge so oft wie angegeben durch eine andere Zeichenfolge ersetzt wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-1287">Returns a string in which a specified substring has been replaced with another substring a specified number of times.</span></span></summary>
        <returns><span data-ttu-id="05a32-1288"><see langword="Replace" /> gibt die folgenden Werte zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1288"><see langword="Replace" /> returns the following values.</span></span>  
  
 <list type="table"><item><term> <span data-ttu-id="05a32-1289">Wenn</span><span class="sxs-lookup"><span data-stu-id="05a32-1289">If</span></span> 
 </term><description> <span data-ttu-id="05a32-1290">Replace gibt Folgendes zurück</span><span class="sxs-lookup"><span data-stu-id="05a32-1290">Replace returns</span></span> 
 </description></item><item><term><span data-ttu-id="05a32-1291"><paramref name="Find" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-1291"><paramref name="Find" /> is zero-length or <see langword="Nothing" /></span></span></term><description> <span data-ttu-id="05a32-1292">Kopie von <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1292">Copy of <paramref name="Expression" /></span></span></description></item><item><term><span data-ttu-id="05a32-1293"><paramref name="Replace" /> ist eine Zeichenfolge mit der Länge 0 (null)</span><span class="sxs-lookup"><span data-stu-id="05a32-1293"><paramref name="Replace" /> is zero-length</span></span> 
 </term><description> <span data-ttu-id="05a32-1294">Kopie von <paramref name="Expression" /> ohne Vorkommen von <paramref name="Find" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1294">Copy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /></span></span></description></item><item><term><span data-ttu-id="05a32-1295"><paramref name="Expression" /> ist eine Zeichenfolge mit der Länge 0 (null) oder <see langword="Nothing" />, oder <paramref name="Start" /> ist größer als die Länge von <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1295"><paramref name="Expression" /> is zero-length or <see langword="Nothing" />, or <paramref name="Start" /> is greater than length of <paramref name="Expression" /></span></span></term><description><see langword="Nothing" /></description></item><item><term><span data-ttu-id="05a32-1296"><paramref name="Count" /> ist 0</span><span class="sxs-lookup"><span data-stu-id="05a32-1296"><paramref name="Count" /> is 0</span></span> 
 </term><description> <span data-ttu-id="05a32-1297">Kopie von <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1297">Copy of <paramref name="Expression" /></span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1298">Der Rückgabewert der `Replace`-Funktion ist eine Zeichenfolge, die an der durch `Start` angegebenen Position beginnt und am Ende der `Expression` Zeichenfolge endet, wobei die Ersetzungen gemäß den Werten für `Find` und `Replace` festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1298">The return value of the `Replace` function is a string that begins at the position specified by `Start` and concludes at the end of the `Expression` string, with the substitutions made as specified by the `Find` and `Replace` values.</span></span>  
  
 <span data-ttu-id="05a32-1299">Das `Compare`-Argument kann die folgenden Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1299">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="05a32-1300">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-1300">Constant</span></span>|<span data-ttu-id="05a32-1301">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-1301">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="05a32-1302">Führt einen binären Vergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-1302">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="05a32-1303">Führt einen Textvergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-1303">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1304">In diesem Beispiel wird die `Replace`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-1304">This example demonstrates the `Replace` function.</span></span>  
  
```vb  
Dim TestString As String = "Shopping List"  
' Returns "Shipping List".  
Dim aString As String = Replace(TestString, "o", "i")  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1305"><paramref name="Count" /> &lt; –1 oder <paramref name="Start" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="05a32-1305"><paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Filter" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1306">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1306">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static string Right (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Right(string str, int32 Length) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Right (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Right(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Right : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Right (str, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Right(string str, int32 Length) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-1307">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1307">Required.</span></span> <span data-ttu-id="05a32-1308"><see langword="String" />-Ausdruck, von dem die äußersten rechten Zeichen zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1308"><see langword="String" /> expression from which the rightmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="05a32-1309">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1309">Required.</span></span> <span data-ttu-id="05a32-1310">[https://login.microsoftonline.com/consumers/](<see langword="Integer" />).</span><span class="sxs-lookup"><span data-stu-id="05a32-1310"><see langword="Integer" />.</span></span> <span data-ttu-id="05a32-1311">Numerischer Ausdruck, der angibt, wie viele Zeichen zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1311">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="05a32-1312">Wenn der Wert 0 ist, wird eine Zeichenfolge ("") der Länge 0 (null) zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1312">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="05a32-1313">Wenn der Wert größer oder gleich der Anzahl von Zeichen in <paramref name="str" /> ist, wird die ganze Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1313">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="05a32-1314">Gibt eine Zeichenfolge mit einer bestimmten Anzahl von Zeichen ab dem ersten Zeichen rechts von einer Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1314">Returns a string containing a specified number of characters from the right side of a string.</span></span></summary>
        <returns><span data-ttu-id="05a32-1315">Eine Zeichenfolge mit einer angegebenen Anzahl von Zeichen von der rechten Seite einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1315">A string containing a specified number of characters from the right side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1316">Verwenden Sie die `Len`-Funktion, um die Anzahl der Zeichen in `str`zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1316">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="05a32-1317">Wenn Sie in einem Windows Form oder einer anderen Klasse verwendet werden, die über eine `Right`-Eigenschaft verfügt, müssen Sie die Funktion vollständig mit `Microsoft.VisualBasic.Strings.Right`qualifizieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-1317">If used in a Windows Form, or any other class that has a `Right` property, you must fully qualify the function with `Microsoft.VisualBasic.Strings.Right`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1318">Die `RightB`-Funktion in früheren Versionen von Visual Basic gibt eine Zeichenfolge in Bytes anstelle von Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1318">The `RightB` function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</span></span> <span data-ttu-id="05a32-1319">Es wird hauptsächlich zum Umrechnen von Zeichen folgen in DBCS-Anwendungen (Double-Byte Character Set) verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1319">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="05a32-1320">Alle aktuellen Visual Basic Zeichenfolgen sind in Unicode, und `RightB` wird nicht mehr unterstützt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1320">All current Visual Basic strings are in Unicode, and `RightB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1321">Dieses Beispiel veranschaulicht die Verwendung der `Right`-Funktion, um eine Teil Zeichenfolge eines bestimmten `String`zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1321">This example demonstrates the use of the `Right` function to return a substring of a given `String`.</span></span> <span data-ttu-id="05a32-1322">In einer Klasse, die über eine `Right`-Eigenschaft verfügt, kann es erforderlich sein, die `Right`-Funktion vollständig zu qualifizieren.</span><span class="sxs-lookup"><span data-stu-id="05a32-1322">In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1323"><paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="05a32-1323"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1324">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1324">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RSet">
      <MemberSignature Language="C#" Value="public static string RSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RSet(string Source, int32 Length) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member RSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.RSet (Source, Length)" />
      <MemberSignature Language="ILAsm" Value=".method public static string RSet(string Source, int32 Length) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="05a32-1325">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1325">Required.</span></span> <span data-ttu-id="05a32-1326"><see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1326"><see langword="String" /> expression.</span></span> <span data-ttu-id="05a32-1327">Name der Zeichenfolgenvariablen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1327">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="05a32-1328">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1328">Required.</span></span> <span data-ttu-id="05a32-1329"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1329"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1330">Länge der zurückgegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1330">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="05a32-1331">Gibt eine rechts ausgerichtete Zeichenfolge zurück, die die angegebene Zeichenfolge in der vorgegebenen Länge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1331">Returns a right-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="05a32-1332">Eine rechts ausgerichtete Zeichenfolge, die die an die angegebene Länge angepasste angegebene Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1332">A right-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1333">Wenn `Source` länger als `Length`ist, platziert `RSet` in der zurückgegebenen Zeichenfolge nur die äußersten linken Zeichen bis zur Länge `Source`.</span><span class="sxs-lookup"><span data-stu-id="05a32-1333">If `Source` is longer than `Length`, `RSet` places only the leftmost characters, up to the length of `Source`, in the returned string.</span></span> <span data-ttu-id="05a32-1334">Wenn die angegebene Zeichenfolge kürzer als die angegebene Länge ist, werden Leerzeichen am linken Ende der Zeichenfolge hinzugefügt, um die entsprechende Länge zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-1334">If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</span></span> <span data-ttu-id="05a32-1335">Wenn die angegebene Zeichenfolge länger als die angegebene Länge ist, wird Sie auf die angegebene Länge verkürzt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1335">If the specified string is longer than the specified length, it is shortened to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1336">In diesem Beispiel wird die Verwendung der `RSet`-Funktion veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="05a32-1336">This example demonstrates the use of the `RSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1337">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1337">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="05a32-1338">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="05a32-1338">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types"><span data-ttu-id="05a32-1339">Effiziente Verwendung von Datentypen</span><span class="sxs-lookup"><span data-stu-id="05a32-1339">Efficient Use of Data Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RTrim">
      <MemberSignature Language="C#" Value="public static string RTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RTrim(string str) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member RTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.RTrim str" />
      <MemberSignature Language="ILAsm" Value=".method public static string RTrim(string str) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-1340">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1340">Required.</span></span> <span data-ttu-id="05a32-1341">Jeder gültige <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1341">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="05a32-1342">Gibt eine Zeichenfolge zurück, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1342">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="05a32-1343">Eine Zeichenfolge, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1343">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1344">Die Funktionen `LTrim`, `RTrim`und `Trim` entfernen Leerzeichen von den Enden von Zeichen folgen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1344">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1345">In diesem Beispiel werden mit der `LTrim`-Funktion führende Leerzeichen und mit der `RTrim`-Funktion nachstehende Leerzeichen aus einer Zeichenfolgenvariablen entfernt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1345">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="05a32-1346">Mit der `Trim`-Funktion werden beide Typen von Leerzeichen entfernt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1346">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1347">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1347">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Space(int32 Number) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Space (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Space(int Number);" />
      <MemberSignature Language="F#" Value="static member Space : int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Space Number" />
      <MemberSignature Language="ILAsm" Value=".method public static string Space(int32 Number) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="05a32-1348">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1348">Required.</span></span> <span data-ttu-id="05a32-1349"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1349"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1350">Die Anzahl der gewünschten Leerzeichen in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1350">The number of spaces you want in the string.</span></span></param>
        <summary><span data-ttu-id="05a32-1351">Gibt eine Zeichenfolge mit der angegebenen Anzahl von Leerzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1351">Returns a string consisting of the specified number of spaces.</span></span></summary>
        <returns><span data-ttu-id="05a32-1352">Eine Zeichenfolge mit der angegebenen Anzahl Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1352">A string consisting of the specified number of spaces.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1353">Die `Space`-Funktion ist hilfreich beim Formatieren der Ausgabe und Löschen von Daten in Zeichen folgen fester Länge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1353">The `Space` function is useful for formatting output and clearing data in fixed-length strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1354">Dieses Beispiel verwendet die `Space`-Funktion, um eine Zeichenfolge zurückzugeben, die aus einer angegebenen Anzahl von Leerzeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="05a32-1354">This example uses the `Space` function to return a string consisting of a specified number of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1355"><paramref name="Number" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="05a32-1355"><paramref name="Number" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1356">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1356">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string Expression, string Delimiter = &quot; &quot;, int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (Expression As String, Optional Delimiter As String = &quot; &quot;, Optional Limit As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Split : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Split (Expression, Delimiter, Limit, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Limit" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1357">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1357">Required.</span></span> <span data-ttu-id="05a32-1358"><see langword="String" />-Ausdruck mit untergeordneten Zeichenfolgen und Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1358"><see langword="String" /> expression containing substrings and delimiters.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="05a32-1359">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1359">Optional.</span></span> <span data-ttu-id="05a32-1360">Jedes einzelne Zeichen, mit dem Grenzen von untergeordneten Zeichenfolgen gekennzeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1360">Any single character used to identify substring limits.</span></span> <span data-ttu-id="05a32-1361">Wenn <paramref name="Delimiter" /> nicht angegeben wird, wird als Trennzeichen das Leerzeichen (" ") angenommen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1361">If <paramref name="Delimiter" /> is omitted, the space character (" ") is assumed to be the delimiter.</span></span></param>
        <param name="Limit"><span data-ttu-id="05a32-1362">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1362">Optional.</span></span> <span data-ttu-id="05a32-1363">Die maximale Anzahl von untergeordneten Zeichenfolgen, in die die Eingabezeichenfolge geteilt werden soll.</span><span class="sxs-lookup"><span data-stu-id="05a32-1363">Maximum number of substrings into which the input string should be split.</span></span> <span data-ttu-id="05a32-1364">Der Standardwert –1 gibt an, dass die Eingabezeichenfolge an jedem Vorkommen der <paramref name="Delimiter" />-Zeichenfolge getrennt werden soll.</span><span class="sxs-lookup"><span data-stu-id="05a32-1364">The default, -1, indicates that the input string should be split at every occurrence of the <paramref name="Delimiter" /> string.</span></span></param>
        <param name="Compare"><span data-ttu-id="05a32-1365">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1365">Optional.</span></span> <span data-ttu-id="05a32-1366">Numerischer Wert, der den Vergleich angibt, der für das Auswerten von untergeordneten Zeichenfolgen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1366">Numeric value indicating the comparison to use when evaluating substrings.</span></span> <span data-ttu-id="05a32-1367">Die Werte finden Sie unter „Einstellungen“.</span><span class="sxs-lookup"><span data-stu-id="05a32-1367">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="05a32-1368">Gibt ein nullbasiertes, eindimensionales Array zurück, das eine angegebene Anzahl von Teilzeichenfolgen enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1368">Returns a zero-based, one-dimensional array containing a specified number of substrings.</span></span></summary>
        <returns><span data-ttu-id="05a32-1369"><see langword="String" /> -Array.</span><span class="sxs-lookup"><span data-stu-id="05a32-1369"><see langword="String" /> array.</span></span> <span data-ttu-id="05a32-1370">Wenn <paramref name="Expression" /> eine Zeichenfolge ("") der Länge 0 (null) ist, gibt <see langword="Split" /> ein Array mit einem Element zurück, das eine Zeichenfolge der Länge 0 (null) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1370">If <paramref name="Expression" /> is a zero-length string (""), <see langword="Split" /> returns a single-element array containing a zero-length string.</span></span> <span data-ttu-id="05a32-1371">Wenn <paramref name="Delimiter" /> eine Zeichenfolge der Länge 0 (null) ist oder nicht in <paramref name="Expression" /> vorkommt, gibt <see langword="Split" /> ein Array mit einem Element zurück, das die gesamte <paramref name="Expression" />-Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1371">If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, <see langword="Split" /> returns a single-element array containing the entire <paramref name="Expression" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1372">Standardmäßig oder wenn `Limit` gleich-1 ist, wird die Eingabe Zeichenfolge von der `Split`-Funktion bei jedem Vorkommen der Trenn Zeichenfolge geteilt und die Teil Zeichenfolgen in einem Array zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1372">By default, or when `Limit` equals -1, the `Split` function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</span></span> <span data-ttu-id="05a32-1373">Wenn der `Limit`-Parameter größer als 0 (null) ist, teilt die `Split`-Funktion die Zeichenfolge an den ersten `Limit`-1-Vorkommen des Trenn Zeichens auf und gibt ein Array mit den resultierenden Teil Zeichenfolgen zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1373">When the `Limit` parameter is greater than zero, the `Split` function splits the string at the first `Limit`-1 occurrences of the delimiter, and returns an array with the resulting substrings.</span></span> <span data-ttu-id="05a32-1374">`Split("a:b:c", ":")` gibt z. b. das Array `{"a", "b", "c"}`zurück, während `Split("a:b:c", ":", 2)` das Array `{"a", "b:c"}`zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1374">For example, `Split("a:b:c", ":")` returns the array `{"a", "b", "c"}`, while `Split("a:b:c", ":", 2)` returns the array `{"a", "b:c"}`.</span></span>  
  
 <span data-ttu-id="05a32-1375">Wenn die `Split`-Funktion zwei Trennzeichen in einer Zeile oder ein Trennzeichen am Anfang oder Ende der Zeichenfolge findet, interpretiert Sie diese als eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="05a32-1375">When the `Split` function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</span></span> <span data-ttu-id="05a32-1376">`Split("xx", "x")` gibt z. b. das Array zurück, das drei leere Zeichen folgen enthält: eine zwischen dem Anfang der Zeichenfolge und dem ersten "x", eine aus den beiden "x"-Zeichen folgen und eine zwischen dem letzten "x" und dem Ende der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1376">For example, `Split("xx", "x")` returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</span></span>  
  
 <span data-ttu-id="05a32-1377">Diese Tabelle veranschaulicht, wie die optionalen `Delimiter`-, `Limit`-und `Compare`-Parameter das Verhalten der `Split` Funktion ändern können.</span><span class="sxs-lookup"><span data-stu-id="05a32-1377">This table demonstrates how the optional `Delimiter`, `Limit`, and `Compare` parameters can change the behavior of the `Split` function.</span></span>  
  
|<span data-ttu-id="05a32-1378">Split-Befehl</span><span class="sxs-lookup"><span data-stu-id="05a32-1378">Split Call</span></span>|<span data-ttu-id="05a32-1379">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="05a32-1379">Return Value</span></span>|  
|-|-|  
|`Split("42, 12, 19")`|<span data-ttu-id="05a32-1380">{"42," , "12," , "19"}</span><span class="sxs-lookup"><span data-stu-id="05a32-1380">{"42," , "12," , "19"}</span></span>|  
|`Split("42, 12, 19", ", ")`|<span data-ttu-id="05a32-1381">{"42", "12", "19"}</span><span class="sxs-lookup"><span data-stu-id="05a32-1381">{"42", "12", "19"}</span></span>|  
|`Split("42, 12, 19", ", ", 2)`|<span data-ttu-id="05a32-1382">{"42", "12, 19"}</span><span class="sxs-lookup"><span data-stu-id="05a32-1382">{"42", "12, 19"}</span></span>|  
|`Split("192.168.0.1", ".")`|<span data-ttu-id="05a32-1383">{"192", "168", "0", "1"}</span><span class="sxs-lookup"><span data-stu-id="05a32-1383">{"192", "168", "0", "1"}</span></span>|  
|`Split("Alice and Bob", " AND ")`|<span data-ttu-id="05a32-1384">{"Alice und Bob"}</span><span class="sxs-lookup"><span data-stu-id="05a32-1384">{"Alice and Bob"}</span></span>|  
|`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`|<span data-ttu-id="05a32-1385">{"Alice", "Bob"}</span><span class="sxs-lookup"><span data-stu-id="05a32-1385">{"Alice", "Bob"}</span></span>|  
|`Split("someone@example.com", "@",1)`|<span data-ttu-id="05a32-1386">{"someone@example.com"}</span><span class="sxs-lookup"><span data-stu-id="05a32-1386">{"someone@example.com"}</span></span>|  
|`Split("someone@example.com", "@",2)`|<span data-ttu-id="05a32-1387">{"Person", "example.com"}</span><span class="sxs-lookup"><span data-stu-id="05a32-1387">{"someone", "example.com"}</span></span>|  
  
 <span data-ttu-id="05a32-1388">Das `Compare`-Argument kann die folgenden Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1388">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="05a32-1389">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-1389">Constant</span></span>|<span data-ttu-id="05a32-1390">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-1390">Description</span></span>|<span data-ttu-id="05a32-1391">value</span><span class="sxs-lookup"><span data-stu-id="05a32-1391">Value</span></span>|  
|-|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="05a32-1392">Führt einen binären Vergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-1392">Performs a binary comparison</span></span>|<span data-ttu-id="05a32-1393">0</span><span class="sxs-lookup"><span data-stu-id="05a32-1393">0</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="05a32-1394">Führt einen Textvergleich aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-1394">Performs a textual comparison</span></span>|<span data-ttu-id="05a32-1395">1</span><span class="sxs-lookup"><span data-stu-id="05a32-1395">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1396">Im folgenden Beispiel wird veranschaulicht, wie eine Zeichenfolge in ihren Leerzeichen aufgeteilt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1396">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 <span data-ttu-id="05a32-1397">Im folgenden Beispiel wird veranschaulicht, wie Zeichen folgen mit mehreren Trennzeichen in einer Zeile aufgeteilt und leere Zeichen folgen herausgefiltert werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1397">The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Join" />
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1398">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1398">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrComp">
      <MemberSignature Language="C#" Value="public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrComp (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member StrComp : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.StrComp (String1, String2, Compare)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="String2" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="05a32-1399">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1399">Required.</span></span> <span data-ttu-id="05a32-1400">Jeder gültige <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1400">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="String2"><span data-ttu-id="05a32-1401">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1401">Required.</span></span> <span data-ttu-id="05a32-1402">Jeder gültige <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1402">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Compare"><span data-ttu-id="05a32-1403">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1403">Optional.</span></span> <span data-ttu-id="05a32-1404">Gibt den Typ des Zeichenfolgenvergleichs an.</span><span class="sxs-lookup"><span data-stu-id="05a32-1404">Specifies the type of string comparison.</span></span> <span data-ttu-id="05a32-1405">Wenn <paramref name="Compare" /> ausgelassen wird, bestimmt die <see langword="Option Compare" />-Einstellung den Typ des Vergleichs.</span><span class="sxs-lookup"><span data-stu-id="05a32-1405">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="05a32-1406">Gibt abhängig vom Ergebnis eines Zeichenfolgenvergleichs den Wert -1, 0 oder 1 zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1406">Returns -1, 0, or 1, based on the result of a string comparison.</span></span></summary>
        <returns><span data-ttu-id="05a32-1407">Die <see langword="StrComp" />-Funktion besitzt die folgenden Rückgabewerte.</span><span class="sxs-lookup"><span data-stu-id="05a32-1407">The <see langword="StrComp" /> function has the following return values.</span></span>  
  
 <list type="table"><item><term> <span data-ttu-id="05a32-1408">Wenn</span><span class="sxs-lookup"><span data-stu-id="05a32-1408">If</span></span> 
 </term><description> <span data-ttu-id="05a32-1409">Rückgabewert von StrComp</span><span class="sxs-lookup"><span data-stu-id="05a32-1409">StrComp returns</span></span> 
 </description></item><item><term><span data-ttu-id="05a32-1410"><paramref name="String1" /> Sortierung vor <paramref name="String2" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1410"><paramref name="String1" /> sorts ahead of <paramref name="String2" /></span></span></term><description> <span data-ttu-id="05a32-1411">-1</span><span class="sxs-lookup"><span data-stu-id="05a32-1411">-1</span></span> 
 </description></item><item><term><span data-ttu-id="05a32-1412"><paramref name="String1" /> ist gleich <paramref name="String2" />.</span><span class="sxs-lookup"><span data-stu-id="05a32-1412"><paramref name="String1" /> is equal to <paramref name="String2" /></span></span></term><description> <span data-ttu-id="05a32-1413">0</span><span class="sxs-lookup"><span data-stu-id="05a32-1413">0</span></span> 
 </description></item><item><term><span data-ttu-id="05a32-1414"><paramref name="String1" /> Sortierung nach <paramref name="String2" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1414"><paramref name="String1" /> sorts after <paramref name="String2" /></span></span></term><description> <span data-ttu-id="05a32-1415">1</span><span class="sxs-lookup"><span data-stu-id="05a32-1415">1</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1416">Die Zeichen folgen werden mit alphanumerischen Sortier Werten verglichen, beginnend mit dem ersten Zeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1416">The strings are compared by alphanumeric sort values beginning with the first character.</span></span> <span data-ttu-id="05a32-1417">Weitere Informationen zu binären vergleichen, Text vergleichen und der Sortierreihenfolge finden Sie unter [Option Compare-Anweisung](/dotnet/visual-basic/language-reference/statements/option-compare-statement).</span><span class="sxs-lookup"><span data-stu-id="05a32-1417">For further information on binary comparisons, textual comparisons, and sort order, see [Option Compare Statement](/dotnet/visual-basic/language-reference/statements/option-compare-statement).</span></span>  
  
 <span data-ttu-id="05a32-1418">Die `Compare`-Argumenteinstellungen lauten:</span><span class="sxs-lookup"><span data-stu-id="05a32-1418">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="05a32-1419">Dauerhaft</span><span class="sxs-lookup"><span data-stu-id="05a32-1419">Constant</span></span>|<span data-ttu-id="05a32-1420">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-1420">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="05a32-1421">Führt einen binären Vergleich basierend auf einer Sortierreihenfolge aus, die von den internen binären Darstellungen der Zeichen abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-1421">Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</span></span>|  
|`Text`|<span data-ttu-id="05a32-1422">Führt einen Textvergleich aus, der auf einer Text Sortierreihenfolge ohne Beachtung der Groß-/Kleinschreibung basiert, die vom `LocaleID` Wert Ihres Systems</span><span class="sxs-lookup"><span data-stu-id="05a32-1422">Performs a text comparison, based on a case-insensitive text sort order determined by your system's `LocaleID` value.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1423">In diesem Beispiel wird die `StrComp`-Funktion verwendet, um die Ergebnisse eines Zeichen folgen Vergleichs zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1423">This example uses the `StrComp` function to return the results of a string comparison.</span></span>  
  
 [!code-vb[VbVbalrStrings#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1424">Der <paramref name="Compare" />-Wert ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="05a32-1424"><paramref name="Compare" /> value is not valid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1425">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1425">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-1426">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1426">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-1427">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1427">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrConv">
      <MemberSignature Language="C#" Value="public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrConv (str As String, Conversion As VbStrConv, Optional LocaleID As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="static member StrConv : string * Microsoft.VisualBasic.VbStrConv * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrConv (str, Conversion, LocaleID)" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Conversion" Type="Microsoft.VisualBasic.VbStrConv" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="LocaleID" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-1428">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1428">Required.</span></span> <span data-ttu-id="05a32-1429">Der zu konvertierende <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1429"><see langword="String" /> expression to be converted.</span></span></param>
        <param name="Conversion"><span data-ttu-id="05a32-1430">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1430">Required.</span></span> <span data-ttu-id="05a32-1431"><see cref="T:Microsoft.VisualBasic.VbStrConv" />-Member.</span><span class="sxs-lookup"><span data-stu-id="05a32-1431"><see cref="T:Microsoft.VisualBasic.VbStrConv" /> member.</span></span> <span data-ttu-id="05a32-1432">Der Enumerationswert, der den Typ der auszuführenden Konvertierung angibt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1432">The enumeration value specifying the type of conversion to perform.</span></span></param>
        <param name="LocaleID"><span data-ttu-id="05a32-1433">Optional.</span><span class="sxs-lookup"><span data-stu-id="05a32-1433">Optional.</span></span> <span data-ttu-id="05a32-1434">Der <see langword="LocaleID" />-Wert, wenn dieser sich vom <see langword="LocaleID" />-Wert des Systems unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1434">The <see langword="LocaleID" /> value, if different from the system <see langword="LocaleID" /> value.</span></span> <span data-ttu-id="05a32-1435">(Der <see langword="LocaleID" />-Wert des Systems ist der Standardwert.)</span><span class="sxs-lookup"><span data-stu-id="05a32-1435">(The system <see langword="LocaleID" /> value is the default.)</span></span></param>
        <summary><span data-ttu-id="05a32-1436">Gibt eine wie angegeben konvertierte Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="05a32-1436">Returns a string converted as specified.</span></span></summary>
        <returns><span data-ttu-id="05a32-1437">Eine wie angegeben konvertierte Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1437">A string converted as specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1438">Die Konstanten `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`und `VbStrConv.Hiragana` können Laufzeitfehler verursachen, wenn Sie in Gebiets Schemas verwendet werden, in denen Sie nicht zutreffen, aber nicht immer: die Konstanten `VbStrConv.Katakana` und `VbStrConv.Hiragana` können in einem nicht japanischen System mit installiertem Japanisch Language Pack verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1438">The constants `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, and `VbStrConv.Hiragana` can cause run-time errors when used in locales where they do not apply, but not always: the constants `VbStrConv.Katakana` and `VbStrConv.Hiragana` can be used in a non-Japanese system with the Japanese Language Pack installed.</span></span> <span data-ttu-id="05a32-1439">Außerdem wird die Verwendung der Konstanten `VbStrConv.Wide` und `VbStrConv.Narrow` auf jedem System unterstützt, auf dem eine ostasiatische Sprache installiert ist.</span><span class="sxs-lookup"><span data-stu-id="05a32-1439">In addition, use of the constants `VbStrConv.Wide` and `VbStrConv.Narrow` is supported on any system with an East Asian language installed.</span></span>  
  
 <span data-ttu-id="05a32-1440">Diese Funktion verwendet die Kultur Informationen der Anwendung bei der Bearbeitung der Zeichenfolge, sodass die Fall Änderungen für das Gebiets Schema geeignet sind, in dem die Anwendung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1440">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="05a32-1441">Wenn Ihre Anwendung Sicherheitsentscheidungen auf Grundlage des Ergebnisses eines Vergleichs-oder Fall Änderungs Vorgangs trifft, sollte der Vorgang die <xref:System.String.Compare%2A?displayProperty=nameWithType>-Methode verwenden und <xref:System.StringComparison.Ordinal> oder <xref:System.StringComparison.OrdinalIgnoreCase> für das `comparisonType`-Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1441">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="05a32-1442">Weitere Informationen finden Sie unter [so wirkt sich die Kultur auf Zeichen folgen in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings)aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-1442">For more information, see [How Culture Affects Strings in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings).</span></span>  
  
 <span data-ttu-id="05a32-1443">Die `Conversion`-Argumenteinstellungen lauten:</span><span class="sxs-lookup"><span data-stu-id="05a32-1443">The `Conversion` argument settings are:</span></span>  
  
|<span data-ttu-id="05a32-1444">Enumerationsmember</span><span class="sxs-lookup"><span data-stu-id="05a32-1444">Enumeration member</span></span>|<span data-ttu-id="05a32-1445">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="05a32-1445">Description</span></span>|  
|-|-|  
|`VbStrConv.None`|<span data-ttu-id="05a32-1446">Führt keine Konvertierung aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-1446">Performs no conversion</span></span>|  
|`VbStrConv.LinguisticCasing`|<span data-ttu-id="05a32-1447">Verwendet linguistische Regeln für die Groß-und Kleinschreibung anstelle des Dateisystems (Standard).</span><span class="sxs-lookup"><span data-stu-id="05a32-1447">Uses linguistic rules for casing, rather than File System (default).</span></span> <span data-ttu-id="05a32-1448">Gültig mit `VbStrConv.UpperCase` und `VbStrConv.LowerCase`.</span><span class="sxs-lookup"><span data-stu-id="05a32-1448">Valid with `VbStrConv.UpperCase` and `VbStrConv.LowerCase` only.</span></span>|  
|`VbStrConv.UpperCase`|<span data-ttu-id="05a32-1449">Konvertiert die Zeichenfolge in Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1449">Converts the string to uppercase characters.</span></span>|  
|`VbStrConv.LowerCase`|<span data-ttu-id="05a32-1450">Konvertiert die Zeichenfolge in Kleinbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1450">Converts the string to lowercase characters.</span></span>|  
|`VbStrConv.ProperCase`|<span data-ttu-id="05a32-1451">Konvertiert den ersten Buchstaben jedes Worts in einer Zeichenfolge in einen Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1451">Converts the first letter of every word in string to uppercase.</span></span>|  
|<span data-ttu-id="05a32-1452">`VbStrConv.Wide` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="05a32-1452">`VbStrConv.Wide` <sup>\*</sup></span></span>|<span data-ttu-id="05a32-1453">Konvertiert schmale Zeichen (halbbreite) in der Zeichenfolge in Breite Zeichen (Breite).</span><span class="sxs-lookup"><span data-stu-id="05a32-1453">Converts narrow (half-width) characters in the string to wide (full-width) characters.</span></span> [!INCLUDE[vbstrconv-wide](~/includes/vbstrconv-wide-md.md)]|  
|<span data-ttu-id="05a32-1454">`VbStrConv.Narrow` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="05a32-1454">`VbStrConv.Narrow` <sup>\*</sup></span></span>|<span data-ttu-id="05a32-1455">Konvertiert Breite Zeichen (ganze Breite) in der Zeichenfolge in schmale Zeichen (halbe Breite).</span><span class="sxs-lookup"><span data-stu-id="05a32-1455">Converts wide (full-width) characters in the string to narrow (half-width) characters.</span></span>|  
|<span data-ttu-id="05a32-1456">`VbStrConv.Katakana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="05a32-1456">`VbStrConv.Katakana` <sup>\*\*</sup></span></span>|<span data-ttu-id="05a32-1457">Konvertiert Hiragana-Zeichen in der Zeichenfolge in Katakana-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1457">Converts Hiragana characters in the string to Katakana characters.</span></span>|  
|<span data-ttu-id="05a32-1458">`VbStrConv.Hiragana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="05a32-1458">`VbStrConv.Hiragana` <sup>\*\*</sup></span></span>|<span data-ttu-id="05a32-1459">Konvertiert Katakana-Zeichen in der Zeichenfolge in Hiragana-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1459">Converts Katakana characters in the string to Hiragana characters.</span></span>|  
|<span data-ttu-id="05a32-1460">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="05a32-1460">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span></span>|<span data-ttu-id="05a32-1461">Konvertiert herkömmliche chinesische Zeichen in vereinfachtes Chinesisch.</span><span class="sxs-lookup"><span data-stu-id="05a32-1461">Converts Traditional Chinese characters to Simplified Chinese.</span></span>|  
|<span data-ttu-id="05a32-1462">`VbStrConv.TraditionalChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="05a32-1462">`VbStrConv.TraditionalChinese` <sup>\*</sup></span></span>|<span data-ttu-id="05a32-1463">Konvertiert vereinfachte chinesische Zeichen in Chinesisch (traditionell).</span><span class="sxs-lookup"><span data-stu-id="05a32-1463">Converts Simplified Chinese characters to Traditional Chinese.</span></span>|  
  
 <span data-ttu-id="05a32-1464"><sup>\*</sup> Gilt für asiatische Gebiets Schemas.</span><span class="sxs-lookup"><span data-stu-id="05a32-1464"><sup>\*</sup> Applies to Asian locales.</span></span>  
  
 <span data-ttu-id="05a32-1465"><sup>\*\*</sup> Gilt nur für Japan.</span><span class="sxs-lookup"><span data-stu-id="05a32-1465"><sup>\*\*</sup> Applies to Japan only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05a32-1466">Diese Konstanten werden in der .NET Framework Common Language Runtime angegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1466">These constants are specified in the .NET Framework common language runtime.</span></span> <span data-ttu-id="05a32-1467">Daher können Sie an beliebiger Stelle im Code anstelle der tatsächlichen Werte verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="05a32-1467">As a result, they can be used anywhere in your code in place of the actual values.</span></span> <span data-ttu-id="05a32-1468">Die meisten können (z. b. `UpperCase + Wide`) kombiniert werden, außer wenn Sie sich gegenseitig ausschließen (z. b. `VbStrConv.Wide + VbStrConv.Narrow`).</span><span class="sxs-lookup"><span data-stu-id="05a32-1468">Most can be combined (for example, `UpperCase + Wide`), except when they are mutually exclusive (for example, `VbStrConv.Wide + VbStrConv.Narrow`).</span></span>  
  
 <span data-ttu-id="05a32-1469">Im folgenden sind gültige Wort Trennzeichen für die richtige Schreibweise aufgeführt: NULL (`Chr$(0)`), horizontale Registerkarte (`Chr$(9)`), Zeilenvorschub (`Chr$(10)`), vertikale Registerkarte (`Chr$(11)`), Formular Vorschub (`Chr$(12)`), Wagen Rücklauf (`Chr$(13)`), Leerzeichen (Einzel Byte-Zeichensatz) (`Chr$(32)`).</span><span class="sxs-lookup"><span data-stu-id="05a32-1469">The following are valid word separators for proper casing: Null (`Chr$(0)`), horizontal tab (`Chr$(9)`), line feed (`Chr$(10)`), vertical tab (`Chr$(11)`), form feed (`Chr$(12)`), carriage return (`Chr$(13)`), space (single-byte character set) (`Chr$(32)`).</span></span> <span data-ttu-id="05a32-1470">Der tatsächliche Wert für ein Leerzeichen, das voll oder halb breit sein kann, variiert je nach Land/Region für ostasiatische Kulturen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1470">The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1471">In diesem Beispiel wird Text in alle Kleinbuchstaben konvertiert.</span><span class="sxs-lookup"><span data-stu-id="05a32-1471">This example converts text into all lowercase letters.</span></span>  
  
 [!code-vb[VbVbalrStrings#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1472"><paramref name="LocaleID" /> nicht unterstützt, <paramref name="Conversion" /> &lt; 0 oder &gt; 2048, oder nicht unterstützte Konvertierung für das angegebene Gebietsschema.</span><span class="sxs-lookup"><span data-stu-id="05a32-1472">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1473">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1473">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/functions/type-conversion-functions"><span data-ttu-id="05a32-1474">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="05a32-1474">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="StrDup">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-1475">Gibt eine Zeichenfolge oder ein Objekt zurück, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1475">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, char Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StrDup(int32 Number, char Character) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, char Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * char -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, char Character) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Character" Type="System.Char" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="05a32-1476">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1476">Required.</span></span> <span data-ttu-id="05a32-1477"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1477"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1478">Die Länge der zurückzugebenden Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1478">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="05a32-1479">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1479">Required.</span></span> <span data-ttu-id="05a32-1480">Alle gültigen <see langword="Char" />-Ausdrücke, <see langword="String" />-Ausdrücke oder <see langword="Object" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-1480">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="05a32-1481">Es wird nur das erste Zeichen des Ausdrucks verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1481">Only the first character of the expression will be used.</span></span> <span data-ttu-id="05a32-1482">Wenn das Zeichen vom Typ <see langword="Object" /> ist, muss es entweder einen <see langword="Char" />-Wert oder einen <see langword="String" />-Wert enthalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-1482">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="05a32-1483">Gibt eine Zeichenfolge oder ein Objekt zurück, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1483">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="05a32-1484">Eine Zeichenfolge oder ein Objekt, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1484">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1485">Diese Funktion gibt einen `String` zurück, der aus wiederholten Zeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="05a32-1485">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="05a32-1486">Das Zeichen, das die Zeichenfolge bildet, ist das erste Zeichen im `Character`-Argument, und es wird `Number` oft dupliziert.</span><span class="sxs-lookup"><span data-stu-id="05a32-1486">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1487">In diesem Beispiel wird die `StrDup`-Funktion verwendet, um eine Zeichenfolge doppelter Zeichen zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1487">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1488"><paramref name="Number" /> ist kleiner als 0 (null), oder der <paramref name="Character" />-Typ ist nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="05a32-1488"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05a32-1489"><paramref name="Character" /> ist <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1489"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1490">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1490">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static object StrDup (int Number, object Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object StrDup(int32 Number, object Character) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrDup(int Number, System::Object ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * obj -&gt; obj" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrDup(int32 Number, object Character) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Character" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="05a32-1491">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1491">Required.</span></span> <span data-ttu-id="05a32-1492"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1492"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1493">Die Länge der zurückzugebenden Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1493">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="05a32-1494">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1494">Required.</span></span> <span data-ttu-id="05a32-1495">Alle gültigen <see langword="Char" />-Ausdrücke, <see langword="String" />-Ausdrücke oder <see langword="Object" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-1495">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="05a32-1496">Es wird nur das erste Zeichen des Ausdrucks verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1496">Only the first character of the expression will be used.</span></span> <span data-ttu-id="05a32-1497">Wenn das Zeichen vom Typ <see langword="Object" /> ist, muss es entweder einen <see langword="Char" />-Wert oder einen <see langword="String" />-Wert enthalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-1497">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="05a32-1498">Gibt eine Zeichenfolge oder ein Objekt zurück, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1498">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="05a32-1499">Eine Zeichenfolge oder ein Objekt, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1499">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1500">Diese Funktion gibt einen `String` zurück, der aus wiederholten Zeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="05a32-1500">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="05a32-1501">Das Zeichen, das die Zeichenfolge bildet, ist das erste Zeichen im `Character`-Argument, und es wird `Number` oft dupliziert.</span><span class="sxs-lookup"><span data-stu-id="05a32-1501">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1502">In diesem Beispiel wird die `StrDup`-Funktion verwendet, um eine Zeichenfolge doppelter Zeichen zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1502">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1503"><paramref name="Number" /> ist kleiner als 0 (null), oder der <paramref name="Character" />-Typ ist nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="05a32-1503"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05a32-1504"><paramref name="Character" /> ist <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1504"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1505">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1505">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, string Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StrDup(int32 Number, string Character) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, System::String ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, string Character) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="Character" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="05a32-1506">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1506">Required.</span></span> <span data-ttu-id="05a32-1507"><see langword="Integer" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1507"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="05a32-1508">Die Länge der zurückzugebenden Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1508">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="05a32-1509">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1509">Required.</span></span> <span data-ttu-id="05a32-1510">Alle gültigen <see langword="Char" />-Ausdrücke, <see langword="String" />-Ausdrücke oder <see langword="Object" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-1510">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="05a32-1511">Es wird nur das erste Zeichen des Ausdrucks verwendet.</span><span class="sxs-lookup"><span data-stu-id="05a32-1511">Only the first character of the expression will be used.</span></span> <span data-ttu-id="05a32-1512">Wenn das Zeichen vom Typ <see langword="Object" /> ist, muss es entweder einen <see langword="Char" />-Wert oder einen <see langword="String" />-Wert enthalten.</span><span class="sxs-lookup"><span data-stu-id="05a32-1512">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="05a32-1513">Gibt eine Zeichenfolge oder ein Objekt zurück, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1513">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="05a32-1514">Eine Zeichenfolge oder ein Objekt, in der bzw. dem das angegebene Zeichen so häufig wie angegeben wiederholt wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1514">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1515">Diese Funktion gibt einen `String` zurück, der aus wiederholten Zeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="05a32-1515">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="05a32-1516">Das Zeichen, das die Zeichenfolge bildet, ist das erste Zeichen im `Character`-Argument, und es wird `Number` oft dupliziert.</span><span class="sxs-lookup"><span data-stu-id="05a32-1516">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1517">In diesem Beispiel wird die `StrDup`-Funktion verwendet, um eine Zeichenfolge doppelter Zeichen zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1517">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="05a32-1518"><paramref name="Number" /> ist kleiner als 0 (null), oder der <paramref name="Character" />-Typ ist nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="05a32-1518"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05a32-1519"><paramref name="Character" /> ist <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="05a32-1519"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1520">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1520">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrReverse">
      <MemberSignature Language="C#" Value="public static string StrReverse (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StrReverse(string Expression) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrReverse (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrReverse(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member StrReverse : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrReverse Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrReverse(string Expression) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="05a32-1521">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1521">Required.</span></span> <span data-ttu-id="05a32-1522">Zeichenfolgenausdruck, dessen Zeichen umgekehrt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1522">String expression whose characters are to be reversed.</span></span> <span data-ttu-id="05a32-1523">Wenn <paramref name="Expression" /> eine Zeichenfolge der Länge 0 ("") ist, wird eine Zeichenfolge der Länge 0 (null) zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1523">If <paramref name="Expression" /> is a zero-length string (""), a zero-length string is returned.</span></span></param>
        <summary><span data-ttu-id="05a32-1524">Gibt eine Zeichenfolge zurück, in der die Reihenfolge der Zeichen in einer bestimmten Zeichenfolge umgekehrt wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-1524">Returns a string in which the character order of a specified string is reversed.</span></span></summary>
        <returns><span data-ttu-id="05a32-1525">Eine Zeichenfolge, in der die Reihenfolge der Zeichen in einer angegebenen Zeichenfolge umgekehrt wurde.</span><span class="sxs-lookup"><span data-stu-id="05a32-1525">A string in which the character order of a specified string is reversed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1526">Die `StrReverse`-Funktion gibt eine Zeichenfolge zurück, die die gleichen Zeichen wie `Expression`enthält, jedoch in umgekehrter Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="05a32-1526">The `StrReverse` function returns a string that contains the same characters as `Expression`, but in the opposite order.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrStrings#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1527">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1527">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static string Trim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Trim(string str) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Trim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Trim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Trim str" />
      <MemberSignature Language="ILAsm" Value=".method public static string Trim(string str) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="05a32-1528">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1528">Required.</span></span> <span data-ttu-id="05a32-1529">Jeder gültige <see langword="String" />-Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="05a32-1529">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="05a32-1530">Gibt eine Zeichenfolge zurück, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1530">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="05a32-1531">Eine Zeichenfolge, die eine Kopie einer angegebenen Zeichenfolge ohne führende Leerzeichen (<see langword="LTrim" />), ohne nachstehende Leerzeichen (<see langword="RTrim" />) bzw. ohne führende und nachstehende Leerzeichen (<see langword="Trim" />) enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1531">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1532">Die Funktionen `LTrim`, `RTrim`und `Trim` entfernen Leerzeichen von den Enden von Zeichen folgen.</span><span class="sxs-lookup"><span data-stu-id="05a32-1532">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1533">In diesem Beispiel werden mit der `LTrim`-Funktion führende Leerzeichen und mit der `RTrim`-Funktion nachstehende Leerzeichen aus einer Zeichenfolgenvariablen entfernt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1533">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="05a32-1534">Mit der `Trim`-Funktion werden beide Typen von Leerzeichen entfernt.</span><span class="sxs-lookup"><span data-stu-id="05a32-1534">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1535">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1535">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05a32-1536">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das die angegebene Zeichenfolge in Großbuchstaben enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1536">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static char UCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char UCase(char Value) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char UCase(char Value);" />
      <MemberSignature Language="F#" Value="static member UCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberSignature Language="ILAsm" Value=".method public static char UCase(char Value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="05a32-1537">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1537">Required.</span></span> <span data-ttu-id="05a32-1538">Alle gültigen <see langword="String" />-Ausdrücke oder <see langword="Char" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-1538">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="05a32-1539">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das die angegebene Zeichenfolge in Großbuchstaben enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1539">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="05a32-1540">Eine Zeichenfolge oder ein Zeichen, die bzw. das die angegebene Zeichenfolge in Großbuchstaben konvertiert enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1540">A string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1541">Nur Kleinbuchstaben werden in Großbuchstaben konvertiert. alle Großbuchstaben und Zeichen ohne Buchstaben bleiben unverändert.</span><span class="sxs-lookup"><span data-stu-id="05a32-1541">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="05a32-1542">Diese Funktion verwendet die Kultur Informationen der Anwendung bei der Bearbeitung der Zeichenfolge, sodass die Fall Änderungen für das Gebiets Schema geeignet sind, in dem die Anwendung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1542">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="05a32-1543">Wenn Ihre Anwendung Sicherheitsentscheidungen auf Grundlage des Ergebnisses eines Vergleichs-oder Fall Änderungs Vorgangs trifft, sollte der Vorgang die <xref:System.String.Compare%2A?displayProperty=nameWithType>-Methode verwenden und <xref:System.StringComparison.Ordinal> oder <xref:System.StringComparison.OrdinalIgnoreCase> für das `comparisonType`-Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1543">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="05a32-1544">Weitere Informationen finden Sie unter [so wirkt sich die Kultur auf Zeichen folgen in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings)aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-1544">For more information, see [How Culture Affects Strings in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1545">In diesem Beispiel wird die `UCase`-Funktion verwendet, um eine Zeichenfolge in Großbuchstaben zurückzugeben:</span><span class="sxs-lookup"><span data-stu-id="05a32-1545">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1546">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1546">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-1547">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1547">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-1548">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1548">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static string UCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UCase(string Value) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member UCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberSignature Language="ILAsm" Value=".method public static string UCase(string Value) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="05a32-1549">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="05a32-1549">Required.</span></span> <span data-ttu-id="05a32-1550">Alle gültigen <see langword="String" />-Ausdrücke oder <see langword="Char" />-Ausdrücke.</span><span class="sxs-lookup"><span data-stu-id="05a32-1550">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="05a32-1551">Gibt eine Zeichenfolge oder ein Zeichen zurück, die bzw. das die angegebene Zeichenfolge in Großbuchstaben enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1551">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="05a32-1552">Eine Zeichenfolge oder ein Zeichen, die bzw. das die angegebene Zeichenfolge in Großbuchstaben konvertiert enthält.</span><span class="sxs-lookup"><span data-stu-id="05a32-1552">A string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05a32-1553">Nur Kleinbuchstaben werden in Großbuchstaben konvertiert. alle Großbuchstaben und Zeichen ohne Buchstaben bleiben unverändert.</span><span class="sxs-lookup"><span data-stu-id="05a32-1553">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="05a32-1554">Diese Funktion verwendet die Kultur Informationen der Anwendung bei der Bearbeitung der Zeichenfolge, sodass die Fall Änderungen für das Gebiets Schema geeignet sind, in dem die Anwendung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05a32-1554">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="05a32-1555">Wenn Ihre Anwendung Sicherheitsentscheidungen auf Grundlage des Ergebnisses eines Vergleichs-oder Fall Änderungs Vorgangs trifft, sollte der Vorgang die <xref:System.String.Compare%2A?displayProperty=nameWithType>-Methode verwenden und <xref:System.StringComparison.Ordinal> oder <xref:System.StringComparison.OrdinalIgnoreCase> für das `comparisonType`-Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="05a32-1555">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="05a32-1556">Weitere Informationen finden Sie unter [so wirkt sich die Kultur auf Zeichen folgen in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings)aus.</span><span class="sxs-lookup"><span data-stu-id="05a32-1556">For more information, see [How Culture Affects Strings in Visual Basic](/dotnet/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05a32-1557">In diesem Beispiel wird die `UCase`-Funktion verwendet, um eine Zeichenfolge in Großbuchstaben zurückzugeben:</span><span class="sxs-lookup"><span data-stu-id="05a32-1557">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/string-manipulation-summary"><span data-ttu-id="05a32-1558">Zeichenfolgenbearbeitung: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="05a32-1558">String Manipulation Summary</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/"><span data-ttu-id="05a32-1559">Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1559">Strings in Visual Basic</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/strings/introduction-to-strings"><span data-ttu-id="05a32-1560">Einführung in Zeichenfolgen in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="05a32-1560">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
