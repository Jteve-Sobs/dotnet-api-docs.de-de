<Type Name="ComClassAttribute" FullName="Microsoft.VisualBasic.ComClassAttribute">
  <TypeSignature Language="C#" Value="public sealed class ComClassAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ComClassAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ComClassAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComClassAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComClassAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9805b-101">Das <see langword="ComClassAttribute" />-Attribut weist den Compiler an, Metadaten hinzuzufügen, die es ermöglichen, dass eine Klasse als COM-Objekt verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-101">The <see langword="ComClassAttribute" /> attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-102">Verwendung `ComClassAttribute` vereinfachen das Verfügbarmachen von COM-Komponenten aus Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9805b-102">Use `ComClassAttribute` to simplify the process of exposing COM components from Visual Basic.</span></span> <span data-ttu-id="9805b-103">COM-Objekte sind unterscheidet sich von .NET Framework-Assemblys. ohne die `ComClassAttribute`, müssen Sie eine Reihe von Schritten, um ein COM-Objekt aus Visual Basic zu generieren.</span><span class="sxs-lookup"><span data-stu-id="9805b-103">COM objects are very different from .NET Framework assemblies; without the `ComClassAttribute`, you need to follow a number of steps to generate a COM object from Visual Basic.</span></span> <span data-ttu-id="9805b-104">Für Klassen mit markiert `ComClassAttribute`, führt der Compiler viele dieser Schritte automatisch.</span><span class="sxs-lookup"><span data-stu-id="9805b-104">For classes marked with `ComClassAttribute`, the compiler performs many of these steps automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9805b-105">Dieses Attribut vereinfacht die Erstellung von COM-Objekten.</span><span class="sxs-lookup"><span data-stu-id="9805b-105">This attribute simplifies the creation of COM objects.</span></span> <span data-ttu-id="9805b-106">Um eine Klasse als COM-Objekt verfügbar zu machen, kompilieren Sie das Projekt mit der **für COM-Interop registrieren** die Option der **erstellen** Teil der **Konfigurationseigenschaften** Das Dialogfeld.</span><span class="sxs-lookup"><span data-stu-id="9805b-106">To expose a class as a COM object, you must compile the project with the **Register for COM Interop** option selected in the **Build** section of the **Configuration Properties** dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9805b-107">Obwohl Sie auch eine Klasse, die mit Visual Basic erstellt wird, als für nicht verwalteten Code mit COM-Objekt verfügbar gemacht werden können, ist es nicht "true" COM-Objekt.</span><span class="sxs-lookup"><span data-stu-id="9805b-107">Although you can also expose a class created with Visual Basic as a COM object for unmanaged code to use, it is not a true COM object.</span></span> <span data-ttu-id="9805b-108">Weitere Informationen finden Sie unter [COM-Interoperabilität in .NET Framework-Anwendungen](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).</span><span class="sxs-lookup"><span data-stu-id="9805b-108">For details, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9805b-109">Um dieses Beispiel auszuführen, erstellen Sie ein neues **-Klassenbibliothek** Anwendung und einem Klassenmodul den folgenden Code hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="9805b-109">To run this example, create a new **Class Library** application and add the following code to a class module.</span></span>  
  
 [!code-vb[VbCnAttributes#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbCnAttributes/VB/Class2.vb#21)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Runtime.InteropServices" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9805b-110">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-110">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComClassAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ComClassAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComClassAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9805b-111">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-111">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-112">Verwenden Sie den Konstruktor für die `ComClassAttribute` Klasse, um die `ClassID`, `InterfaceID`, oder `EventID` Eigenschaften beim Anwenden der `ComClassAttribute` auf eine Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-112">Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComClassAttribute (string _ClassID);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string _ClassID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_ClassID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComClassAttribute(System::String ^ _ClassID);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_ClassID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="_ClassID"><span data-ttu-id="9805b-113">Initialisiert den Wert der <see langword="ClassID" />-Eigenschaft, mit der eine Klasse eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-113">Initializes the value of the <see langword="ClassID" /> property that is used to uniquely identify a class.</span></span></param>
        <summary><span data-ttu-id="9805b-114">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-114">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-115">Verwenden Sie den Konstruktor für die `ComClassAttribute` Klasse, um die `ClassID`, `InterfaceID`, oder `EventID` Eigenschaften beim Anwenden der `ComClassAttribute` auf eine Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-115">Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComClassAttribute (string _ClassID, string _InterfaceID);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string _ClassID, string _InterfaceID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_ClassID As String, _InterfaceID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComClassAttribute(System::String ^ _ClassID, System::String ^ _InterfaceID);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_ClassID" Type="System.String" />
        <Parameter Name="_InterfaceID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="_ClassID"><span data-ttu-id="9805b-116">Initialisiert den Wert der <see langword="ClassID" />-Eigenschaft, mit der eine Klasse eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-116">Initializes the value of the <see langword="ClassID" /> property that is used to uniquely identify a class.</span></span></param>
        <param name="_InterfaceID"><span data-ttu-id="9805b-117">Initialisiert den Wert der <see langword="InterfaceID" />-Eigenschaft, mit der eine Schnittstelle eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-117">Initializes the value of the <see langword="InterfaceID" /> property that is used to uniquely identify an interface.</span></span></param>
        <summary><span data-ttu-id="9805b-118">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-118">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-119">Verwenden Sie den Konstruktor für die `ComClassAttribute` Klasse, um die `ClassID`, `InterfaceID`, oder `EventID` Eigenschaften beim Anwenden der `ComClassAttribute` auf eine Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-119">Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComClassAttribute (string _ClassID, string _InterfaceID, string _EventId);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string _ClassID, string _InterfaceID, string _EventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_ClassID As String, _InterfaceID As String, _EventId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComClassAttribute(System::String ^ _ClassID, System::String ^ _InterfaceID, System::String ^ _EventId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_ClassID" Type="System.String" />
        <Parameter Name="_InterfaceID" Type="System.String" />
        <Parameter Name="_EventId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="_ClassID"><span data-ttu-id="9805b-120">Initialisiert den Wert der <see langword="ClassID" />-Eigenschaft, mit der eine Klasse eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-120">Initializes the value of the <see langword="ClassID" /> property that is used to uniquely identify a class.</span></span></param>
        <param name="_InterfaceID"><span data-ttu-id="9805b-121">Initialisiert den Wert der <see langword="InterfaceID" />-Eigenschaft, mit der eine Schnittstelle eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-121">Initializes the value of the <see langword="InterfaceID" /> property that is used to uniquely identify an interface.</span></span></param>
        <param name="_EventId"><span data-ttu-id="9805b-122">Initialisiert den Wert der <see langword="EventID" />-Eigenschaft, mit der ein Ereignis eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-122">Initializes the value of the <see langword="EventID" /> property that is used to uniquely identify an event.</span></span></param>
        <summary><span data-ttu-id="9805b-123">Initialisiert eine neue Instanz der <see langword="ComClassAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-123">Initializes a new instance of the <see langword="ComClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-124">Verwenden Sie den Konstruktor für die `ComClassAttribute` Klasse, um die `ClassID`, `InterfaceID`, oder `EventID` Eigenschaften beim Anwenden der `ComClassAttribute` auf eine Klasse.</span><span class="sxs-lookup"><span data-stu-id="9805b-124">Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName="ClassID">
      <MemberSignature Language="C#" Value="public string ClassID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ComClassAttribute.ClassID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9805b-125">Ruft eine Klassen-ID ab, mit der eine Klasse eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-125">Gets a class ID used to uniquely identify a class.</span></span></summary>
        <value><span data-ttu-id="9805b-126">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="9805b-126">Read-only.</span></span> <span data-ttu-id="9805b-127">Eine Zeichenfolge, mit der der Compiler beim Erstellen eines COM-Objekts eindeutig die Klasse identifizieren kann.</span><span class="sxs-lookup"><span data-stu-id="9805b-127">A string that can be used by the compiler to uniquely identify the class when a COM object is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-128">Der Konstruktor wird diese Eigenschaft bei der `ComClassAttribute` auf eine Klasse angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-128">The constructor sets this property when the `ComClassAttribute` is applied to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName="EventID">
      <MemberSignature Language="C#" Value="public string EventID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ComClassAttribute.EventID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9805b-129">Ruft eine Ereignis-ID ab, mit der ein Ereignis eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-129">Gets an event ID used to uniquely identify an event.</span></span></summary>
        <value><span data-ttu-id="9805b-130">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="9805b-130">Read only.</span></span> <span data-ttu-id="9805b-131">Eine Zeichenfolge, mit der der Compiler beim Erstellen eines COM-Objekts eindeutig ein Ereignis für die Klasse identifizieren kann.</span><span class="sxs-lookup"><span data-stu-id="9805b-131">A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-132">Der Konstruktor wird diese Eigenschaft bei der `ComClassAttribute` auf eine Klasse angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-132">The constructor sets this property when the `ComClassAttribute` is applied to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceID">
      <MemberSignature Language="C#" Value="public string InterfaceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterfaceID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InterfaceID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9805b-133">Ruft eine Schnittstellen-ID ab, mit der eine Schnittstelle eindeutig identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-133">Gets an interface ID used to uniquely identify an interface.</span></span></summary>
        <value><span data-ttu-id="9805b-134">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="9805b-134">Read-only.</span></span> <span data-ttu-id="9805b-135">Eine Zeichenfolge, mit der der Compiler beim Erstellen eines COM-Objekts eindeutig eine Schnittstelle für die Klasse identifizieren kann.</span><span class="sxs-lookup"><span data-stu-id="9805b-135">A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-136">Der Konstruktor wird diese Eigenschaft bei der `ComClassAttribute` auf eine Klasse angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="9805b-136">The constructor sets this property when the `ComClassAttribute` is applied to a class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceShadows">
      <MemberSignature Language="C#" Value="public bool InterfaceShadows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InterfaceShadows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows" />
      <MemberSignature Language="VB.NET" Value="Public Property InterfaceShadows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InterfaceShadows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9805b-137">Gibt an, dass der COM-Schnittstellenname ein Shadowing für einen anderen Member der Klasse oder der Basisklasse ausführt.</span><span class="sxs-lookup"><span data-stu-id="9805b-137">Indicates that the COM interface name shadows another member of the class or base class.</span></span></summary>
        <value><span data-ttu-id="9805b-138">Ein <see langword="Boolean" />-Wert, der angibt, dass der COM-Schnittstellenname ein Shadowing für einen anderen Member der Klasse oder der Basisklasse ausführt.</span><span class="sxs-lookup"><span data-stu-id="9805b-138">A <see langword="Boolean" /> value that indicates that the COM interface name shadows another member of the class or base class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9805b-139">Shadowing ist, wenn ein Element den gleichen Namen wie ein anderes Element verwendet.</span><span class="sxs-lookup"><span data-stu-id="9805b-139">Shadowing is when a member uses the same name as another member.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.InteropServices" />
      </Docs>
    </Member>
  </Members>
</Type>