<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0818b20d88b4475c4e82d722179c62133eef703" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65135720" /></Metadata><TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <TypeSignature Language="F#" Value="type Information = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e46a0-101">Die <see langword="Information" /> -Modul enthält Prozeduren zum zurückgeben, testen und überprüfen die Informationen verwendet.</span><span class="sxs-lookup"><span data-stu-id="e46a0-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-102">Dieses Modul unterstützt die Visual Basic-Schlüsselwörter und -Laufzeitbibliothek-Member, die Fehlerinformationen bereitstellen, Überprüfen von Daten, Arraygrenzen bestimmen und Abrufen von Informationen zu Daten und Farben.</span><span class="sxs-lookup"><span data-stu-id="e46a0-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-103">Im folgenden Beispiel wird die `VbTypeName` Funktion Datentypnamen für einige Variablen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```vb  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/information-and-interaction-summary.md"><span data-ttu-id="e46a0-104">Informationen und Interaktionen: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="e46a0-104">Information and Interaction Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/data-types-summary.md"><span data-ttu-id="e46a0-105">Data Types Summary</span><span class="sxs-lookup"><span data-stu-id="e46a0-105">Data Types Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/declarations-and-constants-summary.md"><span data-ttu-id="e46a0-106">Deklarationen und Konstanten: Zusammenfassung</span><span class="sxs-lookup"><span data-stu-id="e46a0-106">Declarations and Constants Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="e46a0-107">Schlüsselwörter (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-107">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="e46a0-108">Member der Visual Basic-Laufzeitbibliothek</span><span class="sxs-lookup"><span data-stu-id="e46a0-108">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberSignature Language="F#" Value="static member Erl : unit -&gt; int" Usage="Microsoft.VisualBasic.Information.Erl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46a0-109">Gibt eine ganze Zahl, der angibt, der Zeilennummer der letzten ausgeführten Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e46a0-109">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="e46a0-110">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-110">Read-only.</span></span></summary>
        <returns><span data-ttu-id="e46a0-111">Gibt eine ganze Zahl, der angibt, der Zeilennummer der letzten ausgeführten Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e46a0-111">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="e46a0-112">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-112">Read-only.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-113">Wenn Sie Visual Basic keine Zeilennummern findet, wird 0 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e46a0-113">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-114">Dieses Beispiel verwendet die `Erl` Eigenschaft, die die Nummer der Zeile angibt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-114">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberSignature Language="F#" Value="static member Err : unit -&gt; Microsoft.VisualBasic.ErrObject" Usage="Microsoft.VisualBasic.Information.Err " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e46a0-115">Enthält Informationen über Laufzeitfehler.</span><span class="sxs-lookup"><span data-stu-id="e46a0-115">Contains information about run-time errors.</span></span></summary>
        <returns><span data-ttu-id="e46a0-116">Enthält Informationen über Laufzeitfehler.</span><span class="sxs-lookup"><span data-stu-id="e46a0-116">Contains information about run-time errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-117">Die Eigenschaften der `Err` Objekt durch den Generator eines Fehlers – Visual Basic, ein Objekt oder der Programmierer festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="e46a0-117">The properties of the `Err` object are set by the generator of an error - Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="e46a0-118">Wenn ein Laufzeitfehler auftritt, werden die Eigenschaften der `Err` -Objekt gefüllt mit Informationen, die den Fehler eindeutig identifiziert und, mit denen Sie können den Fehler zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="e46a0-118">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="e46a0-119">Verwenden Sie zum generieren einen Laufzeitfehler im Code die `Raise` Methode.</span><span class="sxs-lookup"><span data-stu-id="e46a0-119">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="e46a0-120">Die `Err` Eigenschaften des Objekts werden auf 0 (null) oder Zeichenfolgen der Länge 0 (null) zurückgesetzt ("") nach einem `Exit Sub`, `Exit Function`, `Exit Property`, oder `Resume Next` Anweisung innerhalb einer Fehlerbehandlungsroutine.</span><span class="sxs-lookup"><span data-stu-id="e46a0-120">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="e46a0-121">Mit einer Form von der `Resume` Anweisung ist außerhalb einer Fehlerbehandlungsroutine werden nicht zurückgesetzt werden. die `Err` Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="e46a0-121">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="e46a0-122">Sie können die `Clear` Methode explizit zurückgesetzt `Err`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-122">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="e46a0-123">Verwenden der `Raise` Methode anstelle der `Error` Laufzeitfehler für Fehler im Dateisystem zu generieren und Klassenmodule-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e46a0-123">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="e46a0-124">Ihre Entscheidung, ob Sie verwenden die `Raise` -Methode in der anderen Code hängt vom Umfang der Informationen zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="e46a0-124">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="e46a0-125">Die `Err` Objekt ist ein systeminternes Objekt mit globalem Bereich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-125">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="e46a0-126">Aus diesem Grund müssen Sie nicht in Ihrem Code eine Instanz davon erstellen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-126">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-127">Dieses Beispiel verwendet die Eigenschaften der `Err` Objekt in ein Dialogfeld Fehlermeldung erstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-127">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="e46a0-128">Beachten Sie, dass bei Verwendung der `Clear` Methode erstmals, wenn Sie mit Visual Basic-Fehler generieren, die `Raise` -Methode, die Visual Basic Default-Werte zu den Eigenschaften des der `Err` Objekt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-128">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="e46a0-129">Error-Anweisung</span><span class="sxs-lookup"><span data-stu-id="e46a0-129">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="e46a0-130">On Error-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-130">On Error Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/exit-statement.md"><span data-ttu-id="e46a0-131">Exit-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-131">Exit Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/resume-statement.md"><span data-ttu-id="e46a0-132">Resume-Anweisung</span><span class="sxs-lookup"><span data-stu-id="e46a0-132">Resume Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/error-messages/index.md"><span data-ttu-id="e46a0-133">Fehlermeldungen (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-133">Error Messages (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="e46a0-134">Try...Catch...Finally-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-134">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member IsArray : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsArray VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="e46a0-135">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-135">Required.</span></span> <span data-ttu-id="e46a0-136"><see langword="Object" /> Variable.</span><span class="sxs-lookup"><span data-stu-id="e46a0-136"><see langword="Object" /> variable.</span></span></param>
        <summary><span data-ttu-id="e46a0-137">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob eine Variable auf ein Array verweist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-137">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></summary>
        <returns><span data-ttu-id="e46a0-138">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob eine Variable auf ein Array verweist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-138">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-139">`IsArray` Gibt `True` , wenn die Variable auf ein Array verweist, andernfalls `False`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-139">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="e46a0-140">`IsArray` ist besonders hilfreich bei Objekten, die Arrays enthalten können.</span><span class="sxs-lookup"><span data-stu-id="e46a0-140">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-141">Dieses Beispiel verwendet die `IsArray` Funktion zu überprüfen, ob verschiedene Variablen in ein Array verweisen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-141">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/arrays/index.md"><span data-ttu-id="e46a0-142">Arrays in Visual Basic</span><span class="sxs-lookup"><span data-stu-id="e46a0-142">Arrays in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDate : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDate Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e46a0-143">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-143">Required.</span></span> <span data-ttu-id="e46a0-144"><see langword="Object" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e46a0-144"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e46a0-145">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck einen gültigen darstellt <see langword="Date" /> Wert.</span><span class="sxs-lookup"><span data-stu-id="e46a0-145">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="e46a0-146">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck einen gültigen darstellt <see langword="Date" /> Wert.</span><span class="sxs-lookup"><span data-stu-id="e46a0-146">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-147">`IsDate` Gibt `True` Wenn `Expression` ist die <xref:System.DateTime> Daten eingeben oder konvertiert werden kann, andernfalls gibt `False`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-147">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e46a0-148">Die <xref:System.DateTime> Datentyp enthält sowohl einen Datumswert als auch einen Uhrzeitwert.</span><span class="sxs-lookup"><span data-stu-id="e46a0-148">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="e46a0-149">`IsDate` Gibt `True` Wenn `Expression` ein gültiges Datum, eine gültige Uhrzeit ein, oder ein gültiges Datum und die Uhrzeit darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-149">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-150">Im folgenden Beispiel wird die `IsDate` Funktion, um zu bestimmen, ob mehrere Variablen gültig darstellen <xref:System.DateTime> Werte.</span><span class="sxs-lookup"><span data-stu-id="e46a0-150">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="e46a0-151">Im vorherigen Beispiel `IsDate` gibt `True` für die ersten vier Aufrufe und `False` für den letzten Aufruf.</span><span class="sxs-lookup"><span data-stu-id="e46a0-151">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsDBNull Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e46a0-152">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-152">Required.</span></span> <span data-ttu-id="e46a0-153"><see langword="Object" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e46a0-153"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e46a0-154">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck ergibt den <see cref="T:System.DBNull" /> Klasse.</span><span class="sxs-lookup"><span data-stu-id="e46a0-154">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></summary>
        <returns><span data-ttu-id="e46a0-155">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck ergibt den <see cref="T:System.DBNull" /> Klasse.</span><span class="sxs-lookup"><span data-stu-id="e46a0-155">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-156">`IsDBNull` Gibt `True` , wenn der Datentyp des `Expression` ergibt die <xref:System.DBNull> -Typ. hingegen `IsDBNull` gibt `False`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-156">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="e46a0-157">Die <xref:System.DBNull?displayProperty=nameWithType> gibt an, dass die `Object` fehlende oder nicht vorhandene Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-157">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="e46a0-158">`DBNull` entspricht nicht der `Nothing`, was bedeutet, dass eine Variable noch nicht initialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="e46a0-158">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="e46a0-159">`DBNull` ist auch nicht identisch mit der eine Zeichenfolge der Länge 0 (null) (`""`), dies wird manchmal als null-Zeichenfolge bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="e46a0-159">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-160">Dieses Beispiel verwendet die `IsDBNull` Funktion, um zu bestimmen, ob eine Variable ergibt `DBNull`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-160">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsError : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsError Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e46a0-161">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-161">Required.</span></span> <span data-ttu-id="e46a0-162"><see langword="Object" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e46a0-162"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e46a0-163">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck ein Ausnahmetyp ist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-163">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></summary>
        <returns><span data-ttu-id="e46a0-164">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck ein Ausnahmetyp ist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-164">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-165">`IsError` Gibt `True` Wenn der Ausdruck darstellt ein `Object` Variable, die von abgeleitet ist die <xref:System.Exception> -Klasse in der <xref:System> Namespace.</span><span class="sxs-lookup"><span data-stu-id="e46a0-165">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="e46a0-166">Eine Ausnahme, die abgeleitet <xref:System.Exception?displayProperty=nameWithType> abgefangen werden kann, mit der `Try...Catch...Finally` Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-166">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-167">Im folgenden Beispiel wird die `IsError` Funktion zu überprüfen, ob ein Ausdruck eine Systemausnahme darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-167">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNothing : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNothing Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e46a0-168">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-168">Required.</span></span> <span data-ttu-id="e46a0-169"><see langword="Object" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e46a0-169"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e46a0-170">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck kein Objekt zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-170">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></summary>
        <returns><span data-ttu-id="e46a0-171">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck kein Objekt zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-171">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-172">`IsNothing` Gibt `True` der Ausdruck eine Objektvariable darstellt, der derzeit kein Objekt zugewiesen ist, andernfalls aufweist, gibt `False`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-172">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e46a0-173">`IsNothing` Dient zum Verweistypen arbeiten.</span><span class="sxs-lookup"><span data-stu-id="e46a0-173">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="e46a0-174">Ein Werttyp kann einen Wert enthalten und wird auf seinen Standardwert zurückgesetzt, wenn Sie zuweisen `Nothing` zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-174">A value type cannot hold a value of  and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="e46a0-175">Wenn Sie angeben, dass einen Werttyp in `Expression`, `IsNothing` gibt immer `False`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-175">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-176">Im folgenden Beispiel wird die `IsNothing` Funktion, um zu bestimmen, ob eine Objektvariable Objektinstanz zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-176">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="e46a0-177">Wert- und Verweistypen</span><span class="sxs-lookup"><span data-stu-id="e46a0-177">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsNumeric : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsNumeric Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e46a0-178">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-178">Required.</span></span> <span data-ttu-id="e46a0-179"><see langword="Object" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e46a0-179"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e46a0-180">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck als Zahl ausgewertet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e46a0-180">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></summary>
        <returns><span data-ttu-id="e46a0-181">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck als Zahl ausgewertet werden kann.</span><span class="sxs-lookup"><span data-stu-id="e46a0-181">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-182">`IsNumeric` Gibt `True` , wenn der Datentyp des `Expression` ist `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, oder `UShort`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-182">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="e46a0-183">Sie gibt überdies `True` Wenn `Expression` ist eine `Char`, `String`, oder `Object` erfolgreich in eine Zahl konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="e46a0-183">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="e46a0-184">`Expression` kann nicht numerische Zeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="e46a0-184">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="e46a0-185">`IsNumeric` Gibt `True` Wenn `Expression` ist eine Zeichenfolge, die eine gültige hexadezimale oder oktale Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-185">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="e46a0-186">`IsNumeric` Außerdem gibt `True` Wenn `Expression` enthält einen gültigen numerischen Ausdruck, der mit beginnt eine + "oder" - Zeichen oder enthält Kommas.</span><span class="sxs-lookup"><span data-stu-id="e46a0-186">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="e46a0-187">`IsNumeric` Gibt `False` Wenn `Expression` ist vom Datentyp `Date`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-187">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="e46a0-188">Es gibt `False` Wenn `Expression` ist eine `Char`, `String`, oder `Object` , die nicht erfolgreich in eine Zahl konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="e46a0-188">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-189">Im folgenden Beispiel wird die `IsNumeric` Funktion, um zu bestimmen, ob der Inhalt einer Variablen als Zahl ausgewertet werden können.</span><span class="sxs-lookup"><span data-stu-id="e46a0-189">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member IsReference : obj -&gt; bool" Usage="Microsoft.VisualBasic.Information.IsReference Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="e46a0-190">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-190">Required.</span></span> <span data-ttu-id="e46a0-191"><see langword="Object" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="e46a0-191"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="e46a0-192">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck einen Verweistyp ergibt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-192">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></summary>
        <returns><span data-ttu-id="e46a0-193">Gibt eine <see langword="Boolean" /> Wert, der angibt, ob ein Ausdruck einen Verweistyp ergibt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-193">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-194">`IsReference` Gibt `True` Wenn `Expression` stellt einen Verweistyp, wie z. B. eine Klasseninstanz einen `String` Typ oder ein Array eines beliebigen Typs; andernfalls wird `False`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-194">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="e46a0-195">Ein Verweistyp enthält einen Zeiger auf Daten, die an anderer Stelle im Arbeitsspeicher gespeichert.</span><span class="sxs-lookup"><span data-stu-id="e46a0-195">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="e46a0-196">Ein Werttyp enthält seine eigenen Daten.</span><span class="sxs-lookup"><span data-stu-id="e46a0-196">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-197">Dieses Beispiel verwendet die `IsReference` Funktion zu überprüfen, ob mehrere Variablen, die auf Referenztypen verweisen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-197">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="e46a0-198">Im vorherigen Beispiel die ersten drei Aufrufe `IsReference` zurückgeben `True`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-198">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="e46a0-199">Gibt der letzte Aufruf `False`, da `Integer` ein Werttyp, der kein Verweistyp ist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-199">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md"><span data-ttu-id="e46a0-200">Wert- und Verweistypen</span><span class="sxs-lookup"><span data-stu-id="e46a0-200">Value Types and Reference Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member LBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.LBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="e46a0-201">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-201">Required.</span></span> <span data-ttu-id="e46a0-202">Ein Array eines beliebigen Datentyps.</span><span class="sxs-lookup"><span data-stu-id="e46a0-202">Array of any data type.</span></span> <span data-ttu-id="e46a0-203">Das Array, in dem Sie die niedrigste mögliche Feldindex einer Dimension zu suchen möchten.</span><span class="sxs-lookup"><span data-stu-id="e46a0-203">The array in which you want to find the lowest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="e46a0-204">Dies ist optional.</span><span class="sxs-lookup"><span data-stu-id="e46a0-204">Optional.</span></span> <span data-ttu-id="e46a0-205"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-205"><see langword="Integer" />.</span></span> <span data-ttu-id="e46a0-206">Die Dimension für die der niedrigste mögliche Feldindex zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="e46a0-206">The dimension for which the lowest possible subscript is to be returned.</span></span> <span data-ttu-id="e46a0-207">Verwenden Sie 1 für die erste Dimension, für die zweite, 2 und so weiter.</span><span class="sxs-lookup"><span data-stu-id="e46a0-207">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="e46a0-208">Wenn <paramref name="Rank" /> wird weggelassen, wird bei 1 begonnen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-208">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="e46a0-209">Gibt den niedrigsten verfügbaren Feldindex für die angegebene Dimension eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-209">Returns the lowest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="e46a0-210"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-210"><see langword="Integer" />.</span></span> <span data-ttu-id="e46a0-211">Der niedrigste Wert, an der Feldindex für die angegebene Dimension enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="e46a0-211">The lowest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="e46a0-212"><see langword="LBound" /> Gibt immer 0, die so lange wie zurück <paramref name="Array" /> initialisiert wurde, auch wenn es keine Elemente enthält, z. B. hat wenn es sich um eine Zeichenfolge der Länge 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="e46a0-212"><see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span></span> <span data-ttu-id="e46a0-213">Wenn <paramref name="Array" /> ist <see langword="Nothing" />, <see langword="LBound" /> löst eine <see cref="T:System.ArgumentNullException" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-213">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-214">Da Arrayfeldindizes bei 0 beginnen, ist der niedrigste mögliche Feldindex für eine Dimension immer 0.</span><span class="sxs-lookup"><span data-stu-id="e46a0-214">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="e46a0-215">Für ein Array mit den folgenden Dimensionen `LBound` gibt die Werte in der folgenden Tabelle zurück:</span><span class="sxs-lookup"><span data-stu-id="e46a0-215">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="e46a0-216">Aufruf von LBound</span><span class="sxs-lookup"><span data-stu-id="e46a0-216">Call to LBound</span></span>|<span data-ttu-id="e46a0-217">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="e46a0-217">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="e46a0-218">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-218">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="e46a0-219">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-219">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="e46a0-220">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-220">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-221">Im folgenden Beispiel wird die `LBound` -Funktion können Sie den niedrigsten verfügbaren Feldindex für die angegebene Dimension eines Arrays zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="e46a0-221">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e46a0-222"><paramref name="Array" /> ist <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-222"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="e46a0-223"><paramref name="Rank" /> kleiner als 1 oder <paramref name="Rank" /> ist größer als der Rang des <paramref name="Array" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-223"><paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="e46a0-224">Dim-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-224">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="e46a0-225">ReDim-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-225">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberSignature Language="F#" Value="static member QBColor : int -&gt; int" Usage="Microsoft.VisualBasic.Information.QBColor Color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color"><span data-ttu-id="e46a0-226">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-226">Required.</span></span> <span data-ttu-id="e46a0-227">Eine ganze Zahl zwischen 0–15.</span><span class="sxs-lookup"><span data-stu-id="e46a0-227">A whole number in the range 0-15.</span></span></param>
        <summary><span data-ttu-id="e46a0-228">Gibt eine <see langword="Integer" /> Farbnummer Wert, der den RGB-Farbcode im angegebenen darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-228">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></summary>
        <returns><span data-ttu-id="e46a0-229">Gibt eine <see langword="Integer" /> Farbnummer Wert, der den RGB-Farbcode im angegebenen darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-229">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-230">Beginnend mit dem niedrigstwertigen Byte, gibt der zurückgegebene Wert die Rot-, Grün- und Blau-Werte, die zum Festlegen der entsprechenden Farbe im RGB-System, die von Visual Basic-Sprache verwendet.</span><span class="sxs-lookup"><span data-stu-id="e46a0-230">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="e46a0-231">Die `Color` Argument verfügt über diese Einstellungen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-231">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="e46a0-232">Anzahl</span><span class="sxs-lookup"><span data-stu-id="e46a0-232">Number</span></span>|<span data-ttu-id="e46a0-233">Farbe</span><span class="sxs-lookup"><span data-stu-id="e46a0-233">Color</span></span>|<span data-ttu-id="e46a0-234">Anzahl</span><span class="sxs-lookup"><span data-stu-id="e46a0-234">Number</span></span>|<span data-ttu-id="e46a0-235">Farbe</span><span class="sxs-lookup"><span data-stu-id="e46a0-235">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="e46a0-236">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-236">0</span></span>|<span data-ttu-id="e46a0-237">Schwarz</span><span class="sxs-lookup"><span data-stu-id="e46a0-237">Black</span></span>|<span data-ttu-id="e46a0-238">8</span><span class="sxs-lookup"><span data-stu-id="e46a0-238">8</span></span>|<span data-ttu-id="e46a0-239">Grau</span><span class="sxs-lookup"><span data-stu-id="e46a0-239">Gray</span></span>|  
|<span data-ttu-id="e46a0-240">1</span><span class="sxs-lookup"><span data-stu-id="e46a0-240">1</span></span>|<span data-ttu-id="e46a0-241">Blau</span><span class="sxs-lookup"><span data-stu-id="e46a0-241">Blue</span></span>|<span data-ttu-id="e46a0-242">9</span><span class="sxs-lookup"><span data-stu-id="e46a0-242">9</span></span>|<span data-ttu-id="e46a0-243">Hellblau</span><span class="sxs-lookup"><span data-stu-id="e46a0-243">Light blue</span></span>|  
|<span data-ttu-id="e46a0-244">2</span><span class="sxs-lookup"><span data-stu-id="e46a0-244">2</span></span>|<span data-ttu-id="e46a0-245">Grün</span><span class="sxs-lookup"><span data-stu-id="e46a0-245">Green</span></span>|<span data-ttu-id="e46a0-246">10</span><span class="sxs-lookup"><span data-stu-id="e46a0-246">10</span></span>|<span data-ttu-id="e46a0-247">Hellgrün</span><span class="sxs-lookup"><span data-stu-id="e46a0-247">Light green</span></span>|  
|<span data-ttu-id="e46a0-248">3</span><span class="sxs-lookup"><span data-stu-id="e46a0-248">3</span></span>|<span data-ttu-id="e46a0-249">Cyan</span><span class="sxs-lookup"><span data-stu-id="e46a0-249">Cyan</span></span>|<span data-ttu-id="e46a0-250">11</span><span class="sxs-lookup"><span data-stu-id="e46a0-250">11</span></span>|<span data-ttu-id="e46a0-251">Hellzyan</span><span class="sxs-lookup"><span data-stu-id="e46a0-251">Light cyan</span></span>|  
|<span data-ttu-id="e46a0-252">4</span><span class="sxs-lookup"><span data-stu-id="e46a0-252">4</span></span>|<span data-ttu-id="e46a0-253">Rot</span><span class="sxs-lookup"><span data-stu-id="e46a0-253">Red</span></span>|<span data-ttu-id="e46a0-254">12</span><span class="sxs-lookup"><span data-stu-id="e46a0-254">12</span></span>|<span data-ttu-id="e46a0-255">Hellrot</span><span class="sxs-lookup"><span data-stu-id="e46a0-255">Light red</span></span>|  
|<span data-ttu-id="e46a0-256">5</span><span class="sxs-lookup"><span data-stu-id="e46a0-256">5</span></span>|<span data-ttu-id="e46a0-257">Magenta</span><span class="sxs-lookup"><span data-stu-id="e46a0-257">Magenta</span></span>|<span data-ttu-id="e46a0-258">13</span><span class="sxs-lookup"><span data-stu-id="e46a0-258">13</span></span>|<span data-ttu-id="e46a0-259">Helles magenta</span><span class="sxs-lookup"><span data-stu-id="e46a0-259">Light magenta</span></span>|  
|<span data-ttu-id="e46a0-260">6</span><span class="sxs-lookup"><span data-stu-id="e46a0-260">6</span></span>|<span data-ttu-id="e46a0-261">Gelb</span><span class="sxs-lookup"><span data-stu-id="e46a0-261">Yellow</span></span>|<span data-ttu-id="e46a0-262">14</span><span class="sxs-lookup"><span data-stu-id="e46a0-262">14</span></span>|<span data-ttu-id="e46a0-263">Hosttags in Gelb</span><span class="sxs-lookup"><span data-stu-id="e46a0-263">Light yellow</span></span>|  
|<span data-ttu-id="e46a0-264">7</span><span class="sxs-lookup"><span data-stu-id="e46a0-264">7</span></span>|<span data-ttu-id="e46a0-265">Weiß</span><span class="sxs-lookup"><span data-stu-id="e46a0-265">White</span></span>|<span data-ttu-id="e46a0-266">15</span><span class="sxs-lookup"><span data-stu-id="e46a0-266">15</span></span>|<span data-ttu-id="e46a0-267">Helle weiß</span><span class="sxs-lookup"><span data-stu-id="e46a0-267">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-268">Dieses Beispiel verwendet die `QBColor` -Funktion zum Ändern der Farbe erkennbar `colorInteger`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-268">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="e46a0-269">`QBColor` akzeptiert die ganze Zahlen zwischen 0 und 15.</span><span class="sxs-lookup"><span data-stu-id="e46a0-269">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e46a0-270"><paramref name="Color" /> liegt außerhalb des Bereichs 0 bis einschließlich 15.</span><span class="sxs-lookup"><span data-stu-id="e46a0-270"><paramref name="Color" /> is outside of range 0 to 15, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberSignature Language="F#" Value="static member RGB : int * int * int -&gt; int" Usage="Microsoft.VisualBasic.Information.RGB (Red, Green, Blue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red"><span data-ttu-id="e46a0-271">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-271">Required.</span></span> <span data-ttu-id="e46a0-272"><see langword="Integer" /> im Bereich zwischen 0 und 255 bis einschließlich 255, der die Intensität des Rotanteils der Farbe darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-272"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the red component of the color.</span></span></param>
        <param name="Green"><span data-ttu-id="e46a0-273">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-273">Required.</span></span> <span data-ttu-id="e46a0-274"><see langword="Integer" /> im Bereich zwischen 0 und 255 bis einschließlich 255, der die Intensität des Grünanteils der Farbe darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-274"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the green component of the color.</span></span></param>
        <param name="Blue"><span data-ttu-id="e46a0-275">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-275">Required.</span></span> <span data-ttu-id="e46a0-276"><see langword="Integer" /> im Bereich zwischen 0 und 255 bis einschließlich 255, der die Intensität des Blauanteils der Farbe darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-276"><see langword="Integer" /> in the range 0-255, inclusive, that represents the intensity of the blue component of the color.</span></span></param>
        <summary><span data-ttu-id="e46a0-277">Gibt eine <see langword="Integer" /> Wert, der einen RGB-Farbwert aus einem Satz von roten, grünen und blauen Farbanteilen darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-277">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></summary>
        <returns><span data-ttu-id="e46a0-278">Gibt eine <see langword="Integer" /> Wert, der einen RGB-Farbwert aus einem Satz von roten, grünen und blauen Farbanteilen darstellt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-278">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-279">Application-Methoden und Eigenschaften, die eine Farbe-Spezifikation akzeptieren erwarten, dass Spezifikation soll eine Zahl, die RGB-Farbwert aus.</span><span class="sxs-lookup"><span data-stu-id="e46a0-279">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="e46a0-280">Ein RGB-Wert gibt die relative Intensität von Rot, Grün und Blau dazu führen, dass eine bestimmte Farbe an, die angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="e46a0-280">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="e46a0-281">Wenn der Wert eines Arguments für `RGB` ist größer als 255, 255 wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="e46a0-281">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="e46a0-282">Die folgende Tabelle enthält einige Standardfarben und die Rot-, Grün- und Blau-Werte, die sie enthalten.</span><span class="sxs-lookup"><span data-stu-id="e46a0-282">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="e46a0-283">Farbe</span><span class="sxs-lookup"><span data-stu-id="e46a0-283">Color</span></span>|<span data-ttu-id="e46a0-284">Wert</span><span class="sxs-lookup"><span data-stu-id="e46a0-284">Red value</span></span>|<span data-ttu-id="e46a0-285">Grünwert</span><span class="sxs-lookup"><span data-stu-id="e46a0-285">Green value</span></span>|<span data-ttu-id="e46a0-286">Blau Wert</span><span class="sxs-lookup"><span data-stu-id="e46a0-286">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="e46a0-287">Schwarz</span><span class="sxs-lookup"><span data-stu-id="e46a0-287">Black</span></span>|<span data-ttu-id="e46a0-288">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-288">0</span></span>|<span data-ttu-id="e46a0-289">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-289">0</span></span>|<span data-ttu-id="e46a0-290">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-290">0</span></span>|  
|<span data-ttu-id="e46a0-291">Blau</span><span class="sxs-lookup"><span data-stu-id="e46a0-291">Blue</span></span>|<span data-ttu-id="e46a0-292">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-292">0</span></span>|<span data-ttu-id="e46a0-293">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-293">0</span></span>|<span data-ttu-id="e46a0-294">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-294">255</span></span>|  
|<span data-ttu-id="e46a0-295">Grün</span><span class="sxs-lookup"><span data-stu-id="e46a0-295">Green</span></span>|<span data-ttu-id="e46a0-296">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-296">0</span></span>|<span data-ttu-id="e46a0-297">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-297">255</span></span>|<span data-ttu-id="e46a0-298">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-298">0</span></span>|  
|<span data-ttu-id="e46a0-299">Cyan</span><span class="sxs-lookup"><span data-stu-id="e46a0-299">Cyan</span></span>|<span data-ttu-id="e46a0-300">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-300">0</span></span>|<span data-ttu-id="e46a0-301">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-301">255</span></span>|<span data-ttu-id="e46a0-302">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-302">255</span></span>|  
|<span data-ttu-id="e46a0-303">Rot</span><span class="sxs-lookup"><span data-stu-id="e46a0-303">Red</span></span>|<span data-ttu-id="e46a0-304">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-304">255</span></span>|<span data-ttu-id="e46a0-305">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-305">0</span></span>|<span data-ttu-id="e46a0-306">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-306">0</span></span>|  
|<span data-ttu-id="e46a0-307">Magenta</span><span class="sxs-lookup"><span data-stu-id="e46a0-307">Magenta</span></span>|<span data-ttu-id="e46a0-308">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-308">255</span></span>|<span data-ttu-id="e46a0-309">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-309">0</span></span>|<span data-ttu-id="e46a0-310">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-310">255</span></span>|  
|<span data-ttu-id="e46a0-311">Gelb</span><span class="sxs-lookup"><span data-stu-id="e46a0-311">Yellow</span></span>|<span data-ttu-id="e46a0-312">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-312">255</span></span>|<span data-ttu-id="e46a0-313">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-313">255</span></span>|<span data-ttu-id="e46a0-314">0</span><span class="sxs-lookup"><span data-stu-id="e46a0-314">0</span></span>|  
|<span data-ttu-id="e46a0-315">Weiß</span><span class="sxs-lookup"><span data-stu-id="e46a0-315">White</span></span>|<span data-ttu-id="e46a0-316">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-316">255</span></span>|<span data-ttu-id="e46a0-317">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-317">255</span></span>|<span data-ttu-id="e46a0-318">255</span><span class="sxs-lookup"><span data-stu-id="e46a0-318">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-319">Dieses Beispiel zeigt, wie die `RGB` Funktion wird verwendet, um eine ganze Zahl, Zurückgeben einer `RGB` Farbwert.</span><span class="sxs-lookup"><span data-stu-id="e46a0-319">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e46a0-320"><paramref name="Green" />, <paramref name="Blue" />, oder <paramref name="Red" /> liegt außerhalb des Bereichs 0 und 255 liegen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-320"><paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberSignature Language="F#" Value="static member SystemTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.SystemTypeName VbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName"><span data-ttu-id="e46a0-321">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-321">Required.</span></span> <span data-ttu-id="e46a0-322">Ein <see langword="String" /> Variable, die einen Visual Basic-Typnamen enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-322">A <see langword="String" /> variable containing a Visual Basic type name.</span></span></param>
        <summary><span data-ttu-id="e46a0-323">Gibt eine <see langword="String" /> Wert, der die System-Namen des Datentyps einer Variablen enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-323">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="e46a0-324">Gibt eine <see langword="String" /> Wert, der die System-Namen des Datentyps einer Variablen enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-324">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-325">`SystemTypeName` Gibt die vollqualifizierten common Language Runtime (CLR) Typnamen zurück auf den Visual Basic-Typnamen zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-325">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="e46a0-326">Z. B. wenn `VbName` "Date", enthält `SystemTypeName` "System.DateTime" zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e46a0-326">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="e46a0-327">Wenn `SystemTypeName` erkennt Sie nicht den Wert der `VbName`, gibt `Nothing` (nicht die Zeichenfolge "Nichts").</span><span class="sxs-lookup"><span data-stu-id="e46a0-327">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-328">Im folgenden Beispiel wird die `SystemTypeName` Funktion Datentypnamen für einige Variablen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-328">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="e46a0-329">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-329">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member TypeName : obj -&gt; string" Usage="Microsoft.VisualBasic.Information.TypeName VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="e46a0-330">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-330">Required.</span></span> <span data-ttu-id="e46a0-331"><see langword="Object" /> Variable.</span><span class="sxs-lookup"><span data-stu-id="e46a0-331"><see langword="Object" /> variable.</span></span> <span data-ttu-id="e46a0-332">Wenn <see langword="Option Strict" /> ist <see langword="Off" />, können Sie eine Variable eines beliebigen Datentyps, außer einer Struktur übergeben.</span><span class="sxs-lookup"><span data-stu-id="e46a0-332">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="e46a0-333">Gibt eine <see langword="String" /> Wert, der Datentypinformationen über eine Variable enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-333">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></summary>
        <returns><span data-ttu-id="e46a0-334">Gibt eine <see langword="String" /> Wert, der Datentypinformationen über eine Variable enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-334">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-335">Die folgende Tabelle zeigt die `String` Rückgabewerte `TypeName` für verschiedene Inhalte von `VarName`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-335">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="e46a0-336">`VarName` Inhalt</span><span class="sxs-lookup"><span data-stu-id="e46a0-336">`VarName` contents</span></span>|<span data-ttu-id="e46a0-337">Zurückgegebene Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="e46a0-337">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="e46a0-338">16-Bit- `True` oder `False` Werttyp.</span><span class="sxs-lookup"><span data-stu-id="e46a0-338">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="e46a0-339">"Boolean"</span><span class="sxs-lookup"><span data-stu-id="e46a0-339">"Boolean"</span></span>|  
|<span data-ttu-id="e46a0-340">8-Bit-Binärwert-Typ</span><span class="sxs-lookup"><span data-stu-id="e46a0-340">8-bit binary value type</span></span>|<span data-ttu-id="e46a0-341">"Byte"</span><span class="sxs-lookup"><span data-stu-id="e46a0-341">"Byte"</span></span>|  
|<span data-ttu-id="e46a0-342">16-Bit-Zeichen-Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-342">16-bit character value type</span></span>|<span data-ttu-id="e46a0-343">"Char"</span><span class="sxs-lookup"><span data-stu-id="e46a0-343">"Char"</span></span>|  
|<span data-ttu-id="e46a0-344">Geben Sie die 64-Bit-Datums- und Uhrzeitwert</span><span class="sxs-lookup"><span data-stu-id="e46a0-344">64-bit date and time value type</span></span>|<span data-ttu-id="e46a0-345">"Date"</span><span class="sxs-lookup"><span data-stu-id="e46a0-345">"Date"</span></span>|  
|<span data-ttu-id="e46a0-346">Verweistyp, der angibt, fehlender oder nicht vorhandener Daten</span><span class="sxs-lookup"><span data-stu-id="e46a0-346">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="e46a0-347">"DBNull"</span><span class="sxs-lookup"><span data-stu-id="e46a0-347">"DBNull"</span></span>|  
|<span data-ttu-id="e46a0-348">128-Bit-Festkomma-numerischer Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-348">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="e46a0-349">"Decimal"</span><span class="sxs-lookup"><span data-stu-id="e46a0-349">"Decimal"</span></span>|  
|<span data-ttu-id="e46a0-350">64-Bit-Gleitkommazahl numerischer Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-350">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="e46a0-351">"Double"</span><span class="sxs-lookup"><span data-stu-id="e46a0-351">"Double"</span></span>|  
|<span data-ttu-id="e46a0-352">32-Bit-Ganzzahl-Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-352">32-bit integer value type</span></span>|<span data-ttu-id="e46a0-353">"Integer"</span><span class="sxs-lookup"><span data-stu-id="e46a0-353">"Integer"</span></span>|  
|<span data-ttu-id="e46a0-354">Verweist auf ein Objekt nicht spezialisierte Verweistyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-354">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="e46a0-355">"Object"</span><span class="sxs-lookup"><span data-stu-id="e46a0-355">"Object"</span></span>|  
|<span data-ttu-id="e46a0-356">Verweistyp, der auf ein spezielles Objekt, das aus der Klasse erstellt *"objectClass"*</span><span class="sxs-lookup"><span data-stu-id="e46a0-356">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="e46a0-357">"*" objectClass "*"</span><span class="sxs-lookup"><span data-stu-id="e46a0-357">"*objectclass*"</span></span>|  
|<span data-ttu-id="e46a0-358">64-Bit-Ganzzahl-Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-358">64-bit integer value type</span></span>|<span data-ttu-id="e46a0-359">"Long"</span><span class="sxs-lookup"><span data-stu-id="e46a0-359">"Long"</span></span>|  
|<span data-ttu-id="e46a0-360">Verweistyp ohne Objekt zurzeit zugewiesen</span><span class="sxs-lookup"><span data-stu-id="e46a0-360">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="e46a0-361">"Nothing"</span><span class="sxs-lookup"><span data-stu-id="e46a0-361">"Nothing"</span></span>|  
|<span data-ttu-id="e46a0-362">8-Bit-Ganzzahl mit Vorzeichen-Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-362">8-bit signed integer value type</span></span>|<span data-ttu-id="e46a0-363">"SByte"</span><span class="sxs-lookup"><span data-stu-id="e46a0-363">"SByte"</span></span>|  
|<span data-ttu-id="e46a0-364">16-Bit-Ganzzahl-Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-364">16-bit integer value type</span></span>|<span data-ttu-id="e46a0-365">"Short"</span><span class="sxs-lookup"><span data-stu-id="e46a0-365">"Short"</span></span>|  
|<span data-ttu-id="e46a0-366">32-Bit-Gleitkommazahl numerischer Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-366">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="e46a0-367">"Einfach"</span><span class="sxs-lookup"><span data-stu-id="e46a0-367">"Single"</span></span>|  
|<span data-ttu-id="e46a0-368">Verweistyp, der auf eine Zeichenfolge mit 16-Bit-Zeichen</span><span class="sxs-lookup"><span data-stu-id="e46a0-368">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="e46a0-369">"String"</span><span class="sxs-lookup"><span data-stu-id="e46a0-369">"String"</span></span>|  
|<span data-ttu-id="e46a0-370">32-Bit-Ganzzahl-Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-370">32-bit unsigned integer value type</span></span>|<span data-ttu-id="e46a0-371">"UInteger"</span><span class="sxs-lookup"><span data-stu-id="e46a0-371">"UInteger"</span></span>|  
|<span data-ttu-id="e46a0-372">64-Bit-Ganzzahl-Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-372">64-bit unsigned integer value type</span></span>|<span data-ttu-id="e46a0-373">"ULong"</span><span class="sxs-lookup"><span data-stu-id="e46a0-373">"ULong"</span></span>|  
|<span data-ttu-id="e46a0-374">16-Bit-Ganzzahl-Werttyp</span><span class="sxs-lookup"><span data-stu-id="e46a0-374">16-bit unsigned integer value type</span></span>|<span data-ttu-id="e46a0-375">"UShort"</span><span class="sxs-lookup"><span data-stu-id="e46a0-375">"UShort"</span></span>|  
  
 <span data-ttu-id="e46a0-376">Wenn `VarName` ein Array ist, wird die zurückgegebene Zeichenfolge kann eine der Zeichenfolgen in der obigen Tabelle mit leeren Klammern, die angefügt werden.</span><span class="sxs-lookup"><span data-stu-id="e46a0-376">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="e46a0-377">Z. B. wenn `VarName` zeigt auf ein Array von ganzen Zahlen, `TypeName` "Integer()" zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e46a0-377">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="e46a0-378">Wenn `TypeName` gibt den Namen eines Referenztyps zurück wie z. B. eine Klasse, wird nur der Name selbst nicht den vollqualifizierten Namen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-378">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="e46a0-379">Z. B. wenn `VarName` verweist auf ein Objekt der Klasse <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` gibt "PaperSource" zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-379">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="e46a0-380">Beachten Sie, dass, wenn die Variable deklariert wird, um einen bestimmten Klassentyp sein, aber ein Objekt zugewiesen ist, verfügt nicht über `TypeName` gibt "Nothing" zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-380">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-381">Im folgenden Beispiel wird die `TypeName` -Funktion zum Zurückgeben von Informationen zu verschiedenen Variablen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-381">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="e46a0-382">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-382">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberSignature Language="F#" Value="static member UBound : Array * int -&gt; int" Usage="Microsoft.VisualBasic.Information.UBound (Array, Rank)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="e46a0-383">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-383">Required.</span></span> <span data-ttu-id="e46a0-384">Ein Array eines beliebigen Datentyps.</span><span class="sxs-lookup"><span data-stu-id="e46a0-384">Array of any data type.</span></span> <span data-ttu-id="e46a0-385">Das Array, in dem der höchste mögliche Feldindex einer Dimension gefunden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-385">The array in which you want to find the highest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="e46a0-386">Dies ist optional.</span><span class="sxs-lookup"><span data-stu-id="e46a0-386">Optional.</span></span> <span data-ttu-id="e46a0-387"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-387"><see langword="Integer" />.</span></span> <span data-ttu-id="e46a0-388">Die Dimension für die der höchste mögliche Feldindex zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="e46a0-388">The dimension for which the highest possible subscript is to be returned.</span></span> <span data-ttu-id="e46a0-389">Verwenden Sie 1 für die erste Dimension, für die zweite, 2 und so weiter.</span><span class="sxs-lookup"><span data-stu-id="e46a0-389">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="e46a0-390">Wenn <paramref name="Rank" /> wird weggelassen, wird bei 1 begonnen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-390">If <paramref name="Rank" /> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="e46a0-391">Gibt den höchsten verfügbaren Feldindex für die angegebene Dimension eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-391">Returns the highest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns><span data-ttu-id="e46a0-392"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-392"><see langword="Integer" />.</span></span> <span data-ttu-id="e46a0-393">Der höchste Wert, an der Feldindex für die angegebene Dimension enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="e46a0-393">The highest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="e46a0-394">Wenn <paramref name="Array" /> besitzt nur ein Element <see langword="UBound" /> gibt 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-394">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span></span> <span data-ttu-id="e46a0-395">Wenn <paramref name="Array" /> verfügt über keine Elemente enthält, z. B. wenn es sich um eine Zeichenfolge der Länge 0 (null), ist <see langword="UBound" /> gibt-1 zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-395">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-396">Da Arrayfeldindizes bei 0 beginnen, ist die Länge einer Dimension um eins größer als der höchste mögliche Feldindex für diese Dimension.</span><span class="sxs-lookup"><span data-stu-id="e46a0-396">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="e46a0-397">Für ein Array mit den folgenden Dimensionen `UBound` gibt die Werte in der folgenden Tabelle zurück:</span><span class="sxs-lookup"><span data-stu-id="e46a0-397">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="e46a0-398">Aufruf von UBound</span><span class="sxs-lookup"><span data-stu-id="e46a0-398">Call to UBound</span></span>|<span data-ttu-id="e46a0-399">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="e46a0-399">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="e46a0-400">100</span><span class="sxs-lookup"><span data-stu-id="e46a0-400">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="e46a0-401">5</span><span class="sxs-lookup"><span data-stu-id="e46a0-401">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="e46a0-402">4</span><span class="sxs-lookup"><span data-stu-id="e46a0-402">4</span></span>|  
  
 <span data-ttu-id="e46a0-403">Sie können `UBound` um zu bestimmen, die Summe muss Anzahl von Elementen in ein Array, aber Sie passen Sie den Wert, der zum Konto für die Tatsache, die die tiefgestellten Zeichen bei 0 beginnen zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-403">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="e46a0-404">Das folgende Beispiel berechnet die Gesamtgröße des Arrays `a` im vorherigen Beispiel:</span><span class="sxs-lookup"><span data-stu-id="e46a0-404">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="e46a0-405">Der Wert berechnet, für die `total` ist 3030, also 101 \* 6 \* 5.</span><span class="sxs-lookup"><span data-stu-id="e46a0-405">The value calculated for `total` is 3030, which is 101 \* 6 \* 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-406">Im folgenden Beispiel wird die `UBound` Funktion, die den höchsten verfügbaren Feldindex für die angegebene Dimension eines Arrays zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="e46a0-406">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e46a0-407"><paramref name="Array" /> ist <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-407"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException"><span data-ttu-id="e46a0-408"><paramref name="Rank" /> ist kleiner als 1 oder <paramref name="Rank" /> ist größer als der Rang des <paramref name="Array" />.</span><span class="sxs-lookup"><span data-stu-id="e46a0-408"><paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/dim-statement.md"><span data-ttu-id="e46a0-409">Dim-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-409">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/redim-statement.md"><span data-ttu-id="e46a0-410">ReDim-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-410">ReDim Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberSignature Language="F#" Value="static member VarType : obj -&gt; Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Information.VarType VarName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="e46a0-411">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-411">Required.</span></span> <span data-ttu-id="e46a0-412"><see langword="Object" /> Variable.</span><span class="sxs-lookup"><span data-stu-id="e46a0-412"><see langword="Object" /> variable.</span></span> <span data-ttu-id="e46a0-413">Wenn <see langword="Option Strict" /> ist <see langword="Off" />, können Sie eine Variable eines beliebigen Datentyps, außer einer Struktur übergeben.</span><span class="sxs-lookup"><span data-stu-id="e46a0-413">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="e46a0-414">Gibt eine <see langword="Integer" /> Wert, der der datentypklassifizierung einer Variablen enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-414">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></summary>
        <returns><span data-ttu-id="e46a0-415">Gibt eine <see langword="Integer" /> Wert, der der datentypklassifizierung einer Variablen enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-415">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-416">Der Ganzzahlwert, der vom `VarType` ist ein Mitglied der <xref:Microsoft.VisualBasic.VariantType>.</span><span class="sxs-lookup"><span data-stu-id="e46a0-416">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="e46a0-417">Die folgende Tabelle zeigt die Rückgabewerte `VarType` für spezielle Fälle von `VarName`.</span><span class="sxs-lookup"><span data-stu-id="e46a0-417">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="e46a0-418">Von dargestellter Datentyp `VarName`</span><span class="sxs-lookup"><span data-stu-id="e46a0-418">Data type represented by `VarName`</span></span>|<span data-ttu-id="e46a0-419">Rückgabewert `VarType`</span><span class="sxs-lookup"><span data-stu-id="e46a0-419">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="e46a0-420">Nothing</span><span class="sxs-lookup"><span data-stu-id="e46a0-420">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="e46a0-421">Enumeration</span><span class="sxs-lookup"><span data-stu-id="e46a0-421">Enumeration</span></span>|<span data-ttu-id="e46a0-422">Der zugrunde liegende Datentyp (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, oder `ULong`)</span><span class="sxs-lookup"><span data-stu-id="e46a0-422">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="e46a0-423">Array</span><span class="sxs-lookup"><span data-stu-id="e46a0-423">Array</span></span>|<span data-ttu-id="e46a0-424">Bitweise OR der Elementtyp des Arrays und `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="e46a0-424">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="e46a0-425">Array von arrays</span><span class="sxs-lookup"><span data-stu-id="e46a0-425">Array of arrays</span></span>|<span data-ttu-id="e46a0-426">Bitweise OR von `VariantType.Object` und `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="e46a0-426">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="e46a0-427">Struktur (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="e46a0-427">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="e46a0-428">Unbekannt</span><span class="sxs-lookup"><span data-stu-id="e46a0-428">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-429">Im folgenden Beispiel wird die `VarType` Funktion, um die Klassifizierung für Datentypinformationen zu verschiedenen Variablen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e46a0-429">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="e46a0-430">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-430">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberSignature Language="F#" Value="static member VbTypeName : string -&gt; string" Usage="Microsoft.VisualBasic.Information.VbTypeName UrtName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName"><span data-ttu-id="e46a0-431">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e46a0-431">Required.</span></span> <span data-ttu-id="e46a0-432"><see langword="String" /> die Variable mit dem Typnamen, die von der common Language Runtime verwendet.</span><span class="sxs-lookup"><span data-stu-id="e46a0-432"><see langword="String" /> variable containing a type name used by the common language runtime.</span></span></param>
        <summary><span data-ttu-id="e46a0-433">Gibt eine <see langword="String" /> Wert, der die Visual Basic-Namen des Datentyps einer Variablen enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-433">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="e46a0-434">Gibt eine <see langword="String" /> Wert, der die Visual Basic-Namen des Datentyps einer Variablen enthält.</span><span class="sxs-lookup"><span data-stu-id="e46a0-434">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e46a0-435">`VbTypeName` Gibt den Visual Basic-Typnamen, die für die common Language Runtime-Typnamen zurück.</span><span class="sxs-lookup"><span data-stu-id="e46a0-435">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="e46a0-436">Z. B. wenn `UrtName` enthält "Int32" oder "System. Int32" `VbTypeName` "Integer" zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e46a0-436">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="e46a0-437">Wenn `VbTypeName` erkennt Sie nicht den Wert der `UrtName`, gibt `Nothing` (nicht die Zeichenfolge "Nichts").</span><span class="sxs-lookup"><span data-stu-id="e46a0-437">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="e46a0-438">Der Typname in `UrtName` aus abgerufen werden kann aus verschiedenen Quellen, z. B. die <xref:System.Reflection.MemberInfo.Name%2A> -Eigenschaft in der <xref:System.Reflection.MemberInfo> Array von der <xref:System.Type> Klasse.</span><span class="sxs-lookup"><span data-stu-id="e46a0-438">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e46a0-439">Im folgenden Beispiel wird die `VbTypeName` Funktion Datentypnamen für einige Variablen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="e46a0-439">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="e46a0-440">Datentyp: Zusammenfassung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e46a0-440">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>