<Type Name="WorkflowViewElement" FullName="System.Activities.Presentation.WorkflowViewElement">
  <TypeSignature Language="C#" Value="public class WorkflowViewElement : System.Windows.Controls.ContentControl, System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowViewElement extends System.Windows.Controls.ContentControl implements class System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowViewElement&#xA;Inherits ContentControl&#xA;Implements ICompositeViewEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowViewElement : System::Windows::Controls::ContentControl, System::Activities::Presentation::ICompositeViewEvents" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.ICompositeViewEvents</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8eda5-101">Gibt die Basisklasse für ein beliebiges Benutzeroberflächenelement an, das im Zeichnungsbereich des Windows Workflow Foundation-Designers angezeigt wird und eine grafische Darstellung einer Instanz eines unteilbaren Elements darstellt, das bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="8eda5-101">Specifies the base class for any UI element that appears on the Windows Workflow Foundation designer canvas and that visually represents an instance of an atomic item that can be edited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-102">Beispiele für Elemente, die von einem <xref:System.Activities.Presentation.WorkflowViewElement> dargestellt werden, sind <xref:System.Activities.Activity> und <xref:System.Activities.Statements.FlowNode>.</span><span class="sxs-lookup"><span data-stu-id="8eda5-102">Examples of items represented by a <xref:System.Activities.Presentation.WorkflowViewElement> include <xref:System.Activities.Activity> and <xref:System.Activities.Statements.FlowNode>.</span></span> <span data-ttu-id="8eda5-103">`WorkflowViewElement` bietet einen allgemeinen Vertrag, den der Designer verwendet, um das visuelle Element auf der Designeroberfläche zu rendern und über die verschiedenen Bearbeitungsaktionen mit ihm zu interagieren.</span><span class="sxs-lookup"><span data-stu-id="8eda5-103">`WorkflowViewElement` provides a common contract that the designer uses to render the visual element onto the designer surface and to interact with it through the various editing actions.</span></span>  
  
 <span data-ttu-id="8eda5-104">Wenn Sie einen Designer für eine <xref:System.Activities.Activity> erstellen, sollten Sie den <xref:System.Activities.Presentation.ActivityDesigner>-Basistyp verwenden.</span><span class="sxs-lookup"><span data-stu-id="8eda5-104">If you are building a designer for an <xref:System.Activities.Activity>, you should use the <xref:System.Activities.Presentation.ActivityDesigner> base type.</span></span> <span data-ttu-id="8eda5-105">Wenn es nicht Aktivität Elemente, die als erstklassige Elemente auf dem designerzeichenbereich, z. B. ein Toolboxelement, die angehören soll draggable während des gesamten Zeichenbereich oder Ausschneiden und Einfügen-Szenarien verwenden behandelt werden, müssen `WorkflowViewElement` als Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="8eda5-105">If there are non-activity elements that need to be treated as first class items on the designer canvas, such as a toolbox item that needs to be draggable throughout the canvas, or for cut-and-paste scenarios, use `WorkflowViewElement` as the base class.</span></span> <span data-ttu-id="8eda5-106">Wenn Sie nicht die Standardaktivität Chrome für einen Aktivitäts-Designer verwenden möchten `WorkflowViewElement` sollte als Basistyp verwendet werden, um die größte Flexibilität bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="8eda5-106">If you do not want to use the standard activity chrome for an activity designer, `WorkflowViewElement` should be used as the base type to provide the most flexibility.</span></span>  
  
 <span data-ttu-id="8eda5-107">Ein <xref:System.Activities.Presentation.WorkflowViewElement> stellt ein <xref:System.Activities.Presentation.Model.ModelItem>-Element auf der Benutzeroberfläche dar und stellt den Codezugriff auf das Modellelement und einen <xref:System.Activities.Presentation.EditingContext> zum Vornehmen von Änderungen bereit.</span><span class="sxs-lookup"><span data-stu-id="8eda5-107">A <xref:System.Activities.Presentation.WorkflowViewElement> represents a <xref:System.Activities.Presentation.Model.ModelItem> in the UI and provides code access to the model item and an <xref:System.Activities.Presentation.EditingContext> that allows changes to be made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8eda5-108">Ein Codebeispiel zur Erstellung neuer <xref:System.Activities.Activity>- und <xref:System.Activities.Presentation.ActivityDesigner>-Elemente und zu deren Zuordnung finden Sie in der Dokumentation zu <xref:System.Activities.Presentation.ActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="8eda5-108">For a code sample showing how to create a new <xref:System.Activities.Activity> and an <xref:System.Activities.Presentation.ActivityDesigner>, and then how to associate them, see the sample in the <xref:System.Activities.Presentation.ActivityDesigner> documentation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowViewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowViewElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8eda5-109">Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.WorkflowViewElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8eda5-109">Initializes a new instance of the <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-110">Die <xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> -Eigenschaftensatz auf `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="8eda5-110">The <xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> property is set to `false` by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapsible">
      <MemberSignature Language="C#" Value="public bool Collapsible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collapsible" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Collapsible" />
      <MemberSignature Language="VB.NET" Value="Public Property Collapsible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Collapsible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-111">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob das Element reduziert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8eda5-111">Gets or sets a value that indicates whether the element can be collapsed.</span></span></summary>
        <value>
          <span data-ttu-id="8eda5-112"><see langword="true" />, wenn das Element reduziert werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eda5-112"><see langword="true" /> if the element can be collapsed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeViews">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt; CompositeViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Activities.Presentation.ICompositeView&gt; CompositeViews" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.CompositeViews" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CompositeViews As IList(Of ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ CompositeViews { System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-113">Ruft die Liste aller zusammengesetzten Ansichten ab.</span><span class="sxs-lookup"><span data-stu-id="8eda5-113">Gets the list of all composite views.</span></span></summary>
        <value><span data-ttu-id="8eda5-114">Die Liste aller zusammengesetzten Ansichten.</span><span class="sxs-lookup"><span data-stu-id="8eda5-114">The list of all composite views.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.EditingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); void set(System::Activities::Presentation::EditingContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-115">Ruft den Bearbeitungskontext ab (bzw. legt diesen fest), der von allen in einem Workflow-Designer enthaltenen Elementen gemeinsam genutzt wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-115">Gets or sets the editing context that is shared by all elements contained in a workflow designer.</span></span></summary>
        <value><span data-ttu-id="8eda5-116">Das <see cref="T:System.Activities.Presentation.EditingContext" />-Objekt für den Workflow-Designer, der das Workflowansichtselement enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-116">The <see cref="T:System.Activities.Presentation.EditingContext" /> object for the workflow designer that contains the workflow view element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-117">Das <xref:System.Activities.Presentation.EditingContext>-Objekt ist eine Auflistung von Diensten, die von allen Elementen im Designer gemeinsam genutzt werden und mit denen die Interaktion zwischen Host und Designer durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-117">The <xref:System.Activities.Presentation.EditingContext> object is a collection of services shared between all elements contained in the designer and used to interact between the host and the designer.</span></span> <span data-ttu-id="8eda5-118">Dienste werden über den <xref:System.Activities.Presentation.EditingContext> veröffentlicht und angefordert.</span><span class="sxs-lookup"><span data-stu-id="8eda5-118">Services are published and requested through the <xref:System.Activities.Presentation.EditingContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-119">Bezeichnet die <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8eda5-119">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" /> dependency property.</span></span> <span data-ttu-id="8eda5-120">Dieses Feld ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-120">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCompositeView">
      <MemberSignature Language="C#" Value="protected System.Activities.Presentation.ICompositeView DefaultCompositeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.ICompositeView DefaultCompositeView" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DefaultCompositeView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DefaultCompositeView As ICompositeView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Presentation::ICompositeView ^ DefaultCompositeView { System::Activities::Presentation::ICompositeView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ICompositeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-121">Ruft die zusammengesetzte Standardansicht ab.</span><span class="sxs-lookup"><span data-stu-id="8eda5-121">Gets the default composite view.</span></span></summary>
        <value><span data-ttu-id="8eda5-122">Die zusammengesetzte Standardansicht.</span><span class="sxs-lookup"><span data-stu-id="8eda5-122">The default composite view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Designer">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.DesignerView Designer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.DesignerView Designer" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Designer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Designer As DesignerView" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::DesignerView ^ Designer { System::Activities::Presentation::View::DesignerView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.DesignerView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-123">Ruft den Designer ab, der dem Workflowansicht-Element zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-123">Gets the designer associated with the workflow view element.</span></span></summary>
        <value><span data-ttu-id="8eda5-124">Das DesignerView-Element, das dem Workflowansicht-Element zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-124">The designer associated with the workflow view element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragHandle">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElement DragHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElement DragHandle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DragHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property DragHandle As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElement ^ DragHandle { System::Windows::FrameworkElement ^ get(); void set(System::Windows::FrameworkElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-125">Ruft den Ziehpunkt für das Workflowansichtselement ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="8eda5-125">Gets or sets the drag handle for the workflow view element.</span></span></summary>
        <value><span data-ttu-id="8eda5-126">Das Zieh-Handle für das Workflow-Ansichtselement.</span><span class="sxs-lookup"><span data-stu-id="8eda5-126">The drag handle for the workflow view element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandState">
      <MemberSignature Language="C#" Value="public bool ExpandState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExpandState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExpandState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-127">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob sich der Ansichtszustand des Elements erweitert ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-127">Gets or sets a value that indicates whether the view state of the element is expanded.</span></span></summary>
        <value>
          <span data-ttu-id="8eda5-128"><see langword="true" />, wenn der Ansichtszustand des Elements erweitert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eda5-128"><see langword="true" /> if the view state of the element is expanded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpandStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpandStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ExpandStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpandStateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-129">Bezeichnet die <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8eda5-129">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> dependency property.</span></span> <span data-ttu-id="8eda5-130">Dieses Feld ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-130">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationHelpText">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationHelpText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationHelpText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationHelpText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationHelpText () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationHelpText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8eda5-131">Ruft bei Implementierung in einer abgeleiteten Klasse den Hilfetext zur Automatisierung ab.</span><span class="sxs-lookup"><span data-stu-id="8eda5-131">When implemented in a derived class, retrieves the automation help text.</span></span></summary>
        <returns><span data-ttu-id="8eda5-132">Die Standardimplementierung gibt ein leeres <see cref="T:System.String" />-Element zurück.</span><span class="sxs-lookup"><span data-stu-id="8eda5-132">The default implementation is to return an empty <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-133">Implementieren Sie diese Methode in die abgeleitete Klasse, um eine eigene Behandlung hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="8eda5-133">Implement this method in your derived class to add your own handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationIdMemberName">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationIdMemberName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationIdMemberName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationIdMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationIdMemberName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationIdMemberName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8eda5-134">Ruft bei Implementierung in einer abgeleiteten Klasse den Namen einer Eigenschaft des Modellelements ab, die dem als Automatisierungs-ID verwendeten Element zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-134">When implemented in a derived class, gets the name of a property of the model item associated with the element that is used as automation ID.</span></span></summary>
        <returns><span data-ttu-id="8eda5-135">Der Name, der als Automatisierungs-ID verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-135">The name to use as automation ID.</span></span> <span data-ttu-id="8eda5-136">Die Basisklasse gibt immer <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="8eda5-136">The base class always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-137">Implementieren Sie diese Methode in der abgeleiteten Klasse, um eine eigene Behandlung hinzuzufügen, die eine Eigenschaft eines Modellelements angibt, mit der das Modellelement für die Automatisierung identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-137">Implement this method in your derived class to add your own handling that specifies a property of a model item to be used to identify the model item to automation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationItemStatus">
      <MemberSignature Language="C#" Value="protected internal virtual string GetAutomationItemStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetAutomationItemStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationItemStatus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetAutomationItemStatus () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetAutomationItemStatus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8eda5-138">Ruft bei Implementierung in einer abgeleiteten Klasse den Elementstatus der Automatisierung ab.</span><span class="sxs-lookup"><span data-stu-id="8eda5-138">When implemented in a derived class, retrieves the automation item status.</span></span></summary>
        <returns><span data-ttu-id="8eda5-139">Die Standardimplementierung gibt ein leeres <see cref="T:System.String" />-Element zurück.</span><span class="sxs-lookup"><span data-stu-id="8eda5-139">The default implementation is to return an empty <see cref="T:System.String" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-140">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob das Workflowansichtselement schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-140">Gets or sets a value that indicates whether the workflow view element is read only.</span></span></summary>
        <value>
          <span data-ttu-id="8eda5-141"><see langword="true" />, wenn das Element schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eda5-141"><see langword="true" /> if the element is read only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsRootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRootDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRootDesigner { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-142">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob es sich bei dem angegebenen Designer um den Stamm-Designer für dieses Element handelt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-142">Gets or sets a value that indicates whether the specified designer is the root designer for this element.</span></span></summary>
        <value>
          <span data-ttu-id="8eda5-143"><see langword="true" />, wenn der angegebene Designer der Stammdesigner ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eda5-143"><see langword="true" /> if the specified designer is the root designer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem ModelItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem ModelItem" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelItem As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ ModelItem { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-144">Ruft das zugrunde liegende <see cref="T:System.Activities.Presentation.Model.ModelItem" />-Objekt ab (bzw. legt dieses fest), das dem Workflowansichtselement zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-144">Gets or sets the underlying <see cref="T:System.Activities.Presentation.Model.ModelItem" /> object associated with the workflow view element.</span></span></summary>
        <value><span data-ttu-id="8eda5-145">Ein <see cref="T:System.Activities.Presentation.Model.ModelItem" />-Objekt, das ein Wrapper um eine Modellinstanz oder eine Darstellung im Arbeitsspeicher des zugrunde liegenden Workflows ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-145">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> object that is a wrapper around a model instance or an in-memory representation of the underlying workflow.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-146">Das <xref:System.Activities.Presentation.Model.ModelItem>-Objekt stellt die Benachrichtigung über Änderungen auch dann bereit, wenn die Modellinstanz keine Änderungsbenachrichtigung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-146">The <xref:System.Activities.Presentation.Model.ModelItem> object provides notification of changes even if the model instance does not provide change notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModelItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModelItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ModelItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModelItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModelItemProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-147">Bezeichnet die <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8eda5-147">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" /> dependency property.</span></span> <span data-ttu-id="8eda5-148">Dieses Feld ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-148">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuLoaded (System.Windows.Controls.ContextMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuLoaded(class System.Windows.Controls.ContextMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnContextMenuLoaded(System.Windows.Controls.ContextMenu)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuLoaded (menu As ContextMenu)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuLoaded(System::Windows::Controls::ContextMenu ^ menu);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="System.Windows.Controls.ContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu"><span data-ttu-id="8eda5-149">Das <see cref="T:System.Windows.Controls.ContextMenu" />-Element, das geladen wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-149">The <see cref="T:System.Windows.Controls.ContextMenu" /> that is loaded.</span></span></param>
        <summary><span data-ttu-id="8eda5-150">Wird aufgerufen, wenn das Kontextmenü geladen wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-150">Invoked when the context menu is loaded.</span></span> <span data-ttu-id="8eda5-151">Implementieren Sie diese Methode in einer abgeleiteten Klasse zum Behandeln dieses Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8eda5-151">Implement this method in a derived class to handle this event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8eda5-152">Gibt eine <see cref="T:System.Activities.Presentation.WorkflowViewElement" />-spezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierung für die Windows Presentation Foundation-Infrastruktur (WPF) zurück.</span><span class="sxs-lookup"><span data-stu-id="8eda5-152">Returns a <see cref="T:System.Activities.Presentation.WorkflowViewElement" />-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for the Windows Presentation Foundation (WPF) infrastructure.</span></span></summary>
        <returns><span data-ttu-id="8eda5-153">Die typspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="8eda5-153">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-154">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-154">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8eda5-155">Löst das <see cref="E:System.Windows.UIElement.DragEnter" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8eda5-155">Raises the <see cref="E:System.Windows.UIElement.DragEnter" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-156">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-156">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8eda5-157">Löst das <see cref="E:System.Windows.UIElement.DragOver" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8eda5-157">Raises the <see cref="E:System.Windows.UIElement.DragOver" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditAnnotation">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEditAnnotation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEditAnnotation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnEditAnnotation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnEditAnnotation ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEditAnnotation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8eda5-158">Tritt ein, wenn die Anmerkung bearbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-158">Occurs when the annotation is edited.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-159">Das <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-159">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8eda5-160">Löst das <see cref="E:System.Windows.FrameworkElement.Initialized" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8eda5-160">Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-161">Die Standardimplementierung dieser virtuellen Methode löst das Ereignis wie oben beschrieben aus.</span><span class="sxs-lookup"><span data-stu-id="8eda5-161">The default implementation of this virtual method raises the event as described above.</span></span> <span data-ttu-id="8eda5-162">Bei Überschreibungen sollte die Basisimplementierung aufgerufen werden, um dieses Verhalten beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="8eda5-162">Overrides should call the base implementation to preserve this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModelItemChanged (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModelItemChanged(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnModelItemChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModelItemChanged (newItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModelItemChanged(System::Object ^ newItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem"><span data-ttu-id="8eda5-163">Ein <see cref="T:System.Object" />, das den geänderten Zustand des Modellelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-163">An <see cref="T:System.Object" /> that represents the changed state of the model item.</span></span></param>
        <summary><span data-ttu-id="8eda5-164">Wird aufgerufen, wenn das zugrunde liegende Modellelement geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-164">Invoked when the underlying model item is changed.</span></span> <span data-ttu-id="8eda5-165">Implementieren Sie diese Methode in einer abgeleiteten Klasse zum Behandeln dieses Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8eda5-165">Implement this method in a derived class to handle this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-166">Es ist keine Standardimplementierung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="8eda5-166">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-167">Die <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Instanz, die die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-167">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data.</span></span> <span data-ttu-id="8eda5-168">Diese Ereignisdaten melden Details zur Maustaste, die gedrückt wurde, und zum behandelten Zustand.</span><span class="sxs-lookup"><span data-stu-id="8eda5-168">This event data reports details about the mouse button that was pressed and the state handled.</span></span></param>
        <summary><span data-ttu-id="8eda5-169">Wird aufgerufen, wenn die Maustaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-169">Invoked when the mouse button is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-170">Die <see cref="T:System.Windows.Input.MouseEventArgs" />-Instanz, die die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-170">The <see cref="T:System.Windows.Input.MouseEventArgs" /> instance that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8eda5-171">Wird aufgerufen, wenn die Maus bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-171">Invoked when the mouse is moved.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-172">Die <see cref="T:System.Windows.Input.MouseButtonEventArgs" />-Instanz, die die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-172">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data.</span></span> <span data-ttu-id="8eda5-173">Die Ereignisdaten melden, dass die Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="8eda5-173">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="8eda5-174">Wird aufgerufen, wenn die Maustaste losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-174">Invoked when the mouse button is released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-175">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-175">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8eda5-176">Wird aufgerufen, wenn ein nicht behandelter Ziehvorgang, der dem angegebenen Ereignis zugeordnet ist, beim Durchlaufen seiner Route auf ein von dieser Klasse abgeleitetes Element trifft.</span><span class="sxs-lookup"><span data-stu-id="8eda5-176">Invoked when an unhandled drag attached to the specified event enters an element in its route that is derived from this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-177">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-177">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8eda5-178">Wird aufgerufen, wenn ein nicht behandelter Ziehvorgang, der dem angegebenen Ereignis zugeordnet ist, beim Durchlaufen seiner Route ein von dieser Klasse abgeleitetes Element verlässt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-178">Invoked when an unhandled drag attached to the specified event leaves an element in its route that is derived from this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8eda5-179">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8eda5-179">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="8eda5-180">Die Ereignisdaten melden, dass eine oder mehrere Maustasten losgelassen wurden.</span><span class="sxs-lookup"><span data-stu-id="8eda5-180">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="8eda5-181">Wird aufgerufen, wenn ein nicht behandelter Loslassen-Vorgang der Maustaste, der dem angegebenen Ereignis zugeordnet ist, beim Durchlaufen seiner Route auf ein von dieser Klasse abgeleitetes Element trifft.</span><span class="sxs-lookup"><span data-stu-id="8eda5-181">Invoked when an unhandled mouse release attached to the specified event reaches an element in its route that is derived from this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnReadOnlyChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(bool isReadOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly">
          <span data-ttu-id="8eda5-182"><see langword="true" />, um anzugeben, dass das Element schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eda5-182"><see langword="true" /> to indicate that the element is read-only; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8eda5-183">Wird aufgerufen, wenn die schreibgeschützte Eigenschaft geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-183">Invoked when the read-only property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-184">Es ist keine Standardimplementierung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="8eda5-184">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowExpandedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnShowExpandedChanged (bool newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowExpandedChanged(bool newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnShowExpandedChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShowExpandedChanged (newValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShowExpandedChanged(bool newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="newValue">
          <span data-ttu-id="8eda5-185">anzugeben,<see langword="true" />, um anzugeben, dass der Wert der erweiterten Eigenschaft geändert wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eda5-185"><see langword="true" /> to indicate that the value of the show expanded property is changed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8eda5-186">Wird aufgerufen, wenn die ShowExpanded-Eigenschaft geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-186">Invoked when the show expanded property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-187">Es ist keine Standardimplementierung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="8eda5-187">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinState">
      <MemberSignature Language="C#" Value="public bool PinState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PinState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.PinState" />
      <MemberSignature Language="VB.NET" Value="Public Property PinState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PinState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-188">Ruft einen Wert ab bzw. legt diesen fest, der angibt, ob die <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />-Eigenschaft Vorrang vor anderen Zuständen haben soll, mit denen das <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> erweitert oder reduziert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8eda5-188">Gets or sets a value that indicates whether the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> property should take precedence over other states that can be used to expand or collapse the <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span></span></summary>
        <value>
          <span data-ttu-id="8eda5-189"><see langword="true" />, wenn die <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />-Eigenschaft zum Erweitern oder Reduzieren des <see cref="T:System.Activities.Presentation.WorkflowViewElement" />-Objekts verwendet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eda5-189"><see langword="true" /> if the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> property should be used to expand or collapse the <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PinStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PinStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PinStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.PinStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PinStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PinStateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-190">Bezeichnet die <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8eda5-190">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" /> dependency property.</span></span> <span data-ttu-id="8eda5-191">Dieses Feld ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-191">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="8eda5-192">Die zusammengesetzte Ansicht, die registriert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8eda5-192">The composite view to register.</span></span></param>
        <summary><span data-ttu-id="8eda5-193">Fügt der Liste der zusammengesetzten Ansichten die angegebene zusammengesetzte Ansicht hinzu.</span><span class="sxs-lookup"><span data-stu-id="8eda5-193">Adds the specified composite view to the list of composite views.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="8eda5-194">Die zusammengesetzte Ansicht.</span><span class="sxs-lookup"><span data-stu-id="8eda5-194">The composite view.</span></span></param>
        <summary><span data-ttu-id="8eda5-195">Fügt die angegebene zusammengesetzte Ansicht als standardmäßige zusammengesetzte Ansicht hinzu.</span><span class="sxs-lookup"><span data-stu-id="8eda5-195">Adds the specified composite view as the default composite view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpanded">
      <MemberSignature Language="C#" Value="public bool ShowExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpanded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-196">Ruft einen Wert ab, der angibt, ob das Workflowansichtselement in einer erweiterten Ansicht angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="8eda5-196">Gets a value that indicates whether the workflow view element is shown in an expanded view.</span></span></summary>
        <value>
          <span data-ttu-id="8eda5-197"><see langword="true" />, wenn das Element in einer erweiterten Ansicht dargestellt wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8eda5-197"><see langword="true" /> if the element is shown in an expanded view; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ShowExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowExpandedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-198">Bezeichnet die <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8eda5-198">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" /> dependency property.</span></span> <span data-ttu-id="8eda5-199">Dieses Feld ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8eda5-199">This is a read-only field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="8eda5-200">Die zusammengesetzte Ansicht, deren Registrierung aufgehoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="8eda5-200">The composite view to unregister.</span></span></param>
        <summary><span data-ttu-id="8eda5-201">Entfernt die angegebene zusammengesetzte Ansicht aus der Liste der zusammengesetzten Ansichten.</span><span class="sxs-lookup"><span data-stu-id="8eda5-201">Removes the specified composite view from the list of composite views.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="8eda5-202">Die zusammengesetzte Ansicht, die entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8eda5-202">The composite view to remove.</span></span></param>
        <summary><span data-ttu-id="8eda5-203">Entfernt die angegebene zusammengesetzte Ansicht.</span><span class="sxs-lookup"><span data-stu-id="8eda5-203">Removes the specified default composite view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.Services.ViewService ViewService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Services.ViewService ViewService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewService As ViewService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::Services::ViewService ^ ViewService { System::Activities::Presentation::Services::ViewService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Services.ViewService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-204">Ruft das <see cref="T:System.Activities.Presentation.Services.ViewService" />-Element ab, das dem Workflowansichtselement zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-204">Gets the <see cref="T:System.Activities.Presentation.Services.ViewService" /> associated with the workflow view element.</span></span></summary>
        <value><span data-ttu-id="8eda5-205">Der Anzeigedienst, der dem Workflowansichtselement zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-205">The view service associated with the workflow view element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda5-206">Auf diese Eigenschaft kann auch mit der <xref:System.Activities.Presentation.EditingContext.Services%2A>-Eigenschaft zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="8eda5-206">This property can also be accessed with the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.ViewStateService ViewStateService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.ViewStateService ViewStateService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewStateService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewStateService As ViewStateService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::ViewStateService ^ ViewStateService { System::Activities::Presentation::View::ViewStateService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8eda5-207">Ruft das <see cref="T:System.Activities.Presentation.View.ViewStateService" />-Element ab, das im <see cref="T:System.Activities.Presentation.EditingContext" /> definiert ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-207">Gets the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Presentation.EditingContext" />.</span></span> <span data-ttu-id="8eda5-208">Eine Verknüpfung zu dieser Eigenschaft stellt der Zugriff auf <see cref="P:System.Activities.Presentation.EditingContext.Services" /> dar.</span><span class="sxs-lookup"><span data-stu-id="8eda5-208">A shortcut to this property is by accessing <see cref="P:System.Activities.Presentation.EditingContext.Services" />.</span></span></summary>
        <value><span data-ttu-id="8eda5-209">Das <see cref="T:System.Activities.Presentation.View.ViewStateService" />-Element, das im <see cref="T:System.Activities.Presentation.EditingContext" /> definiert ist.</span><span class="sxs-lookup"><span data-stu-id="8eda5-209">The <see cref="T:System.Activities.Presentation.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Presentation.EditingContext" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>