<Type Name="IModalService" FullName="System.Activities.Presentation.IModalService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1dcb0282b9db9a3e3f8197af1c51f06379d039b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69322550" /></Metadata><TypeSignature Language="C#" Value="public interface IModalService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IModalService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.IModalService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IModalService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IModalService" />
  <TypeSignature Language="F#" Value="type IModalService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Aktiviert die Benachrichtigung an eine Hostanwendung, dass ein modales Dialogfeld angezeigt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einige Anwendungen, die Designer hosten, müssen benachrichtigt werden, wenn ein modales Dialogfeld aufgerufen wurde. Visual Studio ist ein Beispiel für einen solchen Host. Die <xref:System.Activities.Presentation.IModalService>-Schnittstelle stellt eine Schnittstelle zum Übermitteln des aktuellen modalen Status bereit.  
  
 Der Windows-Workflow-Designer ruft die <xref:System.Activities.Presentation.IModalService.SetModalState%2A>-Methode auf. Wenn der `isModal` -Parameter auf `true`festgelegt ist, wird der Host benachrichtigt, dass ein modales Dialogfeld angezeigt wird.  
  
 Dies ist ein optionaler Dienst. Wenn der modale Status für eine Anwendung keine Rolle spielt, muss der Dienst nicht verwendet werden.  
  
 Wenn in der aktuellen Implementierung ein Windows Presentation Foundation (WPF)-Meldungs Feld (das ein modales Dialogfeld ist) aufgerufen <xref:System.Activities.Presentation.IModalService.SetModalState%2A> wird, wird der nicht aufgerufen. Wenn die Hostanwendung diese Informationen erfordert, muss eine andere Problemumgehung implementiert werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetModalState">
      <MemberSignature Language="C#" Value="public void SetModalState (bool isModal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetModalState(bool isModal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.IModalService.SetModalState(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModalState (isModal As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModalState(bool isModal);" />
      <MemberSignature Language="F#" Value="abstract member SetModalState : bool -&gt; unit" Usage="iModalService.SetModalState isModal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isModal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isModal">Wenn auf <see langword="true" /> festgelegt, wird ein modales Dialogfeld angezeigt.</param>
        <summary>Benachrichtigt die Hostanwendung, dass ein modales Dialogfeld angezeigt wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
