<Type Name="ActivityDesigner" FullName="System.Activities.Presentation.ActivityDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9abc75cdac471adc9f99408560a30787763f671b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57930972" /></Metadata><TypeSignature Language="C#" Value="public class ActivityDesigner : System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ActivityDesigner extends System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ActivityDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityDesigner&#xA;Inherits WorkflowViewElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityDesigner : System::Activities::Presentation::WorkflowViewElement" />
  <TypeSignature Language="F#" Value="type ActivityDesigner = class&#xA;    inherit WorkflowViewElement" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.WorkflowViewElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Basisklasse für alle Aktivitätsdesignerkomponenten bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Typ stellt die grundlegenden Darstellungsfunktionen für andere Aktivitätsdesigner bereit und ermöglicht Entwicklern das Hinzufügen zusätzlicher Funktionen zu einer Aktivitätsdesigneroberfläche. Dies erfolgt in der Regel um entweder zusätzliche nützliche Informationen für den Benutzer der Aktivität anzeigen, erstellen eine bessere Zeichenbereich Bearbeitungsfunktionen (z. B. die `ExpressionTextBox` auf eine `If` Aktivitäts-Designer), oder um zu ermöglichen Elemente bearbeitet werden kann (in diesem Fall sollten Sie die <xref:System.Activities.Statements.If.Then%2A> und <xref:System.Activities.Statements.If.Else%2A> Eigenschaften der <xref:System.Activities.Statements.If> Aktivität).  
  
 Der <xref:System.Activities.Presentation.ActivityDesigner> erbt vom <xref:System.Activities.Presentation.WorkflowViewElement> und fügt zuallererst die Standardformatierung und die Fähigkeit zum Anpassen des Symbols per <xref:System.Activities.Presentation.ActivityDesigner.Icon%2A>-Eigenschaft hinzu. Die Verwendung ist immer dann ratsam, wenn Sie einen Designer für einen Typ erstellen, der von <xref:System.Activities.Activity> abgeleitet wird. Bei der Zuordnung zu einem <xref:System.Activities.Activity>-Typ zeigt die <xref:System.Activities.Presentation.WorkflowViewElement.ModelItem%2A>-Eigenschaft auf die ModelItem-Hierarchie, die die Instanz des bearbeiteten Typs beschreibt.  
  
   
  
## Examples  
 Unten im Beispielcode wird zuerst eine `First2of3`-Aktivität definiert. Anschließend wird der Code für den First2of3-Designer gezeigt, und zuletzt wird veranschaulicht, wie das Designer-Attribut zum Zuordnen der Aktivität zum Designer verwendet wird.  
  
```  
  
//The First2of3 activity  
using System.Activities;  
using System.Collections.Generic;  
using System.Linq;  
  
namespace Microsoft.Activities.Documentation.ActivityTypes  
{  
  
    public sealed class First2of3 : NativeActivity  
    {  
        public Activity Activity1 { get; set; }  
        public Activity Activity2 { get; set; }  
        public Activity Activity3 { get; set; }  
  
        Variable<List<ActivityInstance>> ExecutingActivities { get; set; }  
  
        public First2of3()  
        {  
            ExecutingActivities = new Variable<List<ActivityInstance>>();  
        }  
  
        // If your activity returns a value, derive from CodeActivity<TResult>  
        // and return the value from the Execute method.  
        protected override void Execute(NativeActivityContext context)  
        {  
            // Obtain the runtime value of the Text input argument  
            var l = new List<ActivityInstance>();  
            ExecutingActivities.Set(context, l);  
            l.Add(context.ScheduleActivity(Activity1, onComplete));  
            l.Add(context.ScheduleActivity(Activity2, onComplete));  
            l.Add(context.ScheduleActivity(Activity3, onComplete));  
        }  
  
        protected override void CacheMetadata(NativeActivityMetadata metadata)  
        {  
            metadata.AddImplementationVariable(ExecutingActivities);  
            metadata.AddChild(Activity1);  
            metadata.AddChild(Activity2);  
            metadata.AddChild(Activity3);  
        }  
  
        private void onComplete(NativeActivityContext context, ActivityInstance completedInstance)  
        {  
            var l = ExecutingActivities.Get(context);  
            l.Remove(completedInstance);  
            if (l.Count == 1)  
            {  
                context.CancelChild(l.Single());  
            }  
        }  
    }  
}  
  
// Code for the First2of3 Designer:  
<sap:ActivityDesigner x:Class="Microsoft.Activites.Documentation.First2of3Designer"  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    xmlns:sap="clr-namespace:System.Activities.Presentation;assembly=System.Activities.Presentation"  
    xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation">  
    <StackPanel>  
        <Label Content="2 of 3 activity">  
            <Label.ToolTip>  
                This activity has 3 child activities which will be scheduled in parallel.    
                Upon completion of any 2, the third will be cancelled  
            </Label.ToolTip>  
        </Label>  
        <StackPanel Orientation="Horizontal">  
            <Border BorderBrush="Blue" BorderThickness="2" CornerRadius="2" Margin="2" Padding="2">  
                <sap:WorkflowItemPresenter HintText="Drop Activity1 Here" Item="{Binding Path=ModelItem.Activity1, Mode=TwoWay}" />  
            </Border>  
            <Border BorderBrush="Blue" BorderThickness="2" CornerRadius="2" Margin="2" Padding="2">  
                <sap:WorkflowItemPresenter HintText="Drop Activity2 Here" Item="{Binding Path=ModelItem.Activity2, Mode=TwoWay}" />  
  
            </Border>  
            <Border BorderBrush="Blue" BorderThickness="2" CornerRadius="2" Margin="2" Padding="2">  
                <sap:WorkflowItemPresenter HintText="Drop Activity3 Here" Item="{Binding Path=ModelItem.Activity3, Mode=TwoWay}" />  
  
            </Border>  
        </StackPanel>  
    </StackPanel>  
</sap:ActivityDesigner>  
  
//Code for associating the activity with the designer using the Designer attribute.  
[Designer(typeof(First2of3Designer))]  
public sealed class First2of3 : NativeActivity  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.ActivityDesigner" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationHelpText">
      <MemberSignature Language="C#" Value="protected override string GetAutomationHelpText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetAutomationHelpText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.GetAutomationHelpText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAutomationHelpText () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetAutomationHelpText();" />
      <MemberSignature Language="F#" Value="override this.GetAutomationHelpText : unit -&gt; string" Usage="activityDesigner.GetAutomationHelpText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge mit Automatisierungseigenschaft/Wert-Paaren zurück, die sich auf den <see cref="T:System.Activities.Presentation.ActivityDesigner" /> bezieht.</summary>
        <returns>Eine <see cref="T:System.String" /> mit den Eigenschaft-Wert-Paaren zur Automatisierung zurück, die mit dem <see cref="T:System.Activities.Presentation.ActivityDesigner" /> in Zusammenhang stehen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationIdMemberName">
      <MemberSignature Language="C#" Value="protected override string GetAutomationIdMemberName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetAutomationIdMemberName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.GetAutomationIdMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAutomationIdMemberName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetAutomationIdMemberName();" />
      <MemberSignature Language="F#" Value="override this.GetAutomationIdMemberName : unit -&gt; string" Usage="activityDesigner.GetAutomationIdMemberName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Zeichenfolge „DisplayName“ in dieser überschriebenen Methodenimplementierung zurück</summary>
        <returns>Die Zeichenfolge „DisplayName“ in dieser überschriebenen Methodenimplementierung</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationItemStatus">
      <MemberSignature Language="C#" Value="protected internal override string GetAutomationItemStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetAutomationItemStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.GetAutomationItemStatus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetAutomationItemStatus () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetAutomationItemStatus();" />
      <MemberSignature Language="F#" Value="override this.GetAutomationItemStatus : unit -&gt; string" Usage="activityDesigner.GetAutomationItemStatus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Status des Automatisierungselements zurück.</summary>
        <returns>Der Status des Automatisierungs-Elements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingBrush Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DrawingBrush Icon" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.ActivityDesigner.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As DrawingBrush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DrawingBrush ^ Icon { System::Windows::Media::DrawingBrush ^ get(); void set(System::Windows::Media::DrawingBrush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Media.DrawingBrush with get, set" Usage="System.Activities.Presentation.ActivityDesigner.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingBrush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Symbol ab (bzw. legt dieses fest), das diesem <see cref="T:System.Activities.Presentation.ActivityDesigner" /> zugeordnet ist.</summary>
        <value>Ein <see cref="T:System.Windows.Media.DrawingBrush" /> , die mit diesem verknüpften Symbols darstellt <see cref="T:System.Activities.Presentation.ActivityDesigner" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.ActivityDesigner.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.ActivityDesigner.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert die <see cref="F:System.Activities.Presentation.ActivityDesigner.IconProperty" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="activityDesigner.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet den Prozess der Zuordnung einer Vorlage zum Erstellen eines <see cref="T:System.Activities.Presentation.ActivityDesigner" />-Elements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditAnnotation">
      <MemberSignature Language="C#" Value="protected internal override void OnEditAnnotation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEditAnnotation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnEditAnnotation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEditAnnotation ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEditAnnotation();" />
      <MemberSignature Language="F#" Value="override this.OnEditAnnotation : unit -&gt; unit" Usage="activityDesigner.OnEditAnnotation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet die Verarbeitung, die eintritt, wenn die Anmerkung bearbeitet wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelItemChanged">
      <MemberSignature Language="C#" Value="protected override void OnModelItemChanged (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnModelItemChanged(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnModelItemChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnModelItemChanged (newItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnModelItemChanged(System::Object ^ newItem);" />
      <MemberSignature Language="F#" Value="override this.OnModelItemChanged : obj -&gt; unit" Usage="activityDesigner.OnModelItemChanged newItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="newItem">Das neue Element.</param>
        <summary>Startet die Verarbeitung, die auftritt, wenn das Modellelement geändert wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="activityDesigner.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Startet die Verarbeitung, die durchgeführt wird, wenn eine beliebige Maustaste losgelassen wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ActivityDesigner.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="activityDesigner.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Startet die Verarbeitung, die durchgeführt wird, wenn ein weitergeleitetes angefügtes <see cref="T:System.Windows.Input.Mouse.PreviewMouseDown" />-Ereignis beim Durchlaufen seiner Route auf ein Element trifft, das von dieser Klasse abgeleitet ist</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>