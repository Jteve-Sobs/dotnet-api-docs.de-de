<Type Name="ServiceManager" FullName="System.Activities.Presentation.ServiceManager">
  <TypeSignature Language="C#" Value="public abstract class ServiceManager : IServiceProvider, System.Collections.Generic.IEnumerable&lt;Type&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceManager extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt;, class System.Collections.IEnumerable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceManager&#xA;Implements IEnumerable(Of Type), IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceManager abstract : IServiceProvider, System::Collections::Generic::IEnumerable&lt;Type ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a8b74-101">Implementiert <see cref="T:System.IserviceProvider" /> und stellt den Zugriff auf Dienste bereit, die vom Bearbeitungskontext angeboten werden.</span><span class="sxs-lookup"><span data-stu-id="a8b74-101">Implements <see cref="T:System.IserviceProvider" /> and provides access to services offered by the editing context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8b74-102"><xref:System.Activities.Presentation.EditingContext.Services%2A> stellen Funktionen dar, die entweder vom Host für den zu verwendenden Designer bereitgestellt werden oder die vom Designer verwendet werden, um Funktionen für alle Designer innerhalb des Editors bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-102"><xref:System.Activities.Presentation.EditingContext.Services%2A> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor.</span></span> <span data-ttu-id="a8b74-103">Wird von der <xref:System.Activities.Presentation.EditingContext>-Eigenschaft aus dem <xref:System.Activities.Presentation.EditingContext.Services%2A> abgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-103">It is obtained from the <xref:System.Activities.Presentation.EditingContext> by the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8b74-104">Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.ServiceManager" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a8b74-104">Initializes a new instance of the <see cref="T:System.Activities.Presentation.ServiceManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Contains(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (serviceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="a8b74-105">Der zu überprüfende Diensttyp.</span><span class="sxs-lookup"><span data-stu-id="a8b74-105">The type of service to check.</span></span></param>
        <summary><span data-ttu-id="a8b74-106">Gibt einen booleschen Wert zurück, der angibt, ob der Dienst-Manager einen Dienst vom angegebenen Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="a8b74-106">Returns a Boolean value that indicates whether the service manager contains a service of the given type.</span></span></summary>
        <returns>
          <span data-ttu-id="a8b74-107"><see langword="true" />, wenn ein Dienst vom Typ <paramref name="serviceType" /> veröffentlicht wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-107"><see langword="true" /> if a service of type <paramref name="serviceType" /> has been published; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public bool Contains&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Contains``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains(Of TServiceType) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; bool Contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="a8b74-108">Der zu überprüfende Diensttyp.</span><span class="sxs-lookup"><span data-stu-id="a8b74-108">The type of service to check.</span></span></typeparam>
        <summary><span data-ttu-id="a8b74-109">Gibt einen booleschen Wert zurück, der angibt, ob der Dienst-Manager einen Dienst vom angegebenen Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="a8b74-109">Returns a Boolean value that indicates whether the service manager contains a service of the given type.</span></span></summary>
        <returns>
          <span data-ttu-id="a8b74-110"><see langword="true" />, wenn ein Dienst vom Typ <paramref name="serviceType" /> veröffentlicht wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-110"><see langword="true" /> if a service of type <paramref name="serviceType" /> has been published; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;Type&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Type&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;Type ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8b74-111">Ruft einen Enumerator ab, der zum Auflisten aller Dienste verwendet werden kann, die dieser Dienst-Manager veröffentlicht.</span><span class="sxs-lookup"><span data-stu-id="a8b74-111">Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</span></span></summary>
        <returns><span data-ttu-id="a8b74-112">Gibt das <see cref="T:System.Collections.Generic.IEnumerator`1" />-Element zurück, das eine Enumeration der veröffentlichten Dienste enthält.</span><span class="sxs-lookup"><span data-stu-id="a8b74-112">Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />, which contains an enumeration of published services.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public TServiceType GetRequiredService&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TServiceType GetRequiredService&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetRequiredService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredService(Of TServiceType) () As TServiceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; TServiceType GetRequiredService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TServiceType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="a8b74-113">Der Typ des abzurufenden Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-113">The type of service to retrieve.</span></span></typeparam>
        <summary><span data-ttu-id="a8b74-114">Ruft den angeforderten Dienst ab.</span><span class="sxs-lookup"><span data-stu-id="a8b74-114">Retrieves the requested service.</span></span></summary>
        <returns><span data-ttu-id="a8b74-115">Gibt einen generischen Typ zurück, bei dem es sich um eine Instanz des Diensts handelt.</span><span class="sxs-lookup"><span data-stu-id="a8b74-115">Returns a generic type, which is an instance of the service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8b74-116">Im Gegensatz zu <xref:System.Activities.Presentation.ServiceManager.GetService%2A> löst diese Methode eine <xref:System.NotSupportedException> aus, wenn der Dienst nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="a8b74-116">Unlike <xref:System.Activities.Presentation.ServiceManager.GetService%2A>, this method throws a <xref:System.NotSupportedException> if the service is not available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8b74-117">Es ist kein Dienst des angegebenen Typs vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a8b74-117">There is no service of the given type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public abstract object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="a8b74-118">Der Typ des abzurufenden Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-118">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="a8b74-119">Ruft den angeforderten Dienst ab.</span><span class="sxs-lookup"><span data-stu-id="a8b74-119">Retrieves the requested service.</span></span>  <span data-ttu-id="a8b74-120">Diese Methode gibt <see langword="null" /> zurück, wenn der Dienst nicht gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="a8b74-120">This method returns <see langword="null" /> if the service could not be located.</span></span></summary>
        <returns><span data-ttu-id="a8b74-121">Gibt <see cref="T:System.Object" /> zurück, wobei es sich um eine Instanz des Diensts handelt, oder <see langword="null" />, wenn der Dienst nicht veröffentlicht wurde.</span><span class="sxs-lookup"><span data-stu-id="a8b74-121">Returns <see cref="T:System.Object" />, which is an instance of the service, or <see langword="null" /> if the service has not been published.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-122"><paramref name="serviceType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-122"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public TServiceType GetService&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TServiceType GetService&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService(Of TServiceType) () As TServiceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; TServiceType GetService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TServiceType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="a8b74-123">Der Typ des abzurufenden Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-123">The type of service to retrieve.</span></span></typeparam>
        <summary><span data-ttu-id="a8b74-124">Ruft den angeforderten Dienst ab.</span><span class="sxs-lookup"><span data-stu-id="a8b74-124">Retrieves the requested service.</span></span>  <span data-ttu-id="a8b74-125">Diese Methode gibt <see langword="null" /> zurück, wenn der Dienst nicht gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="a8b74-125">This method returns <see langword="null" /> if the service could not be located.</span></span></summary>
        <returns><span data-ttu-id="a8b74-126">Gibt einen generischen Typ zurück, wobei es sich um eine Instanz des Diensts handelt, oder <see langword="null" />, wenn der Dienst nicht veröffentlicht wurde.</span><span class="sxs-lookup"><span data-stu-id="a8b74-126">Returns a generic type, which is an instance of the service, or <see langword="null" /> if the service has not been published.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="protected static object GetTarget (Delegate callback);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetTarget(class System.Delegate callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTarget (callback As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetTarget(Delegate ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="a8b74-127">Der Delegat, für den das Ziel abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a8b74-127">The delegate to get the target for.</span></span></param>
        <summary><span data-ttu-id="a8b74-128">Eine Hilfsmethode, die das Zielobjekt für einen Delegaten zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="a8b74-128">A helper method that returns the target object for a delegate.</span></span> <span data-ttu-id="a8b74-129">Wenn der Delegat als Proxy für einen generischen Delegaten erstellt wurde, wird anstelle des Proxys korrekt das ursprüngliche Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="a8b74-129">If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.</span></span></summary>
        <returns><span data-ttu-id="a8b74-130">Gibt ein <see cref="T:System.Object" />-Element zurück, wobei es sich um das Rückrufziel handelt.</span><span class="sxs-lookup"><span data-stu-id="a8b74-130">Returns <see cref="T:System.Object" />, which is the callback target.</span></span> <span data-ttu-id="a8b74-131">Dies kann <see langword="null" /> zurückgeben, wenn der Rückruf ein statisches Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="a8b74-131">This can return <see langword="null" /> if the callback represents a static object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-132"><paramref name="callback" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-132"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Publish">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8b74-133">Veröffentlicht den angegebenen Diensttyp, deklariert jedoch keine Instanz.</span><span class="sxs-lookup"><span data-stu-id="a8b74-133">Publishes the given service type, but does not declare an instance.</span></span> <span data-ttu-id="a8b74-134">Wenn der Dienst angefordert wird, wird der Publish-Dienstrückruf aufgerufen, um die Instanz zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-134">When the service is requested, the Publish service callback will be invoked to create the instance.</span></span> <span data-ttu-id="a8b74-135">Der Rückruf wird nur einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-135">The callback is invoked only once.</span></span> <span data-ttu-id="a8b74-136">Danach wird die zurückgegebene Instanz zwischengespeichert.</span><span class="sxs-lookup"><span data-stu-id="a8b74-136">After that, the instance it returned is cached.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public abstract void Publish (Type serviceType, System.Activities.Presentation.PublishServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class System.Type serviceType, class System.Activities.Presentation.PublishServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Publish (serviceType As Type, callback As PublishServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Publish(Type ^ serviceType, System::Activities::Presentation::PublishServiceCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.PublishServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="a8b74-137">Der Typ des zu veröffentlichenden Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-137">The type of service to publish.</span></span></param>
        <param name="callback"><span data-ttu-id="a8b74-138">Ein Rückruf, der aufgerufen wird, wenn eine Instanz des Diensts benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="a8b74-138">A callback that will be invoked when an instance of the service is needed.</span></span></param>
        <summary><span data-ttu-id="a8b74-139">Veröffentlicht den angegebenen Diensttyp, deklariert jedoch keine Instanz.</span><span class="sxs-lookup"><span data-stu-id="a8b74-139">Publishes the specified service type, but does not declare an instance.</span></span> <span data-ttu-id="a8b74-140">Wenn der Dienst angefordert wird, wird der Publish-Dienstrückruf aufgerufen, um die Instanz zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-140">When the service is requested, the Publish service callback will be invoked to create the instance.</span></span> <span data-ttu-id="a8b74-141">Der Rückruf wird nur einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-141">The callback is invoked only once.</span></span> <span data-ttu-id="a8b74-142">Danach wird die zurückgegebene Instanz zwischengespeichert.</span><span class="sxs-lookup"><span data-stu-id="a8b74-142">After that, the instance it returned is cached.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-143"><paramref name="serviceType" /> oder <paramref name="callback" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-143"><paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8b74-144"><paramref name="serviceType" /> wurde bereits veröffentlicht.</span><span class="sxs-lookup"><span data-stu-id="a8b74-144"><paramref name="serviceType" /> has already been published.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public abstract void Publish (Type serviceType, object serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class System.Type serviceType, object serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Publish (serviceType As Type, serviceInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Publish(Type ^ serviceType, System::Object ^ serviceInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="a8b74-145">Der Typ des zu veröffentlichenden Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-145">The type of service to publish.</span></span></param>
        <param name="serviceInstance"><span data-ttu-id="a8b74-146">Eine Instanz des Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-146">An instance of the service.</span></span></param>
        <summary><span data-ttu-id="a8b74-147">Veröffentlicht den angegebenen Dienst.</span><span class="sxs-lookup"><span data-stu-id="a8b74-147">Publishes the given service.</span></span> <span data-ttu-id="a8b74-148">Nach seiner Veröffentlichung bleibt die Dienstinstanz im Dienst-Manager erhalten, bis der Bearbeitungskontext verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="a8b74-148">After it is published, the service instance remains in the service manager until the editing context is disposed of.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-149"><paramref name="serviceType" /> oder <paramref name="serviceInstance" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-149"><paramref name="serviceType" /> or <paramref name="serviceInstance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8b74-150"><paramref name="serviceInstance" /> wird nicht von <paramref name="serviceType" /> abgeleitet bzw. implementiert diesen Typ nicht, oder <paramref name="serviceType" /> wurde bereits veröffentlicht.</span><span class="sxs-lookup"><span data-stu-id="a8b74-150"><paramref name="serviceInstance" /> does not derive from or implement <paramref name="serviceType" />, or <paramref name="serviceType" /> has already been published.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Publish&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Publish&lt;TServiceType&gt; (System.Activities.Presentation.PublishServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Publish&lt;TServiceType&gt;(class System.Activities.Presentation.PublishServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Publish(Of TServiceType) (callback As PublishServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Publish(System::Activities::Presentation::PublishServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.PublishServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="a8b74-151">Der Typ des zu veröffentlichenden Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-151">The type of the service to publish.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="a8b74-152">Ein Rückruf, der aufgerufen wird, wenn eine Instanz des Diensts benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="a8b74-152">A callback that will be invoked when an instance of the service is needed.</span></span></param>
        <summary><span data-ttu-id="a8b74-153">Veröffentlicht den angegebenen Diensttyp, deklariert jedoch noch keine Instanz.</span><span class="sxs-lookup"><span data-stu-id="a8b74-153">Publishes the given service type, but does not declare an instance yet.</span></span> <span data-ttu-id="a8b74-154">Wenn eine Anforderung für den Dienst gestellt wird, wird <see langword="PublishServiceCallback" /> aufgerufen, um die Instanz zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-154">When the service is requested, the <see langword="PublishServiceCallback" /> will be invoked to create the instance.</span></span> <span data-ttu-id="a8b74-155">Der Rückruf wird nur einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-155">The callback is invoked only once.</span></span> <span data-ttu-id="a8b74-156">Danach wird die zurückgegebene Instanz zwischengespeichert.</span><span class="sxs-lookup"><span data-stu-id="a8b74-156">After that, the instance it returned is cached.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8b74-157"><paramref name="callback" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-157"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Publish&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Publish&lt;TServiceType&gt; (TServiceType serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Publish&lt;TServiceType&gt;(!!TServiceType serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Publish(Of TServiceType) (serviceInstance As TServiceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Publish(TServiceType serviceInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceInstance" Type="TServiceType" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="a8b74-158">Der Typ des zu veröffentlichenden Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-158">The type of the service to publish.</span></span></typeparam>
        <param name="serviceInstance"><span data-ttu-id="a8b74-159">Eine Instanz des Diensts.</span><span class="sxs-lookup"><span data-stu-id="a8b74-159">An instance of the service.</span></span></param>
        <summary><span data-ttu-id="a8b74-160">Veröffentlicht den angegebenen Dienst.</span><span class="sxs-lookup"><span data-stu-id="a8b74-160">Publishes the given service.</span></span> <span data-ttu-id="a8b74-161">Nach seiner Veröffentlichung bleibt die Dienstinstanz im Dienst-Manager erhalten, bis der Bearbeitungskontext verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="a8b74-161">After it is published, the service instance remains in the service manager until the editing context is disposed of.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-162"><paramref name="serviceInstance" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-162"><paramref name="serviceInstance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCallback">
      <MemberSignature Language="C#" Value="protected static Delegate RemoveCallback (Delegate existing, Delegate toRemove);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Delegate RemoveCallback(class System.Delegate existing, class System.Delegate toRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RemoveCallback (existing As Delegate, toRemove As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Delegate ^ RemoveCallback(Delegate ^ existing, Delegate ^ toRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.Delegate" />
        <Parameter Name="toRemove" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="existing"><span data-ttu-id="a8b74-163">Der bestehende Delegat, aus dem der Rückruf entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8b74-163">The existing delegate to remove the callback from.</span></span></param>
        <param name="toRemove"><span data-ttu-id="a8b74-164">Der zu entfernende Rückruf.</span><span class="sxs-lookup"><span data-stu-id="a8b74-164">The callback to remove.</span></span></param>
        <summary><span data-ttu-id="a8b74-165">Eine Hilfsmethode, die einen <see langword="Delegate.Remove" />-Vorgang durchführt und Delegaten entpackt, die als Proxys für generische Rückrufe fungieren.</span><span class="sxs-lookup"><span data-stu-id="a8b74-165">A helper method that performs a <see langword="Delegate.Remove" /> operation, and unwraps delegates that are proxies to generic callbacks.</span></span> <span data-ttu-id="a8b74-166">Verwenden Sie diese Methode in Ihren <see cref="Overload:System.Activities.Presentation.ServiceManager.UnSubscribe" />-Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="a8b74-166">You should use this method in your <see cref="Overload:System.Activities.Presentation.ServiceManager.UnSubscribe" /> implementations.</span></span></summary>
        <returns><span data-ttu-id="a8b74-167">Gibt <see cref="T:System.Delegate" /> zurück, wobei es sich um einen neuen Wert handelt, der dem vorhandenen Delegaten zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="a8b74-167">Returns <see cref="T:System.Delegate" />, which is  a new value to assign to the existing delegate.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public abstract void Subscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(class System.Type serviceType, class System.Activities.Presentation.SubscribeServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Subscribe (serviceType As Type, callback As SubscribeServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Subscribe(Type ^ serviceType, System::Activities::Presentation::SubscribeServiceCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="a8b74-168">Der Typ des Diensts, der abonniert wird.</span><span class="sxs-lookup"><span data-stu-id="a8b74-168">The type of service to subscribe to.</span></span></param>
        <param name="callback"><span data-ttu-id="a8b74-169">Ein Rückruf, der benachrichtigt wird, wenn der Dienst verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="a8b74-169">A callback that will be notified when the service is available.</span></span></param>
        <summary><span data-ttu-id="a8b74-170">Ruft den bereitgestellten Rückruf auf, wenn der angeforderte Dienst veröffentlicht wurde.</span><span class="sxs-lookup"><span data-stu-id="a8b74-170">Invokes the provided callback when someone has published the requested service.</span></span> <span data-ttu-id="a8b74-171">Falls der Dienst bereits verfügbar war, ruft diese Methode den Rückruf sofort auf.</span><span class="sxs-lookup"><span data-stu-id="a8b74-171">If the service was already available, this method invokes the callback immediately.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-172"><paramref name="serviceType" /> oder <paramref name="callback" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-172"><paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribe&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Subscribe&lt;TServiceType&gt; (System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Subscribe&lt;TServiceType&gt;(class System.Activities.Presentation.SubscribeServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Subscribe(Of TServiceType) (callback As SubscribeServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Subscribe(System::Activities::Presentation::SubscribeServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="a8b74-173">Der Typ des Diensts, der abonniert wird.</span><span class="sxs-lookup"><span data-stu-id="a8b74-173">The type of the service to subscribe to.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="a8b74-174">Ein Rückruf, der benachrichtigt wird, wenn der Dienst verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="a8b74-174">A callback that will be notified when the service is available.</span></span></param>
        <summary><span data-ttu-id="a8b74-175">Ruft den bereitgestellten Rückruf auf, wenn der angeforderte Dienst veröffentlicht wurde.</span><span class="sxs-lookup"><span data-stu-id="a8b74-175">Invokes the provided callback when someone has published the requested service.</span></span> <span data-ttu-id="a8b74-176">Falls der Dienst bereits verfügbar war, ruft diese Methode den Rückruf sofort auf.</span><span class="sxs-lookup"><span data-stu-id="a8b74-176">If the service was already available, this method invokes the callback immediately.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-177"><paramref name="callback" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-177"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8b74-178">Ruft einen Enumerator ab, der zum Auflisten aller Dienste verwendet werden kann, die dieser Dienst-Manager veröffentlicht.</span><span class="sxs-lookup"><span data-stu-id="a8b74-178">Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</span></span></summary>
        <returns><span data-ttu-id="a8b74-179">Gibt das <see cref="T:System.Collections.IEnumerator" />-Element zurück, das eine Enumeration der veröffentlichten Dienste enthält.</span><span class="sxs-lookup"><span data-stu-id="a8b74-179">Returns <see cref="T:System.Collections.IEnumerator" />, which contains an enumeration of published services.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public abstract void Unsubscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe(class System.Type serviceType, class System.Activities.Presentation.SubscribeServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unsubscribe (serviceType As Type, callback As SubscribeServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unsubscribe(Type ^ serviceType, System::Activities::Presentation::SubscribeServiceCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="a8b74-180">Der Diensttyp, für den das Abonnement entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8b74-180">The type of service to remove the subscription from.</span></span></param>
        <param name="callback"><span data-ttu-id="a8b74-181">Das Rückrufobjekt, das aus dem Abonnement entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8b74-181">The callback object to remove from the subscription.</span></span></param>
        <summary><span data-ttu-id="a8b74-182">Entfernt ein Abonnement für einen Diensttyp.</span><span class="sxs-lookup"><span data-stu-id="a8b74-182">Removes a subscription for a service type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-183"><paramref name="serviceType" /> oder <paramref name="callback" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-183"><paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Unsubscribe&lt;TServiceType&gt; (System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unsubscribe&lt;TServiceType&gt;(class System.Activities.Presentation.SubscribeServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unsubscribe(Of TServiceType) (callback As SubscribeServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Unsubscribe(System::Activities::Presentation::SubscribeServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType"><span data-ttu-id="a8b74-184">Der Diensttyp, für den das Abonnement entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8b74-184">The type of the service to remove the subscription from.</span></span></typeparam>
        <param name="callback"><span data-ttu-id="a8b74-185">Das Rückrufobjekt, das aus dem Abonnement entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a8b74-185">The callback object to remove from the subscription.</span></span></param>
        <summary><span data-ttu-id="a8b74-186">Entfernt ein Abonnement für einen Diensttyp.</span><span class="sxs-lookup"><span data-stu-id="a8b74-186">Removes a subscription for a service type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8b74-187"><paramref name="callback" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8b74-187"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>