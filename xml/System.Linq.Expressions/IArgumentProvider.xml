<Type Name="IArgumentProvider" FullName="System.Linq.Expressions.IArgumentProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0681c36df26c5ee5fcd46cbf73351034dd3a307d" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83545151" /></Metadata><TypeSignature Language="C#" Value="public interface IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IArgumentProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Linq.Expressions" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="74433-101">Stellt eine interne Schnittstelle für den Zugriff auf die Argumente von mehreren Strukturknoten (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression und IndexExpression) bereit.</span><span class="sxs-lookup"><span data-stu-id="74433-101">Provides an internal interface for accessing the arguments of multiple tree nodes (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression, and IndexExpression).</span></span>  <span data-ttu-id="74433-102">Diese API ist ausschließlich für die interne Verwendung vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="74433-102">This API is for internal use only.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
      
## Remarks

<span data-ttu-id="74433-103">Sie sollten diese API nicht verwenden.</span><span class="sxs-lookup"><span data-stu-id="74433-103">You should not use this API.</span></span>  <span data-ttu-id="74433-104">Er ist nur aufgrund der assemblyumgestaltung öffentlich und nur für interne Leistungsoptimierungen vorhanden.</span><span class="sxs-lookup"><span data-stu-id="74433-104">It is public only due to assembly refactoring, and it exists only for internal performance optimizations.</span></span> <span data-ttu-id="74433-105">Sie ermöglicht zwei Optimierungen, die die Größe der Strukturen verringern:</span><span class="sxs-lookup"><span data-stu-id="74433-105">It enables two optimizations that reduce the size of the trees:</span></span>
  
1. <span data-ttu-id="74433-106">Sie ermöglicht es, dass die Knoten anstelle eines in einem enthalten sind <xref:System.Collections.Generic.IList%601> <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="74433-106">It enables the nodes to hold onto an <xref:System.Collections.Generic.IList%601> instead of a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  <span data-ttu-id="74433-107">Dies spart die Kosten für das Zuordnen der schreibgeschützten Auflistung für jeden Knoten.</span><span class="sxs-lookup"><span data-stu-id="74433-107">This saves the cost of allocating the read-only collection for each node.</span></span>
  
2. <span data-ttu-id="74433-108">Sie ermöglicht die Erstellung spezieller Unterklassen, die eine bestimmte Anzahl von Argumenten (z `Block2` `Block2` . b.,,) enthalten `Block4` .</span><span class="sxs-lookup"><span data-stu-id="74433-108">It enables specialized subclasses to be created that hold on to a specific number of arguments (for example, `Block2`, `Block2`, `Block4`).</span></span>  <span data-ttu-id="74433-109">Daher wird durch diese Knoten vermieden <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> , dass sowohl ein als auch ein Array zum Speichern Ihrer Elemente zugeordnet werden. Dadurch werden 32 Bytes pro Knoten gespeichert.</span><span class="sxs-lookup"><span data-stu-id="74433-109">Therefore, these nodes avoid allocating both a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> and an array for storing their elements, thus saving 32 bytes per node.</span></span>  <span data-ttu-id="74433-110">Diese Technik wird von verschiedenen Knoten verwendet, einschließlich <xref:System.Linq.Expressions.BlockExpression> , <xref:System.Linq.Expressions.InvocationExpression> und <xref:System.Linq.Expressions.MethodCallExpression> .</span><span class="sxs-lookup"><span data-stu-id="74433-110">This technique is used by various nodes, including <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, and <xref:System.Linq.Expressions.MethodCallExpression>.</span></span>
            
<span data-ttu-id="74433-111">Die Ausdrucks Baumstruktur Knoten machen weiterhin die ursprünglichen LINQ-Eigenschaften von <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> Objekten verfügbar.</span><span class="sxs-lookup"><span data-stu-id="74433-111">The expression tree nodes continue to expose the original LINQ properties of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objects.</span></span> <span data-ttu-id="74433-112">Dazu wird ein Feld zum Speichern des Arrays oder eines Elements, das normalerweise im Array gespeichert wäre, wieder verwendet.</span><span class="sxs-lookup"><span data-stu-id="74433-112">They do this by reusing a field for storing both the array or an element that would normally be stored in the array.</span></span>
            
<span data-ttu-id="74433-113">Für den arrayfall wird die Auflistung <xref:System.Collections.Generic.IList%601> anstelle von typisiert <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="74433-113">For the array case, the collection is typed to <xref:System.Collections.Generic.IList%601> instead of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="74433-114">Wenn der Knoten erstmalig erstellt wird, ist er ein Array.</span><span class="sxs-lookup"><span data-stu-id="74433-114">When the node is initially constructed, it is an array.</span></span>  <span data-ttu-id="74433-115">Der Compiler oder die Hilfsprogramme in dieser Bibliothek greifen über diese Schnittstelle auf die Elemente zu.</span><span class="sxs-lookup"><span data-stu-id="74433-115">The compiler or utilities in this library access the elements through this interface.</span></span> <span data-ttu-id="74433-116">Beim Zugreifen auf Array Elemente wird das Array in eine herauf gestuft <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="74433-116">Accessing array elements promotes the array to a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="74433-117">Für den Objekt Fall wird das erste Argument in einem Feld gespeichert, das in eingegeben wurde <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="74433-117">For the object case, the first argument is stored in a field typed to <xref:System.Object>.</span></span> <span data-ttu-id="74433-118">Wenn der Knoten erstmalig erstellt wird, enthält dieses Feld den <xref:System.Linq.Expressions.Expression> des ersten Arguments.</span><span class="sxs-lookup"><span data-stu-id="74433-118">When the node is initially constructed, this field holds the <xref:System.Linq.Expressions.Expression> of the first argument.</span></span>  <span data-ttu-id="74433-119">Wenn der Compiler und die Hilfsprogramme in dieser Bibliothek auf die Argumente zugreifen, wird diese Schnittstelle wieder verwendet, und der-Accessor für das erste Argument verwendet die interne `Expression.ReturnObject<T>(System.Object)` Hilfsmethode, um das Objekt zurückzugeben, das die- <xref:System.Linq.Expressions.Expression> oder-Groß-/Kleinschreibung behandelt <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="74433-119">When the compiler and utilities in this library access the arguments, they again use this interface, and the accessor for the first argument uses the internal `Expression.ReturnObject<T>(System.Object)` helper method to return the object that handles the <xref:System.Linq.Expressions.Expression> or <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> case.</span></span> <span data-ttu-id="74433-120">Wenn der Benutzer auf das-Objekt zugreift <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> , wird das Objektfeld so aktualisiert, dass es direkt auf dem-Objekt <xref:System.Collections.ObjectModel.ReadOnlyCollection%601></span><span class="sxs-lookup"><span data-stu-id="74433-120">When the user accesses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, the object field is updated to hold directly onto the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="74433-121">Es ist wichtig, dass <xref:System.Linq.Expressions.Expression> Eigenschaften konstant denselben Wert zurückgeben <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> .</span><span class="sxs-lookup"><span data-stu-id="74433-121">It is important that <xref:System.Linq.Expressions.Expression> properties consistently return the same <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="74433-122">Andernfalls wird der von den Ausdrucks Besuchern verwendete ReWriter-Struktur Durchlauf abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="74433-122">Otherwise, the rewriter tree walker used by expression visitors will break.</span></span> <span data-ttu-id="74433-123">Es handelt sich um eine Breaking Change von LINQ v1, um andere <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> vom gleichen Knoten zurückzugeben <xref:System.Linq.Expressions.Expression> .</span><span class="sxs-lookup"><span data-stu-id="74433-123">It is a breaking change from LINQ v1 to return different <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> from the same <xref:System.Linq.Expressions.Expression> node.</span></span> <span data-ttu-id="74433-124">Derzeit können sich Benutzer auf die Objekt Identität verlassen, um zu erkennen, ob sich der Knoten geändert hat.</span><span class="sxs-lookup"><span data-stu-id="74433-124">Currently, users can rely on object identity to tell if the node has changed.</span></span>  <span data-ttu-id="74433-125">Das Speichern der <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> in einem überladenen Feld reduziert die Speicherauslastung und behält die Kompatibilität für die öffentliche API bei.</span><span class="sxs-lookup"><span data-stu-id="74433-125">Storing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> in an overloaded field both reduces memory usage and maintains compatibility for the public API.</span></span>

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentCount">
      <MemberSignature Language="C#" Value="public int ArgumentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgumentCount" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgumentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentCount : int" Usage="System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74433-126">Gibt die Anzahl der Argumente für den Ausdrucksstrukturknoten zurück.</span><span class="sxs-lookup"><span data-stu-id="74433-126">Returns the number of arguments to the expression tree node.</span></span> <span data-ttu-id="74433-127">Diese API ist ausschließlich für die interne Verwendung vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="74433-127">This API is for internal use only.</span></span></summary>
        <value><span data-ttu-id="74433-128">Die Anzahl der Argumente für den Ausdrucksstrukturknoten als <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="74433-128">The number of arguments to the expression tree node as <see cref="T:System.Int32" />.</span></span></value>
        <remarks><span data-ttu-id="74433-129">Sie sollten diese API nicht verwenden.</span><span class="sxs-lookup"><span data-stu-id="74433-129">You should not use this API.</span></span> <span data-ttu-id="74433-130">Er ist nur aufgrund der assemblyumgestaltung öffentlich und wird intern zur Leistungsoptimierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="74433-130">It is public only due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgument">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetArgument (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetArgument(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgument (index As Integer) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetArgument(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetArgument : int -&gt; System.Linq.Expressions.Expression" Usage="iArgumentProvider.GetArgument index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="74433-131">Der Index des Arguments.</span><span class="sxs-lookup"><span data-stu-id="74433-131">The index of the argument.</span></span></param>
        <summary><span data-ttu-id="74433-132">Gibt das Argument beim <paramref name="index" /> zurück, das ausgelöst wird, wenn der <paramref name="index" /> außerhalb des gültigen Bereichs liegt.</span><span class="sxs-lookup"><span data-stu-id="74433-132">Returns the argument at <paramref name="index" />, throwing if <paramref name="index" /> is out of bounds.</span></span> <span data-ttu-id="74433-133">Diese API ist ausschließlich für die interne Verwendung vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="74433-133">This API is for internal use only.</span></span></summary>
        <returns><span data-ttu-id="74433-134">Das Argument beim Index.</span><span class="sxs-lookup"><span data-stu-id="74433-134">The argument at index.</span></span></returns>
        <remarks><span data-ttu-id="74433-135">Sie sollten diese API nicht verwenden.</span><span class="sxs-lookup"><span data-stu-id="74433-135">You should not use this API.</span></span>  <span data-ttu-id="74433-136">Es ist nur aufgrund der Assemblyumgestaltung öffentlich und wird intern zur Leistungsoptimierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="74433-136">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
