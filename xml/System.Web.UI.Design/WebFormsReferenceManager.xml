<Type Name="WebFormsReferenceManager" FullName="System.Web.UI.Design.WebFormsReferenceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d2657867ff7c3dde33aed3b61d87d880cdd00648" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39998597" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebFormsReferenceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebFormsReferenceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebFormsReferenceManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebFormsReferenceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFormsReferenceManager abstract" />
  <TypeSignature Language="F#" Value="type WebFormsReferenceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Basisklasse für den Zugriff auf Typen, Direktiven und Steuerelemente im aktuellen Webprojektdokument bereit. Die Klasse muss geerbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.WebFormsReferenceManager> Basisklasse wird implementiert von Designer-Hosts, den Zugriff auf Typen, Direktiven und Steuerelemente in einem Projekt definiert. Eine Steuerelement-Designer-Klasse können die <xref:System.Web.UI.Design.WebFormsReferenceManager> auf die Definitionen im aktuellen Dokument zugreifen und das aktuelle Dokument ein neues Tagpräfix hinzu.  
  
 Sie Zugriff auf die <xref:System.Web.UI.Design.WebFormsReferenceManager> Dienste, die vom Designerhost über die <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> Eigenschaft eine <xref:System.Web.UI.Design.WebFormsRootDesigner> Implementierung. Die <xref:System.Web.UI.Design.WebFormsRootDesigner> Implementierung kann auf zwei Arten zugegriffen werden:  
  
-   Abgeleitete Klassen von <xref:System.Web.UI.Design.ControlDesigner> können die <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> Eigenschaft, die Zugriff auf eine <xref:System.Web.UI.Design.WebFormsRootDesigner> vom Designerhost bereitgestellte. Die <xref:System.Web.UI.Design.WebFormsReferenceManager> Implementierung angegeben wird, über die <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> Eigenschaft <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> Eigenschaft.  
  
-   Andere Aktivitätsdesigner-Basisklassen, können Zugriff auf die <xref:System.Web.UI.Design.WebFormsRootDesigner> zunächst-Implementierung der <xref:System.ComponentModel.Design.IDesignerHost> services Implementierung über der Designerkomponente <xref:System.ComponentModel.Component.Site%2A>, und dem anschließenden Aufrufen der <xref:System.ComponentModel.Design.IDesignerHost.GetDesigner%2A> Methode, die mit dem Designerhost <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A>Eigenschaft.  
  
    > [!NOTE]
    >  <xref:System.Web.UI.Design.WebFormsReferenceManager> ersetzt die veraltete Schnittstelle <xref:System.Web.UI.Design.IWebFormReferenceManager>. Ältere Designerhosts unterstützen nur die <xref:System.Web.UI.Design.IWebFormReferenceManager> schnittstellenimplementierung. Überprüfen Sie, ob die <xref:System.Web.UI.Design.WebFormsRootDesigner> und <xref:System.Web.UI.Design.WebFormsReferenceManager> vom Designerhost bereitgestellte Implementierungen sind nicht `null` um sicherzustellen, dass den Designerhost implementiert die <xref:System.Web.UI.Design.WebFormsRootDesigner> und <xref:System.Web.UI.Design.WebFormsReferenceManager> Klassen.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
    <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebFormsReferenceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebFormsReferenceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.UI.Design.WebFormsReferenceManager> Klasse ist abstrakt, können Sie keine Instanz von erstellen <xref:System.Web.UI.Design.WebFormsReferenceManager> direkt mithilfe des Konstruktors.  
  
 Bei der Ableitung von der <xref:System.Web.UI.Design.WebFormsReferenceManager> Klasse, überschreiben Sie den Konstruktor, um die angepasste Initialisierung von Aktionen für die Implementierung des Verweis-Manager implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisterDirectives">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection GetRegisterDirectives ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRegisterDirectives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRegisterDirectives () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ GetRegisterDirectives();" />
      <MemberSignature Language="F#" Value="abstract member GetRegisterDirectives : unit -&gt; System.Collections.ICollection" Usage="webFormsReferenceManager.GetRegisterDirectives " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Registrierungsdirektive für das aktuelle Projektdokument ab.</summary>
        <returns>Eine Auflistung von Zeichenfolgen, die die im aktuellen Dokument definierten Registrierungsdirektiven darstellen.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string GetTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTagPrefix (objectType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetTagPrefix(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="abstract member GetTagPrefix : Type -&gt; string" Usage="webFormsReferenceManager.GetTagPrefix objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">Der Typ des Objekts.</param>
        <summary>Ruft das Tagpräfix für den angegebenen Objekttyp ab.</summary>
        <returns>Das Tagpräfix für den angegebenen Objekttyp, sofern gefunden; andernfalls <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public abstract Type GetType (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetType (tagPrefix As String, tagName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetType(System::String ^ tagPrefix, System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="webFormsReferenceManager.GetType (tagPrefix, tagName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">Das Tagpräfix des abzurufenden Typs.</param>
        <param name="tagName">Der Tagname des abzurufenden Typs.</param>
        <summary>Ruft den Objekttyp mit dem angegebenen Tagpräfix und Tagnamen ab.</summary>
        <returns>Der <see cref="T:System.Type" /> des Objekts mit dem angegebenen Tagpräfix und -Namen, sofern gefunden, andernfalls <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetUserControlPath">
      <MemberSignature Language="C#" Value="public abstract string GetUserControlPath (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserControlPath(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUserControlPath (tagPrefix As String, tagName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUserControlPath(System::String ^ tagPrefix, System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetUserControlPath : string * string -&gt; string" Usage="webFormsReferenceManager.GetUserControlPath (tagPrefix, tagName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">Das Tagpräfix des abzurufenden Benutzersteuerelements.</param>
        <param name="tagName">Der Tagname des abzurufenden Benutzersteuerelements.</param>
        <summary>Ruft den relativen URL-Pfad für das Benutzersteuerelement mit dem angegebenen Tagpräfix und Tagnamen ab.</summary>
        <returns>Eine Zeichenfolge zur Darstellung des relativen URL-Pfads für das angegebene Benutzersteuerelement, sofern dieses gefunden wurde, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath%2A> verwendet den Tagpräfix und den Namen, die Benutzer Control-Register-Direktive im aktuellen Dokument gesucht werden soll, und gibt die `src` Attributwert in die Register-Direktive definiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UserControl" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string RegisterTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegisterTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RegisterTagPrefix (objectType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ RegisterTagPrefix(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="abstract member RegisterTagPrefix : Type -&gt; string" Usage="webFormsReferenceManager.RegisterTagPrefix objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">Der Typ, dem im aktuellen Dokument ein Tagpräfix hinzugefügt werden soll.</param>
        <summary>Fügt ein Tagpräfix für den angegebenen Typ hinzu.</summary>
        <returns>Die Tagpräfixzeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Tagpräfix, das bereits vorhanden ist, wird eine neue Registrierungsdirektive nicht hinzugefügt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>