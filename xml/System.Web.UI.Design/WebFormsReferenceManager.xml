<Type Name="WebFormsReferenceManager" FullName="System.Web.UI.Design.WebFormsReferenceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e4ee5bec347fc5031f52f47e5a633452bd6a2a0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70621302" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebFormsReferenceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebFormsReferenceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebFormsReferenceManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebFormsReferenceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFormsReferenceManager abstract" />
  <TypeSignature Language="F#" Value="type WebFormsReferenceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Basisklasse für den Zugriff auf Typen, Direktiven und Steuerelemente im aktuellen Webprojektdokument bereit. Die Klasse muss geerbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.WebFormsReferenceManager> -Basisklasse wird von Designer Hosts implementiert, um den Zugriff auf Typen, Direktiven und Benutzer Steuerelemente zu ermöglichen, die in einem Webprojekt Dokument definiert sind. Eine Steuerelement-Designer-Klasse <xref:System.Web.UI.Design.WebFormsReferenceManager> kann den verwenden, um auf die Definitionen im aktuellen Dokument zuzugreifen und dem aktuellen Dokument ein neues Tagpräfix hinzuzufügen.  
  
 Der Zugriff auf <xref:System.Web.UI.Design.WebFormsReferenceManager> die Dienste, die vom Designer Host bereit <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> gestellt werden, <xref:System.Web.UI.Design.WebFormsRootDesigner> erfolgt über die-Eigenschaft einer-Implementierung. Der <xref:System.Web.UI.Design.WebFormsRootDesigner> Zugriff auf die-Implementierung ist auf zwei Arten möglich:  
  
-   Klassen, die <xref:System.Web.UI.Design.ControlDesigner> von abgeleitet werden <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> , können die- <xref:System.Web.UI.Design.WebFormsRootDesigner> Eigenschaft verwenden, um auf eine vom Designer Host bereitgestellte Implementierung zuzugreifen. Die <xref:System.Web.UI.Design.WebFormsReferenceManager> -Implementierung wird durch die <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> -Eigenschaft <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> der-Eigenschaft bereitgestellt.  
  
-   Andere Designer Klassen können auf die <xref:System.Web.UI.Design.WebFormsRootDesigner> -Implementierung zugreifen, indem <xref:System.ComponentModel.Design.IDesignerHost> Sie zuerst die Dienst Implementierung über die <xref:System.ComponentModel.Component.Site%2A>der-Designer Komponente abrufen <xref:System.ComponentModel.Design.IDesignerHost.GetDesigner%2A> und dann die-Methode mithilfe des Designer Hosts  <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A> aufrufen. -Eigenschaft.  
  
    > [!NOTE]
    >  <xref:System.Web.UI.Design.WebFormsReferenceManager>ersetzt die veraltete Schnitt <xref:System.Web.UI.Design.IWebFormReferenceManager>Stelle. Ältere Designer Hosts unterstützen möglicherweise <xref:System.Web.UI.Design.IWebFormReferenceManager> nur die Implementierung der-Schnittstelle. Stellen Sie sicher <xref:System.Web.UI.Design.WebFormsRootDesigner> , <xref:System.Web.UI.Design.WebFormsReferenceManager> dass die vom Designer Host bereitgestellten- `null` und-Implementierungen nicht sicherstellen, <xref:System.Web.UI.Design.WebFormsRootDesigner> dass <xref:System.Web.UI.Design.WebFormsReferenceManager> der Designer Host die-und-Klassen implementiert.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
    <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebFormsReferenceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebFormsReferenceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.UI.Design.WebFormsReferenceManager> -Klasse abstrakt ist, können Sie eine Instanz von <xref:System.Web.UI.Design.WebFormsReferenceManager> nicht direkt mit dem-Konstruktor erstellen.  
  
 Überschreiben Sie beim <xref:System.Web.UI.Design.WebFormsReferenceManager> ableiten von der-Klasse den-Konstruktor, um benutzerdefinierte Initialisierungs Aktionen für die Implementierung des Verweis-Managers zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisterDirectives">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection GetRegisterDirectives ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRegisterDirectives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRegisterDirectives () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ GetRegisterDirectives();" />
      <MemberSignature Language="F#" Value="abstract member GetRegisterDirectives : unit -&gt; System.Collections.ICollection" Usage="webFormsReferenceManager.GetRegisterDirectives " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Registrierungsdirektive für das aktuelle Projektdokument ab.</summary>
        <returns>Eine Auflistung von Zeichenfolgen, die die im aktuellen Dokument definierten Registrierungsdirektiven darstellen.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string GetTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTagPrefix (objectType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetTagPrefix(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="abstract member GetTagPrefix : Type -&gt; string" Usage="webFormsReferenceManager.GetTagPrefix objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">Der Typ des Objekts.</param>
        <summary>Ruft das Tagpräfix für den angegebenen Objekttyp ab.</summary>
        <returns>Das Tagpräfix für den angegebenen Objekttyp, sofern gefunden; andernfalls <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public abstract Type GetType (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetType (tagPrefix As String, tagName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetType(System::String ^ tagPrefix, System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="webFormsReferenceManager.GetType (tagPrefix, tagName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">Das Tagpräfix des abzurufenden Typs.</param>
        <param name="tagName">Der Tagname des abzurufenden Typs.</param>
        <summary>Ruft den Objekttyp mit dem angegebenen Tagpräfix und Tagnamen ab.</summary>
        <returns>Der <see cref="T:System.Type" /> des Objekts mit dem angegebenen Tagpräfix und -Namen, sofern gefunden, andernfalls <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetUserControlPath">
      <MemberSignature Language="C#" Value="public abstract string GetUserControlPath (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserControlPath(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUserControlPath (tagPrefix As String, tagName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUserControlPath(System::String ^ tagPrefix, System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetUserControlPath : string * string -&gt; string" Usage="webFormsReferenceManager.GetUserControlPath (tagPrefix, tagName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">Das Tagpräfix des abzurufenden Benutzersteuerelements.</param>
        <param name="tagName">Der Tagname des abzurufenden Benutzersteuerelements.</param>
        <summary>Ruft den relativen URL-Pfad für das Benutzersteuerelement mit dem angegebenen Tagpräfix und Tagnamen ab.</summary>
        <returns>Eine Zeichenfolge zur Darstellung des relativen URL-Pfads für das angegebene Benutzersteuerelement, sofern dieses gefunden wurde, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath%2A>verwendet das Tagpräfix und den Namen, um die Benutzer Steuerelement-Registrierungs Direktive im aktuellen Dokument `src` zu suchen, und gibt den in der Register Direktive definierten Attribut Wert zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UserControl" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string RegisterTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegisterTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RegisterTagPrefix (objectType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ RegisterTagPrefix(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="abstract member RegisterTagPrefix : Type -&gt; string" Usage="webFormsReferenceManager.RegisterTagPrefix objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">Der Typ, dem im aktuellen Dokument ein Tagpräfix hinzugefügt werden soll.</param>
        <summary>Fügt ein Tagpräfix für den angegebenen Typ hinzu.</summary>
        <returns>Die Tagpräfixzeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Tagpräfix bereits vorhanden ist, wird keine neue Register Direktive hinzugefügt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>
