<Type Name="XmlDataFileEditor" FullName="System.Web.UI.Design.XmlDataFileEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2bf995aea0776fc4e9c08630d2fbebe44e7fc072" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69043331" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XmlDataFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataFileEditor : System::Web::UI::Design::UrlEditor" />
  <TypeSignature Language="F#" Value="type XmlDataFileEditor = class&#xA;    inherit UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Entwurfszeit-Benutzeroberfläche für das Auswählen einer XML-Datendatei bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.Design.XmlDataFileEditor> -Objekt wird zur Entwurfszeit verwendet, um eine URL für eine XML-Datendatei (. Xml) auszuwählen und zu bearbeiten, und dann die URL einer Steuerelement Eigenschaft zuzuweisen. Beispielsweise verwendet das <xref:System.Web.UI.WebControls.XmlDataSource> -Steuerelement <xref:System.Web.UI.Design.XmlDataFileEditor> zur Entwurfszeit die-Klasse, um den Wert <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> der-Eigenschaft festzulegen.  
  
 Verwenden Sie <xref:System.ComponentModel.EditorAttribute> das-Attribut, <xref:System.Web.UI.Design.XmlDataFileEditor> um die einer Eigenschaft zuzuordnen. Wenn die zugehörige Eigenschaft auf der Entwurfs Oberfläche bearbeitet wird, ruft der Designer Host <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> die-Methode auf. Die <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> -Methode verwendet <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> die-Methode, die wiederum eine Benutzeroberfläche zum Auswählen der URL anzeigt, und gibt dann die URL zurück, die vom Benutzer ausgewählt wird. Die <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A> -Methode gibt den Anzeige Stil der Benutzeroberfläche an.  
  
 Leiten <xref:System.Web.UI.Design.XmlDataFileEditor> Sie eine Klasse von ab, um einen benutzerdefinierten Editor für eine XML-Dateneigenschaft zu definieren. Beispielsweise kann <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> eine abgeleitete Klasse die-Methode überschreiben und dann die <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> -Methode mit einem benutzerdefinierten <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> -oder <xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A> -Wert abrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Instanz der <xref:System.Web.UI.Design.XmlDataFileEditor> -Klasse mit einer Eigenschaft verknüpft wird, die in einem benutzerdefinierten Steuerelement enthalten ist. Wenn die Steuerelement Eigenschaft auf der Entwurfs Oberfläche bearbeitet wird, <xref:System.Web.UI.Design.XmlDataFileEditor> stellt die-Klasse die Benutzeroberfläche bereit, um einen XML-Dateinamen für den Eigenschafts Wert auszuwählen und zu bearbeiten.  
  
 [!code-csharp[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/cs/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/vb/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDataFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.XmlDataFileEditor" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string" Usage="System.Web.UI.Design.XmlDataFileEditor.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die für das Auswahldialogfeld anzuzeigende Beschriftung ab.</summary>
        <value>Der für das Auswahldialogfeld anzuzeigende Beschriftungstext.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A> -Eigenschaft wird von der <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> -Methode verwendet, <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> wenn die-Methode aufgerufen wird, die dem Benutzer zur Entwurfszeit das URL-Auswahl Dialogfeld anzeigt.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string" Usage="System.Web.UI.Design.XmlDataFileEditor.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL-Filteroptionen für den Editor ab, die zum Filtern der Elemente im URL-Auswahldialogfeld verwendet werden.</summary>
        <value>Eine Zeichenfolge, die mindestens eine URL-Filteroption für das Dialogfeld darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> -Eigenschaft wird von der <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> -Methode verwendet, <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> wenn die-Methode aufgerufen wird, die dem Benutzer zur Entwurfszeit das URL-Auswahl Dialogfeld anzeigt.  
  
 Der <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> Standardwert der Eigenschaft gibt zwei URL-Filter für das Dialogfeld an: einen für XML-Datendateien (*. Xml) und einen\*weiteren\*für alle Dateien (.).  
  
 Eine Filter Zeichenfolge enthält eine oder mehrere Filteroptionen. Jede Filteroption enthält eine Beschreibung des Filters, gefolgt vom senkrechten Strich (&#124;) und dem Filter Muster. Die Zeichen folgen für verschiedene Filteroptionen werden durch den senkrechten Strich getrennt.  
  
 Im folgenden finden Sie ein Beispiel für eine Filter Zeichenfolge, die zwei Filteroptionen enthält:  
  
 "`XML Files (*.xml)|*.xml|All Files (*.*)|*.*`".  
  
 Sie können mehrere Filter Muster in einer Filteroption angeben, indem Sie die Filter Muster durch Semikolons trennen. Im folgenden finden Sie ein Beispiel für eine Filter Zeichenfolge, in der die erste Filteroption zwei Filter Muster angibt:  
  
 "`Custom XML Files (*.xd1; *.xd2)|*.xd1;*.xd2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>
