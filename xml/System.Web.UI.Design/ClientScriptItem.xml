<Type Name="ClientScriptItem" FullName="System.Web.UI.Design.ClientScriptItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d77ce97f07b5b60d6c56df547aed5b293f774843" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ClientScriptItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptItem sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Clientskriptelement in einem Web Form oder einem Benutzersteuerelement zur Entwurfszeit dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ClientScriptItem> -Klasse stellt eine `script` -Element, das zur Entwurfszeit in einem Webdokument enthalten ist. Eine benutzerdefiniertes Steuerelement-Designer-Implementierung können Sie eine <xref:System.Web.UI.Design.ClientScriptItem> Objekt um ein Web Form oder das Benutzersteuerelement Client Skriptelemente hinzuzufügen.  
  
 Verwenden Sie zur Entwurfszeit die <xref:System.Web.UI.Design.WebFormsRootDesigner> Klasse festlegen oder Überprüfen Sie Client-Script-Elemente, die in einem Dokument, z. B. ein Web Form, ein Webserversteuerelement, einer Inhaltsseite oder einer Masterseite auf der Entwurfsoberfläche enthalten sind. Abrufen der Auflistung von Client-Script-Elemente, die innerhalb des Web-Dokuments, mithilfe enthalten sind der <xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A> Methode. Das Web-Dokument mithilfe einer Client-Script-Element hinzufügen die <xref:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument%2A> Methode.  
  
 In der Regel eine `script` Element skriptanweisungen enthält, oder es gibt einen externen Speicherort für skriptanweisungen. Die `script` Element können optional die Sprache der skriptanweisungen definiert werden. Verwenden der <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> Konstruktor initialisiert die Eigenschaften für ein neues Script-Objekt. Verwenden der <xref:System.Web.UI.Design.ClientScriptItem> Eigenschaften untersucht die `script` -Objekt Attribute und Inhalt. Die <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Eigenschaft stellt die `language` Attribut von der `script` Element. Die <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Eigenschaft stellt die `src` Attribut. Die <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> Eigenschaft darstellt, die skriptanweisungen ausgeführt werden, auf dem Client, die in enthaltenen der `script` Element.  
  
 Verwenden der <xref:System.Web.UI.Design.ClientScriptItem> Klasse, um Skripts zu verwalten, die zur Entwurfszeit ausgeführt werden sollen.  
  
 Verwenden Sie zum Verwalten von Client-Script-Elemente zur Laufzeit die <xref:System.Web.UI.ClientScriptManager> Klasse. Weitere Informationen zur Verwendung von Clientskripts zur Laufzeit finden Sie unter [Clientskripts in ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ClientScriptItem> -Klasse stellt `script` Elemente zur Entwurfszeit, die letztendlich analysiert und im Clientbrowser ausgeführt. Da die `script` Elemente, die generiert werden, für die <xref:System.Web.UI.Design.ClientScriptItem> Objekte auf dem Server nicht ausgeführt werden, die Elemente werden keine der `runat="server"` Attribut.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ClientScriptItemCollection" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientScriptItem (string text, string source, string language, string type, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string source, string language, string type, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, source As String, language As String, type As String, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientScriptItem(System::String ^ text, System::String ^ source, System::String ^ language, System::String ^ type, System::String ^ id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der Inhalt des <see langword="script" />-Elements. Eine Zeichenfolge von Skriptanweisungen, die auf dem Client ausgeführt werden.</param>
        <param name="source">Der Wert des <see langword="src" />-Attributs für das <see langword="script" />-Element, der den Speicherort für eine externe Quelle für den Inhalt des Clientskripts angibt.</param>
        <param name="language">Der Wert des <see langword="language" />-Attributs für das <see langword="script" />-Element, der die Sprache der Skriptanweisungen angibt.</param>
        <param name="type">Der type-Attributwert für das <see langword="script" />-Element, mit dem der MIME-Typ für das zugeordnete Skriptmodul angegeben wird.</param>
        <param name="id">Die ID für das <see langword="script" />-Element. Dieses Argument ist für den Entwurfshost (z. B. [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]) erforderlich.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.ClientScriptItem" />-Klasse unter Verwendung der angegebenen Parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Initialisieren Sie die Anweisungen für die <xref:System.Web.UI.Design.ClientScriptItem> Objekt, indem Sie entweder die `text` oder `source` Parameter (nicht beide). Verwendung `text` initialisieren Sie das Skript mit einer Eingabezeichenfolge mit den Anweisungen. Verwenden Sie alternativ `source` initialisiert werden, ein Skript mit einem Pfad, die skriptanweisungen enthält.  
  
 Geben Sie eine der Eingabeparameter als `null` oder eine leere Zeichenfolge (""); die entsprechende Eigenschaft festgelegt ist, verwenden den Eingabewert, und die `script` Element ohne diese Eigenschaft generiert wird. Mithilfe von `null` oder eine leere Zeichenfolge ("") führt zu folgenden Ergebnissen:  
  
-   Für `text`, den entsprechenden `script` Element keinen skriptanweisungen enthält.  
  
-   Für `source`, `src` -Attribut nicht festgelegt ist, dem `script` Element.  
  
-   Für `language`, `language` -Attribut nicht festgelegt ist, dem `script` Element.  
  
     Wenn Sie ein Clientskriptblock die Skriptsprache nicht angegeben ist, bestimmt der Clientbrowser die Sprache an.  
  
-   Für `type`, die `type` in das Script-Element ist kein Attribut festgelegt.  
  
     Wenn Sie ein Clientskriptblock kein Skripttyp angegeben ist, bestimmt der Clientbrowser den Typ an.  
  
-   Für `id`, Entwurfshost (z. B. [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]) löst eine <xref:System.ArgumentNullException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> ist NULL (vom Entwurfshost ausgelöst).</exception>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des <see langword="ID" />-Attributs für das Clientskriptelement ab.</summary>
        <value>Der <see langword="ID" />-Wert des <see langword="script" />-Elements.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des <see langword="language" />-Attributs für das Clientskriptelement ab.</summary>
        <value>Der für das <see langword="language" />-Attribut im <see langword="script" />-Element angegebene Sprachname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Eigenschaft darstellt, die Sprache, in der die skriptanweisungen geschrieben werden. Wenn die <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Eigenschaft ist `null` oder eine leere Zeichenfolge (""), wird die `language` -Attribut nicht festgelegt ist, der `script` Element. Wenn Sie ein Clientskriptblock die Skriptsprache nicht angegeben ist, bestimmt der Clientbrowser die Sprache an.  
  
 Die <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> Eigenschaft wird initialisiert, indem die <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> Konstruktor.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des <see langword="src" />-Attributs für das Clientskriptelement ab.</summary>
        <value>Der für das <see langword="src" />-Attribut im <see langword="script" />-Element angegebene Pfad zur Quelldatei.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Eigenschaft gibt den Speicherort für eine externe Quelle für den Inhalt des Clientskripts. In der Regel die skriptanweisungen für eine `script` Element angegeben werden, entweder die <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> oder <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Eigenschaft.  
  
 Wenn die <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Eigenschaft ist `null` oder eine leere Zeichenfolge (""), wird die `src` -Attribut nicht festgelegt ist, der `script` Element.  
  
 Die <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Eigenschaft wird initialisiert, indem die <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die im Clientskriptelement enthaltenen Skriptanweisungen ab.</summary>
        <value>Die im <see langword="script" />-Element enthaltenen Skriptanweisungen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> Eigenschaft darstellt, die Anweisungen, die in enthaltenen der `script` Element. In der Regel die skriptanweisungen für eine `script` Element angegeben werden, entweder die <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> oder <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Eigenschaft.  
  
 Wenn die <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> Eigenschaft ist `null` oder eine leere Zeichenfolge (""), wird die `script` Element keine skriptanweisungen enthält.  
  
 Die <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> Eigenschaft wird initialisiert, indem die <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> Konstruktor.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des <see langword="type" />-Attributs für das Clientskriptelement ab.</summary>
        <value>Der Name des MIME-Typs, der dem <see langword="script" />-Element zugeordnet ist.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
  </Members>
</Type>