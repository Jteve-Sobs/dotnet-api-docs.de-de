<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef439d6328ba7f86152448a7ffa625b71451fbf9" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55375046" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Entwurfszeit-Editorblatt für einen benutzerdefinierten Ausdruck dar. Die Klasse muss geerbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein benutzerdefinierter Ausdrucks-Editorblatt kann einen Entwickler, die Eigenschaften für einen benutzerdefinierten Ausdruck zur Entwurfszeit festlegen. Steuerelementwerte-Eigenschaft können mithilfe von Zeichenfolgen mit Ausdrücken festgelegt werden. die Ausdruckszeichenfolgen werden zur Laufzeit durch einen Ausdrucks-Generator und zur Entwurfszeit von einem Ausdrucks-Editor ausgewertet.  
  
 Beim Durchsuchen der <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> Eigenschaft für ein Steuerelement im Eigenschaftenraster zur Entwurfszeit der visuelle Designer zeigt ein Dialogfeld zum Festlegen von Ausdrücken, die den Wert für eine Steuerelementeigenschaft bereitstellen. Sie können den Ausdruckstyp basierend auf einer Liste von Ausdruckspräfixen auswählen. Wenn Sie ein Ausdrucks-Präfix aus der Liste auswählen, verwendet der visuelle Designer zugeordneten <xref:System.Web.UI.Design.ExpressionEditor> und <xref:System.Web.UI.Design.ExpressionEditorSheet> Objekte ausgewertet und konvertiert die Zeichenfolge des Ausdrucks anhand der Syntax für diesen Typ des Ausdrucks. Der visuelle Designer werden Eigenschaften des Ausdrucks-Editor-Tabelle für eine oder mehrere Zeichenfolgen, die in die benutzerdefinierte Ausdruckszeichenfolge kombinieren.  
  
 In der Regel um einen neuen Ausdruckstyp zur Entwurfszeit angeben, Sie definieren eine eindeutige Ausdruckspräfix und Bereitstellen von benutzerdefinierten <xref:System.Web.Compilation.ExpressionBuilder> und <xref:System.Web.UI.Design.ExpressionEditor> Implementierungen. Optional können Sie angeben, ein benutzerdefiniertes <xref:System.Web.UI.Design.ExpressionEditorSheet> -Implementierung, die die Eigenschaften, die verwendet werden definiert, um den Ausdruck zu erstellen. Um eine Ausdrucks-Generator und einen Ausdrucks-Editor ein Ausdrucks-Präfix zuzuordnen, gelten die <xref:System.Web.Compilation.ExpressionEditorAttribute> Attribut und ein <xref:System.Web.Compilation.ExpressionPrefixAttribute> dem benutzerdefinierten Attribut <xref:System.Web.Configuration.ExpressionBuilder> Klasse, und klicken Sie dann das Ausdruckspräfix für ein Ausdrucks-Generator konfigurieren die `expressionBuilders` Element in der Webkonfigurationsdatei.  
  
 Die standardmäßige Implementierung der <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methodenrückgabe eine einfachen Editor-Tabelle, die eine einzelne Eingabe Zeichenfolge verwendet, um den Ausdruck zu bilden. Benutzerdefinierter Ausdrucks-Editoren, die abgeleitet sind die <xref:System.Web.UI.Design.ExpressionEditor> können außer Kraft setzen der <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methode, um eine benutzerdefinierte Implementierung der Tabelle zurückzugeben. Ein benutzerdefiniertes Editorblatt enthält in der Regel mehrere Eigenschaften, die verwendet werden, um die Zeichenfolge des Ausdrucks zu erstellen. Die <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Methode gibt die resultierende Ausdruckszeichenfolge basierend auf der aktuellen Eigenschaften des Ausdrucks zurück.  
  
 Z. B. die <xref:System.Web.UI.Design.ResourceExpressionEditor> Klasse leitet sich von der <xref:System.Web.UI.Design.ExpressionEditor> -Klasse und stellt eine Implementierung für das Auswerten und Zuordnen von einen Ressourcenverweis für die Zeichenfolge mit einer Eigenschaft des Steuerelements zur Entwurfszeit bereit. Die <xref:System.Web.Compilation.ResourceExpressionBuilder> Klasse bezieht sich auf das Ausdruckspräfix `Resources` und <xref:System.Web.UI.Design.ResourceExpressionEditor> Implementierung. Die <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Methode gibt eine <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, das definiert, dass der einzelnen Eigenschaften, die einen Ressourcenausdruck für den Verweis bilden.  
  
 Beim Erben von der <xref:System.Web.UI.Design.ExpressionEditorSheet> -Klasse, müssen Sie die folgenden Member überschreiben:  
  
-   Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methode, um eine benutzerdefinierte Implementierung der Tabelle zurückzugeben.  
  
-   Die <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktor, um die angepasste Initialisierung von Aktionen für die Implementierung der Ausdrucks-Editorblattes zu implementieren.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Ein benutzerdefinierter Ausdrucks-Editorblatt aus leiten die <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> -Klasse, wenn Sie einen neuen Ausdruckstyp für Werte von Steuerelementeigenschaften definieren und die Ausdruckszeichenfolge erstellt werden soll auf der Grundlage von mehreren Eigenschaftswerten im Ausdrucks. Die Implementierung einer abgeleiteten Klasse sollte Folgendes enthalten: 
– Eine öffentliche Eigenschaft für jeden eindeutigen Wert in der Ausdruckszeichenfolge, die zur Entwurfszeit festgelegt werden kann.  
  
– Eine Implementierung der <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> Methode, die die benutzerdefinierte Ausdruckszeichenfolge aus den Eigenschaftswerten-Editorblatt bildet.  
  
-Optionales eine Konstruktorimplementierung, die die Anfangswerte der Editor die Eigenschaften des Eigenschaftenblatts legt diese fest.  
  
Die zugeordneten benutzerdefinierten Ausdrucks-Editor-Klasse erstellt eine Instanz der abgeleiteten Editor-Tabelle in der <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> -Methode initialisiert diese Instanz mit aktuellen für die Steuerelementeigenschaft festgelegte Ausdruckszeichenfolge, und gibt die Instanz zum visuellen Designer zurück. Der visuelle Designer können Sie den Ausdruck Stylesheet-Eigenschaften festlegen, und ruft dann die <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> Methode, um die Ausdruckszeichenfolge aus den Eigenschaftswerten des Eingabeausdrucks Tabelle bilden.</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.UI.Design.ExpressionEditorSheet> Klasse ist abstrakt, können Sie keine Instanz der Erstellen einer <xref:System.Web.UI.Design.ExpressionEditorSheet> direkt mit der <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktor.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Bei der Ableitung von der <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> Klasse außer Kraft, indem die <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> Konstruktor, um die angepasste Initialisierung von Aktionen für die Implementierung der Ausdrucks-Editorblattes zu implementieren.  
  
Beispielsweise kann eine benutzerdefinierten Ausdrucks-Editor-Sheet-Klasse, die zusätzliche Ausdruckseigenschaften implementiert die Standardwerte für die Eigenschaften des Ausdrucks im Definieren der <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> Konstruktor. Eine Klasse von benutzerdefinierten Ausdrucks-Editorblattes kann zusätzliche Öffentliche Konstruktorüberladungen definieren, die Werte der Eingabeparameter zu verwenden, um die Anfangswerte für die Eigenschaften des Ausdrucks festgelegt.</para></block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse die Ausdruckszeichenfolge zurück, die durch die Eigenschaftswerte des Ausdrucks-Editorblattes gebildet wird.</summary>
        <returns>Die benutzerdefinierte Ausdruckszeichenfolge für die aktuellen Eigenschaftswerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein benutzerdefinierter Ausdrucks-Editorblatt enthält, Design-Time-Einstellungen für mehrere Expression-Eigenschaften, die kombiniert werden, um eine Ausdruckszeichenfolge zu bilden. Steuerelementwerte-Eigenschaft können mithilfe von Zeichenfolgen mit Ausdrücken festgelegt werden. die Ausdruckszeichenfolgen werden zur Laufzeit vom Ausdrucks-Generator ausgewertet.  
  
 Die <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Methodenrückgabe eine Ausdruckszeichenfolge, die erstellt wurde, aus der aktuellen Eigenschaften des Ausdrucks. Der visuelle Designer können Sie den Ausdruck Stylesheet-Eigenschaften festlegen, und ruft dann die <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Methode, um die Ausdruckszeichenfolge abzurufen, und legen Sie den Wert der Steuerelementeigenschaft.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ein benutzerdefinierter Ausdrucks-Editorblatt aus leiten die <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> -Klasse, wenn Sie einen neuen Ausdruckstyp für Werte von Steuerelementeigenschaften definieren und die Ausdruckszeichenfolge erstellt werden soll auf der Grundlage von mehreren Eigenschaftswerten im Ausdrucks. Die Implementierung einer abgeleiteten Klasse sollte Folgendes enthalten: 
– Eine öffentliche Eigenschaft für jeden eindeutigen Wert in der Ausdruckszeichenfolge, die zur Entwurfszeit festgelegt werden kann.  
  
– Eine Implementierung der <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> Methode, die die benutzerdefinierte Ausdruckszeichenfolge aus den Eigenschaftswerten-Editorblatt bildet.  
  
-Optionales eine Konstruktorimplementierung, die die Anfangswerte der Editor die Eigenschaften des Eigenschaftenblatts legt diese fest.  
  
Die zugeordneten benutzerdefinierten Ausdrucks-Editor-Klasse erstellt eine Instanz der abgeleiteten Editor-Tabelle in der <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> -Methode initialisiert diese Instanz mit aktuellen für die Steuerelementeigenschaft festgelegte Ausdruckszeichenfolge, und klicken Sie dann auf das visuelle Element gibt die Instanz zurück Designer. Der visuelle Designer können Sie den Ausdruck Stylesheet-Eigenschaften festlegen, und ruft dann die <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> Methode, um die Ausdruckszeichenfolge aus den Eigenschaftswerten des Eingabeausdrucks Tabelle bilden.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Ausdruckszeichenfolge gültig ist.</summary>
        <value><see langword="true" />, wenn die Ausdruckszeichenfolge gültig ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Basisimplementierung gibt immer `true` zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vom Ausdrucks-Editorblatt verwendete Dienstanbieterimplementierung ab.</summary>
        <value>Ein <see cref="T:System.IServiceProvider" />, der i. d. R. vom Entwurfshost bereitgestellt und zum Abrufen zusätzlicher Entwurfszeitdienste verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktor festgelegt den <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Implementierung für einen benutzerdefinierten Ausdrucks-Editorblatt.  
  
 Die <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Eigenschaft kann verwendet werden, um die Dienste zugreifen, die vom Designerhost bereitgestellt werden. Beispielsweise rufen Sie die <xref:System.IServiceProvider.GetService%2A> -Methode mit dem <xref:System.Web.UI.Design.IWebApplication> Schnittstelle, um auf Projektelemente, Dokumente oder Informationen in der Konfigurationsdatei, die über den visuellen Designer bereitgestellt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>