<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f9bc61821e174025406867d1abdf98ebad0502f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86614773" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Entwurfszeit-Editorblatt für einen benutzerdefinierten Ausdruck dar. Die Klasse muss geerbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein benutzerdefiniertes Ausdrucks-Editor Blatt ermöglicht Entwicklern das Festlegen von Eigenschaften für einen benutzerdefinierten Ausdruck zur Entwurfszeit. Steuerelement Eigenschaftswerte können mit Ausdrucks Zeichenfolgen festgelegt werden. die Ausdrucks Zeichenfolgen werden zur Laufzeit von einem Ausdrucks-Generator und zur Entwurfszeit von einem Ausdrucks-Editor ausgewertet.  
  
 Wenn Sie die- <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> Eigenschaft für ein Steuerelement im Entwurfszeit Eigenschaften Raster durchsuchen, zeigt der visuelle Designer ein Dialogfeld an, in dem Ausdrücke festgelegt werden können, die den Wert für eine Steuerelement Eigenschaft bereitstellen. Sie können den Ausdruckstyp basierend auf einer Liste von Ausdrucks Präfixen auswählen. Wenn Sie ein Ausdrucks Präfix aus der Liste auswählen, verwendet der visuelle Designer die zugeordneten <xref:System.Web.UI.Design.ExpressionEditor> -und- <xref:System.Web.UI.Design.ExpressionEditorSheet> Objekte, um die Ausdrucks Zeichenfolge basierend auf der Syntax für diesen Typ von Ausdruck auszuwerten und zu konvertieren. Der visuelle Designer verwendet Ausdrucks-Editor-Blatt Eigenschaften, um eine oder mehrere Zeichen folgen einzugeben, die in der benutzerdefinierten Ausdrucks Zeichenfolge kombiniert werden.  
  
 Zum Bereitstellen eines neuen Ausdrucks Typs zur Entwurfszeit definieren Sie in der Regel ein eindeutiges Ausdrucks Präfix und stellen benutzerdefinierte <xref:System.Web.Compilation.ExpressionBuilder> -und- <xref:System.Web.UI.Design.ExpressionEditor> Implementierungen bereit. Optional können Sie eine benutzerdefinierte- <xref:System.Web.UI.Design.ExpressionEditorSheet> Implementierung bereitstellen, die Eigenschaften definiert, die zum bilden des Ausdrucks verwendet werden. Um ein Ausdrucks Präfix einem Ausdrucks-Generator und einem Ausdrucks-Editor zuzuordnen, wenden <xref:System.Web.Compilation.ExpressionEditorAttribute> Sie das-Attribut und ein- <xref:System.Web.Compilation.ExpressionPrefixAttribute> Attribut auf die benutzerdefinierte <xref:System.Web.Configuration.ExpressionBuilder> Klasse an, und konfigurieren Sie dann das Ausdrucks Präfix für einen Ausdrucks-Generator im- `expressionBuilders` Element der Webkonfigurationsdatei.  
  
 Die Standard Implementierung der- <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methode gibt ein einfaches Editor-Blatt zurück, das eine einzelne Eingabe Zeichenfolge verwendet, um den Ausdruck zu bilden. Benutzerdefinierte Ausdrucks-Editoren, die von abgeleitet werden, <xref:System.Web.UI.Design.ExpressionEditor> können die- <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methode überschreiben, um eine benutzerdefinierte Editor-Tabelle zurückzugeben In der Regel enthält ein benutzerdefiniertes Editor Blatt mehrere Eigenschaften, die zum Erstellen der Ausdrucks Zeichenfolge verwendet werden. Die- <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Methode gibt die resultierende Ausdrucks Zeichenfolge basierend auf den aktuellen Ausdrucks Eigenschaften zurück.  
  
 Beispielsweise wird die <xref:System.Web.UI.Design.ResourceExpressionEditor> -Klasse von der <xref:System.Web.UI.Design.ExpressionEditor> -Klasse abgeleitet und stellt eine Implementierung zum Auswerten und Zuordnen eines Ressourcen Zeichen folgen Verweises zu einer Steuerelement Eigenschaft zur Entwurfszeit bereit. Die <xref:System.Web.Compilation.ResourceExpressionBuilder> -Klasse ist dem Ausdrucks Präfix `Resources` und der- <xref:System.Web.UI.Design.ResourceExpressionEditor> Implementierung zugeordnet. Die- <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Methode gibt einen zurück <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> , der die einzelnen Eigenschaften definiert, die einen Ressourcen Verweis Ausdruck bilden.  
  
 Wenn Sie von der- <xref:System.Web.UI.Design.ExpressionEditorSheet> Klasse erben, müssen Sie die folgenden Member überschreiben:  
  
-   Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methode, die die Implementierung eines benutzerdefinierten Editor Blatts zurückgibt.  
  
-   Der <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktor zum Implementieren benutzerdefinierter Initialisierungs Aktionen für die Implementierung des Ausdrucks-Editor Blatts.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Leiten Sie ein benutzerdefiniertes Ausdrucks-Editor Blatt von der- <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> Klasse ab, wenn Sie einen neuen Ausdruckstyp für Steuerelement Eigenschaftswerte definieren und die Ausdrucks Zeichenfolge auf der Grundlage mehrerer Ausdrucks Eigenschaftswerte erstellen möchten. Eine abgeleitete Klassen Implementierung sollte Folgendes enthalten: 
: Eine öffentliche Eigenschaft für jeden eindeutigen Wert in der Ausdrucks Zeichenfolge, die zur Entwurfszeit festgelegt werden kann.  
  
-Eine Implementierung der- <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> Methode, die die benutzerdefinierte Ausdrucks Zeichenfolge aus den Eigenschafts Werten der Editor-Tabelle bildet.  
  
: Optional eine Konstruktorimplementierung, die die Anfangswerte der Editor Blatt Eigenschaften festlegt.  
  
Die zugehörige benutzerdefinierte Ausdrucks-Editor-Klasse erstellt eine Instanz des abgeleiteten Editor Blatts in der- <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> Methode, initialisiert diese Instanz mit der aktuellen Ausdrucks Zeichenfolge für die Steuerelement Eigenschaft und gibt die-Instanz an den visuellen Designer zurück. Mit dem visuellen Designer können Sie die Eigenschaften des Ausdrucks Blatts festlegen und dann die- <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> Methode aufrufen, um die Ausdrucks Zeichenfolge aus den Eigenschafts Werten des Eingabe Ausdrucks Blatts zu bilden.</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die- <xref:System.Web.UI.Design.ExpressionEditorSheet> Klasse abstrakt ist, können Sie eine Instanz von nicht <xref:System.Web.UI.Design.ExpressionEditorSheet> direkt mit dem- <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktor erstellen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Überschreiben Sie beim Ableiten von der- <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> Klasse den- <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> Konstruktor, um benutzerdefinierte Initialisierungs Aktionen für die Implementierung des Ausdrucks-Editor Blatts zu implementieren.  
  
Beispielsweise können mit einer benutzerdefinierten Ausdrucks-Editor-Blatt Klasse, die zusätzliche Ausdrucks Eigenschaften implementiert, die Standardwerte für die Ausdrucks Eigenschaften im <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> Konstruktor definiert werden. Eine benutzerdefinierte Ausdrucks-Editor Blatt Klasse kann zusätzliche öffentliche Konstruktorüberladungen definieren, die Eingabeparameter Werte verwenden, um die Anfangswerte für die Ausdrucks Eigenschaften festzulegen.</para></block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse die Ausdruckszeichenfolge zurück, die durch die Eigenschaftswerte des Ausdrucks-Editorblattes gebildet wird.</summary>
        <returns>Die benutzerdefinierte Ausdruckszeichenfolge für die aktuellen Eigenschaftswerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein benutzerdefiniertes Ausdrucks-Editor Blatt enthält Entwurfszeit Einstellungen für mehrere Ausdrucks Eigenschaften, die kombiniert werden, um eine Ausdrucks Zeichenfolge zu bilden. Steuerelement Eigenschaftswerte können mit Ausdrucks Zeichenfolgen festgelegt werden. die Ausdrucks Zeichenfolgen werden zur Laufzeit von einem Ausdrucks-Generator ausgewertet.  
  
 Die- <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Methode gibt eine Ausdrucks Zeichenfolge zurück, die aus den aktuellen Ausdrucks Eigenschaften erstellt wird. Der visuelle Designer ermöglicht das Festlegen der Eigenschaften des Ausdrucks Blatts und ruft dann die- <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Methode auf, um die Ausdrucks Zeichenfolge zu erhalten und den Wert der Steuerelement Eigenschaft festzulegen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Leiten Sie ein benutzerdefiniertes Ausdrucks-Editor Blatt von der- <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> Klasse ab, wenn Sie einen neuen Ausdruckstyp für Steuerelement Eigenschaftswerte definieren und die Ausdrucks Zeichenfolge auf der Grundlage mehrerer Ausdrucks Eigenschaftswerte erstellen möchten. Eine abgeleitete Klassen Implementierung sollte Folgendes enthalten: 
: Eine öffentliche Eigenschaft für jeden eindeutigen Wert in der Ausdrucks Zeichenfolge, die zur Entwurfszeit festgelegt werden kann.  
  
-Eine Implementierung der- <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> Methode, die die benutzerdefinierte Ausdrucks Zeichenfolge aus den Eigenschafts Werten der Editor-Tabelle bildet.  
  
: Optional eine Konstruktorimplementierung, die die Anfangswerte der Editor Blatt Eigenschaften festlegt.  
  
Die zugehörige benutzerdefinierte Ausdrucks-Editor-Klasse erstellt eine Instanz des abgeleiteten Editor Blatts in der- <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> Methode, initialisiert diese Instanz mit der aktuellen Ausdrucks Zeichenfolge, die für die Control-Eigenschaft festgelegt ist, und gibt dann die Instanz an den visuellen Designer zurück. Mit dem visuellen Designer können Sie die Eigenschaften des Ausdrucks Blatts festlegen und dann die- <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> Methode aufrufen, um die Ausdrucks Zeichenfolge aus den Eigenschafts Werten des Eingabe Ausdrucks Blatts zu bilden.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Ausdruckszeichenfolge gültig ist.</summary>
        <value><see langword="true" />, wenn die Ausdruckszeichenfolge gültig ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Basisimplementierung gibt immer `true` zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vom Ausdrucks-Editorblatt verwendete Dienstanbieterimplementierung ab.</summary>
        <value>Ein <see cref="T:System.IServiceProvider" />, der i. d. R. vom Entwurfshost bereitgestellt und zum Abrufen zusätzlicher Entwurfszeitdienste verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie den- <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Konstruktor, um die <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Implementierung für ein benutzerdefiniertes Ausdrucks-Editor Blatt festzulegen.  
  
 Die- <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Eigenschaft kann verwendet werden, um auf Dienste zuzugreifen, die vom Designer Host bereitgestellt werden. Beispielsweise können Sie die- <xref:System.IServiceProvider.GetService%2A> Methode mit der- <xref:System.Web.UI.Design.IWebApplication> Schnittstelle aufrufen, um auf Projekt Elemente, Dokumente oder Konfigurationsdatei Details zuzugreifen, die über den visuellen Designer bereitgestellt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>
