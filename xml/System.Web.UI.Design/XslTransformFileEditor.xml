<Type Name="XslTransformFileEditor" FullName="System.Web.UI.Design.XslTransformFileEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="223196ddc3df80c437f666e2c1b2b5f95a19d813" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64133608" /></Metadata><TypeSignature Language="C#" Value="public class XslTransformFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XslTransformFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XslTransformFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class XslTransformFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransformFileEditor : System::Web::UI::Design::UrlEditor" />
  <TypeSignature Language="F#" Value="type XslTransformFileEditor = class&#xA;    inherit UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Entwurfszeit-Benutzeroberfläche für das Auswählen einer XML-Transformationsdatei bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.Design.XslTransformFileEditor> Objekt zur Entwurfszeit verwendet wird, auswählen und bearbeiten eine URL für eine XML-Transformationsdatei (XSL) und die URL, die einer Steuerelementeigenschaft zugewiesen. Z. B. die <xref:System.Web.UI.WebControls.XmlDataSource> -Steuerelement verwendet die <xref:System.Web.UI.Design.XslTransformFileEditor> Klasse zur Entwurfszeit zum Festlegen des Werts, der die <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> Eigenschaft.  
  
 Verwenden der <xref:System.ComponentModel.EditorAttribute> Attribut zum Zuordnen der <xref:System.Web.UI.Design.XslTransformFileEditor> mit einer Eigenschaft. Wenn die zugeordnete Eigenschaft in der Entwurfsoberfläche bearbeitet wird, ruft der Designerhost den <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> Methode. Die <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> -Methode verwendet die <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> Methode, die wiederum zeigt eine Benutzeroberfläche zum Auswählen der URL, und klicken Sie dann die URL zurückgegeben, die vom Benutzer ausgewählt wird. Die <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A> Methode gibt den Anzeigestil der Benutzeroberfläche.  
  
 Leiten Sie eine Klasse aus der <xref:System.Web.UI.Design.XslTransformFileEditor> zum Definieren eines benutzerdefinierten Editors für URL-Eigenschaft einer XML-Transformation. Z. B. eine abgeleitete Klasse überschreiben kann die <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> -Methode, und rufen Sie dann die <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> Methode mit einem benutzerdefinierten <xref:System.Web.UI.Design.XslTransformFileEditor.Filter%2A> oder <xref:System.Web.UI.Design.XslTransformFileEditor.Caption%2A> Wert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Instanz von Zuordnen der <xref:System.Web.UI.Design.XslTransformFileEditor> Klasse mit einer Eigenschaft, die in ein benutzerdefiniertes Steuerelement enthalten ist. Wenn die Eigenschaft des Steuerelements auf der Entwurfsoberfläche bearbeitet wird die <xref:System.Web.UI.Design.XslTransformFileEditor> Klasse ermöglicht der Benutzeroberfläche auswählen und Bearbeiten eines XML-Transformation-Dateinamens für den Wert der Eigenschaft.  
  
 [!code-csharp[WebDesigner.XslTransformFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.XslTransformFileEditor/cs/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.XslTransformFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.XslTransformFileEditor/vb/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransformFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XslTransformFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransformFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.XslTransformFileEditor" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XslTransformFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string" Usage="System.Web.UI.Design.XslTransformFileEditor.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die für das Auswahldialogfeld anzuzeigende Beschriftung ab.</summary>
        <value>Der für das Auswahldialogfeld anzuzeigende Beschriftungstext.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.XslTransformFileEditor.Caption%2A> Eigenschaft wird verwendet, durch die <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> Methode beim Aufrufen der <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> -Methode, die das URL-Auswahldialogfeld für den Benutzer zur Entwurfszeit anzeigt.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XslTransformFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string" Usage="System.Web.UI.Design.XslTransformFileEditor.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL-Filteroptionen für den Editor ab, die zum Filtern der Elemente im URL-Auswahldialogfeld verwendet werden.</summary>
        <value>Eine Zeichenfolge, die mindestens eine URL-Filteroption für das Dialogfeld darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.XslTransformFileEditor.Filter%2A> Eigenschaft wird verwendet, durch die <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> Methode beim Aufrufen der <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> -Methode, die das URL-Auswahldialogfeld für den Benutzer zur Entwurfszeit anzeigt.  
  
 Die <xref:System.Web.UI.Design.XslTransformFileEditor.Filter%2A> Eigenschaftenstandardwert gibt an, zwei für das Dialogfeld URL-Filter: eine für XML-Transformation-Dateien (*.xsl) und eine für alle Dateien (\*.\*).  
  
 Um einen benutzerdefinierten Filter-Zeichenfolge angeben, leiten Sie eine Klasse von der <xref:System.Web.UI.Design.XslTransformFileEditor> Klasse und überschreiben dann die <xref:System.Web.UI.Design.XslTransformFileEditor.Filter%2A> Eigenschaft, um die benutzerdefinierte Filterzeichenfolge zurückzugeben.  
  
 Eine Filterzeichenfolge enthält eine oder mehrere Filteroptionen auswählen. Jede Filteroption enthält eine Beschreibung des Filters, gefolgt von einem senkrechten Strich (&#124;) und das Filtermuster. Die Zeichenfolgen für die verschiedenen Filteroptionen werden durch den senkrechten Strich getrennt.  
  
 Es folgt ein Beispiel für eine Filterzeichenfolge, die zwei Filteroptionen enthält:  
  
 "`XML Transform Files (*.xsl)|*.xsl|All Files (*.*)|*.*`".  
  
 Sie können mehrere Filtermuster in einer Filteroption angeben, indem die Filtermuster durch Semikolons trennen. Es folgt ein Beispiel für eine Filterzeichenfolge an, in der die erste Filteroption zwei Filtermuster angibt:  
  
 "`Custom XML Transform Files (*.xs1; *.xs2)|*.xs1;*.xs2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>