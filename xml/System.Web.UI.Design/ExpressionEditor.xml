<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c8778fe408397d83c3bfac5a1ceb2de1d89421e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39759599" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Gruppe von Eigenschaften und Methoden, um einen Ausdruck auszuwerten, der zur Entwurfszeit einer Steuerelementeigenschaft zugeordnet ist, und um ein Ausdrucks-Editorblatt für den visuellen Entwurfshost für die Verwendung im Dialogfeld des Ausdrucks-Editors bereitzustellen. Diese Klasse ist abstrakt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein visueller Designer hosten, wie z. B. [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], verwendet der <xref:System.Web.UI.Design.ExpressionEditor> Klasse, um die benutzerdefinierten Ausdrucks-Editor-Blätter für die Benutzer darstellen, und wertet dann den ausgewählten Ausdruck für das Design-Time Rendering.  
  
 Beim Durchsuchen der <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> Eigenschaft für ein Steuerelement im Eigenschaftenraster zur Entwurfszeit der visuelle Designer zeigt ein Dialogfeld, um Ausdrücke für eine Steuerelementeigenschaft festzulegen. Sie können den Ausdruckstyp basierend auf einer Liste von Ausdruckspräfixen auswählen. Wenn Sie ein Ausdrucks-Präfix aus der Liste auswählen, verwendet der visuelle Designer zugeordneten <xref:System.Web.UI.Design.ExpressionEditor> und <xref:System.Web.UI.Design.ExpressionEditorSheet> Objekten, die festgelegt werden, auszuwerten und die Zeichenfolge des Ausdrucks anhand der Syntax für diesen Typ des Ausdrucks zu konvertieren. Der visuelle Designer legt den Ausdruck für die Eigenschaft des zugeordneten Steuerelements fest, und klicken Sie dann das Ergebnis des ausgewerteten Ausdrucks verwendet, um die Steuerelementeigenschaften Werte zuzuweisen, die auf der Entwurfsoberfläche gerendert werden.  
  
 Die statische <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> -Methoden rufen den Ausdrucks-Editor, der einem bestimmten Ausdruckspräfix oder Ausdrucks-Generator zugeordnet ist. Die <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> -Eigenschaft für eine <xref:System.Web.UI.Design.ExpressionEditor> -Objekt zurückgibt, das konfigurierte Ausdruckspräfix. Die <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> Methode wertet eine Ausdruckszeichenfolge für die Eingabe. Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methode gibt die <xref:System.Web.UI.Design.ExpressionEditorSheet> Implementierung, mit der Aufforderung für die benutzerdefinierten Ausdruckseigenschaften im Dialogfeld "Ausdrücke".  
  
 In der Regel um einen neuen Ausdruckstyp zur Entwurfszeit zu unterstützen, Sie definieren eine eindeutige Ausdruckspräfix und Bereitstellen von benutzerdefinierten <xref:System.Web.Compilation.ExpressionBuilder> und <xref:System.Web.UI.Design.ExpressionEditor> Implementierungen. Optional können Sie angeben, ein benutzerdefiniertes <xref:System.Web.UI.Design.ExpressionEditorSheet> -Implementierung, die die Eigenschaften, die verwendet werden definiert, um den Ausdruck in das Dialogfeld Ausdrücke zu bilden.  
  
 Das Ausdruckspräfix identifiziert den benutzerdefinierten Ausdruck und ordnet einen Ausdruck mit dem Ausdrucks-Generator und Ausdrucks-Editor. Wenn benutzerdefinierte Ausdrücke auf eine Seite analysiert werden, wird das Ausdruckspräfix zum Erstellen von Instanzen der zugeordneten verwendet <xref:System.Web.Compilation.ExpressionBuilder> und <xref:System.Web.UI.Design.ExpressionEditor> Klassen. Um eine Ausdrucks-Generator und Ausdrucks-Editor ein Ausdrucks-Präfix zuzuordnen, gelten die <xref:System.Web.Compilation.ExpressionEditorAttribute> und <xref:System.Web.Compilation.ExpressionPrefixAttribute> mit den benutzerdefinierten Attributen <xref:System.Web.Compilation.ExpressionBuilder> Klasse, und konfigurieren Sie das Ausdruckspräfix für einen Ausdrucks-Generator in der `expressionBuilders` Element in der Webkonfigurationsdatei. Das Präfix ist nicht erforderlich, aber es wird dringend empfohlen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie für die Ableitung der <xref:System.Web.UI.Design.ExpressionEditor> Klasse zum Definieren eines benutzerdefinierten Ausdrucks-Editors.  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Die folgenden Schritte sind erforderlich, bei der Ableitung von einer benutzerdefiniertes <see cref="T:System.Web.UI.Design.ExpressionEditor" /> Klasse: – Überschreiben der <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> Methode, um den Typ des benutzerdefinierten Ausdruck zur Entwurfszeit auszuwerten.  -Optional, außer Kraft setzen der <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> Methode, um eine benutzerdefinierte Klasse zurückzugeben, die Eigenschaften, die kombiniert werden definiert, um den benutzerdefinierten Ausdruck bilden.  -Anwenden der <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> -Attribut für die <see cref="T:System.Web.Compilation.ExpressionBuilder" /> Klassendeklaration, die abgeleiteten Ausdrucks-Editor-Klasse den benutzerdefinierten Ausdrucks-Generator zugeordnet werden soll.  Z. B. die <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> Klasse leitet sich von der <see cref="T:System.Web.UI.Design.ExpressionEditor" /> -Klasse und stellt eine Implementierung für das Auswerten und Zuordnen von einen Ressourcenverweis für die Zeichenfolge mit einer Eigenschaft des Steuerelements zur Entwurfszeit bereit. Die <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> Klasse bezieht sich auf das Ausdruckspräfix <see langword="Resources" /> und <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> Implementierung. Die <see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> Methode gibt eine <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />, das definiert, dass der einzelnen Eigenschaften, die einen Ressourcenausdruck für den Verweis bilden.</para>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.UI.Design.ExpressionEditor> Klasse ist abstrakt, können Sie keine Instanz von erstellen die <xref:System.Web.UI.Design.ExpressionEditor> -Klasse direkt mit der <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> Konstruktor.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Bei der Ableitung von der <see cref="T:System.Web.UI.Design.ExpressionEditor" /> Klasse außer Kraft, indem die <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> Konstruktor, um die angepasste Initialisierung von Aktionen für die Implementierung des Ausdrucks-Editor zu implementieren.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Eine auszuwertende Ausdruckszeichenfolge. Der Ausdruck enthält das Ausdruckspräfix nicht.</param>
        <param name="parseTimeData">Ein Objekt, das zusätzliche Analyseinformationen für das Auswerten von <c>expression</c> enthält. Dieses wird i. d. R. vom Ausdrucks-Generator zur Verfügung gestellt.</param>
        <param name="propertyType">Der Typ der Steuerelementeigenschaft, an den <c>expression</c> gebunden wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Wertet eine Ausdruckszeichenfolge aus und stellt den Entwurfszeitwert für eine Steuerelementeigenschaft bereit.</summary>
        <returns>Das Objekt, auf das durch die ausgewertete Ausdruckszeichenfolge verwiesen wird, sofern der Ausdruck ausgewertet werden konnte, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der visuelle Designer Host verwendet die <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> Methode zum Auswerten eines Ausdrucks, und geben Sie den Design-Time-Wert für eine Eigenschaft des zugeordneten Steuerelements.  
  
 Der visuelle Designer verwendet die <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> Methode, um die Ausdruckszeichenfolge zur Entwurfszeit, und klicken Sie dann Aufrufe analysieren die <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> Methode mit den Daten des analysierten Ausdrucks. Der visuelle Designer verwendet das Ergebnis des ausgewerteten Ausdrucks um Steuerelement Werte zuzuweisen, die auf der Entwurfsoberfläche gerendert werden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Abgeleitete Klassen von der <see cref="T:System.Web.UI.Design.ExpressionEditor" /> Klasse überschreiben, muss die <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> Methode, um den Typ des benutzerdefinierten Ausdruck zur Entwurfszeit auszuwerten.  Mindestens ein <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> Implementierung muss die folgenden Schritte verwenden: 1.  Die Zeichenfolge des Ausdrucks ausgewertet, und bestimmen Sie das Objekt, das durch den Ausdruck verwiesen wird.  2.  Zurückgeben <see langword="null" />, wenn die Zeichenfolge des Ausdrucks nicht ausgewertet werden kann.  3.  Verwenden der <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> Methode <paramref name="propertyType" /> um zu bestimmen, ob das referenzierte Objekt kann zugewiesen werden direkt an den Typ der Steuerelementeigenschaft, und klicken Sie dann je nach Ergebnis, führen Sie eins der folgenden Aktionen:: Wenn das referenzierte Objekt zugewiesen werden kann Geben Sie direkt mit der Eigenschaft des Steuerelements das referenzierte Objekt für den Ausdruck zurück.  – Wenn das Objekt verwiesen wird, einen einfachen Typ, ist z. B. eine Zeichenfolge, das referenzierte Objekt zurück.  – Klicken Sie andernfalls zu bestimmen, ob das referenzierte Objekt zugewiesen oder in den Eigenschaftentyp konvertiert werden kann.  4.  Verwenden der <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> Methode für die <see cref="T:System.ComponentModel.TypeConverter" /> Objekt für <paramref name="propertyType" /> um zu bestimmen, ob das referenzierte Objekt konvertiert werden kann der Typ der Steuerelementeigenschaft, und dann je nach Ergebnis, führen Sie eins der folgenden Aktionen:: Wenn das Objekt sein kann in den Typ der Steuerelementeigenschaft konvertiert wird, zurückgeben, das konvertierte Objekt mit der <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> Methode.  – Wenn das referenzierte Objekt nicht zugewiesen oder in konvertiert <paramref name="propertyType" />, geben Sie das Objekt zurück.  Optional die <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> Implementierung können die <paramref name="parseTimeData" /> -Objekt, das vom bereitgestellt wird die <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> optimieren oder Hilfe bei der Auswertung der Eingabeausdruck Zeichenfolge.</para>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ausdruckspräfix ab, das die Ausdruckszeichenfolgen kennzeichnet, die von der Implementierung des Ausdrucks-Editors unterstützt werden.</summary>
        <value>Eine Zeichenfolge, die das Präfix der Ausdrücke darstellt, die von der von <see cref="T:System.Web.UI.Design.ExpressionEditor" /> abgeleiteten Klasse unterstützt werden, andernfalls eine leere Zeichenfolge (""), wenn dem Ausdruck-Editor kein Ausdrucks-Präfix zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ausdruckspräfix identifiziert den benutzerdefinierten Ausdruck und ordnet einen Ausdruck mit dem Ausdrucks-Generator und Ausdrucks-Editor. Wenn benutzerdefinierte Ausdrücke auf eine Seite analysiert werden, wird das Ausdruckspräfix zum Erstellen von Instanzen der zugeordneten verwendet <xref:System.Web.Compilation.ExpressionBuilder> und <xref:System.Web.UI.Design.ExpressionEditor> Klassen. Um eine Ausdrucks-Generator und Ausdrucks-Editor ein Ausdrucks-Präfix zuzuordnen, gelten die <xref:System.Web.Compilation.ExpressionEditorAttribute> und <xref:System.Web.Compilation.ExpressionPrefixAttribute> mit den benutzerdefinierten Attributen <xref:System.Web.Compilation.ExpressionBuilder> Klasse, und konfigurieren Sie das Ausdruckspräfix für einen Ausdrucks-Generator in der `expressionBuilders` Element in der Webkonfigurationsdatei.  
  
 In der Regel abgeleitete Klassen überschreiben Sie nicht die <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> Eigenschaft. Die Basis <xref:System.Web.UI.Design.ExpressionEditor> -Klasse legt die <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> -Wert auf Grundlage der <xref:System.Web.Compilation.ExpressionPrefixAttribute> Attribut für das zugeordnete <xref:System.Web.Compilation.ExpressionBuilder> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung zurück, die einem Ausdruckspräfix oder einem Ausdrucks-Generator zugeordnet ist.</summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Das Ausdruckspräfix, das zum Suchen des zugeordneten Ausdrucks-Editors verwendet wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Gibt eine <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung zurück, die dem angegebenen Ausdruckspräfix zugeordnet ist.</summary>
        <returns>Eine <paramref name="expressionPrefix" /> zugeordnete <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung, andernfalls <see langword="null" />, wenn <paramref name="expressionPrefix" /> nicht definiert oder keinem <see cref="T:System.Web.UI.Design.ExpressionEditor" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die statische <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Überladungen der Methode zum Suchen der <xref:System.Web.UI.Design.ExpressionEditor> -Objekt, das mit einem bestimmten Ausdruckspräfix oder der Typ des Ausdrucks-Generator zugeordnet ist.  
  
 Bezeichnet die Ausdruckspräfix für jeden benutzerdefinierten Ausdruck der zugeordneten Ausdrucks-Generator und Ausdrucks-Editor. Wenn benutzerdefinierte Ausdrücke auf eine Seite analysiert werden, wird das Ausdruckspräfix zum Erstellen von Instanzen der zugeordneten verwendet <xref:System.Web.Compilation.ExpressionBuilder> und <xref:System.Web.UI.Design.ExpressionEditor> Klassen.  
  
 Um eine Ausdrucks-Generator und Ausdrucks-Editor ein Ausdrucks-Präfix zuzuordnen, gelten die <xref:System.Web.Compilation.ExpressionEditorAttribute> und <xref:System.Web.Compilation.ExpressionPrefixAttribute> mit den benutzerdefinierten Attributen <xref:System.Web.Compilation.ExpressionBuilder> Klasse, und konfigurieren Sie das Ausdruckspräfix für einen Ausdrucks-Generator in der `expressionBuilders` Element in der Webkonfigurationsdatei.  
  
 Suchen Sie den zugeordneten Ausdruck Editors für Ausdruckspräfix, das <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Methode listet die verfügbaren <xref:System.Web.Compilation.ExpressionBuilder> Implementierungen für ein übereinstimmendes Präfix. Die <xref:System.Web.Compilation.ExpressionBuilder> Implementierungen können konfiguriert werden, der `expressionBuilders` Abschnitt der Konfigurationsdatei. Gegebenenfalls eine <xref:System.Web.Compilation.ExpressionBuilder> Implementierung definiert das Ausdruckspräfix, die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Methode gibt den Typ zurück, die im angegebenen die <xref:System.Web.Compilation.ExpressionEditorAttribute> Attribut der <xref:System.Web.Compilation.ExpressionBuilder> Metadaten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceProvider" /> ist <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType">Der Typ der abgeleiteten Klasse des Ausdrucks-Generators, mit dem der zugeordneten Ausdrucks-Editor gesucht wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Gibt eine <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung zurück, die dem angegebenen Typ des Ausdrucks-Generators zugeordnet ist.</summary>
        <returns>Eine <paramref name="expressionBuilderType" /> zugeordnete <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung, andernfalls <see langword="null" />, wenn <paramref name="expressionBuilderType" /> nicht gefunden werden kann oder über keinen zugeordneten <see cref="T:System.Web.UI.Design.ExpressionEditor" /> verfügt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die statische <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Überladungen zum Suchen der <xref:System.Web.UI.Design.ExpressionEditor> -Objekt, das mit einem bestimmten Ausdruckspräfix oder der Typ des Ausdrucks-Generator zugeordnet ist.  
  
 Bezeichnet die Ausdruckspräfix für jeden benutzerdefinierten Ausdruck der zugeordneten Ausdrucks-Generator und Ausdrucks-Editor. Wenn benutzerdefinierte Ausdrücke auf eine Seite analysiert werden, wird das Ausdruckspräfix zum Erstellen von Instanzen der zugeordneten verwendet <xref:System.Web.Compilation.ExpressionBuilder> und <xref:System.Web.UI.Design.ExpressionEditor> Klassen.  
  
 Um eine Ausdrucks-Generator und Ausdrucks-Editor ein Ausdrucks-Präfix zuzuordnen, gelten die <xref:System.Web.Compilation.ExpressionEditorAttribute> und <xref:System.Web.Compilation.ExpressionPrefixAttribute> mit den benutzerdefinierten Attributen <xref:System.Web.Compilation.ExpressionBuilder> Klasse, und konfigurieren Sie das Ausdruckspräfix für einen Ausdrucks-Generator in der `expressionBuilders` Element in der Webkonfigurationsdatei.  
  
 Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Methode listet die verfügbaren <xref:System.Web.Compilation.ExpressionBuilder> Implementierungen gefunden `expressionBuilderType`. Die <xref:System.Web.Compilation.ExpressionBuilder> Implementierungen können konfiguriert werden, der `expressionBuilders` Abschnitt der Konfigurationsdatei. Wenn `expressionBuilderType` befindet sich in der Menge der verfügbaren <xref:System.Web.Compilation.ExpressionBuilder> Implementierungen der <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Methode gibt den Typ zurück, die im angegebenen die <xref:System.Web.Compilation.ExpressionEditorAttribute> Attribut der <xref:System.Web.Compilation.ExpressionBuilder> Metadaten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressionBuilderType" /> ist <see langword="null" />.  
  
\- oder – 
 <paramref name="serviceProvider" /> ist <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Die für eine Steuerelementeigenschaft festgelegte Ausdruckszeichenfolge, mit der das Ausdrucks-Editorblatt initialisiert wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Gibt ein Ausdrucks-Editorblatt zurück, das dem aktuellen Ausdrucks-Editor zugeordnet ist.</summary>
        <returns>Ein <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />, das die benutzerdefinierten Ausdruckseigenschaften definiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methode gibt ein <xref:System.Web.UI.Design.ExpressionEditorSheet> -Implementierung, die die Zeichenfolgen, die kombiniert werden definiert, um einen benutzerdefinierten Ausdruck bilden. Der visuelle Designer werden Sie ein Ausdrucks-Editorblatt für eine oder mehrere Zeichenfolgen, die in einem benutzerdefinierten Ausdruck kombinieren. Methode der Basisklasse gibt eine standardmäßige Ausdrucks-Editorblatt, die eine einzelne Eingabe Zeichenfolge verwendet, um den Ausdruck zu bilden. Der Ausdrucks-Editorblatt definiert das Eigenschaftenraster für den Ausdruck. Aus diesem Grund werden die Eigenschaften, die der Ausdrucks-Editor verfügbar macht, Eigenschaften, die für den Ausdruck im Dialogfeld definiert werden können.  
  
 Abgeleitete Klassen von der <xref:System.Web.UI.Design.ExpressionEditor> Klasse optional kann außer Kraft setzen der <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Methode, um ein benutzerdefinierter Ausdrucks-Editorblatt bereitzustellen. Ein benutzerdefinierter Ausdrucks-Editorblatt können während der Entwurfszeit-Eingabe für mehrere Eigenschaften, die Formular die Ausdruckszeichenfolge kombiniert werden.  
  
 Z. B. die <xref:System.Web.UI.Design.ResourceExpressionEditor> Klasse leitet sich von der <xref:System.Web.UI.Design.ExpressionEditor> -Klasse und stellt eine Implementierung für das Auswerten und Zuordnen von einen Ressourcenverweis für die Zeichenfolge mit einer Eigenschaft des Steuerelements zur Entwurfszeit bereit. Die <xref:System.Web.Compilation.ResourceExpressionBuilder> Klasse bezieht sich auf das Ausdruckspräfix `Resources` und <xref:System.Web.UI.Design.ResourceExpressionEditor> Implementierung. Die <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> Methode gibt eine <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, das definiert, dass der einzelnen Eigenschaften, die einen Ressourcenausdruck für den Verweis bilden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>In der Regel um einen neuen Ausdruckstyp zur Entwurfszeit angeben, Sie definieren eine eindeutige Ausdruckspräfix und Bereitstellen von benutzerdefinierten <see cref="T:System.Web.Compilation.ExpressionBuilder" /> und <see cref="T:System.Web.UI.Design.ExpressionEditor" /> Implementierungen. Optional können Sie angeben, ein benutzerdefiniertes <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> -Implementierung, die die Eigenschaften, die verwendet werden definiert, um den Ausdruck zu erstellen. Obwohl das Präfix in die Konfigurationsdatei definiert wird, sollten Sie auch Anwenden einer <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> Objekt und ein <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> Objekt.  Überschreiben der <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> Methode, um ein Ausdrucks-Editorblatt zurückzugeben, die während der Entwurfszeit-Eingabe für mehrere Eigenschaften in einem benutzerdefinierten Ausdruck definiert. Wenn Sie eine Eigenschaft des Steuerelements und der Typ des Ausdrucks-Editors auswählen, ruft der visuelle Designer den <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> -Methode auf und stellt der aktuelle Ausdruck eine Zeichenfolge, dann legen Sie für die Steuerelementeigenschaft. Verwendung <paramref name="expression" /> die Anfangswerte für die Eigenschaften des Ausdrucks festgelegt. Verwendung <paramref name="serviceProvider" /> um einen benutzerdefinierten Konstruktor für das Blatt zu initialisieren und den Zugriff auf Dienste, die vom Designerhost bereitgestellt werden. Beispielsweise rufen Sie die <see cref="M:System.IServiceProvider.GetService(System.Type)" /> -Methode mit der <see cref="T:System.Web.UI.Design.IWebApplication" /> Typ auf Projektelemente, Dokumente oder Informationen in der Konfigurationsdatei, die über den visuellen Designer bereitgestellt werden.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>