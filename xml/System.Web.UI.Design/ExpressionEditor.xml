<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48fedb086caeaf341300f29853c3c3cb0649a9e8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70716605" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Gruppe von Eigenschaften und Methoden, um einen Ausdruck auszuwerten, der zur Entwurfszeit einer Steuerelementeigenschaft zugeordnet ist, und um ein Ausdrucks-Editorblatt für den visuellen Entwurfshost für die Verwendung im Dialogfeld des Ausdrucks-Editors bereitzustellen. Diese Klasse ist abstrakt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein visueller Designer Host, wie z [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. b. <xref:System.Web.UI.Design.ExpressionEditor> , verwendet die-Klasse, um dem Benutzer benutzerdefinierte Ausdrucks-Editor-Blätter anzuzeigen, und wertet dann den ausgewählten Ausdruck für das Rendern von Entwurfszeit Werten aus.  
  
 Wenn Sie die <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> -Eigenschaft für ein Steuerelement im Raster Entwurfszeit Eigenschaften durchsuchen, zeigt der visuelle Designer ein Dialogfeld an, in dem Ausdrücke für eine Steuerelement Eigenschaft festgelegt werden. Sie können den Ausdruckstyp basierend auf einer Liste von Ausdrucks Präfixen auswählen. Wenn Sie ein Ausdrucks Präfix aus der Liste auswählen, verwendet der visuelle Designer die <xref:System.Web.UI.Design.ExpressionEditor> zugeordneten-Objekte und- <xref:System.Web.UI.Design.ExpressionEditorSheet> Objekte, um die Ausdrucks Zeichenfolge basierend auf der Syntax für diesen Typ von Ausdruck festzulegen, auszuwerten und zu konvertieren. Der visuelle Designer legt den Ausdruck für die zugeordnete Steuerelement Eigenschaft fest und verwendet dann das Ergebnis des ausgewerteten Ausdrucks, um Steuerelement Eigenschaftswerte zuzuweisen, die auf der Entwurfs Oberfläche gerendert werden.  
  
 Die statischen <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Methoden erhalten den Ausdrucks-Editor, der einem bestimmten Ausdrucks Präfix oder Ausdrucks-Generator zugeordnet ist. Die <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> -Eigenschaft für <xref:System.Web.UI.Design.ExpressionEditor> ein-Objekt gibt das konfigurierte Ausdrucks Präfix zurück. Die <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> -Methode wertet eine Eingabe Ausdrucks Zeichenfolge aus. Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> -Methode gibt <xref:System.Web.UI.Design.ExpressionEditorSheet> die-Implementierung zurück, die verwendet wird, um die benutzerdefinierten Ausdrucks Eigenschaften im Dialogfeld Ausdrücke einzugeben.  
  
 Zur Unterstützung eines neuen Ausdrucks Typs zur Entwurfszeit definieren Sie in der Regel ein eindeutiges Ausdrucks Präfix <xref:System.Web.Compilation.ExpressionBuilder> und <xref:System.Web.UI.Design.ExpressionEditor> stellen benutzerdefinierte-und-Implementierungen bereit. Optional können Sie eine benutzerdefinierte <xref:System.Web.UI.Design.ExpressionEditorSheet> -Implementierung bereitstellen, die Eigenschaften definiert, die im Dialogfeld Ausdrücke zum bilden des Ausdrucks verwendet werden.  
  
 Das Ausdrucks Präfix identifiziert den benutzerdefinierten Ausdruckstyp und ordnet dem Ausdrucks-Generator und dem Ausdrucks-Editor einen Ausdruck zu. Wenn benutzerdefinierte Ausdrücke in einer Seite analysiert werden, wird das Ausdrucks Präfix verwendet, um Instanzen der <xref:System.Web.Compilation.ExpressionBuilder> zugeordneten <xref:System.Web.UI.Design.ExpressionEditor> -Klasse und der-Klasse zu erstellen. Um ein Ausdrucks Präfix einem Ausdrucks-Generator und einem Ausdrucks-Editor zuzuordnen <xref:System.Web.Compilation.ExpressionEditorAttribute> , <xref:System.Web.Compilation.ExpressionPrefixAttribute> wenden Sie das- <xref:System.Web.Compilation.ExpressionBuilder> Attribut und das-Attribut auf die benutzerdefinierte Klasse an und `expressionBuilders` konfigurieren das Ausdrucks Präfix für einen Ausdrucks-Generator im -Element in der Webkonfigurationsdatei. Das Präfix ist nicht erforderlich, wird jedoch dringend empfohlen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie von der <xref:System.Web.UI.Design.ExpressionEditor> -Klasse abgeleitet wird, um einen benutzerdefinierten Ausdrucks-Editor zu definieren.  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Die folgenden Schritte sind erforderlich, um eine Benutzer <see cref="T:System.Web.UI.Design.ExpressionEditor" /> definierte Klasse zu ableiten: 
-Überschreiben <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> Sie die-Methode, um den benutzerdefinierten Ausdrucks Typ zur Entwurfszeit auszuwerten.  
  
-Optional können Sie die <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> -Methode überschreiben, um eine benutzerdefinierte Klasse zurückzugeben, die Eigenschaften definiert, die zum Erstellen des benutzerdefinierten Ausdrucks kombiniert werden.  
  
-Wenden Sie <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> das-Attribut <see cref="T:System.Web.Compilation.ExpressionBuilder" /> für die Klassen Deklaration an, um den benutzerdefinierten Ausdrucks-Generator der abgeleiteten Ausdrucks-Editor-Klasse zuzuordnen  
  
Beispielsweise wird die <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> -Klasse von der <see cref="T:System.Web.UI.Design.ExpressionEditor" /> -Klasse abgeleitet und stellt eine Implementierung zum Auswerten und Zuordnen eines Ressourcen Zeichen folgen Verweises zu einer Steuerelement Eigenschaft zur Entwurfszeit bereit. Die <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> -Klasse ist dem Ausdrucks Präfix <see langword="Resources" /> und der <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> -Implementierung zugeordnet. Die <see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> -Methode gibt <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />einen zurück, der die einzelnen Eigenschaften definiert, die einen Ressourcen Verweis Ausdruck bilden.</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.UI.Design.ExpressionEditor> -Klasse abstrakt ist, können Sie eine Instanz <xref:System.Web.UI.Design.ExpressionEditor> der-Klasse nicht direkt mit <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> dem-Konstruktor erstellen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Überschreiben Sie beim <see cref="T:System.Web.UI.Design.ExpressionEditor" /> ableiten von der- <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> Klasse den-Konstruktor, um benutzerdefinierte Initialisierungs Aktionen für die Implementierung des Ausdrucks-Editors zu implementieren.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Eine auszuwertende Ausdruckszeichenfolge. Der Ausdruck enthält das Ausdruckspräfix nicht.</param>
        <param name="parseTimeData">Ein Objekt, das zusätzliche Analyseinformationen für das Auswerten von <paramref name="expression" /> enthält. Dieses wird i. d. R. vom Ausdrucks-Generator zur Verfügung gestellt.</param>
        <param name="propertyType">Der Typ der Steuerelementeigenschaft, an den <paramref name="expression" /> gebunden wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Wertet eine Ausdruckszeichenfolge aus und stellt den Entwurfszeitwert für eine Steuerelementeigenschaft bereit.</summary>
        <returns>Das Objekt, auf das durch die ausgewertete Ausdruckszeichenfolge verwiesen wird, sofern der Ausdruck ausgewertet werden konnte, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der visuelle Designer Host verwendet die <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> -Methode, um einen Ausdruck auszuwerten, und stellt den Entwurfs Zeitwert für eine zugeordnete Steuerelement Eigenschaft bereit.  
  
 Der visuelle Designer verwendet die <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> -Methode, um die Ausdrucks Zeichenfolge zur Entwurfszeit zu analysieren, <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> und ruft dann die-Methode mit den analysierten Ausdrucks Daten auf. Der visuelle Designer verwendet das ausgewertete Ausdrucks Ergebnis, um Steuerelement Eigenschaftswerte zuzuweisen, die auf der Entwurfs Oberfläche gerendert werden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Von der <see cref="T:System.Web.UI.Design.ExpressionEditor" /> -Klasse abgeleitete Klassen müssen <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> die-Methode überschreiben, um den benutzerdefinierten Ausdruckstyp zur Entwurfszeit auszuwerten.  
  
Eine <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> -Implementierung muss mindestens die folgenden Schritte ausführen: 
1.  Evaluieren Sie die Ausdrucks Zeichenfolge, und bestimmen Sie das Objekt, auf das vom Ausdruck verwiesen wird.  
  
2.  Gibt <see langword="null" />zurück, wenn die Ausdrucks Zeichenfolge nicht ausgewertet werden kann.  
  
3.  Verwenden Sie <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> die- <paramref name="propertyType" /> Methode auf, um zu bestimmen, ob das Objekt, auf das verwiesen wird, direkt dem Steuerelement-Eigenschaftentyp zugewiesen werden kann, und führen Sie dann abhängig vom Ergebnis eine der folgenden Aktionen aus: 
-Wenn das Objekt, auf das verwiesen wird, direkt der Steuerelement Eigenschaft zugewiesen werden kann, geben Sie das referenzierte Objekt für den Ausdruck zurück.  
  
-Wenn das Objekt, auf das verwiesen wird, ein einfacher Typ ist, z. b. eine Zeichenfolge, wird das Objekt zurückgegeben  
  
-Andernfalls bestimmen Sie, ob das Objekt, auf das verwiesen wird, dem Eigenschaftentyp zugewiesen oder in diesen konvertiert werden kann.  
  
4.  Verwenden Sie <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> die-Methode <see cref="T:System.ComponentModel.TypeConverter" /> für das <paramref name="propertyType" /> -Objekt, um zu bestimmen, ob das Objekt, auf das verwiesen wird, in den Steuerelement-Eigenschaftentyp konvertiert werden kann, und führen Sie dann abhängig vom Ergebnis eine der folgenden Aktionen aus: 
-Wenn das-Objekt in den-Eigenschaftentyp konvertiert werden kann, geben Sie das <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> konvertierte-Objekt mithilfe der-Methode zurück.  
  
-Wenn das Objekt, auf das verwiesen wird, nicht <paramref name="propertyType" />zugewiesen oder in dieses konvertiert werden kann, wird das Objekt zurückgegeben  
  
Optional kann die <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> -Implementierung das <paramref name="parseTimeData" /> -Objekt verwenden, das von der <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> -Implementierung bereitgestellt wird, um die Auswertung der Eingabe Ausdrucks Zeichenfolge zu optimieren oder zu unterstützen.</para></block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ausdruckspräfix ab, das die Ausdruckszeichenfolgen kennzeichnet, die von der Implementierung des Ausdrucks-Editors unterstützt werden.</summary>
        <value>Eine Zeichenfolge, die das Präfix der Ausdrücke darstellt, die von der von <see cref="T:System.Web.UI.Design.ExpressionEditor" /> abgeleiteten Klasse unterstützt werden, andernfalls eine leere Zeichenfolge (""), wenn dem Ausdruck-Editor kein Ausdrucks-Präfix zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ausdrucks Präfix identifiziert den benutzerdefinierten Ausdruckstyp und ordnet dem Ausdrucks-Generator und dem Ausdrucks-Editor einen Ausdruck zu. Wenn benutzerdefinierte Ausdrücke in einer Seite analysiert werden, wird das Ausdrucks Präfix verwendet, um Instanzen der <xref:System.Web.Compilation.ExpressionBuilder> zugeordneten <xref:System.Web.UI.Design.ExpressionEditor> -Klasse und der-Klasse zu erstellen. Um ein Ausdrucks Präfix einem Ausdrucks-Generator und einem Ausdrucks-Editor zuzuordnen <xref:System.Web.Compilation.ExpressionEditorAttribute> , <xref:System.Web.Compilation.ExpressionPrefixAttribute> wenden Sie das- <xref:System.Web.Compilation.ExpressionBuilder> Attribut und das-Attribut auf die benutzerdefinierte Klasse an und `expressionBuilders` konfigurieren das Ausdrucks Präfix für einen Ausdrucks-Generator im -Element in der Webkonfigurationsdatei.  
  
 In der Regel überschreiben abgeleitete Klassen <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> die-Eigenschaft nicht. Die Basis <xref:System.Web.UI.Design.ExpressionEditor> Klasse legt den <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> Wert auf Grundlage <xref:System.Web.Compilation.ExpressionBuilder> des <xref:System.Web.Compilation.ExpressionPrefixAttribute> -Attributs für das zugeordnete-Objekt fest.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung zurück, die einem Ausdruckspräfix oder einem Ausdrucks-Generator zugeordnet ist.</summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Das Ausdruckspräfix, das zum Suchen des zugeordneten Ausdrucks-Editors verwendet wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Gibt eine <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung zurück, die dem angegebenen Ausdruckspräfix zugeordnet ist.</summary>
        <returns>Eine <paramref name="expressionPrefix" /> zugeordnete <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung, andernfalls <see langword="null" />, wenn <paramref name="expressionPrefix" /> nicht definiert oder keinem <see cref="T:System.Web.UI.Design.ExpressionEditor" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> statischen Methoden Überladungen, um <xref:System.Web.UI.Design.ExpressionEditor> das Objekt zu suchen, das einem bestimmten Ausdrucks Präfix oder Ausdrucks-Generator-Typ zugeordnet ist.  
  
 Für jeden benutzerdefinierten Ausdruckstyp identifiziert ein Ausdrucks Präfix den zugehörigen Ausdrucks-Generator und den Ausdrucks-Editor. Wenn benutzerdefinierte Ausdrücke in einer Seite analysiert werden, wird das Ausdrucks Präfix verwendet, um Instanzen der <xref:System.Web.Compilation.ExpressionBuilder> zugeordneten <xref:System.Web.UI.Design.ExpressionEditor> -Klasse und der-Klasse zu erstellen.  
  
 Um ein Ausdrucks Präfix einem Ausdrucks-Generator und einem Ausdrucks-Editor zuzuordnen <xref:System.Web.Compilation.ExpressionEditorAttribute> , <xref:System.Web.Compilation.ExpressionPrefixAttribute> wenden Sie das- <xref:System.Web.Compilation.ExpressionBuilder> Attribut und das-Attribut auf die benutzerdefinierte Klasse an und `expressionBuilders` konfigurieren das Ausdrucks Präfix für einen Ausdrucks-Generator im -Element in der Webkonfigurationsdatei.  
  
 Um den zugehörigen Ausdrucks-Editor für ein Ausdrucks Präfix zu <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> suchen, listet die-Methode <xref:System.Web.Compilation.ExpressionBuilder> die verfügbaren Implementierungen für ein entsprechendes Präfix auf. Die <xref:System.Web.Compilation.ExpressionBuilder> -Implementierungen können `expressionBuilders` im-Abschnitt der Webkonfigurationsdatei konfiguriert werden. Wenn eine Verfüg <xref:System.Web.Compilation.ExpressionBuilder> Bare Implementierung das Ausdrucks Präfix definiert <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> , gibt die Methode den Typ zurück, der <xref:System.Web.Compilation.ExpressionEditorAttribute> <xref:System.Web.Compilation.ExpressionBuilder> im-Attribut der Metadaten angegeben ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceProvider" /> ist <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType">Der Typ der abgeleiteten Klasse des Ausdrucks-Generators, mit dem der zugeordneten Ausdrucks-Editor gesucht wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Gibt eine <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung zurück, die dem angegebenen Typ des Ausdrucks-Generators zugeordnet ist.</summary>
        <returns>Eine <paramref name="expressionBuilderType" /> zugeordnete <see cref="T:System.Web.UI.Design.ExpressionEditor" />-Implementierung, andernfalls <see langword="null" />, wenn <paramref name="expressionBuilderType" /> nicht gefunden werden kann oder über keinen zugeordneten <see cref="T:System.Web.UI.Design.ExpressionEditor" /> verfügt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> statischen über Ladungen, um <xref:System.Web.UI.Design.ExpressionEditor> das Objekt zu suchen, das einem bestimmten Ausdrucks Präfix oder Ausdrucks-Generator-Typ zugeordnet ist.  
  
 Für jeden benutzerdefinierten Ausdruckstyp identifiziert ein Ausdrucks Präfix den zugehörigen Ausdrucks-Generator und den Ausdrucks-Editor. Wenn benutzerdefinierte Ausdrücke in einer Seite analysiert werden, wird das Ausdrucks Präfix verwendet, um Instanzen der <xref:System.Web.Compilation.ExpressionBuilder> zugeordneten <xref:System.Web.UI.Design.ExpressionEditor> -Klasse und der-Klasse zu erstellen.  
  
 Um ein Ausdrucks Präfix einem Ausdrucks-Generator und einem Ausdrucks-Editor zuzuordnen <xref:System.Web.Compilation.ExpressionEditorAttribute> , <xref:System.Web.Compilation.ExpressionPrefixAttribute> wenden Sie das- <xref:System.Web.Compilation.ExpressionBuilder> Attribut und das-Attribut auf die benutzerdefinierte Klasse an und `expressionBuilders` konfigurieren das Ausdrucks Präfix für einen Ausdrucks-Generator im -Element in der Webkonfigurationsdatei.  
  
 Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> -Methode listet die verfügbaren <xref:System.Web.Compilation.ExpressionBuilder> -Implementierungen auf `expressionBuilderType`, die gesucht werden sollen. Die <xref:System.Web.Compilation.ExpressionBuilder> -Implementierungen können `expressionBuilders` im-Abschnitt der Webkonfigurationsdatei konfiguriert werden. Wenn `expressionBuilderType` im Satz verfügbarer <xref:System.Web.Compilation.ExpressionBuilder> Implementierungen gefunden wird, <xref:System.Web.Compilation.ExpressionEditorAttribute> gibt die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Methode den Typ zurück <xref:System.Web.Compilation.ExpressionBuilder> , der im-Attribut der Metadaten angegeben ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="expressionBuilderType" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="serviceProvider" /> ist <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Die für eine Steuerelementeigenschaft festgelegte Ausdruckszeichenfolge, mit der das Ausdrucks-Editorblatt initialisiert wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Gibt ein Ausdrucks-Editorblatt zurück, das dem aktuellen Ausdrucks-Editor zugeordnet ist.</summary>
        <returns>Ein <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />, das die benutzerdefinierten Ausdruckseigenschaften definiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> -Methode gibt <xref:System.Web.UI.Design.ExpressionEditorSheet> eine-Implementierung zurück, die die Zeichen folgen definiert, die zum bilden eines benutzerdefinierten Ausdrucks kombiniert werden. Der visuelle Designer verwendet ein Ausdrucks-Editor Blatt, um eine oder mehrere Zeichen folgen einzugeben, die zu einem benutzerdefinierten Ausdruck kombiniert werden. Die Basisklassen Methode gibt ein Standardmäßiges Ausdrucks-Editor-Blatt zurück, das eine einzelne Eingabe Zeichenfolge verwendet, um den Ausdruck zu bilden. Das Ausdrucks-Editor Blatt definiert das Eigenschaften Raster für den Ausdruck. Aus diesem Grund werden die Eigenschaften, die der Ausdrucks-Editor verfügbar macht, zu Eigenschaften, die für den Ausdruck im Dialogfeld definiert werden können.  
  
 Von der <xref:System.Web.UI.Design.ExpressionEditor> -Klasse abgeleitete Klassen können optional <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> die Methode überschreiben, um ein benutzerdefiniertes Ausdrucks-Editor Blatt bereitzustellen Ein benutzerdefiniertes Ausdrucks-Editor Blatt kann die Eingabe zur Entwurfszeit für mehrere Eigenschaften ermöglichen, die zusammen kombiniert werden, um die Ausdrucks Zeichenfolge zu bilden.  
  
 Beispielsweise wird die <xref:System.Web.UI.Design.ResourceExpressionEditor> -Klasse von der <xref:System.Web.UI.Design.ExpressionEditor> -Klasse abgeleitet und stellt eine Implementierung zum Auswerten und Zuordnen eines Ressourcen Zeichen folgen Verweises zu einer Steuerelement Eigenschaft zur Entwurfszeit bereit. Die <xref:System.Web.Compilation.ResourceExpressionBuilder> -Klasse ist dem Ausdrucks Präfix `Resources` und der <xref:System.Web.UI.Design.ResourceExpressionEditor> -Implementierung zugeordnet. Die <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> -Methode gibt <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>einen zurück, der die einzelnen Eigenschaften definiert, die einen Ressourcen Verweis Ausdruck bilden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zum Bereitstellen eines neuen Ausdrucks Typs zur Entwurfszeit definieren Sie in der Regel ein eindeutiges Ausdrucks Präfix <see cref="T:System.Web.Compilation.ExpressionBuilder" /> und <see cref="T:System.Web.UI.Design.ExpressionEditor" /> stellen benutzerdefinierte-und-Implementierungen bereit. Optional können Sie eine benutzerdefinierte <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> -Implementierung bereitstellen, die Eigenschaften definiert, die zum bilden des Ausdrucks verwendet werden. Obwohl die Konfigurationsdatei das Präfix definiert, sollten Sie auch ein <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> -Objekt und ein <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> -Objekt anwenden.  
  
Überschreiben <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> Sie die-Methode, um ein Ausdrucks-Editor Blatt zurückzugeben, das die Eingabe der Entwurfszeit für mehrere Eigenschaften in einem benutzerdefinierten Ausdruck definiert. Wenn Sie eine Steuerelement Eigenschaft und den Ausdrucks-Editor-Typ auswählen, ruft der <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> visuelle Designer die-Methode auf und gibt dann die aktuelle Ausdrucks Zeichenfolge an, die für die Steuerelement Eigenschaft festgelegt ist. Verwenden <paramref name="expression" /> Sie, um die Anfangswerte für die Ausdrucks Eigenschaften festzulegen. Verwenden <paramref name="serviceProvider" /> Sie, um einen benutzerdefinierten Konstruktor für Ausdrucks Blätter zu initialisieren und auf Dienste zuzugreifen, die vom Designer Host bereitgestellt werden. Beispielsweise können Sie die <see cref="M:System.IServiceProvider.GetService(System.Type)" /> -Methode mit <see cref="T:System.Web.UI.Design.IWebApplication" /> dem-Typ aufrufen, um auf Projekt Elemente, Dokumente oder Konfigurationsdatei Details zuzugreifen, die über den visuellen Designer bereitgestellt werden.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
