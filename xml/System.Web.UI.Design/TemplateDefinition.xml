<Type Name="TemplateDefinition" FullName="System.Web.UI.Design.TemplateDefinition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3e4c5e3be4452391c650259f2857ab360c8d1c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589544" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TemplateDefinition : System.Web.UI.Design.DesignerObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateDefinition extends System.Web.UI.Design.DesignerObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.TemplateDefinition" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateDefinition&#xA;Inherits DesignerObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateDefinition : System::Web::UI::Design::DesignerObject" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DesignerObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Eigenschaften und Methoden bereit, die zur Entwurfszeit ein Vorlagenelement in einem Webserver-Steuerelement definieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.TemplateDefinition> -Klasse stellt eine Adapterklasse, die von geerbt werden kann und die für eine Steuerelement-Designer zu verwenden wie z. B. Bereitstellen von Unterstützung für Vorlagenbasierte Steuerelemente in einem Entwurfshost erweitert werden kann [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. Einem Entwurfshost verwendet, die Eigenschaften und Methoden von der <xref:System.Web.UI.Design.TemplateDefinition> Klasse, um zu ermöglichen, erstellen und bearbeiten eine Vorlage zur Entwurfszeit.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Klasse von abgeleitet der <xref:System.Web.UI.Design.ControlDesigner> Klasse. Diese Steuerelement-Designer unterstützt ein Steuerelement mit vier möglichen Vorlagen.  
  
 Um dies testen möchten, fügen Sie einen Verweis auf die Assembly "System.Design.dll", Kompilieren des Codes, und klicken Sie dann in einen Entwurf hosten, wie z. B. [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], betrachten Sie die Seite in der Entwurfsansicht. Wählen Sie das Steuerelement, klicken Sie auf die Liste der Aktionen zum Auswählen einer Vorlage zu ändern und dann verwenden Sie die Drag-and-Drop-Funktion, um die Steuerelemente in die Vorlage verschoben.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
    <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.TemplateDefinition" />-Klasse.</summary>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designer As ControlDesigner, name As String, templatedObject As Object, templatePropertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designer">Das übergeordnete <see cref="T:System.Web.UI.Design.ControlDesigner" />-Objekt.</param>
        <param name="name">Der Name der Vorlage.</param>
        <param name="templatedObject">Das Objekt, das die Vorlage enthält.</param>
        <param name="templatePropertyName">Der Eigenschaftenname, der im Entwurfshost in der Liste **Eigenschaften** diese Vorlage darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.TemplateDefinition" />-Klasse mit dem bereitgestellten Designer, dem Vorlagennamen, der Vorlage und dem Eigenschaftennamen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="templatedObject" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designer As ControlDesigner, name As String, templatedObject As Object, templatePropertyName As String, serverControlsOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, bool serverControlsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">Das übergeordnete <see cref="T:System.Web.UI.Design.ControlDesigner" />-Objekt.</param>
        <param name="name">Der Name der Vorlage.</param>
        <param name="templatedObject">Das Objekt, das die Vorlage enthält.</param>
        <param name="templatePropertyName">Der Eigenschaftenname, der im Entwurfshost in der Liste **Eigenschaften** diese Vorlage darstellt.</param>
        <param name="serverControlsOnly">Ein boolescher Wert, der angibt, ob der Vorlageninhalt nur Webserver-Steuerelemente zulassen soll.</param>
        <summary>Initialisiert mit dem bereitgestellten Designer, dem Vorlagennamen, der Vorlage, dem Eigenschaftennamen und der Angabe, ob der Vorlageninhalt auf Webserver-Steuerelemente beschränkt werden soll, eine neue Instanz der <see cref="T:System.Web.UI.Design.TemplateDefinition" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="templatedObject" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="designer">Das übergeordnete <see cref="T:System.Web.UI.Design.ControlDesigner" />-Objekt.</param>
        <param name="name">Der Name der Vorlage.</param>
        <param name="templatedObject">Das Objekt, das die Vorlage enthält.</param>
        <param name="templatePropertyName">Der Eigenschaftenname, der im Entwurfshost in der Liste **Eigenschaften** diese Vorlage darstellt.</param>
        <param name="style">Ein <see cref="T:System.Web.UI.WebControls.Style" />-Objekt, das auf alle Vorlagen angewendet werden soll.</param>
        <summary>Initialisiert mit dem bereitgestellten Designer, dem Vorlagennamen, der Vorlage, dem Eigenschaftennamen und dem <see cref="T:System.Web.UI.Design.TemplateDefinition" />-Objekt eine neue Instanz der <see cref="T:System.Web.UI.WebControls.Style" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="templatedObject" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateDefinition (System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, System.Web.UI.WebControls.Style style, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner designer, string name, object templatedObject, string templatePropertyName, class System.Web.UI.WebControls.Style style, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateDefinition(System::Web::UI::Design::ControlDesigner ^ designer, System::String ^ name, System::Object ^ templatedObject, System::String ^ templatePropertyName, System::Web::UI::WebControls::Style ^ style, bool serverControlsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedObject" Type="System.Object" />
        <Parameter Name="templatePropertyName" Type="System.String" />
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">Das übergeordnete <see cref="T:System.Web.UI.Design.ControlDesigner" />-Objekt.</param>
        <param name="name">Der Name der Vorlage.</param>
        <param name="templatedObject">Das Objekt, das die Vorlage enthält.</param>
        <param name="templatePropertyName">Der Eigenschaftenname, der im Entwurfshost in der Liste **Eigenschaften** diese Vorlage darstellt.</param>
        <param name="style">Ein <see cref="T:System.Web.UI.WebControls.Style" />-Objekt, das auf alle Vorlagen angewendet werden soll.</param>
        <param name="serverControlsOnly">Ein boolescher Wert, der angibt, ob die Vorlage den Inhalt auf Webserver-Steuerelemente beschränken soll.</param>
        <summary>Initialisiert mit dem bereitgestellten Designer, dem Vorlagennamen, der Vorlage, dem Eigenschaftennamen, dem <see cref="T:System.Web.UI.Design.TemplateDefinition" />-Objekt und der Angabe, ob der Inhalt auf Webserver-Steuerelemente beschränkt werden soll, eine neue Instanz der <see cref="T:System.Web.UI.WebControls.Style" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="designer" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="templatedObject" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="AllowEditing">
      <MemberSignature Language="C#" Value="public virtual bool AllowEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEditing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.AllowEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Vorlage die Bearbeitung ihres Inhalts zulassen soll.</summary>
        <value>
          <see langword="true" />, wenn die Bearbeitung zulässig ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um den Standardeintrag zu ändern, müssen abgeleitete Klassen überschreiben die <xref:System.Web.UI.Design.TemplateDefinition.AllowEditing%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual string Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.Content" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Content As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Content { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das HTML-Markup ab, das den Inhalt der Vorlage darstellt, oder legt dieses fest.</summary>
        <value>HTML-Markup für den Inhalt der Vorlage.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerControlsOnly">
      <MemberSignature Language="C#" Value="public bool ServerControlsOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerControlsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerControlsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerControlsOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Vorlage wie im <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" />-Konstruktor festgelegt den Inhalt auf Webserver-Steuerelemente beschränken soll. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>
          <see langword="true" />, wenn der Inhalt auf Webserver-Steuerelemente beschränkt ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ Style { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil ab, der wie im <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" />-Konstruktor festgelegt auf die Vorlage angewendet werden soll. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.Style" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl die <xref:System.Web.UI.WebControls.Style> Eigenschaft ist schreibgeschützt, die Eigenschaften der <xref:System.Web.UI.WebControls.Style> kann festgelegt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDataBinding">
      <MemberSignature Language="C#" Value="public bool SupportsDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Vorlage die Datenbindung unterstützt, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Vorlage die Datenbindung unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedObject">
      <MemberSignature Language="C#" Value="public object TemplatedObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TemplatedObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatedObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TemplatedObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Komponente ab, in der sich die Vorlage befindet. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Die Komponente wird beim Erstellen dieser <see cref="T:System.Web.UI.Design.TemplateDefinition" /> festgelegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies <xref:System.Web.UI.Design.TemplateDefinition.TemplatedObject%2A> Eigenschaft schreibgeschützt ist, können seine Eigenschaften festgelegt werden, und wenn <xref:System.Web.UI.Design.TemplateDefinition.AllowEditing%2A> ist "true", der Inhalt weder bearbeitet werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatePropertyName">
      <MemberSignature Language="C#" Value="public string TemplatePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatePropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Eigenschaftennamen für die Vorlage ab, die der Entwurfshost im Eigenschaftenraster anzeigen soll.</summary>
        <value>Der Name der Vorlage sollte angezeigt werden, der **Eigenschaften** Liste der Entwurfshost.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>