<Type Name="EditableDesignerRegion" FullName="System.Web.UI.Design.EditableDesignerRegion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="831ec555c7d494a6c59e45830f1c105b2733e365" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30556164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditableDesignerRegion : System.Web.UI.Design.DesignerRegion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditableDesignerRegion extends System.Web.UI.Design.DesignerRegion" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.EditableDesignerRegion" />
  <TypeSignature Language="VB.NET" Value="Public Class EditableDesignerRegion&#xA;Inherits DesignerRegion" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditableDesignerRegion : System::Web::UI::Design::DesignerRegion" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DesignerRegion</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen bearbeitbaren Inhaltsbereich im Entwurfszeitmarkup für das zugeordnete Steuerelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.Design.EditableDesignerRegion> Klasse zum Verwalten von Vorlagen zur Entwurfszeit. Ein <xref:System.Web.UI.Design.ControlDesigner> verwendet eine Instanz dieser Klasse mit seiner <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> Methode zum Generieren von HTML-Markup, der den Inhalt des Bereichs.  
  
   
  
## Examples  
 In diesem Beispiel wird gezeigt, wie Sie ein Steuerelement mit zwei Bereichen, die durch Klicken aktivierbaren erstellen und ein <xref:System.Web.UI.Design.EditableDesignerRegion> -Objekt mit zwei Ansichten oder Vorlagen. Kompilieren Sie das Projekt, öffnen Sie die Seite in einem visuellen Designer, und wechseln Sie zur Entwurfsansicht (WYSIWYG). Es gibt zwei Ansichten geklickt werden kann, **View1** und **View2**. Klicken Sie auf **View1** , und ziehen Sie die <xref:System.Web.UI.WebControls.CheckBox> -Steuerelement aus der unteren Teil der Seite in den leeren Designerbereich direkt unterhalb der durch Klicken aktivierbaren Regionen. Klicken Sie auf **View2** , und ziehen Sie die <xref:System.Web.UI.WebControls.RadioButton> Steuerelement in den leeren Bereich des Designers. Klicken Sie auf **View1** erneut, und die Region mit dem <xref:System.Web.UI.WebControls.CheckBox> wird erneut angezeigt. Klicken Sie auf **View2** und die Region mit dem <xref:System.Web.UI.WebControls.RadioButton> wird erneut angezeigt. Wechseln Sie zurück zur Datenquellensicht an, um festzustellen, wie die Änderungen in das HTML-Markup permanent gespeichert werden  
  
> [!NOTE]
>  Das Projekt muss einen Verweis auf die Assembly "System.Design.dll" enthalten.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#1)]
 [!code-vb[SimpleMultiRegionControlDesigner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#1)]  
[!code-aspx-csharp[SimpleMultiRegionControlDesigner#8](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.aspx#8)]
[!code-aspx-vb[SimpleMultiRegionControlDesigner#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.aspx#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditableDesignerRegion (System.Web.UI.Design.ControlDesigner owner, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner owner, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ControlDesigner, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditableDesignerRegion(System::Web::UI::Design::ControlDesigner ^ owner, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Web.UI.Design.ControlDesigner" />-Objekt oder ein Designer, der von <see cref="T:System.Web.UI.Design.ControlDesigner" /> abgeleitet ist.</param>
        <param name="name">Der Name der Region.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />-Klasse unter Verwendung des angegebenen Besitzers und des angegebenen Namens.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditableDesignerRegion (System.Web.UI.Design.ControlDesigner owner, string name, bool serverControlsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Design.ControlDesigner owner, string name, bool serverControlsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ControlDesigner, name As String, serverControlsOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditableDesignerRegion(System::Web::UI::Design::ControlDesigner ^ owner, System::String ^ name, bool serverControlsOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Design.ControlDesigner" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serverControlsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Web.UI.Design.ControlDesigner" />-Objekt oder ein Designer, der von <see cref="T:System.Web.UI.Design.ControlDesigner" /> abgeleitet ist.</param>
        <param name="name">Der Name der Region.</param>
        <param name="serverControlsOnly">
          <see langword="true" />, wenn der Bereich nur Webserver-Steuerelemente für Inhalt akzeptieren soll, andernfalls <see langword="false" />.</param>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />-Klasse unter Verwendung des angegebenen Besitzers und des angegebenen Namens sowie des Anfangswerts der <see cref="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual string Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.EditableDesignerRegion.Content" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Content As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Content { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den HTML-Code für den Inhalt des Bereichs ab oder legt diesen fest.</summary>
        <value>HTML-Code, der den Inhalt des <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />-Objekts darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildViewRendering">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ViewRendering GetChildViewRendering (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ViewRendering GetChildViewRendering(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ViewRendering ^ GetChildViewRendering(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Das Steuerelement, für das das <see cref="T:System.Web.UI.Design.ViewRendering" />-Objekt für den aktuellen Bereich abgerufen werden soll.</param>
        <summary>Gibt ein <see cref="T:System.Web.UI.Design.ViewRendering" />-Objekt zurück, das den HTML-Code zur Entwurfszeit für das angegebene Steuerelement enthält.</summary>
        <returns>Ein <see cref="T:System.Web.UI.Design.ViewRendering" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerControlsOnly">
      <MemberSignature Language="C#" Value="public bool ServerControlsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ServerControlsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerControlsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ServerControlsOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Bereich nur Webserver-Steuerelemente akzeptieren kann, oder legt diesen fest</summary>
        <value>
          <see langword="true" />, wenn der Bereich nur Webserver-Steuerelemente enthalten kann, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDataBinding">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SupportsDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Bereich an eine Datenquelle gebunden werden kann, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn der Inhalt von <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> das Binden an eine Datenquelle unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>