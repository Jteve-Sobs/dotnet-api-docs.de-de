<Type Name="ResourceExpressionEditorSheet" FullName="System.Web.UI.Design.ResourceExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21ed0e56709230da5f779223467e670c6403d4ab" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86614655" /></Metadata><TypeSignature Language="C#" Value="public class ResourceExpressionEditorSheet : System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditorSheet extends System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditorSheet&#xA;Inherits ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditorSheet : System::Web::UI::Design::ExpressionEditorSheet" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditorSheet = class&#xA;    inherit ExpressionEditorSheet" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditorSheet</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt zur Entwurfszeit auf der Benutzeroberfläche eines Designerhosts ein Entwurfszeit-Editorblatt für die Eigenschaften eines Ressourcenausdrucks dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der visuelle Designer verwendet die <xref:System.Web.UI.Design.ResourceExpressionEditor> -Klasse mit der <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> -Klasse, um die einzelnen Eigenschaften eines Ressourcen Verweis Ausdrucks auszuwählen und die ausgewählten Eigenschaftswerte des Ressourcen Ausdrucks in einem Ressourcen Ausdruck zu kombinieren.  
  
 Die Methode <xref:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> gibt ein <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>-Objekt zurück. Wenn Sie im Dialogfeld Ausdrücke eine Steuerelement Eigenschaft auswählen und an einen Ressourcen Ausdruck binden, ruft der visuelle Designer die- <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Methode auf. Der visuelle Designer verwendet das zurückgegebene <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> -Objekt, um die-Eigenschaft und die-Eigenschaft einzugeben <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> . Nachdem Sie die Eigenschaften des Ressourcen Ausdrucks ausgewählt haben, ruft der visuelle Designer die- <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression%2A> Methode auf, um die Eigenschaften in einer Ressourcen Ausdrucks Zeichenfolge zu kombinieren.  
  
 Die- <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> Eigenschaft muss in einem Ressourcen Ausdruck angegeben werden. Sie indiziert den Ressourcen Wert. Die <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A>-Eigenschaft ist optional. Er verweist auf den Klassen Schlüssel oder Dateinamen, der die Ressource im globalen Ressourcen Ordner definiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Web.UI.WebControls.HyperLink.Text%2A> Eigenschaft eines- <xref:System.Web.UI.WebControls.HyperLink> Steuer Elements mithilfe von an einen Ressourcen Ausdruck gebunden wird <xref:System.Web.UI.Design.ResourceExpressionEditor> . So verwenden Sie das Beispiel:  
  
1.  Fügen Sie in einem Website Projekt dem App_GlobalResources Ordner eine neue Ressourcen Datei mit dem Namen Strings. resx hinzu.  
  
2.  Fügen Sie `myLinkText` der Ressourcen Datei "Strings. resx" eine Zeichenfolge mit dem Namen hinzu, und legen Sie den Wert auf den Text für ein Steuerelement fest <xref:System.Web.UI.WebControls.HyperLink> . Legen Sie beispielsweise den `myLinkText` Zeichen folgen Wert auf fest `This is a link` .  
  
3.  Fügen Sie auf einer ASP.NET-Webseite ein-Steuerelement hinzu <xref:System.Web.UI.WebControls.HyperLink> .  
  
4.  Klicken Sie im Eigenschaften Raster für das-Steuerelement auf `Hyperlink` **Ausdrücke**, und klicken Sie auf die Schaltfläche mit den Auslassungs Punkten (**...)** , um das Dialogfeld Ausdrucks Bindung anzuzeigen.  
  
5.  Wählen Sie die `Text` -Eigenschaft eines-Steuer Elements aus, und legen Sie **Expression Type** auf den Ausdruckstyp fest `Resources` . Der visuelle Designer zeigt die Eigenschaften des Ressourcen Ausdrucks an, die vom-Objekt definiert werden <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> .  
  
6.  Legen Sie die **Ausdrucks Eigenschaften** wie folgt fest:  
  
    -   Legen Sie **ClassKey** auf fest `Strings` , den Klassennamen für die kompilierte "Strings. resx"-Ressourcen Datei.  
  
    -   Legen Sie **ResourceKey** auf fest `myLinkText` , den Zeichen folgen Namen in Strings. resx.  
  
 Der visuelle Designer verwendet das- <xref:System.Web.UI.Design.ResourceExpressionEditor> Objekt, um den Ressourcen Ausdruck für die- `Text` Eigenschaft zuzuweisen. Die folgende ASPX-Quelle zeigt ein Beispiel für einen Eigenschafts Wert, der mithilfe eines Ressourcen Ausdrucks festgelegt wurde:  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As String, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ResourceExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ResourceExpressionEditorSheet" Usage="new System.Web.UI.Design.ResourceExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Ein Ressourcenausdruck, der zum Initialisieren des Ausdrucks-Editorblattes verwendet wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anfangs <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> -und <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> Eigenschaftswerte werden mithilfe der Eingabe `expression` Zeichenfolge festgelegt. Die- <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Eigenschaft wird mithilfe der Eingabe `serviceProvider` Implementierung festgelegt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="ClassKey">
      <MemberSignature Language="C#" Value="public string ClassKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClassKey : string with get, set" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel ab, der dem Dateinamen für die Ressource im globalen Ressourcenordner des Projekts entspricht, oder legt diesen fest.</summary>
        <value>Der Schlüssel für eine Ressourcendatei im globalen Ressourcenordner.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In befinden sich [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] globale Ressourcen Dateien im Ordner "App_GlobalResources".  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public override string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="override this.GetExpression : unit -&gt; string" Usage="resourceExpressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Ressourcenausdruck zurück, der aus den Eigenschaftswerten im Ausdrucks-Editorblatt gebildet wird.</summary>
        <returns>Die Zeichenfolge für den Ressourcenausdruck für die aktuellen Einstellungen im Blatt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zeichenfolge für den Ressourcenausdruck gültig ist.</summary>
        <value><see langword="true" />, wenn die Zeichenfolge für den Ressourcenausdruck gültig ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Basisimplementierung gibt immer `true` zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : string with get, set" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.ResourceExpressionEditorSheet/ResourceKeyTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.ResourceExpressionEditorSheet/ResourceKeyTypeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Ressource ab, der beim Suchen des Ressourcenwerts als Schlüssel verwendet wird, oder legt diesen fest.</summary>
        <value>Der Name der Ressource.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> Eigenschaft ist für einen Ressourcen Ausdruck erforderlich; Sie gibt den Namen der Ressource an. Der Name der Ressource wird zur Laufzeit und zur Entwurfszeit verwendet, um eine Ressource zu suchen und Sie einer Steuerelement Eigenschaft zuzuweisen.  
  
 Wenn z. b. die- <xref:System.Web.UI.WebControls.Label.Text%2A> Eigenschaft für ein <xref:System.Web.UI.WebControls.Label> Steuerelement dem Ressourcen Ausdruck zugewiesen wird `<%$ Resources:Strings, labelText $>` , wird der Ressourcen Ausdruck ausgewertet, und das <xref:System.Web.UI.WebControls.Label.Text%2A> Feld wird dem `labelText` Ressourcen Wert in der- `Strings` Klasse zugewiesen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
  </Members>
</Type>
