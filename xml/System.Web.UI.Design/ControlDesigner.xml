<Type Name="ControlDesigner" FullName="System.Web.UI.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dc2e65884a95292d84490f99ec898d5de3e7554" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37748374" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits HtmlControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::Web::UI::Design::HtmlControlDesigner" />
  <TypeSignature Language="F#" Value="type ControlDesigner = class&#xA;    inherit HtmlControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.HtmlControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a base control designer class for extending the design-mode behavior of a Web server control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner> -Klasse stellt eine Basisklasse für Steuerelement-Designer-Klasse, die vererbt werden kann und die zum Bereitstellen von entwurfszeitunterstützung für einen Webserver-Steuerelement in einem Entwurfshost, z. B. erweitert werden kann [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Das Objektmodell für das Arbeiten mit Design-Time Rendering ist gegenüber früheren Versionen, die mit den folgenden neuen Basisklassen Zugriff auf das vereinfachte Objektmodell verbessert:  
  
-   <xref:System.Web.UI.Design.ControlDesigner>, das ist nicht neu, jedoch wurde erheblich verbessert.  
  
-   <xref:System.Web.UI.Design.ContainerControlDesigner>  
  
-   <xref:System.Web.UI.Design.WebControls.CompositeControlDesigner>  
  
## <a name="automatic-formatting"></a>Automatische Formatierung  
 Sie können eine Vielzahl von automatischen und vordefinierte Formate erstellen, die den Prozess der Seitenentwickler vereinfachen können, die komplexe Formatänderungen auf benutzerdefinierten Webserver-Steuerelemente angewendet werden. Z. B. die <xref:System.Web.UI.Design.WebControls.TableDesigner> -Steuerelement, das von abgeleitet ist die <xref:System.Web.UI.Design.ControlDesigner> Klasse, bietet viele automatische Formate zur Auswahl stehen. Verwenden Sie zum Implementieren, und geben Sie die automatische Formatierung in Ihre benutzerdefinierten Steuerelemente, die folgenden Funktionen:  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A>-Eigenschaft  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A>-Methode.  
  
-   Der <xref:System.Web.UI.Design.DesignerAutoFormat>-Klasse.  
  
-   Der <xref:System.Web.UI.Design.DesignerAutoFormatStyle>-Klasse.  
  
## <a name="action-lists-smart-tags"></a>Aktion aufgeführt (Smart Tags)  
 Aktionslisten sind Menüs, der wichtige oder häufig verwendete Aufgaben, die ein Seitenentwickler, die ein Steuerelement verwendet, die in eine Entwurfszeit-Benutzeroberfläche (UI), ausführen kann, wie z. B. [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. Beispielsweise könnte der Entwurfszeitansicht des Steuerelements ein Menü der verfügbaren Aufgaben bereitstellen. Dies schließt einen Task, um das Steuerelement automatisch zu formatieren. Weitere Informationen zu Aktionslisten, starten Sie mit den folgenden Features:  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.ActionLists%2A>-Eigenschaft  
  
-   Der <xref:System.ComponentModel.Design.DesignerActionList>-Klasse.  
  
-   Die <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>-Methode.  
  
-   Der <xref:System.ComponentModel.Design.DesignerActionListCollection>-Klasse.  
  
-   Der <xref:System.ComponentModel.Design.DesignerActionMethodItem>-Klasse.  
  
-   Der <xref:System.ComponentModel.Design.DesignerActionPropertyItem>-Klasse.  
  
## <a name="control-designer-regions"></a>Steuerelement-Designer-Bereichen  
 Bereiche sind bearbeitbare Bereiche in der Ansicht zur Entwurfszeit von einem Webserver-Steuerelement. Dieses Feature bietet WYSIWYG-ähnliche Bearbeitung der Vorlageninhalt, innere Steuerelemente und Eigenschaften zur Entwurfszeit. Sie können den Steuerelement-Designer zum Erstellen von Steuerelementen in Regionen oder können Sie mithilfe der Toolbox ziehen und Ablegen von Steuerelementen in Bereiche. Regionen werden durch die folgenden Funktionen verwaltet:  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A>-Methode.  
  
-   Der <xref:System.Web.UI.Design.DesignerRegion>-Klasse.  
  
-   Der <xref:System.Web.UI.Design.EditableDesignerRegion>-Klasse.  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A>-Methode.  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A>-Methode.  
  
## <a name="templates"></a>Vorlagen  
 Das Modell zum Erstellen einer Benutzeroberfläche für die Entwurfszeit-Bearbeitung der Steuerelemente mit Vorlagen, wie z. B. die <xref:System.Web.UI.WebControls.GridView> steuern, wurde von früheren Versionen erheblich verbessert. Sie können komplexe benutzerdefinierte Steuerelemente, die Vorlagen für verschiedene Teile des Steuerelements enthalten erstellen, und Ihr benutzerdefiniertes Steuerelement-Designer können Seitenentwickler, die Vorlagen mit folgenden Funktionen ändern:  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A>-Eigenschaft  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A>-Eigenschaft  
  
-   Der <xref:System.Web.UI.Design.TemplateGroup>-Klasse.  
  
## <a name="design-time-rendering"></a>Während der Entwurfszeit-Rendering  
 Die <xref:System.Web.UI.Design.ControlDesigner> -Klasse verfügt über die folgenden Methoden zum Rendern der Webserver-Steuerelement zur Entwurfszeit unterstützen. Die meisten dieser Methoden sind die gleichen wie in früheren Versionen:  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>-Methode.  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A>-Methode.  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A>-Methode.  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>-Methode.  
  
-   Die <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie einen einfachen Designer-Klasse zu erstellen, die von abgeleitet der <xref:System.Web.UI.Design.ControlDesigner> Klasse. Dieses Steuerelement-Designer unterstützt eine benutzerdefinierte `TextControl` -Klasse und stellt einen Befehl für die Textgröße eines Steuerelements zur Entwurfszeit zu ändern. Der Steuerelement-Designer mit dem Steuerelement zugeordnet ist, durch Angabe des Steuerelement-Designers in einer <xref:System.ComponentModel.DesignerAttribute> Objektdeklaration auf die `TextControl` Klasse. Der Schlüssel zum Beibehalten von Änderungen von Eigenschaften aus der Steuerelement-Designer auf das HTML-Markup gefunden wird, der `ToggleTextSize` Methode des benutzerdefinierten `ActionList` Klasse.  
  
 Testen das Beispiel, fügen Sie einen Verweis auf die Assembly "System.Design.dll", und kompilieren Sie den Code.  
  
 [!code-csharp[ControlDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.cs#1)]
 [!code-vb[ControlDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.vb#1)]  
[!code-aspx-csharp[ControlDesignerSample#8](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.aspx#8)]
[!code-aspx-vb[ControlDesignerSample#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.aspx#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
    <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
    <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the action list collection for the control designer.</summary>
        <value>Ein <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />-Objekt, das die <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Elemente für den Steuerelement-Designer enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen eines einfachen zusammengesetzten Steuerelements mit einer <xref:System.Web.UI.WebControls.Label> und <xref:System.Web.UI.WebControls.TextBox> -Steuerelement, zusammen mit den Eigenschaften, die Text-Eigenschaften für beide internen Steuerelemente festlegen sowie die <xref:System.Web.UI.WebControls.WebControl.Width%2A> und <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> Eigenschaften der <xref:System.Web.UI.WebControls.TextBox> Steuerelement. Eine zugeordnete Steuerelement-Designer-Klasse erstellt drei <xref:System.ComponentModel.Design.DesignerActionMethodItem> Befehle, von denen jede zwei Eigenschaften des Steuerelements festgelegt und kann mit der Rückgängigfunktionalität des Entwurfshosts rückgängig gemacht werden.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Um ein benutzerdefiniertes Steuerelement in der Entwurfsansicht ein Aktionslistenmenü hinzugefügt haben, muss Ihre benutzerdefinierten Steuerelement-Designer überschreiben die <see cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" /> Eigenschaft, um ein benutzerdefiniertes Steuerelement-Klasse zurückzugeben, das von abgeleitet ist die <see cref="T:System.ComponentModel.Design.DesignerActionList" /> Klasse.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public virtual bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowResize : bool" Usage="System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control can be resized in the design-time environment.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement angepasst werden kann. andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Design.ControlDesigner.AllowResize%2A> -Eigenschaft in ein benutzerdefiniertes Steuerelement-Designer-Klasse.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> Eigenschaft.  
  
 [!code-csharp[DesignerTemplateGroupSample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#3)]
 [!code-vb[DesignerTemplateGroupSample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Verwenden der <see cref="P:System.Web.UI.Design.ControlDesigner.AllowResize" /> Eigenschaft in abgeleiteten Klassen zum Aktivieren oder Deaktivieren der Seitenentwickler Größenänderung von Ihr Steuerelement im Entwurfshost.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoFormats">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutoFormats As DesignerAutoFormatCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::DesignerAutoFormatCollection ^ AutoFormats { System::Web::UI::Design::DesignerAutoFormatCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AutoFormats : System.Web.UI.Design.DesignerAutoFormatCollection" Usage="System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormatCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of predefined automatic formatting schemes to display in the **Auto Format** dialog box for the associated control at design time.</summary>
        <value>Ein <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />-Objekt, das die vordefinierten Schemas für das Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine vollständige Webserver-Steuerelement enthält, nicht nur das Steuerelement, aber auch, ggf. ein entsprechendes Steuerelement-Designer-Klasse, die von abgeleitet ist die <xref:System.Web.UI.Design.ControlDesigner> -Klasse sowie ein, das von abgeleitet ist die <xref:System.Web.UI.Design.DesignerAutoFormat> Klasse. Die <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> Eigenschaft ist eine Sammlung von Instanzen der <xref:System.Web.UI.Design.DesignerAutoFormat> Klasse. Ein funktionsfähiges Beispiel für automatische Formatierung in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], finden Sie unter <xref:System.Web.UI.WebControls.Calendar>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Implementieren der <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> -Eigenschaft in einem benutzerdefinierten Steuerelement-Designer. Der abgeleitete Steuerelement-Designer implementiert die <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> Eigenschaft durch das Hinzufügen von drei Instanzen von einem benutzerdefinierten automatische Format, das von abgeleitet sind die <xref:System.Web.UI.Design.DesignerAutoFormat> Klasse.  
  
 [!code-csharp[DesignerAutoFormat#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerAutoFormat/CS/DesignerAutoFormat.cs#1)]
 [!code-vb[DesignerAutoFormat#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerAutoFormat/VB/DesignerAutoFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Steuerelemente, die automatisch AutoFormats verfügbar zu machen Hiermit eine Aufgabe und Kontextbefehle für die entsprechenden Formate. Wenn Sie automatische Formate verwenden, verwenden Sie die <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> Eigenschaft zum Festlegen der Eigenschaften in der Callback-Funktion.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateErrorDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates HTML markup to display an error message at design time.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="member this.CreateErrorDesignTimeHtml : string -&gt; string" Usage="controlDesigner.CreateErrorDesignTimeHtml errorMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The error message to include in the generated HTML markup.</param>
        <summary>Creates HTML markup to display a specified error message at design time.</summary>
        <returns>An HTML markup string that contains the specified error message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> Methode zum Erstellen von HTML-Markup für eine Fehlermeldung für ein Steuerelement zur Entwurfszeit anzuzeigen. Der Wert für `errorMessage` gibt eine lokalisierte Zeichenfolge, die der Benutzer des Steuerelements zur Entwurfszeit angezeigt wird.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner> Implementierung der Klasse die <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> Methode gibt eine Tabelle mit zwei Zeilen zurück, wie folgt:  
  
-   Die erste Zeile enthält, die Typnamen und einen Standortnamen für den <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> Eigenschaft der <xref:System.Web.UI.Design.ControlDesigner> Objekt.  
  
-   Die zweite Zeile enthält die Eingabe fehlermeldungs-Zeichenfolge.  
  
 Verwenden Sie zum Generieren von HTML-Markup für eine Fehlermeldung mit einer zugeordneten Ausnahme die <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%2CSystem.Exception%29> überladen. Verwenden Sie zum HTML-Markup für eine Ausnahme zu generieren, ohne eine lokalisierte Fehlermeldung der <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> Methode.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" /> Überladung ist zum Aufruf funktional äquivalent der <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> Methode, wobei e festgelegt <see langword="null" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String, e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage, Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.CreateErrorDesignTimeHtml : string * Exception -&gt; string" Usage="controlDesigner.CreateErrorDesignTimeHtml (errorMessage, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The error message to include in the generated HTML string.</param>
        <param name="e">The exception to include in the generated HTML string.</param>
        <summary>Creates the HTML markup to display a specified exception error message at design time.</summary>
        <returns>HTML markup that contains the specified <paramref name="errorMessage" /> and <paramref name="e" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> Methode, um einfache HTML-Markup bereitzustellen, die zum Anzeigen von Informationen über Fehler und Ausnahmen für ein Steuerelement zur Entwurfszeit verwendet werden kann. Der Wert für `errorMessage` gibt eine lokalisierte Zeichenfolge, die der Benutzer des Steuerelements zur Entwurfszeit angezeigt wird.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner> Implementierung der Klasse die <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> Methode gibt eine Tabelle mit zwei Zeilen zurück, wie folgt:  
  
-   Die erste Zeile enthält, die Typnamen und einen Standortnamen für den <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> Eigenschaft der <xref:System.Web.UI.Design.ControlDesigner> Objekt.  
  
-   Die zweite Zeile enthält die Fehlermeldung für die Eingabe und die <xref:System.Exception.Message%2A> Zeichenfolge, die der Ausnahme.  
  
 Verwenden Sie zum HTML-Markup für eine Fehlermeldung zu generieren, ohne eine Ausnahme der <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%29> überladen. Verwenden Sie zum HTML-Markup für eine Ausnahme zu generieren, ohne eine lokalisierte Fehlermeldung der <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> Methode.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> -Methode aufgerufen werden soll, aus der <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" /> oder <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> Methode, wenn Ausnahmen auftreten.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePlaceHolderDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
        <block subset="none" type="overrides">
          <para>Das typischen Entwurfsmuster besteht darin, HTML-Markup durch das zugeordnete Steuerelement, und rufen Sie dann, wenn ein Fehler auftritt, die <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> Methode. Wenn kein Markup durch das Steuerelement zurückgegeben wird, rufen Sie die <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> -Methode, die aufruft, wenn er nicht überschrieben wird, um bestimmte Markups, bieten die <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> -Methode, die Informationen über den Typ und die ID des Steuerelements enthalten soll.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="member this.CreatePlaceHolderDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.CreatePlaceHolderDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
        <returns>A string that contains design-time HTML markup providing basic information about the control.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Das typischen Entwurfsmuster besteht darin, HTML-Markup durch das zugeordnete Steuerelement, und rufen Sie dann, wenn ein Fehler auftritt, die <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> Methode. Wenn kein Markup durch das Steuerelement zurückgegeben wird, rufen Sie die <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> -Methode, die aufruft, wenn er nicht überschrieben wird, um bestimmte Markups, bieten die <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> -Methode, die Informationen über den Typ und die ID des Steuerelements enthalten soll.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml (string instruction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml(string instruction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml (instruction As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml(System::String ^ instruction);" />
      <MemberSignature Language="F#" Value="member this.CreatePlaceHolderDesignTimeHtml : string -&gt; string" Usage="controlDesigner.CreatePlaceHolderDesignTimeHtml instruction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instruction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instruction">A string that contains text and markup to add to the HTML output.</param>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control, and also additional specified instructions or information.</summary>
        <returns>A string that contains design-time HTML markup providing information about the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> -Methode in einem Steuerelement mit Vorlagen-Designer. Eine Zeichenfolge wird dann als übergeben die `instruction` Parameter in einem Aufruf der <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> -Methode, die das Entwurfszeit-HTML-Markup enthält.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> Eigenschaft.  
  
 [!code-csharp[DesignerTemplateGroupSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#4)]
 [!code-vb[DesignerTemplateGroupSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Das typischen Entwurfsmuster besteht darin, HTML-Markup durch das zugeordnete Steuerelement, und rufen Sie dann, wenn ein Fehler auftritt, die <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> Methode. Wenn kein Markup durch das Steuerelement zurückgegeben wird, rufen Sie die <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> -Methode, die aufruft, wenn er nicht überschrieben wird, um bestimmte Markups, bieten die <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> -Methode, die Informationen über den Typ und die ID des Steuerelements enthalten soll.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateViewControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateViewControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateViewControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateViewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateViewControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateViewControl();" />
      <MemberSignature Language="F#" Value="abstract member CreateViewControl : unit -&gt; System.Web.UI.Control&#xA;override this.CreateViewControl : unit -&gt; System.Web.UI.Control" Usage="controlDesigner.CreateViewControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
        <returns>A Web server control.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingsEnabled">
      <MemberSignature Language="C#" Value="protected virtual bool DataBindingsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBindingsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DataBindingsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DataBindingsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindingsEnabled : bool" Usage="System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether data binding is supported by the containing region for the associated control.</summary>
        <value>
          <see langword="true" />, wenn der Container für das Steuerelement die Datenbindung unterstützt andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesignerState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.ControlDesignerState DesignerState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.ControlDesignerState DesignerState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignerState As ControlDesignerState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::ControlDesignerState ^ DesignerState { System::Web::UI::Design::ControlDesignerState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerState : System.Web.UI.Design.ControlDesignerState" Usage="System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ControlDesignerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that is used to persist data for the associated control at design time.</summary>
        <value>Ein <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> -Eigenschaft, die implementiert <see cref="T:System.Collections.IDictionary" /> und verwendet die <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> Zustandsdaten für das zugeordnete Steuerelement zur Entwurfszeit beibehalten werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Werte für die <xref:System.Web.UI.Design.ControlDesigner.DesignerState%2A> -Eigenschaft beibehalten werden, auch wenn der Benutzer, die die Datenquellensicht, von der Entwurfsansicht wechselt oder lädt das Dokument oder schließt und erneut öffnet den Entwurfshost.  
  
 Sie können die abrufen und Festlegen der Werte in das zurückgegebene Objekt wie in ein IDictionary-Objekt, durch die Werte automatisch beibehalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeElementView">
      <MemberSignature Language="C#" Value="protected object DesignTimeElementView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DesignTimeElementView" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignTimeElementView As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ DesignTimeElementView { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeElementView : obj" Usage="System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Error: This property can no longer be referenced, and is included to support existing compiled applications. The design-time element view architecture is no longer used. http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the view-control object for the control designer.</summary>
        <value>
          <see langword="null" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ControlDesigner.DesignTimeElementView%2A> Eigenschaft ist veraltet, und es gibt keinen Ersatz für die Funktionalität.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeHtmlRequiresLoadComplete">
      <MemberSignature Language="C#" Value="public virtual bool DesignTimeHtmlRequiresLoadComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesignTimeHtmlRequiresLoadComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeHtmlRequiresLoadComplete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeHtmlRequiresLoadComplete : bool" Usage="System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SetViewFlags(ViewFlags.DesignTimeHtmlRequiresLoadComplete, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the design host must finish loading before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called.</summary>
        <value>
          <see langword="true" />, wenn beim Laden sein abschließen, bevor Sie muss die <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> Methode kann aufgerufen werden, andernfalls, <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die standardmäßige Implementierung der <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> -Eigenschaft gibt `false`.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A>-Eigenschaft ist veraltet. Verwenden der <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> Methode für die Funktionalität des entsprechenden Steuerelement-Designers.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.Rectangle" Usage="controlDesigner.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the coordinates of the rectangle representing the boundaries for the control as displayed on the design surface.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> object representing the boundaries for the control on the design surface relative to the control, not the document.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.DesignerRegion.GetBounds" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeHtml : unit -&gt; string&#xA;override this.GetDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.GetDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
        <returns>The HTML markup used to represent the control at design time.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> -Methode in einem benutzerdefinierten Steuerelement-Designer. Wenn die Text-Eigenschaft für das zugeordnete Steuerelement leer ist, ist die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Methodenaufrufe der <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> Methode. Andernfalls die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> -Methode erstellt und ein Hyperlink-Steuerelement rendert.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie ein benutzerdefiniertes Containersteuerelement erstellen, stellen Sie sicher, dass Sie das Steuerelement und alle untergeordneten Steuerelemente zur Entwurfszeit, unabhängig davon, ob Rendern der <see cref="P:System.Web.UI.Control.Visible" /> -Eigenschaftensatz auf <see langword="true" /> oder <see langword="false" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeHtml : System.Web.UI.Design.DesignerRegionCollection -&gt; string&#xA;override this.GetDesignTimeHtml : System.Web.UI.Design.DesignerRegionCollection -&gt; string" Usage="controlDesigner.GetDesignTimeHtml regions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">A collection of control designer regions for the associated control.</param>
        <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
        <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Entwurfshost ruft die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Methode, um das Entwurfszeit-HTML-Markup und die aktuelle Liste der Steuerelement-Designer-Bereichen abzurufen. Mithilfe der DesignerRegionCollection kann Entwurfshost klicken Sie dann das Markup für jede editierbaren Steuerelement-Designer-Bereich anfordern.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Methode wird für eine abgeleitete Steuerelement-Designer bereitgestellt, wie z. B. die <xref:System.Web.UI.Design.WebControls.GridViewDesigner> Klasse bereit, die den Inhalt des Bereichs vor dem Aufruf zu verarbeiten, muss die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen von HTML-Markup mithilfe der <xref:System.Web.UI.Design.DesignerRegionCollection> Auflistung.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#5)]
 [!code-vb[SimpleMultiRegionControlDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeResourceProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesignTimeResourceProviderFactory (serviceProvider As IServiceProvider) As DesignTimeResourceProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::DesignTimeResourceProviderFactory ^ GetDesignTimeResourceProviderFactory(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetDesignTimeResourceProviderFactory : IServiceProvider -&gt; System.Web.UI.Design.DesignTimeResourceProviderFactory" Usage="System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignTimeResourceProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object that can retrieve global and local services.</param>
        <summary>Returns an appropriate resource provider factory, depending on the globalization settings in the configuration file for the site.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object, if any are defined in the configuration file; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellt eine Ressourcenanbieterfactory, Ressourcenanbieter und Ressourcen-Writer, abhängig von den aktuellen Einstellungen im Abschnitt "system.web/globalization" der Konfigurationsdatei (entweder der Datei Machine.config oder Web.config-Dateien für globale und lokale Ressourcen ). Wenn keine globalisierungseinstellungen gefunden werden, die `serviceProvider` Parameter dient zum Erstellen einer <xref:System.Web.UI.Design.DesignTimeResourceProviderFactory> -Objekt unter Verwendung der Standardimplementierung für den Entwurfshost.  
  
 Entwickler von Steuerelementen werden in der Regel nicht überschreiben die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.ResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberSignature Language="F#" Value="abstract member GetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion -&gt; string&#xA;override this.GetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion -&gt; string" Usage="controlDesigner.GetEditableDesignerRegionContent region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object to get content for.</param>
        <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
        <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die standardmäßige Implementierung der <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> Methode gibt eine leere Zeichenfolge ("").  
  
 Abgeleitete Klassen von der <xref:System.Web.UI.Design.ControlDesigner> Klasse unterstützt, bereichsbasierte Bearbeitung auf der Entwurfsoberfläche angezeigt wird, und überschreiben die <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> Methode, um den Inhalt für eine bestimmte Region zurückzugeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie einen Verweis auf den Entwurfshost abgerufen wird und anschließend verwenden den Verweis zum Erstellen einer <xref:System.Web.UI.Design.ControlParser> -Objekt, das HTML-Markup erstellt `region` und seinen Inhalt.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#6)]
 [!code-vb[SimpleMultiRegionControlDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetEmptyDesignTimeHtml : unit -&gt; string&#xA;override this.GetEmptyDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.GetEmptyDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
        <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Standardverhalten der <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> Methode besteht darin, eine Zeichenfolge zurückzugeben, die den Namen der Komponente enthält. Die <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> -Methode aufgerufen werden soll, in der Implementierung der <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Methode, wenn kein Entwurfszeit-HTML-Markup vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> -Methode in einem benutzerdefinierten Steuerelement-Designer. Wenn die `Text` -Eigenschaft für das zugeordnete Steuerelement leer ist, wird die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Methodenaufrufe <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> Methode. Andernfalls die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> -Methode erstellt und rendert eine `Hyperlink` Steuerelement.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorDesignTimeHtml : Exception -&gt; string&#xA;override this.GetErrorDesignTimeHtml : Exception -&gt; string" Usage="controlDesigner.GetErrorDesignTimeHtml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">The exception that occurred.</param>
        <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
        <returns>The design-time HTML markup for the specified exception.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> Methode wird normalerweise aufgerufen, wenn eine Ausnahme, in ausgelöst wird der <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Generieren von Entwurfszeit-HTML-Markup für das Steuerelement, wenn ein Fehler auftritt, und rufen die <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> Methode.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/CS/LoginDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/VB/LoginDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Das typischen Entwurfsmuster besteht darin, HTML-Markup durch das zugeordnete Steuerelement, und rufen Sie dann, wenn ein Fehler auftritt, die <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> Methode. Wenn kein Markup durch das Steuerelement zurückgegeben wird, rufen Sie die <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> -Methode, die aufruft, wenn er nicht überschrieben wird, um bestimmte Markups, bieten die <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> -Methode, die Informationen über den Typ und die ID des Steuerelements enthalten soll.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public virtual string GetPersistenceContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistenceContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistenceContent () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistenceContent();" />
      <MemberSignature Language="F#" Value="abstract member GetPersistenceContent : unit -&gt; string&#xA;override this.GetPersistenceContent : unit -&gt; string" Usage="controlDesigner.GetPersistenceContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the persistable inner HTML markup of the control at design time.</summary>
        <returns>A string representing the persistable inner HTML markup for the associated control. The default is <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben der <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" /> Methode, um die benutzerdefinierte Behandlung von der inneren Inhalt Persistenz für den Entwurfshost bereitzustellen.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ControlPersister" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistInnerHtml">
      <MemberSignature Language="C#" Value="public virtual string GetPersistInnerHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistInnerHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistInnerHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistInnerHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetPersistInnerHtml : unit -&gt; string&#xA;override this.GetPersistInnerHtml : unit -&gt; string" Usage="controlDesigner.GetPersistInnerHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is GetPersistenceContent(). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the persistable inner HTML markup of the control.</summary>
        <returns>The persistable inner HTML markup of the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml%2A> -Methode ist veraltet. Verwenden der <xref:System.Web.UI.Design.ControlDesigner.GetPersistenceContent%2A> Methode für die Funktionalität des entsprechenden Steuerelement-Designers.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetViewRendering">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ViewRendering GetViewRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.Design.ViewRendering GetViewRendering() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewRendering () As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::Design::ViewRendering ^ GetViewRendering();" />
      <MemberSignature Language="F#" Value="member this.GetViewRendering : unit -&gt; System.Web.UI.Design.ViewRendering" Usage="controlDesigner.GetViewRendering " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="static member GetViewRendering : System.Web.UI.Control -&gt; System.Web.UI.Design.ViewRendering" Usage="System.Web.UI.Design.ControlDesigner.GetViewRendering control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Web.UI.Control" /> object.</param>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the specified control.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Design.ControlDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Design.ControlDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetViewRendering (designer As ControlDesigner) As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Design::ControlDesigner ^ designer);" />
      <MemberSignature Language="F#" Value="static member GetViewRendering : System.Web.UI.Design.ControlDesigner -&gt; System.Web.UI.Design.ViewRendering" Usage="System.Web.UI.Design.ControlDesigner.GetViewRendering designer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">A control designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control for the specified control designer.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="HidePropertiesInTemplateMode">
      <MemberSignature Language="C#" Value="protected internal virtual bool HidePropertiesInTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePropertiesInTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HidePropertiesInTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HidePropertiesInTemplateMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidePropertiesInTemplateMode : bool" Usage="System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the properties of the associated control are hidden when the control is in template mode.</summary>
        <value>
          <see langword="true" />, wenn die Eigenschaften des zugeordneten Steuerelements ausgeblendet werden, wenn das Steuerelement im Vorlagenmodus befindet andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die ID-Eigenschaft wird nie ausgeblendet. Die <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> -Methode verwendet die <xref:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode%2A> Eigenschaft, um zu bestimmen, ob die Eigenschaften, außer der ID-Eigenschaft, aus dem Eigenschaftenraster ausgeblendet werden soll, während das Steuerelement im Vorlagenbearbeitungsmodus befindet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.Design.ControlDesigner.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ID string for the control.</summary>
        <value>Die ID-Zeichenfolge für das Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.ID%2A> Eigenschaft wird intern verwendet, in der Steuerelement-Designer und für die Interaktion mit dem Fenster "Eigenschaften". Die <xref:System.Web.UI.Design.ControlDesigner.ID%2A> Eigenschaft führt Shadowing für die Laufzeit <xref:System.Web.UI.Control.ID%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="controlDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">The control being designed.</param>
        <summary>Initializes the control designer and loads the specified component.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> Methode wird aufgerufen, von der Entwurfshost die folgenden Aktionen ausführen:  
  
-   Laden Sie den Steuerelement-Designer mit der Komponente zu entwerfen.  
  
-   Richten Sie die Sicht auf das Steuerelement mithilfe der <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> Methode.  
  
-   Stellen Sie sicher, dass das zugeordnete Steuerelement den richtigen Typ ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mithilfe einer Steuerelement-Klasse und eine Steuerelement-Designer-Klasse, die außer Kraft setzen der <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> Methode, um die internen Variablen initialisieren.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InTemplateMode">
      <MemberSignature Language="C#" Value="protected bool InTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InTemplateMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InTemplateMode : bool" Usage="System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control is in either template viewing or editing mode in the design host. The <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> property is read-only.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement im Vorlagenanzeige-oder Vorlagenbearbeitungsmodus; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Webserver-Steuerelement ist im Vorlagenmodus, wenn gegenwärtig eine schreibgeschützte Vorlage angezeigt wird oder eine bearbeitbare Vorlage in einem Entwurfshost wie z. B. bearbeitet wird [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Die <xref:System.Web.UI.Design.ControlDesigner> -Klasse stellt den Standardwert <xref:System.Web.UI.Design.ViewEventHandler> zu aktualisierenden Objekts der <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A> Wert, wenn der Vorlagenmodus für das zugeordnete Steuerelement geändert wird. Benutzerdefinierte Designer zur Verfügung, die abgeleitet sind die <xref:System.Web.UI.Design.TemplatedControlDesigner> -Klasse überschreiben die <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> Methode, um die Durchführung weiterer Bearbeitungsvorgänge, wenn der Modus ändert für ein Steuerelement im Entwurfshost für die vorlagenbearbeitung.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
        <altmember cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invalidates the control as displayed on the design surface and causes the design host to call the <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen von <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> auch Methodenaufrufe <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="controlDesigner.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidates the whole area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Aktivieren des Steuerelement-Designers, Paint-Ereignisse behandeln die <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> -Methode in der die <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> Methode.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> Methode bietet den Entwurfshost eine Möglichkeit, die die Steuerelement-Designer das Steuerelement neu gezeichnet. Im Wesentlichen ist dies der gleiche wie das Aufrufen <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> -Methode, da er bewirkt, dass das gesamte Steuerelement neu gezeichnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="controlDesigner.Invalidate rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> object that represents the area to invalidate, relative to the upper-left corner of the control.</param>
        <summary>Invalidates the specified area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Aktivieren des Steuerelement-Designers, Paint-Ereignisse behandeln die <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> -Methode in der die <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> Methode.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> Methode bietet den Entwurfshost eine Möglichkeit, die die Steuerelement-Designer an einen bestimmten Teil des Steuerelements neu zu zeichnen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeTransactedChange">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (component, callback, context, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Implementierung der <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> Methode benachrichtigt den Entwurfshost, die vom bestimmt wird die <xref:System.Web.UI.Control.Site%2A> Eigenschaft `component`, die eine Änderung im zugeordneten Steuerelement stattfindet, wenn die Änderung nicht vom Entwurfshost, abgebrochen wird, ruft der angegebene `callback` unter Verwendung des angegebenen `context`, und klicken Sie anschließend benachrichtigt den Entwurfshost, dass die Änderung abgeschlossen wurde.  
  
 Wenn der Entwurfshost oder des zugeordneten Steuerelements eine statische auslöst `Canceled` Feld "Exception" von einer <xref:System.ComponentModel.Design.CheckoutException> Ausnahme, die Transaktion abgebrochen, ohne dass Aufrufen `callback`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen eines einfachen zusammengesetzten Steuerelements mit einer <xref:System.Web.UI.WebControls.Label> und eine <xref:System.Web.UI.WebControls.TextBox> -Steuerelement, zusammen mit den Eigenschaften den Bezeichnungstext festlegen sowie die <xref:System.Web.UI.WebControls.TextBox.Text%2A>, <xref:System.Web.UI.WebControls.WebControl.Width%2A>, und <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> Eigenschaften die <xref:System.Web.UI.WebControls.TextBox> Steuerelement. Eine zugeordnete Steuerelement-Designer-Klasse erstellt drei <xref:System.ComponentModel.Design.DesignerActionMethodItem> -Befehle, von denen jede zwei Eigenschaften des Steuerelements festlegt. Mithilfe der <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> -Methode können Sie der Rückgängigfunktionalität des Entwurfshosts, z. B. [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], Rollback für jede abgeschlossene Transaktion als Einheit.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.CheckoutException" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (component, callback, context, description, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically, either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Implementierung von der <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> Methode benachrichtigt den Entwurfshost, die vom bestimmt wird die <xref:System.Web.UI.Control.Site%2A> Eigenschaft `component`, die eine Änderung auftritt, mit dem angegebenen `member` (Eigenschaft oder Methode) des zugeordneten Steuerelements und, falls die Änderung vom Entwurfshost nicht abgebrochen wird, ruft die angegebene `callback` unter Verwendung des angegebenen `context` als Argument, und klicken Sie anschließend benachrichtigt den Entwurfshost, dass die Änderung abgeschlossen wurde.  
  
 Wenn der Entwurfshost oder das zugeordnete Steuerelement eine statische löst `Canceled` Feld "Exception" von einer <xref:System.ComponentModel.Design.CheckoutException> Ausnahme, die Transaktion abgebrochen, ohne dass Aufrufen `callback`.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%28System.ComponentModel.IComponent%2CSystem.Web.UI.Design.TransactedChangeCallback%2CSystem.Object%2CSystem.String%29>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (IServiceProvider serviceProvider, System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.IServiceProvider serviceProvider, class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (serviceProvider As IServiceProvider, component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(IServiceProvider ^ serviceProvider, System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : IServiceProvider * System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (serviceProvider, component, callback, context, description, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object representing the design host that provides control designer services for the associated control.</param>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Implementierung von der <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> Methode benachrichtigt den Entwurfshost, der durch dargestellt wird `serviceProvider`, die eine Änderung auftritt, mit dem angegebenen `member` (Eigenschaft oder Methode) des zugeordneten Steuerelements und, wenn die Änderung nicht, durch abgebrochen wird die Entwerfen von Host, ruft die angegebene `callback` unter Verwendung des angegebenen `context` als Argument, und benachrichtigt dem Entwurfshost, dass die Änderung abgeschlossen wurde.  
  
 Wenn der Entwurfshost oder des zugeordneten Steuerelements eine statische auslöst `Canceled` Feld "Exception" von einer <xref:System.ComponentModel.Design.CheckoutException> Ausnahme, die Transaktion abgebrochen, ohne dass Aufrufen `callback`.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.  -or-  <paramref name="serviceProvider" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to use Tag.SetDirty() and Tag.IsDirty. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the Web server control has been marked as changed.</summary>
        <value>
          <see langword="true" />, wenn das Webserver-Steuerelement geändert wurde, seit dem letzten persistent gespeichert oder geladen. andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ControlDesigner.IsDirty%2A>-Eigenschaft ist veraltet. Verwenden der <xref:System.Web.UI.Design.IControlDesignerTag.IsDirty%2A> Eigenschaft und die <xref:System.Web.UI.Design.IControlDesignerTag.SetDirty%2A> Methode für die <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> -Eigenschaft für die Funktionalität des entsprechenden Steuerelement-Designers.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" />
        <altmember cref="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="IsPropertyBound">
      <MemberSignature Language="C#" Value="public bool IsPropertyBound (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPropertyBound(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPropertyBound (propName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPropertyBound(System::String ^ propName);" />
      <MemberSignature Language="F#" Value="member this.IsPropertyBound : string -&gt; bool" Usage="controlDesigner.IsPropertyBound propName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is DataBindings.Contains(string). The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">The property to test for data binding.</param>
        <summary>Retrieves a value indicating whether the specified property on the associated control is data-bound.</summary>
        <returns>
          <see langword="true" />, if the property is data-bound; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ControlDesigner.IsPropertyBound%2A> -Methode ist veraltet. Verwenden der <xref:System.Web.UI.DataBindingCollection.Contains%2A> Methode für die <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> -Eigenschaft für die Funktionalität des entsprechenden Steuerelement-Designers.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBindingCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public void Localize (System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Localize(class System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Localize (resourceWriter As IDesignTimeResourceWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Localize(System::Web::UI::Design::IDesignTimeResourceWriter ^ resourceWriter);" />
      <MemberSignature Language="F#" Value="member this.Localize : System.Web.UI.Design.IDesignTimeResourceWriter -&gt; unit" Usage="controlDesigner.Localize resourceWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceWriter" Type="System.Web.UI.Design.IDesignTimeResourceWriter" />
      </Parameters>
      <Docs>
        <param name="resourceWriter">An object derived from the <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> object that is used to write resources into the design-time response stream.</param>
        <summary>Uses the provided resource writer to persist the localizable properties of the associated control to a resource in the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> Methode wird aufgerufen, vom Entwurfshost zum Erstellen von Ressourceneinträgen für jede Eigenschaft, die mit einem <xref:System.ComponentModel.LocalizableAttribute> -Objekt und alle Eigenschaften, die einen expliziten Ressourcenausdruck als Wert verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoFormatApplied">
      <MemberSignature Language="C#" Value="public virtual void OnAutoFormatApplied (System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAutoFormatApplied(class System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAutoFormatApplied (appliedAutoFormat As DesignerAutoFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAutoFormatApplied(System::Web::UI::Design::DesignerAutoFormat ^ appliedAutoFormat);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoFormatApplied : System.Web.UI.Design.DesignerAutoFormat -&gt; unit&#xA;override this.OnAutoFormatApplied : System.Web.UI.Design.DesignerAutoFormat -&gt; unit" Usage="controlDesigner.OnAutoFormatApplied appliedAutoFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appliedAutoFormat" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
        <summary>Called when a predefined, automatic formatting scheme has been applied to the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> Methode wird aufgerufen, nachdem eine <xref:System.Web.UI.Design.DesignerAutoFormat> Objekt verfügt über ein vordefiniertes Format auf das zugeordnete Steuerelement angewendet. Ein <xref:System.Web.UI.Design.DesignerAutoFormat> Objekt definiert die automatische Formatierungen Schema namens und des Stils von Einstellungen, die auf das Steuerelement angewendet werden.  
  
 Abgeleitete Klassen von der <xref:System.Web.UI.Design.ControlDesigner> Klasse außer Kraft setzen der <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> Methode, um die Durchführung weiterer Bearbeitungsvorgänge, wenn ein Schema für die automatische Formatierung auf das zugeordnete Steuerelement angewendet wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
      </Docs>
    </Member>
    <Member MemberName="OnBehaviorAttached">
      <MemberSignature Language="C#" Value="protected override void OnBehaviorAttached ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBehaviorAttached() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnBehaviorAttached" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBehaviorAttached ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBehaviorAttached();" />
      <MemberSignature Language="F#" Value="override this.OnBehaviorAttached : unit -&gt; unit" Usage="controlDesigner.OnBehaviorAttached " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingsCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingsCollectionChanged (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingsCollectionChanged(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingsCollectionChanged (propName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingsCollectionChanged(System::String ^ propName);" />
      <MemberSignature Language="F#" Value="override this.OnBindingsCollectionChanged : string -&gt; unit" Usage="controlDesigner.OnBindingsCollectionChanged propName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to handle the Changed event on the DataBindings collection. The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">The property to test for changes in its bindings collection.</param>
        <summary>Called when the data-binding collection changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> Methode wird aufgerufen, wenn von einem externen Anrufer die datenbindungsauflistung geändert wurde.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> -Methode ist veraltet. Verwenden der <xref:System.Web.UI.DataBindingCollection.Changed> Ereignis auf der <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> Auflistung für die Funktionalität des entsprechenden Steuerelement-Designers.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.DataBindingCollection.Changed" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.Design.DesignerRegionMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.Design.DesignerRegionMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::Design::DesignerRegionMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : System.Web.UI.Design.DesignerRegionMouseEventArgs -&gt; unit&#xA;override this.OnClick : System.Web.UI.Design.DesignerRegionMouseEventArgs -&gt; unit" Usage="controlDesigner.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.Design.DesignerRegionMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> object that specifies the location and, possibly, the control designer region that the user clicked.</param>
        <summary>Called by the design host when the user clicks the associated control at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> Ereignis wird vom Entwurfshost für bestimmte Aktionen für ein Steuerelement auf der Entwurfsoberfläche ausgelöst. Beispielsweise wird ein Ereignis für die folgenden Bedingungen ausgelöst:  
  
-   Der Benutzer auf das Steuerelement klickt.  
  
-   Die Steuerelement-Designer zeichnet auf der Entwurfsoberfläche angezeigt.  
  
-   Vom Benutzer eingegebenen oder Vorlagenbearbeitungsmodus für das Steuerelement verlässt.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner> -Klasse stellt ein Delegat standardmäßig behandelt der <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> Ereignis. Abgeleitete Klassen von <xref:System.Web.UI.Design.ControlDesigner> außer Kraft setzen der <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> Methode zum Verarbeiten von Ereignissen, die ausgelöst werden, wenn der Benutzer ein Steuerelement klickt.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> -Methode ermöglicht es abgeleitete Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 Die standardmäßige Implementierung der <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> Methode gibt zurück, ohne dass eine Verarbeitung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit einem Handler für die <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> Ereignis in einen klickbaren Bereich des Steuerelements und die Verwendung einer <xref:System.Web.UI.Design.DesignerRegionMouseEventArgs> Objekt, mit die Region angegeben, auf die geklickt wird.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Design.EditableDesignerRegion> Klasse.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben der <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> Methode in einer Klasse, die von der <see cref="T:System.Web.UI.Design.ControlDesigner" /> -Klasse zur Verarbeitung von Entwurfszeit-click-Ereignisse für das Steuerelement. Wenn <paramref name="e" /> ist nicht, Bereich, auf die geklickt wurde, null, wenn vorhanden, wird angegeben, der <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" /> Eigenschaft.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanged (sender As Object, ce As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ ce);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit&#xA;override this.OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="controlDesigner.OnComponentChanged (sender, ce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source of the event.</param>
        <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
        <summary>Called when the associated control changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> Methode wird aufgerufen, wenn eine Eigenschaft für das zugeordnete Steuerelement geändert wird. Dadurch kann die Implementierung Verarbeitungsvorgänge ausführen, die nach dem Ändern einer Eigenschaft erforderlich sein können. Aufrufen der <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> Methode bewirkt, dass der Entwurfshost zum Aufrufen der <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Methode. Die basisimplementierung für die <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> Methode speichert auch das Steuerelement im Markup Seite.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben der <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> Methode, um zusätzliche Verarbeitung, bevor Sie beibehalten des Steuerelements und aktualisiert das Entwurfszeit-HTML-Markup bereitzustellen.  Beim Überschreiben der <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> -Methode in einer abgeleiteten Klasse, stellen Sie sicher, dass Sie beim Aufrufen der <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanging (object sender, System.ComponentModel.Design.ComponentChangingEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object sender, class System.ComponentModel.Design.ComponentChangingEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanging (sender As Object, ce As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanging(System::Object ^ sender, System::ComponentModel::Design::ComponentChangingEventArgs ^ ce);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : obj * System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit&#xA;override this.OnComponentChanging : obj * System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit" Usage="controlDesigner.OnComponentChanging (sender, ce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The object that is the source of the event.</param>
        <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
        <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event for the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn entweder die <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> oder <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> -Methode aufgerufen wird, die <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> Ereignis tritt auf, bevor Änderungen, auf das zugeordnete Steuerelement vorgenommen werden. Nachdem die Änderungen abgeschlossen sind die <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> Methode auftritt.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnControlResize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlResize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnControlResize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlResize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlResize();" />
      <MemberSignature Language="F#" Value="abstract member OnControlResize : unit -&gt; unit&#xA;override this.OnControlResize : unit -&gt; unit" Usage="controlDesigner.OnControlResize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is OnComponentChanged(). OnComponentChanged is called when any property of the control is changed. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the associated Web server control has been resized in the design host at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> -Methode ist veraltet. Verwenden der <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> Methode für die Funktionalität des entsprechenden Steuerelement-Designers.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> Methode wird in der Regel nur von der während der Entwurfszeit-Umgebung aufgerufen, wenn eine Benutzeraktion bewirkt, dass das zugeordnete Websteuerelement Server geändert werden kann. Die <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> Methode kann mehrmals aufgerufen werden, um die aktualisierte Größe des Steuerelements anzuzeigen, bevor die Größenänderung abgeschlossen ist bei einer Größenänderung von Fenstern annimmt. Die Eigenschaften für Breite und Höhe des Steuerelements werden aktualisiert, bevor die <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> Methode wird aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="controlDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> object that specifies the graphics and rectangle boundaries used to draw the control.</param>
        <summary>Called when the control designer draws the associated control on the design surface, if the <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> value is <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> Ereignis wird vom Entwurfshost für bestimmte Aktionen für ein Steuerelement auf der Entwurfsoberfläche ausgelöst. Beispielsweise wird ein Ereignis für die folgenden Bedingungen ausgelöst:  
  
-   Der Benutzer auf das Steuerelement klickt.  
  
-   Das Design Host Anforderungen HTML-Markup zum Rendern des zugeordneten Steuerelements auf der Entwurfsoberfläche angezeigt.  
  
-   Vom Benutzer eingegebenen oder Vorlagenbearbeitungsmodus für das Steuerelement verlässt.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner> -Klasse stellt ein Delegat standardmäßig behandelt der <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> Ereignis. Abgeleitete Klassen von <xref:System.Web.UI.Design.ControlDesigner> sollten Festlegen der <xref:System.Web.UI.Design.ViewFlags.CustomPaint?displayProperty=nameWithType> Wert ein, und überschreiben Sie die <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> Methode zum Verarbeiten von Ereignissen, die ausgelöst werden, wenn der Entwurfshost das Steuerelement auf der Entwurfsoberfläche zeichnet.  
  
 Die <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> -Methode ermöglicht es abgeleitete Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 Die standardmäßige Implementierung der <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> Methode gibt zurück, ohne dass eine Verarbeitung.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben der <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> Methode in einer Klasse, die von der <see cref="T:System.Web.UI.Design.ControlDesigner" /> -Klasse zur Verarbeitung von Paint-Ereignisse für ein Steuerelement auf der Entwurfsoberfläche. Das Ereignis tritt jedoch nur, wenn die <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> Wert festgelegt wurde, mit der <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> Methode.</para>
        </block>
        <altmember cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.IControlDesignerView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">The properties for the class of the component.</param>
        <summary>Adds properties to or removes properties from the Properties grid in a design host at design time or provides new design-time properties that might correspond to properties on the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> -Methode, Sie können Elemente hinzufügen, auf das Wörterbuch von Eigenschaften, die über ein Steuerelement-Designer verfügbar gemachten eine <xref:System.ComponentModel.TypeDescriptor> Objekt.  
  
 Der Schlüssel im Wörterbuch der Eigenschaften sind die Namen der Eigenschaften. Die Objekte sind vom Typ <xref:System.ComponentModel.PropertyDescriptor>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sie können direkt ändern, das Wörterbuch, das über den Eigenschaftenparameter zugegriffen werden kann, oder Sie können diese unverändert belassen. Wenn Sie außer Kraft setzen der <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> -Methode die basisimplementierung aufrufen, bevor Sie Ihre eigenen Filtern ausführen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseResizeEvent">
      <MemberSignature Language="C#" Value="public void RaiseResizeEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseResizeEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseResizeEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseResizeEvent();" />
      <MemberSignature Language="F#" Value="member this.RaiseResizeEvent : unit -&gt; unit" Usage="controlDesigner.RaiseResizeEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because resizing is handled by the OnComponentChanged() method. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent%2A> -Methode ist veraltet, und es gibt keinen Ersatz für diese Funktion.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to inherit from ContainerControlDesigner instead and to use an EditableDesignerRegion. Regions allow for better control of the content in the designer. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the properties of the control are read-only at design time.</summary>
        <value>
          <see langword="true" />, wenn die Eigenschaften des Steuerelements zur Entwurfszeit schreibgeschützt sind andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner> -Klasse ist schreibgeschützt, naturgemäß. Lese-/Schreibzugriff-Funktionen werden bereitgestellt, durch das Hinzufügen einer <xref:System.Web.UI.Design.DesignerRegion> Objekt oder die Verwendung von Basisklassen wie z. B. die <xref:System.Web.UI.Design.ContainerControlDesigner> Klasse.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Design.ControlDesigner.ReadOnly%2A>-Eigenschaft ist veraltet. Leiten Sie von der <xref:System.Web.UI.Design.ContainerControlDesigner> Klasse, die Sie bearbeitbare-Designer-Bereichen hinzufügen können, oder die <xref:System.Web.UI.Design.TemplatedControlDesigner> -Objekt, können Sie bearbeitbare Designerbereiche in Vorlagen erstellen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClone">
      <MemberSignature Language="C#" Value="public void RegisterClone (object original, object clone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClone(object original, object clone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClone (original As Object, clone As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClone(System::Object ^ original, System::Object ^ clone);" />
      <MemberSignature Language="F#" Value="member this.RegisterClone : obj * obj -&gt; unit" Usage="controlDesigner.RegisterClone (original, clone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Object" />
        <Parameter Name="clone" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="original">The control associated with the control designer.</param>
        <param name="clone">The cloned copy of the associated control.</param>
        <summary>Registers internal data in a cloned control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Klonen eines Elements ist, gibt es möglicherweise einige interne Datenstrukturen, z. B. `meta:` Attribute, die vom Steuerelement-Designer in der geklonten Steuerelement enthalten sein sollten. Seitenentwickler kann hinzufügen `meta:` Attribute, die dem Markup für ein Steuerelement, und es gibt keine Möglichkeit, noch gibt es ein Grund für das Steuerelement, zu unterscheiden, was diese Tags sein könnte. Aus diesem Grund, wenn der Steuerelement-Designer eine Möglichkeit zum Bearbeiten von komplexen Eigenschaften oder Formaten vor dem Anwenden von Änderungen auf einer Seite bereitstellt, Sie erstellen einen Klon des Steuerelements, sowohl das ursprüngliche Steuerelement und den Klon an diese übergeben <xref:System.Web.UI.Design.ControlDesigner.RegisterClone%2A> -Methode, und klicken Sie dann, wenn die Änderungen in den RFID-Transponder beibehalten alle `meta:` Attribute werden ebenfalls beibehalten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="original" /> is null.  -or-  <paramref name="clone" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.WebFormsRootDesigner RootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.WebFormsRootDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RootDesigner As WebFormsRootDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::WebFormsRootDesigner ^ RootDesigner { System::Web::UI::Design::WebFormsRootDesigner ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootDesigner : System.Web.UI.Design.WebFormsRootDesigner" Usage="System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.WebFormsRootDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the control designer for the Web Forms page that contains the associated control.</summary>
        <value>Ein <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> -Objekt, das zur Entwurfszeit auf Komponenten auf Web Forms-Seite verwendet werden kann, die das Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> Eigenschaft darstellt, den Steuerelement-Designer für die Web Forms-Seite, die das Steuerelement enthält. Verwenden der <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> Eigenschaft zugreifen und diese mit Web Forms-Seite zur Entwurfszeit zu bearbeiten.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberSignature Language="F#" Value="abstract member SetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit&#xA;override this.SetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit" Usage="controlDesigner.SetEditableDesignerRegionContent (region, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">An editable design region contained within the control.</param>
        <param name="content">The content to assign for the editable design region.</param>
        <summary>Specifies the content for an editable region of the control at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abgeleitete Klassen von der <xref:System.Web.UI.Design.ControlDesigner> Klasse unterstützt, bereichsbasierte Bearbeitung auf der Entwurfsoberfläche angezeigt wird, und überschreiben die <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> Methode, um den Inhalt für eine bestimmte Region festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie einen Verweis auf den Entwurfshost abgerufen wird und anschließend verwenden den Verweis zum Erstellen einer <xref:System.Web.UI.Design.ControlParser> -Objekt, das aktiviert `content` in eine Instanz von der <xref:System.Web.UI.ITemplate> -Schnittstelle und weist die <xref:System.Web.UI.ITemplate> -Instanz, auf die entsprechende Ansicht.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#7](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#7)]
 [!code-vb[SimpleMultiRegionControlDesigner#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="SetRegionContent">
      <MemberSignature Language="C#" Value="protected void SetRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberSignature Language="F#" Value="member this.SetRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit" Usage="controlDesigner.SetRegionContent (region, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">An editable design region contained within the design-time view of the control.</param>
        <param name="content">The content to assign for the editable design region.</param>
        <summary>Specifies the content for an editable region in the design-time view of the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel die <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> Methode wird nicht in einem abgeleiteten Designer überschrieben. Die Basisklasse der Klasse bewirkt, dass der Entwurfshost zum Aufrufen der <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> Methode für die Region. Überschreiben der <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> Methode, wenn die benutzerdefinierte Daten für das Steuerelement vor dem Aufruf erforderlich ist <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> Methode.  
  
 Verwenden der <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> Methode zum Einfügen von HTML-Markup in einem Bereich des Steuerelements.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="SetViewFlags">
      <MemberSignature Language="C#" Value="protected void SetViewFlags (System.Web.UI.Design.ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetViewFlags(valuetype System.Web.UI.Design.ViewFlags viewFlags, bool setFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetViewFlags(System::Web::UI::Design::ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="F#" Value="member this.SetViewFlags : System.Web.UI.Design.ViewFlags * bool -&gt; unit" Usage="controlDesigner.SetViewFlags (viewFlags, setFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewFlags" Type="System.Web.UI.Design.ViewFlags" />
        <Parameter Name="setFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewFlags">A <see cref="T:System.Web.UI.Design.ViewFlags" /> value.</param>
        <param name="setFlag">
          <see langword="true" /> to set the flag, <see langword="false" /> to remove the flag.</param>
        <summary>Assigns the specified bitwise <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration to the specified flag value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es gibt mehrere Flags, die festgelegt werden können. Beispielsweise verwenden die <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> Methode zum Festlegen der <xref:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete> Wert des aktuellen <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> -Eigenschaft für den Steuerelement-Designer, anstelle der veralteten <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> Methode, um anzugeben, dass die Vorlage befindet sich im Bearbeitungsmodus befindet.  
  
 [!code-csharp[DesignerTemplateGroupSample#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#5)]
 [!code-vb[DesignerTemplateGroupSample#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.IControlDesignerTag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.IControlDesignerTag Tag" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Tag As IControlDesignerTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::IControlDesignerTag ^ Tag { System::Web::UI::Design::IControlDesignerTag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tag : System.Web.UI.Design.IControlDesignerTag" Usage="System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IControlDesignerTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object representing the HTML markup element for the associated control.</summary>
        <value>Ein <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> -Objekt, das HTML-Markupelement für das zugeordnete Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel die <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> -Eigenschaft wird nur für die Kommunikation zwischen den Entwurfshost und den Steuerelement-Designer verwendet und wird nicht von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IControlDesignerTag" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplateGroups : System.Web.UI.Design.TemplateGroupCollection" Usage="System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
        <value>Eine Auflistung von <see cref="T:System.Web.UI.Design.TemplateGroup" />-Objekten. Standard ist eine leere <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Steuerelement-Designer-Klasse zu erstellen, die von abgeleitet der <xref:System.Web.UI.Design.ControlDesigner> Klasse. Dieses Steuerelement-Designer unterstützt ein Steuerelement mit vier möglichen Vorlagen.  
  
 Um dies auszuprobieren, kompilieren Sie den Code, und zeigen Sie dann in einem Entwurfshost wie z. B. [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], zeigen Sie die Seite in der Entwurfsansicht. Wählen Sie das Steuerelement, klicken Sie auf der Liste der Aktion zum Auswählen einer Vorlage ändern und dann verwenden Sie die Drag & Drop-Funktion zum Verschieben von Steuerelementen in die Vorlage.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sie können die <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> Auflistung direkt, oder Sie können diese unverändert belassen. Wenn Sie außer Kraft gesetzt werden die <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> -Eigenschaft, die basisimplementierung aufrufen, bevor Sie Gruppen von Vorlagen zur Auflistung hinzufügen.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual void UpdateDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateDesignTimeHtml ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member UpdateDesignTimeHtml : unit -&gt; unit&#xA;override this.UpdateDesignTimeHtml : unit -&gt; unit" Usage="controlDesigner.UpdateDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Refreshes the design-time HTML markup for the associated Web server control by calling the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> Methode wird aufgerufen, indem der Entwurfshost die Anzeige des zugeordneten Webserversteuerelements zur Entwurfszeit, z. B. wenn das Steuerelement geändert wurde. Ein Steuerelement-Designer kann auch aufrufen, die <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> Methode nach dem Ändern von Werten des Steuerelements, das die Anzeige des Steuerelements zu aktualisieren.  
  
> [!NOTE]
>  Beim Aufrufen der <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> Ereignis oder über die <xref:System.ComponentModel.PropertyDescriptor> Objekt zum Festlegen von Eigenschaften, die <xref:System.ComponentModel.Design.IComponentChangeService> Schnittstelle Aufrufen der <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> -Methode für Sie.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht die Vorgehensweise zum Reagieren auf eine `Click` Ereignis in einem Steuerelement-Designer den Fokus zwischen Regionen, in einem Steuerelement mit mehreren Regionen ändern, und Verwenden der <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> Methode, um die Darstellung des Steuerelements im Entwurfshost zu aktualisieren.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.Design.EditableDesignerRegion> Klasse.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected virtual bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsePreviewControl : bool" Usage="System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
        <value>
          <see langword="true" />, wenn der Steuerelement-Designer eine temporäre Kopie des Steuerelements für die Vorschau zur Entwurfszeit verwendet. Andernfalls <see langword="false" />, wenn der Steuerelement-Designer die <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" />-Eigenschaft für das Steuerelement im Steuerelement-Designer verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> Eigenschaft `true`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> Eigenschaft gibt eine temporäre Kopie des Steuerelements zurück. Änderungen auf das temporäre Steuerelement werden nicht auf das Dokument beibehalten.  
  
 Wenn die <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> -Eigenschaft ist `false`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> Eigenschaft gibt eine Instanz des der <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> Eigenschaft für das Steuerelement. Änderungen an der Instanz des Steuerelements werden beibehalten.  
  
 Die <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> festlegen in der <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> Objekt dient zum Festlegen des Werts, der die <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> Eigenschaft. Aus diesem Grund die <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> Einstellung bestimmt den Typ des Steuerelements, die von zurückgegeben wird das <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> Eigenschaft in der Basisklasse <xref:System.Web.UI.Design.ControlDesigner> Klasse. Wenn die <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> in die Steuerelement-Designer-Deklaration nicht angegeben ist die <xref:System.Web.UI.Design.ControlDesigner> Objektverhalten entspricht dem Angeben der <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> Eigenschaft als `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Benutzerdefinierte Designer zur Verfügung, die abgeleitet sind die <see cref="T:System.Web.UI.Design.ControlDesigner" /> -Klasse überschreiben die <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> Eigenschaft und ignorieren Sie die <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> Objekt. In der Regel an, dass die <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> Eigenschaft gibt immer eine temporäre Kopie des Steuerelements ist, überschreiben die <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> immer für zurückzugebende Eigenschaft <see langword="true" />. Gibt an, dass die <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> Eigenschaft gibt immer eine Instanz des Steuerelements, überschreiben die <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> immer für zurückzugebende Eigenschaft <see langword="false" />. Z. B. die <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> Klasse leitet sich von der <see cref="T:System.Web.UI.Design.ControlDesigner" /> und gibt immer <see langword="true" /> für die <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> Eigenschaft.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ViewControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ViewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ViewControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewControl : System.Web.UI.Control with get, set" Usage="System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Web server control that can be used for previewing the design-time HTML markup.</summary>
        <value>Ein <see cref="T:System.Web.UI.Control" /> Objekt, das von der Basisklasse verwendet wird, um während der Entwurfszeit-HTML-Markup zu generieren.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> Eigenschaft verwendet die <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> Eigenschaft, um dessen Rückgabewert zu bestimmen.  
  
 Wenn die <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> Eigenschaft `true`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> Eigenschaft gibt eine temporäre Kopie des Steuerelements zurück. Änderungen auf das temporäre Steuerelement werden nicht beibehalten.  
  
 Wenn die <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> -Eigenschaft ist `false`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> Eigenschaft gibt eine Instanz des der <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> Eigenschaft für das Steuerelement. Änderungen an der Instanz des Steuerelements werden beibehalten.  
  
 Die <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> festlegen in der <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> Objekt dient zum Festlegen des Werts, der die <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> Eigenschaft. Aus diesem Grund die <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> Einstellung bestimmt den Typ des Steuerelements, die von zurückgegeben wird das <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> Eigenschaft in der Basisklasse <xref:System.Web.UI.Design.ControlDesigner> Klasse. Wenn die <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> in die Steuerelement-Designer-Deklaration nicht angegeben ist die <xref:System.Web.UI.Design.ControlDesigner> Objektverhalten entspricht dem Angeben der <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> Eigenschaft als `false`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Markieren von einem Steuerelement-Designer mit der <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> Attribut. Im Codebeispiel wird abgeleitet von einem Webserver-Steuerelement die <xref:System.Web.UI.WebControls.Label> -Klasse und ordnet das Steuerelement ein benutzerdefiniertes Steuerelement-Designer-Implementierung. Die Deklaration der Steuerelement-Designer-Klasse ist mit markiert die `SupportsPreviewControl` -Attributsatz auf `true`. Überschreibt der Steuerelement-Designer die <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> -Methode, und dann die <xref:System.Web.UI.WebControls.Label.Text%2A> -Eigenschaft des Steuerelements in Kursivschrift zur Entwurfszeit.  
  
 [!code-csharp[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/CS/supportspreviewdesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/VB/supportspreviewdesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControlCreated">
      <MemberSignature Language="C#" Value="public virtual bool ViewControlCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewControlCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewControlCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ViewControlCreated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ViewControlCreated : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether a <see langword="View" /> control has been created for display on the design surface.</summary>
        <value>
          <see langword="true" />, wenn ein Steuerelement für die Anzeige auf der Entwurfsoberfläche erstellt wurde andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="protected virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool" Usage="System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the control is visible at design time.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>