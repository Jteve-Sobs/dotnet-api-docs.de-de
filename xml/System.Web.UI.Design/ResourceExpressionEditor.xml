<Type Name="ResourceExpressionEditor" FullName="System.Web.UI.Design.ResourceExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3f88cd4a35d98f239679fa969616c0ddfce0785" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70579381" /></Metadata><TypeSignature Language="C#" Value="public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Eigenschaften und Methoden bereit, um einen Ressourcenausdruck zur Entwurfszeit auszuwerten und zu bearbeiten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ResourceExpressionEditor> -Klasse wird von <xref:System.Web.UI.Design.ExpressionEditor> der-Klasse abgeleitet und stellt eine Implementierung zum Auswerten und Zuordnen eines Ressourcen Verweises zu einer Steuerelement Eigenschaft zur Entwurfszeit bereit. Beispielsweise können Sie den Wert einer Steuerelement Eigenschaft an den Ressourcen Ausdruck `Resources:submitText`binden, der angibt, dass der Wert der Steuerelement Eigenschaft mithilfe der Ressource namens `submitText`festgelegt wird.  
  
 Ein visueller Designer Host, wie z [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. b. <xref:System.Web.UI.Design.ResourceExpressionEditor> , verwendet die-Klasse, um eine Ressourcen Klasse, einen Schlüssel und einen Designer Standardwert für einen Ressourcen Ausdruck anzugeben, und wertet dann den ausgewählten Ressourcen Ausdruck für das Rendering zur Entwurfszeit aus.  
  
 Wenn Sie die <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> -Eigenschaft für ein Steuerelement im Raster Entwurfszeit Eigenschaften durchsuchen, zeigt der visuelle Designer ein Dialogfeld an, in dem Ausdrücke festgelegt werden können, die den Lauf Zeitwert für eine Steuerelement Eigenschaft bereitstellen. Sie können den Ausdruckstyp basierend auf einer Liste von Ausdrucks Präfixen auswählen. Wenn Sie das **Ressourcen** Ausdrucks Präfix in der Liste auswählen, verwendet der visuelle Designer <xref:System.Web.UI.Design.ResourceExpressionEditor> die-Methoden, um den Ausdruck basierend auf der Syntax des Ressourcen Ausdrucks festzulegen, auszuwerten und zu konvertieren. Der visuelle Designer verwendet das ausgewertete Ausdrucks Ergebnis, um Steuerelement Eigenschaftswerte zuzuweisen, die auf der Entwurfs Oberfläche gerendert werden.  
  
 Die Basis <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=nameWithType> Eigenschaft für einen <xref:System.Web.Compilation.ResourceExpressionBuilder> gibt die Zeichen `Resources`Folge zurück. Die <xref:System.Web.Compilation.ResourceExpressionBuilder> -Klasse ist dem Ausdrucks Präfix `Resources` und der <xref:System.Web.UI.Design.ResourceExpressionEditor> -Implementierung zugeordnet.  
  
 Die <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> -Methode wertet einen Eingabe Ressourcen Ausdruck aus. Die <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> -Methode gibt <xref:System.Web.UI.Design.ExpressionEditorSheet> die-Implementierung zurück, die verwendet wird, um den Ressourcennamen, die Klasse und den Standardwert des Designers auszuwählen und einen Ressourcen Ausdruck aus den ausgewählten Ressourcen Werten zu bilden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.HyperLink.Text%2A> -Eigenschaft <xref:System.Web.UI.WebControls.HyperLink> eines-Steuer Elements mithilfe der <xref:System.Web.UI.Design.ResourceExpressionEditor> -Klasse an einen Ressourcen Ausdruck gebunden wird.  
  
1.  Fügen Sie in einem Web Forms Projekt dem Verzeichnis App_LocalResources eine neue Ressourcen Datei mit dem Namen Strings. resx hinzu.  
  
2.  Fügen Sie der Strings. resx-Ressourcen Datei eine Zeichenfolge mit dem Namen myLinkText hinzu, und legen Sie dann den <xref:System.Web.UI.WebControls.HyperLink> Wert auf den Text für ein Steuerelement fest.  
  
     Legen Sie beispielsweise den `myLinkText` Zeichen folgen Wert `This is a good link`auf fest.  
  
3.  Fügen Sie auf einer Web Forms Seite ein <xref:System.Web.UI.WebControls.HyperLink> -Steuerelement hinzu.  
  
4.  Klicken Sie `Hyperlink` für das-Steuerelement in Eigenschaften auf **Ausdrücke**, und klicken Sie dann auf die Schaltfläche mit den Auslassungs Punkten (**...**).  
  
     Das `<Hyperlinkname>`Dialogfeld **Ausdrücke** wird angezeigt.  
  
5.  Klicken Sie unter **bindbare Eigenschaften**auf **Text**, und geben Sie dann in der Liste **Ausdruckstyp** den Wert **Ressourcen**ein.  
  
     Die von der <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> -Klasse definierten Ressourcen Ausdrucks Eigenschaften werden angezeigt.  
  
6.  Legen Sie unter **Ausdrucks Eigenschaften** **className** **auf Zeichen**folgen fest. Dies ist der Klassenname für die kompilierte Strings. resx-Ressourcen Datei, und legen Sie **ResourceKey** auf **myLinkText**fest. Dies ist der Zeichen folgen Name in Strings. resx.  
  
 Der visuelle Designer verwendet das <xref:System.Web.UI.Design.ResourceExpressionEditor> , um den Ressourcen Ausdruck für die `Text` -Eigenschaft zuzuweisen. Die folgende ASPX-Quelle zeigt ein Beispiel für einen Eigenschafts Wert, der mithilfe eines Ressourcen Ausdrucks festgelegt wird.  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.Design.ResourceExpressionEditor> -Objekt wird von der-Basisklasse mit einer <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> -Eigenschaft konfiguriert `Resources`, die auf festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="resourceExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Ein auszuwertender Ressourcenausdruck. <paramref name="expression" /> enthält das <see langword="Resources" />-Ausdruckspräfix nicht.</param>
        <param name="parseTimeData">Ein Objekt, das zusätzliche Analysedaten in Form eines <see cref="T:System.Web.Compilation.ResourceExpressionFields" />-Werts bereitstellt.</param>
        <param name="propertyType">Der Typ der Steuerelementeigenschaft.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung zur Beschaffung zusätzlicher Entwurfszeitdienste.</param>
        <summary>Wertet einen Ressourcenausdruck aus und stellt den Entwurfszeitwert für eine Steuerelementeigenschaft bereit.</summary>
        <returns>Das Objekt, auf das durch die ausgewertete Ausdruckszeichenfolge verwiesen wird, sofern der Ausdruck ausgewertet werden konnte, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> -Methode sucht die Ressource, die von `expression`angegeben wird, und gibt dann die Ressource zurück.  
  
 Der visuelle Designer wertet mithilfe <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> der-Methode einen Ressourcen Ausdruck aus und stellt den Entwurfs Zeitwert für eine zugeordnete Steuerelement Eigenschaft bereit. Zur Laufzeit verwendet der Seiten Parser die <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> -Methode und die-Methode der entsprechenden <xref:System.Web.Compilation.ResourceExpressionBuilder> - <xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A> Implementierung, um einen Ausdruck auszuwerten und den Lauf Zeitwert für eine zugeordnete Steuerelement Eigenschaft bereitzustellen.  
  
 Der visuelle Designer verwendet die <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> -Methode, um die Ausdrucks Zeichenfolge zur Entwurfszeit zu analysieren, <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> und ruft dann die-Methode mit den analysierten Ausdrucks Daten auf.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionFields" />
        <altmember cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="resourceExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Ein Ressourcenausdruck, der zum Initialisieren des Ausdrucks-Editorblattes verwendet wird.</param>
        <param name="serviceProvider">Eine vom Designerhost bereitgestellte Dienstanbieterimplementierung für das Initialisieren des Ausdrucks-Editorblattes.</param>
        <summary>Gibt ein Editorblatt für einen Ressourcenausdruck zurück, das mit der Eingabezeichenfolge für den Ausdruck und der Implementierung des Dienstanbieters initialisiert ist.</summary>
        <returns>Ein <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />, das die Eigenschaften des Ressourcenausdrucks definiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> -Methode gibt die Implementierung eines Ausdrucks-Editor Blatts für Ressourcen Ausdrücke zurück. Der visuelle Designer Host verwendet das Ausdrucks-Editor Blatt im Dialogfeld Ausdrücke.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
  </Members>
</Type>
