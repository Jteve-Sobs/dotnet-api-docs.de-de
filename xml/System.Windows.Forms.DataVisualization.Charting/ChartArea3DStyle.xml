<Type Name="ChartArea3DStyle" FullName="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="45bdbecf0936216b1ecc0e8760c982efa13779a4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36360621" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChartArea3DStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartArea3DStyle extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartArea3DStyle" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartArea3DStyle" />
  <TypeSignature Language="F#" Value="type ChartArea3DStyle = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet die Anzeigeattribute für dreidimensionale Diagrammbereiche (3D-Diagrammbereiche).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt die Formate für 3D-Diagrammbereiche bereit und wird verfügbar gemacht, mit der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> Eigenschaft.  
  
 Legen Sie zum Aktivieren von 3D für eine Diagrammfläche die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Enable3D%2A> Eigenschaft `true`. Dies bewirkt, dass 3D auf alle Datenreihen, die in einer Diagrammfläche gezeichnet angewendet werden soll.  
  
 Isometrische Projektion einer Diagrammfläche angezeigt werden kann, indem die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A> Eigenschaft `true`, dies ist die Standardeinstellung. Isometrische Sichten sind nicht tatsächlich 3D, da die angezeigten Winkel der Drehung möglicherweise nicht die tatsächlichen Winkel der Drehung um die horizontalen und vertikalen Achsen übereinstimmen. Die tatsächlichen Winkel gesteuert werden, mithilfe der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination%2A> Eigenschaften bzw.  
  
 Weitere Informationen über isometrische Projektionen finden Sie im Abschnitt "Hinweise" der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A> Eigenschaft.  
  
 Sie können auch diese Klasse zu verwenden:  
  
-   Cluster Balken- und Spaltendaten Diagramm Reihen mit dem <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsClustered%2A> Eigenschaft.  
  
-   Steuern der Beleuchtungseffekte, die mithilfe der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.LightStyle%2A> Eigenschaft.  
  
-   Legen Sie die Breite von diagrammflächenwänden mithilfe der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.WallWidth%2A> Eigenschaft.  
  
-   Festlegen des Zeitraums Perspektive mit dem <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Perspective%2A> Eigenschaft.  
  
-   Steuern Sie die Tiefe von Datenpunkten und die Entfernung zwischen Datenzeilen mithilfe der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth%2A> Eigenschaften bzw.  
  
-   Drehen Sie ein Diagramm mithilfe der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation%2A> Eigenschaften.  
  
 Verwenden Sie zum Arbeiten mit den Koordinaten des 3D der <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> Klasse.  
  
 Wenn ein Diagramm in 3D festgelegt ist, sind die folgenden Diagrammfunktionen nicht gültig:  
  
-   Skalierungsunterbrechungen  
  
-   Farbverläufe  
  
-   Durchführen eines Bildlaufs und Zoomen  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChartArea3DStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChartArea3DStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChartArea3DStyle (System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.#ctor(System.Windows.Forms.DataVisualization.Charting.ChartArea)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChartArea3DStyle(System::Windows::Forms::DataVisualization::Charting::ChartArea ^ chartArea);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle : System.Windows.Forms.DataVisualization.Charting.ChartArea -&gt; System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" Usage="new System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle chartArea" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chartArea" Type="System.Windows.Forms.DataVisualization.Charting.ChartArea" />
      </Parameters>
      <Docs>
        <param name="chartArea">Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" />-Objekt, das für die Initialisierung verwendet wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" />-Klasse mit dem <paramref name="chartArea" />-Parameter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable3D">
      <MemberSignature Language="C#" Value="public bool Enable3D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable3D" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Enable3D" />
      <MemberSignature Language="VB.NET" Value="Public Property Enable3D As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable3D { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enable3D : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Enable3D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das 3D für einen Diagrammbereich aktiviert bzw. deaktiviert, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn der Diagrammbereich mit 3D angezeigt wird, <see langword="false" />, wenn der Diagrammbereich in 2D angezeigt wird. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Schaltet die dreidimensionale Anzeige einer Diagrammfläche.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inclination">
      <MemberSignature Language="C#" Value="public int Inclination { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Inclination" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination" />
      <MemberSignature Language="VB.NET" Value="Public Property Inclination As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Inclination { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Inclination : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft für 3D-Diagrammbereiche den Winkel der Drehung um die horizontalen Achsen ab oder legt diesen fest.</summary>
        <value>Ein <see langword="integer" />, der für 3D-Diagrammbereiche den Winkel der Drehung um die horizontalen Achsen darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public bool IsClustered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClustered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsClustered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsClustered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClustered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsClustered : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsClustered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob Datenreihen für ein Balken- oder Säulendiagramm gruppiert, d. h. in unterschiedlichen Zeilen angezeigt werden, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn Datenreihen für ein Balken- oder Säulendiagramm gruppiert werden, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRightAngleAxes">
      <MemberSignature Language="C#" Value="public bool IsRightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRightAngleAxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightAngleAxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsRightAngleAxes : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob ein Diagrammbereich mit einer isometrischen Projektion angezeigt wird, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn der Diagrammbereich mit einer isometrischen Projektion angezeigt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isometrische Sichten sind nicht tatsächlich 3D, da die angezeigten Winkel der Drehung möglicherweise nicht die tatsächlichen Winkel der Drehung um die horizontalen und vertikalen Achsen übereinstimmen. Die tatsächlichen Winkel gesteuert werden, mithilfe der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination%2A> Eigenschaften bzw.  
  
 Beachten Sie die folgenden Punkte zur isometrischen Projektion:  
  
-   Es ist nicht "real" 3D. Das heißt, verwenden nicht der Winkel der Drehung um Achsen "true" rotierenden Winkel.  
  
-   Es eignet sich zum Anzeigen von 3D-Diagrammen mit einigen Tiefe.  
  
-   Wenn Ihre Anwendung die Möglichkeit zum Drehen Sie die Diagramme erlaubt, ist die Drehung smooth nicht. In diesem Fall wird die Verwendung von isometrischen Ansichten nicht empfohlen.  
  
-   Mit Isometrie wird die Sicht nicht unterstützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LightStyle LightStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LightStyle LightStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.LightStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LightStyle As LightStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LightStyle LightStyle { System::Windows::Forms::DataVisualization::Charting::LightStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LightStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LightStyle : System.Windows.Forms.DataVisualization.Charting.LightStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.LightStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LightStyle), "Simplistic")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LightStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil der Beleuchtung für einen 3D-Diagrammbereich ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.LightStyle" />-Enumerationswert, der den Stil der Beleuchtung für einen 3D-Diagrammbereich angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Perspective" />
      <MemberSignature Language="VB.NET" Value="Public Property Perspective As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Perspective { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Perspective : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Perspective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Prozentsatz der Perspektive für einen 3D-Diagrammbereich ab oder legt diesen fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der den Prozentsatz der Perspektive für einen 3D-Diagrammbereich darstellt. Der zulässige Bereich ist 0-100 Prozent, und der Standardwert ist 0 (null) Prozent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine perspektivische Projektion für eine beliebige Anzahl von parallelen Linien, die nicht parallel zur Projektion sind zusammengeführt wird, um einen Punkt.  
  
 Wenn Sie festlegen, die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Perspective%2A> -Eigenschaft, die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A> Eigenschaft wird automatisch festgelegt werden, um `false`, weil diese Eigenschaften gegenseitig.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointDepth">
      <MemberSignature Language="C#" Value="public int PointDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointDepth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property PointDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PointDepth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Tiefe der in einem 3D-Diagrammbereich angezeigten Datenpunkte ab oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der die Tiefe von Datenpunkten darstellt. Der zulässige Bereich ist 0-1000 Prozent. Der Standardwert ist 100 Prozent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt die Tiefe von Datenpunkten und wird als Prozentsatz der Datenpunktbreite dargestellt.  
  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth%2A> Eigenschaft kann angewendet werden auf der Tiefe von Balken-, Säulen-, Linien-, Kreis- und Spline Diagrammdaten nur verweist. Wenn Sie diese Eigenschaft für andere Diagrammtypen (z. B. Blase und zeigen Sie Diagramme), die ihre Punkttiefen festlegen "gestreckt" aufweisen kann, wird zusätzlichen Speicherplatz für die Datenpunkte reservieren, aber erhöht sich nicht auf deren Tiefe.  
  
 Sie können das Diagramm als isometrische Projektion anzeigen, durch Festlegen der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A> Eigenschaft `true`, dies ist der Standardwert. Dies bewirkt, dass die Punkttiefe mehr oder weniger als der von dieser Eigenschaft, abhängig von der diagrammfilters festgelegte Prozentsatz sein.  
  
 Um den Abstand zwischen den Zeilen der Daten zu steuern, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointGapDepth">
      <MemberSignature Language="C#" Value="public int PointGapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointGapDepth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property PointGapDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointGapDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PointGapDepth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Entfernung zwischen Reihenzeilen in einem 3D-Diagrammbereich ab oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der die Entfernung zwischen Datenzeilen (Datenreihen) im 3D-Diagrammbereich darstellt. Der zulässige Bereich ist 0-1000 Prozent, und der Standardwert ist 100 Prozent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt die Distanz zwischen Datenzeilen mit einer Datenreihe entspricht jede Zeile. Die Maßeinheit wird als Prozentsatz der Entfernung zwischen Datenpunkten in einer Zeile angegeben.  
  
 Ändern den Abstand zwischen Säulen oder Balken für Spalte und Balkendiagramm mit der `PointWidth` benutzerdefinierte Eigenschaft wirkt sich auf die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth%2A> Eigenschaftswert.  
  
 Legen Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A> Eigenschaft `true` (Standardwert) um das Diagramm als isometrische Projektion anzuzeigen. Dadurch wird die punktzwischenraum angezeigt werden, um mehr oder weniger als der Prozentsatz, der von dieser Eigenschaft, abhängig von der diagrammfilters festgelegt werden.  
  
 Um die Tiefe der Datenpunkte zu steuern, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public int Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rotation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rotation : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft für 3D-Diagrammbereiche den Winkel der Drehung um die vertikalen Achsen ab oder legt diesen fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der für 3D-Diagrammbereiche den Winkel der Drehung um die vertikalen Achsen darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WallWidth">
      <MemberSignature Language="C#" Value="public int WallWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WallWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.WallWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property WallWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WallWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WallWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.WallWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite der in einem 3D-Diagrammbereich angezeigten Wände ab oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />-Wert, der die Breite in Pixel der in einem 3D-Diagrammbereich angezeigten Wände darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt die Breite der Wände (z. B. die Rückwand, Seitenwände usw.), die in 3D-Diagrammflächen angezeigt werden. Der zulässige Bereich ist 0 und 30 Pixel.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>