<Type Name="Grid" FullName="System.Windows.Forms.DataVisualization.Charting.Grid">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba81731e6b1cd0e57e2ad047d19b4f6197fe81ea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629654" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Grid" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Grid extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Grid" />
  <TypeSignature Language="VB.NET" Value="Public Class Grid" />
  <TypeSignature Language="C++ CLI" Value="public ref class Grid" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Methoden und Eigenschaften zum Verwalten der Haupt- und Hilfsraster von <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" />-Objekten bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt die Funktionalität für das Raster im Diagramm bereit und wird verfügbar gemacht, mit der <xref:System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid%2A> Eigenschaften jedes <xref:System.Windows.Forms.DataVisualization.Charting.Axis> Objekt.  
  
 Hauptrasterlinien standardmäßig verfügen nicht über ihre <xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>, und <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> festgelegten Eigenschaften. Wenn diese Eigenschaften für Hauptrasterlinien nicht festgelegt werden, die <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Steuerelement die entsprechenden Werte für Rasterlinien automatisch bestimmt.  
  
 Die Achse und ihre Hilfsrasterlinien standardmäßig haben ihre <xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>, und <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> Eigenschaften festlegen, um **Auto** (0). Wenn achsenbezeichnungen oder Hilfsgitternetzlinien aktiviert sind, und diese Eigenschaften nicht geändert werden werden, die <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Steuerelement automatisch bestimmt, wie oft die Hilfsgitternetzlinien gezeichnet werden soll.  
  
 Achse-Raster:  
  
-   Aktiviert oder deaktiviert werden können.  
  
-   Haben Sie einen Ausgangspunkt, der bestimmt, wo sie zuerst gezeichnet werden.  
  
-   Anzeigen von Zeilen, die für die Art, Breite und Farbe festgelegt werden können.  
  
-   Können Sie entweder Automatische Intervalle oder, die manuell festgelegt werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Grid.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grid();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das bestimmt, ob Haupt- oder Hilfsrasterlinien aktiviert sind, oder legt dieses fest.</summary>
        <value>
          <see langword="True" />, wenn aktiviert, <see langword="false" />, wenn deaktiviert. Der Standardwert ist <see langword="true" /> für Hauptrasterobjekte und <see langword="false" /> für Hilfsrasterobjekte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Haupt- und Nebenversionsnummern Raster sind sichtbar, wenn aktiviert und nicht sichtbar, wenn deaktiviert.  
  
 Teilstriche werden nicht angezeigt werden, wenn deaktiviert.  
  
 Sie können die Teilstriche deaktivieren, indem die <xref:System.Windows.Forms.DataVisualization.Charting.TickMark.TickMarkStyle%2A> Eigenschaft <xref:System.Windows.Forms.DataVisualization.Charting.TickMarkStyle.None>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Intervall zwischen Haupt- bzw. Hilfsrasterlinien ab oder legt dieses fest.</summary>
        <value>Ein <see langword="double" />-Wert, der das Intervall zwischen Rasterlinien darstellt. Für Hauptrasterlinien ist der Wert standardmäßig nicht festgelegt (<see cref="F:System.Double.NaN" />). Für Hilfsrasterlinien ist der Standardwert 0 (null).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig ist diese Eigenschaft nicht für achsenbezeichnungen "," Hauptteilstriche "und" Hauptrasterlinien festgelegt. Wenn sie nicht festgelegt ist – entweder explizit mithilfe der standardmäßig <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> zur Entwurfszeit oder durch Zuweisen eines Werts von <xref:System.Double.NaN> zur Laufzeit – der tatsächliche Wert dieser Eigenschaft richtet sich nach der <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> Eigenschaft der <xref:System.Windows.Forms.DataVisualization.Charting.Axis> Objekt, mit dem das Diagramm Element, wie z. B. ein Raster oder ein Teilstrich Markierung gehört.  
  
 Das Intervall für Hilfsteilstriche und Rasterlinien ist nie betroffen von dem <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> Eigenschaftswert.  
  
 Das Intervall in Achseneinheiten gemessen wird, und bestimmt, wie oft ein anwendbares Diagrammelement gezeichnet wird. Nehmen wir beispielsweise an, ein Säulendiagramm hat ein achsenschritt X 1 (d. h. 1, 2, 3, 4, usw.); Wenn Sie festlegen, die <xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Interval%2A> Eigenschaft für die x-Achse auf 2, wird eine Bezeichnung für jede andere Spalte angezeigt werden.  
  
 Das gleiche gilt für alle anwendbaren Diagrammelemente. Mit anderen Worten, wenn im vorherigen Beispiel Band Linien verwendet wurden, mit einer <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A> von 0,5 und ihre <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> -Eigenschaft 2 war, würde ein Bereichsstreifen auf 0,5, 2.5, 4.5 und So weiter angezeigt werden.  
  
 Wenn Sie festlegen, dass ein Diagrammelement `Interval` -Eigenschaft auf 0 (null), ein Intervall wird automatisch durch bestimmt die <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Offset von Rasterlinien ab oder legt diesen fest.</summary>
        <value>Ein <see langword="double" />-Wert, der den Intervalloffset darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig ist diese Eigenschaft nicht für achsenbezeichnungen "," Hauptteilstriche "und" Hauptrasterlinien festgelegt. Wenn sie nicht festgelegt ist – standardmäßig, indem zur Entwurfszeit explizit angeben "Nicht konfiguriert" oder durch Zuweisen eines Werts von <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> zur Laufzeit – der tatsächliche Wert dieser Eigenschaft richtet sich nach der <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> Eigenschaft der <xref:System.Windows.Forms.DataVisualization.Charting.Axis> Objekt, mit im Diagramm Element, z. B. eine Rasterlinie oder eines Teilstrichs angehört.  
  
 Der Intervalloffset Hilfsteilstriche und Rasterlinien ist nie den Wert des betroffen der <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> Eigenschaft von der <xref:System.Windows.Forms.DataVisualization.Charting.Axis> Objekt.  
  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> Einstellung der Eigenschaft definiert die Maßeinheiten für den Offset.  
  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A> kann kein negativer Wert sein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Intervalloffsettyp von Haupt- und Hilfsrasterlinien ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" />-Enumerationswert, der den Intervalltyp angibt. Standardmäßig ist er für Hauptrasterlinien nicht festgelegt. Der Standardwert für Hilfsrasterlinien ist <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig ist diese Eigenschaft nicht für achsenbezeichnungen "," Hauptteilstriche "und" Hauptrasterlinien festgelegt. Wenn sie nicht festgelegt ist – standardmäßig, indem zur Entwurfszeit explizit angeben "Nicht konfiguriert" oder durch Zuweisen eines Werts von <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> zur Laufzeit – der tatsächliche Wert dieser Eigenschaft richtet sich nach der <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> Eigenschaft der <xref:System.Windows.Forms.DataVisualization.Charting.Axis> Objekt, mit im Diagramm Element – eine Rasterlinie oder ein Teilstrich z. B. – gehört.  
  
 Intervalloffsettyp der Hilfsteilstriche und Rasterlinien ist nie betroffen von dem <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> Eigenschaftswert.  
  
 Wenn dieser Intervalloffsettyp wird festgelegt, um <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>die <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> Eigenschaft verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Intervalltyp für Haupt- oder Hilfsrasterlinien ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" />-Enumerationswert, der den Intervalltyp angibt. Für Achsenbezeichnungen, Hauptteilstriche und Hauptrasterlinien wird er standardmäßig mit dem <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet" />-Enumerationswert nicht festgelegt. Der Standardwert für Hilfsteilstriche und -rasterlinien ist <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig ist diese Eigenschaft nicht für achsenbezeichnungen "," Hauptteilstriche "und" Hauptrasterlinien festgelegt. Wenn sie nicht festgelegt ist – standardmäßig, explizit zur Entwurfszeit mit "Nicht konfiguriert" oder durch Zuweisen eines Werts von <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> zur Laufzeit – der tatsächliche Wert dieser Eigenschaft richtet sich nach der <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> Eigenschaft von der <xref:System.Windows.Forms.DataVisualization.Charting.Axis> Objekt, mit das Diagrammelement – eine Rasterlinie oder ein Teilstrich z. B. – gehört.  
  
 Der Intervalltyp der Hilfsteilstriche und Rasterlinien wird nie durch den Wert des beeinflusst die <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType%2A> Eigenschaft.  
  
 Intervalltypen festgelegt werden können, um <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto>; der Typ des Intervalls dann abhängig ist, auf der x- oder Y-Werten der gezeichneten <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> Objekte, je nachdem welche Achse die betreffenden Elemente gehören.  
  
 Festlegen der <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> -Eigenschaft für eine Wertachse haben nur Auswirkungen, wenn die Werte der Datenpunkte sind <xref:System.DateTime> oder `double` Werte. Darüber hinaus die <xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A> oder <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> Eigenschaft der gezeichneten <xref:System.Windows.Forms.DataVisualization.Charting.Series> muss festgelegt werden, um <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto> oder <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>.  
  
 Festlegen der <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> -Eigenschaft für eine Kategorieachse hat nur eine Auswirkung, wenn die <xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A> Eigenschaft (oder <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> -Eigenschaft, abhängig von der betreffenden Achse) der gezeichneten <xref:System.Windows.Forms.DataVisualization.Charting.Series> Objekt ist entweder <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto> oder <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>.  
  
> [!NOTE]
>  Sonntag, gilt der erste Tag der Woche.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Linienfarbe eines Rasters ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Objekt. Der Standardwert ist <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineColor%2A> Eigenschaft wird verwendet, um die Farbe der Haupt-und Hilfsteilstriche oder Rastern anzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Linienstil eines Rasters ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" />-Enumerationswert. Der Standardwert ist <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle.Solid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle%2A> Eigenschaft kann verwendet werden, um die Linienart des Haupt-und Hilfsteilstriche oder Rastern angeben. Die Zeile kann einfarbig, gepunktet usw. sein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Linienstärke von Haupt- und Hilfsrasterlinien ab oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />, der die Linienstärke in Pixel darstellt. Der Standardwert ist 1 (eins).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth%2A> Eigenschaft kann verwendet werden, um die Linienstärke des Haupt-und Hilfsteilstriche oder Rastern in Pixel angeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>