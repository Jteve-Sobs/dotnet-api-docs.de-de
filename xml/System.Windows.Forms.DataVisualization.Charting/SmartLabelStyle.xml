<Type Name="SmartLabelStyle" FullName="System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2bf1cbd10c28521cd5bd158e23182e4c8927e079" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629804" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SmartLabelStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmartLabelStyle extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class SmartLabelStyle" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmartLabelStyle" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Methoden und Eigenschaften für die intelligente, regelbasierte Positionierung von Datenpunktbezeichnungen bereit, um Probleme bei überlappenden Datenpunktbezeichnungen zu lösen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn SmartLabels aktiviert sind, werden im Diagramm überlappende datenpunktbezeichnungen basierend auf einem Satz von benutzerdefinierten Regeln neu angeordnet.  
  
 Legendenlinien werden zum Verknüpfen der Bezeichnung mit seiner Datenpunkt gezeichnet werden soll. Der visuellen Attribute der Legendenlinie können gesteuert werden. Diese visuellen Attribute enthalten die Linienart, Farbe und Linienstärke. Die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutStyle%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineAnchorCapStyle%2A> Eigenschaften steuern die Ornamente, z. B. Pfeilspitzen, die am Ende der Legendenlinie angezeigt werden.  
  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineColor%2A> Eigenschaft kann festgelegt werden, um alle <xref:System.Drawing.Color> Objekt. Wenn Sie die Farbe der Legendenlinie festlegen, werden Sie automatisch auch die Farbe der Festlegen der <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineAnchorCapStyle%2A> und die Ornamente, definiert durch die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutStyle%2A>.  
  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineWidth%2A> Eigenschaft steuert die Breite in Pixel der Legendenlinie an. Verwendung dieser Eigenschaft wird auch die Ornamente vom Skalieren der <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineAnchorCapStyle%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutStyle%2A>.  
  
 Die Verschiebung von SmartLabels kann über mehrere Motion-bezogene Eigenschaften gesteuert werden. Diese definieren die Regeln der datenverschiebung für die Richtung, Abstand und, ob der Datenpunktwert Bezeichnung, um den Zeichnungsbereich lassen zulässig ist. Die Standardregeln für die Verschiebung werden normalerweise die meisten Probleme beheben. Die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MaxMovingDistance%2A> definiert einen Wert, der angibt, der maximale Abstand in Pixel aus den Daten zeigen, dass datenpunktbezeichnungen bei überlappungen verschoben werden dürfen. Die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MinMovingDistance%2A> Eigenschaft definiert einen Wert, der angibt, der minimalen Abstand in Pixel aus den Daten zeigen, dass datenpunktbezeichnungen bei überlappungen verschoben werden. Wenn ein Datenpunkt Bezeichnung muss neu angeordnet werden, wird die Bezeichnung sein verschoben, indem Sie mindestens die Anzahl der Pixel angegeben.  
  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.IsOverlappedHidden%2A> Eigenschaft gibt an, ob die Bezeichnungen ausgeblendet sind, wenn überlappungsprobleme nicht aufgelöst werden kann. Wenn die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.IsOverlappedHidden%2A> Eigenschaft ist `true`, und der Datenpunkt kann nicht innerhalb des Bereichs, der vom angegebenen gezeichnet werden <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MinMovingDistance%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MaxMovingDistance%2A> in den Anweisungen, die zulässige <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MovingDirection%2A>, datenpunktbezeichnung nicht gezeichnet wird.  
  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MovingDirection%2A> Eigenschaft definiert die Richtung, in der datenpunktbezeichnung verschoben werden kann. Diese Eigenschaft akzeptiert einen <xref:System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles> Wert oder eine bitweise OR-Operation für mehrere <xref:System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles> Werte. Die Standardeinstellung ist die bitweise OR-aller <xref:System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles> Werte, um in allen möglichen Richtungen außer auf die Mitte der Daten zeigen Neupositionieren zu ermöglichen.  
  
 SmartLabels werden nicht für die folgenden Diagrammtypen unterstützt:  
  
-   Balkendiagrammen: Balken und hundert prozentual gestapelte Balkendiagramme.  
  
-   Formdiagramme: Kreis-, Ring-, Polar- und Netzdiagramme.  
  
-   Bereichsdiagramme: Bereich, Spaltenbereich und Bereichsbalkendiagramme.  
  
-   Gestapelte Flächendiagramme: gestapelte Fläche und hundert prozentual gestapelte Flächendiagramme.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmartLabelStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmartLabelStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowOutsidePlotArea">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.LabelOutsidePlotAreaStyle AllowOutsidePlotArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LabelOutsidePlotAreaStyle AllowOutsidePlotArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.AllowOutsidePlotArea" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowOutsidePlotArea As LabelOutsidePlotAreaStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::LabelOutsidePlotAreaStyle AllowOutsidePlotArea { System::Windows::Forms::DataVisualization::Charting::LabelOutsidePlotAreaStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LabelOutsidePlotAreaStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LabelOutsidePlotAreaStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle" />-Objekt außerhalb des Zeichnungsbereichs gezeichnet werden kann, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelOutsidePlotAreaStyle" />-Enumerationswert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalloutBackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color CalloutBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalloutBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalloutBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color CalloutBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Transparent")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe der Bezeichnungslegende ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutStyle%2A>-Eigenschaft auf den Wert <xref:System.Windows.Forms.DataVisualization.Charting.LabelCalloutStyle.Box> festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalloutLineAnchorCapStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.LineAnchorCapStyle CalloutLineAnchorCapStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LineAnchorCapStyle CalloutLineAnchorCapStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineAnchorCapStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalloutLineAnchorCapStyle As LineAnchorCapStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::LineAnchorCapStyle CalloutLineAnchorCapStyle { System::Windows::Forms::DataVisualization::Charting::LineAnchorCapStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LineAnchorCapStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LineAnchorCapStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ankerendenstil der Bezeichnungslegendenlinie ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.LineAnchorCapStyle" />-Enumerationswert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalloutLineColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color CalloutLineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalloutLineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalloutLineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color CalloutLineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Linienfarbe für die Bezeichnungslegende ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalloutLineDashStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.ChartDashStyle CalloutLineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle CalloutLineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalloutLineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle CalloutLineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil der Bezeichnungslegendenlinie ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" />-Enumerationswert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalloutLineWidth">
      <MemberSignature Language="C#" Value="public virtual int CalloutLineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalloutLineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutLineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalloutLineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CalloutLineWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stärke der Bezeichnungslegendenlinie ab oder legt diese fest.</summary>
        <value>Ein <see langword="integer" />-Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalloutStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.LabelCalloutStyle CalloutStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LabelCalloutStyle CalloutStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.CalloutStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalloutStyle As LabelCalloutStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::LabelCalloutStyle CalloutStyle { System::Windows::Forms::DataVisualization::Charting::LabelCalloutStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LabelCalloutStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LabelCalloutStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Legendenart des neu angeordneten <see cref="T:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle" />-Objekts ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelCalloutStyle" />-Enumerationswert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle" />-Algorithmus aktiviert ist, oder legt dieses fest.</summary>
        <value>
          <see langword="True" />, wenn ein Algorithmus angewendet wird, um das Überlappen von Datenpunktbezeichnungen zu verhindern. <see langword="False" />, wenn das Überlappen von Datenpunktbezeichnungen nicht verhindert wird. Der Standardwert ist <see langword="True" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkerOverlappingAllowed">
      <MemberSignature Language="C#" Value="public virtual bool IsMarkerOverlappingAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkerOverlappingAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.IsMarkerOverlappingAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsMarkerOverlappingAllowed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMarkerOverlappingAllowed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob die Punktbezeichnungen einen Punktmarker überlappen dürfen, oder legt dieses fest.</summary>
        <value>
          <see langword="True" />, wenn Datenpunktbezeichnungen Punktmarker überlappen dürfen. <see langword="False" />, wenn verhindert wird, dass Datenpunktbezeichnungen die Punktmarker überlappen. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverlappedHidden">
      <MemberSignature Language="C#" Value="public virtual bool IsOverlappedHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOverlappedHidden" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.IsOverlappedHidden" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsOverlappedHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsOverlappedHidden { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob überlappende Bezeichnungen, die nicht neu angeordnet werden können, ausgeblendet werden, oder legt dieses fest.</summary>
        <value>
          <see langword="True" />, wenn überlappende Bezeichnungen ausgeblendet werden. <see langword="False" />, wenn überlappende Bezeichnungen nicht ausgeblendet werden. Der Standardwert ist <see langword="True" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Punkt innerhalb des Bereichs, der durch die Eigenschaften angegeben gezeichnet werden soll, kann nicht <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MinMovingDistance%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MaxMovingDistance%2A>, in den Anweisungen zulässig, die von der <xref:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MovingDirection%2A>, und dieser Eigenschaft ist `true`, datenpunktbezeichnung nicht gezeichnet wird.  
  
> [!NOTE]
>  SmartLabels funktionieren nur, wenn die <xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Angle%2A> Eigenschaft auf 0 (null) festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMovingDistance">
      <MemberSignature Language="C#" Value="public virtual double MaxMovingDistance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxMovingDistance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MaxMovingDistance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxMovingDistance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double MaxMovingDistance { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Entfernung in Pixel ab, bis zu der das überlappende <see cref="T:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle" />-Objekt vom Marker verschoben werden darf, oder legt diese fest.</summary>
        <value>Ein <see langword="double" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt der maximale Abstand in Pixel aus den Daten zeigen, dass datenpunktbezeichnungen bei überlappungen verschoben werden dürfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMovingDistance">
      <MemberSignature Language="C#" Value="public virtual double MinMovingDistance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinMovingDistance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MinMovingDistance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MinMovingDistance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double MinMovingDistance { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale Entfernung in Pixel ab, bis zu der das überlappende <see cref="T:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle" />-Objekt vom Marker verschoben werden darf, oder legt diese fest.</summary>
        <value>Ein <see langword="double" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt der minimalen Abstand in Pixel aus den Daten zeigen, dass datenpunktbezeichnungen bei überlappungen verschoben werden dürfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovingDirection">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles MovingDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles MovingDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle.MovingDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MovingDirection As LabelAlignmentStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::LabelAlignmentStyles MovingDirection { System::Windows::Forms::DataVisualization::Charting::LabelAlignmentStyles get(); void set(System::Windows::Forms::DataVisualization::Charting::LabelAlignmentStyles value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles), "Top, Bottom, Right, Left, TopLeft, TopRight, BottomLeft, BottomRight")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Richtungen ab, in denen das überlappende <see cref="T:System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle" />-Objekt verschoben werden darf, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles" />-Enumerationswert oder mehrere <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles" />-Werte, auf die eine bitweise OR-Operation angewendet wird. Der Standardwert ist das bitweise OR aller <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelAlignmentStyles" />-Werte, um die Neupositionierung in alle Richtungen außer zum Mittelpunkt des Datenpunkts zuzulassen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>