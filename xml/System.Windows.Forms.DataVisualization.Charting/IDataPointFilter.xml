<Type Name="IDataPointFilter" FullName="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a51c26f9c949825ccf73451ede224daf304d1b6d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78812483" /></Metadata><TypeSignature Language="C#" Value="public interface IDataPointFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataPointFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataPointFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataPointFilter" />
  <TypeSignature Language="F#" Value="type IDataPointFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Macht die <see cref="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" />-Methode verfügbar, die die benutzerdefinierte Filterung von <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />-Daten ermöglicht.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter>-Schnittstelle macht die <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A>-Methode verfügbar, die einen bestimmten Datenpunkt innerhalb einer Reihe einnimmt und einen `Boolean` Wert zurückgibt, der bestimmt, ob der Datenpunkt gefiltert wird.  
  
 So führen Sie benutzerdefinierte Filterung aus:  
  
-   Leiten Sie eine neue oder vorhandene Klasse von dieser Schnittstelle ab.  
  
-   Überschreiben Sie die <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> Methode, um die benutzerdefinierte Filter Logik bereitzustellen.  
  
-   Um den Filter Vorgang zu initiieren, müssen Sie eine der `Filter` Methoden in der <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator>-Klasse aufrufen, die ein <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter>-Objekt als ersten Parameter annimmt.  
  
 Beispiel Quell Code finden Sie in der <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A>-Methode.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FilterDataPoint">
      <MemberSignature Language="C#" Value="public bool FilterDataPoint (System.Windows.Forms.DataVisualization.Charting.DataPoint point, System.Windows.Forms.DataVisualization.Charting.Series series, int pointIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterDataPoint(class System.Windows.Forms.DataVisualization.Charting.DataPoint point, class System.Windows.Forms.DataVisualization.Charting.Series series, int32 pointIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterDataPoint (point As DataPoint, series As Series, pointIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterDataPoint(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ point, System::Windows::Forms::DataVisualization::Charting::Series ^ series, int pointIndex);" />
      <MemberSignature Language="F#" Value="abstract member FilterDataPoint : System.Windows.Forms.DataVisualization.Charting.DataPoint * System.Windows.Forms.DataVisualization.Charting.Series * int -&gt; bool" Usage="iDataPointFilter.FilterDataPoint (point, series, pointIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="pointIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="point">Das zu filternde <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />-Objekt.</param>
        <param name="series">Das <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />-Objekt, zu dem der Datenpunkt gehört.</param>
        <param name="pointIndex">Der Index des Datenpunkts, der dessen Position in der Reihe bestimmt.</param>
        <summary>Bestimmt, ob ein bestimmter Datenpunkt in der Reihe gefiltert wird.</summary>
        <returns><see langword="true" />, wenn der Datenpunkt entfernt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sollte für jeden Datenpunkt in einer Reihe aufgerufen werden, und es wird ein `Boolean` Wert zurückgegeben, der angibt, ob ein Datenpunkt gefiltert werden soll.  
  
 Zum Bereitstellen einer benutzerdefinierten Filterung leiten Sie eine neue oder vorhandene Klasse von der <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter>-Schnittstelle ab, und implementieren Sie dann diese Methode. Stellen Sie benutzerdefinierte Kriterien für eine entsprechende Logik bereit, und geben Sie dann `true` oder `false` zurück, um die zu filternden Datenpunkte Nachdem diese Methode implementiert wurde, verwenden Sie eine der `Filter` Methoden Definitionen in der <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator>-Klasse, die ein <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter>-Objekt als Parameter zum Durchführen der Filterung annimmt.  
  
 Gefilterte Punkte werden standardmäßig aus einer Reihe entfernt. Sie können auch als leere Punkte angezeigt werden, indem Sie den Wert der <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A>-Eigenschaft auf `true`festlegen.  
  
 Gefilterte Punkte können auch als gefiltert gekennzeichnet werden, wenn Sie nicht mit den Filterkriterien übereinstimmen, wie vom <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A> Wert festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
