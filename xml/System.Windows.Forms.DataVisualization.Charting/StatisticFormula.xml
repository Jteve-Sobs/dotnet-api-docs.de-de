<Type Name="StatisticFormula" FullName="System.Windows.Forms.DataVisualization.Charting.StatisticFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe94b8b43688179da9c74296687175f9fcce213d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36358278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class StatisticFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatisticFormula" />
  <TypeSignature Language="F#" Value="type StatisticFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Berechnet statistische Formeln.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formeln können lose in folgenden Kategorien gruppiert: Verteilungen, einschließlich inverse Verteilungen; Tests; und grundlegende Formeln für statistische Berechnungen. Jede Gruppe verfügt über gemeinsame Merkmale in Bezug auf ihre Eingabe- und -Werte.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Anova (probability As Double, inputSeriesNames As String) As AnovaResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::AnovaResult ^ Anova(double probability, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Anova : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.AnovaResult" Usage="statisticFormula.Anova (probability, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="inputSeriesNames">Eine durch Kommas getrennte Liste von Eingabereihennamen.</param>
        <summary>Führt einen ANOVA-Test aus, um zu bestimmen, ob es einen statistisch signifikanten Unterschied in den Mittelwerten von zwei oder mehr Gruppen von Daten gibt.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein ANOVA-Test wird verwendet, um den Unterschied zwischen der bedeutet, dass von zwei oder mehr Gruppen von Daten zu testen.  
  
 Zwei oder mehr Gruppen von Reihendaten müssen angegeben werden, und jede Reihe muss die gleiche Anzahl von Datenpunkten aufweisen; Andernfalls wird eine Ausnahme ausgelöst werden.  
  
 Wenn eine angegebene Eingabereihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaFunction (m As Double, n As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BetaFunction(double m, double n);" />
      <MemberSignature Language="F#" Value="member this.BetaFunction : double * double -&gt; double" Usage="statisticFormula.BetaFunction (m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m">Der erste Wert für die Betafunktion.</param>
        <param name="n">Der zweite Wert für die Betafunktion.</param>
        <summary>Gibt den Betafunktionswert für zwei angegebene Werte zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der die Betafunktion für die zwei angegebenen Werte darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt die Beta-Funktionswert für zwei angegebene Werte, die vom angegebenen `m` und `n`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correlation (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correlation(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Correlation : string * string -&gt; double" Usage="statisticFormula.Correlation (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">Der erste Eingabereihenname.</param>
        <param name="secondInputSeriesName">Der zweite Eingabereihenname.</param>
        <summary>Gibt den Korrelationswert für zwei Datenreihen zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der die Korrelation zwischen zwei Datenreihen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korrelation misst die Beziehung zwischen zwei Datasets, die skaliert werden, um unabhängig von der Maßeinheit angegeben werden. Die <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> Methode gibt die Kovarianz von zwei Datasets, die durch das Produkt ihrer Standardabweichungen dividiert, und liegt immer zwischen-1 und 1.  
  
 Verwenden Sie Korrelation, um zu bestimmen, ob zwei Datenbereiche zusammen verschoben werden; d. h., ob große Werten für einen Satz mit großen Werten für andere (positive Korrelation) verknüpft sind, gibt an, ob der kleine Werten für einen Satz mit großen Werten für andere (negative Korrelation) verknüpft sind oder gibt an, ob Werte in beiden Gruppen werden nicht verknüpfte ( Korrelation nahe 0 (null)).  
  
 Wenn eine angegebene Eingabereihe in der reihenauflistung zum Zeitpunkt des Methodenaufrufs nicht vorhanden ist, wird eine Ausnahme ausgelöst. Eine Ausnahme wird auch ausgelöst werden, wenn die angegebenen Reihen nicht die gleiche Anzahl von Datenpunkten verfügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Covariance : string * string -&gt; double" Usage="statisticFormula.Covariance (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">Der erste Eingabereihenname.</param>
        <param name="secondInputSeriesName">Der zweite Eingabereihenname.</param>
        <summary>Gibt den Kovarianzwert für zwei Datenreihen zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der die Kovarianz zwischen zwei Datenreihen darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDistribution (value As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDistribution(double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.FDistribution : double * int * int -&gt; double" Usage="statisticFormula.FDistribution (value, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">Der F-Wert.</param>
        <param name="firstDegreeOfFreedom">Der erste Freiheitsgrad.</param>
        <param name="secondDegreeOfFreedom">Der zweite Freiheitsgrad.</param>
        <summary>Gibt die kumulierte Wahrscheinlichkeit der F-Verteilungsfunktion zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der die kumulierte Wahrscheinlichkeit der F-Verteilungsfunktion darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As FTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::FTestResult ^ FTest(double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.FTest : double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.FTestResult" Usage="statisticFormula.FTest (probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Erster Eingabereihenname.</param>
        <param name="secondInputSeriesName">Zweiter Eingabereihenname.</param>
        <summary>Führt mit der F-Verteilung einen F-Test mit zwei Stichproben aus. Mit diesem Test wird bestimmt, ob die Stichproben unterschiedliche Varianzen aufweisen.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaFunction (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaFunction(double value);" />
      <MemberSignature Language="F#" Value="member this.GammaFunction : double -&gt; double" Usage="statisticFormula.GammaFunction value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Die Eingabevariable.</param>
        <summary>Gibt den Gammafunktionswert für die angegebene Variable zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der die Gammafunktion darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseFDistribution (probability As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseFDistribution(double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseFDistribution : double * int * int -&gt; double" Usage="statisticFormula.InverseFDistribution (probability, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstDegreeOfFreedom">Der erste Freiheitsgrad.</param>
        <param name="secondDegreeOfFreedom">Der zweite Freiheitsgrad.</param>
        <summary>Gibt den Kehrwert der kumulativen F-Verteilung zurück.</summary>
        <returns>Ein <see langword="double" />-Wert aus dem Kehrwert der F-Verteilungsfunktion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den Wert "F" für die angegebenen Wahrscheinlichkeit der F-Verteilung zurück.  
  
 Die F-Verteilung kann in einem F-Test verwendet werden, die den Grad der Variabilität in zwei Datasets vergleicht.  
  
 Diese Methode kann eine Ausnahme aus, abhängig von der Parameterwerte zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bedingung: Die Berechnung kann aufgrund einer Beschränkung nicht mit dem angegebenen Parameter fortgesetzt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseNormalDistribution (probability As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseNormalDistribution(double probability);" />
      <MemberSignature Language="F#" Value="member this.InverseNormalDistribution : double -&gt; double" Usage="statisticFormula.InverseNormalDistribution probability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <summary>Gibt die Umkehrung der kumulierten Standardnormalverteilung zurück.</summary>
        <returns>Ein <see langword="double" />-Wert der Umkehrung der kumulierten Standardnormalverteilungsfunktion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den Wert "F" für die angegebenen Wahrscheinlichkeit der F-Verteilung zurück.  
  
 Es wird vorausgesetzt, dass die Verteilung den Mittelwert 0 (null) und die Standardabweichung eines verfügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseTDistribution (probability As Double, degreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseTDistribution(double probability, int degreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseTDistribution : double * int -&gt; double" Usage="statisticFormula.InverseTDistribution (probability, degreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="degreeOfFreedom">Der Freiheitsgrad.</param>
        <summary>Gibt den inversen t-Wert der Student'schen T-Verteilung als Funktion von Wahrscheinlichkeit und Freiheitsgrad zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der die inverse T-Verteilung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den t-Wert für die angegebenen Wahrscheinlichkeit der T-Verteilung zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mean (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Mean(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Mean : string -&gt; double" Usage="statisticFormula.Mean inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">Eingabereihenname.</param>
        <summary>Gibt den Mittelwert aller in der angegebenen Reihe gespeicherten Datenpunkte zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der den Mittelwert aller Datenpunkte darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um den Mittelwert (d. h. den Mittelwert) der in einer Reihe gespeicherten Punkte zu berechnen.  
  
 Wenn die angegebene Eingabereihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Median(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Median : string -&gt; double" Usage="statisticFormula.Median inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">Eingabereihenname.</param>
        <summary>Gibt den Median aller Datenpunkte in der angegebenen Reihe zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der den Median darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um den Median in einer Reihe gespeicherten Punkte zu berechnen.  
  
 Der Median wird der Mittelwert einer Beispiel-Menge, wobei die Hälfte der Mitglieder in größer werden und die Hälfte der Mitglieder sind kleinere Größe.  
  
 Wenn die angegebene Eingabereihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalDistribution (zValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormalDistribution(double zValue);" />
      <MemberSignature Language="F#" Value="member this.NormalDistribution : double -&gt; double" Usage="statisticFormula.NormalDistribution zValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue">Der z-Wert, für den die Wahrscheinlichkeit erforderlich ist.</param>
        <summary>Gibt der Wahrscheinlichkeit für die Funktion der kumulierten Standardnormalverteilung zurück.</summary>
        <returns>Ein <see langword="double" />-Wert der Funktion für die kumulierte Standardnormalverteilung.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDistribution (value As Double, degreeOfFreedom As Integer, oneTail As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDistribution(double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="F#" Value="member this.TDistribution : double * int * bool -&gt; double" Usage="statisticFormula.TDistribution (value, degreeOfFreedom, oneTail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Der T-Wert</param>
        <param name="degreeOfFreedom">Freiheitsgrad.</param>
        <param name="oneTail">Bei <see langword="true" /> wird eine einseitige Verteilung verwendet, andernfalls wird eine zweiseitige Verteilung verwendet.</param>
        <summary>Gibt die Wahrscheinlichkeit für die T-Verteilung (Student'sche Verteilung) zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der eine kumulierte T-Verteilungsfunktion darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestEqualVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestEqualVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestEqualVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestEqualVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">Angenommener mittlerer Unterschied.</param>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Erster Eingabereihenname.</param>
        <param name="secondInputSeriesName">Zweiter Eingabereihenname.</param>
        <summary>Führt einen T-Test mit Student'scher Verteilung (T-Verteilung) mit gleichen Varianzen aus.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestPaired (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestPaired(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestPaired : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestPaired (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">Angenommener mittlerer Unterschied.</param>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Erster Eingabereihenname.</param>
        <param name="secondInputSeriesName">Zweiter Eingabereihenname.</param>
        <summary>Führt einen T-Test mit Student'scher Verteilung (T-Verteilung) mit paarweisen Stichproben aus. Dies ist hilfreich, wenn Stichproben normalerweise paarweise vorhanden sind.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestUnequalVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestUnequalVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestUnequalVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestUnequalVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">Angenommener mittlerer Unterschied.</param>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Erster Eingabereihenname.</param>
        <param name="secondInputSeriesName">Zweiter Eingabereihenname.</param>
        <summary>Führt einen T-Test mit Student'scher Verteilung (T-Verteilung) mit ungleichen Varianzen aus.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Variance (inputSeriesName As String, sampleVariance As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Variance(System::String ^ inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="F#" Value="member this.Variance : string * bool -&gt; double" Usage="statisticFormula.Variance (inputSeriesName, sampleVariance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">Der Eingabereihenname.</param>
        <param name="sampleVariance">
          <see langword="True" />, wenn die Daten eine Stichprobe aus der Gesamtheit sind. <see langword="false" />, wenn es sich bei den Daten um die Gesamtheit handelt.</param>
        <summary>Gibt die Varianz für eine Reihe zurück.</summary>
        <returns>Ein <see langword="double" />-Wert, der die Varianz darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (hypothesizedMeanDifference As Double, varianceFirstGroup As Double, varianceSecondGroup As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As ZTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::ZTestResult ^ ZTest(double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.ZTest : double * double * double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.ZTestResult" Usage="statisticFormula.ZTest (hypothesizedMeanDifference, varianceFirstGroup, varianceSecondGroup, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">Angenommener mittlerer Unterschied.</param>
        <param name="varianceFirstGroup">Varianz der ersten Gruppe.</param>
        <param name="varianceSecondGroup">Varianz der zweiten Gruppe.</param>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Erster Eingabereihenname.</param>
        <param name="secondInputSeriesName">Zweiter Eingabereihenname.</param>
        <summary>Führt einen Z-Test mit Normalverteilung aus.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>