<Type Name="StatisticFormula" FullName="System.Windows.Forms.DataVisualization.Charting.StatisticFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe94b8b43688179da9c74296687175f9fcce213d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36358278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class StatisticFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatisticFormula" />
  <TypeSignature Language="F#" Value="type StatisticFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="91f8b-101">Berechnet statistische Formeln.</span>
      <span class="sxs-lookup">
        <span data-stu-id="91f8b-101">Calculates statistical formulas.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-102">Formeln können lose in den folgenden Kategorien gruppiert werden:-Distributionen, z.B. umgekehrte Verteilungen; Tests und grundlegende Formeln für statistische Berechnungen.</span><span class="sxs-lookup"><span data-stu-id="91f8b-102">Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas.</span></span> <span data-ttu-id="91f8b-103">Jede Gruppe verfügt über gemeinsame Merkmale in Bezug auf die Eingabe- und -Werte.</span><span class="sxs-lookup"><span data-stu-id="91f8b-103">Each group has common characteristics with respect to their input and return values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Anova (probability As Double, inputSeriesNames As String) As AnovaResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::AnovaResult ^ Anova(double probability, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Anova : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.AnovaResult" Usage="statisticFormula.Anova (probability, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="91f8b-104">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-104">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-105">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-105">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="inputSeriesNames">
          <span data-ttu-id="91f8b-106">Eine durch Kommas getrennte Liste von Eingabereihennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-106">A comma-delimited list of input series names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-107">Führt einen ANOVA-Test aus, um zu bestimmen, ob es einen statistisch signifikanten Unterschied in den Mittelwerten von zwei oder mehr Gruppen von Daten gibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-107">Performs an ANOVA test to determine whether there is a statistically significant difference between the mean values of two or more groups of data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-108">Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-108">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-109">Ein varianzanalysetest wird verwendet, um den Unterschied zwischen den Mittelwerten von zwei oder mehr Gruppen von Daten zu testen.</span><span class="sxs-lookup"><span data-stu-id="91f8b-109">An ANOVA test is used to test the difference between the means of two or more groups of data.</span></span>  
  
 <span data-ttu-id="91f8b-110">Zwei oder mehr Gruppen von Reihendaten müssen angegeben werden, und jede Reihe muss die gleiche Anzahl von Datenpunkten aufweisen; Andernfalls wird eine Ausnahme ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="91f8b-110">Two or more groups of series data must be specified, and each series must have the same number of data points; otherwise, an exception will be raised.</span></span>  
  
 <span data-ttu-id="91f8b-111">Wenn eine angegebene Eingabe Reihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="91f8b-111">If a specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaFunction (m As Double, n As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BetaFunction(double m, double n);" />
      <MemberSignature Language="F#" Value="member this.BetaFunction : double * double -&gt; double" Usage="statisticFormula.BetaFunction (m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="91f8b-112">Der erste Wert für die Betafunktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-112">The first value for the beta function.</span>
          </span>
        </param>
        <param name="n">
          <span data-ttu-id="91f8b-113">Der zweite Wert für die Betafunktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-113">The second value for the beta function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-114">Gibt den Betafunktionswert für zwei angegebene Werte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-114">Returns the beta function value for two given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-115">Ein <see langword="double" />-Wert, der die Betafunktion für die zwei angegebenen Werte darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-115">A <see langword="double" /> value that represents the beta function for the two given values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-116">Diese Methode gibt den Betafunktionswert für zwei angegebene Werte mit den vom angegebenen `m` und `n`.</span><span class="sxs-lookup"><span data-stu-id="91f8b-116">This method returns the beta function value for two given values that are specified by `m` and `n`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correlation (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correlation(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Correlation : string * string -&gt; double" Usage="statisticFormula.Correlation (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="91f8b-117">Der erste Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-117">The first input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="91f8b-118">Der zweite Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-118">The second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-119">Gibt den Korrelationswert für zwei Datenreihen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-119">Returns the correlation value for two data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-120">Ein <see langword="double" />-Wert, der die Korrelation zwischen zwei Datenreihen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-120">A <see langword="double" /> value that represents the correlation between two data series.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-121">Korrelation misst die Beziehung zwischen zwei Datasets, die skaliert werden, um unabhängig von der Maßeinheit.</span><span class="sxs-lookup"><span data-stu-id="91f8b-121">Correlation measures the relationship between two data sets that are scaled to be independent of the unit of measurement.</span></span> <span data-ttu-id="91f8b-122">Die <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> Methode gibt die Kovarianz von zwei Datasets, die durch das Produkt ihrer Standardabweichungen dividiert und immer liegt zwischen-1 und 1.</span><span class="sxs-lookup"><span data-stu-id="91f8b-122">The <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> method returns the covariance of two data sets divided by the product of their standard deviations, and always ranges from -1 to 1.</span></span>  
  
 <span data-ttu-id="91f8b-123">Verwenden Sie die Korrelation um zu bestimmen, ob zwei Datenbereiche zusammen verschieben; d. h., ob der große Werten für einen Satz mit großen Werten für andere (positive Korrelation) verknüpft sind, gibt an, ob der kleine Werten für einen Satz mit großen Werten für andere (negative Korrelation) verknüpft sind oder, ob Werte in beiden Gruppen sind nicht verknüpften ( Korrelation nahe 0 (null)).</span><span class="sxs-lookup"><span data-stu-id="91f8b-123">Use correlation to determine whether two ranges of data move together; that is, whether large values of one set are associated with large values of the other (positive correlation), whether small values of one set are associated with large values of the other (negative correlation), or whether values in both sets are unrelated (correlation near zero).</span></span>  
  
 <span data-ttu-id="91f8b-124">Wenn einer angegebenen Eingabereihen nicht in der reihenauflistung zum Zeitpunkt des Methodenaufrufs vorhanden ist, wird eine Ausnahme ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="91f8b-124">If a specified input series does not exist in the series collection at the time of the method call, an exception will be thrown.</span></span> <span data-ttu-id="91f8b-125">Eine Ausnahme wird auch ausgelöst werden, wenn die angegebenen Reihen nicht die gleiche Anzahl von Datenpunkten verfügen.</span><span class="sxs-lookup"><span data-stu-id="91f8b-125">An exception will also be raised if the specified series do not have the same number of data points.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Covariance : string * string -&gt; double" Usage="statisticFormula.Covariance (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="91f8b-126">Der erste Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-126">The first input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="91f8b-127">Der zweite Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-127">The second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-128">Gibt den Kovarianzwert für zwei Datenreihen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-128">Returns the covariance value for two data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-129">Ein <see langword="double" />-Wert, der die Kovarianz zwischen zwei Datenreihen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-129">A <see langword="double" /> value that represents the covariance between two data series.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDistribution (value As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDistribution(double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.FDistribution : double * int * int -&gt; double" Usage="statisticFormula.FDistribution (value, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="91f8b-130">Der F-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-130">The F value.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="91f8b-131">Der erste Freiheitsgrad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-131">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="91f8b-132">Der zweite Freiheitsgrad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-132">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-133">Gibt die kumulierte Wahrscheinlichkeit der F-Verteilungsfunktion zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-133">Returns the cumulative F distribution function probability.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-134">Ein <see langword="double" />-Wert, der die kumulierte Wahrscheinlichkeit der F-Verteilungsfunktion darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-134">A <see langword="double" /> value that represents the cumulative F distribution function probability.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As FTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::FTestResult ^ FTest(double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.FTest : double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.FTestResult" Usage="statisticFormula.FTest (probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="91f8b-135">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-135">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-136">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-136">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="91f8b-137">Erster Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-137">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="91f8b-138">Zweiter Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-138">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-139">Führt mit der F-Verteilung einen F-Test mit zwei Stichproben aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-139">Performs a two-sample F Test using the F distribution.</span>
          </span>
          <span data-ttu-id="91f8b-140">Mit diesem Test wird bestimmt, ob die Stichproben unterschiedliche Varianzen aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-140">This test is used to determine if the samples have different variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-141">Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-141">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaFunction (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaFunction(double value);" />
      <MemberSignature Language="F#" Value="member this.GammaFunction : double -&gt; double" Usage="statisticFormula.GammaFunction value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="91f8b-142">Die Eingabevariable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-142">The input variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-143">Gibt den Gammafunktionswert für die angegebene Variable zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-143">Returns the gamma function value for the given variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-144">Ein <see langword="double" />-Wert, der die Gammafunktion darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-144">A <see langword="double" /> value that represents the gamma function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseFDistribution (probability As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseFDistribution(double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseFDistribution : double * int * int -&gt; double" Usage="statisticFormula.InverseFDistribution (probability, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="91f8b-145">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-145">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-146">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-146">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="91f8b-147">Der erste Freiheitsgrad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-147">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="91f8b-148">Der zweite Freiheitsgrad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-148">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-149">Gibt den Kehrwert der kumulativen F-Verteilung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-149">Returns the inverse of the F cumulative distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-150">Ein <see langword="double" />-Wert aus dem Kehrwert der F-Verteilungsfunktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-150">A <see langword="double" /> value from the inverse F distribution function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-151">Diese Methode gibt den F-Wert für den angegebenen F-Verteilungsfunktion.</span><span class="sxs-lookup"><span data-stu-id="91f8b-151">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="91f8b-152">Die F-Verteilung kann in einem F-Test verwendet werden, in dem das Maß an Variabilität in beiden Datasets verglichen.</span><span class="sxs-lookup"><span data-stu-id="91f8b-152">The F distribution can be used in an F-test that compares the degree of variability in two data sets.</span></span>  
  
 <span data-ttu-id="91f8b-153">Diese Methode kann es sich um eine Ausnahme aus, je nach Parameterwerten zurück.</span><span class="sxs-lookup"><span data-stu-id="91f8b-153">This method may return an exception depending on the parameter values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="91f8b-154">Bedingung: Die Berechnung kann aufgrund einer Beschränkung nicht mit dem angegebenen Parameter fortgesetzt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-154">Condition: Cannot continue calculation using specified parameter values because of limitation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseNormalDistribution (probability As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseNormalDistribution(double probability);" />
      <MemberSignature Language="F#" Value="member this.InverseNormalDistribution : double -&gt; double" Usage="statisticFormula.InverseNormalDistribution probability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="91f8b-155">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-155">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-156">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-156">The allowable range is 0-1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-157">Gibt die Umkehrung der kumulierten Standardnormalverteilung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-157">Returns the inverse of the standard normal cumulative distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-158">Ein <see langword="double" />-Wert der Umkehrung der kumulierten Standardnormalverteilungsfunktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-158">A <see langword="double" /> value from the inverse standard normal cumulative distribution function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-159">Diese Methode gibt den F-Wert für den angegebenen F-Verteilungsfunktion.</span><span class="sxs-lookup"><span data-stu-id="91f8b-159">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="91f8b-160">Es wird vorausgesetzt, dass die Verteilung auf einem Mittelwert von 0 (null) und die Standardabweichung eines verfügt.</span><span class="sxs-lookup"><span data-stu-id="91f8b-160">It is assumed that the distribution has a mean of 0 (zero) and a standard deviation of one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseTDistribution (probability As Double, degreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseTDistribution(double probability, int degreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseTDistribution : double * int -&gt; double" Usage="statisticFormula.InverseTDistribution (probability, degreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="91f8b-161">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-161">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-162">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-162">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="91f8b-163">Der Freiheitsgrad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-163">The degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-164">Gibt den inversen t-Wert der Student'schen T-Verteilung als Funktion von Wahrscheinlichkeit und Freiheitsgrad zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-164">Returns the inverse t-value of the Students t-distribution as a function of probability and degree of freedom.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-165">Ein <see langword="double" />-Wert, der die inverse T-Verteilung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-165">A <see langword="double" /> value that represents the inverse T distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-166">Diese Methode gibt den t-Wert für die angegebene T-Verteilungsfunktion.</span><span class="sxs-lookup"><span data-stu-id="91f8b-166">This method returns the t value for the given T distribution probability.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mean (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Mean(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Mean : string -&gt; double" Usage="statisticFormula.Mean inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="91f8b-167">Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-167">Input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-168">Gibt den Mittelwert aller in der angegebenen Reihe gespeicherten Datenpunkte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-168">Returns the average of all data points stored in the specified series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-169">Ein <see langword="double" />-Wert, der den Mittelwert aller Datenpunkte darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-169">A <see langword="double" /> value that represents the average of all data points.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-170">Verwenden Sie diese Methode, um den Mittelwert (d. h. den Mittelwert) der Punkte in einer Datenreihe gespeicherten zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="91f8b-170">Use this method to calculate the mean (that is, the average) of the points stored in a series.</span></span>  
  
 <span data-ttu-id="91f8b-171">Wenn die angegebene Eingabe Reihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="91f8b-171">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Median(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Median : string -&gt; double" Usage="statisticFormula.Median inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="91f8b-172">Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-172">Input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-173">Gibt den Median aller Datenpunkte in der angegebenen Reihe zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-173">Returns the median of all data points in the specified series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-174">Ein <see langword="double" />-Wert, der den Median darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-174">A <see langword="double" /> value that represents the median.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91f8b-175">Verwenden Sie diese Methode, um den Median der Punkte in einer Datenreihe gespeicherten zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="91f8b-175">Use this method to calculate the median of the points stored in a series.</span></span>  
  
 <span data-ttu-id="91f8b-176">Der Median wird der Mittelwert einer Menge Beispiel, in dem die Hälfte der Elemente sind in größer und die Hälfte der Mitglieder Größe kleiner.</span><span class="sxs-lookup"><span data-stu-id="91f8b-176">The median is the middle value of a sample set, where half of the members are greater in size and half the members are lesser in size.</span></span>  
  
 <span data-ttu-id="91f8b-177">Wenn die angegebene Eingabe Reihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="91f8b-177">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalDistribution (zValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormalDistribution(double zValue);" />
      <MemberSignature Language="F#" Value="member this.NormalDistribution : double -&gt; double" Usage="statisticFormula.NormalDistribution zValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue">
          <span data-ttu-id="91f8b-178">Der z-Wert, für den die Wahrscheinlichkeit erforderlich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-178">The Z value for which the probability is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-179">Gibt der Wahrscheinlichkeit für die Funktion der kumulierten Standardnormalverteilung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-179">Returns the probability for the standard normal cumulative distribution function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-180">Ein <see langword="double" />-Wert der Funktion für die kumulierte Standardnormalverteilung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-180">A <see langword="double" /> value from the standard normal cumulative distribution function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDistribution (value As Double, degreeOfFreedom As Integer, oneTail As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDistribution(double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="F#" Value="member this.TDistribution : double * int * bool -&gt; double" Usage="statisticFormula.TDistribution (value, degreeOfFreedom, oneTail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="91f8b-181">Der T-Wert</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-181">The T value</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="91f8b-182">Freiheitsgrad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-182">Degree of freedom</span>
          </span>
        </param>
        <param name="oneTail">
          <span data-ttu-id="91f8b-183">Bei <see langword="true" /> wird eine einseitige Verteilung verwendet, andernfalls wird eine zweiseitige Verteilung verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-183">If <see langword="true" />, a one-tailed distribution is used; otherwise, a two-tailed distribution is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-184">Gibt die Wahrscheinlichkeit für die T-Verteilung (Student'sche Verteilung) zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-184">Returns the probability for the T distribution (Student's distribution).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-185">Ein <see langword="double" />-Wert, der eine kumulierte T-Verteilungsfunktion darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-185">A <see langword="double" /> value that represents a T Distribution cumulative function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestEqualVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestEqualVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestEqualVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestEqualVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="91f8b-186">Angenommener mittlerer Unterschied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-186">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="91f8b-187">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-187">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-188">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-188">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="91f8b-189">Erster Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-189">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="91f8b-190">Zweiter Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-190">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-191">Führt einen T-Test mit Student'scher Verteilung (T-Verteilung) mit gleichen Varianzen aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-191">Performs a T Test using Student's distribution (T distribution) with equal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-192">Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-192">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestPaired (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestPaired(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestPaired : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestPaired (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="91f8b-193">Angenommener mittlerer Unterschied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-193">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="91f8b-194">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-194">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-195">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-195">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="91f8b-196">Erster Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-196">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="91f8b-197">Zweiter Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-197">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-198">Führt einen T-Test mit Student'scher Verteilung (T-Verteilung) mit paarweisen Stichproben aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-198">Performs a T Test using Student's distribution (T distribution) with paired samples.</span>
          </span>
          <span data-ttu-id="91f8b-199">Dies ist hilfreich, wenn Stichproben normalerweise paarweise vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-199">This is useful when there is a natural pairing of observations in samples.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-200">Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-200">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestUnequalVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestUnequalVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestUnequalVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestUnequalVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="91f8b-201">Angenommener mittlerer Unterschied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-201">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="91f8b-202">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-202">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-203">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-203">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="91f8b-204">Erster Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-204">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="91f8b-205">Zweiter Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-205">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-206">Führt einen T-Test mit Student'scher Verteilung (T-Verteilung) mit ungleichen Varianzen aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-206">Performs a T Test using Student's distribution (T distribution) with unequal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-207">Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-207">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Variance (inputSeriesName As String, sampleVariance As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Variance(System::String ^ inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="F#" Value="member this.Variance : string * bool -&gt; double" Usage="statisticFormula.Variance (inputSeriesName, sampleVariance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="91f8b-208">Der Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-208">The input series name.</span>
          </span>
        </param>
        <param name="sampleVariance">
          <span data-ttu-id="91f8b-209">
            <see langword="True" />, wenn die Daten eine Stichprobe aus der Gesamtheit sind. <see langword="false" />, wenn es sich bei den Daten um die Gesamtheit handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-209">
              <see langword="True" /> if the data is a sample of the population; <see langword="false" /> if the data is the entire population.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-210">Gibt die Varianz für eine Reihe zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-210">Returns the variance for a series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-211">Ein <see langword="double" />-Wert, der die Varianz darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-211">A <see langword="double" /> value that represents the variance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (hypothesizedMeanDifference As Double, varianceFirstGroup As Double, varianceSecondGroup As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As ZTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::ZTestResult ^ ZTest(double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.ZTest : double * double * double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.ZTestResult" Usage="statisticFormula.ZTest (hypothesizedMeanDifference, varianceFirstGroup, varianceSecondGroup, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="91f8b-212">Angenommener mittlerer Unterschied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-212">Hypothesized mean difference.</span>
          </span>
        </param>
        <param name="varianceFirstGroup">
          <span data-ttu-id="91f8b-213">Varianz der ersten Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-213">Variance of the first group.</span>
          </span>
        </param>
        <param name="varianceSecondGroup">
          <span data-ttu-id="91f8b-214">Varianz der zweiten Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-214">Variance of the second group.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="91f8b-215">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-215">The alpha value, which is the probability that the hypothesis is rejected.</span>
          </span>
          <span data-ttu-id="91f8b-216">Der zulässige Bereich ist 0–1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-216">The allowable range is 0-1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="91f8b-217">Erster Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-217">First input series name.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="91f8b-218">Zweiter Eingabereihenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-218">Second input series name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91f8b-219">Führt einen Z-Test mit Normalverteilung aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-219">Performs a Z Test using the Normal distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91f8b-220">Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91f8b-220">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>