<Type Name="ChartSerializer" FullName="System.Windows.Forms.DataVisualization.Charting.ChartSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c86fa503db9a04423ff721b27b1b8488e212d88e" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52614202" /></Metadata><TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Aktiviert die Serialisierung des <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />-Steuerelements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse verfügbar gemacht wird, als die <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Serializer%2A> Eigenschaft des Stamms <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Klasse.  
  
 Die Serialisierung speichert den Zustand des Diagramms, und bietet auch die Möglichkeit, das die serialisierten Daten in das Diagramm zu laden. Alle Diagrammeigenschaften können beibehalten werden, einschließlich des Diagramms. Darüber hinaus können alle für die Serialisierung markierte Diagrammeigenschaften zurückgesetzt werden.  
  
 Diese Klasse kann optional verwendet werden, wenn Sie den benutzerdefinierten Ansichtszustand zu verwalten. Eines der `Load` Methoden können verwendet werden, um den Ansichtszustand und eine der laden die `Save` Methoden können verwendet werden, wenn Sie das Feld Ansichtszustand festlegen.  
  
 XML-Index oder binäre Formate können zum Speichern der serialisierten Daten verwendet werden. XML wird standardmäßig verwendet, aber Sie können ändern, dass das Format mit der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> Eigenschaft.  
  
 Diagrammeigenschaften werden gespeichert und geladen, mit der `Save` und `Load` Methoden bzw. Beachten Sie, dass nur Eigenschaften mit nicht standardmäßigen Werten gespeichert werden soll. Daten gespeichert werden können und/oder geladen, verwenden eine Datei streamen, <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>, <xref:System.Xml.XmlWriter> und <xref:System.Xml.XmlReader> Objekte. Beim Speichern bzw. Laden von Daten mit einem Objekt abgeleitet der <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>, <xref:System.Xml.XmlReader> oder <xref:System.Xml.XmlWriter> Klassen, die das Format der Daten XML sein müssen.  
  
 Die folgende Liste beschreibt die drei Methoden, von "einfach" zu den erweiterten-Datentypen sowie zum Definieren von serialisierbaren Daten verwendet. Beachten Sie, dass es auch möglich, nicht serialisierbaren Daten zu definieren. Diese Technik wird im nächsten Abschnitt beschrieben.  
  
-   Serialisieren der <xref:System.Windows.Forms.DataVisualization.Charting.Chart> mithilfe der `Save` und `Load` Methoden ohne serialisierbaren Eigenschaften anzugeben. Alle Diagrammeigenschaften mit nicht standardmäßigen Werten, die Diagrammdaten enthält, werden serialisiert.  
  
-   Serialisiert die Diagrammeigenschaften gemäß der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft. Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft fasst die Diagrammeigenschaften in Kategorien wie Daten, Darstellung und So weiter serialisiert werden. Beachten Sie, dass die Namen der <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> und <xref:System.Windows.Forms.DataVisualization.Charting.Series> -Objekte werden automatisch serialisiert, die auf vorhandenen Diagrammbereiche und Reihen, die beim Laden die serialisierten Daten angewendet.  
  
> [!IMPORTANT]
>  Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft wird intern von implementiert die <xref:System.Windows.Forms.DataVisualization.Charting.Chart> steuern, wie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft  
  
-   Serialisierung von Diagrammeigenschaften, die gemäß der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft. Dies ist eine durch Trennzeichen getrennte Liste aus allen Diagrammeigenschaften, die serialisierbar sind. Nachdem Sie diese Eigenschaft auf einen expliziten Wert festgelegt ist, ist es die Verantwortung des Entwicklers an alle Eigenschaften gespeichert werden soll. Das heißt, im Gegensatz zu den <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft, die Namen der Diagrammflächen und Reihen werden nicht automatisch beibehalten. Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaften können auch zusammen verwendet werden. Stellen Sie jedoch sicher, dass <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> mit sich selbst verkettet ist, wenn es sich bei festgelegt wird, andernfalls die Diagrammeigenschaften gemäß der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft wird überschrieben.  
  
 Um zu verhindern, dass bestimmte Eigenschaften serialisiert werden, verwenden Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaft. Wenn eine Eigenschaft festgelegt ist als serialisierbar und als nicht serialisierbar, die bei häufig vorkommen, wenn Platzhalter verwendet werden, die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft hat Vorrang vor. Rangfolge hängt jedoch auch auf wie viele Platzhalter verwendet wurden, wenn eine Eigenschaft angegeben wurde.  
  
 Standardmäßig werden serialisierbare Eigenschaften auf ihre Standardwerte zurückgesetzt, bevor sie geladen werden. Dieses Verhalten kann geändert werden, mithilfe der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft. Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Reset%2A> Methode kann auch verwendet werden, explizit Diagrammeigenschaften auf ihre Standardwerte zurückgesetzt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::SerializationContents Content { System::Windows::Forms::DataVisualization::Charting::SerializationContents get(); void set(System::Windows::Forms::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Windows.Forms.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des zu serialisierenden Diagramminhalts ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.SerializationContents" />-Enumerationswert, der den Diagramminhalt darstellt, der während des Ladens, Speicherns oder Zurücksetzens serialisiert werden soll. Standardmäßig werden alle nicht standardmäßigen Diagrammeigenschaften, einschließlich der Daten, beibehalten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagrammeigenschaften serialisiert, wenn eines der `Save` und `Load` Methoden aufgerufen werden. Um mehr Kontrolle über was serialisiert wird bereitzustellen, verwenden Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft. Beachten Sie, dass die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften können auch verwendet werden, zusammen mit den <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft.  
  
 > [!IMPORTANT] 
 > Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft bestimmt die Typen der Merkmale des Diagramms, z. B. "Darstellung", die serialisiert werden, und wird als tatsächlich intern implementiert die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft. Dies bedeutet, dass diese Einstellung die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft und das anschließende Festlegen der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft führt dazu, die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaftswert überschrieben wird, es sei denn, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> verkettet wird. Finden Sie unter den unten angegebenen Beispielcode für ein Beispiel für dieses Verfahren.  
  
 Setzen Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft alle <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> und <xref:System.Windows.Forms.DataVisualization.Charting.Series> auszuwählenden Objekte werden automatisch serialisiert werden; dies bedeutet, dass die serialisierte Daten, die das Diagrammflächen und einer Reihe bezieht sich auf vorhandene Objekte beim Laden von angewendet werden.  
  
 Festlegen dieser Eigenschaft wirkt sich auf alle zu laden, speichern und auszuführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::SerializationFormat Format { System::Windows::Forms::DataVisualization::Charting::SerializationFormat get(); void set(System::Windows::Forms::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Windows.Forms.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das beim Serialisieren des Diagramms verwendete Format ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.SerializationFormat" />-Enumerationswert, der das Format der serialisierten Daten darstellt. Der Standardwert ist XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten können in einem XML- oder Binärformat serialisiert werden. Binärformat ist kompakt und nimmt weniger Speicher als XML. XML-Code ist jedoch ein Textformat, lesbar ist.  
  
 Wenn Sie speichern oder laden die serialisierte Daten, muss das Format XML sein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Windows.Forms.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Windows.Forms.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.GetContentString(System.Windows.Forms.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Windows::Forms::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Windows.Forms.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Windows.Forms.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Der serialisierbare Inhalt.</param>
        <param name="serializable"><see langword="True" />, um eine serialisierbare Zeichenfolge abzurufen; <see langword="false" />, um eine nicht serialisierbare Zeichenfolge abzurufen.</param>
        <summary>Gibt je nach dem spezifischen Flagwert serialisierbare oder nicht serialisierbare Klassen- und/oder Eigenschaftennamen zurück.</summary>
        <returns>Ein <see langword="string" />-Wert, der die serialisierbaren oder nicht serialisierbaren Klassen- und/oder Eigenschaftennamen darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob Objekteigenschaften vor dem Laden auf Standardwerte zurückgesetzt werden, oder legt dieses fest.</summary>
        <value><see langword="True" />, wenn Objekteigenschaften vor dem Laden auf Standardwerte zurückgesetzt werden, andernfalls <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob das Diagrammserialisierungsprogramm im Modus für die Vorlagenerstellung ausgeführt wird, oder legt dieses fest.</summary>
        <value><see langword="True" />, wenn das Diagrammserialisierungsprogramm im Modus für die Vorlagenerstellung ausgeführt wird, andernfalls <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob unbekannte XML-Eigenschaften und -Elemente ignoriert werden, ohne eine Ausnahme auszulösen, oder legt dieses fest.</summary>
        <value><see langword="True" />, wenn unbekannte XML-Eigenschaften und -Elemente ignoriert werden, ohne eine Ausnahme auszulösen, andernfalls <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt serialisierte Daten in das <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein von der <see cref="T:System.IO.Stream" />-Klasse abgeleitetes Objekt, z. B ein <see cref="T:System.IO.MemoryStream" />-Objekt.</param>
        <summary>Lädt serialisierte Daten aus einem Objekt, das von der <see cref="T:System.IO.Stream" />-Klasse abgeleitet wurde, in das Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode zum Laden von serialisierter Daten in die <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Steuerelement.  
  
 Tritt ein Ladevorgang, sind, serialisierbare Eigenschaften standardmäßig zuerst auf ihre Standardwerte zurückgesetzt, bevor sie auf die beibehaltenen Werte festgelegt werden Wenn gespeichert. Um dieses Verhalten zu ändern, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft.  
  
 Standardmäßig werden alle serialisierten Diagrammeigenschaften geladen. Um bestimmte serialisierte Eigenschaften zu laden, legen die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> oder <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften vor dem Laden der Daten.  
  
 Beachten Sie, dass beim Speichern der Daten mithilfe einer `Save` -Methode, nur die Eigenschaften, die keine Standardwerte haben tatsächlich serialisiert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Ein Reader, z. B. <see cref="T:System.IO.StringReader" />, der von der abstrakten <see cref="T:System.IO.TextReader" />-Klasse abgeleitet wurde.</param>
        <summary>Lädt serialisierte Daten aus einem Readerobjekt, das von der <see cref="T:System.IO.TextReader" />-Klasse abgeleitet wurde, in das Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode zum Laden von serialisierter Daten in die <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Steuerelement.  
  
 Tritt ein Ladevorgang, werden standardmäßig serialisierbaren Eigenschaften zuerst auf ihre Standardwerte zurückgesetzt, bevor sie auf die persistenten Werte festgelegt werden, wenn gespeichert wurden. Um dieses Verhalten zu ändern, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft.  
  
 Standardmäßig werden alle serialisierten Diagrammeigenschaften geladen. Durch Festlegen der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> oder <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften, die einen bestimmten Satz von Eigenschaften geladen werden können.  
  
 Wenn Sie diese Definition verwenden, beachten Sie, dass das Format, das festgelegt ist, indem die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> -Eigenschaft, die XML sein muss.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Der relative oder absolute Pfad der zum Speichern der serialisierten Daten verwendeten Datei. Bei Verwendung eines relativen Pfads ist dieser relativ zum aktuellen Verzeichnis.</param>
        <summary>Lädt auf dem Datenträger gespeicherte serialisierte Daten in das <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode zum Laden von serialisierter Daten in die <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Steuerelement.  
  
 Tritt ein Ladevorgang, sind, serialisierbare Eigenschaften standardmäßig zuerst auf ihre Standardwerte zurückgesetzt, bevor sie auf die beibehaltenen Werte festgelegt werden Wenn gespeichert. Um dieses Verhalten zu ändern, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft.  
  
 Standardmäßig werden alle serialisierten Diagrammeigenschaften geladen. Um bestimmte serialisierte Eigenschaften zu laden, legen die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> oder <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften vor dem Laden der Daten.  
  
 Beachten Sie, dass beim Speichern der Daten mithilfe einer `Save` -Methode, nur die Eigenschaften, die keine Standardwerte haben tatsächlich serialisiert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Ein Objekt, aus dem die beibehaltenen Daten gelesen werden sollen. Das Objekt wird von der <see cref="T:System.Xml.XmlReader" />-Klasse abgeleitet, und es kann ein .NET Framework-Objekt oder ein benutzerdefiniertes Objekt sein.</param>
        <summary>Lädt serialisierte Daten aus einem Objekt, das von der <see cref="T:System.Xml.XmlReader" />-Klasse abgeleitet wurde, in das Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode zum Laden von serialisierter Daten in die <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Steuerelement.  
  
 Tritt ein Ladevorgang, werden standardmäßig serialisierbare Eigenschaften zuerst auf ihre Standardwerte zurückgesetzt, bevor sie auf die persistenten Werte festgelegt werden, wenn gespeichert wurden. Um dieses Verhalten zu ändern, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> Eigenschaft.  
  
 Standardmäßig werden alle serialisierten Diagrammeigenschaften geladen. Setzen Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> oder <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften, die einen bestimmten Satz von Eigenschaften geladen werden können.  
  
 Wenn Sie diese Definition verwenden, muss das Format XML sein. das Format kann geändert werden, mit der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> Eigenschaft.  
  
 Beim Arbeiten mit XML-Format-Textdateien, verwenden Sie zur Vereinfachung der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load%2A> Methode stattdessen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Diagrammeigenschaften ab, die nicht serialisiert werden, oder legt diese fest.</summary>
        <value>Ein durch Trennzeichen getrennter <see langword="string" />-Ausdruck, der die Diagrammeigenschaften darstellt, die nicht serialisiert werden. Die Syntax lautet "Klasse.Eigenschaft[,Klasse.Eigenschaft]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagrammeigenschaften serialisiert, wenn die `Save` und `Load` Methoden aufgerufen werden. Können Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaft, um einzuschränken, die zusammen mit serialisiert werden, die Merkmale des Diagramms die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaften.  
  
 Diese Eigenschaft bestimmt, welche Merkmale des Diagramms nicht serialisiert werden. Platzhalter können im Zeichenfolgenausdruck, verwendet werden, auf die gleiche Weise wie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft. Z. B. auszuschließende alle Diagrammdaten `BackColor` Eigenschaften, die von der Serialisierung, legen Sie diese Eigenschaft auf "*. BackColor".  
  
 In einigen Fällen kann eine Eigenschaft festgelegt werden, werden sowohl serialisiert als auch nicht serialisiert, dies geschieht häufig bei Platzhalter verwendet werden. Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Ausdruck weist eine geringere Priorität gegenüber der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Ausdruck. Beachten Sie jedoch, dass weniger Gewichtung auf Zeichenfolgenausdrücke angegeben wird, die Platzhalter verwenden. Z. B. wenn die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> -Eigenschaftensatz auf "*. BackColor"und die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.BackColor%2A>, alle B`ackColor` Eigenschaften mit Ausnahme von <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> Objekte werden serialisiert.  
  
 Wenn die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft festgelegt wurde, die Priorität in wie viele Platzhalter verwendet werden, hängt die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Ausdruck. Z. B. die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft <xref:System.Windows.Forms.DataVisualization.Charting.SerializationContents.Appearance> führt zu den <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> , die Eigenschaft enthält eine "*. Wieder\*"-Ausdruck. Wenn die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> -Eigenschaftensatz auf "\*. Wieder\*", werden alle `Back*` Diagrammeigenschaften wie z. B. `BackColor`, `BackGradient`usw., weiterhin serialisiert wird. Grund hierfür ist die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaftswert hat eine höhere Priorität im Vergleich zu den <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaft.  
  
 Diese Eigenschaft wirkt sich auf alle zu speichern, laden und auszuführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt alle für die Serialisierung markierten Diagrammeigenschaften zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird diese Methode alle Diagrammeigenschaften auf ihre Standardwerte zurückgesetzt.  
  
 Um die Diagrammeigenschaften zu beschränken, die auf ihre Standardwerte zurückgesetzt werden, verwenden Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften.  
  
 Beachten Sie, dass diese Methode auch automatisch aufgerufen wird eine `Load` Methode wird verwendet, und die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> -Eigenschaftensatz auf `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Speichert Diagrammeigenschaften, deren Werte vom Standard abweichen. Alle Diagrammeigenschaften, u. a. Daten, können serialisiert werden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein von der <see cref="T:System.IO.Stream" />-Klasse abgeleitetes Objekt, z. B. <see cref="T:System.IO.MemoryStream" />, das zum Speichern von Diagrammeigenschaften verwendet wird.</param>
        <summary>Speichert Diagrammdaten und -eigenschaften mit nicht standardmäßigen Werten in einem von der <see cref="T:System.IO.Stream" />-Klasse abgeleiteten Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagrammeigenschaften mit nicht standardmäßigen Werten der Datenpunkte enthält, serialisiert werden, wenn diese Methode aufgerufen wird. Um die Merkmale des Diagramms zu serialisierende steuern möchten, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften.  
  
 Wenn diese Methode verwendet wird, um Darstellungseigenschaften als Vorlage speichern, stellen sicher, dass die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> Eigenschaft der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer> Objekt wird zunächst festgelegt, um `true` vor dem Aufrufen dieser Methode.  
  
 Die Serialisierung eines Diagramms als Vorlage unterscheidet sich von nicht-Template-Serialisierung; Vorlage Serialisierung konzentriert sich auf Darstellungseigenschaften.  
  
 Wenn eine Vorlage serialisiert wird, die <xref:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate%2A> Methode kann verwendet werden, beim Laden der Vorlage, um die Darstellungseigenschaften für ein Diagramm zu bieten.  
  
 Vorlagen können verwendet werden, um benutzerdefinierte Paletten zu simulieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein von der <see cref="T:System.IO.TextWriter" />-Klasse abgeleitetes Objekt, z. B. <see cref="T:System.IO.StringWriter" />, das zum Speichern von Diagrammeigenschaften verwendet wird.</param>
        <summary>Speichert Diagrammdaten und -eigenschaften mit nicht standardmäßigen Werten im angegebenen Objekt, das von der <see cref="T:System.IO.TextWriter" />-Klasse abgeleitet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagrammeigenschaften mit nicht standardmäßigen Werten der Datenpunkte enthält, serialisiert werden, wenn diese Methode aufgerufen wird. Um zu steuern, welche Merkmale des Diagramms serialisiert werden, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften.  
  
 Wenn Sie diese Definition verwenden, muss das Format XML sein. das Format kann festgelegt werden, mit der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Der relative oder absolute Pfad der zum Speichern der serialisierten Daten verwendeten Datei. Beachten Sie, dass bei Verwendung eines relativen Pfads dieser relativ zum aktuellen Verzeichnis ist.</param>
        <summary>Speichert Diagrammdaten und -eigenschaften mit nicht standardmäßigen Werten in der angegebenen Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagrammeigenschaften mit nicht standardmäßigen Werten der Datenpunkte enthält, serialisiert werden, wenn diese Methode aufgerufen wird. Zur Steuerung der Merkmale des Diagramms werden serialisiert verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften.  
  
 Standardmäßig werden die Daten in einem XML-Format gespeichert. Um die Daten in einem binären Format speichern zu können, verwenden Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> Eigenschaft.  
  
 Beachten Sie, dass Schreibberechtigungen für das Verzeichnis aktiviert werden müssen, in dem die Datei gespeichert ist. Standardmäßig ist dies der Ordner "Bin" der Anwendung.  
  
 Wenn diese Methode zum Speichern von Darstellungseigenschaften als Vorlage verwendet wird, stellen sicher, dass die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> -Eigenschaftensatz zuerst auf `true` vor dem Aufrufen dieser Methode.  
  
 Serialisierung eines Diagramms als Vorlage wird von der Serialisierung nicht auf Vorlagen, anders fortgesetzt, hauptsächlich, weil Vorlage Serialisierung auf Darstellungseigenschaften konzentriert sich.  
  
 Wenn eine Vorlage serialisiert wird, die <xref:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate%2A> Methode kann verwendet werden, beim Laden der Vorlage, um die Darstellungseigenschaften für ein Diagramm zu bieten.  
  
 Vorlagen können verwendet werden, um benutzerdefinierte Paletten zu simulieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein von <see cref="T:System.Xml.XmlWriter" /> abgeleitetes Objekt zum Speichern von <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />-Eigenschaften.</param>
        <summary>Speichert Diagrammdaten und -eigenschaften mit nicht standardmäßigen Werten im angegebenen Objekt, das von der <see cref="T:System.Xml.XmlWriter" />-Klasse abgeleitet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagrammeigenschaften mit nicht standardmäßigen Werten der Datenpunkte enthält, serialisiert werden, wenn diese Methode aufgerufen wird. Um zu steuern, welche Merkmale des Diagramms serialisiert werden, verwenden die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaften.  
  
 Wenn Sie diese Definition verwenden, muss das Format XML sein. das Format kann geändert werden, mit der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> Eigenschaft.  
  
 Beim Arbeiten mit XML-Format-Textdateien, verwenden Sie zur Vereinfachung der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> Methode stattdessen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Diagrammeigenschaften ab, die serialisiert werden können, oder legt diese fest.</summary>
        <value>Ein durch Trennzeichen getrennter <see langword="string" />-Ausdruck, der die zu serialisierenden Diagrammeigenschaften darstellt. Die Syntax lautet "Klasse.Eigenschaft[,Klasse.Eigenschaft]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden alle Diagrammeigenschaften serialisiert, wenn die `Save` und `Load` Methoden aufgerufen werden. Können Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaft, um einzuschränken, die zusammen mit serialisiert werden, die Merkmale des Diagramms die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> und <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaften.  
  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft bestimmt, welche Merkmale des Diagramms serialisiert werden. Platzhalter können im Zeichenfolgenausdruck, verwendet werden, auf die gleiche Weise wie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Eigenschaft. Beispielsweise serialisiert alle Diagrammdaten `BackColor` Eigenschaften legen Sie diese Eigenschaft auf "*. BackColor".  
  
 Wenn <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> und/oder <xref:System.Windows.Forms.DataVisualization.Charting.Series> untergeordnete Eigenschaften angegeben sind, klicken Sie dann die Namen aller <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> und <xref:System.Windows.Forms.DataVisualization.Charting.Series> Objekte müssen auch angegeben werden, um die beibehaltenen Daten vorhandenen angewendet werden können <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> und <xref:System.Windows.Forms.DataVisualization.Charting.Series> Objekte. Das heißt, müssen Sie die "Ausdrücke Series.Name" und "ChartArea.Name" Ausdrücke angeben. Finden Sie unter den unten angegebenen Beispielcode für ein Beispiel für dieses Verfahren. Auf ähnliche Weise, wenn mehrere Diagrammflächen verwendet werden, die <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea%2A> -Eigenschaft aller dargestellt <xref:System.Windows.Forms.DataVisualization.Charting.Series> muss auch gespeichert werden.  
  
 In einigen Fällen kann eine Eigenschaft festgelegt werden, werden sowohl serialisiert als auch nicht serialisiert, dies geschieht häufig bei Platzhalter verwendet werden. Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Ausdruck weist eine geringere Priorität gegenüber der <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Ausdruck. Beachten Sie jedoch, dass weniger Gewichtung auf Zeichenfolgenausdrücke angegeben wird, die Platzhalter verwenden. Z. B. wenn die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> -Eigenschaftensatz auf "*. BackColor"und die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.BackColor%2A>, alle B`ackColor` Eigenschaften mit Ausnahme von <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> Objekte werden serialisiert.  
  
 Setzen Sie die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> -Eigenschaft, die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> -Eigenschaft wird intern festgelegt werden. Wenn die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> Eigenschaft bereits festgelegt ist, jedoch eine andere Eigenschaft serialisiert werden, stellen Sie sicher, dass zum Verketten von muss die <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Eigenschaft, wenn diese zusätzliche Eigenschaft angeben. Finden Sie unter den unten angegebenen Beispielcode für ein Beispiel für dieses Verfahren.  
  
 Diese Eigenschaft wirkt sich auf alle zu speichern, laden und auszuführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>