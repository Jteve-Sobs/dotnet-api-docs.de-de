<Type Name="CursorEventArgs" FullName="System.Windows.Forms.DataVisualization.Charting.CursorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d409c67ed2e2dab0752dc282cbbbb4316b7bff0f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69205952" /></Metadata><TypeSignature Language="C#" Value="public class CursorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CursorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CursorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CursorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type CursorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Eigeschaften bereit, die mit den folgenden Ereignissen im <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />-Stammobjekt verwendet werden: <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged" />, <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging" />, <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanged" /> und <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs> `e` <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging> <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>-Klasse wird als- <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Parameter in den-,-und-Ereignissen des-Stamm Objekts verfügbar gemacht. <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanged>  
  
 Diese Klasse enthält die folgenden Eigenschaften:  
  
-   Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.ChartArea%2A> -Eigenschaft, die verwendet wird, um <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> das Objekt zu erhalten, für das das Ereignis ausgelöst wurde. Die <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Name> -Eigenschaft ruft den Namen des Diagramm Bereichs ab. andere Diagramm Flächeneigenschaften können ebenfalls festgelegt werden.  
  
-   Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.Axis%2A> -Eigenschaft, die verwendet wird, um <xref:System.Windows.Forms.DataVisualization.Charting.Axis> das Objekt zu erhalten, für das das Ereignis ausgelöst wurde. Verwenden Sie die <xref:System.Windows.Forms.DataVisualization.Charting.Axis.AxisName%2A> -Eigenschaft, um den Typ der Achse-X, x2, Y oder Y2 zu bestimmen. Andere Achsen Eigenschaften können ebenfalls festgelegt werden.  
  
-   Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewPosition%2A> -Eigenschaft, die die Position eines Cursors entlang einer Achse darstellt, gemessen als Achsen Wert, wenn das-Ereignis ausgelöst wurde. Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewPosition%2A> -Eigenschaft kann verwendet werden, um die Position eines Cursors zu erhalten. Im- <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> Ereignis kann diese Eigenschaft auch verwendet werden, um die Cursorposition zurückzusetzen.  
  
-   Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionStart%2A> -Eigenschaft, die die Anfangsposition einer Bereichsauswahl entlang einer Achse darstellt (gemessen als Achsen Wert), wenn das-Ereignis ausgelöst wurde. Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionStart%2A> -Eigenschaft kann verwendet werden, um die ausgewählte Anfangsposition des Bereichs zu erhalten. Im- <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging> Ereignis kann diese Eigenschaft auch zum Zurücksetzen der Position verwendet werden.  
  
-   Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionEnd%2A> -Eigenschaft, die die Endposition einer Bereichsauswahl entlang einer Achse darstellt (gemessen als Achsen Wert), wenn das-Ereignis ausgelöst wurde. Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionEnd%2A> -Eigenschaft kann verwendet werden, um die ausgewählte Bereichs Endposition zu erhalten. Im- <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging> Ereignis kann diese Eigenschaft auch zum Zurücksetzen der Position verwendet werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CursorEventArgs (System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea, System.Windows.Forms.DataVisualization.Charting.Axis axis, double newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea, class System.Windows.Forms.DataVisualization.Charting.Axis axis, float64 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.#ctor(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Windows.Forms.DataVisualization.Charting.Axis,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CursorEventArgs(System::Windows::Forms::DataVisualization::Charting::ChartArea ^ chartArea, System::Windows::Forms::DataVisualization::Charting::Axis ^ axis, double newPosition);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.CursorEventArgs : System.Windows.Forms.DataVisualization.Charting.ChartArea * System.Windows.Forms.DataVisualization.Charting.Axis * double -&gt; System.Windows.Forms.DataVisualization.Charting.CursorEventArgs" Usage="new System.Windows.Forms.DataVisualization.Charting.CursorEventArgs (chartArea, axis, newPosition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chartArea" Type="System.Windows.Forms.DataVisualization.Charting.ChartArea" />
        <Parameter Name="axis" Type="System.Windows.Forms.DataVisualization.Charting.Axis" />
        <Parameter Name="newPosition" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="chartArea">Die <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> des Cursors.</param>
        <param name="axis">Die Achse des Cursors.</param>
        <param name="newPosition">Die neue Cursorposition.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs" />-Klasse mit dem angegebenen Diagrammbereich, der angegebenen Achse und der angegebenen Cursorposition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CursorEventArgs (System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea, System.Windows.Forms.DataVisualization.Charting.Axis axis, double newSelectionStart, double newSelectionEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea, class System.Windows.Forms.DataVisualization.Charting.Axis axis, float64 newSelectionStart, float64 newSelectionEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.#ctor(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Windows.Forms.DataVisualization.Charting.Axis,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CursorEventArgs(System::Windows::Forms::DataVisualization::Charting::ChartArea ^ chartArea, System::Windows::Forms::DataVisualization::Charting::Axis ^ axis, double newSelectionStart, double newSelectionEnd);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.CursorEventArgs : System.Windows.Forms.DataVisualization.Charting.ChartArea * System.Windows.Forms.DataVisualization.Charting.Axis * double * double -&gt; System.Windows.Forms.DataVisualization.Charting.CursorEventArgs" Usage="new System.Windows.Forms.DataVisualization.Charting.CursorEventArgs (chartArea, axis, newSelectionStart, newSelectionEnd)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chartArea" Type="System.Windows.Forms.DataVisualization.Charting.ChartArea" />
        <Parameter Name="axis" Type="System.Windows.Forms.DataVisualization.Charting.Axis" />
        <Parameter Name="newSelectionStart" Type="System.Double" />
        <Parameter Name="newSelectionEnd" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="chartArea">Die <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> des Cursors.</param>
        <param name="axis">Die Achse des Cursors.</param>
        <param name="newSelectionStart">Die Anfangsposition der neuen Bereichsauswahl.</param>
        <param name="newSelectionEnd">Die Endposition der neuen Bereichsauswahl.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs" />-Klasse mit dem angegebenen Diagrammbereich, der angegebenen Achse und den angegebenen Anfangs- und Endpositionen für den neuen Bereich.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Axis">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.Axis Axis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.Axis Axis" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.Axis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Axis As Axis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::Axis ^ Axis { System::Windows::Forms::DataVisualization::Charting::Axis ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Axis : System.Windows.Forms.DataVisualization.Charting.Axis" Usage="System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.Axis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" />-Objekt ab, zu dem ein Cursor oder eine Bereichsauswahl gehört.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" />, die die Achse darstellt, zu der ein Cursor oder eine Bereichsauswahl gehört.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.Axis%2A> -Eigenschaft wird in den folgenden Ereignissen des <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanged> <xref:System.Windows.Forms.DataVisualization.Charting.Chart> -Stamm Objekts verfügbar <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>gemacht <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>:, <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging>und.  
  
 Diese Eigenschaft kann für Folgendes verwendet werden:  
  
-   bestimmen Sie den Typ der Achse (X, x2, Y oder Y2), für die das Ereignis ausgelöst wird, indem <xref:System.Windows.Forms.DataVisualization.Charting.Axis.AxisName%2A> Sie die-Eigenschaft verwenden.  
  
-   Sie können Achsen Eigenschaften wie z <xref:System.Windows.Forms.DataVisualization.Charting.Axis.LineColor%2A>. b. festlegen und festlegen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartArea As ChartArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartArea ^ ChartArea { System::Windows::Forms::DataVisualization::Charting::ChartArea ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChartArea : System.Windows.Forms.DataVisualization.Charting.ChartArea" Usage="System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" />-Objekt ab, zu dem ein Cursor oder eine Bereichsauswahl gehört.</summary>
        <value>Ein Objekt von Typ <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" />, das den Diagrammbereich darstellt, zu dem eine Bereichsauswahl oder ein Cursor gehört.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.ChartArea%2A> -Eigenschaft wird in den folgenden Ereignissen des <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanged> <xref:System.Windows.Forms.DataVisualization.Charting.Chart> -Stamm Objekts verfügbar <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>gemacht <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>:, <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging>und.  
  
 Diese Eigenschaft kann für Folgendes verwendet werden:  
  
-   bestimmen Sie, für welchen Diagrammbereich das Ereignis ausgelöst wird. Dies ist hilfreich zu wissen, wenn mehrere Diagramm Flächen in einem Diagramm Bild vorhanden sind.  
  
-   Get-und Set-Diagramm Flächeneigenschaften, <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.BackColor%2A>z. b.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewPosition">
      <MemberSignature Language="C#" Value="public double NewPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NewPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewPosition As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double NewPosition { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.NewPosition : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Position eines Cursors ab oder legt diese fest. Legt abhängig vom Ereignis auch die Position des Cursors fest.</summary>
        <value>Ein <see langword="double" />-Wert, der die Position eines Cursors auf einer Achse darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft stellt die neue Position eines Cursors dar und kann im <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> -Ereignis und im- <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> Ereignis verwendet werden, um die Cursorposition zu erhalten. Sie kann auch im <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging> -Ereignis verwendet werden, um die Cursorposition festzulegen.  
  
 Beachten Sie, dass das Festlegen dieser <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging> Eigenschaft im Ereignis keine Auswirkung hat. Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewPosition%2A> -Eigenschaft hat den <xref:System.Double.NaN> Wert in diesem Ereignis.  
  
 Verwenden Sie die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.ChartArea%2A> -Eigenschaft, um den Diagrammbereich zu ermitteln, für den das Ereignis ausgelöst wird.  
  
 Verwenden Sie <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.Axis%2A> die-Eigenschaft, um zu bestimmen, ob diese Endposition für einen auf der primären oder sekundären X-oder Y-Achse ausgewählten Bereich gilt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewSelectionEnd">
      <MemberSignature Language="C#" Value="public double NewSelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NewSelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property NewSelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double NewSelectionEnd { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.NewSelectionEnd : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Endposition eines ausgewählten Bereichs ab oder legt diese fest. Legt abhängig vom Ereignis auch die Endposition des Bereichs fest.</summary>
        <value>Ein <see langword="double" />-Wert, der die Endposition eines ausgewählten Bereichs darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionEnd%2A> -Eigenschaft stellt die neue Position eines Cursors dar und kann <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> im-Ereignis und im <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> -Ereignis verwendet werden, um die Cursorposition zu erhalten. Sie kann auch im <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging> -Ereignis verwendet werden, um die Cursorposition festzulegen.  
  
 Beachten Sie, dass das Festlegen dieser <xref:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging> Eigenschaft im Ereignis keine Auswirkung hat. Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionEnd%2A> -Eigenschaft hat den <xref:System.Double.NaN> Wert in diesem Ereignis.  
  
 Die Anfangsposition eines ausgewählten Bereichs ist nicht notwendigerweise kleiner als die Endposition eines ausgewählten Bereichs.  Die Startposition ist die Position, an der der Benutzer in der Diagramm Fläche auf die Maus geklickt hat, und die Endposition ist die Position der Maus zum Zeitpunkt, an dem das Ereignis ausgelöst wird.  
  
 Um die Diagramm Flächen zu ermitteln, für die das Ereignis ausgelöst wird, <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.ChartArea%2A> verwenden Sie die-Eigenschaft.  
  
 Verwenden Sie <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.Axis%2A> die-Eigenschaft, um zu bestimmen, ob diese Endposition für einen auf der primären oder sekundären X-oder Y-Achse ausgewählten Bereich gilt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewSelectionStart">
      <MemberSignature Language="C#" Value="public double NewSelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NewSelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property NewSelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double NewSelectionStart { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.NewSelectionStart : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anfangsposition eines ausgewählten Bereichs ab oder legt diese fest. Legt abhängig vom Ereignis auch die Anfangsposition des Bereichs fest.</summary>
        <value>Ein <see langword="double" />-Wert, der die Anfangsposition eines ausgewählten Bereichs darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionStart%2A> -Eigenschaft stellt die neue Position eines Cursors dar und kann <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> im-Ereignis und im <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> -Ereignis verwendet werden, um die Cursorposition zu erhalten. Sie kann auch im <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> -Ereignis verwendet werden, um die Cursorposition festzulegen.  
  
 Beachten Sie, dass das Festlegen dieser <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> Eigenschaft im-Ereignis keine Auswirkung hat <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.NewSelectionStart%2A> . die-Eigenschaft hat den <xref:System.Double.NaN> Wert in diesem Ereignis.  
  
 Die Anfangsposition eines ausgewählten Bereichs ist nicht notwendigerweise kleiner als die Endposition eines ausgewählten Bereichs. Die Startposition ist die Position, an der der Benutzer in der Diagramm Fläche auf die Maus geklickt hat, und die Endposition ist die Position der Maus zum Zeitpunkt, an dem das Ereignis ausgelöst wird.  
  
 Verwenden Sie die <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.ChartArea%2A> -Eigenschaft, um den Diagrammbereich zu ermitteln, für den das Ereignis ausgelöst wird.  
  
 Verwenden Sie <xref:System.Windows.Forms.DataVisualization.Charting.CursorEventArgs.Axis%2A> die-Eigenschaft, um zu bestimmen, ob diese Endposition für einen auf der primären oder sekundären X-oder Y-Achse ausgewählten Bereich gilt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
