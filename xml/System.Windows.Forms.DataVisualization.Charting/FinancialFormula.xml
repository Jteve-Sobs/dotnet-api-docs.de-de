<Type Name="FinancialFormula" FullName="System.Windows.Forms.DataVisualization.Charting.FinancialFormula">
  <TypeSignature Language="C#" Value="public enum FinancialFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FinancialFormula extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
  <TypeSignature Language="VB.NET" Value="Public Enum FinancialFormula" />
  <TypeSignature Language="C++ CLI" Value="public enum class FinancialFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="a15d2-101">Gibt eine Formel für finanzielle Berechnungen an.</span><span class="sxs-lookup"><span data-stu-id="a15d2-101">Specifies a financial formula.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a15d2-102">Die <xref:System.Windows.Forms.DataVisualization.Charting.FinancialFormula> Enumeration wird verwendet, in Aufrufen an die `FinancialFormula` Methoden, die in enthaltenen der <xref:System.Windows.Forms.DataVisualization.Charting.DataFormula> -Klasse und gibt den Typ der finanzielle Formel verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-102">The <xref:System.Windows.Forms.DataVisualization.Charting.FinancialFormula> enumeration is used in calls to the `FinancialFormula` methods that are contained in the <xref:System.Windows.Forms.DataVisualization.Charting.DataFormula> class, and specifies the type of financial formula to be used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccumulationDistribution">
      <MemberSignature Language="C#" Value="AccumulationDistribution" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula AccumulationDistribution = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.AccumulationDistribution" />
      <MemberSignature Language="VB.NET" Value="AccumulationDistribution" />
      <MemberSignature Language="C++ CLI" Value="AccumulationDistribution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-103">Mit der Accumulation/Distribution-Formel wird anhand der Beziehung zwischen Umsatz und Preisen die Stärke von Kursbewegungen berechnet. Wenn der Umsatz zunimmt, besteht eine hohe Wahrscheinlichkeit, dass die Preise steigen.</span><span class="sxs-lookup"><span data-stu-id="a15d2-103">Accumulation Distribution formula uses a relationship between volume and prices to estimate the strength of price movements; if volume is increased, there is a high probability that prices will go up.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AverageTrueRange">
      <MemberSignature Language="C#" Value="AverageTrueRange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula AverageTrueRange = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.AverageTrueRange" />
      <MemberSignature Language="VB.NET" Value="AverageTrueRange" />
      <MemberSignature Language="C++ CLI" Value="AverageTrueRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-104">Der Average-True-Range-Indikator misst den Einsatz und vergleicht die Spanne zwischen Höchst-, Tiefst- und Schlusskurs.</span><span class="sxs-lookup"><span data-stu-id="a15d2-104">Average True Range indicator measures commitment and compares the range between the High, Low and Close prices.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="BollingerBands">
      <MemberSignature Language="C#" Value="BollingerBands" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula BollingerBands = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.BollingerBands" />
      <MemberSignature Language="VB.NET" Value="BollingerBands" />
      <MemberSignature Language="C++ CLI" Value="BollingerBands" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-105">Bollinger-Bänder werden auf der Höhe von Standardabweichungen über und unter einem einfachen gleitenden Durchschnitt gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="a15d2-105">Bollinger Bands indicators are plotted at standard deviation levels above and below a simple moving average.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ChaikinOscillator">
      <MemberSignature Language="C#" Value="ChaikinOscillator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula ChaikinOscillator = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.ChaikinOscillator" />
      <MemberSignature Language="VB.NET" Value="ChaikinOscillator" />
      <MemberSignature Language="C++ CLI" Value="ChaikinOscillator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-106">Der Chaikin-Oszillator gibt die Differenz zwischen einem exponentiellen gleitenden Durchschnitt über drei Tage und einem exponentiellen gleitenden Durchschnitt über zehn Tage an, die auf die Accumulation/Distribution-Formel angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="a15d2-106">Chaikin Oscillator indicator is the difference between a 3-day exponential moving average and a 10-day exponential moving average applied to the accumulation distribution.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CommodityChannelIndex">
      <MemberSignature Language="C#" Value="CommodityChannelIndex" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula CommodityChannelIndex = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.CommodityChannelIndex" />
      <MemberSignature Language="VB.NET" Value="CommodityChannelIndex" />
      <MemberSignature Language="C++ CLI" Value="CommodityChannelIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-107">Der Commodity Channel Index vergleicht Kurse mit dem gleitenden Durchschnitt des jeweiligen Kurses.</span><span class="sxs-lookup"><span data-stu-id="a15d2-107">Commodity Channel Index compares prices with their moving averages.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DetrendedPriceOscillator">
      <MemberSignature Language="C#" Value="DetrendedPriceOscillator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula DetrendedPriceOscillator = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.DetrendedPriceOscillator" />
      <MemberSignature Language="VB.NET" Value="DetrendedPriceOscillator" />
      <MemberSignature Language="C++ CLI" Value="DetrendedPriceOscillator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-108">Mit dem trendbereinigten Kursoszillator wird versucht, Kurse ohne Trends darzustellen.</span><span class="sxs-lookup"><span data-stu-id="a15d2-108">Detrended Price Oscillator attempts to remove trends from prices.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EaseOfMovement">
      <MemberSignature Language="C#" Value="EaseOfMovement" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula EaseOfMovement = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.EaseOfMovement" />
      <MemberSignature Language="VB.NET" Value="EaseOfMovement" />
      <MemberSignature Language="C++ CLI" Value="EaseOfMovement" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-109">Der Ease-of-Movement-Indikator behandelt die Beziehung zwischen Umsatz- und Preisänderungen und gibt die Stärke eines Preistrends anhand des Umsatzes an.</span><span class="sxs-lookup"><span data-stu-id="a15d2-109">Ease of Movement deals with the relationship between volume and price change, and uses volume to indicate how strong a trend is for prices.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Envelopes">
      <MemberSignature Language="C#" Value="Envelopes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula Envelopes = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.Envelopes" />
      <MemberSignature Language="VB.NET" Value="Envelopes" />
      <MemberSignature Language="C++ CLI" Value="Envelopes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-110">Umschläge werden über und unter einem gleitenden Durchschnitt gezeichnet, wobei ein Prozentwert als Versatz verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a15d2-110">Envelopes are plotted above and below a moving average using a specified percentage as the shift.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExponentialMovingAverage">
      <MemberSignature Language="C#" Value="ExponentialMovingAverage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula ExponentialMovingAverage = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.ExponentialMovingAverage" />
      <MemberSignature Language="VB.NET" Value="ExponentialMovingAverage" />
      <MemberSignature Language="C++ CLI" Value="ExponentialMovingAverage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-111">Ein exponentieller gleitender Durchschnitt ist ein Mittelwert der Daten über einem bestimmten Zeitraum, wobei die letzten Tage stärker gewichtet werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-111">An Exponential Moving Average is an average of data calculated over a period of time where the most recent days have more weight.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Forecasting">
      <MemberSignature Language="C#" Value="Forecasting" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula Forecasting = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.Forecasting" />
      <MemberSignature Language="VB.NET" Value="Forecasting" />
      <MemberSignature Language="C++ CLI" Value="Forecasting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-112">Mit der Prognoseformel werden zukünftige Werte auf Grundlage früherer Beobachtungen vorausberechnet.</span><span class="sxs-lookup"><span data-stu-id="a15d2-112">Forecasting predicts future values using historical observations.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MassIndex">
      <MemberSignature Language="C#" Value="MassIndex" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula MassIndex = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.MassIndex" />
      <MemberSignature Language="VB.NET" Value="MassIndex" />
      <MemberSignature Language="C++ CLI" Value="MassIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-113">Der Mass Index wird für die Prognose einer Trendumkehr verwendet, indem Differenz und Spanne zwischen Höchst- und Tiefstkurs verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-113">The Mass Index is used to predict trend reversal by comparing the difference and range between High and Low prices.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MedianPrice">
      <MemberSignature Language="C#" Value="MedianPrice" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula MedianPrice = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.MedianPrice" />
      <MemberSignature Language="VB.NET" Value="MedianPrice" />
      <MemberSignature Language="C++ CLI" Value="MedianPrice" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-114">Median-Kurse sind mittlere Werte von Tageskursen, die als Filter für Trendindikatoren verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="a15d2-114">Median prices are mid-point values of daily prices and can be used as a filter for trend indicators.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MoneyFlow">
      <MemberSignature Language="C#" Value="MoneyFlow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula MoneyFlow = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.MoneyFlow" />
      <MemberSignature Language="VB.NET" Value="MoneyFlow" />
      <MemberSignature Language="C++ CLI" Value="MoneyFlow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-115">Der Money Flow Index vergleicht Aufwärts- und Abwärtsbewegungen umsatzgewichteter typischer Kurse.</span><span class="sxs-lookup"><span data-stu-id="a15d2-115">The Money Flow indicator compares upward changes and downward changes of volume-weighted typical prices.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MovingAverage">
      <MemberSignature Language="C#" Value="MovingAverage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula MovingAverage = int32(21)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.MovingAverage" />
      <MemberSignature Language="VB.NET" Value="MovingAverage" />
      <MemberSignature Language="C++ CLI" Value="MovingAverage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-116">Ein einfacher gleitender Durchschnitt ist ein über einen bestimmten Zeitraum berechneter Mittelwert von Daten.</span><span class="sxs-lookup"><span data-stu-id="a15d2-116">A Simple Moving Average is an average of data calculated over a period of time.</span></span> <span data-ttu-id="a15d2-117">Der gleitende Durchschnitt ist der häufigste Kursindikator in der technischen Aktienanalyse. Er kann für jeden Kurs, z. B. Höchst-, Tiefst-, Eröffnungs- und Schlusskurs, verwendet und auf andere Indikatoren angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-117">The moving average is the most popular price indicator used in technical analysis, and can be used with any price, for example, Hi, Low, Open and Close, or can be applied to other indicators.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MovingAverageConvergenceDivergence">
      <MemberSignature Language="C#" Value="MovingAverageConvergenceDivergence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula MovingAverageConvergenceDivergence = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.MovingAverageConvergenceDivergence" />
      <MemberSignature Language="VB.NET" Value="MovingAverageConvergenceDivergence" />
      <MemberSignature Language="C++ CLI" Value="MovingAverageConvergenceDivergence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-118">Der MACD (Moving Average Convergence/Divergence)-Indikator vergleicht zwei Werte des gleitenden Durchschnitts von Kursen. Er wird mit einem exponentiellen gleitenden Durchschnitt von neun Tagen als Signal für günstige Zeitpunkte zum Kaufen und Verkaufen verwendet.</span><span class="sxs-lookup"><span data-stu-id="a15d2-118">The Moving Average Convergence/Divergence indicator compares two moving averages of prices and is used with a 9-day Exponential Moving average as a signal that indicates buying and selling moments.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NegativeVolumeIndex">
      <MemberSignature Language="C#" Value="NegativeVolumeIndex" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula NegativeVolumeIndex = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.NegativeVolumeIndex" />
      <MemberSignature Language="VB.NET" Value="NegativeVolumeIndex" />
      <MemberSignature Language="C++ CLI" Value="NegativeVolumeIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-119">Der Negative Volume Index sollte mit dem Positive Volume Index verwendet werden. Der Negative Volume Index ändert sich nur, wenn sich der Umsatz des vorherigen Tags verringert.</span><span class="sxs-lookup"><span data-stu-id="a15d2-119">The Negative Volume Index should be used with the Positive Volume index; the Negative Volume Index only changes if the volume decreases from the previous day.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OnBalanceVolume">
      <MemberSignature Language="C#" Value="OnBalanceVolume" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula OnBalanceVolume = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.OnBalanceVolume" />
      <MemberSignature Language="VB.NET" Value="OnBalanceVolume" />
      <MemberSignature Language="C++ CLI" Value="OnBalanceVolume" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-120">Der On-Balance-Volume-Indikator misst positive und negative Kapitalbewegungen.</span><span class="sxs-lookup"><span data-stu-id="a15d2-120">The On Balance Volume indicator measures positive and negative volume flow.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Performance">
      <MemberSignature Language="C#" Value="Performance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula Performance = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.Performance" />
      <MemberSignature Language="VB.NET" Value="Performance" />
      <MemberSignature Language="C++ CLI" Value="Performance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-121">Der Indikator Leistung vergleicht einen aktuellen Schlusskurs oder einen beliebigen anderen Kurs mit dem ersten Schlusswert des ersten Zeitraums.</span><span class="sxs-lookup"><span data-stu-id="a15d2-121">The Performance indicator compares a current closing price or any other price with the first closing value from the first time period.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PositiveVolumeIndex">
      <MemberSignature Language="C#" Value="PositiveVolumeIndex" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula PositiveVolumeIndex = int32(17)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.PositiveVolumeIndex" />
      <MemberSignature Language="VB.NET" Value="PositiveVolumeIndex" />
      <MemberSignature Language="C++ CLI" Value="PositiveVolumeIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-122">Der Positive Volume Index sollte mit dem Negative Volume Index verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-122">The Positive Volume Index should be used with the Negative Volume index.</span></span> <span data-ttu-id="a15d2-123">Der Positive Volume Index ändert sich nur, wenn sich der Umsatz des vorherigen Tags verringert.</span><span class="sxs-lookup"><span data-stu-id="a15d2-123">The Positive volume index only changes if the volume decreases from the previous day.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PriceVolumeTrend">
      <MemberSignature Language="C#" Value="PriceVolumeTrend" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula PriceVolumeTrend = int32(18)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.PriceVolumeTrend" />
      <MemberSignature Language="VB.NET" Value="PriceVolumeTrend" />
      <MemberSignature Language="C++ CLI" Value="PriceVolumeTrend" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-124">Der Price and Volume Trend ist ein kumulierter Gesamtumsatz, der anhand von relativen Änderungen des Schlusskurses berechnet wird. Er sollte gemeinsam mit anderen Indikatoren verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-124">The Price Volume Trend is a cumulative volume total that is calculated using relative changes of the closing price, and should be used with other indicators.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RateOfChange">
      <MemberSignature Language="C#" Value="RateOfChange" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula RateOfChange = int32(19)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.RateOfChange" />
      <MemberSignature Language="VB.NET" Value="RateOfChange" />
      <MemberSignature Language="C++ CLI" Value="RateOfChange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-125">Der Rate-of-Change-Indikator vergleicht einen angegebenen Schlusskurs mit dem aktuellen Kurs.</span><span class="sxs-lookup"><span data-stu-id="a15d2-125">The Rate of Change indicator compares a specified closing price with the current price.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RelativeStrengthIndex">
      <MemberSignature Language="C#" Value="RelativeStrengthIndex" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula RelativeStrengthIndex = int32(20)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.RelativeStrengthIndex" />
      <MemberSignature Language="VB.NET" Value="RelativeStrengthIndex" />
      <MemberSignature Language="C++ CLI" Value="RelativeStrengthIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-126">Der Index für relative Stärke ist ein Dynamikoszillator, der Aufwärtsbewegungen des Schlusskurses mit Abwärtsbewegungen vergleicht und dessen Ergebnisse einen Wertebereich von 0 bis 100 aufweisen.</span><span class="sxs-lookup"><span data-stu-id="a15d2-126">The Relative Strength Index is a momentum oscillator that compares upward movements of the closing price with downward movements, and results in values that range from 0 to 100.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDeviation">
      <MemberSignature Language="C#" Value="StandardDeviation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula StandardDeviation = int32(22)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.StandardDeviation" />
      <MemberSignature Language="VB.NET" Value="StandardDeviation" />
      <MemberSignature Language="C++ CLI" Value="StandardDeviation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-127">Die Standardabweichung wird verwendet, um die Volatilität anzugeben. Sie misst die Differenz zwischen Werten, z. B. dem Schlusskurs, und dem entsprechenden gleitenden Durchschnitt.</span><span class="sxs-lookup"><span data-stu-id="a15d2-127">Standard Deviation is used to indicate volatility, and measures the difference between values, for example, closing price, and their moving average.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StochasticIndicator">
      <MemberSignature Language="C#" Value="StochasticIndicator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula StochasticIndicator = int32(23)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.StochasticIndicator" />
      <MemberSignature Language="VB.NET" Value="StochasticIndicator" />
      <MemberSignature Language="C++ CLI" Value="StochasticIndicator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-128">Mit dem Stochastikindikator lässt sich eine Trendumkehr ermitteln. Hierzu wird der Zeitpunkt in einem Markt mit Aufwärtstrend ermittelt, zu dem die Schlusskurse nahe an den Tiefstkursen liegen, und der Zeitpunkt in einem Markt mit Abwärtstrend, zu dem die Schlusskurse nahe an den Höchstkursen liegen.</span><span class="sxs-lookup"><span data-stu-id="a15d2-128">The Stochastic Indicator helps to find trend reversal by searching in a period for when the closing prices are close to low prices in an upward trending market and when the closing prices are close to high prices in a downward trending market.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TriangularMovingAverage">
      <MemberSignature Language="C#" Value="TriangularMovingAverage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula TriangularMovingAverage = int32(24)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.TriangularMovingAverage" />
      <MemberSignature Language="VB.NET" Value="TriangularMovingAverage" />
      <MemberSignature Language="C++ CLI" Value="TriangularMovingAverage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-129">Ein dreieckiger gleitender Durchschnitt ist ein über einen bestimmten Zeitraum berechneter Mittelwert von Daten, wobei der mittlere Bereich der Daten stärker gewichtet wird.</span><span class="sxs-lookup"><span data-stu-id="a15d2-129">A Triangular Moving Average is an average of data calculated over a period of time where the middle portion of data has more weight.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TripleExponentialMovingAverage">
      <MemberSignature Language="C#" Value="TripleExponentialMovingAverage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula TripleExponentialMovingAverage = int32(25)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.TripleExponentialMovingAverage" />
      <MemberSignature Language="VB.NET" Value="TripleExponentialMovingAverage" />
      <MemberSignature Language="C++ CLI" Value="TripleExponentialMovingAverage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-130">Der dreifach exponentiell geglättete Durchschnitt basiert auf einem dreifachen gleitenden Durchschnitt des Schlusskurses.</span><span class="sxs-lookup"><span data-stu-id="a15d2-130">The Triple Exponential Moving Average is based on a triple moving average of the closing price.</span></span> <span data-ttu-id="a15d2-131">Mit ihm sollen Short-Zyklen ausgeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-131">Its purpose is to eliminate short cycles.</span></span> <span data-ttu-id="a15d2-132">Dieser Indikator behält den Schlusskurs in Trends bei, die kürzer als der angegebene Zeitraum sind.</span><span class="sxs-lookup"><span data-stu-id="a15d2-132">This indicator keeps the closing price in trends that are shorter than the specified period.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TypicalPrice">
      <MemberSignature Language="C#" Value="TypicalPrice" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula TypicalPrice = int32(26)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.TypicalPrice" />
      <MemberSignature Language="VB.NET" Value="TypicalPrice" />
      <MemberSignature Language="C++ CLI" Value="TypicalPrice" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-133">Der Typical-Price-Indikator ist der Mittelwert von Tageskursen, und er kann als Filter für Trendindikatoren verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-133">Typical Price is the average value of daily prices, and can be used as a filter for trend indicators.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="VolatilityChaikins">
      <MemberSignature Language="C#" Value="VolatilityChaikins" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula VolatilityChaikins = int32(27)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.VolatilityChaikins" />
      <MemberSignature Language="VB.NET" Value="VolatilityChaikins" />
      <MemberSignature Language="C++ CLI" Value="VolatilityChaikins" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-134">Der Indikator Chaiken's Volatility misst die Differenz zwischen Höchst- und Tiefstkurs, und er wird verwendet, um Tiefpunkte und Spitzen des Marktes anzugeben.</span><span class="sxs-lookup"><span data-stu-id="a15d2-134">The Volatility Chaikins indicator measures the difference between High and Low prices, and is used to indicate tops or bottoms of the market.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="VolumeOscillator">
      <MemberSignature Language="C#" Value="VolumeOscillator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula VolumeOscillator = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.VolumeOscillator" />
      <MemberSignature Language="VB.NET" Value="VolumeOscillator" />
      <MemberSignature Language="C++ CLI" Value="VolumeOscillator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-135">Mit dem Volume Oscillator wird versucht, durch den Vergleich von zwei Kurven des gleitenden Durchschnitts (eine Kurve über einen kurzen Zeitraum und eine weitere Kurve über einen längeren Zeitraum) Umsatztrends zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="a15d2-135">The Volume Oscillator attempts to identify trends in volume by comparing two moving averages: one with a short period and another with a longer period.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WeightedClose">
      <MemberSignature Language="C#" Value="WeightedClose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula WeightedClose = int32(29)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.WeightedClose" />
      <MemberSignature Language="VB.NET" Value="WeightedClose" />
      <MemberSignature Language="C++ CLI" Value="WeightedClose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-136">Mit der Weighted-Close-Formel wird der Mittelwert von Tageskursen berechnet.</span><span class="sxs-lookup"><span data-stu-id="a15d2-136">The Weighted Close formula calculates the average value of daily prices.</span></span> <span data-ttu-id="a15d2-137">Typical Price und Weighted Close unterscheiden sich nur darin, dass der Schlusskurs eine zusätzliche Gewichtung erhält und als wichtigster Kurs betrachtet wird.</span><span class="sxs-lookup"><span data-stu-id="a15d2-137">The only difference between Typical Price and the Weighted Close is that the closing price has extra weight, and is considered the most important price.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WeightedMovingAverage">
      <MemberSignature Language="C#" Value="WeightedMovingAverage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula WeightedMovingAverage = int32(30)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.WeightedMovingAverage" />
      <MemberSignature Language="VB.NET" Value="WeightedMovingAverage" />
      <MemberSignature Language="C++ CLI" Value="WeightedMovingAverage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-138">Der gewichtete gleitende Durchschnitt ist ein Mittelwert von über einen bestimmten Zeitraum berechneten Daten, wobei die jüngsten Daten stärker gewichtet werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-138">Weighted Moving Average is an average of data that is calculated over a period of time, where greater weight is attached to the most recent data.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WilliamsR">
      <MemberSignature Language="C#" Value="WilliamsR" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula WilliamsR = int32(31)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataVisualization.Charting.FinancialFormula.WilliamsR" />
      <MemberSignature Language="VB.NET" Value="WilliamsR" />
      <MemberSignature Language="C++ CLI" Value="WilliamsR" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FinancialFormula</ReturnType>
      </ReturnValue>
      <MemberValue>31</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a15d2-139">Der %R-Indikator von Williams ist ein Dynamikindikator, mit dem Überkauf und Überverkauf gemessen werden.</span><span class="sxs-lookup"><span data-stu-id="a15d2-139">Williams %R is a momentum indicator, and is used to measure overbought and oversold levels.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>