<Type Name="DataFormula" FullName="System.Windows.Forms.DataVisualization.Charting.DataFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a3ca280fd61d6ed61c6cc0c2dafbfad581d8ee8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39895793" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormula" />
  <TypeSignature Language="F#" Value="type DataFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Eigenschaften und Methoden bereit, um Reihendaten für die technische Analyse vorzubereiten, Formeln auf die Reihendaten anzuwenden und Ausgabedaten für die Anzeige als Diagramm vorzubereiten. Die tatsächlichen Berechnungen werden in der <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />-Klasse ausgeführt.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataFormula ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataFormula();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataFormula" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySeriesValues">
      <MemberSignature Language="C#" Value="public void CopySeriesValues (string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySeriesValues(string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.CopySeriesValues(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySeriesValues (inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySeriesValues(System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.CopySeriesValues : string * string -&gt; unit" Usage="dataFormula.CopySeriesValues (inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeries">Eine durch Trennzeichen getrennte Liste von Eingabedatenreihennamen und optionalen Namen für x- und y-Werte.</param>
        <param name="outputSeries">Eine durch Trennzeichen getrennte Liste von Ausgabedatenreihennamen und optionalen Namen für x- und y-Werte.</param>
        <summary>Kopiert eine Reihe oder den bestimmten X- oder Y-Wert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FinancialFormula">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine Methode aus eine Formel auf.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">Der Name der aufzurufenden Formel.</param>
        <param name="inputSeries">Die Eingabeserien, in denen die Berechnung ausgeführt wird.</param>
        <summary>Ruft eine Methode aus einem Formelmodul mit dem angegebenen Formelnamen und den angegebenen Eingabereihen auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">Der Name der aufzurufenden Formel.</param>
        <param name="inputSeries">Eine durch Trennzeichen getrennte Liste von Eingabereihennamen und optionalen Namen für x- und y-Werte.</param>
        <summary>Ruft eine Methode aus einem Formelmodul mit dem angegebenen Formelnamen und den angegebenen Eingabereihen auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * string * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">Der Name der aufzurufenden Formel.</param>
        <param name="inputSeries">Die Eingabeserien, in denen die Berechnung ausgeführt wird.</param>
        <param name="outputSeries">Die Ausgabereihen, in denen das Ergebnis der Berechnung gespeichert wird.</param>
        <summary>Ruft eine Methode aus einem Formelmodul mit dem angegebenen Formelnamen sowie den Namen der Eingabe- und Ausgabereihen auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">Der Name der aufzurufenden Formel.</param>
        <param name="inputSeries">Eine durch Trennzeichen getrennte Liste von Eingabereihennamen und optionalen Namen für x- und y-Werte.</param>
        <param name="outputSeries">Eine durch Trennzeichen getrennte Liste von Ausgabereihennamen und optionalen Namen für x- und y-Werte.</param>
        <summary>Ruft eine Methode aus einem Formelmodul mit dem angegebenen Formelnamen sowie den angegebenen Eingabe- und Ausgabereihen auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, string inputSeries, string outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As String, outputSeries As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::String ^ inputSeries, System::String ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * string * string * string -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, parameters, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.String" />
        <Parameter Name="outputSeries" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formulaName">Der Name der aufzurufenden Formel.</param>
        <param name="parameters">Die der Formel zugeordneten Parameter.</param>
        <param name="inputSeries">Die Eingabeserien, in denen die Berechnung ausgeführt wird.</param>
        <param name="outputSeries">Die Ausgabereihen, in denen das Ergebnis der Berechnung gespeichert wird.</param>
        <summary>Ruft eine Methode aus einem Formelmodul mit dem angegebenen Formelnamen und den angegebenen Parametern sowie den Namen der Eingabe- und Ausgabereihe auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinancialFormula">
      <MemberSignature Language="C#" Value="public void FinancialFormula (System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FinancialFormula(valuetype System.Windows.Forms.DataVisualization.Charting.FinancialFormula formulaName, string parameters, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataFormula.FinancialFormula(System.Windows.Forms.DataVisualization.Charting.FinancialFormula,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinancialFormula (formulaName As FinancialFormula, parameters As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinancialFormula(System::Windows::Forms::DataVisualization::Charting::FinancialFormula formulaName, System::String ^ parameters, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FinancialFormula : System.Windows.Forms.DataVisualization.Charting.FinancialFormula * string * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataFormula.FinancialFormula (formulaName, parameters, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formulaName" Type="System.Windows.Forms.DataVisualization.Charting.FinancialFormula" />
        <Parameter Name="parameters" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formulaName">Der Name der aufzurufenden Formel.</param>
        <param name="parameters">Die der Formel zugeordneten Parameter.</param>
        <param name="inputSeries">Eine durch Trennzeichen getrennte Liste von Eingabereihennamen und optionalen Namen für x- und y-Werte.</param>
        <param name="outputSeries">Eine durch Trennzeichen getrennte Liste von Ausgabereihennamen und optionalen Namen für x- und y-Werte.</param>
        <summary>Ruft eine Methode aus einem Formelmodul mit dem angegebenen Formelnamen und den angegebenen Parametern unter Verwendung der angegebenen Eingabe- und Ausgabereihe auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyPointIgnored">
      <MemberSignature Language="C#" Value="public bool IsEmptyPointIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyPointIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmptyPointIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmptyPointIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyPointIgnored : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataFormula.IsEmptyPointIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob leere Punkte während Berechnungen ignoriert werden, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn leere Punkte während Berechnungen ignoriert werden; <see langword="false" />, wenn leere Punkte als Nullen behandelt werden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartFromFirst">
      <MemberSignature Language="C#" Value="public bool IsStartFromFirst { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartFromFirst" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStartFromFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStartFromFirst { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsStartFromFirst : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataFormula.IsStartFromFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, ob Formeln, z. B. Formeln zum Berechnen des gleitenden Durchschnitts, bei 0 (null) beginnen sollen.</summary>
        <value>
          <see langword="true" />, wenn Formeln, z. B. "gleitender Durchschnitt", bei 0 (null) beginnen, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statistics">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.StatisticFormula Statistics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statistics As StatisticFormula" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::StatisticFormula ^ Statistics { System::Windows::Forms::DataVisualization::Charting::StatisticFormula ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Statistics : System.Windows.Forms.DataVisualization.Charting.StatisticFormula" Usage="System.Windows.Forms.DataVisualization.Charting.DataFormula.Statistics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.StatisticFormula</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />-Klasse ab.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />-Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>