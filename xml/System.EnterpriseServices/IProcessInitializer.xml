<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="70772-101">Unterstützt Methoden, die beim Starten oder Herunterfahren einer COM-Komponente aufgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="70772-101">Supports methods that can be called when a COM component starts up or shuts down.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70772-102">Implementieren der <xref:System.EnterpriseServices.IProcessInitializer> Schnittstellenmethoden auf serviced Components, wenn die Initialisierung ausgeführt werden soll oder Code für das Herunterfahren bei einem Serverprozess (Dllhost.exe) gestartet wird oder heruntergefahren wird, bzw..</span><span class="sxs-lookup"><span data-stu-id="70772-102">Implement the <xref:System.EnterpriseServices.IProcessInitializer> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</span></span>  
  
 <span data-ttu-id="70772-103">COM+ enthält `Startup` und `Shutdown` Ereignisse aus, wenn Dllhost.exe beginnt und endet.</span><span class="sxs-lookup"><span data-stu-id="70772-103">COM+ provides `Startup` and `Shutdown` events when Dllhost.exe starts and ends.</span></span> <span data-ttu-id="70772-104">Dieses Feature ermöglicht eine COM+-Komponenten, die in einer COM+-Serveranwendung (bezeichnet als Serverkomponenten nachstehend) zum Ausführen von angepasste Initialisierung von Steuerelementen und Code bereinigen installiert sind.</span><span class="sxs-lookup"><span data-stu-id="70772-104">This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</span></span> <span data-ttu-id="70772-105">Eine Instanz von jeder Komponente, implementiert die <xref:System.EnterpriseServices.IProcessInitializer> Schnittstelle wird erstellt und für die Dauer des Prozesses gespeichert und beim Starten und Herunterfahren für die Schnittstellenmethoden aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="70772-105">An instance of each component that implements the <xref:System.EnterpriseServices.IProcessInitializer> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</span></span> <span data-ttu-id="70772-106">Bei Implementierung in einer <xref:System.EnterpriseServices.ServicedComponent>, während der Registrierung der Komponente, die `InitializesServerApplication` Parameter in der `COMAdminCatalogObject` innerhalb der Komponenten Auflistung festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="70772-106">When implemented on a <xref:System.EnterpriseServices.ServicedComponent>, during registration of the component, the `InitializesServerApplication` parameter in the `COMAdminCatalogObject` within the Components collection is set to `true`.</span></span>  
  
 <span data-ttu-id="70772-107">Mithilfe der `Startup` und `Shutdown` Ereignisse, können Sie Ressourcen zu initialisieren, Verbindungen zu erstellen, initialisieren auf freigegebene Daten und Ausführen von Bereinigungscode.</span><span class="sxs-lookup"><span data-stu-id="70772-107">Using the `Startup` and `Shutdown` events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</span></span> <span data-ttu-id="70772-108">Allerdings müssen Sie keine Zustände zugreifen, die für die COM+-spezifisch sind, da noch keine Instanzen von Serverkomponenten erstellt wurden.</span><span class="sxs-lookup"><span data-stu-id="70772-108">However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</span></span> <span data-ttu-id="70772-109">Darüber hinaus den Code in der `Startup` und `Shutdown` Ereignisse sollte so schnell wie möglich, zurückgeben, da das System nur 90 Sekunden für "Dllhost.exe" zur Vorbereitung der Aktivierungen annehmen wartet, nachdem das System den Prozess gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="70772-109">In addition, the code in the `Startup` and `Shutdown` events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</span></span> <span data-ttu-id="70772-110">Wenn Dllhost.exe nicht, dass es innerhalb von 90 Sekunden kann darauf hinweisen, beendet das System den Prozess an; Folglich alle Initialisierung verarbeitungsanforderungen innerhalb dieses Zeitrahmens ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="70772-110">If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</span></span> <span data-ttu-id="70772-111">Jede Serverkomponente, die an der Initialisierung muss unterstützen die <xref:System.EnterpriseServices.IProcessInitializer> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="70772-111">Each server component that participates in initialization must support the <xref:System.EnterpriseServices.IProcessInitializer> interface.</span></span> <span data-ttu-id="70772-112">Beim Start DllHost.exe COM+ erstellt alle Serverkomponenten, die diesen Dienst angefordert `QueryInterface` für die <xref:System.EnterpriseServices.IProcessInitializer> -Schnittstelle, und ruft die <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> Funktion.</span><span class="sxs-lookup"><span data-stu-id="70772-112">On DllHost.exe startup, COM+ creates all server components that requested this service, calls `QueryInterface` for the <xref:System.EnterpriseServices.IProcessInitializer> interface, and calls the <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> function.</span></span> <span data-ttu-id="70772-113">Auf ähnliche Weise, wenn die DllHost.exe-Prozess heruntergefahren wird, ruft er die <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> Funktion auf den zuvor gespeicherten Schnittstellenzeiger auf.</span><span class="sxs-lookup"><span data-stu-id="70772-113">Similarly, when the DllHost.exe process is shut down, it calls the <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> function on those previously stored interface pointers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70772-114">Führt Aktionen zum Herunterfahren aus.</span><span class="sxs-lookup"><span data-stu-id="70772-114">Performs shutdown actions.</span></span> <span data-ttu-id="70772-115">Wird beim Herunterfahren von Dllhost.exe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="70772-115">Called when Dllhost.exe is shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70772-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> Bei einem Failfast oder anderen schwerwiegenden Fehlern beim Herunterfahren wird nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="70772-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> is not called during a failfast or other catastrophic shutdown events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl"><span data-ttu-id="70772-117">In Microsoft Windows XP ein Zeiger auf die <see langword="IUnknown" />-Schnittstelle der startenden COM-Komponente.</span><span class="sxs-lookup"><span data-stu-id="70772-117">In Microsoft Windows XP, a pointer to the <see langword="IUnknown" /> interface of the COM component starting up.</span></span> <span data-ttu-id="70772-118">In Microsoft Windows 2000 ist dieses Argument immer <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="70772-118">In Microsoft Windows 2000, this argument is always <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="70772-119">Führt die Initialisierung beim Systemstart durch.</span><span class="sxs-lookup"><span data-stu-id="70772-119">Performs initialization at startup.</span></span> <span data-ttu-id="70772-120">Wird beim Starten von Dllhost.exe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="70772-120">Called when Dllhost.exe is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70772-121">Das Objekt verweist `punkProcessControl` implementiert eine <xref:System.EnterpriseServices.IProcessInitControl> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="70772-121">The object referenced by `punkProcessControl` implements an <xref:System.EnterpriseServices.IProcessInitControl> interface.</span></span> <span data-ttu-id="70772-122"><xref:System.EnterpriseServices.IProcessInitControl> unterstützt die einzige Methode <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="70772-122"><xref:System.EnterpriseServices.IProcessInitControl> supports the single method <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span></span>  
  
 <span data-ttu-id="70772-123">Initialisierungscode in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> aufrufen, können die <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, bei das Timeout legen Sie auf die Anzahl der Sekunden vor dem Start von der Komponente ein Timeout eintritt.</span><span class="sxs-lookup"><span data-stu-id="70772-123">The initialization code in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> can call the <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>