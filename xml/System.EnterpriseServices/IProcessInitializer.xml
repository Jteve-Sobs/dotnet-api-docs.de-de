<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df86bb08c407981061c5f560771139f0ca5535e6" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53463763" /></Metadata><TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Unterstützt Methoden, die beim Starten oder Herunterfahren einer COM-Komponente aufgerufen werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren der <xref:System.EnterpriseServices.IProcessInitializer> Schnittstellenmethoden für serviced Components, wenn die Initialisierung ausgeführt werden soll, oder Code für das Herunterfahren bei einem Serverprozess (Dllhost.exe) startet oder beendet wird, bzw.  
  
 COM+ bietet `Startup` und `Shutdown` Ereignisse aus, wenn Dllhost.exe beginnt und endet. Dieses Feature ermöglicht alle COM+-Komponenten, die in einer COM+-Serveranwendung (bezeichnet als Serverkomponenten genannt) zum Ausführen von benutzerdefinierten Initialisierung und Bereinigung Codes installiert sind. Eine Instanz jeder Komponente, die implementiert die <xref:System.EnterpriseServices.IProcessInitializer> Schnittstelle wird erstellt und für die Dauer des Prozesses gespeichert, und beim Starten und Herunterfahren für die Schnittstellenmethoden aufgerufen. Bei Implementierung in einer <xref:System.EnterpriseServices.ServicedComponent>, während der Registrierung der Komponente, die `InitializesServerApplication` Parameter in der `COMAdminCatalogObject` Auflistung innerhalb der Komponenten auf festgelegt ist `true`.  
  
 Mithilfe der `Startup` und `Shutdown` Ereignisse, können Sie Ressourcen zu initialisieren, Erstellen von Verbindungen, gemeinsam genutzte Daten initialisieren und Ausführen von Bereinigungscode. Allerdings müssen Sie keine Zustände zugreifen, die für die COM+-spezifisch sind, da noch keine Instanzen von Server-Komponenten erstellt wurden. Außerdem wird der Code in die `Startup` und `Shutdown` Ereignisse sollte so schnell wie möglich zurückgeben, da das System nur 90 Sekunden für "Dllhost.exe" zur Vorbereitung der Aktivierungen zu übernehmen wartet, sobald das System den Prozess gestartet. Wenn Dllhost.exe nicht signalisiert, dass sie innerhalb von 90 Sekunden bereit ist, beendet das System den Prozess an; daher alle Initialisierung verarbeitungsanforderungen innerhalb dieses Zeitraums abgeschlossen werden. Jeder Serverkomponente, die an der Initialisierung unterstützen muss die <xref:System.EnterpriseServices.IProcessInitializer> Schnittstelle. Beim Starten von DllHost.exe COM+ erstellt alle Serverkomponenten, mit denen dieser Dienst angefordert `QueryInterface` für die <xref:System.EnterpriseServices.IProcessInitializer> -Schnittstelle ab und ruft die <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> Funktion. Auf ähnliche Weise, wenn die DllHost.exe-Prozess beendet wird, ruft er die <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> Funktion auf den zuvor gespeicherten Schnittstellenzeiger auf.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt Aktionen zum Herunterfahren aus. Wird beim Herunterfahren von Dllhost.exe aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> Bei einem Failfast oder anderen schwerwiegenden Fehlern beim Herunterfahren wird nicht aufgerufen werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">In Microsoft Windows XP ein Zeiger auf die <see langword="IUnknown" />-Schnittstelle der startenden COM-Komponente. In Microsoft Windows 2000 ist dieses Argument immer <see langword="null" />.</param>
        <summary>Führt die Initialisierung beim Systemstart durch. Wird beim Starten von Dllhost.exe aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Objekt, das auf `punkProcessControl` implementiert eine <xref:System.EnterpriseServices.IProcessInitControl> Schnittstelle. <xref:System.EnterpriseServices.IProcessInitControl> unterstützt die einzige Methode <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.  
  
 Der Initialisierungscode in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> Aufrufen der <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, bei das Timeout legen Sie auf die verbleibende Anzahl von Sekunden vor dem Start von Timeout der Komponente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>