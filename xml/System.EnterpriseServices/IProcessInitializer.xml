<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="018b60939bb52e17b264ebcf5d2ebbe42e4675e6" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76947023" /></Metadata><TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="de50f-101">Unterstützt Methoden, die beim Starten oder Herunterfahren einer COM-Komponente aufgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="de50f-101">Supports methods that can be called when a COM component starts up or shuts down.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de50f-102">Implementieren Sie die Methoden der <xref:System.EnterpriseServices.IProcessInitializer>-Schnittstelle für Serviced Components, wenn Sie den Initialisierungs-oder Herunterfahren-Code ausführen möchten, wenn ein Server Prozess (dllhost. exe) gestartet bzw. heruntergefahren wird.</span><span class="sxs-lookup"><span data-stu-id="de50f-102">Implement the <xref:System.EnterpriseServices.IProcessInitializer> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</span></span>  
  
 <span data-ttu-id="de50f-103">Com+ stellt `Startup`-und `Shutdown`-Ereignisse bereit, wenn "Dllhost. exe" gestartet und beendet wird.</span><span class="sxs-lookup"><span data-stu-id="de50f-103">COM+ provides `Startup` and `Shutdown` events when Dllhost.exe starts and ends.</span></span> <span data-ttu-id="de50f-104">Diese Funktion ermöglicht es, dass alle COM+-Komponenten, die in einer COM+-Serveranwendung installiert sind (im folgenden als Serverkomponenten bezeichnet), benutzerdefinierte Initialisierungs-und Bereinigungs Code ausführen.</span><span class="sxs-lookup"><span data-stu-id="de50f-104">This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</span></span> <span data-ttu-id="de50f-105">Eine Instanz der einzelnen Komponenten, die die <xref:System.EnterpriseServices.IProcessInitializer>-Schnittstelle implementieren, wird für die Dauer des Prozesses erstellt und gespeichert.</span><span class="sxs-lookup"><span data-stu-id="de50f-105">An instance of each component that implements the <xref:System.EnterpriseServices.IProcessInitializer> interface will be created and stored for the duration of the process.</span></span> <span data-ttu-id="de50f-106">Bei der Implementierung auf einem <xref:System.EnterpriseServices.ServicedComponent>muss der `InitializesServerApplication`-Parameter in der `COMAdminCatalogObject` in der Komponenten Auflistung bei der Registrierung der Komponente auf `true` festgelegt werden, damit die Schnittstellen Methoden beim Starten und Herunterfahren aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="de50f-106">When implemented on a <xref:System.EnterpriseServices.ServicedComponent>, the `InitializesServerApplication` parameter in the `COMAdminCatalogObject` within the Components collection needs to be set to `true` during registration of the component, in order for the interface methods to be called during startup and shutdown.</span></span>
  
 <span data-ttu-id="de50f-107">Mit den `Startup`-und `Shutdown` Ereignissen können Sie Ressourcen initialisieren, Verbindungen erstellen, freigegebene Daten initialisieren und Bereinigungs Code ausführen.</span><span class="sxs-lookup"><span data-stu-id="de50f-107">Using the `Startup` and `Shutdown` events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</span></span> <span data-ttu-id="de50f-108">Allerdings dürfen Sie nicht auf die für com+ spezifischen Zustände zugreifen, da noch keine Instanzen von Serverkomponenten erstellt wurden.</span><span class="sxs-lookup"><span data-stu-id="de50f-108">However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</span></span> <span data-ttu-id="de50f-109">Außerdem sollte der Code in den `Startup`-und `Shutdown` Ereignissen so schnell wie möglich zurückgeben, da das System nur 90 Sekunden wartet, bis dllhost. exe die Aktivierung von Aktivierungen nach dem Starten des Prozesses durch das System vorbereitet hat.</span><span class="sxs-lookup"><span data-stu-id="de50f-109">In addition, the code in the `Startup` and `Shutdown` events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</span></span> <span data-ttu-id="de50f-110">Wenn "Dllhost. exe" nicht signalisiert, dass es innerhalb von 90 Sekunden bereit ist, beendet das System den Prozess. Daher muss die gesamte Initialisierungs Verarbeitung innerhalb dieses Zeitraums abgeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="de50f-110">If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</span></span> <span data-ttu-id="de50f-111">Jede Serverkomponente, die an der Initialisierung teilnimmt, muss die <xref:System.EnterpriseServices.IProcessInitializer>-Schnittstelle unterstützen.</span><span class="sxs-lookup"><span data-stu-id="de50f-111">Each server component that participates in initialization must support the <xref:System.EnterpriseServices.IProcessInitializer> interface.</span></span> <span data-ttu-id="de50f-112">Beim Starten von dllhost. exe erstellt com+ alle Serverkomponenten, die diesen Dienst angefordert haben, ruft `QueryInterface` für die <xref:System.EnterpriseServices.IProcessInitializer>-Schnittstelle auf und ruft die <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>-Funktion auf.</span><span class="sxs-lookup"><span data-stu-id="de50f-112">On DllHost.exe startup, COM+ creates all server components that requested this service, calls `QueryInterface` for the <xref:System.EnterpriseServices.IProcessInitializer> interface, and calls the <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> function.</span></span> <span data-ttu-id="de50f-113">Ebenso wird beim Herunterfahren des dllhost. exe-Prozesses die <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>-Funktion für diese zuvor gespeicherten Schnittstellen Zeiger aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="de50f-113">Similarly, when the DllHost.exe process is shut down, it calls the <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> function on those previously stored interface pointers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de50f-114">Führt Aktionen zum Herunterfahren aus.</span><span class="sxs-lookup"><span data-stu-id="de50f-114">Performs shutdown actions.</span></span> <span data-ttu-id="de50f-115">Wird beim Herunterfahren von Dllhost.exe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="de50f-115">Called when Dllhost.exe is shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de50f-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> wird nicht während eines FailFast-Ereignisses oder eines anderen schwerwiegenden herunter Fahrens aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="de50f-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> is not called during a failfast or other catastrophic shutdown events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl"><span data-ttu-id="de50f-117">In Microsoft Windows XP ein Zeiger auf die <see langword="IUnknown" />-Schnittstelle der startenden COM-Komponente.</span><span class="sxs-lookup"><span data-stu-id="de50f-117">In Microsoft Windows XP, a pointer to the <see langword="IUnknown" /> interface of the COM component starting up.</span></span> <span data-ttu-id="de50f-118">In Microsoft Windows 2000 ist dieses Argument immer <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="de50f-118">In Microsoft Windows 2000, this argument is always <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="de50f-119">Führt die Initialisierung beim Systemstart durch.</span><span class="sxs-lookup"><span data-stu-id="de50f-119">Performs initialization at startup.</span></span> <span data-ttu-id="de50f-120">Wird beim Starten von Dllhost.exe aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="de50f-120">Called when Dllhost.exe is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de50f-121">Das Objekt, auf das `punkProcessControl` verweist, implementiert eine <xref:System.EnterpriseServices.IProcessInitControl>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="de50f-121">The object referenced by `punkProcessControl` implements an <xref:System.EnterpriseServices.IProcessInitControl> interface.</span></span> <span data-ttu-id="de50f-122"><xref:System.EnterpriseServices.IProcessInitControl> unterstützt die einzelnen Methoden <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="de50f-122"><xref:System.EnterpriseServices.IProcessInitControl> supports the single method <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span></span>  
  
 <span data-ttu-id="de50f-123">Der Initialisierungs Code in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> kann die <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>aufzurufen, wobei das Timeout auf die Anzahl der Sekunden festgelegt ist, die vor dem Start der Komponente verbleiben.</span><span class="sxs-lookup"><span data-stu-id="de50f-123">The initialization code in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> can call the <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
