<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a7cfa3ec1ad84703ed8d079fb526192db554f0a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70507511" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <TypeSignature Language="F#" Value="type ServiceDomain = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht einem durch <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> und <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> gekennzeichneten Codesegment die Ausführung im eigenen Kontext. Das Verhalten entspricht dabei dem einer Methode, die für ein im Kontext erstelltes Objekt aufgerufen wird. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> - <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> Methode und die-Methode werden paarweise zum Umschließen von Code verwendet, der com+-Dienste verwenden kann. Code, der zwischen Aufrufen von und <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> ausgeführt wird, wird in seinem eigenen Kontext ausgeführt und verhält sich so, als ob es sich um eine Methode handelt, die für ein im Kontext erstelltes Objekt aufgerufen wird. Die <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> Paare <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> und können eingebettet werden. Der Benutzer muss sicherstellen, dass Paare von Aufrufen ausgeglichen sind, sodass jeder Aufruf von mit <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> einem vorherigen Aufruf von <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>übereinstimmt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberSignature Language="F#" Value="static member Enter : System.EnterpriseServices.ServiceConfig -&gt; unit" Usage="System.EnterpriseServices.ServiceDomain.Enter cfg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">Eine <see cref="T:System.EnterpriseServices.ServiceConfig" />, die die Konfigurationsinformationen für die im eingeschlossenen Code zu verwendenden Dienste enthält.</param>
        <summary>Erstellt den durch das <see cref="T:System.EnterpriseServices.ServiceConfig" />-Objekt angegebenen Kontext und legt ihn auf dem Kontextstapel ab, sodass er zum aktuellen Kontext wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>erstellt zunächst einen Kontext, der entsprechend der Angabe <xref:System.EnterpriseServices.ServiceConfig> durch das-Objekt konfiguriert wurde `cfg` , das als-Parameter übergeben wird. Die Richtlinien auf Client-und Serverseite werden dann ausgelöst, als wäre ein Methoden aufzurufen aufgetreten. Der neue Kontext wird dann auf einen Kontext Stapel verschoben und wird zum aktuellen Kontext. Aufgrund ihres effizienten Entwurfs und da kein Thread Marshalling beteiligt ist, umfasst die Verwendung <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> von <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> und im Vergleich zu einem äquivalenten Methoden aufruferheblich geringeren Aufwand.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.EnterpriseServices.ServiceConfig" /> wird von der aktuellen Plattform nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberSignature Language="F#" Value="static member Leave : unit -&gt; System.EnterpriseServices.TransactionStatus" Usage="System.EnterpriseServices.ServiceDomain.Leave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löst wie bei der Rückgabe eines Methodenaufrufs die serverseitigen und anschließend die clientseitigen Richtlinien aus. Anschließend wird der aktuelle Kontext vom Kontextstapel entfernt, und der während des Aufrufs von <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> ausgeführte Kontext wird zum aktuellen Kontext.</summary>
        <returns>Einer der <see cref="T:System.EnterpriseServices.TransactionStatus" />-Werte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.EnterpriseServices.ServiceConfig" /> wird von der aktuellen Plattform nicht unterstützt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
