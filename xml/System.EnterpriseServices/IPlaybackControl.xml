<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="642ac9e3f2ad478ab2e2f243b5892ce7ec311488" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39983160" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <TypeSignature Language="F#" Value="type IPlaybackControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1c58c-101">Kann in Queued Components bei der nicht ordnungsgemäßen Behandlung von serverseitigen Wiedergabefehlern und bei clientseitigen Fehlern des Übermittlungsmechanismus von Message Queuing verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c58c-101">Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c58c-102">Die Exception-Klasse, die für die Komponente im COM+-Katalog implementiert definiert <xref:System.EnterpriseServices.IPlaybackControl> und die Schnittstelle für die ursprüngliche Klasse.</span><span class="sxs-lookup"><span data-stu-id="1c58c-102">The exception class defined for the component in the COM+ catalog implements both <xref:System.EnterpriseServices.IPlaybackControl> and the interface for the original class.</span></span> <span data-ttu-id="1c58c-103">Die methodenimplementierungen der ursprünglichen Klassenschnittstelle werden verwendet, um die Ausnahmebehandlung für die fehlerhaften Methoden in der Klasse selbst auszuführen.</span><span class="sxs-lookup"><span data-stu-id="1c58c-103">The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</span></span> <span data-ttu-id="1c58c-104">Sie werden aufgerufen, nachdem <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> oder <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> zum Verarbeiten von Ausnahmen für die Methode, die ursprünglich aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1c58c-104">They will be called after <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> or <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> to process exceptions for the method originally called.</span></span>  
  
 <span data-ttu-id="1c58c-105">Der Queued Components Player ruft die Methoden von <xref:System.EnterpriseServices.IPlaybackControl> um das Ausnahmehandlerobjekt darüber zu informieren, die eine Nachricht für den endgültigen Verbleib bzw. Dead-Letter-Warteschlange platziert werden.</span><span class="sxs-lookup"><span data-stu-id="1c58c-105">The Queued Components Player calls the methods of <xref:System.EnterpriseServices.IPlaybackControl> to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</span></span> <span data-ttu-id="1c58c-106">Der Queued Components Player ruft dann dieselbe Methode in der Ausnahme-Handler-Objekt, das in der ursprüngliche Methodenaufruf fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="1c58c-106">The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</span></span> <span data-ttu-id="1c58c-107">Das Ausnahmehandlerobjekt kann Alternative, z. B. implementieren, durch Sammeln von Informationen zur Problemdiagnose oder generieren ein Objekt oder eine Nachricht, die den Client über das Problem zu informieren.</span><span class="sxs-lookup"><span data-stu-id="1c58c-107">The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</span></span> <span data-ttu-id="1c58c-108">Wenn die Anwendung keine implementiert <xref:System.EnterpriseServices.IPlaybackControl>, die nicht verarbeitbare Nachricht ist für den endgültigen Verbleib bzw. Dead-Letter-Warteschlange platziert, wenn der Queued Components Player alle Wiederholungen ausgeschöpft hat.</span><span class="sxs-lookup"><span data-stu-id="1c58c-108">If the application does not implement <xref:System.EnterpriseServices.IPlaybackControl>, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</span></span>  
  
 <span data-ttu-id="1c58c-109">Eine nicht verarbeitbare Nachricht ist eine Nachricht, die aus irgendeinem Grund möglicherweise aufgrund eines Problems mit dem Server oder die queuing-System nicht verarbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="1c58c-109">A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</span></span> <span data-ttu-id="1c58c-110">Die Transaktion ein Rollback aus, und die nicht verarbeitbare Nachricht wird an den Anfang der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="1c58c-110">The transaction is rolled back, and the poison message goes to the top of the queue.</span></span> <span data-ttu-id="1c58c-111">Wenn die Nachricht wieder aus der Warteschlange entfernt wird, tritt ein, die gleiche Bedingung.</span><span class="sxs-lookup"><span data-stu-id="1c58c-111">When the message is dequeued again, the same condition occurs.</span></span> <span data-ttu-id="1c58c-112">Diese Meldung kann weiterhin Schleifen auf unbestimmte Zeit, bis eine Aktion ausgeführt wird, um das Problem zu beheben.</span><span class="sxs-lookup"><span data-stu-id="1c58c-112">This message can continue looping indefinitely until something is done to correct the problem.</span></span> <span data-ttu-id="1c58c-113">Der Queued Components-Dienst übernimmt die nicht verarbeitbare Nachricht mithilfe einer Reihe von Wiederholungen.</span><span class="sxs-lookup"><span data-stu-id="1c58c-113">The Queued Components service handles the poison message by using a series of retries.</span></span> <span data-ttu-id="1c58c-114">Nach mehreren erfolglosen Versuchen wird die Nachricht an eine Warteschlange des endgültigen Verbleib verschoben.</span><span class="sxs-lookup"><span data-stu-id="1c58c-114">After several unsuccessful retries, the message is moved to a final resting queue.</span></span> <span data-ttu-id="1c58c-115">Nicht verarbeitbare Nachrichten verbleiben in der Verbleib Warteschlange, bis Sie manuell mithilfe des Komponenten-Nachricht den Tupelverschiebungsvorgang in der Warteschlange verschoben.</span><span class="sxs-lookup"><span data-stu-id="1c58c-115">Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</span></span>  
  
 <span data-ttu-id="1c58c-116">Die für nicht verarbeitbare Nachrichten können auch programmgesteuert behoben werden, mithilfe der <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> -Methode, die serverseitige Komponentenautor zu informieren, die alle Versuche zum Wiedergeben der verzögerten Aktivierung fehlgeschlagen sind.</span><span class="sxs-lookup"><span data-stu-id="1c58c-116">The poison message situation can also be resolved programmatically, using the <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</span></span>  
  
 <span data-ttu-id="1c58c-117">Wenn Sie eine nicht verarbeitbare Nachricht erkennen, Sie können schnell die Ursache des Problems zu beheben. möglicherweise.</span><span class="sxs-lookup"><span data-stu-id="1c58c-117">If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</span></span> <span data-ttu-id="1c58c-118">Wenn der Server aus irgendeinem Grund offline war, können Sie beispielsweise den Server wieder online schalten.</span><span class="sxs-lookup"><span data-stu-id="1c58c-118">For example, if the server was offline for some reason, you can bring the server back online.</span></span> <span data-ttu-id="1c58c-119">Wenn Sie das Problem schnell lösen können, können Sie eine andere Transaktion, die den anforderer benachrichtigt werden, den die Transaktion nicht ausgeführt, automatisch generieren.</span><span class="sxs-lookup"><span data-stu-id="1c58c-119">If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</span></span> <span data-ttu-id="1c58c-120">Der anforderer kann eine kompensierende Transaktion ausführen, die die Auswirkungen einer Transaktion umkehrt, die ein Commit bereits ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="1c58c-120">The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalClientRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalClientRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c58c-121">Informiert die clientseitige Ausnahmebehandlungskomponente, dass alle Versuche von Message Queuing zum Übermitteln der Meldung an den Server zurückgewiesen wurden und dass die Meldung in der clientseitigen Xact-Warteschlange für unzustellbare Meldungen abgelegt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c58c-121">Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c58c-122">Beim Eintreffen von Nachrichten in der Warteschlange für unzustellbare Nachrichten Xact versucht COM+, rufen Sie einen clientseitigen Ausnahmehandler, der im Zusammenhang mit der die Server-Klasse, diese Benachrichtigung zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="1c58c-122">As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="1c58c-123">Dies erfolgt durch den ersten Aufruf <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, und klicken Sie dann die Version für die Ausnahmebehandlung der fehlerhaften Methode im Ausnahmehandler Objekt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1c58c-123">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, then calling the exception-handling version of the failed method in the exception-handler object.</span></span> <span data-ttu-id="1c58c-124">Diese Ausnahmemethode kann dann eine Ausnahmeaktion, z. B. den Fehler aufzeichnen, senden eine e-Mail-Nachricht an den Administrator oder clientseitige kompensierende Aktion (die Auswirkungen der eine früheren Transaktion umkehren) vornehmen.</span><span class="sxs-lookup"><span data-stu-id="1c58c-124">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="1c58c-125">Wenn die Exception-Methode nicht erfolgreich ist, bleibt die Nachricht in der Transaktion Dead Letter-Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="1c58c-125">If the exception method is not successful, the message is left on the Xact Dead Letter queue.</span></span>  
  
 <span data-ttu-id="1c58c-126">Warteschlange für unzustellbare Xact kann im Microsoft Message Queue (MSMQ)-Explorer angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="1c58c-126">The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalServerRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalServerRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c58c-127">Informiert die serverseitige Ausnahmeklassenimplementierung, dass alle Versuche zum Wiedergeben der verzögerten Aktivierung auf dem Server fehlgeschlagen sind und die Meldung gerade in die Warteschlange für den endgültigen Verbleib verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c58c-127">Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c58c-128">Beim Eintreffen von Nachrichten in der Warteschlange für unzustellbare Nachrichten Xact versucht COM+, rufen Sie einen serverseitigen Ausnahmehandler, der im Zusammenhang mit der die Server-Klasse, diese Benachrichtigung zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="1c58c-128">As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="1c58c-129">Dies erfolgt durch den ersten Aufruf <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, und klicken Sie dann die Version der fehlerhaften Methode in dem Ausnahmeobjekt für den Handler für die Ausnahmebehandlung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1c58c-129">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, then calling the exception handling version of the failed method in the exception handler object.</span></span> <span data-ttu-id="1c58c-130">Diese Ausnahmemethode kann dann eine Ausnahmeaktion, z. B. den Fehler aufzeichnen, senden eine e-Mail-Nachricht an den Administrator oder clientseitige kompensierende Aktion (die Auswirkungen der eine früheren Transaktion umkehren) vornehmen.</span><span class="sxs-lookup"><span data-stu-id="1c58c-130">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="1c58c-131">Das Serverobjekt stellen höchste anstrengungen, um diese Transaktion erfolgreich abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="1c58c-131">The server object should make every effort to complete this transaction successfully.</span></span> <span data-ttu-id="1c58c-132">Andernfalls ist manueller Eingriff erforderlich, um die Nachricht erneut verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="1c58c-132">Otherwise, manual intervention is required to reprocess the message.</span></span> <span data-ttu-id="1c58c-133">Wenn die Exception-Methode nicht erfolgreich ist, wird die Nachricht an die Warteschlange des endgültigen Verbleib verschoben.</span><span class="sxs-lookup"><span data-stu-id="1c58c-133">If the exception method is not successful, the message is moved to the final resting queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>