<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8244a38f035a96f53aaf4b667da80a3de717304" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69358534" /></Metadata><TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <TypeSignature Language="F#" Value="type IPlaybackControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="527f2-101">Kann in Queued Components bei der nicht ordnungsgemäßen Behandlung von serverseitigen Wiedergabefehlern und bei clientseitigen Fehlern des Übermittlungsmechanismus von Message Queuing verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="527f2-101">Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="527f2-102">Die für die Komponente im com+-Katalog definierte Ausnahme Klasse implementiert sowohl <xref:System.EnterpriseServices.IPlaybackControl> als auch die-Schnittstelle für die ursprüngliche-Klasse.</span><span class="sxs-lookup"><span data-stu-id="527f2-102">The exception class defined for the component in the COM+ catalog implements both <xref:System.EnterpriseServices.IPlaybackControl> and the interface for the original class.</span></span> <span data-ttu-id="527f2-103">Die Methoden Implementierungen der ursprünglichen Klassen Schnittstelle werden verwendet, um die Ausnahmebehandlung für die fehlgeschlagenen Methoden in der Klasse selbst auszuführen.</span><span class="sxs-lookup"><span data-stu-id="527f2-103">The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</span></span> <span data-ttu-id="527f2-104">Sie werden nach <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> oder <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> aufgerufen, um Ausnahmen für die ursprünglich aufgerufene Methode zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="527f2-104">They will be called after <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> or <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> to process exceptions for the method originally called.</span></span>  
  
 <span data-ttu-id="527f2-105">Der in der Warteschlange befindliche Komponenten Player ruft <xref:System.EnterpriseServices.IPlaybackControl> die Methoden von auf, um das Ausnahmehandler-Objekt zu informieren, dass eine Nachricht in der letzten ruhenden Warteschlange oder in der Warteschlange für unzustellbare Nachrichten</span><span class="sxs-lookup"><span data-stu-id="527f2-105">The Queued Components Player calls the methods of <xref:System.EnterpriseServices.IPlaybackControl> to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</span></span> <span data-ttu-id="527f2-106">Der in der Warteschlange befindliche Komponenten Player ruft dann dieselbe Methode im Ausnahmehandler-Objekt auf, bei dem im ursprünglichen Methodenaufruf ein Fehler aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="527f2-106">The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</span></span> <span data-ttu-id="527f2-107">Das Ausnahmehandler-Objekt kann eine Alternative implementieren, z. b. durch das Sammeln von Diagnoseinformationen oder das Erzeugen eines Objekts oder einer Nachricht, die den Client über das Problem informiert.</span><span class="sxs-lookup"><span data-stu-id="527f2-107">The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</span></span> <span data-ttu-id="527f2-108">Wenn die Anwendung nicht implementiert <xref:System.EnterpriseServices.IPlaybackControl>, wird die nicht verarbeitbare Nachricht in der letzten ruhenden Warteschlange bzw. in der Warteschlange für unzustellbare Nachrichten abgelegt, wenn der in der Warteschlange befindliche Komponenten Spieler</span><span class="sxs-lookup"><span data-stu-id="527f2-108">If the application does not implement <xref:System.EnterpriseServices.IPlaybackControl>, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</span></span>  
  
 <span data-ttu-id="527f2-109">Eine nicht verarbeitbare Nachricht ist eine Nachricht, die aus irgendeinem Grund nicht verarbeitet werden kann, möglicherweise aufgrund eines Problems mit dem Server oder queuingsystem.</span><span class="sxs-lookup"><span data-stu-id="527f2-109">A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</span></span> <span data-ttu-id="527f2-110">Für die Transaktion wird ein Rollback ausgeführt, und die nicht verarbeitbare Nachricht geht an den Anfang der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="527f2-110">The transaction is rolled back, and the poison message goes to the top of the queue.</span></span> <span data-ttu-id="527f2-111">Wenn die Nachricht wieder in die Warteschlange eingereiht wird, tritt dieselbe Bedingung auf.</span><span class="sxs-lookup"><span data-stu-id="527f2-111">When the message is dequeued again, the same condition occurs.</span></span> <span data-ttu-id="527f2-112">Diese Nachricht kann die Schleife beliebig lange fortsetzen, bis das Problem behoben wurde.</span><span class="sxs-lookup"><span data-stu-id="527f2-112">This message can continue looping indefinitely until something is done to correct the problem.</span></span> <span data-ttu-id="527f2-113">Der Dienst für in der Warteschlange befindliche Komponenten verarbeitet die nicht verarbeitbare Nachricht mithilfe einer Reihe von Wiederholungs versuchen.</span><span class="sxs-lookup"><span data-stu-id="527f2-113">The Queued Components service handles the poison message by using a series of retries.</span></span> <span data-ttu-id="527f2-114">Nach mehreren erfolglosen Wiederholungen wird die Nachricht in eine letzte Warteschlange verschoben.</span><span class="sxs-lookup"><span data-stu-id="527f2-114">After several unsuccessful retries, the message is moved to a final resting queue.</span></span> <span data-ttu-id="527f2-115">Nicht verarbeitbare Nachrichten verbleiben in der ruhenden Warteschlange, bis Sie manuell mit dem Message verschiebungstool der Warteschlange</span><span class="sxs-lookup"><span data-stu-id="527f2-115">Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</span></span>  
  
 <span data-ttu-id="527f2-116">Die Situation für nicht verarbeitbare Nachrichten kann auch Programm gesteuert <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> mithilfe der-Methode aufgelöst werden, die dem Autor der serverseitigen Komponente mitteilt, dass alle Versuche zur Wiedergabe der verzögerten Aktivierung fehlgeschlagen sind.</span><span class="sxs-lookup"><span data-stu-id="527f2-116">The poison message situation can also be resolved programmatically, using the <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</span></span>  
  
 <span data-ttu-id="527f2-117">Wenn Sie eine nicht verarbeitbare Nachricht ermitteln, können Sie möglicherweise die Ursache des Problems schnell beheben.</span><span class="sxs-lookup"><span data-stu-id="527f2-117">If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</span></span> <span data-ttu-id="527f2-118">Wenn der Server z. b. aus irgendeinem Grund offline geschaltet wurde, können Sie den Server wieder online schalten.</span><span class="sxs-lookup"><span data-stu-id="527f2-118">For example, if the server was offline for some reason, you can bring the server back online.</span></span> <span data-ttu-id="527f2-119">Wenn Sie das Problem nicht schnell lösen können, können Sie automatisch eine andere Transaktion generieren, die den Anforderer darüber benachrichtigt, dass die Transaktion nicht durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="527f2-119">If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</span></span> <span data-ttu-id="527f2-120">Der Anforderer kann dann eine kompensierende Transaktion erstellen, die die Auswirkung einer Transaktion rückgängig macht, für die bereits ein Commit ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="527f2-120">The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalClientRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalClientRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="527f2-121">Informiert die clientseitige Ausnahmebehandlungskomponente, dass alle Versuche von Message Queuing zum Übermitteln der Meldung an den Server zurückgewiesen wurden und dass die Meldung in der clientseitigen Xact-Warteschlange für unzustellbare Meldungen abgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="527f2-121">Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="527f2-122">Wenn Nachrichten in der Warteschlange für unzustellbare Nachrichten eintreffen, versucht com+, einen Client seitigen Ausnahmehandler für die Serverklasse aufzurufen, um diese Benachrichtigung zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="527f2-122">As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="527f2-123">Dies erfolgt durch das erste aufrufen <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>von und anschließendes Aufrufen der Ausnahme Behandlungs Version der fehlgeschlagenen Methode im Ausnahmehandlerobjekt.</span><span class="sxs-lookup"><span data-stu-id="527f2-123">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, then calling the exception-handling version of the failed method in the exception-handler object.</span></span> <span data-ttu-id="527f2-124">Diese Ausnahme Methode kann dann eine Ausnahme Aktion ausführen, z. b. das Aufzeichnen des Fehlers, das Senden einer e-Mail-Nachricht an den Administrator oder das Durchführen von Client seitiger Kompensations Aktionen (Umkehren der Auswirkungen einer früheren Transaktion).</span><span class="sxs-lookup"><span data-stu-id="527f2-124">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="527f2-125">Wenn die Ausnahme Methode nicht erfolgreich ist, wird die Nachricht in der Warteschlange für unzustellbare Nachrichten von XACT belassen.</span><span class="sxs-lookup"><span data-stu-id="527f2-125">If the exception method is not successful, the message is left on the Xact Dead Letter queue.</span></span>  
  
 <span data-ttu-id="527f2-126">Die XACT-Warteschlange für unzustellbare Nachrichten kann im MSMQ-Explorer (Microsoft Message Queue) angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="527f2-126">The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalServerRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalServerRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="527f2-127">Informiert die serverseitige Ausnahmeklassenimplementierung, dass alle Versuche zum Wiedergeben der verzögerten Aktivierung auf dem Server fehlgeschlagen sind und die Meldung gerade in die Warteschlange für den endgültigen Verbleib verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="527f2-127">Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="527f2-128">Wenn Nachrichten in der Warteschlange für unzustellbare Nachrichten eintreffen, versucht com+, einen serverseitigen Ausnahmehandler für die Serverklasse aufzurufen, um diese Benachrichtigung zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="527f2-128">As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="527f2-129">Dies erfolgt durch das erste aufrufen <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>von und anschließendes Aufrufen der Ausnahme Behandlungs Version der fehlgeschlagenen Methode im Ausnahmehandlerobjekt.</span><span class="sxs-lookup"><span data-stu-id="527f2-129">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, then calling the exception handling version of the failed method in the exception handler object.</span></span> <span data-ttu-id="527f2-130">Diese Ausnahme Methode kann dann eine Ausnahme Aktion ausführen, z. b. das Aufzeichnen des Fehlers, das Senden einer e-Mail-Nachricht an den Administrator oder das Durchführen von Client seitiger Kompensations Aktionen (Umkehren der Auswirkungen einer früheren Transaktion).</span><span class="sxs-lookup"><span data-stu-id="527f2-130">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="527f2-131">Das Server Objekt sollte jeden Vorgang ausführen, um diese Transaktion erfolgreich abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="527f2-131">The server object should make every effort to complete this transaction successfully.</span></span> <span data-ttu-id="527f2-132">Andernfalls ist ein manueller Eingriff erforderlich, um die Nachricht erneut zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="527f2-132">Otherwise, manual intervention is required to reprocess the message.</span></span> <span data-ttu-id="527f2-133">Wenn die Ausnahme Methode nicht erfolgreich ist, wird die Nachricht in die letzte ruhende Warteschlange verschoben.</span><span class="sxs-lookup"><span data-stu-id="527f2-133">If the exception method is not successful, the message is moved to the final resting queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
