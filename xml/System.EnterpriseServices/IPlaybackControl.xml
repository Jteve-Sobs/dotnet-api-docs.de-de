<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54fcf7590327e9d2356fc883bfae633d190f6a78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408884" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kann in Queued Components bei der nicht ordnungsgemäßen Behandlung von serverseitigen Wiedergabefehlern und bei clientseitigen Fehlern des Übermittlungsmechanismus von Message Queuing verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Exception-Klasse, die für die Komponente im COM+-Katalog implementiert definiert <xref:System.EnterpriseServices.IPlaybackControl> und die Schnittstelle für die ursprüngliche Klasse. Die methodenimplementierungen der ursprünglichen Klassenschnittstelle werden verwendet, um die Ausnahmebehandlung für den fehlerhaften Methoden in der Klasse selbst ausführen. Sie werden aufgerufen, nachdem <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> oder <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> zum Verarbeiten von Ausnahmen für die ursprünglich aufgerufene Methode.  
  
 Der Queued Components Player ruft die Methoden der <xref:System.EnterpriseServices.IPlaybackControl> an den Ausnahmehandler Objekt zu benachrichtigen, dass eine Nachricht in der endgültigen Arbeitsfläche oder Dead Letter-Warteschlange platziert werden sollen. Der Queued Components Player ruft dann die gleiche Methode im Ausnahmehandler Objekt, das im Aufruf ursprünglichen Methode Fehler aufgetreten ist. Der Ausnahmehandler Objekt kann Alternative, z. B. implementieren, indem Sammeln von Informationen zur Problemdiagnose oder generieren ein Objekt oder eine Meldung, die den Client über das Problem informiert. Wenn die Anwendung keine implementiert <xref:System.EnterpriseServices.IPlaybackControl>, die nicht verarbeitbare Nachricht ist beim Player-Komponenten in der Warteschlange aller Wiederholungsversuche schöpft in der endgültigen Arbeitsfläche oder Dead Letter-Warteschlange platziert.  
  
 Eine nicht verarbeitbare Nachricht ist eine Nachricht, die aus irgendeinem Grund, möglicherweise wegen eines Problems mit dem Server oder die queuing-System verarbeitet werden kann. Die Transaktion ein Rollback aus, und die nicht verarbeitbare Nachricht wird an den Anfang der Warteschlange. Wenn die Nachricht wieder aus der Warteschlange entfernt wird, tritt ein, die gleiche Bedingung. Diese Meldung kann weiterhin Schleifen unbegrenzt, bis eine Aktion ausgeführt wird, um das Problem zu beheben. Der Dienst Komponenten in der Warteschlange verarbeitet die nicht verarbeitbare Nachricht mithilfe einer Reihe von Wiederholungen. Nach mehreren erfolglosen Versuchen wird die Nachricht an eine endgültige Verbleib Warteschlange verschoben. Nicht verarbeitbare Nachrichten verbleiben in der Verbleib Warteschlange, bis Sie manuell mithilfe des Tools in der Warteschlange Komponenten Nachricht Mover verschoben.  
  
 Die nicht verarbeitbare Nachricht kann auch programmgesteuert behoben werden, mithilfe der <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> Methode, die den Autor serverseitige Komponente informiert, die die verzögerte Aktivierung wiedergeben alle Versuche fehlgeschlagen sind.  
  
 Wenn Sie eine nicht verarbeitbare Nachricht erkennen, können Sie schnell die Ursache des Problems zu beheben sein. Wenn der Server aus irgendeinem Grund offline geschaltet wurde, können Sie z. B. den Server wieder online bringen. Wenn Sie das Problem schnell lösen können, können Sie automatisch eine andere Transaktion generieren, die den anfordernden benachrichtigt, den nicht von die Transaktion aufgetreten ist. Der anforderer kann dann eine kompensierende Transaktion stellen, die den Effekt einer Transaktion kehrt die bereits ein Commit ausgeführt wurde.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informiert die clientseitige Ausnahmebehandlungskomponente, dass alle Versuche von Message Queuing zum Übermitteln der Meldung an den Server zurückgewiesen wurden und dass die Meldung in der clientseitigen Xact-Warteschlange für unzustellbare Meldungen abgelegt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Eintreffen von Nachrichten in Warteschlange für unzustellbare Xact versucht COM+, rufen einen clientseitigen Ausnahmehandler im Zusammenhang mit dem Serverklasse, um diese Benachrichtigung zu übermitteln. Dies erfolgt durch den ersten Aufruf <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, und klicken Sie dann die Ausnahmebehandlung Version der fehlgeschlagenen Methode im Ausnahmehandler Objekt aufrufen. Diese Ausnahmemethode kann dann eine Ausnahmeaktion, z. B. den Fehler aufzeichnen, senden eine e-Mail-Nachricht an den Administrator oder clientseitige kompensierende Aktion (die Auswirkung einer früheren Transaktion umkehren) vornehmen. Die Exception-Methode nicht erfolgreich ist, wird die Nachricht in der Xact Dead Letter-Warteschlange belassen.  
  
 Die Xact Dead Letter-Warteschlange kann im Microsoft Message Queue (MSMQ)-Explorer angezeigt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informiert die serverseitige Ausnahmeklassenimplementierung, dass alle Versuche zum Wiedergeben der verzögerten Aktivierung auf dem Server fehlgeschlagen sind und die Meldung gerade in die Warteschlange für den endgültigen Verbleib verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Nachrichten in der Xact Dead Letter-Warteschlange eintreffen, versucht COM+-aufzurufenden einen serverseitigen Ausnahmehandler im Zusammenhang mit dem Serverklasse, um diese Benachrichtigung zu übermitteln. Dies erfolgt durch den ersten Aufruf <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, und klicken Sie dann die Version der fehlerhaften Methode in dem Ausnahmeobjekt-Handler für die Ausnahmebehandlung aufgerufen. Diese Ausnahmemethode kann dann eine Ausnahmeaktion, z. B. den Fehler aufzeichnen, senden eine e-Mail-Nachricht an den Administrator oder clientseitige kompensierende Aktion (die Auswirkung einer früheren Transaktion umkehren) vornehmen. Das Serverobjekt nehmen bestrebt, die diese Transaktion erfolgreich abgeschlossen. Andernfalls muss Eingriff durch den die Nachricht erneut verarbeiten. Wenn der Exception-Methode nicht erfolgreich ist, wird die Nachricht an den endgültigen Verbleib Warteschlange verschoben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>