<Type Name="AddInToken" FullName="System.AddIn.Hosting.AddInToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="222e834237df7754c02f8f44d3db4519f1c3fe28" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78723572" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInToken : System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AddInToken extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInToken" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInToken&#xA;Implements IEnumerable(Of QualificationDataItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInToken sealed : System::Collections::Generic::IEnumerable&lt;System::AddIn::Hosting::QualificationDataItem&gt;" />
  <TypeSignature Language="F#" Value="type AddInToken = class&#xA;    interface seq&lt;QualificationDataItem&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Add-In dar, das aktiviert werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.AddIn.Hosting.AddInToken>-Objekt stellt ein Add-in und die zugehörigen Pipeline Segmente dar, die aktiviert werden können. Das Token enthält den Namen, den Assemblynamen, die Beschreibung, den Verleger und die Version des Add-Ins, das es darstellt.  
  
 Verwenden Sie die <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=nameWithType>-Methode, um eine Auflistung von Token zu erhalten, die Add-Ins darstellen, deren Pipelines einer angegebenen Host Ansicht entsprechen. Verwenden Sie die <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=nameWithType>-Methode, um eine Auflistung von Token zu erhalten, die alle Pipelines für ein angegebenes Add-in darstellen, die mit einer angegebenen Host Ansicht zu vergleichen sind.  
  
 Um ein Add-in zu aktivieren, übergeben Sie das Token, das das gewünschte Add-in darstellt, an die <xref:System.AddIn.Hosting.AddInToken.Activate%2A>-Methode. Diese Methode gibt eine Instanz des Typs zurück, der die Host Ansicht des Add-Ins darstellt.  
  
 Die <xref:System.AddIn.Hosting.AddInToken.Activate%2A>-Methode verfügt über mehrere über Ladungen. Wenn Sie eine Überladung verwenden, die den Namen einer Anwendungsdomäne nicht als einen ihrer Parameter erfordert, wird automatisch eine neue Anwendungsdomäne für das Add-in erstellt.  
  
 Sie können LINQ-Erweiterungs Methoden (Language-Integrated Query) verwenden, um Abfragen für eine <xref:System.AddIn.Hosting.AddInToken>auszuführen und das Token als eine Auflistung von <xref:System.AddIn.Hosting.QualificationDataItem> Strukturen zu behandeln.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Beispiele. Im ersten Beispiel wird ein Add-in aktiviert, das mit der `ChooseAddIn`-Methode ausgewählt wurde, und das zweite Beispiel zeigt die `ChooseAddIn`-Methode.  
  
 **Beispiel 1**  
  
 Im folgenden Beispiel wird gezeigt, wie ein Add-in mit einem Token aktiviert wird.  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 **Beispiel 2**  
  
 Das folgende Beispiel zeigt die benutzerdefinierte `ChooseAddIn`-Methode, die eine <xref:System.AddIn.Hosting.AddInToken> Auflistung auflistet. Der Benutzer wählt ein Token aus dieser Sammlung aus, um das entsprechende Add-in zu aktivieren.  
  
 [!code-csharp[AddInP3Host#13](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#13)]
 [!code-vb[AddInP3Host#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">Add-Ins und Erweiterbarkeit</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Activate&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aktiviert ein Add-In.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInEnvironment environment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInEnvironment environment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (environment As AddInEnvironment) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInEnvironment ^ environment);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInEnvironment -&gt; 'T" Usage="addInToken.Activate environment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="environment" Type="System.AddIn.Hosting.AddInEnvironment" />
      </Parameters>
      <Docs>
        <typeparam name="T">Die Schnittstelle oder der abstrakte Basistyp, der die Hostansicht des Add-Ins darstellt.</typeparam>
        <param name="environment">Die Anwendungsdomäne und der Prozess, die das ursprüngliche Add-In enthalten.</param>
        <summary>Aktiviert ein Add-In in der Umgebung eines anderen Add-Ins.</summary>
        <returns>Die Hostansicht des Add-Ins.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methoden Überladung aktiviert das Add-in in derselben Anwendungsdomäne und demselben Prozess wie das Add-in, von dem `environment` abgerufen wurde.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Add-in in einer automatisch generierten Anwendungsdomäne mit einer angegebenen Sicherheitsstufe aktiviert. Anschließend wird ein zweites Add-in in derselben Anwendungsdomäne und in derselben Anwendungsdomäne wie die erste aktiviert, indem das erste <xref:System.AddIn.Hosting.AddInEnvironment> Objekt des Add-Ins verwendet wird.  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">Add-Ins und Erweiterbarkeit</related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate trustLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T">Die Schnittstelle oder der abstrakte Basistyp, der die Hostansicht des Add-Ins darstellt.</typeparam>
        <param name="trustLevel">Einer der Enumerationswerte, der die Vertrauensebene angibt.</param>
        <summary>Aktiviert ein Add-In mit einer angegebenen Vertrauensebene in einer neuen Anwendungsdomäne.</summary>
        <returns>Die Hostansicht des Add-Ins.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methoden Überladung lädt das Add-in in eine automatisch generierte Anwendungsdomäne. Wenn Sie einen Namen für die neue Anwendungsdomäne angeben möchten, verwenden Sie die <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> Überladung.  
  
 Diese Methode legt das Basisverzeichnis für die Anwendungsdomäne auf den Speicherort der Add-in-Assembly fest. Er sucht auch nach der Konfigurationsdatei [addinassemblyname]. dll. config. Wenn Sie gefunden wird, wird Sie als Konfigurationsdatei für die neue Anwendungsdomäne festgelegt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein Add-in, das durch das ausgewählte Token identifiziert wird, in einer automatisch generierten Anwendungsdomäne mit einer angegebenen Sicherheitsebene aktiviert wird.  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">Add-Ins und Erweiterbarkeit</related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (AppDomain target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AppDomain target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (target As AppDomain) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(AppDomain ^ target);" />
      <MemberSignature Language="F#" Value="member this.Activate : AppDomain -&gt; 'T" Usage="addInToken.Activate target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <typeparam name="T">Die Schnittstelle oder der abstrakte Basistyp, der die Hostansicht des Add-Ins darstellt.</typeparam>
        <param name="target">Die Anwendungsdomäne, in der das Add-In aktiviert werden soll.</param>
        <summary>Aktiviert ein Add-In in einer vorhandenen Anwendungsdomäne.</summary>
        <returns>Die Hostansicht des Add-Ins.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um ein Add-in in einer automatisch generierten Anwendungsdomäne zu aktivieren, verwenden Sie die <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>-Überladung, um eine neue Anwendungsdomäne mit einer angegebenen Sicherheitsstufe oder der <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> Überladung zu generieren, die einen anzeigen Amen für die Anwendungsdomäne einschließt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Add-in in einer Anwendungsdomäne aktiviert, die von einem anderen Add-in verwendet wird. Der Code für das erste Add-in wird in der <xref:System.AddIn.Hosting.AddInToken>-Klasse bereitgestellt.  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wird eine Berechtigung mit vollständiger Vertrauenswürdigkeit gefordert. Ein Aufrufer in der Kette von Aufrufen verfügt nicht über ausreichende Berechtigungen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.Security.PermissionSet permissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.Security.PermissionSet permissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (permissions As PermissionSet) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::Security::PermissionSet ^ permissions);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate permissions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="permissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T">Die Schnittstelle oder der abstrakte Basistyp, der die Hostansicht des Add-Ins darstellt.</typeparam>
        <param name="permissions">Die für das Add-In gewährten Berechtigungen.</param>
        <summary>Aktiviert ein Add-In mit einem angegebenen Berechtigungssatz in einer neuen Anwendungsdomäne.</summary>
        <returns>Die Hostansicht des Add-Ins.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methoden Überladung lädt das Add-in in eine automatisch generierte Anwendungsdomäne. Das Basisverzeichnis für die Anwendungsdomäne wird auf den Speicherort der Add-in-Assembly festgelegt. Außerdem sucht Sie nach der Konfigurationsdatei `[addinassemblyname].dll.config` und legt, sofern Sie gefunden wird, die Konfigurationsdatei für die neue Anwendungsdomäne fest.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="permissions" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, valuetype System.AddIn.Hosting.AddInSecurityLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (process As AddInProcess, level As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::AddIn::Hosting::AddInSecurityLevel level);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate (process, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="level" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T">Die Schnittstelle oder der abstrakte Basistyp, der die Hostansicht des Add-Ins darstellt.</typeparam>
        <param name="process">Den externen Prozess, in dem das Add-In aktiviert werden soll.</param>
        <param name="level">Einer der Enumerationswerte, der die Vertrauensebene angibt.</param>
        <summary>Aktiviert ein Add-In mit einer angegebenen Vertrauensebene in einem externen Prozess in einer neuen Anwendungsdomäne.</summary>
        <returns>Die Hostansicht des Add-Ins.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode legt das Basisverzeichnis für die Anwendungsdomäne auf den Speicherort der Add-in-Assembly fest. Außerdem sucht Sie nach der Konfigurationsdatei `[addinassemblyname].dll.config` und legt, sofern Sie gefunden wird, die Konfigurationsdatei für die neue Anwendungsdomäne fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein neuer Prozess erstellt und ein Add-in in diesem Prozess mit der Sicherheitsstufe "voll vertrauenswürdig" aktiviert.  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (process As AddInProcess, permissionSet As PermissionSet) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate (process, permissionSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T">Die Schnittstelle oder der abstrakte Basistyp, der die Hostansicht des Add-Ins darstellt.</typeparam>
        <param name="process">Den externen Prozess, in dem das Add-In aktiviert werden soll.</param>
        <param name="permissionSet">Der für das Add-In erforderliche gewährte Berechtigungssatz.</param>
        <summary>Aktiviert ein Add-In mit einem angegebenen Berechtigungssatz in einem externen Prozess in einer neuen Anwendungsdomäne.</summary>
        <returns>Die Hostansicht des Add-Ins.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode legt das Basisverzeichnis für die Anwendungsdomäne auf den Speicherort der Add-in-Assembly fest. Außerdem sucht Sie nach der Konfigurationsdatei `[addinassemblyname].dll.config` und legt, sofern Sie gefunden wird, die Konfigurationsdatei für die neue Anwendungsdomäne fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel, appDomainName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel, System::String ^ appDomainName);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel * string -&gt; 'T" Usage="addInToken.Activate (trustLevel, appDomainName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
        <Parameter Name="appDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Die Schnittstelle oder der abstrakte Basistyp, der die Hostansicht des Add-Ins darstellt.</typeparam>
        <param name="trustLevel">Einer der Enumerationswerte, der die Vertrauensebene angibt.</param>
        <param name="appDomainName">Der angezeigte Name, der der neuen Anwendungsdomäne zugewiesen werden soll.</param>
        <summary>Aktiviert ein Add-In mit einem angegebenen Namen und einer angegebenen Vertrauensebene in einer neuen Anwendungsdomäne.</summary>
        <returns>Die Hostansicht des Add-Ins.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie keinen Anwendungs Domänen Namen angeben müssen, verwenden Sie die <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> Überladung.  
  
 Diese Methode legt das Basisverzeichnis für die Anwendungsdomäne auf den Speicherort der Add-in-Assembly fest. Außerdem sucht Sie nach der Konfigurationsdatei `[addinassemblyname].dll.config` und legt, sofern Sie gefunden wird, die Konfigurationsdatei für die neue Anwendungsdomäne fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInFullName">
      <MemberSignature Language="C#" Value="public string AddInFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddInFullName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddInFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInFullName : string" Usage="System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace und den Typ des Add-Ins ab.</summary>
        <value>Der Typ des Add-Ins, vollqualifiziert durch den zugehörigen Namespace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft erhält den vollständigen Namen des Add-Ins, wie Sie von der <xref:System.Type.FullName%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird. Dieser Wert ist immer für eine Instanz eines <xref:System.AddIn.Hosting.AddInToken> Objekts verfügbar.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert der Eigenschaften <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>und <xref:System.AddIn.Hosting.AddInToken.Version%2A> der Konsole angezeigt. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.AddIn.Hosting.AddInToken>-Klasse bereitgestellt wird.  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.AssemblyName AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyName ^ AssemblyName { System::Reflection::AssemblyName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : System.Reflection.AssemblyName" Usage="System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Assembly ab, die das Add-In enthält.</summary>
        <value>Der Name der Assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ruft den anzeigen amen der Assembly ab, die das Add-in enthält, wie Sie von der <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird. Dieser Wert ist immer für eine Instanz eines <xref:System.AddIn.Hosting.AddInToken> Objekts verfügbar.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert der Eigenschaften <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>und <xref:System.AddIn.Hosting.AddInToken.Version%2A> der Konsole angezeigt. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.AddIn.Hosting.AddInToken>-Klasse bereitgestellt wird.  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.AddIn.Hosting.AddInToken.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschreibung des Add-Ins ab.</summary>
        <value>Eine Beschreibung des Add-Ins oder <see langword="null" />, wenn die Beschreibung nicht im <see cref="T:System.AddIn.AddInAttribute" />-Attribut angegeben ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ruft die Beschreibung des Add-Ins ab, wie im <xref:System.AddIn.AddInAttribute>-Attribut angegeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert der Eigenschaften <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>und <xref:System.AddIn.Hosting.AddInToken.Version%2A> der Konsole angezeigt. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.AddIn.Hosting.AddInToken>-Klasse bereitgestellt wird.  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDirectConnect">
      <MemberSignature Language="C#" Value="public static bool EnableDirectConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableDirectConnect" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableDirectConnect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableDirectConnect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDirectConnect : bool with get, set" Usage="System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Add-Ins direkt mit ihren Hosts verbunden werden sollen, wenn die Bedingungen dies zulassen, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Add-In direkt mit dem Host verbunden werden soll, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für die direkte Verbindung müssen die folgenden Bedingungen erfüllt sein:  
  
-   Diese Eigenschaft muss auf `true` festgelegt werden.  
  
-   Das Add-in muss sich in derselben Anwendungsdomäne wie der Host befinden.  
  
-   Die Add-in-Ansicht und die Host Ansicht des Add-Ins müssen denselben Typ aufweisen.  
  
-   Alle Segmente der Pipeline müssen verfügbar sein.  
  
 Wenn eine direkte Verbindung hergestellt wird, werden der Add-in-seitige Adapter und der Host seitige Adapter nicht instanziiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="addInToken.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
        <summary>Bestimmt, ob ein angegebenes Objekt gleich der aktuellen Instanz ist.</summary>
        <returns><see langword="true" />, wenn das angegebene Objekt und die aktuelle Instanz gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of QualificationDataItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::AddIn::Hosting::QualificationDataItem&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;" Usage="addInToken.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator für die Qualifizierungsdaten der Pipelinesegmente zurück, die diesem Token zugeordnet sind.</summary>
        <returns>Ein Enumerator, der zum Durchlaufen der Qualifizierungsdaten der Pipelinesegmente verwendet werden kann, die dem aktuellen Token zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um ein Token so zu behandeln, als handele es sich um eine Sammlung von Qualifikations Datenelementen, z. b. in einer `foreach` Anweisung ( C++`For Each` in Visual Basic `for each` in Visual).  
  
 Verwenden Sie den Enumerator, der von dieser Methode zurückgegeben wird, um die Qualifizierungs Datenelemente der Pipeline Segmente zu durchlaufen, die dem aktuellen Token zugeordnet sind. Jedes Element von Qualifikations Daten ist eine <xref:System.AddIn.Hosting.QualificationDataItem> Struktur, die das Pipeline Segment identifiziert und ein Name-Wert-Paar aus einem <xref:System.AddIn.Pipeline.QualificationDataAttribute> Attribut enthält, das auf dieses Segment angewendet wird.  
  
> [!NOTE]
>  Das Add-in-Modell verwendet keine Qualifizierungs Daten, die auf die Host Ansicht des Add-ins angewendet werden. Wenn Sie Qualifizierungs Daten auflisten, werden daher keine Elemente gefunden, deren <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>-Eigenschaft <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>ist.  
  
 Alternativ können Sie die <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>-Eigenschaft verwenden, um eine Reihe von Wörterbüchern zu erhalten, die die Qualifikations Daten der Pipeline Segmente enthalten.  
  
   
  
## Examples  
 Im folgenden Beispiel werden die Qualifizierungs Daten für die Pipeline Segmente aufgelistet, die den einzelnen <xref:System.AddIn.Hosting.AddInToken> in einer Sammlung von Token zugeordnet sind.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="addInToken.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fungiert als eine Hashfunktion für ein Token.</summary>
        <returns>Ein Hashcode für das aktuelle Token.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.AddIn.Hosting.AddInToken.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Add-Ins ab.</summary>
        <value>Der Name des Add-Ins.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft erhält den Namen des Add-Ins, wie im <xref:System.AddIn.AddInAttribute>-Attribut angegeben. Dieser Wert ist immer für eine Instanz eines <xref:System.AddIn.Hosting.AddInToken> Objekts verfügbar.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert der Eigenschaften <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>und <xref:System.AddIn.Hosting.AddInToken.Version%2A> der Konsole angezeigt. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.AddIn.Hosting.AddInToken>-Klasse bereitgestellt wird.  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publisher">
      <MemberSignature Language="C#" Value="public string Publisher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Publisher" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Publisher As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Publisher { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Publisher : string" Usage="System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Herausgeber des Add-Ins ab.</summary>
        <value>Der Herausgeber des Add-Ins oder <see langword="null" />, wenn der Herausgeber nicht im <see cref="T:System.AddIn.AddInAttribute" />-Attribut angegeben ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ruft den Herausgeber des Add-Ins ab, wie im <xref:System.AddIn.AddInAttribute>-Attribut angegeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert der Eigenschaften <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>und <xref:System.AddIn.Hosting.AddInToken.Version%2A> der Konsole angezeigt. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.AddIn.Hosting.AddInToken>-Klasse bereitgestellt wird.  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QualificationData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;string,string&gt;&gt; QualificationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;valuetype System.AddIn.Hosting.AddInSegmentType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&gt; QualificationData" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QualificationData As IDictionary(Of AddInSegmentType, IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ QualificationData { System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QualificationData : System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType, System.Collections.Generic.IDictionary&lt;string, string&gt;&gt;" Usage="System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Wörterbuch von Daten zu den Segmenten in der dem aktuellen Token zugeordneten Pipeline ab.</summary>
        <value>Ein Wörterbuch, dessen Schlüssel Pipelinesegmente und dessen Werte Wörterbücher von Name-Wert-Paaren sind, die Qualifizierungsdaten für die einzelnen Segmente darstellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft zum Abrufen von Daten, die auf Pipeline Segmente mit dem <xref:System.AddIn.Pipeline.QualificationDataAttribute>-Attribut angewendet wurden. Sie können diese Daten verwenden, um die Typen zu identifizieren und mit Ihnen zu arbeiten, die ihre Pipelines bilden.  
  
 Diese Eigenschaft gibt ein Wörterbuch mit Wörterbüchern zurück. Das oberste Wörterbuch weist immer sechs Schlüssel auf. Jeder Schlüssel ist ein <xref:System.AddIn.Hosting.AddInSegmentType> Wert für ein Segment in der Pipeline. Jeder Wert ist eine generische <xref:System.Collections.Generic.IDictionary%602> von Zeichen folgen mit Zeichen folgen Schlüsseln, die die Qualifikations Daten des Segments enthalten.  
  
 Die Schlüssel und Werte dieser inneren Wörterbücher sind die Namen und Werte, die in den <xref:System.AddIn.Pipeline.QualificationDataAttribute> Attributen für die Segmente angegeben sind. Wenn keine Qualifikations Daten auf ein Segment angewendet wurden, ist das zugehörige Wörterbuch leer.  
  
> [!NOTE]
>  Das Add-in-Modell verwendet keine Qualifizierungs Daten, die auf die Host Ansicht des Add-ins angewendet werden. Folglich ist das Wörterbuch für <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType> immer leer.  
  
 Sie können Qualifizierungs Daten auch abrufen, indem Sie eine <xref:System.AddIn.Hosting.AddInToken> so auflisten, als ob es sich um eine Auflistung von <xref:System.AddIn.Hosting.QualificationDataItem> Strukturen handelt. verwenden Sie dazu eine `foreach`-Anweisung (`For Each` C++in Visual Basic `for each` in Visual). Weitere Informationen finden Sie im Beispiel für die <xref:System.AddIn.Hosting.QualificationDataItem>-Struktur.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die Qualifizierungs Daten eines Add-Ins untersucht werden.  
  
 [!code-csharp[AddInP3Host#11](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#11)]
 [!code-vb[AddInP3Host#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="addInToken.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator für die Qualifizierungsdaten der Pipelinesegmente zurück, die diesem Token zugeordnet sind.</summary>
        <returns>Ein Enumerator, der zum Durchlaufen der Qualifizierungsdaten der Pipelinesegmente verwendet werden kann, die dem aktuellen Token zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht die Behandlung eines Tokens wie eine Auflistung von Qualifikations Datenelementen, z. b. in einer `foreach` Anweisung (`For Each` in Visual Basic `for each` in Visual C++).  
  
 Verwenden Sie den Enumerator, der von dieser Methode zurückgegeben wird, um die Qualifizierungs Datenelemente der Pipeline Segmente zu durchlaufen, die dem aktuellen Token zugeordnet sind. Jedes Element von Qualifikations Daten ist eine <xref:System.AddIn.Hosting.QualificationDataItem> Struktur, die das Pipeline Segment identifiziert und das Name-Wert-Paar eines <xref:System.AddIn.Pipeline.QualificationDataAttribute> Attributs enthält, das auf dieses Segment angewendet wird.  
  
> [!NOTE]
>  Das Add-in-Modell verwendet keine Qualifizierungs Daten, die auf die Host Ansicht des Add-ins angewendet werden. Wenn Sie Qualifizierungs Daten auflisten, werden daher keine Elemente gefunden, deren <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>-Eigenschaft <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>ist.  
  
 Alternativ können Sie die <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>-Eigenschaft verwenden, um eine Reihe von Wörterbüchern mit den Qualifikations Daten der Pipeline Segmente zu erhalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="addInToken.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die das Token darstellt.</summary>
        <returns>Eine Zeichenfolge, die das Token darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.AddIn.Hosting.AddInToken.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Version des Add-Ins ab, wie im <see cref="T:System.AddIn.AddInAttribute" />-Attribut angegeben.</summary>
        <value>Die Version des Add-Ins oder <see langword="null" />, wenn die Versionsnummer nicht im <see cref="T:System.AddIn.AddInAttribute" />-Attribut angegeben ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Versionsnummer ist eine frei Form Zeichenfolge.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert der Eigenschaften <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>und <xref:System.AddIn.Hosting.AddInToken.Version%2A> der Konsole angezeigt. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.AddIn.Hosting.AddInToken>-Klasse bereitgestellt wird.  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
