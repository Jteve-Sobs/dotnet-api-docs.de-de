<Type Name="AuthorizationContext" FullName="System.Security.Claims.AuthorizationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d43a0f74c03bb57b03eed3834487dba58ccaf3e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36531782" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.AuthorizationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationContext" />
  <TypeSignature Language="F#" Value="type AuthorizationContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Kontextinformationen eines Autorisierungsereignisses bereit. Dies umfasst auch den Prinzipal, der den Aufrufer darstellt, die angeforderte Ressource und die Aktion, die ausgeführt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Claims.AuthorizationContext> Klasse stellt den Kontext dar, mit dem einen anspruchsautorisierungs-Manager, eine Implementierung von der <xref:System.Security.Claims.ClaimsAuthorizationManager> -Klasse, um festzustellen, ob ein Prinzipal (Betreff) autorisiert werden soll, um eine angegebene Aktion für eine bestimmte Ressource auszuführen. Der anspruchsautorisierungs-Manager wertet den Autorisierungskontext in der <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> -Methode, und entweder verweigert oder gewährt Zugriff basierend auf den Ansprüchen vom Prinzipal angezeigt.  
  
 Die <xref:System.Security.Claims.AuthorizationContext.Principal%2A> Eigenschaft enthält den Prinzipal für die Autorisierung angefordert wird, die <xref:System.Security.Claims.AuthorizationContext.Resource%2A> Eigenschaft enthält die Ressource, auf dem der Prinzipal autorisiert werden wird, und die <xref:System.Security.Claims.AuthorizationContext.Action%2A> Eigenschaft enthält die Aktionen, die die Prinzipal beabsichtigt, die für die Ressource auszuführen. Sowohl für die Ressource als auch für die Aktion werden als eine Sammlung von Ansprüchen dargestellt. in den meisten Fällen enthält jede Sammlung jedoch einen einzelnen Anspruch.  
  
   
  
## Examples  
 Das Codebeispiel, das verwendet wird die <xref:System.Security.Claims.AuthorizationContext> Thema stammt aus dem `Claims Based Authorization` Beispiel. Dieses Beispiel enthält einen benutzerdefinierten anspruchsautorisierungs-Manager, der autorisieren kann Themen, die basierend auf einer Richtlinie, die in der Konfiguration angegeben ist. Diese benutzerdefinierte Manager besteht aus drei grundlegenden Komponenten: eine abgeleitete Klasse <xref:System.Security.Claims.ClaimsAuthorizationManager> , das den Manager implementiert die `ResourceAction` -Klasse, die eine Ressource und eine Aktion-Paare und ein Reader, Richtlinie, die gelesen und kompiliert die Richtlinie, die im angegebenen die die Konfigurationsdatei. Dies kann kompiliert und dann von den anspruchsautorisierungs-Manager verwendet werden, die um einen Prinzipal zum Autorisieren des Zugriffs auf Ressourcen zu evaluieren. Nicht alle Elemente werden aus Gründen der Übersichtlichkeit aufgeführt. Weitere Informationen in diesem Beispiel und andere Beispiele sind für WIF und wo Sie sie herunterladen, finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md).  
  
 Der folgende code zeigt die <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> -Methode für den benutzerdefinierten anspruchsautorisierungs-Manager. Eine Funktion, die den Prinzipal ausgewertet wird basierend auf die Ressource und die Aktion angegeben, der <xref:System.Security.Claims.AuthorizationContext> aufgerufen wird. Diese Funktion gibt entweder `true` oder `false`, entweder gewährt oder verweigert den Zugriff auf den Prinzipal.  
  
 [!code-csharp[WifClaimsBasedAuthorization#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#3)]  
[!code-csharp[WifClaimsBasedAuthorization#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#5)]  
  
 Das folgende XML zeigt ein Beispiel für die Autorisierungsrichtlinie, die in der Konfiguration angegeben wurde. In der ersten Richtlinie muss der Prinzipal einer der angegebenen Ansprüche um die angegebene Aktion auszuführen, für die angegebene Ressource verfügen. In der zweiten Richtlinie muss der Prinzipal beide Ansprüche werden sollen, führen Sie die angegebene Aktion für die angegebene Ressource verfügen. In allen anderen Fällen ist der Prinzipal zugreifen, unabhängig von den Ansprüchen, die sie besitzt automatisch erteilt.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthorizationManager type="ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary">  
      <policy resource="http://localhost:28491/Developers.aspx" action="GET">  
        <or>  
          <claim claimType="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" claimValue="developer" />  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
        </or>  
      </policy>  
      <policy resource="http://localhost:28491/Administrators.aspx" action="GET">  
        <and>  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
          <claim claimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country" claimValue="USA" />  
        </and>  
      </policy>  
      <policy resource="http://localhost:28491/Default.aspx" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/Claims.aspx" action="GET">  
      </policy>  
    </claimsAuthorizationManager>  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Claims.AuthorizationContext" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; resource, System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal principal, class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; resource, class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As ClaimsPrincipal, resource As Collection(Of Claim), action As Collection(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationContext(System::Security::Claims::ClaimsPrincipal ^ principal, System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ resource, System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.AuthorizationContext : System.Security.Claims.ClaimsPrincipal * System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; * System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.AuthorizationContext" Usage="new System.Security.Claims.AuthorizationContext (principal, resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="action" Type="System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="principal">Der Prinzipal, dessen Autorisierung geprüft werden soll.</param>
        <param name="resource">Eine Sammlung von Ansprüchen, die die Ressource darstellt, für die der Prinzipal berechtigt werden soll. Die Auflistung enthält i. d. R. ein einzelnes Element.</param>
        <param name="action">Eine Sammlung von Ansprüchen, die die Aktion darstellt, die auf der Ressource ausgeführt werden soll. Die Auflistung enthält i. d. R. ein einzelnes Element.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Claims.AuthorizationContext" />-Klasse mit dem angegebenen Prinzipal, Ressourcenanspruch und Aktionsanspruch.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="principal" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="resource" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="action" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal principal, string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As ClaimsPrincipal, resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationContext(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.AuthorizationContext : System.Security.Claims.ClaimsPrincipal * string * string -&gt; System.Security.Claims.AuthorizationContext" Usage="new System.Security.Claims.AuthorizationContext (principal, resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="principal">Der Prinzipal, dessen Autorisierung geprüft werden soll.</param>
        <param name="resource">Die Ressource für die das Prinzipal autorisiert werden soll. Die Ressource wird als Wert eines Namensanspruchs angegeben.</param>
        <param name="action">Die Aktion, die auf der Ressource ausgeführt werden soll. Die Aktion wird als Wert eines Namensanspruchs angegeben.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Claims.AuthorizationContext" />-Klasse mit dem angegebenen Prinzipal, Ressourcenname und Aktionsname.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Claims.AuthorizationContext.Action%2A> Eigenschaft wird initialisiert, um einen Name-Anspruch enthalten (<xref:System.Security.Claims.ClaimTypes.Name?displayProperty=nameWithType>), die den angegebenen Wert hat die `action` Parameter. Die <xref:System.Security.Claims.AuthorizationContext.Resource%2A> Eigenschaft wird initialisiert, um einen Name-Anspruch enthalten, die dem angegebenen Wert verfügt über die `resource` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="principal" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="resource" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="action" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As Collection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ Action { System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.AuthorizationContext.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Aktion ab, für die der Prinzipal berechtigt werden soll.</summary>
        <value>Eine Sammlung von Ansprüchen, die die Aktionen darstellt, die für die Anforderung relevant sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Auflistung enthält i. d. R. ein einzelnes Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Principal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Principal : System.Security.Claims.ClaimsPrincipal" Usage="System.Security.Claims.AuthorizationContext.Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Prinzipal ab (subject), für den Autorisierung angefordert wird.</summary>
        <value>Der Prinzipal, für den die Autorisierung angefordert wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; Resource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; Resource" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Resource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resource As Collection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ Resource { System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Resource : System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.AuthorizationContext.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ressource ab, auf die der Prinzipal berechtigt werden soll.</summary>
        <value>Eine Sammlung von Ansprüchen, die die Ressource darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Auflistung enthält i. d. R. ein einzelnes Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>