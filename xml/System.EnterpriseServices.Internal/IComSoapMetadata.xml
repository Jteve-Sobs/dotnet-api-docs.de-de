<Type Name="IComSoapMetadata" FullName="System.EnterpriseServices.Internal.IComSoapMetadata">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa7a95f776bdac774a3f8b70b65a9b3fa13ba2a4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563889" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComSoapMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComSoapMetadata" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComSoapMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComSoapMetadata" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComSoapMetadata" />
  <TypeSignature Language="F#" Value="type IComSoapMetadata = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("d8013ff0-730b-45e2-ba24-874b7242c425")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt Methoden zum Generieren von CLR (Common Language Runtime)-Metadaten für eine COM+-Komponente an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.EnterpriseServices.Internal.IComSoapMetadata> Schnittstelle muss nicht direkt im Code implementiert werden. Durch die Implementierung erfolgt die <xref:System.EnterpriseServices.Internal.GenerateMetadata> Klasse in der .NET Framework-Infrastruktur.  
  
 Bei Bedarf <xref:System.EnterpriseServices.Internal.IComSoapMetadata> gibt an, dass eine Assembly, die CLR-Metadaten für eine angegebene Typbibliothek generiert wird.  
  
 <xref:System.EnterpriseServices.Internal.IComSoapMetadata> wird intern von .NET Framework verwendet werden. Sie müssen nicht direkt im Code verwenden.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public string Generate (string SrcTypeLibFileName, string OutPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Generate(string SrcTypeLibFileName, string OutPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapMetadata.Generate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Generate (SrcTypeLibFileName As String, OutPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Generate(System::String ^ SrcTypeLibFileName, System::String ^ OutPath);" />
      <MemberSignature Language="F#" Value="abstract member Generate : string * string -&gt; string" Usage="iComSoapMetadata.Generate (SrcTypeLibFileName, OutPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SrcTypeLibFileName" Type="System.String" />
        <Parameter Name="OutPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SrcTypeLibFileName">Der Name der Typbibliothek, für die die Assembly generiert werden soll.</param>
        <param name="OutPath">Der Ordner, in dem eine Assembly generiert werden soll.</param>
        <summary>Generiert eine Assembly, die CLR (Common Language Runtime)-Metadaten für eine durch die angegebene Typbibliothek dargestellte COM+-Komponente enthält.</summary>
        <returns>Der Name der generierten Assembly.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Bedarf die <xref:System.EnterpriseServices.Internal.IComSoapMetadata.Generate%2A> Methode gibt an, dass eine Assembly, die CLR-Metadaten für eine angegebene Typbibliothek generiert wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateSigned">
      <MemberSignature Language="C#" Value="public string GenerateSigned (string SrcTypeLibFileName, string OutPath, bool InstallGac, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateSigned(string SrcTypeLibFileName, string OutPath, bool InstallGac, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateSigned (SrcTypeLibFileName As String, OutPath As String, InstallGac As Boolean, ByRef Error As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateSigned(System::String ^ SrcTypeLibFileName, System::String ^ OutPath, bool InstallGac, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSigned : string * string * bool *  -&gt; string" Usage="iComSoapMetadata.GenerateSigned (SrcTypeLibFileName, OutPath, InstallGac, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SrcTypeLibFileName" Type="System.String" />
        <Parameter Name="OutPath" Type="System.String" />
        <Parameter Name="InstallGac" Type="System.Boolean" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="SrcTypeLibFileName">Der Name der Typbibliothek, für die die Assembly generiert werden soll.</param>
        <param name="OutPath">Der Ordner, in dem eine Assembly generiert werden soll.</param>
        <param name="InstallGac">Ein Flag, das angibt, ob die Assembly im globalen Assemblycache installiert werden soll.</param>
        <param name="Error">Eine Zeichenfolge, in die eine Fehlermeldung geschrieben werden kann.</param>
        <summary>Generiert eine Assembly, die CLR (Common Language Runtime)-Metadaten für eine durch die angegebene Typbibliothek dargestellte COM+-Komponente enthält, signiert die Assembly mit einem Schlüsselpaar mit starkem Namen und installiert diese im globalen Assemblycache.</summary>
        <returns>Der Name der generierten Assembly.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Bedarf die <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A> Methode gibt an, dass eine Assembly, die CLR-Metadaten für eine angegebene Typbibliothek generiert wird. Darüber hinaus <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A> ein Schlüsselpaar mit starkem Namen generiert und signiert die Assembly.  
  
 Die `InstallGac` Parameter gibt an, ob die Assembly im globalen Assemblycache zu installieren. Jedoch, die eine Implementierung der <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A>, von der <xref:System.EnterpriseServices.Internal.GenerateMetadata> -Klasse, dieser Wert ignoriert und versucht immer, die signierte Assembly im globalen Assemblycache zu installieren.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>