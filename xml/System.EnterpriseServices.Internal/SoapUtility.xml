<Type Name="SoapUtility" FullName="System.EnterpriseServices.Internal.SoapUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10af32d1a92432c7a794866f5bef41c2d87b7523" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48736065" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapUtility : System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapUtility extends System.Object implements class System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.SoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapUtility&#xA;Implements ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapUtility sealed : System::EnterpriseServices::Internal::ISoapUtility" />
  <TypeSignature Language="F#" Value="type SoapUtility = class&#xA;    interface ISoapUtility" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.ISoapUtility</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("5F9A955F-AA55-4127-A32B-33496AA8A44E")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e41c1-101">Stellt Dienstprogramme bereit, die den Export von SOAP-fähigen COM+-Anwendungsproxys durch den Server und den Import der Proxys durch den Client unterstützen.</span><span class="sxs-lookup"><span data-stu-id="e41c1-101">Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client.</span></span> <span data-ttu-id="e41c1-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="e41c1-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e41c1-103">Das Hilfsprogramm zu Funktionen, <xref:System.EnterpriseServices.Internal.SoapUtility> bietet heißen aus zahlreichen Standorten innerhalb von COM+; ihr Hauptzweck ist jedoch zur Unterstützung der Export und Import des Clientproxys.</span><span class="sxs-lookup"><span data-stu-id="e41c1-103">The utility functions that <xref:System.EnterpriseServices.Internal.SoapUtility> provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.</span></span>  
  
 <span data-ttu-id="e41c1-104"><xref:System.EnterpriseServices.Internal.SoapUtility> wird intern von .NET Framework verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e41c1-104"><xref:System.EnterpriseServices.Internal.SoapUtility> is used internally by the .NET Framework.</span></span> <span data-ttu-id="e41c1-105">Sie müssen nicht direkt in Ihrem Code verwenden.</span><span class="sxs-lookup"><span data-stu-id="e41c1-105">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e41c1-106">Initialisiert eine neue Instanz der <see cref="T:System.EnterpriseServices.Internal.SoapUtility" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e41c1-106">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerBinPath : string * string * string *  -&gt; unit&#xA;override this.GetServerBinPath : string * string * string *  -&gt; unit" Usage="soapUtility.GetServerBinPath (rootWebServer, inBaseUrl, inVirtualRoot, binPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="e41c1-107">Der Stammwebserver.</span><span class="sxs-lookup"><span data-stu-id="e41c1-107">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="e41c1-108">Die Basis-URL-Adresse.</span><span class="sxs-lookup"><span data-stu-id="e41c1-108">The base URL address.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="e41c1-109">Der Name des virtuellen Stammverzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e41c1-109">The name of the virtual root.</span></span></param>
        <param name="binPath"><span data-ttu-id="e41c1-110">Nach dem Beenden dieser Methode enthält dieser Parameter den Dateipfad für das virtuelle SOAP-Stammverzeichnis bin.</span><span class="sxs-lookup"><span data-stu-id="e41c1-110">When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.</span></span></param>
        <summary><span data-ttu-id="e41c1-111">Gibt den Pfad des SOAP-Verzeichnisses bin zurück.</span><span class="sxs-lookup"><span data-stu-id="e41c1-111">Returns the path for the SOAP bin directory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e41c1-112">Ein Aufrufer in der Aufrufkette verfügt nicht über die Berechtigung für den Zugriff auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="e41c1-112">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e41c1-113">Das Dienstprogramm für SOAP ist nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="e41c1-113">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="e41c1-114">Fehler beim Aufruf zum Abrufen des Systemverzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e41c1-114">The call to get the system directory failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e41c1-115">für den Zugriff auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="e41c1-115">for the ability to access unmanaged code.</span></span> <span data-ttu-id="e41c1-116">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e41c1-116">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerPhysicalPath : string * string * string *  -&gt; unit&#xA;override this.GetServerPhysicalPath : string * string * string *  -&gt; unit" Usage="soapUtility.GetServerPhysicalPath (rootWebServer, inBaseUrl, inVirtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="e41c1-117">Der Stammwebserver.</span><span class="sxs-lookup"><span data-stu-id="e41c1-117">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="e41c1-118">Die Basis-URL-Adresse.</span><span class="sxs-lookup"><span data-stu-id="e41c1-118">The base URL address.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="e41c1-119">Der Name des virtuellen Stammverzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e41c1-119">The name of the virtual root.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="e41c1-120">Nach dem Beenden dieser Methode enthält dieser Parameter den Dateipfad für das virtuelle SOAP-Stammverzeichnis.</span><span class="sxs-lookup"><span data-stu-id="e41c1-120">When this method returns, this parameter contains the file path for the SOAP virtual root.</span></span></param>
        <summary><span data-ttu-id="e41c1-121">Gibt den Pfad für das virtuelle SOAP-Stammverzeichnis zurück.</span><span class="sxs-lookup"><span data-stu-id="e41c1-121">Returns the path for the SOAP virtual root.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e41c1-122">Ein Aufrufer in der Aufrufkette verfügt nicht über die Berechtigung für den Zugriff auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="e41c1-122">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e41c1-123">Das Dienstprogramm für SOAP ist nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="e41c1-123">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="e41c1-124">Fehler beim Aufruf zum Abrufen des Systemverzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e41c1-124">The call to get the system directory failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e41c1-125">für den Zugriff auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="e41c1-125">for the ability to access unmanaged code.</span></span> <span data-ttu-id="e41c1-126">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e41c1-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Present();" />
      <MemberSignature Language="F#" Value="abstract member Present : unit -&gt; unit&#xA;override this.Present : unit -&gt; unit" Usage="soapUtility.Present " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.Present</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e41c1-127">Legt fest, ob authentifizierte, verschlüsselte SOAP-Schnittstellen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e41c1-127">Determines whether authenticated, encrypted SOAP interfaces are present.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e41c1-128">Ein Aufrufer in der Aufrufkette verfügt nicht über die Berechtigung für den Zugriff auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="e41c1-128">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e41c1-129">Das Dienstprogramm für SOAP ist nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="e41c1-129">The SOAP utility is not available.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e41c1-130">für den Zugriff auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="e41c1-130">for the ability to access unmanaged code.</span></span> <span data-ttu-id="e41c1-131">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e41c1-131">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>