<Type Name="ClrObjectFactory" FullName="System.EnterpriseServices.Internal.ClrObjectFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d55b7090c03f80cbfcf945e3bbc1e8158d4bcc27" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86818357" /></Metadata><TypeSignature Language="C#" Value="public class ClrObjectFactory : System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrObjectFactory extends System.Object implements class System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ClrObjectFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ClrObjectFactory&#xA;Implements IClrObjectFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClrObjectFactory : System::EnterpriseServices::Internal::IClrObjectFactory" />
  <TypeSignature Language="F#" Value="type ClrObjectFactory = class&#xA;    interface IClrObjectFactory" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IClrObjectFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("ecabafd1-7f19-11d2-978e-0000f8757e2a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("ecabafd1-7f19-11d2-978e-0000f8757e2a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Aktiviert SOAP-fähige COM+-Anwendungsproxys von einem Client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory> wird intern vom .NET Framework verwendet. Sie müssen die-Klasse nicht direkt in Ihrem Code verwenden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrObjectFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClrObjectFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.EnterpriseServices.Internal.ClrObjectFactory" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromAssembly">
      <MemberSignature Language="C#" Value="public object CreateFromAssembly (string AssemblyName, string TypeName, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromAssembly(string AssemblyName, string TypeName, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromAssembly (AssemblyName As String, TypeName As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromAssembly(System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromAssembly : string * string * string -&gt; obj&#xA;override this.CreateFromAssembly : string * string * string -&gt; obj" Usage="clrObjectFactory.CreateFromAssembly (AssemblyName, TypeName, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyName">Der Name der zu aktivierenden Assembly.</param>
        <param name="TypeName">Der Name des zu aktivierenden Typs.</param>
        <param name="Mode">Wird nicht verwendet.</param>
        <summary>Aktiviert eine Remoteassembly über .NET Remoting mit der Konfigurationsdatei der Assembly.</summary>
        <returns>Eine Instanz von <see cref="T:System.Object" />, die den Typ darstellt, wobei Kultur, Argumente, Bindungs- und Aktivierungsattribute auf <see langword="null" /> festgelegt sind, oder <see langword="null" />, wenn der <paramref name="TypeName" />-Parameter nicht gefunden wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufkette verfügt nicht über die Berechtigung für den Zugriff auf nicht verwalteten Code.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">Die Klasse ist nicht registriert.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromMailbox">
      <MemberSignature Language="C#" Value="public object CreateFromMailbox (string Mailbox, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromMailbox(string Mailbox, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromMailbox (Mailbox As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromMailbox(System::String ^ Mailbox, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromMailbox : string * string -&gt; obj&#xA;override this.CreateFromMailbox : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromMailbox (Mailbox, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromMailbox(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mailbox" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Mailbox">Ein Postfach für den Webdienst.</param>
        <param name="Mode">Wird nicht verwendet.</param>
        <summary>Aktiviert eine Remoteassembly über .NET Remoting unter Verwendung des Postfachs der Remoteassembly. Derzeit nicht implementiert. Löst beim Aufruf eine <see cref="T:System.Runtime.InteropServices.COMException" /> aus.</summary>
        <returns>Der Aufruf dieser Methode löst eine Ausnahme aus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löst eine Ausnahme aus, wenn aufgerufen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">SMTP (Simple Mail Transfer Protocol) ist nicht implementiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromVroot">
      <MemberSignature Language="C#" Value="public object CreateFromVroot (string VrootUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromVroot(string VrootUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromVroot (VrootUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromVroot(System::String ^ VrootUrl, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromVroot : string * string -&gt; obj&#xA;override this.CreateFromVroot : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromVroot (VrootUrl, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VrootUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VrootUrl">Die URL für das virtuelle Stammverzeichnis des zu aktivierenden Objekts.</param>
        <param name="Mode">Wird nicht verwendet.</param>
        <summary>Aktiviert eine Remoteassembly über .NET Remoting mit der URL für das virtuelle Stammverzeichnis der Remoteassembly.</summary>
        <returns>Eine Instanz von <see cref="T:System.Object" />, die den Typ darstellt, wobei Kultur, Argumente, Bindungs- und Aktivierungsattribute auf <see langword="null" /> festgelegt sind, oder <see langword="null" />, wenn die durch den <paramref name="VrootUrl" />-Parameter bestimmte Assembly nicht gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> Fügt die Zeichenfolge "? WSDL" an `VrootUrl` und ruft <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> auf, um das Remote Objekt zu aktivieren.  
  
 Die Version von SOAP, die von .NET Remoting verwendet wird, ist RPC/codiert, nicht Document/Literal, was für die SOAP-Interoperabilität erforderlich ist. Daher <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> funktioniert nicht mit den meisten ASMX-Webdiensten.  
  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> erfordert beim ersten Ausführen Administratorrechte auf dem lokalen Computer, da ein Client Proxy für die Kommunikation mit der Remoteassembly erstellt und installiert wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufkette verfügt nicht über die Berechtigung für den Zugriff auf nicht verwalteten Code.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">Das Threadtoken konnte nicht geöffnet werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromWsdl">
      <MemberSignature Language="C#" Value="public object CreateFromWsdl (string WsdlUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromWsdl(string WsdlUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromWsdl (WsdlUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromWsdl(System::String ^ WsdlUrl, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromWsdl : string * string -&gt; obj&#xA;override this.CreateFromWsdl : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromWsdl (WsdlUrl, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromWsdl(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WsdlUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="WsdlUrl">Der WSDL-URL des Webdienstes.</param>
        <param name="Mode">Wird nicht verwendet.</param>
        <summary>Aktiviert eine Remoteassembly über .NET Remoting mit der WSDL (Web Services Description Language) des XML-Webdienstes.</summary>
        <returns>Eine Instanz von <see cref="T:System.Object" />, die den Typ darstellt, wobei Kultur, Argumente, Bindungs- und Aktivierungsattribute auf <see langword="null" /> festgelegt sind, oder <see langword="null" />, wenn die durch den <paramref name="WsdlUrl" />-Parameter bestimmte Assembly nicht gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verarbeitet die von weiter gegebene WSDL und generiert bei Bedarf einen Proxy und aktiviert dann das Remote Objekt.  
  
 Die Version von SOAP, die von .NET Remoting verwendet wird, ist RPC/codiert, nicht Document/Literal, was für die SOAP-Interoperabilität erforderlich ist. Daher <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> funktioniert nicht mit den meisten ASMX-Webdiensten.  
  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> erfordert beim ersten Ausführen Administratorrechte auf dem lokalen Computer, da ein Client Proxy für die Kommunikation mit der Remoteassembly erstellt und installiert wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufkette verfügt nicht über die Berechtigung für den Zugriff auf nicht verwalteten Code.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">Das Threadtoken konnte nicht geöffnet werden.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
