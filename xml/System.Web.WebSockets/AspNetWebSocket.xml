<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63b7a8dc88b3ee90e71c48e6e7f2faae15631b40" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70520701" /></Metadata><TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <TypeSignature Language="F#" Value="type AspNetWebSocket = class&#xA;    inherit WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="41111-101">Stellt eine vollduplexe Echtzeitverbindung zwischen einem Webserver und einem Client in einer ASP.NET-Anwendung dar.</span><span class="sxs-lookup"><span data-stu-id="41111-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="aspNetWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41111-102">Bricht alle ausstehenden E/A-Vorgänge auf dem <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Objekt ab und legt den Zustand des Objekts fest, sodass es nicht verwendet werden kann, um zusätzliche E/A-Vorgänge zu starten.</span><span class="sxs-lookup"><span data-stu-id="41111-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41111-103">Nachdem die <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> Methode aufgerufen wurde, können Sie weiterhin auf Eigenschaften und Methoden zugreifen, die keine e/a-Vorgänge beinhalten.</span><span class="sxs-lookup"><span data-stu-id="41111-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-104">Das Objekt war zuvor freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-104">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="41111-105">Der Statuscode des Schließen-Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="41111-105">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="41111-106">Die Statusmeldung des Schließvorgangs.</span><span class="sxs-lookup"><span data-stu-id="41111-106">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="41111-107">Das Objekt, das einen ausstehenden Vorgang abbricht.</span><span class="sxs-lookup"><span data-stu-id="41111-107">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="41111-108">Sendet eine asynchrone Meldung an einen Client, um die Verbindung zu schließen.</span><span class="sxs-lookup"><span data-stu-id="41111-108">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="41111-109">Wenn der Server die Anforderung initiiert, um die Verbindung zu schließen, wartet die Methode darauf, dass der Client die Anforderung bestätigt, bevor eine Rückgabe erfolgt.</span><span class="sxs-lookup"><span data-stu-id="41111-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span></span></summary>
        <returns><span data-ttu-id="41111-110">Ein Verweis auf den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="41111-110">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41111-111">Sie können die- <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> Methode <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> und die-Methode sowohl für vom Client initiierte als auch für vom Server <xref:System.Web.WebSockets.AspNetWebSocket> initiierte Anforderungen verwenden, um eine Verbindung zu schließen.</span><span class="sxs-lookup"><span data-stu-id="41111-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="41111-112">Die beiden Methoden verarbeiten vom Client initiierte Anforderungen auf die gleiche Weise: Nachdem der Client eine Nachricht an den Server gesendet hat, um die Verbindung zu schließen, ruft der Server eine dieser Methoden auf und sendet eine Bestätigung an den Client, und die Methode gibt dann zurück.</span><span class="sxs-lookup"><span data-stu-id="41111-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="41111-113">Bei vom Server initiierten Anforderungen funktionieren die beiden Methoden anders.</span><span class="sxs-lookup"><span data-stu-id="41111-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="41111-114">Die <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> -Methode sendet eine Meldung an den Client, um die Verbindung zu schließen, wartet auf eine Antwort und gibt dann zurück.</span><span class="sxs-lookup"><span data-stu-id="41111-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="41111-115">Der Server wartet nicht auf zusätzliche Daten, die vom Client gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="41111-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="41111-116">Im Gegensatz dazu sendet <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> die-Methode eine Nachricht an den Client, um die Verbindung zu schließen, und gibt zurück, ohne auf eine Antwort zu warten.</span><span class="sxs-lookup"><span data-stu-id="41111-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="41111-117">Nachdem die-Methode zurückgegeben wurde, können <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> Sie die-Methode aufzurufen und entweder zusätzliche Daten oder die Bestätigung verarbeiten, die vom Client gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="41111-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-118">Das <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Objekt war zuvor freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41111-119">Das <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> -Objekt weist einen Abbruchstatus auf.</span><span class="sxs-lookup"><span data-stu-id="41111-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="41111-120">- oder -</span><span class="sxs-lookup"><span data-stu-id="41111-120">-or-</span></span> 
<span data-ttu-id="41111-121">Senden von Vorgängen, die nicht verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="41111-121">Sending operations are unavailable.</span></span>  
  
<span data-ttu-id="41111-122">- oder -</span><span class="sxs-lookup"><span data-stu-id="41111-122">-or-</span></span> 
<span data-ttu-id="41111-123">Empfangen von Vorgängen nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="41111-123">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="41111-124">Der Statuscode des Schließen-Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="41111-124">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="41111-125">Die Statusmeldung des Schließvorgangs.</span><span class="sxs-lookup"><span data-stu-id="41111-125">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="41111-126">Das Objekt, das einen ausstehenden Vorgang abbricht.</span><span class="sxs-lookup"><span data-stu-id="41111-126">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="41111-127">Sendet eine asynchrone Meldung an einen Client, um die Verbindung zu schließen.</span><span class="sxs-lookup"><span data-stu-id="41111-127">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="41111-128">Wenn der Server die Anforderung initiiert, um die Verbindung zu schließen, erfolgt eine Rückgabe, ohne auf eine Antwort zu warten.</span><span class="sxs-lookup"><span data-stu-id="41111-128">If the server initiates the request to close the connection, the method returns without waiting for a response.</span></span></summary>
        <returns><span data-ttu-id="41111-129">Ein Verweis auf den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="41111-129">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41111-130">Sie können die- <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> Methode <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> und die-Methode sowohl für vom Client initiierte als auch für vom Server <xref:System.Web.WebSockets.AspNetWebSocket> initiierte Anforderungen verwenden, um eine Verbindung zu schließen.</span><span class="sxs-lookup"><span data-stu-id="41111-130">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="41111-131">Die beiden Methoden verarbeiten vom Client initiierte Anforderungen auf die gleiche Weise: Nachdem der Client eine Nachricht an den Server gesendet hat, um die Verbindung zu schließen, ruft der Server eine dieser Methoden auf und sendet eine Bestätigung an den Client, und die Methode gibt dann zurück.</span><span class="sxs-lookup"><span data-stu-id="41111-131">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="41111-132">Bei vom Server initiierten Anforderungen funktionieren die beiden Methoden anders.</span><span class="sxs-lookup"><span data-stu-id="41111-132">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="41111-133">Die <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> -Methode sendet eine Meldung an den Client, um die Verbindung zu schließen, wartet auf eine Antwort und gibt dann zurück.</span><span class="sxs-lookup"><span data-stu-id="41111-133">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="41111-134">Der Server wartet nicht auf zusätzliche Daten, die vom Client gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="41111-134">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="41111-135">Im Gegensatz dazu sendet <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> die-Methode eine Nachricht an den Client, um die Verbindung zu schließen, und gibt zurück, ohne auf eine Antwort zu warten.</span><span class="sxs-lookup"><span data-stu-id="41111-135">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="41111-136">Nachdem die-Methode zurückgegeben wurde, können <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> Sie die-Methode aufzurufen und entweder zusätzliche Daten oder die Bestätigung verarbeiten, die vom Client gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="41111-136">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-137">Das Objekt war zuvor freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-137">The object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41111-138">Das <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> -Objekt weist einen Abbruchstatus auf.</span><span class="sxs-lookup"><span data-stu-id="41111-138">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="41111-139">- oder -</span><span class="sxs-lookup"><span data-stu-id="41111-139">-or-</span></span> 
<span data-ttu-id="41111-140">Senden von Vorgängen, die nicht verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="41111-140">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41111-141">Ruft den Statuscode ab, der angibt, warum ein <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Objekt geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="41111-141">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="41111-142">Der Statuscode.</span><span class="sxs-lookup"><span data-stu-id="41111-142">The status code.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-143">Das Objekt war zuvor freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-143">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41111-144">Ruft eine Statusmeldung ab, die erklärt, warum ein <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Objekt geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="41111-144">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="41111-145">Die Statusmeldung.</span><span class="sxs-lookup"><span data-stu-id="41111-145">The status message.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-146">Das Objekt war zuvor freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-146">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="aspNetWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="41111-147">Gibt alle vom <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Objekt verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="41111-147">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41111-148">ASP.NET ruft automatisch die <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> -Methode für <xref:System.Web.WebSockets.AspNetWebSocket> ein-Objekt auf, um alle Ressourcen freizugeben, die nach der Ausführung des Codes verbleiben.</span><span class="sxs-lookup"><span data-stu-id="41111-148">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="aspNetWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="41111-149">Das Array, das die Meldungsdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="41111-149">The array that contains the message data.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="41111-150">Das Objekt, das einen ausstehenden Vorgang abbricht.</span><span class="sxs-lookup"><span data-stu-id="41111-150">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="41111-151">Empfängt ein einzelnes Nachrichtenfragment eines Remoteclients.</span><span class="sxs-lookup"><span data-stu-id="41111-151">Receives a single message fragment from a remote client.</span></span></summary>
        <returns><span data-ttu-id="41111-152">Ein Verweis auf die Aufgabe des Empfangs einer Nachricht.</span><span class="sxs-lookup"><span data-stu-id="41111-152">A reference to the task of receiving a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-153">Das <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Objekt war zuvor freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-153">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41111-154">Das <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> -Objekt weist einen Abbruchstatus auf.</span><span class="sxs-lookup"><span data-stu-id="41111-154">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="41111-155">- oder -</span><span class="sxs-lookup"><span data-stu-id="41111-155">-or-</span></span> 
<span data-ttu-id="41111-156">Empfangen von Vorgängen nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="41111-156">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="41111-157">Das Array, das die Meldungsdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="41111-157">The array that contains the message data.</span></span></param>
        <param name="messageType"><span data-ttu-id="41111-158">Der Meldungstyp.</span><span class="sxs-lookup"><span data-stu-id="41111-158">The message type.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="41111-159"><see langword="true" />, um anzugeben, dass ein Fragment das Ende einer vollständigen Meldung ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="41111-159"><see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="41111-160">Das Objekt, das einen ausstehenden Vorgang abbricht.</span><span class="sxs-lookup"><span data-stu-id="41111-160">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="41111-161">Sendet ein einzelnes Nachrichtenfragment an einen Remoteclient.</span><span class="sxs-lookup"><span data-stu-id="41111-161">Sends a single message fragment to a remote client.</span></span></summary>
        <returns><span data-ttu-id="41111-162">Ein Verweis auf die Aufgabe des Sendens einer Nachricht.</span><span class="sxs-lookup"><span data-stu-id="41111-162">A reference to the task of sending a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-163">Das <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Objekt wurde freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-163">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="41111-164">Das <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> -Objekt weist einen Abbruchstatus auf.</span><span class="sxs-lookup"><span data-stu-id="41111-164">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="41111-165">- oder -</span><span class="sxs-lookup"><span data-stu-id="41111-165">-or-</span></span> 
<span data-ttu-id="41111-166">Senden von Vorgängen, die nicht verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="41111-166">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41111-167">Ruft einen Wert ab, der den offenen oder geschlossenen Zustand eines <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Objekts angibt.</span><span class="sxs-lookup"><span data-stu-id="41111-167">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <value><span data-ttu-id="41111-168">Der aktuelle Status.</span><span class="sxs-lookup"><span data-stu-id="41111-168">The current state.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-169">Das Objekt war zuvor freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-169">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="41111-170">Ruft den Namen eines anwendungsspezifischen Protokolls ab, das ein Remote Client und ein Server nutzen können, um Daten über eine <see cref="T:System.Web.WebSockets.AspNetWebSocket" />-Verbindung austauschen zu können.</span><span class="sxs-lookup"><span data-stu-id="41111-170">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="41111-171">Der Name des Protokolls.</span><span class="sxs-lookup"><span data-stu-id="41111-171">The name of the protocol.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="41111-172">Das Objekt war zuvor freigegeben.</span><span class="sxs-lookup"><span data-stu-id="41111-172">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
