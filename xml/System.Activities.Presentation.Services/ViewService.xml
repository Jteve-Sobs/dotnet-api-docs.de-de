<Type Name="ViewService" FullName="System.Activities.Presentation.Services.ViewService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46663b81f5a5577f185da87d9b30cbcc358ffef6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69307505" /></Metadata><TypeSignature Language="C#" Value="public abstract class ViewService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ViewService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewService abstract" />
  <TypeSignature Language="F#" Value="type ViewService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.Activities.Presentation.Services.ViewService" />-Klasse ordnet zugrunde liegenden Modellelementen grafische Elemente zu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Activities.Presentation.Services.ModelService>-Klasse und die <xref:System.Activities.Presentation.Services.ViewService>-Klasse sind erforderlich, damit der Designer funktioniert. Für die <xref:System.Activities.Presentation.View.DesignerView>-Klasse, die für das Verarbeiten von Benutzereingaben und deren Weiterleitung an Befehle zuständig ist, müssen beide Dienste die Benutzereingaben wieder dem Modell zuordnen.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Erstellt einen neuen <see cref="T:System.Activities.Presentation.Services.ViewService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem GetModel (System.Windows.DependencyObject view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem GetModel(class System.Windows.DependencyObject view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.GetModel(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetModel (view As DependencyObject) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ GetModel(System::Windows::DependencyObject ^ view);" />
      <MemberSignature Language="F#" Value="abstract member GetModel : System.Windows.DependencyObject -&gt; System.Activities.Presentation.Model.ModelItem" Usage="viewService.GetModel view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="view">Das Ansichtsobjekt, für das Sie das Modell finden möchten.</param>
        <summary>Gibt das Modell zurück, das der Ansicht entspricht, oder <see langword="null" />, wenn es kein Modell gibt, das der Ansicht entspricht.</summary>
        <returns>Das entsprechende Modell oder <see langword="null" />, wenn es kein Modell für das angegebene Ansichtsobjekt gibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="view" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public abstract System.Windows.DependencyObject GetView (System.Activities.Presentation.Model.ModelItem model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject GetView(class System.Activities.Presentation.Model.ModelItem model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.GetView(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetView (model As ModelItem) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::DependencyObject ^ GetView(System::Activities::Presentation::Model::ModelItem ^ model);" />
      <MemberSignature Language="F#" Value="abstract member GetView : System.Activities.Presentation.Model.ModelItem -&gt; System.Windows.DependencyObject" Usage="viewService.GetView model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="model">Das Modell, für das das Ansichtsobjekt zurückgegeben werden soll.</param>
        <summary>Gibt die Ansicht zurück, die dem angegebenen Modell entspricht, oder <see langword="null" />, wenn es keine Ansicht für das Modell gibt.</summary>
        <returns>Die Ansicht für dieses Modell oder <see langword="null" />, wenn es keine Ansicht gibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="model" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="model" /> stellt kein gültiges Modell für diesen Dienst dar.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
