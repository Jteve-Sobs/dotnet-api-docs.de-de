<Namespace Name="System.Transactions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27e12b25390a72364c77196a34eae502971d0d2b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70501041" /></Metadata><Docs>
    <summary>Der <see cref="N:System.Transactions" />-Namespace enthält Klassen, mit denen eigene Transaktionsanwendungen und Ressourcen-Manager geschrieben werden können. Insbesondere können Sie eine Transaktion erstellen und an einer Transaktion (lokal oder verteilt) mit einem oder mehreren Teilnehmern teilnehmen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 Die `System.Transactions` -Infrastruktur macht die transaktionale Programmierung auf der gesamten Plattform einfach und effizient, indem Transaktionen unterstützt werden, die in SQL Server, ADO.net, MSMQ und Microsoft Distributed Transaction Coordinator (MSDTC) initiiert werden. Sie bietet sowohl ein explizites Programmiermodell, <xref:System.Transactions.Transaction> das auf der-Klasse basiert, als auch ein implizites Programmiermodell, das die <xref:System.Transactions.TransactionScope> -Klasse verwendet, in der Transaktionen automatisch von der-Infrastruktur verwaltet werden. Es wird dringend empfohlen, das einfachere implizite Modell für die Entwicklung zu verwenden. Informationen zu den ersten Schritten finden Sie im Thema [Implementieren einer impliziten Transaktion mit Transaktions Bereich](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)) . Weitere Informationen zum Schreiben von transaktionalen Anwendungen finden Sie unter [Schreiben einer Transaktions](~/docs/framework/data/transactions/writing-a-transactional-application.md)Anwendung.
  
 `System.Transactions`bietet auch Typen, mit denen Sie einen Ressourcen-Manager implementieren können. Der für die `System.Transactions` Infrastruktur einheitliche Transaktions-Manager ermöglicht es, dass flüchtige Ressourcen oder eine einzelne dauerhafte Ressourcen Eintragung einen effizienten Commit oder Rollback ausführen. Weitere Informationen zum Implementieren eines Ressourcen-Managers finden Sie unter [Implementing A Resource Manager](https://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e).  
  
 Der Transaktions-Manager eskaliert außerdem transparent lokale Transaktionen zu verteilten Transaktionen, indem er einen Datenträger basierten Transaktions-Manager wie den DTC koordiniert, wenn sich ein zusätzlicher dauerhafter Ressourcen-Manager bei einer Transaktion einträgt. Es gibt zwei grundlegende Methoden, mit der `System.Transactions`-Infrastruktur eine verbesserte Leistung zu erreichen.  
  
-   Dynamische Eskalation. Dies bedeutet, dass `System.Transactions` die Infrastruktur nur den MSDTC einbezieht, wenn Sie tatsächlich für eine Transaktion erforderlich ist. Dieser Bereich wird ausführlich im Thema zur [Eskalation der Transaktions Verwaltung](https://msdn.microsoft.com/library/5b87ae58-8ccf-4b9b-9715-41e4aade89b7) behandelt.  
  
-   Erweiterbare Eintragungen: Ermöglichen es einer Ressource (z.B. einer Datenbank), Eigentümer der Transaktion zu werden, wenn sie die einzige Entität ist, die an der Transaktion teilnimmt. Bei Bedarf kann die `System.Transactions` Infrastruktur die Verwaltung der Transaktion weiterhin auf MSDTC ausweiten. Auch dies reduziert die Zahl der Fälle, in denen MSDTC verwendet wird. Dieser Bereich wird ausführlich im Thema [Optimierung mit Einphasencommit und heraufstufbarer Einphasenbenachrichtigung](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms229980(v=vs.85)) behandelt.  
  
 `System.Transactions`definiert drei Vertrauens Ebenen, die den Zugriff auf die Typen von Ressourcen einschränken, die Sie verfügbar macht. Insbesondere kann die *System. Transactions* -Assembly von teilweise vertrauenswürdigem Code aufgerufen werden, da Sie mit dem `AllowPartiallyTrustedCallers` -Attribut (APTCA) markiert ist. Dieses Attribut entfernt im Wesentlichen die implizite <xref:System.Security.Permissions.SecurityAction.LinkDemand> für den `FullTrust`-Berechtigungssatz, die andernfalls für jede öffentlich zugängliche Methode jeden Typs eingerichtet ist. Für einige Typen und Member sind allerdings weiterhin stärkere Berechtigungen erforderlich.  
  
 Im folgenden finden Sie eine Liste von Typen und Membern, die von teilweise vertrauenswürdigem Code nicht aufgerufen werden können, da Sie mit dem folgenden deklarativen Sicherheits Attribut ergänzt werden:  
  
 `PermissionSetAttribute(SecurityAction.LinkDemand, Name := "FullTrust")`  
  
 System. Transactions. Transaction. Eintragung Durable  
  
 System. Transactions. Transaction. endlistpromotablesinglephase  
  
 System. Transactions. transaktioninterop  
  
 System. Transactions. transaktionmanager. distributedtransaktionstarted  
  
 System. Transactions. transaktionmanager. hostcurrenttransaktioncallback  
  
 System. Transactions. transaktionmanager. Reenlist  
  
 System. Transactions. transaktionmanager. wiederherstellungcomplete  
  
 System. Transactions. transaktionscope. transaktionscope (System. Transactions. Transaction, System. TimeSpan, System. Transactions. EnterpriseServicesInteropOption)  
  
 M:System.Transactions.TransactionScope.TransactionScope (System. Transactions. transaktionscopeoption, System. Transactions. transaktionoptions, System. Transactions. EnterpriseServicesInteropOption)  
  
 Weitere Informationen zu den verschiedenen Vertrauensebenen finden Sie unter [Security Trust Levels in Accessing Resources](https://msdn.microsoft.com/library/8e45acbc-0d81-4f64-9da7-8f766aebff51).  
  
 Grundlegende Entwicklungstechnologien \datenaccess\transaktionsverarbeitung \  
  
 Weitere Informationen zur Verwendung des `System.Transactions` -Namespace finden Sie in der konzeptionellen Dokumentation [Transaktionsverarbeitung](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/w97s6fw4(v=vs.85)), die sich im Abschnitt "Core Development Technologies\Data Access\Transaction Processing\\" unter die-Dokumentation. In den folgenden Themen finden Sie weitere Informationen.  
  
 [Von System. Transactions bereitgestellte Funktionen](https://msdn.microsoft.com/library/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)  
  
 [Implementieren einer Ressourcen-Manager](https://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>