<Type Name="Base64" FullName="System.Buffers.Text.Base64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c8f39f6a1962f022a8147d16a8e3aedc7e89b79" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63913765" /></Metadata><TypeSignature Language="C#" Value="public static class Base64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Base64" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64" />
  <TypeSignature Language="C++ CLI" Value="public ref class Base64 abstract sealed" />
  <TypeSignature Language="F#" Value="type Base64 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1f9c0-101">Konvertiert zwischen binären Daten und UTF-8-codiertem Text, der als Base64 dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-101">Converts between binary data and UTF-8 encoded text that is represented in base 64.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; utf8, Span&lt;byte&gt; bytes, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (utf8 As ReadOnlySpan(Of Byte), bytes As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8 (utf8, bytes, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8"><span data-ttu-id="1f9c0-102">Der Eingabebereich, der UTF-8-codierten Text in Base64-Darstellung enthält, der decodiert werden muss.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-102">The input span that contains UTF-8 encoded text in base 64 that needs to be decoded.</span></span></param>
        <param name="bytes"><span data-ttu-id="1f9c0-103">Der Ausgabebereich, der das Ergebnis des Vorgangs enthält, d.h. die decodierten binären Daten.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-103">The output span that contains the result of the operation, that is, the decoded binary data.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="1f9c0-104">Die Anzahl der während des Vorgangs verwendeten eingegebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-104">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="1f9c0-105">Dies kann verwendet werden, um die Eingabe ggf. für nachfolgende Aufrufe zu unterteilen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-105">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="1f9c0-106">Die Anzahl der in den Ausgabebereich geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-106">The number of bytes written into the output span.</span></span> <span data-ttu-id="1f9c0-107">Dies kann verwendet werden, um die Ausgabe ggf. für nachfolgende Aufrufe zu unterteilen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-107">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="1f9c0-108"><see langword="true" /> (Standard), wenn der Eingabebereich die gesamten zu decodierenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-108"><see langword="true" /> (default) if the input span contains the entire data to decode.</span></span> <span data-ttu-id="1f9c0-109"><see langword="false" />, wenn der Eingabebereich Teildaten enthält, auf die weitere Daten folgen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-109"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="1f9c0-110">Decodiert den Bereich des UTF-8-codierten Texts in Base64-Darstellung in binäre Daten.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-110">Decodes the span of UTF-8 encoded text represented as base 64 into binary data.</span></span> <span data-ttu-id="1f9c0-111">Wenn die Eingabe kein Vielfaches von 4 ist, wird so viel wie möglich bis zum nächsten Vielfachen von 4 decodiert.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-111">If the input is not a multiple of 4, it will decode as much as it can, to the closest multiple of 4.</span></span></summary>
        <returns><span data-ttu-id="1f9c0-112">Einer der Enumerationswerte, der den Status der Decodierung anzeigt.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-112">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="1f9c0-113">Der Rückgabewert kann folgendermaßen aussehen:</span><span class="sxs-lookup"><span data-stu-id="1f9c0-113">The return value can be as follows:</span></span>

- <span data-ttu-id="1f9c0-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Verarbeitung der gesamten Eingabe Spanne war erfolgreich.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="1f9c0-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Es ist nicht genügend Speicherplatz in der Ausgabe Spanne, die decodierte Eingabe zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There is not enough space in the output span to write the decoded input.</span></span>
- <span data-ttu-id="1f9c0-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` ist `false` und die Eingabe ist kein Vielfaches von 4.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false` and the input is not a multiple of 4.</span></span> <span data-ttu-id="1f9c0-117">Andernfalls gilt der teileingabe <xref:System.Buffers.OperationStatus.InvalidData>.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-117">Otherwise, the partial input is considered <xref:System.Buffers.OperationStatus.InvalidData>.</span></span>
- <span data-ttu-id="1f9c0-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: Die Eingabe Bytes außerhalb des erwarteten base-64-Bereichs enthält, ist ungültig oder mehr als zwei Füllzeichen ein Zeichen oder ist unvollständig (d. h. kein Vielfaches von 4) und `isFinalBlock` ist `true`.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4) and `isFinalBlock` is `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8InPlace (Span&lt;byte&gt; buffer, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8InPlace(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8InPlace (buffer As Span(Of Byte), ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8InPlace(Span&lt;System::Byte&gt; buffer, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8InPlace : Span&lt;byte&gt; *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8InPlace (buffer, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1f9c0-119">Der Eingabebereich, der Base64-Text enthält, der decodiert werden muss.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-119">The input span that contains the base-64 text data that needs to be decoded.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="1f9c0-120">Die Anzahl der in den Puffer geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-120">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="1f9c0-121">Decodiert den Bereich des UTF-8-codierten Texts in Base64-Darstellung (direkt) in binäre Daten.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-121">Decodes the span of UTF-8 encoded text in base 64 (in-place) into binary data.</span></span> <span data-ttu-id="1f9c0-122">Die Ausgabe des decodierten binären Texts ist kleiner als die Textdaten, die in der Eingabe enthalten sind (der Vorgang verkleinert die Daten).</span><span class="sxs-lookup"><span data-stu-id="1f9c0-122">The decoded binary output is smaller than the text data contained in the input (the operation deflates the data).</span></span> <span data-ttu-id="1f9c0-123">Wenn die Eingabe kein Vielfaches von 4 ist, decodiert die Methode keine Daten.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-123">If the input is not a multiple of 4, the method will not decode any data.</span></span></summary>
        <returns><span data-ttu-id="1f9c0-124">Einer der Enumerationswerte, der den Status der Decodierung anzeigt.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-124">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="1f9c0-125">Der Rückgabewert kann folgendermaßen aussehen:</span><span class="sxs-lookup"><span data-stu-id="1f9c0-125">The return value can be as follows:</span></span>

- <span data-ttu-id="1f9c0-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Verarbeitung der gesamten Eingabe Spanne war erfolgreich.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="1f9c0-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: Die Eingabe Bytes außerhalb des erwarteten base-64-Bereichs enthält, ist ungültig oder mehr als zwei Füllzeichen ein Zeichen oder ist unvollständig (d. h. kein Vielfaches von 4).</span><span class="sxs-lookup"><span data-stu-id="1f9c0-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4).</span></span>

<span data-ttu-id="1f9c0-128">Diese Methode kann nicht zurückgeben, die <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> und <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-128">This method cannot return the <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> values.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8 (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;byte&gt; utf8, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;unsigned int8&gt; utf8, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8 (bytes As ReadOnlySpan(Of Byte), utf8 As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8 (bytes, utf8, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="1f9c0-129">Der Eingabebereich, der Binärdaten enthält, die codiert werden müssen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-129">The input span that contains binary data that needs to be encoded.</span></span></param>
        <param name="utf8"><span data-ttu-id="1f9c0-130">Der Ausgabebereich, der das Ergebnis des Vorgangs enthält, d.h. den UTF-8-codierten Text in Base64-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-130">The output span that contains the result of the operation, that is, the UTF-8 encoded text in base 64.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="1f9c0-131">Die Anzahl der während des Vorgangs verwendeten eingegebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-131">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="1f9c0-132">Dies kann verwendet werden, um die Eingabe ggf. für nachfolgende Aufrufe zu unterteilen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-132">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="1f9c0-133">Die Anzahl der in den Ausgabebereich geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-133">The number of bytes written into the output span.</span></span> <span data-ttu-id="1f9c0-134">Dies kann verwendet werden, um die Ausgabe ggf. für nachfolgende Aufrufe zu unterteilen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-134">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="1f9c0-135"><see langword="true" /> (Standard), wenn der Eingabebereich die gesamten zu codierenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-135"><see langword="true" /> (the default) if the input span contains the entire data to encode.</span></span> <span data-ttu-id="1f9c0-136"><see langword="false" />, wenn der Eingabebereich Teildaten enthält, auf die weitere Daten folgen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-136"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="1f9c0-137">Codiert den Bereich der binären Daten in UTF-8-codierten Text in Base64-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-137">Encodes the span of binary data into UTF-8 encoded text represented as base 64.</span></span></summary>
        <returns><span data-ttu-id="1f9c0-138">Einer der Enumerationswerte, der den Status der Codierung anzeigt.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-138">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="1f9c0-139">Der Rückgabewert kann folgendermaßen aussehen:</span><span class="sxs-lookup"><span data-stu-id="1f9c0-139">The return value can be as follows:</span></span>

- <span data-ttu-id="1f9c0-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Verarbeitung der gesamten Eingabe Spanne war erfolgreich.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="1f9c0-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Nicht genügend Speicherplatz in der Ausgabe Spanne an die codierte Eingabe anpassen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the output span to fit the encoded input.</span></span>
- <span data-ttu-id="1f9c0-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span></span> <span data-ttu-id="1f9c0-143">Andernfalls gilt: Wenn `isFinalBlock` ist `true`, die Ausgabe wird aufgefüllt, wenn die Eingabe kein Vielfaches von 3 ist.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-143">Otherwise, if `isFinalBlock` is `true`, the output is padded if the input is not a multiple of 3.</span></span>

<span data-ttu-id="1f9c0-144">Diese Methode kann nicht zurückgeben, <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> , da dies nicht möglich, dass die Base64-Codierung ist.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-144">This method cannot return <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> since that is not possible for base-64 encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8InPlace (Span&lt;byte&gt; buffer, int dataLength, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, int32 dataLength, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8InPlace (buffer As Span(Of Byte), dataLength As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus EncodeToUtf8InPlace(Span&lt;System::Byte&gt; buffer, int dataLength, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8InPlace : Span&lt;byte&gt; * int *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8InPlace (buffer, dataLength, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="dataLength" Type="System.Int32" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1f9c0-145">Der Eingabebereich, der Binärdaten enthält, die codiert werden müssen.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-145">The input span that contains binary data that needs to be encoded.</span></span> <span data-ttu-id="1f9c0-146">Da die Methode eine direkte Konvertierung ausführt, muss sie groß genug zum Speichern des Ergebnisses des Vorgangs sein.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-146">Because the method performs an in-place conversion, it needs to be large enough to store the result of the operation.</span></span></param>
        <param name="dataLength"><span data-ttu-id="1f9c0-147">Die Anzahl der Bytes aus Binärdaten, die im Puffer enthalten sind, der codiert werden muss.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-147">The number of bytes of binary data contained within the buffer that needs to be encoded.</span></span> <span data-ttu-id="1f9c0-148">Dieser Wert muss kleiner als die Pufferlänge sein.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-148">This value must be smaller than the buffer length.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="1f9c0-149">Die Anzahl der in den Puffer geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-149">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="1f9c0-150">Codiert den Bereich der binären Daten (direkt) in UTF-8-codierten Text in Base64-Darstellung.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-150">Encodes the span of binary data (in-place) into UTF-8 encoded text represented as base 64.</span></span> <span data-ttu-id="1f9c0-151">Die Ausgabe des codierten Texts ist größer als die binären Daten, die in der Eingabe enthalten sind (der Vorgang vergrößert die Daten).</span><span class="sxs-lookup"><span data-stu-id="1f9c0-151">The encoded text output is larger than the binary data contained in the input (the operation inflates the data).</span></span></summary>
        <returns><span data-ttu-id="1f9c0-152">Einer der Enumerationswerte, der den Status der Codierung anzeigt.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-152">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="1f9c0-153">Der Rückgabewert kann folgendermaßen aussehen:</span><span class="sxs-lookup"><span data-stu-id="1f9c0-153">The return value can be as follows:</span></span>

- <span data-ttu-id="1f9c0-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Verarbeitung des gesamten Puffers war erfolgreich.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire buffer succeeded.</span></span>
- <span data-ttu-id="1f9c0-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: Nicht genügend Speicherplatz im Puffer nach `dataLength` passen Sie das Ergebnis der Codierung der Eingabesets.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the buffer beyond `dataLength` to fit the result of encoding the input.</span></span>

<span data-ttu-id="1f9c0-156">Diese Methode kann nicht zurückgeben, <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> und <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-156">This method cannot return <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDecodedFromUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxDecodedFromUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDecodedFromUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDecodedFromUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxDecodedFromUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxDecodedFromUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="1f9c0-157">Gibt die maximale Länge (in Bytes) des Ergebnisses zurück, wenn Sie Base64-codierten Text innerhalb eines Bytebereichs der Größe <paramref name="length" /> decodieren würden.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-157">Returns the maximum length (in bytes) of the result if you were to decode base-64 encoded text within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f9c0-158"><paramref name="length" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-158"><paramref name="length" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxEncodedToUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxEncodedToUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxEncodedToUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxEncodedToUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxEncodedToUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxEncodedToUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="1f9c0-159">Gibt die maximale Länge (in Bytes) des Ergebnisses zurück, wenn Sie binäre Daten innerhalb eines Bytebereichs der Größe <paramref name="length" /> codieren würden.</span><span class="sxs-lookup"><span data-stu-id="1f9c0-159">Returns the maximum length (in bytes) of the result if you were to encode binary data within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f9c0-160"><paramref name="length" /> ist kleiner als 0 oder größer als 1.610.612.733 (da Codieren die Daten mit dem Faktor 4/3 vergrößert).</span><span class="sxs-lookup"><span data-stu-id="1f9c0-160"><paramref name="length" /> is less than 0 or larger than 1610612733 (since encode inflates the data by 4/3).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>