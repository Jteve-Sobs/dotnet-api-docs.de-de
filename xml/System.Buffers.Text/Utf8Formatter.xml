<Type Name="Utf8Formatter" FullName="System.Buffers.Text.Utf8Formatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b6a81ddba39e4d33fbb0e1a61311e35a2d109d68" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70338861" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Formatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Formatter" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Formatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Formatter abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Formatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d8a41-101">Bietet statische Methoden zum Formatieren allgemeiner Datentypen als UTF8-Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="d8a41-101">Provides static mthods to format common data types as Utf8 strings.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (bool value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(bool value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Boolean,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Boolean, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : bool * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-102">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-102">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-103">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-103">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-104">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-104">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-105">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-105">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-106">Formatiert einen <see cref="T:System.Boolean" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-106">Formats a <see cref="T:System.Boolean" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-107"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-107"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d8a41-108">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-108">Formats supported:</span></span>

|<span data-ttu-id="d8a41-109">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-109">Format string</span></span>|<span data-ttu-id="d8a41-110">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-110">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-111">G (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-111">G (default)</span></span>|<span data-ttu-id="d8a41-112">True/false</span><span class="sxs-lookup"><span data-stu-id="d8a41-112">True/False</span></span>|
|<span data-ttu-id="d8a41-113">l</span><span class="sxs-lookup"><span data-stu-id="d8a41-113">l</span></span>|<span data-ttu-id="d8a41-114">true/false</span><span class="sxs-lookup"><span data-stu-id="d8a41-114">true/false</span></span>|

<span data-ttu-id="d8a41-115">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-115">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (byte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Byte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Byte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : byte * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-116">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-116">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-117">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-117">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-118">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-118">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-119">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-119">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-120">Formatiert einen <see cref="T:System.Byte" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-120">Formats a <see cref="T:System.Byte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-121"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-121"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d8a41-122">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-122">Formats supported:</span></span>

|<span data-ttu-id="d8a41-123">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-123">Format string</span></span>|<span data-ttu-id="d8a41-124">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-124">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-125">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-125">G/g (default)</span></span>| |
|<span data-ttu-id="d8a41-126">D/d</span><span class="sxs-lookup"><span data-stu-id="d8a41-126">D/d</span></span>|<span data-ttu-id="d8a41-127">122</span><span class="sxs-lookup"><span data-stu-id="d8a41-127">122</span></span>|
|<span data-ttu-id="d8a41-128">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d8a41-128">N/n</span></span>|<span data-ttu-id="d8a41-129">122</span><span class="sxs-lookup"><span data-stu-id="d8a41-129">122</span></span>|       
|<span data-ttu-id="d8a41-130">X/x</span><span class="sxs-lookup"><span data-stu-id="d8a41-130">X/x</span></span>|<span data-ttu-id="d8a41-131">7a</span><span class="sxs-lookup"><span data-stu-id="d8a41-131">7a</span></span>|

<span data-ttu-id="d8a41-132">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-132">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTime value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTime value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTime,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTime, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTime * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-133">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-133">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-134">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-134">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-135">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-135">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-136">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-136">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-137">Formatiert einen <see cref="T:System.DateTime" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-137">Formats a <see cref="T:System.DateTime" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-138"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-138"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-139">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-139">Formats supported:</span></span>

|<span data-ttu-id="d8a41-140">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-140">Format string</span></span>|<span data-ttu-id="d8a41-141">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-141">Example result string</span></span>|<span data-ttu-id="d8a41-142">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d8a41-142">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d8a41-143">G (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-143">G  (default)</span></span>|<span data-ttu-id="d8a41-144">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="d8a41-144">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="d8a41-145">R</span><span class="sxs-lookup"><span data-stu-id="d8a41-145">R</span></span>|<span data-ttu-id="d8a41-146">Di, 03 Jan 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d8a41-146">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="d8a41-147">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="d8a41-147">(RFC 1123)</span></span>|
|<span data-ttu-id="d8a41-148">l</span><span class="sxs-lookup"><span data-stu-id="d8a41-148">l</span></span>|<span data-ttu-id="d8a41-149">Di, 03 Jan 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d8a41-149">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="d8a41-150">(In Kleinbuchstaben RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="d8a41-150">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="d8a41-151">O</span><span class="sxs-lookup"><span data-stu-id="d8a41-151">O</span></span>|<span data-ttu-id="d8a41-152">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="d8a41-152">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="d8a41-153">(Roundtrippable)</span><span class="sxs-lookup"><span data-stu-id="d8a41-153">(Round-trippable)</span></span>|

<span data-ttu-id="d8a41-154">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-154">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTimeOffset value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTimeOffset value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTimeOffset,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTimeOffset, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTimeOffset * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-155">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-155">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-156">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-156">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-157">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-157">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-158">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-158">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-159">Formatiert einen <see cref="T:System.DateTimeOffset" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-159">Formats a <see cref="T:System.DateTimeOffset" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-160"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-160"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (decimal value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Decimal value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Decimal,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Decimal, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : decimal * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-161">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-161">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-162">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-162">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-163">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-163">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-164">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-164">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-165">Formatiert einen <see cref="T:System.Decimal" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-165">Formats a <see cref="T:System.Decimal" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-166"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-166"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-167">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-167">Formats supported:</span></span>

|<span data-ttu-id="d8a41-168">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-168">Format string</span></span>|<span data-ttu-id="d8a41-169">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-169">Example result string</span></span>|<span data-ttu-id="d8a41-170">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d8a41-170">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d8a41-171">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-171">G/g  (default)</span></span>| |  
|<span data-ttu-id="d8a41-172">F/f</span><span class="sxs-lookup"><span data-stu-id="d8a41-172">F/f</span></span>|<span data-ttu-id="d8a41-173">12,45</span><span class="sxs-lookup"><span data-stu-id="d8a41-173">12.45</span></span>|<span data-ttu-id="d8a41-174">Fester Punkt</span><span class="sxs-lookup"><span data-stu-id="d8a41-174">Fixed point</span></span>|
|<span data-ttu-id="d8a41-175">E/a</span><span class="sxs-lookup"><span data-stu-id="d8a41-175">E/e</span></span>|<span data-ttu-id="d8a41-176">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="d8a41-176">1.245000e1</span></span>|<span data-ttu-id="d8a41-177">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="d8a41-177">Exponential</span></span>|

<span data-ttu-id="d8a41-178">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-178">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (double value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Double,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Double, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : double * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-179">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-179">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-180">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-180">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-181">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-181">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-182">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-182">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-183">Formatiert einen <see cref="T:System.Double" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-183">Formats a <see cref="T:System.Double" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-184"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-184"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-185">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-185">Formats supported:</span></span>

|<span data-ttu-id="d8a41-186">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-186">Format string</span></span>|<span data-ttu-id="d8a41-187">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-187">Example result string</span></span>|<span data-ttu-id="d8a41-188">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d8a41-188">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d8a41-189">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-189">G/g  (default)</span></span>| |  
|<span data-ttu-id="d8a41-190">F/f</span><span class="sxs-lookup"><span data-stu-id="d8a41-190">F/f</span></span>|<span data-ttu-id="d8a41-191">12,45</span><span class="sxs-lookup"><span data-stu-id="d8a41-191">12.45</span></span>|<span data-ttu-id="d8a41-192">Fester Punkt</span><span class="sxs-lookup"><span data-stu-id="d8a41-192">Fixed point</span></span>|
|<span data-ttu-id="d8a41-193">E/a</span><span class="sxs-lookup"><span data-stu-id="d8a41-193">E/e</span></span>|<span data-ttu-id="d8a41-194">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="d8a41-194">1.245000e1</span></span>|<span data-ttu-id="d8a41-195">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="d8a41-195">Exponential</span></span>|

<span data-ttu-id="d8a41-196">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-196">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (Guid value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Guid value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Guid,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Guid, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : Guid * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-197">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-197">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-198">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-198">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-199">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-199">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-200">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-200">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-201">Formatiert einen <see cref="T:System.Guid" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-201">Formats a <see cref="T:System.Guid" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-202"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-202"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-203">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-203">Formats supported:</span></span>

|<span data-ttu-id="d8a41-204">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-204">Format string</span></span>|<span data-ttu-id="d8a41-205">Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-205">Result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-206">D (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-206">D (default)</span></span>|<span data-ttu-id="d8a41-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="d8a41-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="d8a41-208">B</span><span class="sxs-lookup"><span data-stu-id="d8a41-208">B</span></span>|<span data-ttu-id="d8a41-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="d8a41-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="d8a41-210">P</span><span class="sxs-lookup"><span data-stu-id="d8a41-210">P</span></span>|<span data-ttu-id="d8a41-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="d8a41-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="d8a41-212">N</span><span class="sxs-lookup"><span data-stu-id="d8a41-212">N</span></span>|<span data-ttu-id="d8a41-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="d8a41-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

<span data-ttu-id="d8a41-214">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-214">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (short value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Short, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int16 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-215">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-215">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-216">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-216">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-217">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-217">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-218">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-218">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-219">Formatiert einen <see cref="T:System.Int16" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-219">Formats an <see cref="T:System.Int16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-220"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-220"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-221">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-221">Formats supported:</span></span>

|<span data-ttu-id="d8a41-222">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-222">Format string</span></span>|<span data-ttu-id="d8a41-223">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-223">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-224">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-224">G/g (default)</span></span>| |
|<span data-ttu-id="d8a41-225">D/d</span><span class="sxs-lookup"><span data-stu-id="d8a41-225">D/d</span></span>|<span data-ttu-id="d8a41-226">32767</span><span class="sxs-lookup"><span data-stu-id="d8a41-226">32767</span></span>|
|<span data-ttu-id="d8a41-227">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d8a41-227">N/n</span></span>|<span data-ttu-id="d8a41-228">32,767</span><span class="sxs-lookup"><span data-stu-id="d8a41-228">32,767</span></span>|       
|<span data-ttu-id="d8a41-229">X/x</span><span class="sxs-lookup"><span data-stu-id="d8a41-229">X/x</span></span>|<span data-ttu-id="d8a41-230">7fff</span><span class="sxs-lookup"><span data-stu-id="d8a41-230">7fff</span></span>|

<span data-ttu-id="d8a41-231">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-231">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (int value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Integer, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-232">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-232">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-233">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-233">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-234">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-234">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-235">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-235">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-236">Formatiert einen <see cref="T:System.Int32" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-236">Formats an <see cref="T:System.Int32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-237"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-237"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-238">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-238">Formats supported:</span></span>

|<span data-ttu-id="d8a41-239">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-239">Format string</span></span>|<span data-ttu-id="d8a41-240">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-240">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-241">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-241">G/g (default)</span></span>| |
|<span data-ttu-id="d8a41-242">D/d</span><span class="sxs-lookup"><span data-stu-id="d8a41-242">D/d</span></span>|<span data-ttu-id="d8a41-243">32767</span><span class="sxs-lookup"><span data-stu-id="d8a41-243">32767</span></span>|
|<span data-ttu-id="d8a41-244">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d8a41-244">N/n</span></span>|<span data-ttu-id="d8a41-245">32,767</span><span class="sxs-lookup"><span data-stu-id="d8a41-245">32,767</span></span>|       
|<span data-ttu-id="d8a41-246">X/x</span><span class="sxs-lookup"><span data-stu-id="d8a41-246">X/x</span></span>|<span data-ttu-id="d8a41-247">7fff</span><span class="sxs-lookup"><span data-stu-id="d8a41-247">7fff</span></span>|
              
<span data-ttu-id="d8a41-248">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-248">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (long value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Long, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int64 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-249">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-249">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-250">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-250">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-251">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-251">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-252">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-252">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-253">Formatiert einen <see cref="T:System.Int64" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-253">Formats an <see cref="T:System.Int64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-254"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-254"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-255">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-255">Formats supported:</span></span>

|<span data-ttu-id="d8a41-256">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-256">Format string</span></span>|<span data-ttu-id="d8a41-257">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-257">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-258">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-258">G/g (default)</span></span>| |
|<span data-ttu-id="d8a41-259">D/d</span><span class="sxs-lookup"><span data-stu-id="d8a41-259">D/d</span></span>|<span data-ttu-id="d8a41-260">32767</span><span class="sxs-lookup"><span data-stu-id="d8a41-260">32767</span></span>|
|<span data-ttu-id="d8a41-261">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d8a41-261">N/n</span></span>|<span data-ttu-id="d8a41-262">32,767</span><span class="sxs-lookup"><span data-stu-id="d8a41-262">32,767</span></span>|       
|<span data-ttu-id="d8a41-263">X/x</span><span class="sxs-lookup"><span data-stu-id="d8a41-263">X/x</span></span>|<span data-ttu-id="d8a41-264">7fff</span><span class="sxs-lookup"><span data-stu-id="d8a41-264">7fff</span></span>|
              
<span data-ttu-id="d8a41-265">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-265">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (sbyte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.SByte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As SByte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : sbyte * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-266">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-266">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-267">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-267">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-268">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-268">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-269">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-269">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-270">Formatiert einen <see cref="T:System.SByte" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-270">Formats an <see cref="T:System.SByte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-271"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-271"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-272">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-272">Formats supported:</span></span>

|<span data-ttu-id="d8a41-273">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-273">Format string</span></span>|<span data-ttu-id="d8a41-274">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-274">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-275">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-275">G/g (default)</span></span>| |
|<span data-ttu-id="d8a41-276">D/d</span><span class="sxs-lookup"><span data-stu-id="d8a41-276">D/d</span></span>|<span data-ttu-id="d8a41-277">122</span><span class="sxs-lookup"><span data-stu-id="d8a41-277">122</span></span>|
|<span data-ttu-id="d8a41-278">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d8a41-278">N/n</span></span>|<span data-ttu-id="d8a41-279">122</span><span class="sxs-lookup"><span data-stu-id="d8a41-279">122</span></span>|       
|<span data-ttu-id="d8a41-280">X/x</span><span class="sxs-lookup"><span data-stu-id="d8a41-280">X/x</span></span>|<span data-ttu-id="d8a41-281">7a</span><span class="sxs-lookup"><span data-stu-id="d8a41-281">7a</span></span>|

<span data-ttu-id="d8a41-282">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-282">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (float value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Single,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Single, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : single * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-283">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-283">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-284">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-284">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-285">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-285">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-286">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-286">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-287">Formatiert einen <see cref="T:System.Single" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-287">Formats a <see cref="T:System.Single" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-288"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-288"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-289">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-289">Formats supported:</span></span>

|<span data-ttu-id="d8a41-290">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-290">Format string</span></span>|<span data-ttu-id="d8a41-291">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-291">Example result string</span></span>|<span data-ttu-id="d8a41-292">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d8a41-292">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d8a41-293">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-293">G/g  (default)</span></span>| |  
|<span data-ttu-id="d8a41-294">F/f</span><span class="sxs-lookup"><span data-stu-id="d8a41-294">F/f</span></span>|<span data-ttu-id="d8a41-295">12,45</span><span class="sxs-lookup"><span data-stu-id="d8a41-295">12.45</span></span>|<span data-ttu-id="d8a41-296">Fester Punkt</span><span class="sxs-lookup"><span data-stu-id="d8a41-296">Fixed point</span></span>|
|<span data-ttu-id="d8a41-297">E/a</span><span class="sxs-lookup"><span data-stu-id="d8a41-297">E/e</span></span>|<span data-ttu-id="d8a41-298">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="d8a41-298">1.245000e1</span></span>|<span data-ttu-id="d8a41-299">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="d8a41-299">Exponential</span></span>|

<span data-ttu-id="d8a41-300">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-300">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (TimeSpan value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.TimeSpan value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.TimeSpan,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As TimeSpan, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : TimeSpan * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-301">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-301">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-302">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-302">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-303">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-303">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-304">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-304">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-305">Formatiert einen <see cref="T:System.TimeSpan" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-305">Formats a <see cref="T:System.TimeSpan" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-306"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-306"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-307">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-307">Formats supported:</span></span>

|<span data-ttu-id="d8a41-308">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-308">Format string</span></span>|<span data-ttu-id="d8a41-309">Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-309">Result string</span></span>|<span data-ttu-id="d8a41-310">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d8a41-310">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d8a41-311">c/t/t (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-311">c/t/T (default)</span></span>|<span data-ttu-id="d8a41-312">[-] [d.] hh: mm: SS [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="d8a41-312">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="d8a41-313">(konstantes Format)</span><span class="sxs-lookup"><span data-stu-id="d8a41-313">(constant format)</span></span>|
|<span data-ttu-id="d8a41-314">G</span><span class="sxs-lookup"><span data-stu-id="d8a41-314">G</span></span>|<span data-ttu-id="d8a41-315">[-]d:hh:mm:ss.fffffff</span><span class="sxs-lookup"><span data-stu-id="d8a41-315">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="d8a41-316">(allgemein)</span><span class="sxs-lookup"><span data-stu-id="d8a41-316">(general long)</span></span>|
|<span data-ttu-id="d8a41-317">g</span><span class="sxs-lookup"><span data-stu-id="d8a41-317">g</span></span>|<span data-ttu-id="d8a41-318">[-] [d:] [h] h:mm: SS [. f [f [f [f [f [f [f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="d8a41-318">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="d8a41-319">(allgemein kurz)</span><span class="sxs-lookup"><span data-stu-id="d8a41-319">(general short)</span></span>|

<span data-ttu-id="d8a41-320">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-320">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ushort value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UShort, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint16 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-321">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-321">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-322">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-322">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-323">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-323">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-324">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-324">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-325">Formatiert einen <see cref="T:System.UInt16" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-325">Formats a <see cref="T:System.UInt16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-326"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-326"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-327">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-327">Formats supported:</span></span>

|<span data-ttu-id="d8a41-328">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-328">Format string</span></span>|<span data-ttu-id="d8a41-329">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-329">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-330">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-330">G/g (default)</span></span>| |
|<span data-ttu-id="d8a41-331">D/d</span><span class="sxs-lookup"><span data-stu-id="d8a41-331">D/d</span></span>|<span data-ttu-id="d8a41-332">32767</span><span class="sxs-lookup"><span data-stu-id="d8a41-332">32767</span></span>|
|<span data-ttu-id="d8a41-333">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d8a41-333">N/n</span></span>|<span data-ttu-id="d8a41-334">32,767</span><span class="sxs-lookup"><span data-stu-id="d8a41-334">32,767</span></span>|       
|<span data-ttu-id="d8a41-335">X/x</span><span class="sxs-lookup"><span data-stu-id="d8a41-335">X/x</span></span>|<span data-ttu-id="d8a41-336">7fff</span><span class="sxs-lookup"><span data-stu-id="d8a41-336">7fff</span></span>|

<span data-ttu-id="d8a41-337">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-337">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (uint value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UInteger, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint32 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-338">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-338">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-339">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-339">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-340">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-340">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-341">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-341">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-342">Formatiert einen <see cref="T:System.UInt32" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-342">Formats a <see cref="T:System.UInt32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-343"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-343"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d8a41-344">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-344">Formats supported:</span></span>

|<span data-ttu-id="d8a41-345">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-345">Format string</span></span>|<span data-ttu-id="d8a41-346">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-346">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-347">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-347">G/g (default)</span></span>| |
|<span data-ttu-id="d8a41-348">D/d</span><span class="sxs-lookup"><span data-stu-id="d8a41-348">D/d</span></span>|<span data-ttu-id="d8a41-349">32767</span><span class="sxs-lookup"><span data-stu-id="d8a41-349">32767</span></span>|
|<span data-ttu-id="d8a41-350">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d8a41-350">N/n</span></span>|<span data-ttu-id="d8a41-351">32,767</span><span class="sxs-lookup"><span data-stu-id="d8a41-351">32,767</span></span>|       
|<span data-ttu-id="d8a41-352">X/x</span><span class="sxs-lookup"><span data-stu-id="d8a41-352">X/x</span></span>|<span data-ttu-id="d8a41-353">7fff</span><span class="sxs-lookup"><span data-stu-id="d8a41-353">7fff</span></span>|

<span data-ttu-id="d8a41-354">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-354">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ulong value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As ULong, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint64 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8a41-355">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="d8a41-355">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="d8a41-356">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="d8a41-356">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d8a41-357">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="d8a41-357">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="d8a41-358">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="d8a41-358">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="d8a41-359">Formatiert einen <see cref="T:System.UInt64" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d8a41-359">Formats a <see cref="T:System.UInt64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="d8a41-360"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-360"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="d8a41-361">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d8a41-361">Formats supported:</span></span>

|<span data-ttu-id="d8a41-362">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-362">Format string</span></span>|<span data-ttu-id="d8a41-363">Beispiel Ergebnis Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d8a41-363">Example result string</span></span>|
|--|--|
|<span data-ttu-id="d8a41-364">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d8a41-364">G/g (default)</span></span>| |
|<span data-ttu-id="d8a41-365">D/d</span><span class="sxs-lookup"><span data-stu-id="d8a41-365">D/d</span></span>|<span data-ttu-id="d8a41-366">32767</span><span class="sxs-lookup"><span data-stu-id="d8a41-366">32767</span></span>|
|<span data-ttu-id="d8a41-367">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d8a41-367">N/n</span></span>|<span data-ttu-id="d8a41-368">32,767</span><span class="sxs-lookup"><span data-stu-id="d8a41-368">32,767</span></span>|       
|<span data-ttu-id="d8a41-369">X/x</span><span class="sxs-lookup"><span data-stu-id="d8a41-369">X/x</span></span>|<span data-ttu-id="d8a41-370">7fff</span><span class="sxs-lookup"><span data-stu-id="d8a41-370">7fff</span></span>|

<span data-ttu-id="d8a41-371">Wenn die Methode fehlschlägt, vergrößern Sie die Puffergröße iterativ, und wiederholen Sie den Vorgang, bis der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="d8a41-371">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
