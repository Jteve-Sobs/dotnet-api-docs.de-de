<Type Name="Utf8Formatter" FullName="System.Buffers.Text.Utf8Formatter">
  <TypeSignature Language="C#" Value="public static class Utf8Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Formatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Formatter" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Formatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Formatter abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Formatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ff52e-101">Bietet statische Methoden zum Formatieren allgemeiner Datentypen als UTF8-Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="ff52e-101">Provides static mthods to format common data types as Utf8 strings.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (bool value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(bool value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Boolean,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Boolean, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : bool * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-102">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-102">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-103">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-103">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-104">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-104">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-105">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-105">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-106">Formatiert einen <see cref="T:System.Boolean" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-106">Formats a <see cref="T:System.Boolean" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-107"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-107"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

<span data-ttu-id="ff52e-108">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-108">Formats supported:</span></span>

|<span data-ttu-id="ff52e-109">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-109">Format string</span></span>|<span data-ttu-id="ff52e-110">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-110">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-111">G (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-111">G (default)</span></span>|<span data-ttu-id="ff52e-112">Wahr/falsch</span><span class="sxs-lookup"><span data-stu-id="ff52e-112">True/False</span></span>|
|<span data-ttu-id="ff52e-113">l</span><span class="sxs-lookup"><span data-stu-id="ff52e-113">l</span></span>|<span data-ttu-id="ff52e-114">Wahr/falsch</span><span class="sxs-lookup"><span data-stu-id="ff52e-114">true/false</span></span>|

<span data-ttu-id="ff52e-115">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-115">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (byte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Byte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Byte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : byte * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-116">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-116">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-117">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-117">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-118">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-118">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-119">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-119">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-120">Formatiert einen <see cref="T:System.Byte" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-120">Formats a <see cref="T:System.Byte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-121"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-121"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

<span data-ttu-id="ff52e-122">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-122">Formats supported:</span></span>

|<span data-ttu-id="ff52e-123">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-123">Format string</span></span>|<span data-ttu-id="ff52e-124">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-124">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-125">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-125">G/g (default)</span></span>| |
|<span data-ttu-id="ff52e-126">D/d</span><span class="sxs-lookup"><span data-stu-id="ff52e-126">D/d</span></span>|<span data-ttu-id="ff52e-127">122</span><span class="sxs-lookup"><span data-stu-id="ff52e-127">122</span></span>|
|<span data-ttu-id="ff52e-128">N/n</span><span class="sxs-lookup"><span data-stu-id="ff52e-128">N/n</span></span>|<span data-ttu-id="ff52e-129">122</span><span class="sxs-lookup"><span data-stu-id="ff52e-129">122</span></span>|       
|<span data-ttu-id="ff52e-130">X/x</span><span class="sxs-lookup"><span data-stu-id="ff52e-130">X/x</span></span>|<span data-ttu-id="ff52e-131">7a</span><span class="sxs-lookup"><span data-stu-id="ff52e-131">7a</span></span>|

<span data-ttu-id="ff52e-132">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-132">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTime value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTime value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTime,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTime, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTime * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-133">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-133">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-134">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-134">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-135">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-135">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-136">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-136">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-137">Formatiert einen <see cref="T:System.DateTime" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-137">Formats a <see cref="T:System.DateTime" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-138"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-138"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-139">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-139">Formats supported:</span></span>

|<span data-ttu-id="ff52e-140">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-140">Format string</span></span>|<span data-ttu-id="ff52e-141">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-141">Example result string</span></span>|<span data-ttu-id="ff52e-142">Kommentare</span><span class="sxs-lookup"><span data-stu-id="ff52e-142">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="ff52e-143">G (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-143">G  (default)</span></span>|<span data-ttu-id="ff52e-144">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="ff52e-144">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="ff52e-145">R</span><span class="sxs-lookup"><span data-stu-id="ff52e-145">R</span></span>|<span data-ttu-id="ff52e-146">Tue, 03 Januar 2017 08:08:05 Uhr GMT</span><span class="sxs-lookup"><span data-stu-id="ff52e-146">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="ff52e-147">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="ff52e-147">(RFC 1123)</span></span>|
|<span data-ttu-id="ff52e-148">l</span><span class="sxs-lookup"><span data-stu-id="ff52e-148">l</span></span>|<span data-ttu-id="ff52e-149">tue, 03 Januar 2017 08:08:05 Uhr gmt</span><span class="sxs-lookup"><span data-stu-id="ff52e-149">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="ff52e-150">(Kleinbuchstaben RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="ff52e-150">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="ff52e-151">O</span><span class="sxs-lookup"><span data-stu-id="ff52e-151">O</span></span>|<span data-ttu-id="ff52e-152">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="ff52e-152">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="ff52e-153">(Zurückführbar)</span><span class="sxs-lookup"><span data-stu-id="ff52e-153">(Round-trippable)</span></span>|

<span data-ttu-id="ff52e-154">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-154">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTimeOffset value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTimeOffset value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTimeOffset,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTimeOffset, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTimeOffset * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-155">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-155">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-156">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-156">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-157">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-157">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-158">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-158">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-159">Formatiert einen <see cref="T:System.DateTimeOffset" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-159">Formats a <see cref="T:System.DateTimeOffset" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-160"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-160"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (decimal value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Decimal value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Decimal,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Decimal, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : decimal * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-161">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-161">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-162">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-162">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-163">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-163">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-164">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-164">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-165">Formatiert einen <see cref="T:System.Decimal" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-165">Formats a <see cref="T:System.Decimal" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-166"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-166"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-167">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-167">Formats supported:</span></span>

|<span data-ttu-id="ff52e-168">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-168">Format string</span></span>|<span data-ttu-id="ff52e-169">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-169">Example result string</span></span>|<span data-ttu-id="ff52e-170">Kommentare</span><span class="sxs-lookup"><span data-stu-id="ff52e-170">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="ff52e-171">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-171">G/g  (default)</span></span>| |  
|<span data-ttu-id="ff52e-172">F/f</span><span class="sxs-lookup"><span data-stu-id="ff52e-172">F/f</span></span>|<span data-ttu-id="ff52e-173">12.45</span><span class="sxs-lookup"><span data-stu-id="ff52e-173">12.45</span></span>|<span data-ttu-id="ff52e-174">Fixpunkt</span><span class="sxs-lookup"><span data-stu-id="ff52e-174">Fixed point</span></span>|
|<span data-ttu-id="ff52e-175">E/e</span><span class="sxs-lookup"><span data-stu-id="ff52e-175">E/e</span></span>|<span data-ttu-id="ff52e-176">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="ff52e-176">1.245000e1</span></span>|<span data-ttu-id="ff52e-177">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="ff52e-177">Exponential</span></span>|

<span data-ttu-id="ff52e-178">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-178">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (double value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Double,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Double, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : double * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-179">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-179">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-180">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-180">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-181">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-181">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-182">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-182">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-183">Formatiert einen <see cref="T:System.Double" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-183">Formats a <see cref="T:System.Double" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-184"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-184"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-185">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-185">Formats supported:</span></span>

|<span data-ttu-id="ff52e-186">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-186">Format string</span></span>|<span data-ttu-id="ff52e-187">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-187">Example result string</span></span>|<span data-ttu-id="ff52e-188">Kommentare</span><span class="sxs-lookup"><span data-stu-id="ff52e-188">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="ff52e-189">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-189">G/g  (default)</span></span>| |  
|<span data-ttu-id="ff52e-190">F/f</span><span class="sxs-lookup"><span data-stu-id="ff52e-190">F/f</span></span>|<span data-ttu-id="ff52e-191">12.45</span><span class="sxs-lookup"><span data-stu-id="ff52e-191">12.45</span></span>|<span data-ttu-id="ff52e-192">Fixpunkt</span><span class="sxs-lookup"><span data-stu-id="ff52e-192">Fixed point</span></span>|
|<span data-ttu-id="ff52e-193">E/e</span><span class="sxs-lookup"><span data-stu-id="ff52e-193">E/e</span></span>|<span data-ttu-id="ff52e-194">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="ff52e-194">1.245000e1</span></span>|<span data-ttu-id="ff52e-195">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="ff52e-195">Exponential</span></span>|

<span data-ttu-id="ff52e-196">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-196">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (Guid value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Guid value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Guid,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Guid, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : Guid * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-197">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-197">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-198">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-198">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-199">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-199">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-200">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-200">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-201">Formatiert einen <see cref="T:System.Guid" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-201">Formats a <see cref="T:System.Guid" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-202"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-202"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-203">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-203">Formats supported:</span></span>

|<span data-ttu-id="ff52e-204">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-204">Format string</span></span>|<span data-ttu-id="ff52e-205">Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-205">Result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-206">D (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-206">D (default)</span></span>|<span data-ttu-id="ff52e-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="ff52e-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="ff52e-208">B</span><span class="sxs-lookup"><span data-stu-id="ff52e-208">B</span></span>|<span data-ttu-id="ff52e-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="ff52e-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="ff52e-210">P</span><span class="sxs-lookup"><span data-stu-id="ff52e-210">P</span></span>|<span data-ttu-id="ff52e-211">(Nnnnnnnn-Nnnn-Nnnn-Nnnn-Nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="ff52e-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="ff52e-212">N</span><span class="sxs-lookup"><span data-stu-id="ff52e-212">N</span></span>|<span data-ttu-id="ff52e-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="ff52e-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

<span data-ttu-id="ff52e-214">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-214">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (short value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Short, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int16 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-215">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-215">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-216">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-216">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-217">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-217">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-218">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-218">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-219">Formatiert einen <see cref="T:System.Int16" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-219">Formats an <see cref="T:System.Int16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-220"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-220"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-221">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-221">Formats supported:</span></span>

|<span data-ttu-id="ff52e-222">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-222">Format string</span></span>|<span data-ttu-id="ff52e-223">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-223">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-224">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-224">G/g (default)</span></span>| |
|<span data-ttu-id="ff52e-225">D/d</span><span class="sxs-lookup"><span data-stu-id="ff52e-225">D/d</span></span>|<span data-ttu-id="ff52e-226">32767</span><span class="sxs-lookup"><span data-stu-id="ff52e-226">32767</span></span>|
|<span data-ttu-id="ff52e-227">N/n</span><span class="sxs-lookup"><span data-stu-id="ff52e-227">N/n</span></span>|<span data-ttu-id="ff52e-228">32,767</span><span class="sxs-lookup"><span data-stu-id="ff52e-228">32,767</span></span>|       
|<span data-ttu-id="ff52e-229">X/x</span><span class="sxs-lookup"><span data-stu-id="ff52e-229">X/x</span></span>|<span data-ttu-id="ff52e-230">7fff</span><span class="sxs-lookup"><span data-stu-id="ff52e-230">7fff</span></span>|

<span data-ttu-id="ff52e-231">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-231">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (int value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Integer, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-232">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-232">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-233">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-233">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-234">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-234">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-235">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-235">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-236">Formatiert einen <see cref="T:System.Int32" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-236">Formats an <see cref="T:System.Int32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-237"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-237"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-238">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-238">Formats supported:</span></span>

|<span data-ttu-id="ff52e-239">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-239">Format string</span></span>|<span data-ttu-id="ff52e-240">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-240">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-241">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-241">G/g (default)</span></span>| |
|<span data-ttu-id="ff52e-242">D/d</span><span class="sxs-lookup"><span data-stu-id="ff52e-242">D/d</span></span>|<span data-ttu-id="ff52e-243">32767</span><span class="sxs-lookup"><span data-stu-id="ff52e-243">32767</span></span>|
|<span data-ttu-id="ff52e-244">N/n</span><span class="sxs-lookup"><span data-stu-id="ff52e-244">N/n</span></span>|<span data-ttu-id="ff52e-245">32,767</span><span class="sxs-lookup"><span data-stu-id="ff52e-245">32,767</span></span>|       
|<span data-ttu-id="ff52e-246">X/x</span><span class="sxs-lookup"><span data-stu-id="ff52e-246">X/x</span></span>|<span data-ttu-id="ff52e-247">7fff</span><span class="sxs-lookup"><span data-stu-id="ff52e-247">7fff</span></span>|
              
<span data-ttu-id="ff52e-248">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-248">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (long value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Long, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int64 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-249">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-249">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-250">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-250">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-251">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-251">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-252">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-252">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-253">Formatiert einen <see cref="T:System.Int64" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-253">Formats an <see cref="T:System.Int64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-254"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-254"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-255">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-255">Formats supported:</span></span>

|<span data-ttu-id="ff52e-256">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-256">Format string</span></span>|<span data-ttu-id="ff52e-257">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-257">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-258">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-258">G/g (default)</span></span>| |
|<span data-ttu-id="ff52e-259">D/d</span><span class="sxs-lookup"><span data-stu-id="ff52e-259">D/d</span></span>|<span data-ttu-id="ff52e-260">32767</span><span class="sxs-lookup"><span data-stu-id="ff52e-260">32767</span></span>|
|<span data-ttu-id="ff52e-261">N/n</span><span class="sxs-lookup"><span data-stu-id="ff52e-261">N/n</span></span>|<span data-ttu-id="ff52e-262">32,767</span><span class="sxs-lookup"><span data-stu-id="ff52e-262">32,767</span></span>|       
|<span data-ttu-id="ff52e-263">X/x</span><span class="sxs-lookup"><span data-stu-id="ff52e-263">X/x</span></span>|<span data-ttu-id="ff52e-264">7fff</span><span class="sxs-lookup"><span data-stu-id="ff52e-264">7fff</span></span>|
              
<span data-ttu-id="ff52e-265">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-265">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (sbyte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.SByte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As SByte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : sbyte * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-266">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-266">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-267">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-267">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-268">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-268">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-269">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-269">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-270">Formatiert einen <see cref="T:System.SByte" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-270">Formats an <see cref="T:System.SByte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-271"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-271"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-272">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-272">Formats supported:</span></span>

|<span data-ttu-id="ff52e-273">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-273">Format string</span></span>|<span data-ttu-id="ff52e-274">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-274">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-275">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-275">G/g (default)</span></span>| |
|<span data-ttu-id="ff52e-276">D/d</span><span class="sxs-lookup"><span data-stu-id="ff52e-276">D/d</span></span>|<span data-ttu-id="ff52e-277">122</span><span class="sxs-lookup"><span data-stu-id="ff52e-277">122</span></span>|
|<span data-ttu-id="ff52e-278">N/n</span><span class="sxs-lookup"><span data-stu-id="ff52e-278">N/n</span></span>|<span data-ttu-id="ff52e-279">122</span><span class="sxs-lookup"><span data-stu-id="ff52e-279">122</span></span>|       
|<span data-ttu-id="ff52e-280">X/x</span><span class="sxs-lookup"><span data-stu-id="ff52e-280">X/x</span></span>|<span data-ttu-id="ff52e-281">7a</span><span class="sxs-lookup"><span data-stu-id="ff52e-281">7a</span></span>|

<span data-ttu-id="ff52e-282">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-282">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (float value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Single,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Single, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : single * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-283">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-283">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-284">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-284">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-285">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-285">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-286">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-286">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-287">Formatiert einen <see cref="T:System.Single" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-287">Formats a <see cref="T:System.Single" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-288"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-288"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-289">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-289">Formats supported:</span></span>

|<span data-ttu-id="ff52e-290">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-290">Format string</span></span>|<span data-ttu-id="ff52e-291">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-291">Example result string</span></span>|<span data-ttu-id="ff52e-292">Kommentare</span><span class="sxs-lookup"><span data-stu-id="ff52e-292">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="ff52e-293">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-293">G/g  (default)</span></span>| |  
|<span data-ttu-id="ff52e-294">F/f</span><span class="sxs-lookup"><span data-stu-id="ff52e-294">F/f</span></span>|<span data-ttu-id="ff52e-295">12.45</span><span class="sxs-lookup"><span data-stu-id="ff52e-295">12.45</span></span>|<span data-ttu-id="ff52e-296">Fixpunkt</span><span class="sxs-lookup"><span data-stu-id="ff52e-296">Fixed point</span></span>|
|<span data-ttu-id="ff52e-297">E/e</span><span class="sxs-lookup"><span data-stu-id="ff52e-297">E/e</span></span>|<span data-ttu-id="ff52e-298">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="ff52e-298">1.245000e1</span></span>|<span data-ttu-id="ff52e-299">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="ff52e-299">Exponential</span></span>|

<span data-ttu-id="ff52e-300">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-300">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (TimeSpan value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.TimeSpan value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.TimeSpan,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As TimeSpan, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : TimeSpan * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-301">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-301">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-302">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-302">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-303">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-303">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-304">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-304">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-305">Formatiert einen <see cref="T:System.TimeSpan" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-305">Formats a <see cref="T:System.TimeSpan" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-306"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-306"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-307">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-307">Formats supported:</span></span>

|<span data-ttu-id="ff52e-308">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-308">Format string</span></span>|<span data-ttu-id="ff52e-309">Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-309">Result string</span></span>|<span data-ttu-id="ff52e-310">Kommentare</span><span class="sxs-lookup"><span data-stu-id="ff52e-310">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="ff52e-311">c/t/T (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-311">c/t/T (default)</span></span>|<span data-ttu-id="ff52e-312">[-][d.]hh:mm:ss[.fffffff]</span><span class="sxs-lookup"><span data-stu-id="ff52e-312">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="ff52e-313">(Konstanten-Format)</span><span class="sxs-lookup"><span data-stu-id="ff52e-313">(constant format)</span></span>|
|<span data-ttu-id="ff52e-314">G</span><span class="sxs-lookup"><span data-stu-id="ff52e-314">G</span></span>|<span data-ttu-id="ff52e-315">[-]d:hh:mm:ss.fffffff</span><span class="sxs-lookup"><span data-stu-id="ff52e-315">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="ff52e-316">(Allgemeine Long)</span><span class="sxs-lookup"><span data-stu-id="ff52e-316">(general long)</span></span>|
|<span data-ttu-id="ff52e-317">g</span><span class="sxs-lookup"><span data-stu-id="ff52e-317">g</span></span>|<span data-ttu-id="ff52e-318">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="ff52e-318">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="ff52e-319">(Allgemeine kurz)</span><span class="sxs-lookup"><span data-stu-id="ff52e-319">(general short)</span></span>|

<span data-ttu-id="ff52e-320">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-320">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ushort value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UShort, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint16 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-321">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-321">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-322">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-322">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-323">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-323">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-324">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-324">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-325">Formatiert einen <see cref="T:System.UInt16" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-325">Formats a <see cref="T:System.UInt16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-326"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-326"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-327">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-327">Formats supported:</span></span>

|<span data-ttu-id="ff52e-328">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-328">Format string</span></span>|<span data-ttu-id="ff52e-329">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-329">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-330">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-330">G/g (default)</span></span>| |
|<span data-ttu-id="ff52e-331">D/d</span><span class="sxs-lookup"><span data-stu-id="ff52e-331">D/d</span></span>|<span data-ttu-id="ff52e-332">32767</span><span class="sxs-lookup"><span data-stu-id="ff52e-332">32767</span></span>|
|<span data-ttu-id="ff52e-333">N/n</span><span class="sxs-lookup"><span data-stu-id="ff52e-333">N/n</span></span>|<span data-ttu-id="ff52e-334">32,767</span><span class="sxs-lookup"><span data-stu-id="ff52e-334">32,767</span></span>|       
|<span data-ttu-id="ff52e-335">X/x</span><span class="sxs-lookup"><span data-stu-id="ff52e-335">X/x</span></span>|<span data-ttu-id="ff52e-336">7fff</span><span class="sxs-lookup"><span data-stu-id="ff52e-336">7fff</span></span>|

<span data-ttu-id="ff52e-337">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-337">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (uint value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UInteger, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint32 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-338">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-338">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-339">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-339">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-340">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-340">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-341">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-341">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-342">Formatiert einen <see cref="T:System.UInt32" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-342">Formats a <see cref="T:System.UInt32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-343"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-343"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

<span data-ttu-id="ff52e-344">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-344">Formats supported:</span></span>

|<span data-ttu-id="ff52e-345">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-345">Format string</span></span>|<span data-ttu-id="ff52e-346">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-346">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-347">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-347">G/g (default)</span></span>| |
|<span data-ttu-id="ff52e-348">D/d</span><span class="sxs-lookup"><span data-stu-id="ff52e-348">D/d</span></span>|<span data-ttu-id="ff52e-349">32767</span><span class="sxs-lookup"><span data-stu-id="ff52e-349">32767</span></span>|
|<span data-ttu-id="ff52e-350">N/n</span><span class="sxs-lookup"><span data-stu-id="ff52e-350">N/n</span></span>|<span data-ttu-id="ff52e-351">32,767</span><span class="sxs-lookup"><span data-stu-id="ff52e-351">32,767</span></span>|       
|<span data-ttu-id="ff52e-352">X/x</span><span class="sxs-lookup"><span data-stu-id="ff52e-352">X/x</span></span>|<span data-ttu-id="ff52e-353">7fff</span><span class="sxs-lookup"><span data-stu-id="ff52e-353">7fff</span></span>|

<span data-ttu-id="ff52e-354">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-354">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ulong value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As ULong, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint64 * Span&lt;byte&gt; *  * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff52e-355">Der zu formatierende Wert.</span><span class="sxs-lookup"><span data-stu-id="ff52e-355">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="ff52e-356">Der Puffer, in den der UTF8-formatierte Wert geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="ff52e-356">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ff52e-357">Enthält bei der Rückgabe der Methode die Länge des formatierten Texts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="ff52e-357">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="ff52e-358">Das zu verwendende Standardformat.</span><span class="sxs-lookup"><span data-stu-id="ff52e-358">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="ff52e-359">Formatiert einen <see cref="T:System.UInt64" />-Wert als UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="ff52e-359">Formats a <see cref="T:System.UInt64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="ff52e-360"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist; <see langword="false" />, wenn <paramref name="buffer" /> zu klein ist.</span><span class="sxs-lookup"><span data-stu-id="ff52e-360"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="ff52e-361">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="ff52e-361">Formats supported:</span></span>

|<span data-ttu-id="ff52e-362">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-362">Format string</span></span>|<span data-ttu-id="ff52e-363">Beispiel-Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="ff52e-363">Example result string</span></span>|
|--|--|
|<span data-ttu-id="ff52e-364">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="ff52e-364">G/g (default)</span></span>| |
|<span data-ttu-id="ff52e-365">D/d</span><span class="sxs-lookup"><span data-stu-id="ff52e-365">D/d</span></span>|<span data-ttu-id="ff52e-366">32767</span><span class="sxs-lookup"><span data-stu-id="ff52e-366">32767</span></span>|
|<span data-ttu-id="ff52e-367">N/n</span><span class="sxs-lookup"><span data-stu-id="ff52e-367">N/n</span></span>|<span data-ttu-id="ff52e-368">32,767</span><span class="sxs-lookup"><span data-stu-id="ff52e-368">32,767</span></span>|       
|<span data-ttu-id="ff52e-369">X/x</span><span class="sxs-lookup"><span data-stu-id="ff52e-369">X/x</span></span>|<span data-ttu-id="ff52e-370">7fff</span><span class="sxs-lookup"><span data-stu-id="ff52e-370">7fff</span></span>|

<span data-ttu-id="ff52e-371">Wenn die Methode ein Fehler auftritt, erhöhen Sie die Größe des Puffers iterativ, und wiederholen Sie, bis er erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="ff52e-371">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
