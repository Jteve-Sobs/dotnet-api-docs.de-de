<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d46ffc198524bd466f660e29a8831cb5128a44c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70562611" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d1595-101">Bietet statische Methoden zum Analysieren von UTF8-Zeichenfolgen in allgemeine Datentypen.</span><span class="sxs-lookup"><span data-stu-id="d1595-101">Provides static methods to parse Utf8 strings to common data types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-102">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-102">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-103">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-103">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-104">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-104">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-105">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-105">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-106">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-106">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-107">Analysiert einen <see cref="T:System.Boolean" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-107">Parses a <see cref="T:System.Boolean" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-108"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-108"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-109">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-109">Formats supported:</span></span> 

|<span data-ttu-id="d1595-110">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-110">Format string</span></span>|<span data-ttu-id="d1595-111">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-111">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-112">G (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-112">G (default)</span></span>|<span data-ttu-id="d1595-113">True/false</span><span class="sxs-lookup"><span data-stu-id="d1595-113">True/False</span></span>|
|<span data-ttu-id="d1595-114">l</span><span class="sxs-lookup"><span data-stu-id="d1595-114">l</span></span>|<span data-ttu-id="d1595-115">true/false</span><span class="sxs-lookup"><span data-stu-id="d1595-115">true/false</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-116">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-116">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-117">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-117">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-118">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-118">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-119">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-119">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-120">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-120">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-121">Analysiert einen <see cref="T:System.Byte" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-121">Parses a <see cref="T:System.Byte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-122"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-122"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-123">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-123">Formats supported:</span></span> 

|<span data-ttu-id="d1595-124">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-124">Format string</span></span>|<span data-ttu-id="d1595-125">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-125">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-126">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-126">G/g (default)</span></span>| |
|<span data-ttu-id="d1595-127">D/d</span><span class="sxs-lookup"><span data-stu-id="d1595-127">D/d</span></span>|<span data-ttu-id="d1595-128">122</span><span class="sxs-lookup"><span data-stu-id="d1595-128">122</span></span>|
|<span data-ttu-id="d1595-129">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d1595-129">N/n</span></span>|<span data-ttu-id="d1595-130">122</span><span class="sxs-lookup"><span data-stu-id="d1595-130">122</span></span>|       
|<span data-ttu-id="d1595-131">X/x</span><span class="sxs-lookup"><span data-stu-id="d1595-131">X/x</span></span>|<span data-ttu-id="d1595-132">7a</span><span class="sxs-lookup"><span data-stu-id="d1595-132">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-133">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-133">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-134">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-134">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-135">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-135">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-136">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-136">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-137">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-137">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-138">Analysiert einen <see cref="T:System.DateTime" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-138">Parses a <see cref="T:System.DateTime" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-139"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-139"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-140">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-140">Formats supported:</span></span>

|<span data-ttu-id="d1595-141">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-141">Format string</span></span>|<span data-ttu-id="d1595-142">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-142">Example expected format</span></span>|<span data-ttu-id="d1595-143">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d1595-143">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1595-144">G (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-144">G  (default)</span></span>|<span data-ttu-id="d1595-145">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="d1595-145">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="d1595-146">R</span><span class="sxs-lookup"><span data-stu-id="d1595-146">R</span></span>|<span data-ttu-id="d1595-147">Di, 03 Jan 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d1595-147">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="d1595-148">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="d1595-148">(RFC 1123)</span></span>|
|<span data-ttu-id="d1595-149">l</span><span class="sxs-lookup"><span data-stu-id="d1595-149">l</span></span>|<span data-ttu-id="d1595-150">Di, 03 Jan 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d1595-150">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="d1595-151">(In Kleinbuchstaben RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="d1595-151">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="d1595-152">O</span><span class="sxs-lookup"><span data-stu-id="d1595-152">O</span></span>|<span data-ttu-id="d1595-153">2017-06-12t05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="d1595-153">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="d1595-154">(Roundtrippable)</span><span class="sxs-lookup"><span data-stu-id="d1595-154">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-155">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-155">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-156">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-156">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-157">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-157">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-158">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-158">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-159">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-159">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-160">Analysiert einen <see cref="T:System.DateTimeOffset" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-160">Parses a <see cref="T:System.DateTimeOffset" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-161"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-161"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-162">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-162">Formats supported:</span></span>

|<span data-ttu-id="d1595-163">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-163">Format string</span></span>|<span data-ttu-id="d1595-164">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-164">Example expected format</span></span>|<span data-ttu-id="d1595-165">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d1595-165">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1595-166">G (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-166">G  (default)</span></span>|<span data-ttu-id="d1595-167">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="d1595-167">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="d1595-168">R</span><span class="sxs-lookup"><span data-stu-id="d1595-168">R</span></span>|<span data-ttu-id="d1595-169">Di, 03 Jan 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d1595-169">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="d1595-170">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="d1595-170">(RFC 1123)</span></span>|
|<span data-ttu-id="d1595-171">l</span><span class="sxs-lookup"><span data-stu-id="d1595-171">l</span></span>|<span data-ttu-id="d1595-172">Di, 03 Jan 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="d1595-172">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="d1595-173">(In Kleinbuchstaben RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="d1595-173">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="d1595-174">O</span><span class="sxs-lookup"><span data-stu-id="d1595-174">O</span></span>|<span data-ttu-id="d1595-175">2017-06-12t05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="d1595-175">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="d1595-176">(Roundtrippable)</span><span class="sxs-lookup"><span data-stu-id="d1595-176">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-177">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-177">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-178">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-178">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-179">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-179">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-180">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-180">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-181">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-181">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-182">Analysiert einen <see cref="T:System.Decimal" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-182">Parses a <see cref="T:System.Decimal" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-183"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-183"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-184">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-184">Formats supported:</span></span>

|<span data-ttu-id="d1595-185">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-185">Format string</span></span>|<span data-ttu-id="d1595-186">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-186">Example expected format</span></span>|<span data-ttu-id="d1595-187">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d1595-187">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1595-188">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-188">G/g  (default)</span></span>| |  
|<span data-ttu-id="d1595-189">F/f</span><span class="sxs-lookup"><span data-stu-id="d1595-189">F/f</span></span>|<span data-ttu-id="d1595-190">12,45</span><span class="sxs-lookup"><span data-stu-id="d1595-190">12.45</span></span>|<span data-ttu-id="d1595-191">Fester Punkt</span><span class="sxs-lookup"><span data-stu-id="d1595-191">Fixed point</span></span>|
|<span data-ttu-id="d1595-192">E/a</span><span class="sxs-lookup"><span data-stu-id="d1595-192">E/e</span></span>|<span data-ttu-id="d1595-193">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="d1595-193">1.245000e1</span></span>|<span data-ttu-id="d1595-194">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="d1595-194">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-195">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-195">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-196">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-196">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-197">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-197">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-198">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-198">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-199">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-199">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-200">Analysiert einen <see cref="T:System.Double" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-200">Parses a <see cref="T:System.Double" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-201"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-201"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-202">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-202">Formats supported:</span></span>

|<span data-ttu-id="d1595-203">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-203">Format string</span></span>|<span data-ttu-id="d1595-204">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-204">Example expected format</span></span>|<span data-ttu-id="d1595-205">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d1595-205">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1595-206">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-206">G/g  (default)</span></span>| |  
|<span data-ttu-id="d1595-207">F/f</span><span class="sxs-lookup"><span data-stu-id="d1595-207">F/f</span></span>|<span data-ttu-id="d1595-208">12,45</span><span class="sxs-lookup"><span data-stu-id="d1595-208">12.45</span></span>|<span data-ttu-id="d1595-209">Fester Punkt</span><span class="sxs-lookup"><span data-stu-id="d1595-209">Fixed point</span></span>|
|<span data-ttu-id="d1595-210">E/a</span><span class="sxs-lookup"><span data-stu-id="d1595-210">E/e</span></span>|<span data-ttu-id="d1595-211">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="d1595-211">1.245000e1</span></span>|<span data-ttu-id="d1595-212">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="d1595-212">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-213">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-213">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-214">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-214">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-215">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-215">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-216">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-216">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-217">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-217">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-218">Analysiert einen <see cref="T:System.Guid" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-218">Parses a <see cref="T:System.Guid" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-219"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-219"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-220">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-220">Formats supported:</span></span>

|<span data-ttu-id="d1595-221">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-221">Format string</span></span>|<span data-ttu-id="d1595-222">Erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-222">Expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-223">D (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-223">D (default)</span></span>|<span data-ttu-id="d1595-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="d1595-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="d1595-225">B</span><span class="sxs-lookup"><span data-stu-id="d1595-225">B</span></span>|<span data-ttu-id="d1595-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="d1595-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="d1595-227">P</span><span class="sxs-lookup"><span data-stu-id="d1595-227">P</span></span>|<span data-ttu-id="d1595-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span><span class="sxs-lookup"><span data-stu-id="d1595-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="d1595-229">N</span><span class="sxs-lookup"><span data-stu-id="d1595-229">N</span></span>|<span data-ttu-id="d1595-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="d1595-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-231">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-231">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-232">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-232">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-233">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-233">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-234">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-234">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-235">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-235">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-236">Analysiert einen <see cref="T:System.Int16" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-236">Parses an <see cref="T:System.Int16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-237"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-237"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-238">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-238">Formats supported:</span></span>

|<span data-ttu-id="d1595-239">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-239">Format string</span></span>|<span data-ttu-id="d1595-240">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-240">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-241">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-241">G/g (default)</span></span>| |
|<span data-ttu-id="d1595-242">D/d</span><span class="sxs-lookup"><span data-stu-id="d1595-242">D/d</span></span>|<span data-ttu-id="d1595-243">32767</span><span class="sxs-lookup"><span data-stu-id="d1595-243">32767</span></span>|
|<span data-ttu-id="d1595-244">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d1595-244">N/n</span></span>|<span data-ttu-id="d1595-245">32,767</span><span class="sxs-lookup"><span data-stu-id="d1595-245">32,767</span></span>|       
|<span data-ttu-id="d1595-246">X/x</span><span class="sxs-lookup"><span data-stu-id="d1595-246">X/x</span></span>|<span data-ttu-id="d1595-247">7fff</span><span class="sxs-lookup"><span data-stu-id="d1595-247">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-248">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-248">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-249">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-249">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-250">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-250">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-251">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-251">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-252">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-252">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-253">Analysiert einen <see cref="T:System.Int32" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-253">Parses an <see cref="T:System.Int32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-254"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-254"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-255">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-255">Formats supported:</span></span>

|<span data-ttu-id="d1595-256">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-256">Format string</span></span>|<span data-ttu-id="d1595-257">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-257">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-258">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-258">G/g (default)</span></span>| |
|<span data-ttu-id="d1595-259">D/d</span><span class="sxs-lookup"><span data-stu-id="d1595-259">D/d</span></span>|<span data-ttu-id="d1595-260">32767</span><span class="sxs-lookup"><span data-stu-id="d1595-260">32767</span></span>|
|<span data-ttu-id="d1595-261">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d1595-261">N/n</span></span>|<span data-ttu-id="d1595-262">32,767</span><span class="sxs-lookup"><span data-stu-id="d1595-262">32,767</span></span>|       
|<span data-ttu-id="d1595-263">X/x</span><span class="sxs-lookup"><span data-stu-id="d1595-263">X/x</span></span>|<span data-ttu-id="d1595-264">7fff</span><span class="sxs-lookup"><span data-stu-id="d1595-264">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-265">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-265">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-266">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-266">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-267">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-267">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-268">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-268">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-269">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-269">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-270">Analysiert einen <see cref="T:System.Int64" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-270">Parses an <see cref="T:System.Int64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-271"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-271"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-272">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-272">Formats supported:</span></span>

|<span data-ttu-id="d1595-273">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-273">Format string</span></span>|<span data-ttu-id="d1595-274">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-274">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-275">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-275">G/g (default)</span></span>| |
|<span data-ttu-id="d1595-276">D/d</span><span class="sxs-lookup"><span data-stu-id="d1595-276">D/d</span></span>|<span data-ttu-id="d1595-277">32767</span><span class="sxs-lookup"><span data-stu-id="d1595-277">32767</span></span>|
|<span data-ttu-id="d1595-278">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d1595-278">N/n</span></span>|<span data-ttu-id="d1595-279">32,767</span><span class="sxs-lookup"><span data-stu-id="d1595-279">32,767</span></span>|       
|<span data-ttu-id="d1595-280">X/x</span><span class="sxs-lookup"><span data-stu-id="d1595-280">X/x</span></span>|<span data-ttu-id="d1595-281">7fff</span><span class="sxs-lookup"><span data-stu-id="d1595-281">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-282">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-282">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-283">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-283">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-284">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-284">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-285">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-285">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-286">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-286">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-287">Analysiert einen <see cref="T:System.SByte" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-287">Parses an <see cref="T:System.SByte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-288"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-288"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-289">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-289">Formats supported:</span></span> 

|<span data-ttu-id="d1595-290">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-290">Format string</span></span>|<span data-ttu-id="d1595-291">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-291">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-292">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-292">G/g (default)</span></span>| |
|<span data-ttu-id="d1595-293">D/d</span><span class="sxs-lookup"><span data-stu-id="d1595-293">D/d</span></span>|<span data-ttu-id="d1595-294">122</span><span class="sxs-lookup"><span data-stu-id="d1595-294">122</span></span>|
|<span data-ttu-id="d1595-295">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d1595-295">N/n</span></span>|<span data-ttu-id="d1595-296">122</span><span class="sxs-lookup"><span data-stu-id="d1595-296">122</span></span>|       
|<span data-ttu-id="d1595-297">X/x</span><span class="sxs-lookup"><span data-stu-id="d1595-297">X/x</span></span>|<span data-ttu-id="d1595-298">7a</span><span class="sxs-lookup"><span data-stu-id="d1595-298">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-299">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-299">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-300">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-300">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-301">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-301">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-302">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-302">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-303">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-303">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-304">Analysiert einen <see cref="T:System.Single" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-304">Parses a <see cref="T:System.Single" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-305"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-305"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-306">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-306">Formats supported:</span></span> 

<span data-ttu-id="d1595-307">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-307">Format string</span></span>|<span data-ttu-id="d1595-308">Beispiel für fornmat erwartet</span><span class="sxs-lookup"><span data-stu-id="d1595-308">Example expected fornmat</span></span>|<span data-ttu-id="d1595-309">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d1595-309">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1595-310">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-310">G/g  (default)</span></span>| |  
|<span data-ttu-id="d1595-311">F/f</span><span class="sxs-lookup"><span data-stu-id="d1595-311">F/f</span></span>|<span data-ttu-id="d1595-312">12,45</span><span class="sxs-lookup"><span data-stu-id="d1595-312">12.45</span></span>|<span data-ttu-id="d1595-313">Fester Punkt</span><span class="sxs-lookup"><span data-stu-id="d1595-313">Fixed point</span></span>|
|<span data-ttu-id="d1595-314">E/a</span><span class="sxs-lookup"><span data-stu-id="d1595-314">E/e</span></span>|<span data-ttu-id="d1595-315">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="d1595-315">1.245000e1</span></span>|<span data-ttu-id="d1595-316">Exponentiell</span><span class="sxs-lookup"><span data-stu-id="d1595-316">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-317">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-317">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-318">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-318">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-319">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-319">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-320">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-320">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-321">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-321">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-322">Analysiert einen <see cref="T:System.TimeSpan" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-322">Parses a <see cref="T:System.TimeSpan" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-323"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-323"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-324">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-324">Formats supported:</span></span> 

|<span data-ttu-id="d1595-325">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-325">Format string</span></span>|<span data-ttu-id="d1595-326">Erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-326">Expected format</span></span>|<span data-ttu-id="d1595-327">Kommentare</span><span class="sxs-lookup"><span data-stu-id="d1595-327">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="d1595-328">c/t/t (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-328">c/t/T (default)</span></span>|<span data-ttu-id="d1595-329">[-] [d.] hh: mm: SS [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="d1595-329">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="d1595-330">(konstantes Format)</span><span class="sxs-lookup"><span data-stu-id="d1595-330">(constant format)</span></span>|
|<span data-ttu-id="d1595-331">G</span><span class="sxs-lookup"><span data-stu-id="d1595-331">G</span></span>|<span data-ttu-id="d1595-332">[-] d:hh: mm: SS. fffffff</span><span class="sxs-lookup"><span data-stu-id="d1595-332">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="d1595-333">(allgemein)</span><span class="sxs-lookup"><span data-stu-id="d1595-333">(general long)</span></span>|
|<span data-ttu-id="d1595-334">g</span><span class="sxs-lookup"><span data-stu-id="d1595-334">g</span></span>|<span data-ttu-id="d1595-335">[-] [d:] [h] h:mm: SS [. f [f [f [f [f [f [f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="d1595-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="d1595-336">(allgemein kurz)</span><span class="sxs-lookup"><span data-stu-id="d1595-336">(general short)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-337">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-337">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-338">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-338">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-339">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-339">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-340">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-340">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-341">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-341">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-342">Analysiert einen <see cref="T:System.UInt16" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-342">Parses a <see cref="T:System.UInt16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-343"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-343"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-344">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-344">Formats supported:</span></span>

|<span data-ttu-id="d1595-345">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-345">Format string</span></span>|<span data-ttu-id="d1595-346">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-346">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-347">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-347">G/g (default)</span></span>| |
|<span data-ttu-id="d1595-348">D/d</span><span class="sxs-lookup"><span data-stu-id="d1595-348">D/d</span></span>|<span data-ttu-id="d1595-349">32767</span><span class="sxs-lookup"><span data-stu-id="d1595-349">32767</span></span>|
|<span data-ttu-id="d1595-350">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d1595-350">N/n</span></span>|<span data-ttu-id="d1595-351">32,767</span><span class="sxs-lookup"><span data-stu-id="d1595-351">32,767</span></span>|       
|<span data-ttu-id="d1595-352">X/x</span><span class="sxs-lookup"><span data-stu-id="d1595-352">X/x</span></span>|<span data-ttu-id="d1595-353">7fff</span><span class="sxs-lookup"><span data-stu-id="d1595-353">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-354">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-354">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-355">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-355">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-356">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-356">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-357">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-357">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-358">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-358">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-359">Analysiert einen <see cref="T:System.UInt32" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-359">Parses a <see cref="T:System.UInt32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-360"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-360"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-361">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-361">Formats supported:</span></span>

|<span data-ttu-id="d1595-362">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-362">Format string</span></span>|<span data-ttu-id="d1595-363">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-363">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-364">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-364">G/g (default)</span></span>| |
|<span data-ttu-id="d1595-365">D/d</span><span class="sxs-lookup"><span data-stu-id="d1595-365">D/d</span></span>|<span data-ttu-id="d1595-366">32767</span><span class="sxs-lookup"><span data-stu-id="d1595-366">32767</span></span>|
|<span data-ttu-id="d1595-367">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d1595-367">N/n</span></span>|<span data-ttu-id="d1595-368">32,767</span><span class="sxs-lookup"><span data-stu-id="d1595-368">32,767</span></span>|       
|<span data-ttu-id="d1595-369">X/x</span><span class="sxs-lookup"><span data-stu-id="d1595-369">X/x</span></span>|<span data-ttu-id="d1595-370">7fff</span><span class="sxs-lookup"><span data-stu-id="d1595-370">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; *  *  * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1595-371">Die zu analysierende UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-371">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="d1595-372">Enthält nach Rückgabe der Methode den aus <paramref name="source" /> analysierten Wert, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-372">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="d1595-373">Enthält bei Rückgabe der Methode die Länge der analysierten Teilzeichenfolge in Bytes, wenn der Analysevorgang erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="d1595-373">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="d1595-374">Wenn bei der Methode ein Fehler auftritt, wird <paramref name="bytesConsumed" /> auf 0 gesetzt.</span><span class="sxs-lookup"><span data-stu-id="d1595-374">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="d1595-375">Das erwartete Format der UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-375">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="d1595-376">Analysiert einen <see cref="T:System.UInt64" />-Wert am Anfang einer UTF8-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d1595-376">Parses a <see cref="T:System.UInt64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="d1595-377"><see langword="true" /> für Erfolg; <see langword="false" />, wenn die Zeichenfolge syntaktisch ungültig war oder ein Über- bzw. Unterlauf aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="d1595-377"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="d1595-378">Unterstützte Formate:</span><span class="sxs-lookup"><span data-stu-id="d1595-378">Formats supported:</span></span>

|<span data-ttu-id="d1595-379">Formatierungszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="d1595-379">Format string</span></span>|<span data-ttu-id="d1595-380">Beispiel für erwartetes Format</span><span class="sxs-lookup"><span data-stu-id="d1595-380">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="d1595-381">G/g (Standard)</span><span class="sxs-lookup"><span data-stu-id="d1595-381">G/g (default)</span></span>| |
|<span data-ttu-id="d1595-382">D/d</span><span class="sxs-lookup"><span data-stu-id="d1595-382">D/d</span></span>|<span data-ttu-id="d1595-383">32767</span><span class="sxs-lookup"><span data-stu-id="d1595-383">32767</span></span>|
|<span data-ttu-id="d1595-384">Nicht zutreffend</span><span class="sxs-lookup"><span data-stu-id="d1595-384">N/n</span></span>|<span data-ttu-id="d1595-385">32,767</span><span class="sxs-lookup"><span data-stu-id="d1595-385">32,767</span></span>|       
|<span data-ttu-id="d1595-386">X/x</span><span class="sxs-lookup"><span data-stu-id="d1595-386">X/x</span></span>|<span data-ttu-id="d1595-387">7fff</span><span class="sxs-lookup"><span data-stu-id="d1595-387">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
