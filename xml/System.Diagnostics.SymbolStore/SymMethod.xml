<Type Name="SymMethod" FullName="System.Diagnostics.SymbolStore.SymMethod">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3708b92bd43506bc36ec69e3f5cff931dab2740" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69364611" /></Metadata><TypeSignature Language="C#" Value="public class SymMethod : System.Diagnostics.SymbolStore.SymMethodBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolMethod" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymMethod extends System.Diagnostics.SymbolStore.SymMethodBase implements class System.Diagnostics.SymbolStore.ISymbolMethod, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymMethod" />
  <TypeSignature Language="VB.NET" Value="Public Class SymMethod&#xA;Inherits SymMethodBase&#xA;Implements IDisposable, ISymbolMethod" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymMethod : System::Diagnostics::SymbolStore::SymMethodBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolMethod" />
  <TypeSignature Language="F#" Value="type SymMethod = class&#xA;    inherit SymMethodBase&#xA;    interface ISymbolMethod&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymMethodBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolMethod</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6cb6f-101">Stellt eine Methode in einem Symbolspeicher dar.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-101">Represents a method within a symbol store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb6f-102">Die <xref:System.Diagnostics.SymbolStore.SymMethod> -Klasse erm√∂glicht nur den Zugriff auf die Symbol bezogenen Attribute einer Methode, z. b. Sequenz Punkte, lexikalische Bereiche und Parameterinformationen.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-102">The <xref:System.Diagnostics.SymbolStore.SymMethod> class provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information.</span></span> <span data-ttu-id="6cb6f-103">Verwenden Sie <xref:System.Reflection> die-Klassen, um die typbezogenen Attribute einer Methode zu lesen.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-103">Use the <xref:System.Reflection> classes to read the type-related attributes of a method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymMethod (ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(ISymUnmanagedMethod* pMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.#ctor(ISymUnmanagedMethod*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymMethod(ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymMethod : nativeptr&lt;ISymUnmanagedMethod&gt; -&gt; System.Diagnostics.SymbolStore.SymMethod" Usage="new System.Diagnostics.SymbolStore.SymMethod pMethod" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pMethod" Type="ISymUnmanagedMethod*" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="pMethod"><span data-ttu-id="6cb6f-104">Ein Rohzeiger auf das nicht verwaltete COM-Objekt <see href="~/docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md">ISymUnmanagedMethod</see>.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-104">A raw pointer to the unmanaged COM <see href="~/docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md">ISymUnmanagedMethod</see> object.</span></span></param>
        <summary><span data-ttu-id="6cb6f-105">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Klasse von einem Rohdatenzeiger auf eine nicht verwaltete Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-105">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class from a raw pointer to an unmanaged interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="6cb6f-106">Normalerweise werden Instanzen dieses Typs durch Aufrufen der <xref:System.Diagnostics.SymbolStore.SymReader.GetMethod%2A> -Methode abgerufen, anstatt direkt mit diesem Konstruktor erstellt zu werden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-106">Typically, instances of this type are obtained by calling the <xref:System.Diagnostics.SymbolStore.SymReader.GetMethod%2A> method instead of being created directly with this constructor.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymMethod (System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod* pMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymMethod(System::Diagnostics::SymbolStore::Private::ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymMethod : nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod&gt; -&gt; System.Diagnostics.SymbolStore.SymMethod" Usage="new System.Diagnostics.SymbolStore.SymMethod pMethod" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pMethod" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pMethod"><span data-ttu-id="6cb6f-107">Ein Rohzeiger auf das nicht verwaltete COM-ISymUnmanagedMethod-Objekt.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-107">A raw pointer to the unmanaged COM ISymUnmanagedMethod object.</span></span></param>
        <summary><span data-ttu-id="6cb6f-108">Initialisiert eine neue Instanz der <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Klasse von einem Rohzeiger auf die nicht verwaltete ISymUnmanagedMethod-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-108">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class from a raw pointer to the unmanaged ISymUnmanagedMethod interface.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symMethod.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb6f-109">Gibt die von der aktuellen Instanz des <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Objekts reservierten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-109">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="6cb6f-110">Verwenden Sie <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize> die-Methode, um Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-110">Use the <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize> method to release resources.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symMethod.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb6f-111">Gibt die von der aktuellen Instanz des <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Objekts reservierten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-111">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="6cb6f-112">Verwenden Sie <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize> die-Methode, um Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-112">Use the <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize> method to release resources.</span></span>
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6cb6f-113">Gibt alle von der aktuellen Instanz der <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-113">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symMethod.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb6f-114">Gibt alle von der aktuellen Instanz der <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-114">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symMethod.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="6cb6f-115"><see langword="true" />, um verwaltete und nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschlie√ülich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-115"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6cb6f-116">Wird von der <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" />-Methode und der <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" />-Methode aufgerufen, um die verwalteten und nicht verwalteten von der aktuellen Instanz der <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Klasse verwendeten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-116">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb6f-117">Diese Methode wird nur von der √∂ffentlichen <xref:System.Diagnostics.SymbolStore.SymMethod.Dispose%2A> -Methode und der- <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize%2A> Methode aufgerufen. Sie d√ºrfen diese Methode nicht direkt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-117">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymMethod.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymMethod ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symMethod.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb6f-118">Gibt nicht verwaltete Ressourcen frei und f√ºhrt andere Bereinigungsvorg√§nge durch, bevor die <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> durch die Garbage Collection wieder zug√§nglich gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-118">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb6f-119">Diese Methode √ºber <xref:System.Object.Finalize%2A>schreibt.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-119">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="6cb6f-120">Der Anwendungscode sollte diese Methode nicht aufzurufen. die- `Finalize` Methode eines Objekts wird automatisch w√§hrend Garbage Collection aufgerufen, es sei denn, die Garbage Collector wurde durch einen Aufruf der <xref:System.GC.SuppressFinalize%2A> -Methode deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-120">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespace () As ISymbolNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolNamespace ^ GetNamespace();" />
      <MemberSignature Language="F#" Value="abstract member GetNamespace : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace&#xA;override this.GetNamespace : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace" Usage="symMethod.GetNamespace " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb6f-121">L√∂st in allen F√§llen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-121">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="6cb6f-122">L√∂st in allen F√§llen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-122">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cb6f-123">In allen F√§llen.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-123">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOffset">
      <MemberSignature Language="C#" Value="public virtual int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffset(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOffset (document As ISymbolDocument, line As Integer, column As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetOffset(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberSignature Language="F#" Value="abstract member GetOffset : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; int&#xA;override this.GetOffset : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; int" Usage="symMethod.GetOffset (document, line, column)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="6cb6f-124">Das Dokument, f√ºr das der Offset angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-124">The document for which the offset is requested.</span></span></param>
        <param name="line"><span data-ttu-id="6cb6f-125">Die Dokumentzeile, f√ºr die der Offset angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-125">The document line for which the offset is requested.</span></span></param>
        <param name="column"><span data-ttu-id="6cb6f-126">Die Dokumentspalte, f√ºr die der Offset angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-126">The document column for which the offset is requested.</span></span></param>
        <summary><span data-ttu-id="6cb6f-127">Ruft den MSIL-Offset (Microsoft Intermediate Language) innerhalb der Methode ab, der der angegebenen Position entspricht.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-127">Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.</span></span></summary>
        <returns><span data-ttu-id="6cb6f-128">Der IL-Offset in der aktuellen Methode der angegebenen Position im Dokument.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-128">The IL offset within the current method of the specified location in the document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetParameters () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetParameters : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetParameters : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symMethod.GetParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb6f-129">Ruft die Parameter f√ºr die aktuelle Methode ab.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-129">Gets the parameters for the current method.</span></span></summary>
        <returns><span data-ttu-id="6cb6f-130">Das Array von Parametern f√ºr die aktuelle Methode.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-130">The array of parameters for the current method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb6f-131">Die Parameter werden in der Reihenfolge zur√ºckgegeben, in der Sie in der Signatur der Methode definiert sind.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-131">The parameters are returned in the order that they are defined within the signature of the method.</span></span> <span data-ttu-id="6cb6f-132">Das zur√ºckgegebene Array ist leer, wenn die Methode keine Parameter hat.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-132">The returned array is empty if the method does not have parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRanges">
      <MemberSignature Language="C#" Value="public virtual int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRanges(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRanges (document As ISymbolDocument, line As Integer, column As Integer) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ GetRanges(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberSignature Language="F#" Value="abstract member GetRanges : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; int[]&#xA;override this.GetRanges : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; int[]" Usage="symMethod.GetRanges (document, line, column)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="6cb6f-133">Das Dokument, f√ºr das die IL-Offsetbereiche angefordert werden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-133">The document for which the IL offset ranges are requested.</span></span></param>
        <param name="line"><span data-ttu-id="6cb6f-134">Die Dokumentzeile, f√ºr die die IL-Offsetbereiche angefordert werden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-134">The document line for which the IL offset ranges are requested.</span></span></param>
        <param name="column"><span data-ttu-id="6cb6f-135">Die Dokumentspalte, f√ºr die die IL-Offsetbereiche angefordert werden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-135">The document column for which the IL offset ranges are requested.</span></span></param>
        <summary><span data-ttu-id="6cb6f-136">Ruft ein Array von Start-/Endoffsetpaaren ab, die den Bereichen der MSIL-Offsets (Microsoft Intermediate Language) entsprechen, die von einer angegebenen Position innerhalb dieser Methode abgedeckt werden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-136">Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) offsets that a given position covers within this method.</span></span></summary>
        <returns><span data-ttu-id="6cb6f-137">Ein Array von IL-Start-/Endoffsetpaaren.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-137">An array of start and end IL offset pairs.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb6f-138">Das Array ist ein Array aus ganzen Zahlen im Format {{Start1, end1}, {start2, end2}...}, wobei jedes Paar einen IL-Offset Bereich innerhalb der Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-138">The array is an array of integers in the format {{start1, end1}, {start2, end2}...}, where each pair represents an IL offset range within the method.</span></span> <span data-ttu-id="6cb6f-139">Die Anzahl der Bereiche ist die L√§nge des Arrays dividiert durch 2.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-139">The number of ranges is the length of the array divided by 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolScope GetScope(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScope (offset As Integer) As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolScope ^ GetScope(int offset);" />
      <MemberSignature Language="F#" Value="abstract member GetScope : int -&gt; System.Diagnostics.SymbolStore.ISymbolScope&#xA;override this.GetScope : int -&gt; System.Diagnostics.SymbolStore.ISymbolScope" Usage="symMethod.GetScope offset" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="6cb6f-140">Der IL-Offset innerhalb der Methode, der gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-140">The IL offset within the method to look up.</span></span></param>
        <summary><span data-ttu-id="6cb6f-141">Gibt den umfassendsten lexikalischen G√ºltigkeitsbereich zur√ºck, wenn ein Offset innerhalb einer Methode angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-141">Returns the most enclosing lexical scope corresponding to an offset within a method.</span></span></summary>
        <returns><span data-ttu-id="6cb6f-142">Der umfassendste lexikalische G√ºltigkeitsbereich f√ºr den angegebenen IL-Offset innerhalb der Methode.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-142">The most enclosing lexical scope for the given IL offset within the method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb6f-143">Sie k√∂nnen die <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> -Methode verwenden, um Suchvorg√§nge f√ºr lokale Variablen zu starten.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-143">You can use the <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> method to start local variable searches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSequencePoints">
      <MemberSignature Language="C#" Value="public virtual void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSequencePoints(int32[] offsets, class System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int32[] lines, int32[] columns, int32[] endLines, int32[] endColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetSequencePoints (offsets As Integer(), documents As ISymbolDocument(), lines As Integer(), columns As Integer(), endLines As Integer(), endColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetSequencePoints(cli::array &lt;int&gt; ^ offsets, cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ documents, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns, cli::array &lt;int&gt; ^ endLines, cli::array &lt;int&gt; ^ endColumns);" />
      <MemberSignature Language="F#" Value="abstract member GetSequencePoints : int[] * System.Diagnostics.SymbolStore.ISymbolDocument[] * int[] * int[] * int[] * int[] -&gt; unit&#xA;override this.GetSequencePoints : int[] * System.Diagnostics.SymbolStore.ISymbolDocument[] * int[] * int[] * int[] * int[] -&gt; unit" Usage="symMethod.GetSequencePoints (offsets, documents, lines, columns, endLines, endColumns)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsets" Type="System.Int32[]" />
        <Parameter Name="documents" Type="System.Diagnostics.SymbolStore.ISymbolDocument[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
        <Parameter Name="endLines" Type="System.Int32[]" />
        <Parameter Name="endColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="offsets"><span data-ttu-id="6cb6f-144">Ein Array, in dem die IL-Offsets vom Anfang der Methode f√ºr die Sequenzpunkte gespeichert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-144">An array in which to store the IL offsets from the beginning of the method for the sequence points.</span></span></param>
        <param name="documents"><span data-ttu-id="6cb6f-145">Ein Array, in dem die Dokumente gespeichert werden sollen, in denen sich die Sequenzpunkte befinden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-145">An array in which to store the  documents in which the sequence points are located.</span></span></param>
        <param name="lines"><span data-ttu-id="6cb6f-146">Ein Array, in dem die Zeilen im Dokument gespeichert werden sollen, in denen sich die Sequenzpunkte befinden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-146">An array in which to store the lines in the documents at which the sequence points are located.</span></span></param>
        <param name="columns"><span data-ttu-id="6cb6f-147">Ein Array, in dem die Spalten im Dokument gespeichert werden sollen, in denen sich die Sequenzpunkte befinden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-147">An array in which to store the columns in the documents at which the sequence points are located.</span></span></param>
        <param name="endLines"><span data-ttu-id="6cb6f-148">Das Array von Zeilen in den Dokumenten, in denen die Sequenzpunkte enden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-148">The array of lines in the documents at which the sequence points end.</span></span></param>
        <param name="endColumns"><span data-ttu-id="6cb6f-149">Das Array von Spalten in den Dokumenten, in denen die Sequenzpunkte enden.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-149">The array of columns in the documents at which the sequence points end.</span></span></param>
        <summary><span data-ttu-id="6cb6f-150">Ruft die Sequenzpunkte f√ºr die aktuelle Methode ab und speichert die Informationen in den angegebenen Arrays.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-150">Gets the sequence points for the current method and stores the information in the specified arrays.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb6f-151">Sequenz Punkte werden zum Zuordnen zwischen Quelldatei Standorten und IL-Offsets verwendet.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-151">Sequence points are used to map between source file locations and IL offsets.</span></span>  <span data-ttu-id="6cb6f-152">Jeder Sequenz Punkt besteht aus einem IL-Offset und einem Quelldatei Bereich, der von den Start-und Endzeilen-/ <xref:System.Diagnostics.SymbolStore.ISymbolDocument> Spalten Nummern in Relation zu einem Objekt angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-152">Each sequence point consists of an IL offset, and source file region specified by start and end line/column numbers relative to an <xref:System.Diagnostics.SymbolStore.ISymbolDocument> object.</span></span>  <span data-ttu-id="6cb6f-153">Jedes Element an einem bestimmten Index jedes Arrays entspricht einem bestimmten Sequenz Punkt.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-153">Each element at a specific index of every array corresponds to a specific sequence point.</span></span> <span data-ttu-id="6cb6f-154">Der Aufrufer muss vorab zugeordnete Arrays bereitstellen, die die zur√ºck zugebenden Informationen enthalten.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-154">The caller must supply pre-allocated arrays to hold the information to be returned.</span></span> <span data-ttu-id="6cb6f-155">Alle Werte in den Arrays werden √ºberschrieben.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-155">Any values in the arrays are overwritten.</span></span> <span data-ttu-id="6cb6f-156">Verwenden <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> Sie, um die Anzahl aller Sequenz Punkte abzurufen und Arrays mit der richtigen Gr√∂√üe zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-156">Use <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> to retrieve the count of all sequence points and create arrays of the proper size.</span></span> <span data-ttu-id="6cb6f-157">Die Sequenz Punkte werden nach Offset sortiert und sind f√ºr alle Dokumente in der Methode.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-157">The sequence points are sorted by offset and are for all documents in the method.</span></span> <span data-ttu-id="6cb6f-158"><xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A>√ºberpr√ºft die Gr√∂√üe jedes Arrays und platziert die Sequenz Punkt Informationen.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-158"><xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> verifies the size of each array and places the sequence point information into each.</span></span> <span data-ttu-id="6cb6f-159">Wenn ein Array ist `null`, werden die Daten f√ºr dieses Array nicht zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-159">If any array is `null`, the data for that array is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceStartEnd">
      <MemberSignature Language="C#" Value="public virtual bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetSourceStartEnd(class System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int32[] lines, int32[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceStartEnd (docs As ISymbolDocument(), lines As Integer(), columns As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetSourceStartEnd(cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ docs, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns);" />
      <MemberSignature Language="F#" Value="abstract member GetSourceStartEnd : System.Diagnostics.SymbolStore.ISymbolDocument[] * int[] * int[] -&gt; bool&#xA;override this.GetSourceStartEnd : System.Diagnostics.SymbolStore.ISymbolDocument[] * int[] * int[] -&gt; bool" Usage="symMethod.GetSourceStartEnd (docs, lines, columns)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="docs" Type="System.Diagnostics.SymbolStore.ISymbolDocument[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="docs"><span data-ttu-id="6cb6f-160">Dieser Parameter wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-160">This parameter is not used.</span></span></param>
        <param name="lines"><span data-ttu-id="6cb6f-161">Dieser Parameter wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-161">This parameter is not used.</span></span></param>
        <param name="columns"><span data-ttu-id="6cb6f-162">Dieser Parameter wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-162">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="6cb6f-163">L√∂st in allen F√§llen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-163">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="6cb6f-164">L√∂st in allen F√§llen eine <see cref="T:System.NotSupportedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-164">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cb6f-165">In allen F√§llen.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-165">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RootScope">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SymbolStore.ISymbolScope RootScope" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.RootScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootScope As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::ISymbolScope ^ RootScope { System::Diagnostics::SymbolStore::ISymbolScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootScope : System.Diagnostics.SymbolStore.ISymbolScope" Usage="System.Diagnostics.SymbolStore.SymMethod.RootScope" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb6f-166">Ruft den lexikalischen Stammg√ºltigkeitsbereich f√ºr die aktuelle Methode ab.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-166">Gets the root lexical scope for the current method.</span></span> <span data-ttu-id="6cb6f-167">Dieser G√ºltigkeitsbereich umfasst die gesamte Methode.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-167">This scope encloses the entire method.</span></span></summary>
        <value><span data-ttu-id="6cb6f-168">Der lexikalische Stammg√ºltigkeitsbereich schlie√üt die gesamte Methode ein.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-168">The root lexical scope that encloses the entire method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootScopeInternal">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScopeInternal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolScope RootScopeInternal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RootScopeInternal () As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolScope ^ RootScopeInternal();" />
      <MemberSignature Language="F#" Value="abstract member RootScopeInternal : unit -&gt; System.Diagnostics.SymbolStore.ISymbolScope&#xA;override this.RootScopeInternal : unit -&gt; System.Diagnostics.SymbolStore.ISymbolScope" Usage="symMethod.RootScopeInternal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb6f-169">Ruft den lexikalischen Stammg√ºltigkeitsbereich f√ºr die aktuelle Methode ab.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-169">Gets the root lexical scope for the current method.</span></span> <span data-ttu-id="6cb6f-170">Dieser G√ºltigkeitsbereich umfasst die gesamte Methode.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-170">This scope encloses the entire method.</span></span></summary>
        <returns><span data-ttu-id="6cb6f-171">Der lexikalische Stammg√ºltigkeitsbereich schlie√üt die gesamte Methode ein.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-171">The root lexical scope that encloses the entire method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequencePointCount">
      <MemberSignature Language="C#" Value="public virtual int SequencePointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SequencePointCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.SequencePointCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SequencePointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SequencePointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SequencePointCount : int" Usage="System.Diagnostics.SymbolStore.SymMethod.SequencePointCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb6f-172">Ruft die Anzahl der Sequenzpunkte in der Methode ab.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-172">Gets a count of the sequence points in the method.</span></span></summary>
        <value><span data-ttu-id="6cb6f-173">Die Anzahl der Sequenzpunkte in der Methode.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-173">The count of the sequence points in the method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.SymbolToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SymbolStore.SymbolToken Token" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As SymbolToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::SymbolToken Token { System::Diagnostics::SymbolStore::SymbolToken get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.Diagnostics.SymbolStore.SymbolToken" Usage="System.Diagnostics.SymbolStore.SymMethod.Token" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Diagnostics.SymbolStore.ISymbolMethod.Token</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.SymbolToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb6f-174">Ruft das <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> mit den Metadaten f√ºr die aktuelle Methode ab.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-174">Gets the <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> containing the metadata for the current method.</span></span></summary>
        <value><span data-ttu-id="6cb6f-175">Das Metadatentoken f√ºr die aktuelle Methode.</span><span class="sxs-lookup"><span data-stu-id="6cb6f-175">The metadata token for the current method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
