<Type Name="SymMethod" FullName="System.Diagnostics.SymbolStore.SymMethod">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ecc25cb45a1ff4279493ed6fd6a934879f5e4569" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymMethod : System.Diagnostics.SymbolStore.SymMethodBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolMethod" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymMethod extends System.Diagnostics.SymbolStore.SymMethodBase implements class System.Diagnostics.SymbolStore.ISymbolMethod, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymMethod" />
  <TypeSignature Language="VB.NET" Value="Public Class SymMethod&#xA;Inherits SymMethodBase&#xA;Implements IDisposable, ISymbolMethod" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymMethod : System::Diagnostics::SymbolStore::SymMethodBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolMethod" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymMethodBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolMethod</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6a91e-101">Stellt eine Methode in einem Symbolspeicher dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a91e-101">Represents a method within a symbol store.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a91e-102">Die <xref:System.Diagnostics.SymbolStore.SymMethod> Klasse bietet ausschließlich Zugriff auf die symbolbezogenen Attribute einer Methode, wie z. B. Sequenzpunkte lexikalischen Gültigkeitsbereiche und Parameterinformationen.</span><span class="sxs-lookup"><span data-stu-id="6a91e-102">The <xref:System.Diagnostics.SymbolStore.SymMethod> class provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information.</span></span> <span data-ttu-id="6a91e-103">Verwenden der <xref:System.Reflection> Klassen, die Typ-bezogene Attribute einer Methode zu lesen.</span><span class="sxs-lookup"><span data-stu-id="6a91e-103">Use the <xref:System.Reflection> classes to read the type-related attributes of a method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymMethod (System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod* pMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymMethod(System::Diagnostics::SymbolStore::Private::ISymUnmanagedMethod* pMethod);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pMethod" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*" />
      </Parameters>
      <Docs>
        <param name="pMethod">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-104">Gibt alle von der aktuellen Instanz der <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Klasse verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-104">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-105">Gibt alle von der aktuellen Instanz der <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Klasse verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-105">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="6a91e-106">
            <see langword="true" />, um verwaltete und nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-106">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a91e-107">Wird von der <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" />-Methode und der <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" />-Methode aufgerufen, um die verwalteten und nicht verwalteten von der aktuellen Instanz der <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />-Klasse verwendeten Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-107">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a91e-108">Diese Methode wird aufgerufen, nur von den öffentlichen <xref:System.Diagnostics.SymbolStore.SymMethod.Dispose%2A> und <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize%2A> -Methoden für diese Methode nicht direkt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6a91e-108">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymMethod.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymMethod ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-109">Gibt nicht verwaltete Ressourcen frei und führt andere Bereinigungsvorgänge durch, bevor die <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> durch die Garbage Collection wieder zugänglich gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-109">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a91e-110">Diese Methode überschreibt <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="6a91e-110">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="6a91e-111">Diese Methode sollte nicht von Anwendungscode aufgerufen werden. ein Objekt `Finalize` Methode wird automatisch während der Garbagecollection aufgerufen, durch einen Aufruf von seiner Finalisierung verfolgt, durch den Garbage Collector deaktiviert wurde die <xref:System.GC.SuppressFinalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="6a91e-111">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespace () As ISymbolNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolNamespace ^ GetNamespace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-112">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-112">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a91e-113">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-113">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6a91e-114">In allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-114">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOffset">
      <MemberSignature Language="C#" Value="public virtual int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffset(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOffset (document As ISymbolDocument, line As Integer, column As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetOffset(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="6a91e-115">Das Dokument, für das der Offset angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-115">The document for which the offset is requested.</span>
          </span>
        </param>
        <param name="line">
          <span data-ttu-id="6a91e-116">Die Dokumentzeile, für die der Offset angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-116">The document line for which the offset is requested.</span>
          </span>
        </param>
        <param name="column">
          <span data-ttu-id="6a91e-117">Die Dokumentspalte, für die der Offset angefordert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-117">The document column for which the offset is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a91e-118">Ruft den MSIL-Offset (Microsoft Intermediate Language) innerhalb der Methode ab, der der angegebenen Position entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-118">Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a91e-119">Der IL-Offset in der aktuellen Methode an der angegebenen Position im Dokument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-119">The IL offset within the current method of the specified location in the document.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetParameters () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-120">Ruft die Parameter für die aktuelle Methode ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-120">Gets the parameters for the current method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a91e-121">Das Array von Parametern für die aktuelle Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-121">The array of parameters for the current method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a91e-122">Die Parameter werden in der Reihenfolge zurückgegeben, dass sie in der Signatur der Methode definiert sind.</span><span class="sxs-lookup"><span data-stu-id="6a91e-122">The parameters are returned in the order that they are defined within the signature of the method.</span></span> <span data-ttu-id="6a91e-123">Das zurückgegebene Array ist leer, wenn die Methode keine Parameter.</span><span class="sxs-lookup"><span data-stu-id="6a91e-123">The returned array is empty if the method does not have parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRanges">
      <MemberSignature Language="C#" Value="public virtual int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRanges(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRanges (document As ISymbolDocument, line As Integer, column As Integer) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ GetRanges(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="6a91e-124">Das Dokument, für das die IL-Offsetbereiche angefordert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-124">The document for which the IL offset ranges are requested.</span>
          </span>
        </param>
        <param name="line">
          <span data-ttu-id="6a91e-125">Die Dokumentzeile, für die die IL-Offsetbereiche angefordert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-125">The document line for which the IL offset ranges are requested.</span>
          </span>
        </param>
        <param name="column">
          <span data-ttu-id="6a91e-126">Die Dokumentspalte, für die die IL-Offsetbereiche angefordert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-126">The document column for which the IL offset ranges are requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a91e-127">Ruft ein Array von Start-/Endoffsetpaaren ab, die den Bereichen der MSIL-Offsets (Microsoft Intermediate Language) entsprechen, die von einer angegebenen Position innerhalb dieser Methode abgedeckt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-127">Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) offsets that a given position covers within this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a91e-128">Ein Array von IL-Start-/Endoffsetpaaren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-128">An array of start and end IL offset pairs.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a91e-129">Das Array ist ein Array von ganzen Zahlen im Format {{start1, end1}, {start2, end2}...}, wobei jedes Paar eine IL-Offsetbereich innerhalb der Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="6a91e-129">The array is an array of integers in the format {{start1, end1}, {start2, end2}...}, where each pair represents an IL offset range within the method.</span></span> <span data-ttu-id="6a91e-130">Die Anzahl der Bereiche ist die Länge des Arrays geteilt durch 2.</span><span class="sxs-lookup"><span data-stu-id="6a91e-130">The number of ranges is the length of the array divided by 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolScope GetScope(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScope (offset As Integer) As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolScope ^ GetScope(int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="6a91e-131">Der IL-Offset innerhalb der Methode, der gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-131">The IL offset within the method to look up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a91e-132">Gibt den umfassendsten lexikalischen Gültigkeitsbereich zurück, wenn ein Offset innerhalb einer Methode angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-132">Returns the most enclosing lexical scope corresponding to an offset within a method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a91e-133">Der umfassendste lexikalische Gültigkeitsbereich für den angegebenen IL-Offset innerhalb der Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-133">The most enclosing lexical scope for the given IL offset within the method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a91e-134">Sie können die <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> Methode, um die lokalen Variablen starten.</span><span class="sxs-lookup"><span data-stu-id="6a91e-134">You can use the <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> method to start local variable searches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSequencePoints">
      <MemberSignature Language="C#" Value="public virtual void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSequencePoints(int32[] offsets, class System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int32[] lines, int32[] columns, int32[] endLines, int32[] endColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetSequencePoints (offsets As Integer(), documents As ISymbolDocument(), lines As Integer(), columns As Integer(), endLines As Integer(), endColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetSequencePoints(cli::array &lt;int&gt; ^ offsets, cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ documents, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns, cli::array &lt;int&gt; ^ endLines, cli::array &lt;int&gt; ^ endColumns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsets" Type="System.Int32[]" />
        <Parameter Name="documents" Type="System.Diagnostics.SymbolStore.ISymbolDocument[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
        <Parameter Name="endLines" Type="System.Int32[]" />
        <Parameter Name="endColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="offsets">
          <span data-ttu-id="6a91e-135">Ein Array, in dem die IL-Offsets vom Anfang der Methode für die Sequenzpunkte gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-135">An array in which to store the IL offsets from the beginning of the method for the sequence points.</span>
          </span>
        </param>
        <param name="documents">
          <span data-ttu-id="6a91e-136">Ein Array, in dem die Dokumente gespeichert werden sollen, in denen sich die Sequenzpunkte befinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-136">An array in which to store the  documents in which the sequence points are located.</span>
          </span>
        </param>
        <param name="lines">
          <span data-ttu-id="6a91e-137">Ein Array, in dem die Zeilen in den Dokumenten gespeichert werden sollen, in denen sich die Sequenzpunkte befinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-137">An array in which to store the lines in the documents at which the sequence points are located.</span>
          </span>
        </param>
        <param name="columns">
          <span data-ttu-id="6a91e-138">Ein Array, in dem die Spalten in den Dokumenten gespeichert werden sollen, in denen sich die Sequenzpunkte befinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-138">An array in which to store the columns in the documents at which the sequence points are located.</span>
          </span>
        </param>
        <param name="endLines">
          <span data-ttu-id="6a91e-139">Das Array von Zeilen in den Dokumenten, in denen die Sequenzpunkte enden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-139">The array of lines in the documents at which the sequence points end.</span>
          </span>
        </param>
        <param name="endColumns">
          <span data-ttu-id="6a91e-140">Das Array von Spalten in den Dokumenten, in denen die Sequenzpunkte enden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-140">The array of columns in the documents at which the sequence points end.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a91e-141">Ruft die Sequenzpunkte für die aktuelle Methode ab und speichert die Informationen in den angegebenen Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-141">Gets the sequence points for the current method and stores the information in the specified arrays.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a91e-142">Zuordnung zwischen Speicherorte für Quelldateien und IL-Offsets werden Sequenzpunkte verwendet.</span><span class="sxs-lookup"><span data-stu-id="6a91e-142">Sequence points are used to map between source file locations and IL offsets.</span></span>  <span data-ttu-id="6a91e-143">Jeder Sequenzpunkt besteht aus einem IL-Offset und quellregion Datei gemäß der Start- und Ende einer Zeile/Spalte Zahlen relativ zur ein <xref:System.Diagnostics.SymbolStore.ISymbolDocument> Objekt.</span><span class="sxs-lookup"><span data-stu-id="6a91e-143">Each sequence point consists of an IL offset, and source file region specified by start and end line/column numbers relative to an <xref:System.Diagnostics.SymbolStore.ISymbolDocument> object.</span></span>  <span data-ttu-id="6a91e-144">Jedes Element an einem bestimmten Index jedes Arrays entspricht einem bestimmten Sequenzpunkt.</span><span class="sxs-lookup"><span data-stu-id="6a91e-144">Each element at a specific index of every array corresponds to a specific sequence point.</span></span> <span data-ttu-id="6a91e-145">Der Aufrufer muss vorab zugeordnete Arrays, um die Informationen zurückgegeben werden angeben.</span><span class="sxs-lookup"><span data-stu-id="6a91e-145">The caller must supply pre-allocated arrays to hold the information to be returned.</span></span> <span data-ttu-id="6a91e-146">Alle Werte in den Arrays werden überschrieben.</span><span class="sxs-lookup"><span data-stu-id="6a91e-146">Any values in the arrays are overwritten.</span></span> <span data-ttu-id="6a91e-147">Verwendung <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> zum Abrufen der Anzahl aller Sequenzpunkte und Arrays der richtigen Größe zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="6a91e-147">Use <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> to retrieve the count of all sequence points and create arrays of the proper size.</span></span> <span data-ttu-id="6a91e-148">Die Sequenzpunkte per Offset sortiert werden und gelten für alle Dokumente in der Methode.</span><span class="sxs-lookup"><span data-stu-id="6a91e-148">The sequence points are sorted by offset and are for all documents in the method.</span></span> <span data-ttu-id="6a91e-149"><xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> überprüft die Größe der einzelnen Arrays und platziert die Informationen in jeder Sequenz.</span><span class="sxs-lookup"><span data-stu-id="6a91e-149"><xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> verifies the size of each array and places the sequence point information into each.</span></span> <span data-ttu-id="6a91e-150">Wenn Array `null`, die Daten für das Array werden nicht zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="6a91e-150">If any array is `null`, the data for that array is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceStartEnd">
      <MemberSignature Language="C#" Value="public virtual bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetSourceStartEnd(class System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int32[] lines, int32[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceStartEnd (docs As ISymbolDocument(), lines As Integer(), columns As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetSourceStartEnd(cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ docs, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="docs" Type="System.Diagnostics.SymbolStore.ISymbolDocument[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="docs">
          <span data-ttu-id="6a91e-151">Dieser Parameter wird nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-151">This parameter is not used.</span>
          </span>
        </param>
        <param name="lines">
          <span data-ttu-id="6a91e-152">Dieser Parameter wird nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-152">This parameter is not used.</span>
          </span>
        </param>
        <param name="columns">
          <span data-ttu-id="6a91e-153">Dieser Parameter wird nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-153">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a91e-154">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-154">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a91e-155">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-155">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6a91e-156">In allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-156">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RootScope">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SymbolStore.ISymbolScope RootScope" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.RootScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootScope As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::ISymbolScope ^ RootScope { System::Diagnostics::SymbolStore::ISymbolScope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-157">Ruft den lexikalischen Stammgültigkeitsbereich für die aktuelle Methode ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-157">Gets the root lexical scope for the current method.</span>
          </span>
          <span data-ttu-id="6a91e-158">Dieser Gültigkeitsbereich umfasst die gesamte Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-158">This scope encloses the entire method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a91e-159">Der lexikalische Stammgültigkeitsbereich, der die gesamte Methode einschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-159">The root lexical scope that encloses the entire method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootScopeInternal">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScopeInternal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolScope RootScopeInternal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RootScopeInternal () As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolScope ^ RootScopeInternal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-160">Ruft den lexikalischen Stammgültigkeitsbereich für die aktuelle Methode ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-160">Gets the root lexical scope for the current method.</span>
          </span>
          <span data-ttu-id="6a91e-161">Dieser Gültigkeitsbereich umfasst die gesamte Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-161">This scope encloses the entire method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a91e-162">Der lexikalische Stammgültigkeitsbereich, der die gesamte Methode einschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-162">The root lexical scope that encloses the entire method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequencePointCount">
      <MemberSignature Language="C#" Value="public virtual int SequencePointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SequencePointCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.SequencePointCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SequencePointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SequencePointCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-163">Ruft die Anzahl der Sequenzpunkte in der Methode ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-163">Gets a count of the sequence points in the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a91e-164">Die Anzahl der Sequenzpunkte in der Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-164">The count of the sequence points in the method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.SymbolToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SymbolStore.SymbolToken Token" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As SymbolToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::SymbolToken Token { System::Diagnostics::SymbolStore::SymbolToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.SymbolToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a91e-165">Ruft das <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> mit den Metadaten für die aktuelle Methode ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-165">Gets the <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> containing the metadata for the current method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a91e-166">Das Metadatentoken für die aktuelle Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a91e-166">The metadata token for the current method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>