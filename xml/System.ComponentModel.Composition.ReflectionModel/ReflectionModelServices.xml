<Type Name="ReflectionModelServices" FullName="System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices">
  <TypeSignature Language="C#" Value="public static class ReflectionModelServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ReflectionModelServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
  <TypeSignature Language="VB.NET" Value="Public Class ReflectionModelServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReflectionModelServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="da038-101">Stellt Erweiterungsmethoden zum Erstellen und Abrufen reflektionsbasierter Parts bereit.</span><span class="sxs-lookup"><span data-stu-id="da038-101">Provides extension methods to create and retrieve reflection-based parts.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateExportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ExportDefinition CreateExportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo exportingMember, string contractName, Lazy&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ExportDefinition CreateExportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo exportingMember, string contractName, class System.Lazy`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; metadata, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateExportDefinition (exportingMember As LazyMemberInfo, contractName As String, metadata As Lazy(Of IDictionary(Of String, Object)), origin As ICompositionElement) As ExportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ExportDefinition ^ CreateExportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo exportingMember, System::String ^ contractName, Lazy&lt;System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ metadata, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ExportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="metadata" Type="System.Lazy&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="exportingMember"><span data-ttu-id="da038-102">Der zu exportierende Member.</span><span class="sxs-lookup"><span data-stu-id="da038-102">The member to export.</span></span></param>
        <param name="contractName"><span data-ttu-id="da038-103">Der f端r den Export zu verwendende Vertragsname.</span><span class="sxs-lookup"><span data-stu-id="da038-103">The contract name to use for the export.</span></span></param>
        <param name="metadata"><span data-ttu-id="da038-104">Die Metadaten f端r den Export.</span><span class="sxs-lookup"><span data-stu-id="da038-104">The metadata for the export.</span></span></param>
        <param name="origin"><span data-ttu-id="da038-105">Das Objekt, aus dem der Export stammt.</span><span class="sxs-lookup"><span data-stu-id="da038-105">The object that the export originates from.</span></span></param>
        <summary><span data-ttu-id="da038-106">Erstellt aus dem angegebenen Member eine Exportdefinition mit den angegebenen Werten f端r Vertragsname, Metadaten und Ursprung.</span><span class="sxs-lookup"><span data-stu-id="da038-106">Creates an export definition from the specified member, with the specified contract name, metadata, and origin.</span></span></summary>
        <returns><span data-ttu-id="da038-107">Eine aus den angegebenen Parametern erstellte Exportdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-107">An export definition created from the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateImportDefinition">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da038-108">Erstellt eine Importdefinition f端r einen Member oder einen Parameter.</span><span class="sxs-lookup"><span data-stu-id="da038-108">Creates an import definition for a member or parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy&lt;System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (parameter As Lazy(Of ParameterInfo), contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, requiredCreationPolicy As CreationPolicy, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ parameter, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Lazy&lt;System.Reflection.ParameterInfo&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="da038-109">Der zu importierende Parameter.</span><span class="sxs-lookup"><span data-stu-id="da038-109">The parameter to import.</span></span></param>
        <param name="contractName"><span data-ttu-id="da038-110">Der f端r den Import zu verwendende Vertragsname.</span><span class="sxs-lookup"><span data-stu-id="da038-110">The contract name to use for the import.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="da038-111">Die erforderliche Typidentit辰t f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-111">The required type identity for the import.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="da038-112">Die erforderlichen Metadaten f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-112">The required metadata for the import.</span></span></param>
        <param name="cardinality"><span data-ttu-id="da038-113">Die Kardinalit辰t des Imports.</span><span class="sxs-lookup"><span data-stu-id="da038-113">The cardinality of the import.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="da038-114">Einer der Enumerationswerte, der die Richtlinie zur Importerstellung angibt.</span><span class="sxs-lookup"><span data-stu-id="da038-114">One of the enumeration values that specifies the import's creation policy.</span></span></param>
        <param name="origin"><span data-ttu-id="da038-115">Das Objekt, in das importiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="da038-115">The object to import into.</span></span></param>
        <summary><span data-ttu-id="da038-116">Erstellt f端r den angegebenen Parameter eine Importdefinition mit den angegebenen Werten f端r Vertragsname, Typidentit辰t, Importmetadaten, Kardinalit辰t und Erstellungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="da038-116">Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.</span></span></summary>
        <returns><span data-ttu-id="da038-117">Eine aus den angegebenen Parametern erstellte Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-117">An import definition created from the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, requiredCreationPolicy As CreationPolicy, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember"><span data-ttu-id="da038-118">Der zu importierende Member.</span><span class="sxs-lookup"><span data-stu-id="da038-118">The member to import into.</span></span></param>
        <param name="contractName"><span data-ttu-id="da038-119">Der f端r den Import zu verwendende Vertragsname.</span><span class="sxs-lookup"><span data-stu-id="da038-119">The contract name to use for the import.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="da038-120">Die erforderliche Typidentit辰t f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-120">The required type identity for the import.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="da038-121">Die erforderlichen Metadaten f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-121">The required metadata for the import.</span></span></param>
        <param name="cardinality"><span data-ttu-id="da038-122">Die Kardinalit辰t des Imports.</span><span class="sxs-lookup"><span data-stu-id="da038-122">The cardinality of the import.</span></span></param>
        <param name="isRecomposable">
          <span data-ttu-id="da038-123"><see langword="true" />, um anzugeben, dass der Import erneut erstellt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-123"><see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="da038-124">Einer der Enumerationswerte, der die Richtlinie zur Importerstellung angibt.</span><span class="sxs-lookup"><span data-stu-id="da038-124">One of the enumeration values that specifies the import's creation policy.</span></span></param>
        <param name="origin"><span data-ttu-id="da038-125">Das Objekt, in das importiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="da038-125">The object to import into.</span></span></param>
        <summary><span data-ttu-id="da038-126">Erstellt f端r den angegebenen Member eine Importdefinition mit den angegebenen Werten f端r Vertragsname, Typidentit辰t, Importmetadaten, Kardinalit辰t, Neuerstellungsrichtlinie und Erstellungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="da038-126">Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.</span></span></summary>
        <returns><span data-ttu-id="da038-127">Eine aus den angegebenen Parametern erstellte Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-127">An import definition created from the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy&lt;System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (parameter As Lazy(Of ParameterInfo), contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ parameter, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Lazy&lt;System.Reflection.ParameterInfo&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="da038-128">Der zu importierende Parameter.</span><span class="sxs-lookup"><span data-stu-id="da038-128">The parameter to import.</span></span></param>
        <param name="contractName"><span data-ttu-id="da038-129">Der f端r den Import zu verwendende Vertragsname.</span><span class="sxs-lookup"><span data-stu-id="da038-129">The contract name to use for the import.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="da038-130">Die erforderliche Typidentit辰t f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-130">The required type identity for the import.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="da038-131">Die erforderlichen Metadaten f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-131">The required metadata for the import.</span></span></param>
        <param name="cardinality"><span data-ttu-id="da038-132">Die Kardinalit辰t des Imports.</span><span class="sxs-lookup"><span data-stu-id="da038-132">The cardinality of the import.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="da038-133">Einer der Enumerationswerte, der die Richtlinie zur Importerstellung angibt.</span><span class="sxs-lookup"><span data-stu-id="da038-133">One of the enumeration values that specifies the import's creation policy.</span></span></param>
        <param name="metadata"><span data-ttu-id="da038-134">Die Vertragsmetadaten.</span><span class="sxs-lookup"><span data-stu-id="da038-134">The contract metadata</span></span></param>
        <param name="isExportFactory">
          <span data-ttu-id="da038-135"><see langword="true" />, um anzugeben, dass der Import eine <see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> darstellt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-135"><see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="origin"><span data-ttu-id="da038-136">Das Objekt, in das importiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="da038-136">The object to import into.</span></span></param>
        <summary><span data-ttu-id="da038-137">Erstellt f端r den angegebenen Parameter eine Importdefinition mit den angegebenen Werten f端r Vertragsname, Typidentit辰t, Import- und Vertragsmetadaten, Kardinalit辰t und Erstellungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="da038-137">Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.</span></span></summary>
        <returns><span data-ttu-id="da038-138">Eine aus den angegebenen Parametern erstellte Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-138">An import definition created from the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember"><span data-ttu-id="da038-139">Der zu importierende Member.</span><span class="sxs-lookup"><span data-stu-id="da038-139">The member to import into.</span></span></param>
        <param name="contractName"><span data-ttu-id="da038-140">Der f端r den Import zu verwendende Vertragsname.</span><span class="sxs-lookup"><span data-stu-id="da038-140">The contract name to use for the import.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="da038-141">Die erforderliche Typidentit辰t f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-141">The required type identity for the import.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="da038-142">Die erforderlichen Metadaten f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-142">The required metadata for the import.</span></span></param>
        <param name="cardinality"><span data-ttu-id="da038-143">Die Kardinalit辰t des Imports.</span><span class="sxs-lookup"><span data-stu-id="da038-143">The cardinality of the import.</span></span></param>
        <param name="isRecomposable">
          <span data-ttu-id="da038-144"><see langword="true" />, um anzugeben, dass der Import erneut erstellt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-144"><see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="da038-145">Einer der Enumerationswerte, der die Richtlinie zur Importerstellung angibt.</span><span class="sxs-lookup"><span data-stu-id="da038-145">One of the enumeration values that specifies the import's creation policy.</span></span></param>
        <param name="metadata"><span data-ttu-id="da038-146">Die Vertragsmetadaten.</span><span class="sxs-lookup"><span data-stu-id="da038-146">The contract metadata.</span></span></param>
        <param name="isExportFactory">
          <span data-ttu-id="da038-147"><see langword="true" />, um anzugeben, dass der Import eine <see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> darstellt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-147"><see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="origin"><span data-ttu-id="da038-148">Das Objekt, in das importiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="da038-148">The object to import into.</span></span></param>
        <summary><span data-ttu-id="da038-149">Erstellt f端r den angegebenen Member eine Importdefinition mit den angegebenen Werten f端r Vertragsname, Typidentit辰t, Import- und Vertragsmetadaten, Kardinalit辰t, Neuerstellungsrichtlinie und Erstellungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="da038-149">Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.</span></span></summary>
        <returns><span data-ttu-id="da038-150">Eine aus den angegebenen Parametern erstellte Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-150">An import definition created from the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, isPreRequisite As Boolean, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPreRequisite" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember"><span data-ttu-id="da038-151">Der zu importierende Member.</span><span class="sxs-lookup"><span data-stu-id="da038-151">The member to import into.</span></span></param>
        <param name="contractName"><span data-ttu-id="da038-152">Der f端r den Import zu verwendende Vertragsname.</span><span class="sxs-lookup"><span data-stu-id="da038-152">The contract name to use for the import.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="da038-153">Die erforderliche Typidentit辰t f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-153">The required type identity for the import.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="da038-154">Die erforderlichen Metadaten f端r den Import.</span><span class="sxs-lookup"><span data-stu-id="da038-154">The required metadata for the import.</span></span></param>
        <param name="cardinality"><span data-ttu-id="da038-155">Die Kardinalit辰t des Imports.</span><span class="sxs-lookup"><span data-stu-id="da038-155">The cardinality of the import.</span></span></param>
        <param name="isRecomposable">
          <span data-ttu-id="da038-156"><see langword="true" />, um anzugeben, dass der Import erneut erstellt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-156"><see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span></span></param>
        <param name="isPreRequisite">
          <span data-ttu-id="da038-157"><see langword="true" />, um anzugeben, dass der Import eine erforderliche Komponente ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-157"><see langword="true" /> to indicate that the import is a prerequisite; otherwise, <see langword="false" />.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="da038-158">Einer der Enumerationswerte, der die Richtlinie zur Importerstellung angibt.</span><span class="sxs-lookup"><span data-stu-id="da038-158">One of the enumeration values that specifies the import's creation policy.</span></span></param>
        <param name="metadata"><span data-ttu-id="da038-159">Die Vertragsmetadaten.</span><span class="sxs-lookup"><span data-stu-id="da038-159">The contract metadata.</span></span></param>
        <param name="isExportFactory">
          <span data-ttu-id="da038-160"><see langword="true" />, um anzugeben, dass der Import eine <see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> darstellt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-160"><see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="origin"><span data-ttu-id="da038-161">Das Objekt, in das importiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="da038-161">The object to import into.</span></span></param>
        <summary><span data-ttu-id="da038-162">Erstellt f端r den angegebenen Member eine Importdefinition mit den angegebenen Werten f端r Vertragsname, Typidentit辰t, Import- und Vertragsmetadaten, Kardinalit辰t, Neuerstellungsrichtlinie und Erstellungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="da038-162">Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.</span></span></summary>
        <returns><span data-ttu-id="da038-163">Eine aus den angegebenen Parametern erstellte Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-163">An import definition created from the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Lazy&lt;Type&gt; partType, bool isDisposalRequired, Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt; imports, Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; exports, Lazy&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Lazy`1&lt;class System.Type&gt; partType, bool isDisposalRequired, class System.Lazy`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt; imports, class System.Lazy`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; exports, class System.Lazy`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; metadata, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartDefinition (partType As Lazy(Of Type), isDisposalRequired As Boolean, imports As Lazy(Of IEnumerable(Of ImportDefinition)), exports As Lazy(Of IEnumerable(Of ExportDefinition)), metadata As Lazy(Of IDictionary(Of String, Object)), origin As ICompositionElement) As ComposablePartDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Lazy&lt;Type ^&gt; ^ partType, bool isDisposalRequired, Lazy&lt;System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ImportDefinition ^&gt; ^&gt; ^ imports, Lazy&lt;System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ exports, Lazy&lt;System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ metadata, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partType" Type="System.Lazy&lt;System.Type&gt;" />
        <Parameter Name="isDisposalRequired" Type="System.Boolean" />
        <Parameter Name="imports" Type="System.Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt;" />
        <Parameter Name="exports" Type="System.Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;" />
        <Parameter Name="metadata" Type="System.Lazy&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="partType"><span data-ttu-id="da038-164">Der Typ des Parts.</span><span class="sxs-lookup"><span data-stu-id="da038-164">The type of the part.</span></span></param>
        <param name="isDisposalRequired">
          <span data-ttu-id="da038-165"><see langword="true" />, wenn das Part eine Freigabe erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-165"><see langword="true" /> if the part requires disposal; otherwise, <see langword="false" />.</span></span></param>
        <param name="imports"><span data-ttu-id="da038-166">Eine Auflistung der Importe des Parts.</span><span class="sxs-lookup"><span data-stu-id="da038-166">A collection of the part's imports.</span></span></param>
        <param name="exports"><span data-ttu-id="da038-167">Eine Auflistung der Exporte des Parts.</span><span class="sxs-lookup"><span data-stu-id="da038-167">A collection of the part's exports.</span></span></param>
        <param name="metadata"><span data-ttu-id="da038-168">Die Metadaten des Parts.</span><span class="sxs-lookup"><span data-stu-id="da038-168">The part's metadata.</span></span></param>
        <param name="origin"><span data-ttu-id="da038-169">Der Ursprung des Parts.</span><span class="sxs-lookup"><span data-stu-id="da038-169">The part's origin.</span></span></param>
        <summary><span data-ttu-id="da038-170">Erstellt eine Partdefinition mit den angegebenen Werten f端r Parttyp, Importe, Exporte, Metadaten und Ursprung.</span><span class="sxs-lookup"><span data-stu-id="da038-170">Creates a part definition with the specified part type, imports, exports, metadata, and origin.</span></span></summary>
        <returns><span data-ttu-id="da038-171">Eine aus den angegebenen Parametern erstellte Partdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-171">A part definition created from the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportFactoryProductImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition GetExportFactoryProductImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition GetExportFactoryProductImportDefinition(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ GetExportFactoryProductImportDefinition(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition"><span data-ttu-id="da038-172">Die darzustellende Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-172">The import definition to represent.</span></span></param>
        <summary><span data-ttu-id="da038-173">Gibt die Darstellung einer Importdefinition als Exportfactoryprodukt zur端ck.</span><span class="sxs-lookup"><span data-stu-id="da038-173">Returns a representation of an import definition as an export factory product.</span></span></summary>
        <returns><span data-ttu-id="da038-174">Eine Darstellung der Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-174">The representation of the import definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportingMember">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetExportingMember (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetExportingMember(class System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo GetExportingMember(System::ComponentModel::Composition::Primitives::ExportDefinition ^ exportDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportDefinition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
      </Parameters>
      <Docs>
        <param name="exportDefinition"><span data-ttu-id="da038-175">Die zu untersuchende Exportdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-175">The export definition to examine.</span></span></param>
        <summary><span data-ttu-id="da038-176">Ruft den exportierten Member aus einer angegebenen Exportdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="da038-176">Gets the exporting member from a specified export definition.</span></span></summary>
        <returns><span data-ttu-id="da038-177">Der in der Exportdefinition angegebene Member.</span><span class="sxs-lookup"><span data-stu-id="da038-177">The member specified in the export definition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da038-178"><paramref name="exportDefinition" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="da038-178"><paramref name="exportDefinition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetImportingMember">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetImportingMember (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetImportingMember(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo GetImportingMember(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition"><span data-ttu-id="da038-179">Die zu untersuchende Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-179">The import definition to examine.</span></span></param>
        <summary><span data-ttu-id="da038-180">Ruft den importierten Member aus einer angegebenen Importdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="da038-180">Gets the importing member from a specified import definition.</span></span></summary>
        <returns><span data-ttu-id="da038-181">Der in der Importdefinition angegebene Member.</span><span class="sxs-lookup"><span data-stu-id="da038-181">The member specified in the import definition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da038-182"><paramref name="importDefinition" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="da038-182"><paramref name="importDefinition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetImportingParameter">
      <MemberSignature Language="C#" Value="public static Lazy&lt;System.Reflection.ParameterInfo&gt; GetImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; GetImportingParameter(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ GetImportingParameter(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;System.Reflection.ParameterInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition"><span data-ttu-id="da038-183">Die zu untersuchende Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-183">The import definition to examine.</span></span></param>
        <summary><span data-ttu-id="da038-184">Ruft den importierten Parameter aus einer angegebenen Importdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="da038-184">Gets the importing parameter from a specified import definition.</span></span></summary>
        <returns><span data-ttu-id="da038-185">Der in der Importdefinition angegebene Parameter.</span><span class="sxs-lookup"><span data-stu-id="da038-185">The parameter specified in the import definition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da038-186"><paramref name="importDefinition" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="da038-186"><paramref name="importDefinition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartType">
      <MemberSignature Language="C#" Value="public static Lazy&lt;Type&gt; GetPartType (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Lazy`1&lt;class System.Type&gt; GetPartType(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartType (partDefinition As ComposablePartDefinition) As Lazy(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Lazy&lt;Type ^&gt; ^ GetPartType(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
      </Parameters>
      <Docs>
        <param name="partDefinition"><span data-ttu-id="da038-187">Die zu untersuchende Partdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-187">The part definition to examine.</span></span></param>
        <summary><span data-ttu-id="da038-188">Ruft den Typ eines Parts aus einer angegebenen Partdefinition ab.</span><span class="sxs-lookup"><span data-stu-id="da038-188">Gets the type of a part from a specified part definition.</span></span></summary>
        <returns><span data-ttu-id="da038-189">Der Typ des definierten Parts.</span><span class="sxs-lookup"><span data-stu-id="da038-189">The type of the defined part.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da038-190"><paramref name="partDefinition" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="da038-190"><paramref name="partDefinition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDisposalRequired">
      <MemberSignature Language="C#" Value="public static bool IsDisposalRequired (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDisposalRequired(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDisposalRequired (partDefinition As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDisposalRequired(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
      </Parameters>
      <Docs>
        <param name="partDefinition"><span data-ttu-id="da038-191">Das zu untersuchende Part.</span><span class="sxs-lookup"><span data-stu-id="da038-191">The part to examine.</span></span></param>
        <summary><span data-ttu-id="da038-192">Bestimmt, ob das angegebene Part eine Freigabe erfordert.</span><span class="sxs-lookup"><span data-stu-id="da038-192">Determines whether the specified part requires disposal.</span></span></summary>
        <returns>
          <span data-ttu-id="da038-193"><see langword="true" />, wenn das Part eine Freigabe erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-193"><see langword="true" /> if the part requires disposal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da038-194"><paramref name="partDefinition" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="da038-194"><paramref name="partDefinition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsExportFactoryImportDefinition">
      <MemberSignature Language="C#" Value="public static bool IsExportFactoryImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsExportFactoryImportDefinition(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsExportFactoryImportDefinition(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition"><span data-ttu-id="da038-195">Die zu untersuchende Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-195">The import definition to check.</span></span></param>
        <summary><span data-ttu-id="da038-196">Gibt an, ob eine angegebene Importdefinition eine Exportfactory darstellt (<see cref="T:System.ComponentModel.Composition.ExportFactory`1" />- oder <see cref="T:System.ComponentModel.Composition.ExportFactory`2" />-Objekt).</span><span class="sxs-lookup"><span data-stu-id="da038-196">Indicates whether a specified import definition represents an export factory (<see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> or <see cref="T:System.ComponentModel.Composition.ExportFactory`2" /> object).</span></span></summary>
        <returns>
          <span data-ttu-id="da038-197"><see langword="true" />, wenn die angegebene Importdefinition eine Exportfactory darstellt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-197"><see langword="true" /> if the specified import definition represents an export factory; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImportingParameter">
      <MemberSignature Language="C#" Value="public static bool IsImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsImportingParameter(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsImportingParameter(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition"><span data-ttu-id="da038-198">Die zu untersuchende Importdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-198">The import definition to examine.</span></span></param>
        <summary><span data-ttu-id="da038-199">Bestimmt, ob eine Importdefinition einen Member oder einen Parameter darstellt.</span><span class="sxs-lookup"><span data-stu-id="da038-199">Determines whether an import definition represents a member or a parameter.</span></span></summary>
        <returns>
          <span data-ttu-id="da038-200"><see langword="true" />, wenn die Importdefinition einen Parameter darstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-200"><see langword="true" /> if the import definition represents a parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da038-201"><paramref name="importDefinition" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="da038-201"><paramref name="importDefinition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryMakeGenericPartDefinition">
      <MemberSignature Language="C#" Value="public static bool TryMakeGenericPartDefinition (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, System.Collections.Generic.IEnumerable&lt;Type&gt; genericParameters, out System.ComponentModel.Composition.Primitives.ComposablePartDefinition specialization);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryMakeGenericPartDefinition(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; genericParameters, [out] class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&amp; specialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryMakeGenericPartDefinition (partDefinition As ComposablePartDefinition, genericParameters As IEnumerable(Of Type), ByRef specialization As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryMakeGenericPartDefinition(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ genericParameters, [Runtime::InteropServices::Out] System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ % specialization);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
        <Parameter Name="genericParameters" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="specialization" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="partDefinition"><span data-ttu-id="da038-202">Die Partdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-202">The part definition.</span></span></param>
        <param name="genericParameters"><span data-ttu-id="da038-203">Eine Sammlung von Typen, um die generischen Parameter anzugeben.</span><span class="sxs-lookup"><span data-stu-id="da038-203">A collection of types to specify the generic parameters.</span></span></param>
        <param name="specialization"><span data-ttu-id="da038-204">Die R端ckgabe dieser Methode enth辰lt die spezielle Partdefinition.</span><span class="sxs-lookup"><span data-stu-id="da038-204">When this method returns, contains the specialized part definition.</span></span> <span data-ttu-id="da038-205">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="da038-205">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="da038-206">Gibt an, ob eine generische Partdefinition mit den bereitgestellten Parametern spezialisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="da038-206">Indicates whether a generic part definition can be specialized with the provided parameters.</span></span></summary>
        <returns>
          <span data-ttu-id="da038-207"><see langword="true" />, wenn die Spezialisierung erfolgreich ausgef端hrt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da038-207"><see langword="true" /> if the specialization succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>