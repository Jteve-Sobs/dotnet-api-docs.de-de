<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd1c7a21e8d552f971b992a4273e6034ed920c40" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70524541" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht den programmgesteuerten Zugriff auf das HTML-Element <see langword="&lt;form&gt;" /> auf dem Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.HtmlControls.HtmlForm> -Steuerelement ist ein Container für Server Steuerelemente auf einer Web Forms Seite. Alle Server <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelemente, die an den Server zurückgesendet werden, müssen zwischen den öffnenden und schließenden Tags eines-Steuer Elements platziert werden.  
  
> [!NOTE]
>  ASP.NET ermöglicht, dass nur <xref:System.Web.UI.HtmlControls.HtmlForm> ein einzelnes Steuerelement auf einer Web Forms Seite aktiv ist. Wenn auf einer Web Forms Seite mehr als <xref:System.Web.UI.HtmlControls.HtmlForm> ein aktives Steuerelement vorhanden ist, löst die Common Language Runtime eine <xref:System.Web.HttpException?displayProperty=nameWithType> Ausnahme aus, wenn Sie die Seite anfordern. Sie <xref:System.Web.UI.WebControls.MultiView> können jedoch ein-Steuerelement verwenden, bei dem jedes <xref:System.Web.UI.WebControls.View> - <xref:System.Web.UI.HtmlControls.HtmlForm> Objekt ein-Steuerelement <xref:System.Web.UI.WebControls.View> enthält, da immer nur eine aktiv ist.  
  
 Sie können das Verhalten des <xref:System.Web.UI.HtmlControls.HtmlForm> Steuer Elements steuern, indem Sie dessen Eigenschaften festlegen. Wenn Sie den Codierungstyp für die Formulardaten angeben möchten, <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> legen Sie die-Eigenschaft fest. Die Methode (`GET` oder `POST`), die ein Browser zum Senden von Formulardaten an den Server zur Verarbeitung verwendet, wird durch <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> Festlegen der-Eigenschaft angegeben.  
  
> [!CAUTION]
>  In der Standardeinstellung ist die <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A>-Eigenschaft auf `POST` festgelegt. Sie können den Wert dieser Eigenschaft in `GET`ändern, aber dadurch können die integrierten Zustands-und Post Back Dienste, die vom ASP.NET-Seiten Framework bereitgestellt werden, unterbricht werden.  
  
 Sie können Steuerelemente konfigurieren, die <xref:System.Web.UI.WebControls.IButtonControl> die-Schnittstelle implementieren, um Sie an eine andere Zielseite zu senden. Dies wird als Seiten übergreifende Bereitstellung bezeichnet. Weitere Informationen finden Sie unter [Cross-Page Posting in ASP.net Web Forms](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.HtmlControls.HtmlForm>finden Sie im <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> -Konstruktor.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlForm> -Klasse verwendet wird, um ein einfaches Formular zu erstellen.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Seiten übergreifendes Posting auf einer ASP.NET-Webseite</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.HtmlControls.HtmlForm> -Klasse zu erstellen und zu initialisieren.  
  
 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine <xref:System.Web.UI.HtmlControls.HtmlForm>Instanz von angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Die Literalzeichenfolge "Form".|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine neue Instanz des <xref:System.Web.UI.HtmlControls.HtmlForm> -Steuer Elements erstellen und auf der Webseite platzieren.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Aktionsattribut des HTML-Formulars ab oder legt es fest.</summary>
        <value>Das Aktionsattribut des HTML-Formulars. Der Standardwert ist <see cref="F:System.String.Empty" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden die <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> -Eigenschaft, wenn Sie die URL der ursprünglichen Anforderung neu schreiben, aber die ursprüngliche URL für das action-Attribut des HTML-Formulars beibehalten möchten. Legen Sie <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> die-Eigenschaft auf den Wert der URL fest, die Sie beibehalten möchten.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Steuerelementbezeichner ab, der von [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement generiert wird.</summary>
        <value>Der von [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] generierte Steuerelement Bezeichner <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> für das Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Namenskonflikte zu verhindern, wenn mehrere Instanzen eines Steuer Elements gerendert werden [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] , <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> generiert automatisch einen eindeutigen Wert für jedes Steuerelement auf einer Seite. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET-Steuerelement Identifikation</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue <see cref="T:System.Web.UI.ControlCollection" />-Auflistung für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Web.UI.ControlCollection" />, die die untergeordneten Serversteuerelemente des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelements enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das untergeordnete Steuerelement des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelements ab, das den Postback auslöst, wenn die EINGABETASTE gedrückt wird, oder legt dieses fest.</summary>
        <value>Die <see cref="P:System.Web.UI.Control.ID" /> des Button-Steuerelements, das als Standardschaltfläche angezeigt werden soll, wenn <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> geladen wird. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> der-Eigenschaft können Sie angeben, dass Benutzer ein Postback verursachen können, indem Sie die EINGABETASTE in einem Eingabe Steuerelement im Formular (z. b. in einem Textfeld) drücken. Sie können ein beliebiges Steuerelement, das von der <xref:System.Web.UI.WebControls.IButtonControl> -Schnittstelle abgeleitet wird, mit Ausnahme des <xref:System.Web.UI.WebControls.LinkButton> -Steuer Elements als Standard Wenn das Steuerelement, auf das von <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> der-Eigenschaft verwiesen wird <xref:System.Web.UI.WebControls.IButtonControl>, nicht <xref:System.InvalidOperationException> von abgeleitet ist, wird eine-Ausnahme ausgelöst.  
  
 Wenn Sie Masterseiten verwenden und die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> -Eigenschaft von einer Inhaltsseite festlegen, verwenden Sie die <xref:System.Web.UI.Control.UniqueID%2A> -Eigenschaft der <xref:System.Web.UI.WebControls.IButtonControl> Schaltfläche. Weitere Informationen zu Masterseiten finden Sie unter [ASP.net Master Pages](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> -Eigenschaft führt in den folgenden Szenarien möglicherweise nicht zu einem Postback:  
  
-   Drücken der EINGABETASTE, wenn sich der Fokus außerhalb der Eingabe Steuerelemente im Formular befindet. Es ist nicht garantiert, dass die Standardaktion für das Postback ausgelöst wird.  
  
-   Drücken der EINGABETASTE, wenn sich der Fokus in einem mehrzeiligen Textfeld befindet. In einem mehrzeiligen Textfeld ist das erwartete Verhalten, dass durch Drücken der EINGABETASTE im Textfeld eine neue Zeile erstellt wird. In einigen Browsern wird durch Drücken der EINGABETASTE in einem mehrzeiligen Textfeld ein Postback ausgelöst. Wenn Sie in diesem Fall die Eingabetaste verwenden möchten, um stattdessen eine neue Zeile zu erstellen, können Sie eine JavaScript-Funktion an das Eingabe Steuerelement anfügen. Das Skript sollte die EINGABETASTE erfassen und das Postback abbrechen. Beispielsweise können Sie die <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> Eigenschaften Auflistung verwenden, um ein Client Skript für das `onKeyPress` -Ereignis hinzuzufügen.  
  
-   Angeben eines <xref:System.Web.UI.WebControls.LinkButton> Steuer Elements als Standard Schaltfläche. Nur <xref:System.Web.UI.WebControls.Button> - <xref:System.Web.UI.WebControls.ImageButton> und-Steuerelemente werden unterstützt.  
  
-   Programm gesteuertes Ändern der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Eigenschaft während eines asynchronen Postbacks. Asynchrone Postbacks können auf einer Seite aktiviert werden, indem der Seite ein <xref:System.Web.UI.UpdatePanel> oder mehrere Steuerelemente hinzugefügt werden. Weitere Informationen finden Sie unter Übersicht über das [Update Panel-Steuer](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) Element und [Übersicht über das Seiten Rendering](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> -Eigenschaft festgelegt wird, um das Standard Steuerelement festzulegen, das ein Postback verursacht.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Steuerelement, auf das als Standardschaltfläche verwiesen wird, ist nicht vom Typ <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">Übersicht über ASP.net-Master Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Steuerelement im Formular ab, das als Steuerelement mit dem Eingabefokus angezeigt wird, wenn das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement geladen wird, oder legt dieses fest.</summary>
        <value>Die <see cref="P:System.Web.UI.Control.ClientID" /> des Steuerelements im Formular, das als Steuerelement mit dem Eingabefokus angezeigt wird, wenn das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement geladen wird. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> die-Eigenschaft, um auf das Steuerelement auf dem Formular zuzugreifen, das als Steuerelement <xref:System.Web.UI.HtmlControls.HtmlForm> mit Eingabefokus angezeigt wird, wenn das Steuerelement geladen wird. Steuerelemente, die ausgewählt werden können, werden mit einem visuellen Hinweis angezeigt, der darauf hinweist, dass Sie den Fokus haben. Beispielsweise wird ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement mit Fokus angezeigt, in dem die Einfügemarke positioniert ist.  
  
 Das Steuerelement mit Fokus kann auch mit der- <xref:System.Web.UI.Control.Focus%2A> Methode <xref:System.Web.UI.Page.SetFocus%2A> oder der-Methode festgelegt werden. Diese Methoden haben Vorrang vor der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> -Eigenschaft. Wenn eine dieser Methoden aufgerufen wird, um das Steuerelement mit dem Fokus festzulegen, wird <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> der Wert der Eigenschaft ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> -Eigenschaft festgelegt wird, um ein angegebenes Steuerelement in einem Formular als Steuerelement mit Eingabefokus anzuzeigen, wenn das Formular geladen wird. Beachten `Form1` Sie beim Rendern, dass die Einfügemarke in `TextBox1`positioniert `TextBox1` ist, was bedeutet, dass das Steuerelement mit dem Fokus ist.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Codierungstyp ab, den ein Browser für das Senden der Formulardaten an den Server verwendet, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Codierungstyp enthält. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass der Standardinhaltstyp des Browsers verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> die-Eigenschaft, um den Codierungstyp anzugeben, den ein Browser zum Zurücksenden von Daten an den Server verwendet.  
  
 In der folgenden Tabelle sind die allgemeinen Codierungs Typen aufgeführt.  
  
|Codierungstyp|Beschreibung|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Formulardaten werden als Name-Wert-Paare codiert. Dies ist das Standard Codierungsformat.|  
|Multipart/Form-Data|Formulardaten werden als Nachricht mit einem separaten Teil für jedes Steuerelement auf der Seite codiert.|  
|Text/Plain|Formulardaten werden im nur-Text-Format codiert, ohne Steuerzeichen oder Formatierungszeichen.|  
  
 Weitere Informationen zu Codierungs Typen finden Sie auf der [World Wide Web Consortium (W3C-Website](https://go.microsoft.com/fwlink/?linkid=37125)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> -Eigenschaft verwendet wird, um den Codierungstyp anzugeben, den der Browser zum Senden von Daten an den Server verwendet.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, wie ein Browser dem Server Formulardaten zur Verarbeitung übermittelt, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die angibt, wie ein Browser Formulardaten an den Server übermittelt. Der Standardwert ist <see langword="POST" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um anzugeben, wie der Browser Formulardaten zur Verarbeitung an den Server sendet. Die beiden gängigen Methoden, die von allen Browsern `GET` unter `POST`stützt werden, sind und.  
  
> [!CAUTION]
>  Sie können den Standardwert dieser Eigenschaft überschreiben und anstelle von `GET` `POST`die-Methode verwenden. Da `GET` Anforderungen jedoch eingeschränkt sind, wie viele Daten Sie enthalten dürfen, kann die Verwendung `GET` der-Methode in einigen Fällen dazu führen, dass die vom ASP.net page Framework bereitgestellten Funktionen für die Post Back-und Zustands Verwaltung fehlschlagen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> -Eigenschaft verwendet wird, um anzugeben, dass Formulardaten an den Server zurückgesendet werden.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Bezeichners für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement ab.</summary>
        <value>Eine Zeichenfolge, die den Namen des Bezeichners für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> die-Eigenschaft, um den eindeutigen Bezeichnernamen eines <xref:System.Web.UI.HtmlControls.HtmlForm> -Steuer Elements zu bestimmen. In dieser Implementierung gibt das erhalten dieser Eigenschaft den Wert der <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> -Eigenschaft zurück. Wenn Sie die-Eigenschaft festlegen, wird der-Eigenschaft jedoch kein Wert zugewiesen. Wenn Sie die-Eigenschaft festlegen, wird dieser Eigenschaft kein Wert zugewiesen <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> , da die-Eigenschaft denselben Wert wie <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> die-Eigenschaft aufweisen muss.  
  
> [!NOTE]
>  Das `name` -Attribut ist kein XHTML-kompatibles Attribut und wird unabhängig von der `xhtmlConformance` -Einstellung nicht von ASP.net gerendert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.net-und XHTML-Konformität</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die-Methode <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> von der-Methode benachrichtigt wird, müssen Webserver-Steuerelemente alle Initialisierungs Schritte ausführen, die zum Erstellen und Einrichten einer-Instanz erforderlich sind. In dieser Phase des Lebenszyklus des Server Steuer Elements muss der Ansichts Zustand des Steuer Elements noch aufgefüllt werden. Außerdem können Sie nicht auf andere Server Steuerelemente zugreifen, wenn diese Methode aufgerufen wird, unabhängig davon, ob es sich um ein untergeordnetes oder übergeordnetes Element dieses Steuer Elements handelt. Es ist nicht garantiert, dass andere Server Steuerelemente erstellt werden und für den Zugriff bereit sind.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.GridView.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, die <xref:System.Web.UI.HtmlControls.HtmlForm> die Funktionalität des Steuer Elements erweitern.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> die-Methode der Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen. Durch das Aufrufen der-Methode der <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> Basisklasse wird außerdem <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> sichergestellt, dass das-Steuerelement ordnungsgemäß als Webseiten Formular festgelegt ist und der Ansichts Zustand der Seite persistent ist.</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> -Methode wird direkt vor dem Rendern <xref:System.Web.UI.HtmlControls.HtmlForm> des-Steuer Elements aufgerufen. Wenn die <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> -Eigenschaft auf fest `true`gelegt ist <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> , registriert die Methode den Verweis auf die intelligente Navigations Skriptdatei, sodass Sie gerendert wird.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> -Eigenschaft wurde in ASP.net, Version 2,0, als veraltet markiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den gerenderten Inhalt empfängt.</param>
        <summary>Rendert das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement in das angegebene <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> -Methode rendert `<iframe>` ein HTML- <xref:System.Web.UI.Page.SmartNavigation%2A> Element, wenn die `true`-Eigenschaft auf festgelegt ist. Die <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> -Methode ruft die <xref:System.Web.UI.Control.Render%2A> Basis Methode auf.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, die <xref:System.Web.UI.HtmlControls.HtmlForm> die Funktionalität des Steuer Elements erweitern.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement wird nicht ohne einen Verweis auf die <see cref="T:System.Web.UI.Page" />-Instanz gerendert.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> die-Methode der <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Basisklasse aufgerufen wird, damit die untergeordneten Steuerelemente des Steuer Elements korrekt gerendert</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den gerenderten Inhalt empfängt.</param>
        <summary>Rendert die Attribute des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelements in das angegebene <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> -Methode verwendet <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> die-Methode, <xref:System.Web.UI.HtmlControls.HtmlForm> um die Attribute des Steuer Elements zu überprüfen und sicherzustellen, dass Sie im `<form>` Starttag eines HTML-Elements gerendert werden können.  
  
 Außerdem rendert <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> die-Methode `method`die `action`Attribute, `onsubmit` und des <xref:System.Web.UI.HtmlControls.HtmlForm> -Steuer Elements. Wenn die in der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> -Eigenschaft festgelegte Steuerelement-ID die <xref:System.Web.UI.WebControls.IButtonControl> -Schnitt <xref:System.InvalidOperationException> Stelle nicht implementiert, wird eine-Ausnahme ausgelöst.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, die <xref:System.Web.UI.HtmlControls.HtmlForm> die Funktionalität des Steuer Elements erweitern.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die in der <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />-Eigenschaft festgelegte Steuerelement-ID ist nicht vom Typ <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> die-Methode der <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Basisklasse aufgerufen wird, damit die Attribute des Steuer Elements korrekt gerendert werden.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den gerenderten Inhalt empfängt.</param>
        <summary>Rendert die untergeordneten Steuerelemente des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> -Methode rendert Client Skripts, um sicherzustellen, dass der Browser Fokus auf das <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> in der-Eigenschaft angegebene Steuerelement festgelegt ist  
  
> [!NOTE]
>  Ein Steuerelement, das <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> von der-Eigenschaft angegeben wird, hat Vorrang <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> vor einem von der-Eigenschaft angegebenen Steuerelement  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Die Webseite verfügt über mehr als ein serverseitiges <see langword="&lt;form&gt;" />-Tag.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> die-Methode der <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Basisklasse aufgerufen wird, damit die untergeordneten Steuerelemente des Steuer Elements korrekt gerendert</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Inhalt des Formularsteuerelements empfängt.</param>
        <summary>Rendert das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement in das angegebene <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> die-Methode der <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Basisklasse aufgerufen wird, damit das Steuerelement korrekt gerendert wird</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der angibt, ob auf dem Client deaktivierte Steuerelemente ihre Werte übermitteln müssen, oder legt diese fest. Damit können diese Steuerelemente ihren Wert nach dem Zurücksenden der Seite an den Server beibehalten.</summary>
        <value><see langword="true" />, wenn auf dem Client deaktivierte Steuerelemente ihre Werte übermitteln müssen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> die-Eigenschaft, um anzugeben, ob auf dem Client deaktivierte Steuerelemente zum Übermitteln Ihrer Werte bei der Seiten Zurücklegung erzwungen werden sollen. Dies ermöglicht es den deaktivierten Steuerelementen, ihre Werte beizubehalten, nachdem die Seite an den Server zurückgesendet wurde. Wenn die <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> -Eigenschaft auf `false`festgelegt ist, werden Steuerelemente im Formular, die mithilfe des Client Skripts deaktiviert wurden, nicht an den Server übermittelt, wenn die Seite das nächste Mal zurückgesendet wird. Folglich gehen alle Werte, die von den deaktivierten Steuerelementen gespeichert werden, verloren. Legen Sie die <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> -Eigenschaft auf `true`fest, damit die deaktivierten Steuerelemente ihre Werte beibehalten können, nachdem die Seite an den Server zurückgesendet wurde.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> -Eigenschaft eines Formulars auf `true` festgelegt wird, damit von Client Skripts deaktivierte Steuerelemente ihre Werte erhalten, nachdem die Seite an den Server zurückgesendet wurde. Wenn Sie in diesem Beispiel die <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> -Eigenschaft auf `false` festlegen und dann auf die Schaltfläche " **zurück** " klicken, wird der Text im HTML-Textfeld verloren, und das HTML-Kontrollkästchen ist nicht mehr ausgewählt.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Frame oder das Fenster ab, in dem die Ergebnisse der an den Server übermittelten Informationen angezeigt werden, oder legt diesen Frame oder das Fenster fest.</summary>
        <value>Das Browserfenster oder der Frame, in dem die Ergebnisse der an den Server gesendeten Informationen angezeigt werden. Der Standardwert ist eine leere Zeichenfolge (""), die das Fenster oder den Frame mit dem Fokus aktualisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> die-Eigenschaft, um das Zielfenster oder den Zielframe anzugeben, in dem die Ergebnisse der Informationen angezeigt werden, die an den Server gesendet werden. Das Umleiten der Ergebnisse der Informationen, die an den Server gesendet werden, ist eine erweiterte Aufgabe. Es wird nicht empfohlen, diese Eigenschaft für die Rücksendung zu verwenden.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Eigenschaft wird `target` als-Attribut gerendert. Das `target` -Attribut `form` für-Elemente ist in XHTML 1,1 nicht zulässig. Wenn das gerenderte Markup XHTML-Standards entsprechen muss oder den Barrierefreiheits Standards entsprechen muss, legen Sie die <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> -Eigenschaft daher nicht fest. Weitere Informationen finden Sie unter [XHTML-Standards in Visual Studio und ASP.net](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) und [Barrierefreiheit in Visual Studio und ASP.net](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 Der <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Wert muss mit einem Buchstaben im Bereich von a bis Z (ohne Beachtung der Groß-/Kleinschreibung) beginnen, mit Ausnahme der folgenden speziellen Werte, die mit einem Unterstrich beginnen.  
  
|Zielwert|Beschreibung|  
|------------------|-----------------|  
|`_blank`|Stellt den Inhalt in einem neuen Fenster ohne Frames dar.|  
|`_parent`|Stellt den Inhalt im unmittelbar übergeordneten Frameset dar.|  
|`_search`|Gibt den Inhalt im Suchbereich wieder.|  
|`_self`|Stellt den Inhalt in dem Frame dar, der den Fokus besitzt.|  
|`_top`|Stellt den Inhalt im gesamten Fenster ohne Frames dar.|  
  
> [!NOTE]
>  Sie können der Browserdokumentation entnehmen, ob der `_search`-Wert unterstützt wird.  Beispielsweise unterstützen Microsoft Internet Explorer 5.0 und höhere Versionen den `_search`-Zielwert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> -Eigenschaft zum Angeben eines neuen, nicht eingelegten Fensters verwendet wird, um die Ergebnisse der Informationen anzuzeigen, die an den Server zurückgesendet werden.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.net-und XHTML-Konformität</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Barrierefreiheit in Visual Studio 2010 und ASP.NET 4</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den eindeutigen programmgesteuerten Bezeichner ab, der dem <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement zugewiesen wurde.</summary>
        <value>Der eindeutige programmgesteuerte Bezeichner, der dem <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement zugewiesen ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> die-Eigenschaft, um den eindeutigen programmatischen Bezeichner, der dem <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement zugewiesen ist Diese Eigenschaft überschreibt die Basis Implementierung, um einen konstanten Wert zurückzugeben, wenn das Steuerelement <xref:System.Web.UI.INamingContainer>in einem von implementierten Objekt enthalten ist, das keine Seite ist, z. b. ein benutzerdefiniertes Server Steuerelement. Wenn der Benennungs Container eine Seite ist, wird der Wert <xref:System.Web.UI.HtmlControls.HtmlForm> der- <xref:System.Web.UI.Control.ID%2A> Eigenschaft des-Steuer Elements zurückgegeben.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> -Eigenschaft und <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> die-Eigenschaft geben immer denselben Wert zurück. Dies ist hilfreich, wenn <xref:System.Web.UI.HtmlControls.HtmlForm> das Steuerelement in einem Browser gerendert <xref:System.Web.UI.HtmlControls.HtmlForm> wird, <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> für <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> den die-Eigenschaft und die-Eigenschaft des Steuer Elements identisch sein müssen. Um diese Eigenschaften zu synchronisieren, gibt <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> die-Eigenschaft immer den Wert <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> der-Eigenschaft zurück.  
  
> [!NOTE]
>  Das `name` Attribut ist kein XHTML-kompatibles Attribut und wird standardmäßig nicht von ASP.net gerendert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> -Eigenschaft verwendet wird, um den eindeutigen <xref:System.Web.UI.HtmlControls.HtmlForm> Bezeichner für ein-Steuerelement abzurufen.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.net-und XHTML-Konformität</related>
      </Docs>
    </Member>
  </Members>
</Type>
