<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa7d404678d344df4ce13a2d4cbdce71d9424b9b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39946269" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht den programmgesteuerten Zugriff auf das HTML-Element <see langword="&lt;form&gt;" /> auf dem Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement ist ein Container für Serversteuerelemente auf Web Forms-Seite. Alle Serversteuerelemente, die an den Server zurückgesendet müssen zwischen dem öffnenden und schließenden Tags eines abgelegt werden ein <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement.  
  
> [!NOTE]
>  ASP.NET erlaubt nur eine einzige <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement auf Web Forms-Seite aktiv sein. Wenn es mehr als eine active <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement auf einer Web Forms-Seite, die common Language Runtime löst eine <xref:System.Web.HttpException?displayProperty=nameWithType> Ausnahme aus, wenn Sie auf die Seite "anfordern. Allerdings können Sie eine <xref:System.Web.UI.WebControls.MultiView> steuern, wo jeder <xref:System.Web.UI.WebControls.View> Objekt enthält ein <xref:System.Web.UI.HtmlControls.HtmlForm> zu steuern, da nur ein <xref:System.Web.UI.WebControls.View> zu jedem Zeitpunkt aktiv ist.  
  
 Sie können das Verhalten steuern die <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement durch Festlegen seiner Eigenschaften. Legen Sie zum Angeben der Codierungstyp für die Daten des Formulars die <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> Eigenschaft. Die Methode (`GET` oder `POST`), die ein Browser Formulardaten an den Server übermittelt werden soll, für die Verarbeitung durch Festlegen von angegeben wird verwendet die <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> Eigenschaft.  
  
> [!CAUTION]
>  In der Standardeinstellung ist die <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A>-Eigenschaft auf `POST` festgelegt. Sie können den Wert dieser Eigenschaft auf `GET`, dies aber möglicherweise unterbrechen Sie den integrierten Zustand und postback vom ASP.NET-Seitenframework bereitgestellten Dienste.  
  
 Sie können konfigurieren, Steuerelemente, implementieren die <xref:System.Web.UI.WebControls.IButtonControl> Schnittstelle, die an eine andere Seite gesendet. Dies wird als seitenübergreifendes Senden bezeichnet. Weitere Informationen finden Sie unter [Cross-Page Posting in ASP.NET Web Forms](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.HtmlControls.HtmlForm>, finden Sie unter den <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.HtmlControls.HtmlForm> Klasse, um ein einfaches Formular zu erstellen.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.HtmlControls.HtmlForm> Klasse.  
  
 In der folgende Tabelle zeigt die anfängliche Eigenschaftswert für eine Instanz von <xref:System.Web.UI.HtmlControls.HtmlForm>.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Das Zeichenfolgenliteral "Form".|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine neue Instanz der Erstellung der <xref:System.Web.UI.HtmlControls.HtmlForm> steuern, und platzieren Sie sie auf der Webseite.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Aktionsattribut des HTML-Formulars ab oder legt es fest.</summary>
        <value>Das Aktionsattribut des HTML-Formulars. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden die <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> Eigenschaft, wenn Sie der URL der ursprünglichen Anforderung umschreiben, aber die ursprüngliche URL für das Aktionsattribut des HTML-Formulars beibehalten möchten. Legen Sie die <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> -Eigenschaft auf den Wert der URL, die Sie beibehalten möchten.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Steuerelementbezeichner ab, der von [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement generiert wird.</summary>
        <value>Der Bezeichner des vom [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] für die <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu vermeiden Namenskonflikte, wenn mehrere Instanzen eines Steuerelements gerendert werden, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] generiert automatisch einen eindeutigen <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> Wert für jedes Steuerelement auf einer Seite. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType>-Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue <see cref="T:System.Web.UI.ControlCollection" />-Auflistung für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Web.UI.ControlCollection" />, die die untergeordneten Serversteuerelemente des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelements enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das untergeordnete Steuerelement des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelements ab, das den Postback auslöst, wenn die EINGABETASTE gedrückt wird, oder legt dieses fest.</summary>
        <value>Die <see cref="P:System.Web.UI.Control.ID" /> des Button-Steuerelements, das als Standardschaltfläche angezeigt werden soll, wenn <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> geladen wird. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> -Eigenschaft können Sie angeben, dass Benutzer durch Drücken der EINGABETASTE in ein Eingabesteuerelement in der Form (z. B. ein Textfeld), einen Postback verursachen können. Sie können angeben, als Standardschaltfläche jedes Steuerelement, das von abgeleitet ist die <xref:System.Web.UI.WebControls.IButtonControl> Schnittstelle, mit Ausnahme der <xref:System.Web.UI.WebControls.LinkButton> Steuerelement. Wenn das Steuerelement, das vom verwiesen wird die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Eigenschaft nicht von abgeleitet <xref:System.Web.UI.WebControls.IButtonControl>, <xref:System.InvalidOperationException> Ausnahme ausgelöst.  
  
 Wenn Sie bei der Verwendung von Masterseiten und Festlegen der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Eigenschaft von einer Inhaltsseite, verwenden die <xref:System.Web.UI.Control.UniqueID%2A> Eigenschaft der <xref:System.Web.UI.WebControls.IButtonControl> Schaltfläche. Weitere Informationen zu den Masterseiten, finden Sie unter [ASP.NET-Masterseiten](http://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Eigenschaft kann nicht dazu, dass einen Postback in den folgenden Szenarien:  
  
-   Drücken Sie EINGABETASTE, wenn Fokus außerhalb der Benutzereingabe-Steuerelemente im Formular. Die Standardaktion postback ist nicht garantiert, ausgelöst werden.  
  
-   EINGABETASTE drücken, wenn sich der Fokus in einem mehrzeiligen Textfeld befindet. In einem mehrzeiligen Textfeld ist das erwartete Verhalten, die in das Textfeld Drücken der EINGABETASTE eine neue Zeile erstellt werden. In einigen Browsern Drücken der EINGABETASTE einen Postback in einer mehrzeiligen Text Box-Triggern. Wenn Sie die EINGABETASTE, um eine neue Zeile stattdessen erstellen möchten, können Sie eine JavaScript-Funktion in diesem Fall auf das Eingabesteuerelement anfügen. Das Skript sollte erfassen die EINGABETASTE, und Beenden des Postbacks. Beispielsweise können Sie die <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> eigenschaftenauflistung Clientskript für das Hinzufügen der `onKeyPress` Ereignis.  
  
-   Angeben einer <xref:System.Web.UI.WebControls.LinkButton> Steuerelement als Standardschaltfläche. Nur <xref:System.Web.UI.WebControls.Button> und <xref:System.Web.UI.WebControls.ImageButton> Steuerelemente werden unterstützt.  
  
-   Ändern der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Eigenschaft programmgesteuert während eines asynchronen Postbacks. Asynchrone Postbacks können auf einer Seite aktiviert werden, indem Sie eine oder mehrere <xref:System.Web.UI.UpdatePanel> Steuerelemente auf der Seite. Weitere Informationen finden Sie unter [Übersicht über das UpdatePanel-Steuerelement](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) und [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 Im folgende Beispiel veranschaulicht die legen Sie die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Eigenschaft, um das standardmäßige Steuerelement festzulegen, die ein Postback verursacht.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Steuerelement, auf das als Standardschaltfläche verwiesen wird, ist nicht vom Typ <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Steuerelement im Formular ab, das als Steuerelement mit dem Eingabefokus angezeigt wird, wenn das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement geladen wird, oder legt dieses fest.</summary>
        <value>Die <see cref="P:System.Web.UI.Control.ClientID" /> des Steuerelements im Formular, das als Steuerelement mit dem Eingabefokus angezeigt wird, wenn das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement geladen wird. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> Eigenschaft auf das Steuerelement im Formular anzuzeigende als Steuerelement mit Fokus, wenn die <xref:System.Web.UI.HtmlControls.HtmlForm> -Steuerelement geladen wird. Steuerelemente, die ausgewählt werden können, werden mit einem visuellen Hinweis, der angibt, dass sie den Fokus besitzen angezeigt. Z. B. eine <xref:System.Web.UI.WebControls.TextBox> -Steuerelement mit Fokus mit der Einfügemarke angezeigt wird.  
  
 Das Steuerelement mit Fokus kann auch festgelegt werden mithilfe der <xref:System.Web.UI.Control.Focus%2A> oder <xref:System.Web.UI.Page.SetFocus%2A> Methoden. Diese Methoden haben Vorrang vor den <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> Eigenschaft. Wenn einer dieser Methoden aufgerufen werden, um das Steuerelement festzulegen zu konzentrieren, den Wert des der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> Eigenschaft wird ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Festlegen der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> Eigenschaft, um ein angegebenes Steuerelement in einem Formular als Steuerelement mit dem Eingabefokus angezeigt wird, wenn das Formular geladen wird. Wenn `Form1` rendert, beachten Sie, dass die Einfügemarke wird `TextBox1`, um anzugeben, `TextBox1` ist das Steuerelement den Fokus besitzt.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Codierungstyp ab, den ein Browser für das Senden der Formulardaten an den Server verwendet, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Codierungstyp enthält. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass der Standardinhaltstyp des Browsers verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> Eigenschaft, um anzugeben, geben Sie einen Browser die Codierung wird verwendet, um Daten an den Server zu senden.  
  
 Die folgende Tabelle zeigt die allgemeine Codierungstypen.  
  
|Codierungstyp|Beschreibung |  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Formulardaten werden als Name/Wert-Paare kodiert. Dies ist das Standardformat für die Codierung.|  
|Multipart/Form-data|Als Meldung mit einem separaten Teil für jedes Steuerelement auf der Seite werden die Formulardaten codiert.|  
|Text/plain|Formulardaten werden im nur-Text, ohne jedes Steuerelement oder das Formatieren von Zeichen codiert.|  
  
 Weitere Informationen zu Codierungstypen, finden Sie unter den [World Wide Web Consortium (W3C-Website](http://go.microsoft.com/fwlink/?linkid=37125).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> Eigenschaft, um anzugeben, geben Sie die Codierung im Browser verwendet, um Daten an den Server zu senden.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, wie ein Browser dem Server Formulardaten zur Verarbeitung übermittelt, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die angibt, wie ein Browser Formulardaten an den Server übermittelt. Der Standardwert ist <see langword="POST" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um anzugeben, wie der Browser Formulardaten zur Verarbeitung an den Server sendet. Die zwei allgemeinen Methoden, die von allen Browsern unterstützt werden `GET` und `POST`.  
  
> [!CAUTION]
>  Sie können überschreiben, den Standardwert dieser Eigenschaft und die Verwendung der `GET` Methode anstelle von `POST`. Allerdings da `GET` Anforderungen beschränkt sind in wie viele Daten enthalten können mithilfe der `GET` Methode kann in einigen Fällen dazu führen, dass die postback und bundesstaatsverwaltungen Funktionen durch das ASP.NET-Seitenframework fehlschlägt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> Eigenschaft, um anzugeben, dass Formulardaten an den Server zurückgesendet werden.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Bezeichners für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement ab.</summary>
        <value>Eine Zeichenfolge, die den Namen des Bezeichners für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> -Eigenschaft bestimmt den eindeutigen Bezeichnernamen für eine <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement. In dieser Implementierung Abrufen dieser Eigenschaft wird den Wert des der <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Eigenschaft. Jedoch ist die Eigenschaft keinen Wert zuweisen der Eigenschaft. Festlegen der Eigenschaft weist keinen Wert für diese Eigenschaft da die <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> Eigenschaft müssen den gleichen Wert wie die <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Eigenschaft.  
  
> [!NOTE]
>  Die `name` Attribut ist kein XHTML-kompatibles Attribut und wird nicht gerendert, von ASP.NET unabhängig von der `xhtmlConformance` festlegen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie benachrichtigt werden durch die <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> -Methode, Webserver-Steuerelemente müssen alle Initialisierungsschritte, die erforderlich sind, erstellen und Einrichten einer Instanz ausführen. In dieser Phase des Lebenszyklus des Serversteuerelements ist der Ansichtszustand des Steuerelements noch nicht aufgefüllt werden. Sie können nicht außerdem andere Steuerelemente zugreifen, wenn diese Methode aufgerufen wird, unabhängig davon, ob es sich um ein untergeordnetes oder übergeordnetes Element für dieses Steuerelement ist. Andere Steuerelemente sind nicht garantiert erstellt und ist für den Zugriff bereit.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.GridView.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> Methode dient hauptsächlich von Steuerelemententwicklern Erweitern der Funktionalität der <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> -Methode in einer abgeleiteten Klasse müssen Sie der Basisklasse aufrufen <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen. Darüber hinaus Aufruf der Basisklasse <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> Methode stellt sicher, dass die <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Steuerelement wie das Formular für die Webseite ordnungsgemäß festgelegt ist, und der Ansichtszustand der Seite beibehalten wird.</para>
        </block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis für das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> Methode wird aufgerufen, unmittelbar vor dem Rendering die <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement. Wenn die <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> Methode registriert den Verweis auf die Skriptdatei für die intelligente Navigation, damit diese gerendert wird.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> Eigenschaft in ASP.NET, Version 2.0 wurde verworfen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den gerenderten Inhalt empfängt.</param>
        <summary>Rendert das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement in das angegebene <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> -Methode rendert ein HTML- `<iframe>` Element Wenn die <xref:System.Web.UI.Page.SmartNavigation%2A> -Eigenschaftensatz auf `true`. Die <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Methode ruft die <xref:System.Web.UI.Control.Render%2A> Methode.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Methode dient hauptsächlich von Steuerelemententwicklern Erweitern der Funktionalität der <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement wird nicht ohne einen Verweis auf die <see cref="T:System.Web.UI.Page" />-Instanz gerendert.</exception>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> -Methode in einer abgeleiteten Klasse müssen Sie der Basisklasse aufrufen <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> Methode, damit die <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> untergeordneten Steuerelemente des Steuerelements werden ordnungsgemäß gerendert.</para>
        </block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den gerenderten Inhalt empfängt.</param>
        <summary>Rendert die Attribute des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelements in das angegebene <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> -Methode verwendet die <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> Methode zum Überprüfen der <xref:System.Web.UI.HtmlControls.HtmlForm> Attribute des Steuerelements, um sicherzustellen, dass sie in das öffnende Tag gerendert werden können eine `<form>` HTML-Element.  
  
 Darüber hinaus die <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> -Methode rendert die `method`, `action`, und `onsubmit` Attribute der <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement. Wenn die Steuerelement-ID festgelegt wird, der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Eigenschaft nicht implementiert die <xref:System.Web.UI.WebControls.IButtonControl> -Schnittstelle, eine <xref:System.InvalidOperationException> Ausnahme wird ausgelöst.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> Methode dient hauptsächlich von Steuerelemententwicklern Erweitern der Funktionalität der <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die in der <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />-Eigenschaft festgelegte Steuerelement-ID ist nicht vom Typ <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> -Methode in einer abgeleiteten Klasse müssen Sie der Basisklasse aufrufen <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> Methode, damit die <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Attribute des Steuerelements werden ordnungsgemäß gerendert.</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den gerenderten Inhalt empfängt.</param>
        <summary>Rendert die untergeordneten Steuerelemente des <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> Methode rendert das Clientskript, um sicherzustellen, dass es sich bei der Browserfokus auf das Steuerelement im angegebenen festgelegt ist die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> Eigenschaft.  
  
> [!NOTE]
>  Ein Steuerelement, das gemäß der <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> -Eigenschaft Vorrang vor ein Steuerelement, das gemäß der <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Die Webseite verfügt über mehr als ein serverseitiges <see langword="&lt;form&gt;" />-Tag.</exception>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> -Methode in einer abgeleiteten Klasse müssen Sie der Basisklasse aufrufen <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> Methode, damit die <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> untergeordneten Steuerelemente des Steuerelements werden ordnungsgemäß gerendert.</para>
        </block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Inhalt des Formularsteuerelements empfängt.</param>
        <summary>Rendert das <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement in das angegebene <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> -Methode in einer abgeleiteten Klasse müssen Sie der Basisklasse aufrufen <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> Methode, damit die <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> -Steuerelement ordnungsgemäß gerendert wird.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der angibt, ob auf dem Client deaktivierte Steuerelemente ihre Werte übermitteln müssen, oder legt diese fest. Damit können diese Steuerelemente ihren Wert nach dem Zurücksenden der Seite an den Server beibehalten.</summary>
        <value>
          <see langword="true" />, wenn auf dem Client deaktivierte Steuerelemente ihre Werte übermitteln müssen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> Eigenschaft, um anzugeben, ob Steuerelemente deaktiviert wird, auf dem Client ihre Werte übermitteln, wenn die Seite Daten zurückgibt. Dadurch wird der deaktivierte Steuerelemente ihre Werte beibehalten, nachdem die Seite zurück an den Server zurücksendet. Wenn die <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> -Eigenschaftensatz auf `false`, Steuerelemente im Formular, die unter Verwendung eines Clientskripts deaktiviert wurden werden nicht übermittelt werden an den Server das nächste Mal die Seite zurückgegeben Daten. Daher verloren, alle Werte, die von der aktiven Steuerelemente gespeichert werden. Damit können die deaktivierte Steuerelemente ihre Werte beibehalten, nachdem die Seite zurück an den Server zurücksendet, legen Sie die <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> Eigenschaft `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Festlegen der <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> Eigenschaft für ein Formular zum `true` , wodurch die Steuerelemente deaktiviert von Clientskripts, deren Werte beibehalten werden, nachdem die Seite zurück an den Server zurücksendet. In diesem Beispiel setzen Sie die <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> Eigenschaft `false` , und klicken Sie dann auf die **zurücksenden** , der Text im HTML-Textfeld verloren und wird nicht mehr das HTML-Kontrollkästchen ausgewählt ist.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Frame oder das Fenster ab, in dem die Ergebnisse der an den Server übermittelten Informationen angezeigt werden, oder legt diesen Frame oder das Fenster fest.</summary>
        <value>Das Browserfenster oder der Frame, in dem die Ergebnisse der an den Server gesendeten Informationen angezeigt werden. Der Standardwert ist eine leere Zeichenfolge (""), die das Fenster oder den Frame mit dem Fokus aktualisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Eigenschaft, die das Zielfenster oder den frame, die zeigt die Ergebnisse der Informationen, die gesendet wird, an den Server. Das Umleiten von Ergebnissen Informationen, die an den Server gesendet, ist eine komplexe Aufgabe. Mithilfe dieser Eigenschaft einfach wieder veröffentlichen, wird nicht empfohlen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Eigenschaft als rendert eine `target` Attribut. Die `target` -Attribut `form` Elemente ist in XHTML 1.1 nicht zulässig. Aus diesem Grund, wenn das gerenderte Markup muss den XHTML-Standards oder Barrierefreiheitsstandards muss, legen Sie keine der <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Eigenschaft. Weitere Informationen finden Sie unter [XHTML-Standards in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) und [Barrierefreiheit in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Wert muss mit einem Buchstaben aus dem Bereich von A bis Z (Groß-/Kleinschreibung), mit Ausnahme der folgenden speziellen Werte, die beginnen mit einem Unterstrich beginnen.  
  
|Zielwert|Beschreibung |  
|------------------|-----------------|  
|`_blank`|Stellt den Inhalt in einem neuen Fenster ohne Frames dar.|  
|`_parent`|Stellt den Inhalt im unmittelbar übergeordneten Frameset dar.|  
|`_search`|Gibt den Inhalt im Suchbereich wieder.|  
|`_self`|Stellt den Inhalt in dem Frame dar, der den Fokus besitzt.|  
|`_top`|Stellt den Inhalt im gesamten Fenster ohne Frames dar.|  
  
> [!NOTE]
>  Sie können der Browserdokumentation entnehmen, ob der `_search`-Wert unterstützt wird.  Beispielsweise unterstützen Microsoft Internet Explorer 5.0 und höhere Versionen den `_search`-Zielwert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Eigenschaft, um einem neuen Fenster ohne Frames zum Anzeigen der Ergebnisse der Informationen anzugeben, die zurück an den Server gesendet.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den eindeutigen programmgesteuerten Bezeichner ab, der dem <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement zugewiesen wurde.</summary>
        <value>Der eindeutige programmgesteuerte Bezeichner, der dem <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />-Steuerelement zugewiesen ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Eigenschaft, um den eindeutigen programmgesteuerten Bezeichner zugewiesen abzurufen der <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement. Diese Eigenschaft überschreibt die basisimplementierung bereit, einen konstanten Wert zurückgeben, wenn das Steuerelement in enthalten ist ein <xref:System.Web.UI.INamingContainer>-Objekt als eine Seite, z. B. ein benutzerdefiniertes Steuerelement implementiert. Der Namenscontainer ist eine Seite, die den Wert des der <xref:System.Web.UI.HtmlControls.HtmlForm> des Steuerelements <xref:System.Web.UI.Control.ID%2A> Eigenschaft zurückgegeben wird.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Eigenschaft und die <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> Eigenschaft immer den gleichen Wert zurück. Dies ist nützlich, wenn die <xref:System.Web.UI.HtmlControls.HtmlForm> -Steuerelements in einem Browser, die erforderlich sind die <xref:System.Web.UI.HtmlControls.HtmlForm> des Steuerelements <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> und <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> Eigenschaften identisch sein. Zu diesen Eigenschaften, die synchronisiert, die <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> Eigenschaft gibt immer den Wert von der <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Eigenschaft.  
  
> [!NOTE]
>  Die `name` Attribut ist kein XHTML-kompatibles Attribut und in der Standardeinstellung wird von ASP.NET nicht gerendert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> den eindeutige Bezeichner für die abzurufende Eigenschaft eine <xref:System.Web.UI.HtmlControls.HtmlForm> Steuerelement.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      </Docs>
    </Member>
  </Members>
</Type>