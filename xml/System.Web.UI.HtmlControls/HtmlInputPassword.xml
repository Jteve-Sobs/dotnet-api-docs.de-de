<Type Name="HtmlInputPassword" FullName="System.Web.UI.HtmlControls.HtmlInputPassword">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89c5470f72093570d345b61a22279e875632d983" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86661403" /></Metadata><TypeSignature Language="C#" Value="public class HtmlInputPassword : System.Web.UI.HtmlControls.HtmlInputText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputPassword extends System.Web.UI.HtmlControls.HtmlInputText implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputPassword&#xA;Inherits HtmlInputText" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputPassword : System::Web::UI::HtmlControls::HtmlInputText" />
  <TypeSignature Language="F#" Value="type HtmlInputPassword = class&#xA;    inherit HtmlInputText&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputText</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("ServerChange")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("ServerChange")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.SupportsEventValidation]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.SupportsEventValidation&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ValidationProperty("Value")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ValidationProperty("Value")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht den programmgesteuerten Zugriff auf das HTML-Element <see langword="&lt;input type= password&gt;" /> auf dem Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlInputPassword> -Klasse wird von der <xref:System.Web.UI.HtmlControls.HtmlInputText> -Klasse abgeleitet und zum Erstellen eines einzeiligen Textfelds verwendet, das es dem Benutzer ermöglicht, ein Kennwort einzugeben. Wenn Sie das-Steuerelement verwenden <xref:System.Web.UI.HtmlControls.HtmlInputPassword> , wird die- <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Eigenschaft bei jeder Übermittlung des Formulars an den Server gesendet. Die- <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Eigenschaft für das- <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Steuerelement wird im Ansichts Zustand nicht beibehalten.  
  
 Die- <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> Eigenschaft gibt die maximale Anzahl von Zeichen an, die im Textfeld eingegeben werden können. Mit der- <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> Eigenschaft können Sie die Breite des Textfelds angeben. Verwenden Sie die- <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Eigenschaft, um den Wert zu bestimmen, der vom Benutzer in das Textfeld eingegeben wurde. Das- <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Steuerelement stellt ein- <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> Ereignis bereit, das ausgelöst wird, wenn die- <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Eigenschaft Werte zwischen den Beiträgen zum Server ändert. Dies ermöglicht es Ihnen, einen Ereignishandler zu erstellen, der jedes Mal, wenn das Ereignis ausgelöst wird, einen benutzerdefinierten Satz von Anweisungen ausführt.  
  
> [!NOTE]
>  Das-Steuerelement stellt <xref:System.Web.UI.HtmlControls.HtmlInputPassword> keine integrierte Methode zum Zurücksenden an den Server bereit. Sie müssen ein weiteres Steuerelement auf der Webseite bereitstellen, das das Zurücksenden an den Server unterstützt, z <xref:System.Web.UI.HtmlControls.HtmlButton> . b. ein oder ein- <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> Steuerelement.  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.HtmlControls.HtmlInputPassword> finden Sie im- <xref:System.Web.UI.HtmlControls.HtmlInputPassword.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die `<input type=text>` `<input type=password>` HTML-Steuer `<input type=submit>` Elemente, und deklarativ auf einer Web Forms Seite verwendet werden.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/CS/htmlinputcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/VB/htmlinputvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die gleichen HTML-Steuerelemente während eines Aufrufes der-Methode Programm gesteuert hinzugefügt werden `Page_Load` .  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputText" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputPassword();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />-Klasse unter Verwendung von Standardwerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz des Steuer Elements unter Verwendung von Standardwerten zu erstellen und zu initialisieren <xref:System.Web.UI.HtmlControls.HtmlInputPassword> . Es erstellt ein `password` Textfeld-Steuerelement vom Typ.  
  
 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine Instanz von angezeigt <xref:System.Web.UI.HtmlControls.HtmlInputPassword> .  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Die Literalzeichenfolge "Password".|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie <xref:System.Web.UI.HtmlControls.HtmlInputText> <xref:System.Web.UI.HtmlControls.HtmlInputPassword> mithilfe von Standardkonstruktoren eine-,-und-Steuerelemente Programm Web Forms gesteuert hinzufügen, <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> um einen einfachen Anmeldebildschirm zu erstellen.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputPassword.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den gerenderten Inhalt empfängt.</param>
        <summary>Rendert die Attribute des <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />-Steuerelements in das angegebene <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes%2A> -Methode entfernt das `Value` -Attribut aus der Ansichts Zustands Auflistung, um zu verhindern, dass Sie gerendert wird. Anschließend wird die-Methode der Basisklasse aufgerufen <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
