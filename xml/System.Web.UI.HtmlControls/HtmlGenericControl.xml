<Type Name="HtmlGenericControl" FullName="System.Web.UI.HtmlControls.HtmlGenericControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ed47041d44e091250c03387cc79f9941f3251e6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86661663" /></Metadata><TypeSignature Language="C#" Value="public class HtmlGenericControl : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlGenericControl extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlGenericControl" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlGenericControl&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlGenericControl : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlGenericControl = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ConstructorNeedsTag(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ConstructorNeedsTag(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert die Methoden, Eigenschaften und Ereignisse für alle HTML-Serversteuerelemente, die von keiner bestimmten .NET Framework-Klasse dargestellt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Klasse, um ein HTML-Server Steuerelement darzustellen, das nicht direkt durch eine .NET Framework Klasse dargestellt wird, z `<span>` `<div>` . b.,, `<body>` oder `<font>` .  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.HtmlControls.HtmlGenericControl> finden Sie im- <xref:System.Web.UI.HtmlControls.HtmlGenericControl.%23ctor%2A> Konstruktor.  
  
> [!CAUTION]
>  Dieses Steuerelement kann zum Anzeigen von Benutzereingaben verwendet werden, die möglicherweise böswillige Client Skripts enthalten. Überprüfen Sie alle Informationen, die von einem Client für ausführbare Skripts, SQL-Anweisungen oder anderen Code gesendet werden, bevor Sie ihn in der Anwendung anzeigen. ASP.net bietet eine Überprüfungs Funktion für die Eingabe Anforderung zum Blockieren von Skripts und HTML in Benutzereingaben. Validierungsserver Steuerelemente werden ebenfalls bereitgestellt, um Benutzereingaben zu bewerten. Weitere Informationen finden Sie unter [Validation Server Control-Syntax](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133) und [Validieren von Benutzereingaben in ASP.net Web Pages](https://docs.microsoft.com/previous-versions/aspnet/7kh55542(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Klasse verwendet wird <xref:System.Web.UI.HtmlControls.HtmlGenericControl> , um das- `<body>` Element darzustellen.  
  
 [!code-aspx-csharp[Classic HtmlGenericControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlGenericControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlGenericControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlGenericControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlGenericControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlGenericControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlGenericControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" />-Klasse mit Standardwerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der- <xref:System.Web.UI.HtmlControls.HtmlGenericControl> Klasse mit den Standardwerten zu erstellen und zu initialisieren. Sie wird häufig verwendet, um ein serverseitiges Element dynamisch zu erstellen `<span>` .  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftswerte für eine Instanz von angezeigt <xref:System.Web.UI.HtmlControls.HtmlGenericControl> .  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|`TagName`|Die Literalzeichenfolge "Span".|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine neue Instanz der- <xref:System.Web.UI.HtmlControls.HtmlGenericControl> Klasse mit dem Parameter losen Konstruktor erstellt wird.  
  
 [!code-aspx-csharp[HtmlGenericControlDefaultConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlGenericControlDefaultConstructor/CS/htmlgenericcontrolconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlGenericControlDefaultConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlGenericControlDefaultConstructor/VB/htmlgenericcontrolconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlGenericControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlGenericControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlGenericControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlGenericControl : string -&gt; System.Web.UI.HtmlControls.HtmlGenericControl" Usage="new System.Web.UI.HtmlControls.HtmlGenericControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">Der Name des Elements, für das diese Instanz der Klasse erstellt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" />-Klasse mit dem angegebenen Tag.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der- <xref:System.Web.UI.HtmlControls.HtmlGenericControl> Klasse mithilfe des angegebenen Tags zu erstellen und zu initialisieren. Dies ermöglicht es Ihnen, jedes HTML-Server Steuerelement dynamisch zu erstellen, das nicht direkt durch eine .NET Framework Klasse dargestellt wird.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftswerte für eine Instanz von angezeigt <xref:System.Web.UI.HtmlControls.HtmlGenericControl> .  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|`TagName`|Der Wert des `tag`-Parameters.|  
  
> [!NOTE]
>  Wenn der- `tag` Parameter ist `null` , <xref:System.Web.UI.HtmlControls.HtmlGenericControl.TagName%2A> wird die-Eigenschaft auf festgelegt <xref:System.String.Empty?displayProperty=nameWithType> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine neue Instanz der- <xref:System.Web.UI.HtmlControls.HtmlGenericControl> Klasse mit dem überladenen Konstruktor erstellt wird.  
  
 [!code-aspx-csharp[HtmlGenericControlOverloadConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlGenericControlOverloadConstructor/CS/htmlgenericcontrolconstructoroverloadcs.aspx#1)]
 [!code-aspx-vb[HtmlGenericControlOverloadConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlGenericControlOverloadConstructor/VB/htmlgenericcontrolconstructoroverloadvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlGenericControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Public Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlGenericControl.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des durch das <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" />-Steuerelement dargestellten HTML-Elements ab oder legt diesen fest.</summary>
        <value>Der Tagname eines Elements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um den Elementnamen des HTML-Server Steuer Elements Programm gesteuert zu bestimmen. Die- <xref:System.Web.UI.HtmlControls.HtmlGenericControl.TagName%2A> Eigenschaft für ein serverseitiges `<span id="MySpan" runat= "server"/>` Element enthält z. b. den Wert "Span".  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlGenericControl.TagName%2A> -Eigenschaft verwendet wird, um einen Tagnamen Programm gesteuert von "Body" in "Font" und zurück zu ändern.  
  
 [!code-aspx-csharp[Classic HtmlGenericControl.TagName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlGenericControl.TagName Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlGenericControl.TagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlGenericControl.TagName Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
