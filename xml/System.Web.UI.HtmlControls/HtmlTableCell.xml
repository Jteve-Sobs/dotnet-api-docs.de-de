<Type Name="HtmlTableCell" FullName="System.Web.UI.HtmlControls.HtmlTableCell">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eac28e4d799ef7d80fcd106c510f9f69ca015e39" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68393306" /></Metadata><TypeSignature Language="C#" Value="public class HtmlTableCell : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTableCell extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTableCell&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCell : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlTableCell = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ConstructorNeedsTag(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die HTML-Elemente <see langword="&lt;td&gt;" /> und <see langword="&lt;th&gt;" /> in einem <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />-Objekt dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `<td>` -Element stellt eine Datenzelle in einer Tabelle dar, `<th>` während das-Element eine Tabellen Überschriften Zelle darstellt. Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell> die-Klasse, um die `<td>` HTML `<th>` -Elemente und in <xref:System.Web.UI.HtmlControls.HtmlTableRow> einem-Objekt Programm gesteuert zu steuern.  
  
 Mit <xref:System.Web.UI.HtmlControls.HtmlTableCell> der-Klasse können Sie die Darstellung einer Zelle in einer Tabelle anpassen, indem Sie die Hintergrundfarbe, die Rahmenfarbe, die Höhe und die Breite angeben. Diese Attribute <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>werden mithilfe der Eigenschaften, <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>, <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A>und <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> festgelegt.  
  
 Sie können steuern, wie der Inhalt einer Zelle angezeigt wird, indem Sie die vertikale und horizontale Ausrichtung des Inhalts angeben. Sie können auch angeben, ob der Inhalt in der nächsten Zeile automatisch fortgesetzt wird, wenn das Ende der Zelle erreicht ist. Die horizontale Ausrichtung wird durch die <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> -Eigenschaft gesteuert, während die <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> -Eigenschaft die vertikale Ausrichtung steuert. Die <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A> -Eigenschaft gibt an, ob die Text Umverpackung deaktiviert ist.  
  
 Mithilfe der <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> -Eigenschaft oder <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> der-Eigenschaft können Sie die Anzahl der Spalten oder Zeilen steuern, die eine Zelle einnimmt. Beispielsweise können Sie eine Zelle erstellen, die zwei Spalten in einer Tabelle einnimmt, indem Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> die- `2`Eigenschaft auf festlegen.  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.HtmlControls.HtmlTableCell>finden Sie im <xref:System.Web.UI.HtmlControls.HtmlTableCell.%23ctor%2A> -Konstruktor.  
  
> [!CAUTION]
>  Dieses Steuerelement kann zum Anzeigen von Benutzereingaben verwendet werden, die möglicherweise böswillige Client Skripts enthalten. Überprüfen Sie alle Informationen, die von einem Client für ausführbare Skripts, SQL-Anweisungen oder anderen Code gesendet werden, bevor Sie ihn in der Anwendung anzeigen. ASP.net bietet eine Überprüfungs Funktion für die Eingabe Anforderung zum Blockieren von Skripts und HTML in Benutzereingaben. Validierungsserver Steuerelemente werden ebenfalls bereitgestellt, um Benutzereingaben zu bewerten. Weitere Informationen finden Sie unter [Validation Server Control-Syntax](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie verwendet <xref:System.Web.UI.HtmlControls.HtmlTableCell> wird, um den Inhalt einer Zelle in einer Tabelle zu ändern. Beachten Sie, <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> dass die- <xref:System.Web.UI.HtmlControls.HtmlTable> Auflistung eines-Steuer Elements eine Auflistung der<xref:System.Web.UI.HtmlControls.HtmlTableRow> Zeilen (-Objekte) in der-Tabelle enthält. Die <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> Auflistung<xref:System.Web.UI.HtmlControls.HtmlTableCell> eines Objekts ist eine Auflistung der Zellen (-Objekte) in einer Zeile. <xref:System.Web.UI.HtmlControls.HtmlTableRow>  
  
 [!code-aspx-csharp[HtmlTblCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCell/CS/htmltablecellcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCell/VB/htmltablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTableCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse mit Standardwerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.HtmlControls.HtmlTableCell> -Klasse zu erstellen und zu initialisieren. Dieser Konstruktor wird verwendet, um ein <xref:System.Web.UI.HtmlControls.HtmlTableCell> Objekt zu erstellen, `<td>` das das-Element für eine Tabellendaten Zelle darstellt.  
  
 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine <xref:System.Web.UI.HtmlControls.HtmlTableCell>Instanz von angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Die Literalzeichenfolge "td".|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine Instanz eines <xref:System.Web.UI.HtmlControls.HtmlTable> -Steuer <xref:System.Web.UI.HtmlControls.HtmlTableCell> Elements mit Steuerelementen erstellen und die Tabelle auf der Webseite platzieren. Beachten Sie, <xref:System.Web.UI.HtmlControls.HtmlTableCell> wie der Parameter lose Konstruktor des Steuer Elements verwendet wird, `<td>` um ein-Element zu erstellen, während der überladene Konstruktor, der einen Zeichen folgen Parameter annimmt, mit der `<th>` Literalzeichenfolge "th" zum Erstellen eines-Elements verwendet wird  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableRow.#ctor" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTable.#ctor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTableCell(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlTableCell : string -&gt; System.Web.UI.HtmlControls.HtmlTableCell" Usage="new System.Web.UI.HtmlControls.HtmlTableCell tagName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">Der Elementname des Tags.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse mit dem angegebenen Tagnamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.HtmlControls.HtmlTableCell> -Klasse zu erstellen und zu initialisieren. Sie ermöglicht es Ihnen, ein <xref:System.Web.UI.HtmlControls.HtmlTableCell> Objekt zu erstellen, das eine Zelle <xref:System.Web.UI.HtmlControls.HtmlTable> in einem-Steuerelement darstellt. Sie wird häufig verwendet, um ein <xref:System.Web.UI.HtmlControls.HtmlTableCell> Objekt zu erstellen, `<th>` das ein-Element für eine Tabellen Überschriften Zelle darstellt. Obwohl Sie diesen Konstruktor verwenden können, um ein `<td>` -Element für eine Tabellendaten Zelle zu erstellen, verwenden Sie in der Regel den Parameter losen Konstruktor.  
  
> [!NOTE]
>  Obwohl Sie mit diesem Konstruktor das zu erstellendes Cell-Element angeben `<th>` können, ist das-Element das einzige unterstützte Cell-Element. Zur zukünftigen Kompatibilität können Sie mit diesem Konstruktor andere HTML-Zellen Elemente erstellen, die verfügbar werden könnten.  
  
 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine <xref:System.Web.UI.HtmlControls.HtmlTableCell>Instanz von angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Der Wert des `tagName`-Parameters.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine Instanz eines <xref:System.Web.UI.HtmlControls.HtmlTable> -Steuer <xref:System.Web.UI.HtmlControls.HtmlTableCell> Elements mit Steuerelementen erstellen und die Tabelle auf der Webseite platzieren. Beachten Sie, <xref:System.Web.UI.HtmlControls.HtmlTableCell> wie der Parameter lose Konstruktor des Steuer Elements verwendet wird, `<td>` um ein-Element zu erstellen, während der überladene Konstruktor, der einen Zeichen folgen Parameter annimmt, mit `<th>` dem literalen "th" zum Erstellen eines-Elements verwendet wird.  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberSignature Language="VB.NET" Value="Public Property Align As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Align { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Align : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die horizontale Ausrichtung des Inhalts in der Zelle ab, die durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellt wird, oder legt diese fest.</summary>
        <value>Die horizontale Ausrichtung des Inhalts in der Zelle, die durch eine Instanz von <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> dargestellt wird. Der Standardwert ist <see cref="F:System.String.Empty" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> die-Eigenschaft, um die horizontale Ausrichtung des Inhalts in einer Zelle anzugeben, die durch eine <xref:System.Web.UI.HtmlControls.HtmlTableCell> Instanz der-Klasse dargestellt wird.  
  
> [!NOTE]
>  Das Festlegen dieser Eigenschaft wirkt sich nur auf die Zelle aus, die <xref:System.Web.UI.HtmlControls.HtmlTableCell> durch eine Instanz der-Klasse dargestellt wird. Legen Sie die <xref:System.Web.UI.HtmlControls.HtmlTableRow.Align%2A> -Eigenschaft der Zeile fest, die durch eine Instanz <xref:System.Web.UI.HtmlControls.HtmlTableRow> der-Klasse dargestellt wird, um die gleiche Ausrichtung auf die Zellen einer gesamten Zeile in der Tabelle anzuwenden.  
  
 In der folgenden Tabelle sind die Werte aufgelistet, die für diese Eigenschaft verwendet werden können.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|`Left`|Richtet den Inhalt einer Zelle an den linken Rand der Zelle aus.|  
|`Center`|Richtet den Inhalt einer Zelle in der Mitte der Zelle aus.|  
|`Right`|Richtet den Inhalt einer Zelle am rechten Rand der Zelle aus.|  
  
> [!NOTE]
>  Sie können auch und `Justify` `Char` als Werte für diese Eigenschaft verwenden. Allerdings unterstützen nicht alle Browser diese Funktionen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> -Eigenschaft verwendet wird, um die Ausrichtung des Inhalts der Zellen in einem <xref:System.Web.UI.HtmlControls.HtmlTable> -Steuerelement Programm gesteuert zu steuern.  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="BgColor">
      <MemberSignature Language="C#" Value="public string BgColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BgColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BgColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BgColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BgColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe der Zelle ab, die durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellt wird, oder legt diese fest.</summary>
        <value>Die Hintergrundfarbe der Zelle, die durch eine Instanz von <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> dargestellt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> die-Eigenschaft, um die Hintergrundfarbe der Zelle anzugeben, die durch eine <xref:System.Web.UI.HtmlControls.HtmlTableCell> Instanz der-Klasse dargestellt wird. Sie können eine Farbe entweder anhand des Namens oder mithilfe eines hexadezimalen Werts, dem das Zeichen (#) vorangestellt ist, in der Form #RRGGBB angeben. RR, GG und BB stellen hexadezimale Werte zwischen 0 und 255 dar, die die roten, grünen und blauen Komponenten einer Farbe angeben. Der Wert #0000FF z. b. die Farbe blau darstellt. Er gibt den minimalen Wert (00) für die roten und grünen Komponenten an, während er den maximalen Wert (FF) für die blaue Komponente angibt.  
  
 In der folgenden Tabelle werden die 16 vordefinierten HTML-Farb Namen und die entsprechenden hexadezimalen Werte angezeigt, <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> die für die-Eigenschaft verwendet werden können. Weitere Informationen zu HTML-Farben finden Sie auf der [World Wide Web Consortium-Website (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).  
  
|Farbname|Hexadezimalwert|  
|----------------|-----------------------|  
|CE|#00FFFF|  
|Schwarz|#000000|  
|Blau|#0000FF|  
|Fuchsia|#FF00FF|  
|Grau|#808080|  
|Grün|#008000|  
|Stein|#00FF00|  
|Kastanienbraun|#800000|  
|Marine|#000080|  
|V|#808000|  
|Viol|#800080|  
|Rot|#FF0000|  
|L|#C0C0C0|  
|Blaugrün|#008080|  
|Weiß|#FFFFFF|  
|Gelb|#FFFF00|  
  
 Die verfügbaren Farben für die Verwendung <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> mit der-Eigenschaft können von <xref:System.Drawing.KnownColor> der-Enumeration bestimmt werden.  
  
 Bei Farbnamen wird Groß-/Kleinschreibung nicht beachtet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> -Eigenschaft verwendet wird, um die Hintergrundfarbe der Zellen in einem <xref:System.Web.UI.HtmlControls.HtmlTable> -Steuerelement Programm gesteuert zu steuern.  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public string BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BorderColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenfarbe der Zelle ab, die durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellt wird, oder legt diese fest.</summary>
        <value>Die Hintergrundfarbe der Zelle, die durch eine Instanz von <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> dargestellt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> die-Eigenschaft, um die Rahmenfarbe der Zelle anzugeben, die durch eine <xref:System.Web.UI.HtmlControls.HtmlTableCell> Instanz der-Klasse dargestellt wird. Sie können eine Farbe entweder anhand des Namens oder mithilfe eines hexadezimalen Werts, dem das Zeichen (#) vorangestellt ist, in der Form #RRGGBB angeben. RR, GG und BB stellen hexadezimale Werte zwischen 0 und 255 dar, die die roten, grünen und blauen Komponenten einer Farbe angeben. Der Wert #0000FF z. b. die Farbe blau darstellt. Er gibt den minimalen Wert (00) für die roten und grünen Komponenten an, während er den maximalen Wert (FF) für die blaue Komponente angibt.  
  
 In der folgenden Tabelle werden die 16 vordefinierten HTML-Farb Namen und die entsprechenden hexadezimalen Werte angezeigt, <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> die für die-Eigenschaft verwendet werden können. Weitere Informationen zu HTML-Farben finden Sie auf der [World Wide Web Consortium-Website (W3C)](https://go.microsoft.com/fwlink/?linkid=37125) .  
  
|Farbname|Hexadezimalwert|  
|----------------|-----------------------|  
|CE|#00FFFF|  
|Schwarz|#000000|  
|Blau|#0000FF|  
|Fuchsia|#FF00FF|  
|Grau|#808080|  
|Grün|#008000|  
|Stein|#00FF00|  
|Kastanienbraun|#800000|  
|Marine|#000080|  
|V|#808000|  
|Viol|#800080|  
|Rot|#FF0000|  
|L|#C0C0C0|  
|Blaugrün|#008080|  
|Weiß|#FFFFFF|  
|Gelb|#FFFF00|  
  
 Die verfügbaren Farben für die Verwendung <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> mit der-Eigenschaft können von <xref:System.Drawing.KnownColor> der-Enumeration bestimmt werden.  
  
 Bei Farbnamen wird Groß-/Kleinschreibung nicht beachtet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> -Eigenschaft verwendet wird, um die Rahmenfarbe der Zellen in einem <xref:System.Web.UI.HtmlControls.HtmlTable> -Steuerelement Programm gesteuert zu steuern.  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="ColSpan">
      <MemberSignature Language="C#" Value="public int ColSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property ColSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColSpan : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Spalten ab, die eine Zelle belegt, die durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellt wird, oder legt diese fest.</summary>
        <value>Die Anzahl der Spalten, die die Zelle belegt, die durch eine Instanz von <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> dargestellt wird. Der Standardwert ist <see langword="-1" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie in einer Zelle, die durch eine <xref:System.Web.UI.HtmlControls.HtmlTableCell> Instanz der-Klasse <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> dargestellt wird, die-Eigenschaft, um die Anzahl der Spalten anzugeben, die die Zelle einnimmt. Auf diese Weise können Sie eine Zelle in der Tabelle erstellen, die mehr als eine Spalte einnimmt. Angenommen, Sie verfügen über eine Tabelle, die zwei Spalten und zwei Zeilen enthält. Sie können eine Zelle für die Tabellen Überschrift erstellen, die beide Spalten umfasst. Legen Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> die-Eigenschaft der linken Zelle in der ersten Zeile auf `2` fest, um anzugeben, dass diese Zelle zwei Spalten in der Tabelle annimmt.  
  
> [!CAUTION]
>  Wenn Sie Spalten umspannen, stellen Sie sicher, dass Sie für jede Spalte, die Sie spannen, eine weniger Zelle in der Zeile definieren. Wenn Sie z. b. zwei Spalten umfassen, definieren Sie in der aktuellen Zeile eine weniger Zelle. Andernfalls ist diese Zeile länger als die Anzahl der Spalten in der Tabelle, und die Tabelle wird nicht erwartungsgemäß angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> -Eigenschaft verwendet wird, um anzugeben, dass die Zelle in <xref:System.Web.UI.HtmlControls.HtmlTable> der ersten Zeile des-Steuer Elements zwei Spalten annimmt.  
  
 [!code-aspx-csharp[HtmlTblCellColSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellColSpan/CS/htmltablecellcolspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellColSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellColSpan/VB/htmltablecellcolspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public string Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Height { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Height : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Höhe der durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellten Zelle in Pixel ab oder legt diese fest.</summary>
        <value>Die Höhe der durch eine Instanz von <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> dargestellten Zelle in Pixel. Der Standardwert ist <see cref="F:System.String.Empty" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A> die-Eigenschaft, um die Höhe (in Pixel) der Zelle anzugeben, die durch eine <xref:System.Web.UI.HtmlControls.HtmlTableCell> Instanz der-Klasse dargestellt wird. Wenn Sie die Höhe einer Zelle angeben, wird diese Höhe von allen Zellen in derselben Zeile automatisch gemeinsam genutzt.  
  
> [!NOTE]
>  Wenn Sie eine Höhe angeben, die kleiner ist als zum Anzeigen des Inhalts der Zelle erforderlich ist, wird diese Eigenschaft ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A> -Eigenschaft verwendet wird, um die Höhe der Zellen <xref:System.Web.UI.HtmlControls.HtmlTable> im-Steuerelement Programm gesteuert zu steuern.  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="public bool NoWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoWrap : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.MinimizableAttributeTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in einer Zelle, die durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellt wird, beim Erreichen des Zellenendes automatisch auf der nächsten Zeile fortgesetzt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Text in der Zelle nicht automatisch umbrochen wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A> die-Eigenschaft, um anzugeben oder zu bestimmen, ob der Text in einer Zelle, <xref:System.Web.UI.HtmlControls.HtmlTableCell> die durch eine Instanz der-Klasse dargestellt wird, automatisch in der nächsten Zeile fortgesetzt wird, wenn das Ende der Zelle erreicht wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A> -Eigenschaft verwendet wird, um Programm gesteuert zu steuern, ob der Text <xref:System.Web.UI.HtmlControls.HtmlTable> in die Zellen eines-Steuer Elements umbrochen wird.  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlTableCell.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der den gerenderten Inhalt empfängt.</param>
        <summary>Rendert das Endtag des <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A> -Methode stellt zusätzliche Formatierungen nach dem Aufrufen der <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A> -Methode der Basisklasse bereit. Durch die zusätzliche Formatierung wird <xref:System.Web.UI.HtmlControls.HtmlTableCell> der gerenderte HTML-Code des Steuer Elements leichter lesbar, indem eine Zeilen Rückgabe nach dem Endtag hinzugefügt wird.  
  
 Die <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, die <xref:System.Web.UI.HtmlControls.HtmlTableCell> die Funktionalität des Steuer Elements erweitern.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property RowSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowSpan : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Zeilen ab, die eine Zelle belegt, die durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellt wird, oder legt diese fest.</summary>
        <value>Die Anzahl der Zeilen, die eine Zelle belegt, die durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellt wird. Der Standardwert ist <see langword="-1" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie in einer Zelle, die durch eine <xref:System.Web.UI.HtmlControls.HtmlTableCell> Instanz der-Klasse <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> dargestellt wird, die-Eigenschaft, um die Anzahl der Zeilen anzugeben, die die Zelle einnimmt. Auf diese Weise können Sie eine Zelle in der Tabelle erstellen, die mehr als eine Zeile einnimmt. Angenommen, Sie verfügen über eine Tabelle, die zwei Spalten und zwei Zeilen enthält. Sie können eine Spalte erstellen, die beide Zeilen überlappt. Legen Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> die-Eigenschaft der linken Zelle in der ersten Spalte auf `2` fest, um anzugeben, dass diese Zelle zwei Zeilen in der Tabelle annimmt.  
  
> [!CAUTION]
>  Stellen Sie beim umspannen von Zeilen sicher, dass Sie in der Spalte für jede Zeile, die Sie spannen, eine weniger Zelle definieren. Wenn Sie z. b. zwei Zeilen umfassen, definieren Sie in dieser Spalte eine weniger Zelle. Andernfalls ist diese Spalte länger als die Anzahl der Zeilen in der Tabelle, und die Tabelle wird nicht erwartungsgemäß angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> -Eigenschaft verwendet wird, um anzugeben, dass die Zelle in <xref:System.Web.UI.HtmlControls.HtmlTable> der ersten Spalte des-Steuer Elements zwei Zeilen umfasst.  
  
 [!code-aspx-csharp[HtmlTblCellRowSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellRowSpan/CS/htmltablecellrowspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellRowSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellRowSpan/VB/htmltablecellrowspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="VAlign">
      <MemberSignature Language="C#" Value="public string VAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property VAlign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VAlign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VAlign : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vertikale Ausrichtung des Inhalts einer Zelle ab, die durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellt wird, oder legt diese fest.</summary>
        <value>Die vertikale Ausrichtung des Inhalts einer Zelle, die durch eine Instanz von <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> dargestellt wird. Der Standardwert ist <see cref="F:System.String.Empty" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> die-Eigenschaft, um die vertikale Ausrichtung des Inhalts in einer Zelle anzugeben, die durch eine <xref:System.Web.UI.HtmlControls.HtmlTableCell> Instanz der-Klasse dargestellt wird.  
  
> [!NOTE]
>  Das Festlegen dieser Eigenschaft wirkt sich nur auf die Zelle aus, die <xref:System.Web.UI.HtmlControls.HtmlTableCell> durch eine Instanz der-Klasse dargestellt wird. Legen Sie die <xref:System.Web.UI.HtmlControls.HtmlTableRow.VAlign%2A> -Eigenschaft der Zeile fest, die durch eine Instanz <xref:System.Web.UI.HtmlControls.HtmlTableRow> der-Klasse dargestellt wird, um die gleiche vertikale Ausrichtung auf die Zellen einer gesamten Zeile in der Tabelle anzuwenden.  
  
 In der folgenden Tabelle sind die Werte aufgelistet, die für diese Eigenschaft verwendet werden können.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|`Top`|Richtet den Inhalt einer Zelle am oberen Rand der Zelle aus.|  
|`Middle`|Richtet den Inhalt einer Zelle in der Mitte der Zelle aus.|  
|`Bottom`|Richtet den Inhalt einer Zelle mit dem unteren Rand der Zelle aus.|  
  
> [!NOTE]
>  Sie können auch als `BaseLine` Wert für diese Eigenschaft verwenden. Diese Funktion wird jedoch nicht von allen Browsern unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> -Eigenschaft verwendet wird, um die vertikale Ausrichtung des Inhalts der Zellen in einem <xref:System.Web.UI.HtmlControls.HtmlTable> -Steuerelement Programm gesteuert zu steuern.  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public string Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Width { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Width : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite der durch eine Instanz der <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />-Klasse dargestellten Zelle in Pixel ab oder legt diese fest.</summary>
        <value>Die Breite der durch eine Instanz von <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> dargestellten Zelle in Pixel. Der Standardwert ist <see cref="F:System.String.Empty" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> die-Eigenschaft, um die Breite (in Pixel) der Zelle anzugeben, die durch eine <xref:System.Web.UI.HtmlControls.HtmlTableCell> Instanz der-Klasse dargestellt wird. Wenn Sie die Breite für eine Zelle angeben, wird diese Breite automatisch von allen Zellen in derselben Spalte gemeinsam genutzt.  
  
> [!NOTE]
>  Wenn Sie eine Breite angeben, die kleiner ist als zum Anzeigen des Inhalts der Zelle erforderlich ist, wird diese Eigenschaft ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> -Eigenschaft verwendet wird, um die Breite der Zellen <xref:System.Web.UI.HtmlControls.HtmlTable> im-Steuerelement Programm gesteuert zu steuern.  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      </Docs>
    </Member>
  </Members>
</Type>